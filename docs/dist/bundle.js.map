{"version":3,"file":"bundle.js","sources":["../../node_modules/splaytree/index.js","../../dist/polygon-clipping.esm.js","../../node_modules/martinez-polygon-clipping/node_modules/splaytree/index.js","../../node_modules/martinez-polygon-clipping/src/edge_type.js","../../node_modules/martinez-polygon-clipping/src/operation.js","../../node_modules/martinez-polygon-clipping/src/compute_fields.js","../../node_modules/martinez-polygon-clipping/src/sweep_event.js","../../node_modules/martinez-polygon-clipping/src/equals.js","../../node_modules/martinez-polygon-clipping/src/signed_area.js","../../node_modules/martinez-polygon-clipping/src/compare_events.js","../../node_modules/martinez-polygon-clipping/src/divide_segment.js","../../node_modules/martinez-polygon-clipping/src/segment_intersection.js","../../node_modules/martinez-polygon-clipping/src/possible_intersection.js","../../node_modules/martinez-polygon-clipping/src/compare_segments.js","../../node_modules/martinez-polygon-clipping/src/connect_edges.js","../../node_modules/tinyqueue/index.js","../../node_modules/martinez-polygon-clipping/src/fill_queue.js","../../node_modules/martinez-polygon-clipping/src/index.js","../../node_modules/martinez-polygon-clipping/src/subdivide_segments.js","../../node_modules/turf-jsts/jsts.mjs","../../node_modules/@turf/union/main.es.js","../../node_modules/@turf/helpers/main.es.js","../../node_modules/@turf/meta/main.es.js","../../node_modules/@turf/truncate/main.es.js","../../node_modules/@turf/invariant/main.es.js","../../node_modules/@turf/clean-coords/main.es.js","../../node_modules/@turf/intersect/main.es.js","../../node_modules/@turf/area/main.es.js","../../node_modules/@turf/difference/main.es.js","../src/main.js"],"sourcesContent":["/* follows \"An implementation of top-down splaying\"\n * by D. Sleator <sleator@cs.cmu.edu> March 1992\n */\n\n/**\n * @typedef {*} Key\n */\n\n\n/**\n * @typedef {*} Value\n */\n\n\n/**\n * @typedef {function(node:Node):void} Visitor\n */\n\n\n/**\n * @typedef {function(a:Key, b:Key):number} Comparator\n */\n\n\n/**\n * @param {function(node:Node):string} NodePrinter\n */\n\n\n/**\n * @typedef {Object}  Node\n * @property {Key}    Key\n * @property {Value=} data\n * @property {Node}   left\n * @property {Node}   right\n */\n\nclass Node {\n\n  constructor (key, data) {\n    this.key    = key;\n    this.data   = data;\n    this.left   = null;\n    this.right  = null;\n  }\n}\n\nfunction DEFAULT_COMPARE (a, b) { return a > b ? 1 : a < b ? -1 : 0; }\n\n\n/**\n * Simple top down splay, not requiring i to be in the tree t.\n * @param {Key} i\n * @param {Node?} t\n * @param {Comparator} comparator\n */\nfunction splay (i, t, comparator) {\n  if (t === null) return t;\n  let l, r, y;\n  const N = new Node();\n  l = r = N;\n\n  while (true) {\n    const cmp = comparator(i, t.key);\n    //if (i < t.key) {\n    if (cmp < 0) {\n      if (t.left === null) break;\n      //if (i < t.left.key) {\n      if (comparator(i, t.left.key) < 0) {\n        y = t.left;                           /* rotate right */\n        t.left = y.right;\n        y.right = t;\n        t = y;\n        if (t.left === null) break;\n      }\n      r.left = t;                               /* link right */\n      r = t;\n      t = t.left;\n    //} else if (i > t.key) {\n    } else if (cmp > 0) {\n      if (t.right === null) break;\n      //if (i > t.right.key) {\n      if (comparator(i, t.right.key) > 0) {\n        y = t.right;                          /* rotate left */\n        t.right = y.left;\n        y.left = t;\n        t = y;\n        if (t.right === null) break;\n      }\n      l.right = t;                              /* link left */\n      l = t;\n      t = t.right;\n    } else {\n      break;\n    }\n  }\n  /* assemble */\n  l.right = t.left;\n  r.left = t.right;\n  t.left = N.right;\n  t.right = N.left;\n  return t;\n}\n\n\n/**\n * @param  {Key}        i\n * @param  {Value}      data\n * @param  {Comparator} comparator\n * @param  {Tree}       tree\n * @return {Node}      root\n */\nfunction insert (i, data, t, comparator, tree) {\n  const node = new Node(i, data);\n\n  tree._size++;\n\n  if (t === null) {\n    node.left = node.right = null;\n    return node;\n  }\n\n  t = splay(i, t, comparator);\n  const cmp = comparator(i, t.key);\n  if (cmp < 0) {\n    node.left = t.left;\n    node.right = t;\n    t.left = null;\n  } else if (cmp >= 0) {\n    node.right = t.right;\n    node.left = t;\n    t.right = null;\n  }\n  return node;\n}\n\n\n/**\n * Insert i into the tree t, unless it's already there.\n * @param  {Key}        i\n * @param  {Value}      data\n * @param  {Comparator} comparator\n * @param  {Tree}       tree\n * @return {Node}       root\n */\nfunction add (i, data, t, comparator, tree) {\n  const node = new Node(i, data);\n\n  if (t === null) {\n    node.left = node.right = null;\n    tree._size++;\n    return node;\n  }\n\n  t = splay(i, t, comparator);\n  const cmp = comparator(i, t.key);\n  if (cmp === 0) return t;\n  else {\n    if (cmp < 0) {\n      node.left = t.left;\n      node.right = t;\n      t.left = null;\n    } else if (cmp > 0) {\n      node.right = t.right;\n      node.left = t;\n      t.right = null;\n    }\n    tree._size++;\n    return node;\n  }\n}\n\n\n/**\n * Deletes i from the tree if it's there\n * @param {Key}        i\n * @param {Tree}       tree\n * @param {Comparator} comparator\n * @param {Tree}       tree\n * @return {Node}      new root\n */\nfunction remove (i, t, comparator, tree) {\n  let x;\n  if (t === null) return null;\n  t = splay(i, t, comparator);\n  var cmp = comparator(i, t.key);\n  if (cmp === 0) {               /* found it */\n    if (t.left === null) {\n      x = t.right;\n    } else {\n      x = splay(i, t.left, comparator);\n      x.right = t.right;\n    }\n    tree._size--;\n    return x;\n  }\n  return t;                         /* It wasn't there */\n}\n\n\nfunction split (key, v, comparator) {\n  let left, right;\n  if (v === null) {\n    left = right = null;\n  } else {\n    v = splay(key, v, comparator);\n\n    const cmp = comparator(v.key, key);\n    if (cmp === 0) {\n      left  = v.left;\n      right = v.right;\n    } else if (cmp < 0) {\n      right   = v.right;\n      v.right = null;\n      left    = v;\n    } else {\n      left   = v.left;\n      v.left = null;\n      right  = v;\n    }\n  }\n  return { left, right };\n}\n\n\nfunction merge (left, right, comparator) {\n  if (right === null) return left;\n  if (left  === null) return right;\n\n  right = splay(left.key, right, comparator);\n  right.left = left;\n  return right;\n}\n\n\n/**\n * Prints level of the tree\n * @param  {Node}                        root\n * @param  {String}                      prefix\n * @param  {Boolean}                     isTail\n * @param  {Array<string>}               out\n * @param  {Function(node:Node):String}  printNode\n */\nfunction printRow (root, prefix, isTail, out, printNode) {\n  if (root) {\n    out(`${ prefix }${ isTail ? '└── ' : '├── ' }${ printNode(root) }\\n`);\n    const indent = prefix + (isTail ? '    ' : '│   ');\n    if (root.left)  printRow(root.left,  indent, false, out, printNode);\n    if (root.right) printRow(root.right, indent, true,  out, printNode);\n  }\n}\n\n\nexport default class Tree {\n\n  constructor (comparator = DEFAULT_COMPARE) {\n    this._comparator = comparator;\n    this._root = null;\n    this._size = 0;\n  }\n\n\n  /**\n   * Inserts a key, allows duplicates\n   * @param  {Key}    key\n   * @param  {Value=} data\n   * @return {Node|null}\n   */\n  insert (key, data) {\n    return this._root = insert(key, data, this._root, this._comparator, this);\n  }\n\n\n  /**\n   * Adds a key, if it is not present in the tree\n   * @param  {Key}    key\n   * @param  {Value=} data\n   * @return {Node|null}\n   */\n  add (key, data) {\n    return this._root = add(key, data, this._root, this._comparator, this);\n  }\n\n\n  /**\n   * @param  {Key} key\n   * @return {Node|null}\n   */\n  remove (key) {\n    this._root = remove(key, this._root, this._comparator, this);\n  }\n\n\n  /**\n   * Removes and returns the node with smallest key\n   * @return {?Node}\n   */\n  pop () {\n    let node = this._root;\n    if (node) {\n      while (node.left) node = node.left;\n      this._root = splay(node.key,  this._root, this._comparator);\n      this._root = remove(node.key, this._root, this._comparator, this);\n      return { key: node.key, data: node.data };\n    }\n    return null;\n  }\n\n\n  /**\n   * @param  {Key} key\n   * @return {Node|null}\n   */\n  findStatic (key) {\n    let current   = this._root;\n    const compare = this._comparator;\n    while (current) {\n      const cmp = compare(key, current.key);\n      if (cmp === 0)    return current;\n      else if (cmp < 0) current = current.left;\n      else              current = current.right;\n    }\n    return null;\n  }\n\n\n  /**\n   * @param  {Key} key\n   * @return {Node|null}\n   */\n  find (key) {\n    if (this._root) {\n      this._root = splay(key, this._root, this._comparator);\n      if (this._comparator(key, this._root.key) !== 0) return null;\n    }\n    return this._root;\n  }\n\n\n  /**\n   * @param  {Key} key\n   * @return {Boolean}\n   */\n  contains (key) {\n    let current   = this._root;\n    const compare = this._comparator;\n    while (current) {\n      const cmp = compare(key, current.key);\n      if (cmp === 0)    return true;\n      else if (cmp < 0) current = current.left;\n      else              current = current.right;\n    }\n    return false;\n  }\n\n\n  /**\n   * @param  {Visitor} visitor\n   * @param  {*=}      ctx\n   * @return {SplayTree}\n   */\n  forEach (visitor, ctx) {\n    let current = this._root;\n    const Q = [];  /* Initialize stack s */\n    let done = false;\n\n    while (!done) {\n      if (current !==  null) {\n        Q.push(current);\n        current = current.left;\n      } else {\n        if (Q.length !== 0) {\n          current = Q.pop();\n          visitor.call(ctx, current);\n\n          current = current.right;\n        } else done = true;\n      }\n    }\n    return this;\n  }\n\n\n  /**\n   * Walk key range from `low` to `high`. Stops if `fn` returns a value.\n   * @param  {Key}      low\n   * @param  {Key}      high\n   * @param  {Function} fn\n   * @param  {*?}       ctx\n   * @return {SplayTree}\n   */\n  range (low, high, fn, ctx) {\n    const Q = [];\n    const compare = this._comparator;\n    let node = this._root, cmp;\n\n    while (Q.length !== 0 || node) {\n      if (node) {\n        Q.push(node);\n        node = node.left;\n      } else {\n        node = Q.pop();\n        cmp = compare(node.key, high);\n        if (cmp > 0) {\n          break;\n        } else if (compare(node.key, low) >= 0) {\n          if (fn.call(ctx, node)) return this; // stop if smth is returned\n        }\n        node = node.right;\n      }\n    }\n    return this;\n  }\n\n\n  /**\n   * Returns array of keys\n   * @return {Array<Key>}\n   */\n  keys () {\n    const keys = [];\n    this.forEach(({ key }) => keys.push(key));\n    return keys;\n  }\n\n\n  /**\n   * Returns array of all the data in the nodes\n   * @return {Array<Value>}\n   */\n  values () {\n    const values = [];\n    this.forEach(({ data }) => values.push(data));\n    return values;\n  }\n\n\n  /**\n   * @return {Key|null}\n   */\n  min() {\n    if (this._root) return this.minNode(this._root).key;\n    return null;\n  }\n\n\n  /**\n   * @return {Key|null}\n   */\n  max() {\n    if (this._root) return this.maxNode(this._root).key;\n    return null;\n  }\n\n\n  /**\n   * @return {Node|null}\n   */\n  minNode(t = this._root) {\n    if (t) while (t.left) t = t.left;\n    return t;\n  }\n\n\n  /**\n   * @return {Node|null}\n   */\n  maxNode(t = this._root) {\n    if (t) while (t.right) t = t.right;\n    return t;\n  }\n\n\n  /**\n   * Returns node at given index\n   * @param  {number} index\n   * @return {?Node}\n   */\n  at (index) {\n    let current = this._root, done = false, i = 0;\n    const Q = [];\n\n    while (!done) {\n      if (current) {\n        Q.push(current);\n        current = current.left;\n      } else {\n        if (Q.length > 0) {\n          current = Q.pop();\n          if (i === index) return current;\n          i++;\n          current = current.right;\n        } else done = true;\n      }\n    }\n    return null;\n  }\n\n\n  /**\n   * @param  {Node}   d\n   * @return {Node|null}\n   */\n  next (d) {\n    let root = this._root;\n    let successor = null;\n\n    if (d.right) {\n      successor = d.right;\n      while (successor.left) successor = successor.left;\n      return successor;\n    }\n\n    const comparator = this._comparator;\n    while (root) {\n      const cmp = comparator(d.key, root.key);\n      if (cmp === 0) break;\n      else if (cmp < 0) {\n        successor = root;\n        root = root.left;\n      } else root = root.right;\n    }\n\n    return successor;\n  }\n\n\n  /**\n   * @param  {Node} d\n   * @return {Node|null}\n   */\n  prev (d) {\n    let root = this._root;\n    let predecessor = null;\n\n    if (d.left !== null) {\n      predecessor = d.left;\n      while (predecessor.right) predecessor = predecessor.right;\n      return predecessor;\n    }\n\n    const comparator = this._comparator;\n    while (root) {\n      const cmp = comparator(d.key, root.key);\n      if (cmp === 0) break;\n      else if (cmp < 0) root = root.left;\n      else {\n        predecessor = root;\n        root = root.right;\n      }\n    }\n    return predecessor;\n  }\n\n\n  /**\n   * @return {SplayTree}\n   */\n  clear() {\n    this._root = null;\n    this._size = 0;\n    return this;\n  }\n\n\n  /**\n   * @return {NodeList}\n   */\n  toList() {\n    return toList(this._root);\n  }\n\n\n  /**\n   * Bulk-load items. Both array have to be same size\n   * @param  {Array<Key>}    keys\n   * @param  {Array<Value>}  [values]\n   * @param  {Boolean}       [presort=false] Pre-sort keys and values, using\n   *                                         tree's comparator. Sorting is done\n   *                                         in-place\n   * @return {AVLTree}\n   */\n  load (keys = [], values = [], presort = false) {\n    let size = keys.length;\n    const comparator = this._comparator;\n\n    // sort if needed\n    if (presort) sort(keys, values, 0, size - 1, comparator);\n\n    if (this._root === null) { // empty tree\n      this._root = loadRecursive(this._root, keys, values, 0, size);\n      this._size = size;\n    } else { // that re-builds the whole tree from two in-order traversals\n      const mergedList = mergeLists(this.toList(), createList(keys, values), comparator);\n      size = this._size + size;\n      this._root = sortedListToBST({ head: mergedList }, 0, size);\n    }\n    return this;\n  }\n\n\n  /**\n   * @return {Boolean}\n   */\n  isEmpty() { return this._root === null; }\n\n  get size () { return this._size; }\n\n\n  /**\n   * @param  {NodePrinter=} printNode\n   * @return {String}\n   */\n  toString (printNode = (n) => n.key) {\n    const out = [];\n    printRow(this._root, '', true, (v) => out.push(v), printNode);\n    return out.join('');\n  }\n\n\n  update (key, newKey, newData) {\n    const comparator = this._comparator;\n    let { left, right } = split(key, this._root, comparator);\n    this._size--;\n    if (comparator(key, newKey) < 0) {\n      right = insert(newKey, newData, right, comparator, this);\n    } else {\n      left = insert(newKey, newData, left, comparator, this);\n    }\n    this._root = merge(left, right, comparator);\n  }\n\n\n  split(key) {\n    return split(key, this._root, this._comparator);\n  }\n}\n\n\nfunction loadRecursive (parent, keys, values, start, end) {\n  const size = end - start;\n  if (size > 0) {\n    const middle = start + Math.floor(size / 2);\n    const key    = keys[middle];\n    const data   = values[middle];\n    const node   = { key, data, parent };\n    node.left    = loadRecursive(node, keys, values, start, middle);\n    node.right   = loadRecursive(node, keys, values, middle + 1, end);\n    return node;\n  }\n  return null;\n}\n\n\nfunction createList(keys, values) {\n  const head = { next: null };\n  let p = head;\n  for (let i = 0; i < keys.length; i++) {\n    p = p.next = { key: keys[i], data: values[i] };\n  }\n  p.next = null;\n  return head.next;\n}\n\n\nfunction toList (root) {\n  var current = root;\n  var Q = [], done = false;\n\n  const head = { next: null };\n  let p = head;\n\n  while (!done) {\n    if (current) {\n      Q.push(current);\n      current = current.left;\n    } else {\n      if (Q.length > 0) {\n        current = p = p.next = Q.pop();\n        current = current.right;\n      } else done = true;\n    }\n  }\n  p.next = null; // that'll work even if the tree was empty\n  return head.next;\n}\n\n\nfunction sortedListToBST(list, start, end) {\n  const size = end - start;\n  if (size > 0) {\n    const middle = start + Math.floor(size / 2);\n    const left = sortedListToBST(list, start, middle);\n\n    const root = list.head;\n    root.left = left;\n\n    list.head = list.head.next;\n\n    root.right = sortedListToBST(list, middle + 1, end);\n    return root;\n  }\n  return null;\n}\n\n\nfunction mergeLists (l1, l2, compare = (a, b) => a - b) {\n  const head = {}; // dummy\n  let p = head;\n\n  let p1 = l1;\n  let p2 = l2;\n\n  while (p1 !== null && p2 !== null) {\n    if (compare(p1.key, p2.key) < 0) {\n      p.next = p1;\n      p1 = p1.next;\n    } else {\n      p.next = p2;\n      p2 = p2.next;\n    }\n    p = p.next;\n  }\n\n  if (p1 !== null)      p.next = p1;\n  else if (p2 !== null) p.next = p2;\n\n  return head.next;\n}\n\n\nfunction sort(keys, values, left, right, compare) {\n  if (left >= right) return;\n\n  const pivot = keys[(left + right) >> 1];\n  let i = left - 1;\n  let j = right + 1;\n\n  while (true) {\n    do i++; while (compare(keys[i], pivot) < 0);\n    do j--; while (compare(keys[j], pivot) > 0);\n    if (i >= j) break;\n\n    let tmp = keys[i];\n    keys[i] = keys[j];\n    keys[j] = tmp;\n\n    tmp = values[i];\n    values[i] = values[j];\n    values[j] = tmp;\n  }\n\n  sort(keys, values,  left,     j, compare);\n  sort(keys, values, j + 1, right, compare);\n}\n","import SplayTree from 'splaytree';\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}\nfunction _toPrimitive(input, hint) {\n  if (typeof input !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (typeof res !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}\nfunction _toPropertyKey(arg) {\n  var key = _toPrimitive(arg, \"string\");\n  return typeof key === \"symbol\" ? key : String(key);\n}\n\n/* Javascript doesn't do integer math. Everything is\n * floating point with percision Number.EPSILON.\n *\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/EPSILON\n */\n\nvar epsilon = Number.EPSILON;\n\n// IE Polyfill\nif (epsilon === undefined) epsilon = Math.pow(2, -52);\nvar EPSILON_SQ = epsilon * epsilon;\n\n/* FLP comparator */\nvar cmp = function cmp(a, b) {\n  // check if they're both 0\n  if (-epsilon < a && a < epsilon) {\n    if (-epsilon < b && b < epsilon) {\n      return 0;\n    }\n  }\n\n  // check if they're flp equal\n  if ((a - b) * (a - b) < EPSILON_SQ * a * b) {\n    return 0;\n  }\n\n  // normal comparison\n  return a < b ? -1 : 1;\n};\n\n/* Greedy comparison. Two numbers are defined to touch\n * if their midpoint is indistinguishable from either. */\nvar touch = function touch(a, b) {\n  var m = (a + b) / 2;\n  return cmp(m, a) === 0 || cmp(m, b) === 0;\n};\n\n/* Greedy comparison. Two points are defined to touch\n * if their midpoint is indistinguishable from either. */\nvar touchPoints = function touchPoints(aPt, bPt) {\n  // call directly to (skip touch()) cmp() for performance boost\n  var mx = (aPt.x + bPt.x) / 2;\n  var aXMiss = cmp(mx, aPt.x) !== 0;\n  if (aXMiss && cmp(mx, bPt.x) !== 0) return false;\n  var my = (aPt.y + bPt.y) / 2;\n  var aYMiss = cmp(my, aPt.y) !== 0;\n  if (aYMiss && cmp(my, bPt.y) !== 0) return false;\n\n  // we have touching on both x & y, we have to make sure it's\n  // not just on opposite points thou\n  if (aYMiss && aYMiss) return true;\n  if (!aYMiss && !aYMiss) return true;\n  return false;\n};\n\n/* Cross Product of two vectors with first point at origin */\nvar crossProduct = function crossProduct(a, b) {\n  return a.x * b.y - a.y * b.x;\n};\n\n/* Dot Product of two vectors with first point at origin */\nvar dotProduct = function dotProduct(a, b) {\n  return a.x * b.x + a.y * b.y;\n};\n\n/* Comparator for two vectors with same starting point */\nvar compareVectorAngles = function compareVectorAngles(basePt, endPt1, endPt2) {\n  var v1 = {\n    x: endPt1.x - basePt.x,\n    y: endPt1.y - basePt.y\n  };\n  var v2 = {\n    x: endPt2.x - basePt.x,\n    y: endPt2.y - basePt.y\n  };\n  var kross = crossProduct(v1, v2);\n  return cmp(kross, 0);\n};\nvar length = function length(v) {\n  return Math.sqrt(dotProduct(v, v));\n};\n\n/* Get the sine of the angle from pShared -> pAngle to pShaed -> pBase */\nvar sineOfAngle = function sineOfAngle(pShared, pBase, pAngle) {\n  var vBase = {\n    x: pBase.x - pShared.x,\n    y: pBase.y - pShared.y\n  };\n  var vAngle = {\n    x: pAngle.x - pShared.x,\n    y: pAngle.y - pShared.y\n  };\n  return crossProduct(vAngle, vBase) / length(vAngle) / length(vBase);\n};\n\n/* Get the cosine of the angle from pShared -> pAngle to pShaed -> pBase */\nvar cosineOfAngle = function cosineOfAngle(pShared, pBase, pAngle) {\n  var vBase = {\n    x: pBase.x - pShared.x,\n    y: pBase.y - pShared.y\n  };\n  var vAngle = {\n    x: pAngle.x - pShared.x,\n    y: pAngle.y - pShared.y\n  };\n  return dotProduct(vAngle, vBase) / length(vAngle) / length(vBase);\n};\n\n/* Get the closest point on an line (defined by two points)\n * to another point. */\nvar closestPoint = function closestPoint(ptA1, ptA2, ptB) {\n  if (ptA1.x === ptA2.x) return {\n    x: ptA1.x,\n    y: ptB.y\n  }; // vertical vector\n  if (ptA1.y === ptA2.y) return {\n    x: ptB.x,\n    y: ptA1.y\n  }; // horizontal vector\n\n  // determinne which point is further away\n  var v1 = {\n    x: ptA1.x - ptB.x,\n    y: ptA1.y - ptB.y\n  };\n  var v2 = {\n    x: ptA2.x - ptB.x,\n    y: ptA2.y - ptB.y\n  };\n  var nearPt = ptA1;\n  var farPt = ptA2;\n  if (dotProduct(v1, v1) > dotProduct(v2, v2)) {\n    farPt = ptA1;\n    nearPt = ptA2;\n  }\n\n  // use the further point as our base in the calculation, so that the\n  // vectors are more parallel, providing more accurate dot product\n  var vA = {\n    x: nearPt.x - farPt.x,\n    y: nearPt.y - farPt.y\n  };\n  var vB = {\n    x: ptB.x - farPt.x,\n    y: ptB.y - farPt.y\n  };\n  var dist = dotProduct(vA, vB) / dotProduct(vA, vA);\n  return {\n    x: farPt.x + dist * vA.x,\n    y: farPt.y + dist * vA.y\n  };\n};\n\n/* Get the x coordinate where the given line (defined by a point and vector)\n * crosses the horizontal line with the given y coordiante.\n * In the case of parrallel lines (including overlapping ones) returns null. */\nvar horizontalIntersection = function horizontalIntersection(pt, v, y) {\n  if (v.y === 0) return null;\n  return {\n    x: pt.x + v.x / v.y * (y - pt.y),\n    y: y\n  };\n};\n\n/* Get the y coordinate where the given line (defined by a point and vector)\n * crosses the vertical line with the given x coordiante.\n * In the case of parrallel lines (including overlapping ones) returns null. */\nvar verticalIntersection = function verticalIntersection(pt, v, x) {\n  if (v.x === 0) return null;\n  return {\n    x: x,\n    y: pt.y + v.y / v.x * (x - pt.x)\n  };\n};\n\n/* Get the intersection of two lines, each defined by a base point and a vector.\n * In the case of parrallel lines (including overlapping ones) returns null. */\nvar intersection = function intersection(pt1, v1, pt2, v2) {\n  // take some shortcuts for vertical and horizontal lines\n  // this also ensures we don't calculate an intersection and then discover\n  // it's actually outside the bounding box of the line\n  if (v1.x === 0) return verticalIntersection(pt2, v2, pt1.x);\n  if (v2.x === 0) return verticalIntersection(pt1, v1, pt2.x);\n  if (v1.y === 0) return horizontalIntersection(pt2, v2, pt1.y);\n  if (v2.y === 0) return horizontalIntersection(pt1, v1, pt2.y);\n\n  // General case for non-overlapping segments.\n  // This algorithm is based on Schneider and Eberly.\n  // http://www.cimec.org.ar/~ncalvo/Schneider_Eberly.pdf - pg 244\n\n  var kross = crossProduct(v1, v2);\n  if (kross == 0) return null;\n  var ve = {\n    x: pt2.x - pt1.x,\n    y: pt2.y - pt1.y\n  };\n  var d1 = crossProduct(ve, v1) / kross;\n  var d2 = crossProduct(ve, v2) / kross;\n\n  // take the average of the two calculations to minimize rounding error\n  var x1 = pt1.x + d2 * v1.x,\n    x2 = pt2.x + d1 * v2.x;\n  var y1 = pt1.y + d2 * v1.y,\n    y2 = pt2.y + d1 * v2.y;\n  var x = (x1 + x2) / 2;\n  var y = (y1 + y2) / 2;\n  return {\n    x: x,\n    y: y\n  };\n};\n\n/**\n * This class rounds incoming values sufficiently so that\n * floating points problems are, for the most part, avoided.\n *\n * Incoming points are have their x & y values tested against\n * all previously seen x & y values. If either is 'too close'\n * to a previously seen value, it's value is 'snapped' to the\n * previously seen value.\n *\n * All points should be rounded by this class before being\n * stored in any data structures in the rest of this algorithm.\n */\nvar PtRounder = /*#__PURE__*/function () {\n  function PtRounder() {\n    _classCallCheck(this, PtRounder);\n    this.reset();\n  }\n  _createClass(PtRounder, [{\n    key: \"reset\",\n    value: function reset() {\n      this.xRounder = new CoordRounder();\n      this.yRounder = new CoordRounder();\n    }\n  }, {\n    key: \"round\",\n    value: function round(x, y) {\n      return {\n        x: this.xRounder.round(x),\n        y: this.yRounder.round(y)\n      };\n    }\n  }]);\n  return PtRounder;\n}();\nvar CoordRounder = /*#__PURE__*/function () {\n  function CoordRounder() {\n    _classCallCheck(this, CoordRounder);\n    this.tree = new SplayTree();\n    // preseed with 0 so we don't end up with values < Number.EPSILON\n    this.round(0);\n  }\n\n  // Note: this can rounds input values backwards or forwards.\n  //       You might ask, why not restrict this to just rounding\n  //       forwards? Wouldn't that allow left endpoints to always\n  //       remain left endpoints during splitting (never change to\n  //       right). No - it wouldn't, because we snap intersections\n  //       to endpoints (to establish independence from the segment\n  //       angle for t-intersections).\n  _createClass(CoordRounder, [{\n    key: \"round\",\n    value: function round(coord) {\n      var node = this.tree.add(coord);\n      var prevNode = this.tree.prev(node);\n      if (prevNode !== null && cmp(node.key, prevNode.key) === 0) {\n        this.tree.remove(coord);\n        return prevNode.key;\n      }\n      var nextNode = this.tree.next(node);\n      if (nextNode !== null && cmp(node.key, nextNode.key) === 0) {\n        this.tree.remove(coord);\n        return nextNode.key;\n      }\n      return coord;\n    }\n  }]);\n  return CoordRounder;\n}(); // singleton available by import\nvar rounder = new PtRounder();\n\n/* Given input geometry as a standard array-of-arrays geojson-style\n * geometry, return one that uses objects as points, for better perf */\nvar pointsAsObjects = function pointsAsObjects(geom) {\n  // we can handle well-formed multipolys and polys\n  var output = [];\n  if (!Array.isArray(geom)) {\n    throw new Error('Input is not a Polygon or MultiPolygon');\n  }\n  for (var i = 0, iMax = geom.length; i < iMax; i++) {\n    if (!Array.isArray(geom[i]) || geom[i].length == 0) {\n      throw new Error('Input is not a Polygon or MultiPolygon');\n    }\n    output.push([]);\n    for (var j = 0, jMax = geom[i].length; j < jMax; j++) {\n      if (!Array.isArray(geom[i][j]) || geom[i][j].length == 0) {\n        throw new Error('Input is not a Polygon or MultiPolygon');\n      }\n      if (Array.isArray(geom[i][j][0])) {\n        // multipolygon\n        output[i].push([]);\n        for (var k = 0, kMax = geom[i][j].length; k < kMax; k++) {\n          if (!Array.isArray(geom[i][j][k]) || geom[i][j][k].length < 2) {\n            throw new Error('Input is not a Polygon or MultiPolygon');\n          }\n          if (geom[i][j][k].length > 2) {\n            throw new Error('Input has more than two coordinates. ' + 'Only 2-dimensional polygons supported.');\n          }\n          output[i][j].push(rounder.round(geom[i][j][k][0], geom[i][j][k][1]));\n        }\n      } else {\n        // polygon\n        if (geom[i][j].length < 2) {\n          throw new Error('Input is not a Polygon or MultiPolygon');\n        }\n        if (geom[i][j].length > 2) {\n          throw new Error('Input has more than two coordinates. ' + 'Only 2-dimensional polygons supported.');\n        }\n        output[i].push(rounder.round(geom[i][j][0], geom[i][j][1]));\n      }\n    }\n  }\n  return output;\n};\n\n/* WARN: input modified directly */\nvar forceMultiPoly = function forceMultiPoly(geom) {\n  if (Array.isArray(geom)) {\n    if (geom.length === 0) return; // allow empty multipolys\n\n    if (Array.isArray(geom[0])) {\n      if (Array.isArray(geom[0][0])) {\n        if (typeof geom[0][0][0].x === 'number' && typeof geom[0][0][0].y === 'number') {\n          // multipolygon\n          return;\n        }\n      }\n      if (typeof geom[0][0].x === 'number' && typeof geom[0][0].y === 'number') {\n        // polygon\n        geom.unshift(geom.splice(0));\n        return;\n      }\n    }\n  }\n  throw new Error('Unrecognized input - not a polygon nor multipolygon');\n};\n\n/* WARN: input modified directly */\nvar cleanMultiPoly = function cleanMultiPoly(multipoly) {\n  var i = 0;\n  while (i < multipoly.length) {\n    var poly = multipoly[i];\n    if (poly.length === 0) {\n      multipoly.splice(i, 1);\n      continue;\n    }\n    var exteriorRing = poly[0];\n    cleanRing(exteriorRing);\n    // poly is dropped if exteriorRing is degenerate\n    if (exteriorRing.length === 0) {\n      multipoly.splice(i, 1);\n      continue;\n    }\n    var j = 1;\n    while (j < poly.length) {\n      var interiorRing = poly[j];\n      cleanRing(interiorRing);\n      if (interiorRing.length === 0) poly.splice(j, 1);else j++;\n    }\n    i++;\n  }\n};\n\n/* Clean ring:\n *  - remove duplicate points\n *  - remove colinear points\n *  - remove rings with no area (less than 3 distinct points)\n *  - un-close rings (last point should not repeat first)\n *\n * WARN: input modified directly */\nvar cleanRing = function cleanRing(ring) {\n  if (ring.length === 0) return;\n  var ringLengthBeforeTheClean = ring.length;\n  var firstPt = ring[0];\n  var lastPt = ring[ring.length - 1];\n  if (firstPt.x === lastPt.x && firstPt.y === lastPt.y) ring.pop();\n  var isPointUncessary = function isPointUncessary(prevPt, pt, nextPt) {\n    return prevPt.x === pt.x && prevPt.y === pt.y || nextPt.x === pt.x && nextPt.y === pt.y || compareVectorAngles(pt, prevPt, nextPt) === 0;\n  };\n  var i = 0;\n  var prevPt, nextPt;\n  while (i < ring.length) {\n    prevPt = i === 0 ? ring[ring.length - 1] : ring[i - 1];\n    nextPt = i === ring.length - 1 ? ring[0] : ring[i + 1];\n    if (isPointUncessary(prevPt, ring[i], nextPt)) ring.splice(i, 1);else i++;\n  }\n\n  // if our ring has less than 3 distinct points now (so is degenerate)\n  // shrink it down to the empty array to communicate to our caller to\n  // drop it\n  while (ring.length < 3 && ring.length > 0) ring.pop();\n\n  /**\n   * If at least one item has been removed from the ring, we need to re-run the cleanRing function with the new ring\n   * to avoid situations when new neighbor items are duplicated or have the same vector angle\n   *\n   * Imagine we have an initial ring with the following points:\n   * [{ x: 1, y: 1 },\n   *  { x: 2, y: 0 },\n   *  { x: 1, y: 0 },\n   *  { x: 1, y: 1 },\n   *  { x: 0,  y: 1 }]\n   *\n   * When we run the cleanRing with those points, it will remove from the list only the last one, as the value of the\n   * compareVectorAngles(pt, prevPt, nextPt) will be true ( compareVectorAngles({x: 0, y:1}, {x:1, y:1}, {x:1, y:1}) ),\n   * and the pre-last point will become the last one, which is the same as the first point, but the code wouldn't check\n   * that anymore and will move on with the result:\n   *\n   * [{ x: 1, y: 1 },\n   *  { x: 2, y: 0 },\n   *  { x: 1, y: 0 },\n   *  { x: 1, y: 1 }]\n   *\n   *  To prevent this kind of situation, we need to run the output data through the cleanRing function once again, if\n   *  at least one point has been removed\n   */\n  if (ringLengthBeforeTheClean !== ring.length) {\n    cleanRing(ring);\n  }\n};\n\nvar SweepEvent = /*#__PURE__*/function () {\n  // Warning: 'point' input will be modified and re-used (for performance)\n  function SweepEvent(point, isLeft) {\n    _classCallCheck(this, SweepEvent);\n    if (point.events === undefined) point.events = [this];else point.events.push(this);\n    this.point = point;\n    this.isLeft = isLeft;\n    // this.segment, this.otherSE set by factory\n  }\n  _createClass(SweepEvent, [{\n    key: \"link\",\n    value: function link(other) {\n      if (other.point === this.point) {\n        throw new Error('Tried to link already linked events');\n      }\n      var otherEvents = other.point.events;\n      for (var i = 0, iMax = otherEvents.length; i < iMax; i++) {\n        var evt = otherEvents[i];\n        this.point.events.push(evt);\n        evt.point = this.point;\n      }\n      this.checkForConsuming();\n    }\n\n    /* Do a pass over our linked events and check to see if any pair\n     * of segments match, and should be consumed. */\n  }, {\n    key: \"checkForConsuming\",\n    value: function checkForConsuming() {\n      // FIXME: The loops in this method run O(n^2) => no good.\n      //        Maintain little ordered sweep event trees?\n      //        Can we maintaining an ordering that avoids the need\n      //        for the re-sorting with getLeftmostComparator in geom-out?\n\n      // Compare each pair of events to see if other events also match\n      var numEvents = this.point.events.length;\n      for (var i = 0; i < numEvents; i++) {\n        var evt1 = this.point.events[i];\n        if (evt1.segment.consumedBy !== undefined) continue;\n        for (var j = i + 1; j < numEvents; j++) {\n          var evt2 = this.point.events[j];\n          if (evt2.consumedBy !== undefined) continue;\n          if (evt1.otherSE.point.events !== evt2.otherSE.point.events) continue;\n          evt1.segment.consume(evt2.segment);\n        }\n      }\n    }\n  }, {\n    key: \"getAvailableLinkedEvents\",\n    value: function getAvailableLinkedEvents() {\n      // point.events is always of length 2 or greater\n      var events = [];\n      for (var i = 0, iMax = this.point.events.length; i < iMax; i++) {\n        var evt = this.point.events[i];\n        if (evt !== this && !evt.segment.ringOut && evt.segment.isInResult()) {\n          events.push(evt);\n        }\n      }\n      return events;\n    }\n\n    /**\n     * Returns a comparator function for sorting linked events that will\n     * favor the event that will give us the smallest left-side angle.\n     * All ring construction starts as low as possible heading to the right,\n     * so by always turning left as sharp as possible we'll get polygons\n     * without uncessary loops & holes.\n     *\n     * The comparator function has a compute cache such that it avoids\n     * re-computing already-computed values.\n     */\n  }, {\n    key: \"getLeftmostComparator\",\n    value: function getLeftmostComparator(baseEvent) {\n      var _this = this;\n      var cache = new Map();\n      var fillCache = function fillCache(linkedEvent) {\n        var nextEvent = linkedEvent.otherSE;\n        cache.set(linkedEvent, {\n          sine: sineOfAngle(_this.point, baseEvent.point, nextEvent.point),\n          cosine: cosineOfAngle(_this.point, baseEvent.point, nextEvent.point)\n        });\n      };\n      return function (a, b) {\n        if (!cache.has(a)) fillCache(a);\n        if (!cache.has(b)) fillCache(b);\n        var _cache$get = cache.get(a),\n          asine = _cache$get.sine,\n          acosine = _cache$get.cosine;\n        var _cache$get2 = cache.get(b),\n          bsine = _cache$get2.sine,\n          bcosine = _cache$get2.cosine;\n\n        // both on or above x-axis\n        if (asine >= 0 && bsine >= 0) {\n          if (acosine < bcosine) return 1;\n          if (acosine > bcosine) return -1;\n          return 0;\n        }\n\n        // both below x-axis\n        if (asine < 0 && bsine < 0) {\n          if (acosine < bcosine) return -1;\n          if (acosine > bcosine) return 1;\n          return 0;\n        }\n\n        // one above x-axis, one below\n        if (bsine < asine) return -1;\n        if (bsine > asine) return 1;\n        return 0;\n      };\n    }\n  }], [{\n    key: \"compare\",\n    value:\n    // for ordering sweep events in the sweep event queue\n    function compare(a, b) {\n      // favor event with a point that the sweep line hits first\n      var ptCmp = SweepEvent.comparePoints(a.point, b.point);\n      if (ptCmp !== 0) return ptCmp;\n\n      // the points are the same, so link them if needed\n      if (a.point !== b.point) a.link(b);\n\n      // favor right events over left\n      if (a.isLeft !== b.isLeft) return a.isLeft ? 1 : -1;\n\n      // we have two matching left or right endpoints\n      // ordering of this case is the same as for their segments\n      return Segment.compare(a.segment, b.segment);\n    }\n\n    // for ordering points in sweep line order\n  }, {\n    key: \"comparePoints\",\n    value: function comparePoints(aPt, bPt) {\n      if (aPt.x < bPt.x) return -1;\n      if (aPt.x > bPt.x) return 1;\n      if (aPt.y < bPt.y) return -1;\n      if (aPt.y > bPt.y) return 1;\n      return 0;\n    }\n  }]);\n  return SweepEvent;\n}();\n\n/**\n * A bounding box has the format:\n *\n *  { ll: { x: xmin, y: ymin }, ur: { x: xmax, y: ymax } }\n *\n */\n\nvar isInBbox = function isInBbox(bbox, point) {\n  return bbox.ll.x <= point.x && point.x <= bbox.ur.x && bbox.ll.y <= point.y && point.y <= bbox.ur.y;\n};\n\n/* Greedy comparison with a bbox. A point is defined to 'touch'\n * a bbox if:\n *  - it is inside the bbox\n *  - it 'touches' one of the sides (another greedy comparison) */\nvar touchesBbox = function touchesBbox(bbox, point) {\n  return (bbox.ll.x <= point.x || touch(bbox.ll.x, point.x)) && (point.x <= bbox.ur.x || touch(point.x, bbox.ur.x)) && (bbox.ll.y <= point.y || touch(bbox.ll.y, point.y)) && (point.y <= bbox.ur.y || touch(point.y, bbox.ur.y));\n};\n\n/* Returns either null, or a bbox (aka an ordered pair of points)\n * If there is only one point of overlap, a bbox with identical points\n * will be returned */\nvar getBboxOverlap = function getBboxOverlap(b1, b2) {\n  // check if the bboxes overlap at all\n  if (b2.ur.x < b1.ll.x || b1.ur.x < b2.ll.x || b2.ur.y < b1.ll.y || b1.ur.y < b2.ll.y) return null;\n\n  // find the middle two X values\n  var lowerX = b1.ll.x < b2.ll.x ? b2.ll.x : b1.ll.x;\n  var upperX = b1.ur.x < b2.ur.x ? b1.ur.x : b2.ur.x;\n\n  // find the middle two Y values\n  var lowerY = b1.ll.y < b2.ll.y ? b2.ll.y : b1.ll.y;\n  var upperY = b1.ur.y < b2.ur.y ? b1.ur.y : b2.ur.y;\n\n  // put those middle values together to get the overlap\n  return {\n    ll: {\n      x: lowerX,\n      y: lowerY\n    },\n    ur: {\n      x: upperX,\n      y: upperY\n    }\n  };\n};\n\n// Give segments unique ID's to get consistent sorting of\n// segments and sweep events when all else is identical\nvar segmentId = 0;\nvar Segment = /*#__PURE__*/function () {\n  /* Warning: a reference to ringsIn input will be stored,\n   *  and possibly will be later modified */\n  function Segment(leftSE, rightSE, ringsIn) {\n    _classCallCheck(this, Segment);\n    this.id = ++segmentId;\n    this.leftSE = leftSE;\n    leftSE.segment = this;\n    leftSE.otherSE = rightSE;\n    this.rightSE = rightSE;\n    rightSE.segment = this;\n    rightSE.otherSE = leftSE;\n    this.ringsIn = ringsIn;\n    this._cache = {};\n    // left unset for performance, set later in algorithm\n    // this.ringOut, this.consumedBy, this.prev\n  }\n  _createClass(Segment, [{\n    key: \"replaceRightSE\",\n    value: /* When a segment is split, the rightSE is replaced with a new sweep event */\n    function replaceRightSE(newRightSE) {\n      this.rightSE = newRightSE;\n      this.rightSE.segment = this;\n      this.rightSE.otherSE = this.leftSE;\n      this.leftSE.otherSE = this.rightSE;\n    }\n  }, {\n    key: \"bbox\",\n    value: function bbox() {\n      var y1 = this.leftSE.point.y;\n      var y2 = this.rightSE.point.y;\n      return {\n        ll: {\n          x: this.leftSE.point.x,\n          y: y1 < y2 ? y1 : y2\n        },\n        ur: {\n          x: this.rightSE.point.x,\n          y: y1 > y2 ? y1 : y2\n        }\n      };\n    }\n\n    /* A vector from the left point to the right */\n  }, {\n    key: \"vector\",\n    value: function vector() {\n      return {\n        x: this.rightSE.point.x - this.leftSE.point.x,\n        y: this.rightSE.point.y - this.leftSE.point.y\n      };\n    }\n  }, {\n    key: \"isAnEndpoint\",\n    value: function isAnEndpoint(pt) {\n      return pt.x === this.leftSE.point.x && pt.y === this.leftSE.point.y || pt.x === this.rightSE.point.x && pt.y === this.rightSE.point.y;\n    }\n\n    /* Compare this segment with a point. Return value indicates:\n     *     1: point lies above or to the left of segment\n     *     0: point is colinear to segment\n     *    -1: point is below or to the right of segment */\n  }, {\n    key: \"comparePoint\",\n    value: function comparePoint(point) {\n      if (this.isAnEndpoint(point)) return 0;\n      var interPt = closestPoint(this.leftSE.point, this.rightSE.point, point);\n      if (point.y < interPt.y) return -1;\n      if (point.y > interPt.y) return 1;\n\n      // depending on if our segment angles up or down,\n      // the x coord comparison means oppposite things\n      if (point.x < interPt.x) {\n        if (this.leftSE.point.y < this.rightSE.point.y) return 1;\n        if (this.leftSE.point.y > this.rightSE.point.y) return -1;\n      }\n      if (point.x > interPt.x) {\n        if (this.leftSE.point.y < this.rightSE.point.y) return -1;\n        if (this.leftSE.point.y > this.rightSE.point.y) return 1;\n      }\n\n      // on the line\n      return 0;\n    }\n\n    /* Does the point in question touch the given segment?\n     * Greedy - essentially a 2 * Number.EPSILON comparison.\n     * If it's not possible to add an independent point between the\n     * point and the segment, we say the point 'touches' the segment. */\n  }, {\n    key: \"touches\",\n    value: function touches(point) {\n      if (!touchesBbox(this.bbox(), point)) return false;\n      // if the points have been linked already, performance boost use that\n      if (point === this.leftSE.point || point === this.rightSE.point) return true;\n      // avoid doing vector math on tiny vectors\n      if (touchPoints(this.leftSE.point, point)) return true;\n      if (touchPoints(this.rightSE.point, point)) return true;\n      var cPt1 = closestPoint(this.leftSE.point, this.rightSE.point, point);\n      var avgPt1 = {\n        x: (cPt1.x + point.x) / 2,\n        y: (cPt1.y + point.y) / 2\n      };\n      return touchPoints(avgPt1, cPt1) || touchPoints(avgPt1, point);\n    }\n\n    /**\n     * Given another segment, returns the first non-trivial intersection\n     * between the two segments (in terms of sweep line ordering), if it exists.\n     *\n     * A 'non-trivial' intersection is one that will cause one or both of the\n     * segments to be split(). As such, 'trivial' vs. 'non-trivial' intersection:\n     *\n     *   * endpoint of segA with endpoint of segB --> trivial\n     *   * endpoint of segA with point along segB --> non-trivial\n     *   * endpoint of segB with point along segA --> non-trivial\n     *   * point along segA with point along segB --> non-trivial\n     *\n     * If no non-trivial intersection exists, return null\n     * Else, return null.\n     */\n  }, {\n    key: \"getIntersection\",\n    value: function getIntersection(other) {\n      // If bboxes don't overlap, there can't be any intersections\n      var bboxOverlap = getBboxOverlap(this.bbox(), other.bbox());\n      if (bboxOverlap === null) return null;\n\n      // We first check to see if the endpoints can be considered intersections.\n      // This will 'snap' intersections to endpoints if possible, and will\n      // handle cases of colinearity.\n\n      // does each endpoint touch the other segment?\n      var touchesOtherLSE = this.touches(other.leftSE.point);\n      var touchesThisLSE = other.touches(this.leftSE.point);\n      var touchesOtherRSE = this.touches(other.rightSE.point);\n      var touchesThisRSE = other.touches(this.rightSE.point);\n\n      // do left endpoints match?\n      if (touchesThisLSE && touchesOtherLSE) {\n        // these two cases are for colinear segments with matching left\n        // endpoints, and one segment being longer than the other\n        if (touchesThisRSE && !touchesOtherRSE) return this.rightSE.point;\n        if (!touchesThisRSE && touchesOtherRSE) return other.rightSE.point;\n        // either the two segments match exactly (two trival intersections)\n        // or just on their left endpoint (one trivial intersection\n        return null;\n      }\n\n      // does this left endpoint matches (other doesn't)\n      if (touchesThisLSE) {\n        // check for segments that just intersect on opposing endpoints\n        if (touchesOtherRSE && touchPoints(this.leftSE.point, other.rightSE.point)) return null;\n        // t-intersection on left endpoint\n        return this.leftSE.point;\n      }\n\n      // does other left endpoint matches (this doesn't)\n      if (touchesOtherLSE) {\n        // check for segments that just intersect on opposing endpoints\n        if (touchesThisRSE && touchPoints(this.rightSE.point, other.leftSE.point)) return null;\n        // t-intersection on left endpoint\n        return other.leftSE.point;\n      }\n\n      // trivial intersection on right endpoints\n      if (touchesThisRSE && touchesOtherRSE) return null;\n\n      // t-intersections on just one right endpoint\n      if (touchesThisRSE) return this.rightSE.point;\n      if (touchesOtherRSE) return other.rightSE.point;\n\n      // None of our endpoints intersect. Look for a general intersection between\n      // infinite lines laid over the segments\n      var pt = intersection(this.leftSE.point, this.vector(), other.leftSE.point, other.vector());\n\n      // are the segments parrallel? Note that if they were colinear with overlap,\n      // they would have an endpoint intersection and that case was already handled above\n      if (pt === null) return null;\n\n      // is the intersection found between the lines not on the segments?\n      if (!isInBbox(bboxOverlap, pt)) return null;\n\n      // round the the computed point if needed\n      return rounder.round(pt.x, pt.y);\n    }\n\n    /**\n     * Split the given segment into multiple segments on the given points.\n     *  * Each existing segment will retain its leftSE and a new rightSE will be\n     *    generated for it.\n     *  * A new segment will be generated which will adopt the original segment's\n     *    rightSE, and a new leftSE will be generated for it.\n     *  * If there are more than two points given to split on, new segments\n     *    in the middle will be generated with new leftSE and rightSE's.\n     *  * An array of the newly generated SweepEvents will be returned.\n     *\n     * Warning: input array of points is modified\n     */\n  }, {\n    key: \"split\",\n    value: function split(point) {\n      var newEvents = [];\n      var alreadyLinked = point.events !== undefined;\n      var newLeftSE = new SweepEvent(point, true);\n      var newRightSE = new SweepEvent(point, false);\n      var oldRightSE = this.rightSE;\n      this.replaceRightSE(newRightSE);\n      newEvents.push(newRightSE);\n      newEvents.push(newLeftSE);\n      new Segment(newLeftSE, oldRightSE, this.ringsIn.slice());\n\n      // in the point we just used to create new sweep events with was already\n      // linked to other events, we need to check if either of the affected\n      // segments should be consumed\n      if (alreadyLinked) {\n        newLeftSE.checkForConsuming();\n        newRightSE.checkForConsuming();\n      }\n      return newEvents;\n    }\n\n    /* Consume another segment. We take their ringsIn under our wing\n     * and mark them as consumed. Use for perfectly overlapping segments */\n  }, {\n    key: \"consume\",\n    value: function consume(other) {\n      var consumer = this;\n      var consumee = other;\n      while (consumer.consumedBy) consumer = consumer.consumedBy;\n      while (consumee.consumedBy) consumee = consumee.consumedBy;\n      var cmp = Segment.compare(consumer, consumee);\n      if (cmp === 0) return; // already consumed\n      // the winner of the consumption is the earlier segment\n      // according to sweep line ordering\n      if (cmp > 0) {\n        var tmp = consumer;\n        consumer = consumee;\n        consumee = tmp;\n      }\n\n      // make sure a segment doesn't consume it's prev\n      if (consumer.prev === consumee) {\n        var _tmp = consumer;\n        consumer = consumee;\n        consumee = _tmp;\n      }\n      for (var i = 0, iMax = consumee.ringsIn.length; i < iMax; i++) {\n        consumer.ringsIn.push(consumee.ringsIn[i]);\n      }\n      consumee.ringsIn = null;\n      consumee.consumedBy = consumer;\n\n      // mark sweep events consumed as to maintain ordering in sweep event queue\n      consumee.leftSE.consumedBy = consumer.leftSE;\n      consumee.rightSE.consumedBy = consumer.rightSE;\n    }\n\n    /* The first segment previous segment chain that is in the result */\n  }, {\n    key: \"prevInResult\",\n    value: function prevInResult() {\n      var key = 'prevInResult';\n      if (this._cache[key] === undefined) this._cache[key] = this[\"_\".concat(key)]();\n      return this._cache[key];\n    }\n  }, {\n    key: \"_prevInResult\",\n    value: function _prevInResult() {\n      if (!this.prev) return null;\n      if (this.prev.isInResult()) return this.prev;\n      return this.prev.prevInResult();\n    }\n  }, {\n    key: \"ringsBefore\",\n    value: function ringsBefore() {\n      var key = 'ringsBefore';\n      if (this._cache[key] === undefined) this._cache[key] = this[\"_\".concat(key)]();\n      return this._cache[key];\n    }\n  }, {\n    key: \"_ringsBefore\",\n    value: function _ringsBefore() {\n      if (!this.prev) return [];\n      return (this.prev.consumedBy || this.prev).ringsAfter();\n    }\n  }, {\n    key: \"ringsAfter\",\n    value: function ringsAfter() {\n      var key = 'ringsAfter';\n      if (this._cache[key] === undefined) this._cache[key] = this[\"_\".concat(key)]();\n      return this._cache[key];\n    }\n  }, {\n    key: \"_ringsAfter\",\n    value: function _ringsAfter() {\n      var rings = this.ringsBefore().slice(0);\n      for (var i = 0, iMax = this.ringsIn.length; i < iMax; i++) {\n        var ring = this.ringsIn[i];\n        var index = rings.indexOf(ring);\n        if (index === -1) rings.push(ring);else rings.splice(index, 1);\n      }\n      return rings;\n    }\n  }, {\n    key: \"multiPolysBefore\",\n    value: function multiPolysBefore() {\n      var key = 'multiPolysBefore';\n      if (this._cache[key] === undefined) this._cache[key] = this[\"_\".concat(key)]();\n      return this._cache[key];\n    }\n  }, {\n    key: \"_multiPolysBefore\",\n    value: function _multiPolysBefore() {\n      if (!this.prev) return [];\n      return (this.prev.consumedBy || this.prev).multiPolysAfter();\n    }\n  }, {\n    key: \"multiPolysAfter\",\n    value: function multiPolysAfter() {\n      var key = 'multiPolysAfter';\n      if (this._cache[key] === undefined) this._cache[key] = this[\"_\".concat(key)]();\n      return this._cache[key];\n    }\n  }, {\n    key: \"_multiPolysAfter\",\n    value: function _multiPolysAfter() {\n      // first calcualte our polysAfter\n      var polysAfter = [];\n      var polysExclude = [];\n      var ringsAfter = this.ringsAfter();\n      for (var i = 0, iMax = ringsAfter.length; i < iMax; i++) {\n        var ring = ringsAfter[i];\n        var poly = ring.poly;\n        if (polysExclude.indexOf(poly) !== -1) continue;\n        if (ring.isExterior) polysAfter.push(poly);else {\n          if (polysExclude.indexOf(poly) === -1) polysExclude.push(poly);\n          var index = polysAfter.indexOf(ring.poly);\n          if (index !== -1) polysAfter.splice(index, 1);\n        }\n      }\n      // now calculate our multiPolysAfter\n      var mps = [];\n      for (var _i = 0, _iMax = polysAfter.length; _i < _iMax; _i++) {\n        var mp = polysAfter[_i].multiPoly;\n        if (mps.indexOf(mp) === -1) mps.push(mp);\n      }\n      return mps;\n    }\n\n    /* Is this segment part of the final result? */\n  }, {\n    key: \"isInResult\",\n    value: function isInResult() {\n      var key = 'isInResult';\n      if (this._cache[key] === undefined) this._cache[key] = this[\"_\".concat(key)]();\n      return this._cache[key];\n    }\n  }, {\n    key: \"_isInResult\",\n    value: function _isInResult() {\n      // if we've been consumed, we're not in the result\n      if (this.consumedBy) return false;\n      var mpsBefore = this.multiPolysBefore();\n      var mpsAfter = this.multiPolysAfter();\n      switch (operation.type) {\n        case 'union':\n          {\n            // UNION - included iff:\n            //  * On one side of us there is 0 poly interiors AND\n            //  * On the other side there is 1 or more.\n            var noBefores = mpsBefore.length === 0;\n            var noAfters = mpsAfter.length === 0;\n            return noBefores !== noAfters;\n          }\n        case 'intersection':\n          {\n            // INTERSECTION - included iff:\n            //  * on one side of us all multipolys are rep. with poly interiors AND\n            //  * on the other side of us, not all multipolys are repsented\n            //    with poly interiors\n            var least;\n            var most;\n            if (mpsBefore.length < mpsAfter.length) {\n              least = mpsBefore.length;\n              most = mpsAfter.length;\n            } else {\n              least = mpsAfter.length;\n              most = mpsBefore.length;\n            }\n            return most === operation.numMultiPolys && least < most;\n          }\n        case 'xor':\n          {\n            // XOR - included iff:\n            //  * the difference between the number of multipolys represented\n            //    with poly interiors on our two sides is an odd number\n            var diff = Math.abs(mpsBefore.length - mpsAfter.length);\n            return diff % 2 === 1;\n          }\n        case 'difference':\n          {\n            // DIFFERENCE included iff:\n            //  * on exactly one side, we have just the subject\n            var isJustSubject = function isJustSubject(mps) {\n              return mps.length === 1 && mps[0].isSubject;\n            };\n            return isJustSubject(mpsBefore) !== isJustSubject(mpsAfter);\n          }\n        default:\n          throw new Error(\"Unrecognized operation type found \".concat(operation.type));\n      }\n    }\n  }], [{\n    key: \"compare\",\n    value:\n    /* This compare() function is for ordering segments in the sweep\n     * line tree, and does so according to the following criteria:\n     *\n     * Consider the vertical line that lies an infinestimal step to the\n     * right of the right-more of the two left endpoints of the input\n     * segments. Imagine slowly moving a point up from negative infinity\n     * in the increasing y direction. Which of the two segments will that\n     * point intersect first? That segment comes 'before' the other one.\n     *\n     * If neither segment would be intersected by such a line, (if one\n     * or more of the segments are vertical) then the line to be considered\n     * is directly on the right-more of the two left inputs.\n     */\n    function compare(a, b) {\n      var alx = a.leftSE.point.x;\n      var blx = b.leftSE.point.x;\n      var arx = a.rightSE.point.x;\n      var brx = b.rightSE.point.x;\n\n      // check if they're even in the same vertical plane\n      if (brx < alx) return 1;\n      if (arx < blx) return -1;\n      var aly = a.leftSE.point.y;\n      var bly = b.leftSE.point.y;\n      var ary = a.rightSE.point.y;\n      var bry = b.rightSE.point.y;\n\n      // is left endpoint of segment B the right-more?\n      if (alx < blx) {\n        // are the two segments in the same horizontal plane?\n        if (bly < aly && bly < ary) return 1;\n        if (bly > aly && bly > ary) return -1;\n\n        // is the B left endpoint colinear to segment A?\n        var aCmpBLeft = a.comparePoint(b.leftSE.point);\n        if (aCmpBLeft < 0) return 1;\n        if (aCmpBLeft > 0) return -1;\n\n        // is the A right endpoint colinear to segment B ?\n        var bCmpARight = b.comparePoint(a.rightSE.point);\n        if (bCmpARight !== 0) return bCmpARight;\n\n        // colinear segments, consider the one with left-more\n        // left endpoint to be first (arbitrary?)\n        return -1;\n      }\n\n      // is left endpoint of segment A the right-more?\n      if (alx > blx) {\n        if (aly < bly && aly < bry) return -1;\n        if (aly > bly && aly > bry) return 1;\n\n        // is the A left endpoint colinear to segment B?\n        var bCmpALeft = b.comparePoint(a.leftSE.point);\n        if (bCmpALeft !== 0) return bCmpALeft;\n\n        // is the B right endpoint colinear to segment A?\n        var aCmpBRight = a.comparePoint(b.rightSE.point);\n        if (aCmpBRight < 0) return 1;\n        if (aCmpBRight > 0) return -1;\n\n        // colinear segments, consider the one with left-more\n        // left endpoint to be first (arbitrary?)\n        return 1;\n      }\n\n      // if we get here, the two left endpoints are in the same\n      // vertical plane, ie alx === blx\n\n      // consider the lower left-endpoint to come first\n      if (aly < bly) return -1;\n      if (aly > bly) return 1;\n\n      // left endpoints are identical\n      // check for colinearity by using the left-more right endpoint\n\n      // is the A right endpoint more left-more?\n      if (arx < brx) {\n        var _bCmpARight = b.comparePoint(a.rightSE.point);\n        if (_bCmpARight !== 0) return _bCmpARight;\n\n        // colinear segments with matching left endpoints,\n        // consider the one with more left-more right endpoint to be first\n        return -1;\n      }\n\n      // is the B right endpoint more left-more?\n      if (arx > brx) {\n        var _aCmpBRight = a.comparePoint(b.rightSE.point);\n        if (_aCmpBRight < 0) return 1;\n        if (_aCmpBRight > 0) return -1;\n\n        // colinear segments with matching left endpoints,\n        // consider the one with more left-more right endpoint to be first\n        return 1;\n      }\n\n      // if we get here, two two right endpoints are in the same\n      // vertical plane, ie arx === brx\n\n      // consider the lower right-endpoint to come first\n      if (ary < bry) return -1;\n      if (ary > bry) return 1;\n\n      // right endpoints identical as well, so the segments are idential\n      // fall back on creation order as consistent tie-breaker\n      if (a.id < b.id) return -1;\n      if (a.id > b.id) return 1;\n\n      // identical segment, ie a === b\n      return 0;\n    }\n  }, {\n    key: \"fromRing\",\n    value: function fromRing(pt1, pt2, ring) {\n      var leftPt, rightPt;\n\n      // ordering the two points according to sweep line ordering\n      var cmpPts = SweepEvent.comparePoints(pt1, pt2);\n      if (cmpPts < 0) {\n        leftPt = pt1;\n        rightPt = pt2;\n      } else if (cmpPts > 0) {\n        leftPt = pt2;\n        rightPt = pt1;\n      } else throw new Error(\"Tried to create degenerate segment at [\".concat(pt1.x, \", \").concat(pt1.y, \"]\"));\n      var leftSE = new SweepEvent(leftPt, true);\n      var rightSE = new SweepEvent(rightPt, false);\n      return new Segment(leftSE, rightSE, [ring]);\n    }\n  }]);\n  return Segment;\n}();\n\nvar RingIn = /*#__PURE__*/function () {\n  function RingIn(geomRing, poly, isExterior) {\n    _classCallCheck(this, RingIn);\n    this.poly = poly;\n    this.isExterior = isExterior;\n    this.segments = [];\n    var prevPoint = geomRing[0];\n    for (var i = 1, iMax = geomRing.length; i < iMax; i++) {\n      var point = geomRing[i];\n      this.segments.push(Segment.fromRing(prevPoint, point, this));\n      prevPoint = point;\n    }\n    this.segments.push(Segment.fromRing(prevPoint, geomRing[0], this));\n  }\n  _createClass(RingIn, [{\n    key: \"getSweepEvents\",\n    value: function getSweepEvents() {\n      var sweepEvents = [];\n      for (var i = 0, iMax = this.segments.length; i < iMax; i++) {\n        var segment = this.segments[i];\n        sweepEvents.push(segment.leftSE);\n        sweepEvents.push(segment.rightSE);\n      }\n      return sweepEvents;\n    }\n  }]);\n  return RingIn;\n}();\nvar PolyIn = /*#__PURE__*/function () {\n  function PolyIn(geomPoly, multiPoly) {\n    _classCallCheck(this, PolyIn);\n    this.exteriorRing = new RingIn(geomPoly[0], this, true);\n    this.interiorRings = [];\n    for (var i = 1, iMax = geomPoly.length; i < iMax; i++) {\n      this.interiorRings.push(new RingIn(geomPoly[i], this, false));\n    }\n    this.multiPoly = multiPoly;\n  }\n  _createClass(PolyIn, [{\n    key: \"getSweepEvents\",\n    value: function getSweepEvents() {\n      var sweepEvents = this.exteriorRing.getSweepEvents();\n      for (var i = 0, iMax = this.interiorRings.length; i < iMax; i++) {\n        var ringSweepEvents = this.interiorRings[i].getSweepEvents();\n        for (var j = 0, jMax = ringSweepEvents.length; j < jMax; j++) {\n          sweepEvents.push(ringSweepEvents[j]);\n        }\n      }\n      return sweepEvents;\n    }\n  }]);\n  return PolyIn;\n}();\nvar MultiPolyIn = /*#__PURE__*/function () {\n  function MultiPolyIn(geomMultiPoly) {\n    _classCallCheck(this, MultiPolyIn);\n    this.polys = [];\n    for (var i = 0, iMax = geomMultiPoly.length; i < iMax; i++) {\n      this.polys.push(new PolyIn(geomMultiPoly[i], this));\n    }\n    this.isSubject = false;\n  }\n  _createClass(MultiPolyIn, [{\n    key: \"markAsSubject\",\n    value: function markAsSubject() {\n      this.isSubject = true;\n    }\n  }, {\n    key: \"getSweepEvents\",\n    value: function getSweepEvents() {\n      var sweepEvents = [];\n      for (var i = 0, iMax = this.polys.length; i < iMax; i++) {\n        var polySweepEvents = this.polys[i].getSweepEvents();\n        for (var j = 0, jMax = polySweepEvents.length; j < jMax; j++) {\n          sweepEvents.push(polySweepEvents[j]);\n        }\n      }\n      return sweepEvents;\n    }\n  }]);\n  return MultiPolyIn;\n}();\n\nvar RingOut = /*#__PURE__*/function () {\n  function RingOut(events) {\n    _classCallCheck(this, RingOut);\n    this.events = events;\n    for (var i = 0, iMax = events.length; i < iMax; i++) {\n      events[i].segment.ringOut = this;\n    }\n    this.poly = null;\n  }\n  _createClass(RingOut, [{\n    key: \"getGeom\",\n    value: function getGeom() {\n      // Remove superfluous points (ie extra points along a straight line),\n      var prevPt = this.events[0].point;\n      var points = [prevPt];\n      for (var i = 1, iMax = this.events.length - 1; i < iMax; i++) {\n        var _pt = this.events[i].point;\n        var _nextPt = this.events[i + 1].point;\n        if (compareVectorAngles(_pt, prevPt, _nextPt) === 0) continue;\n        points.push(_pt);\n        prevPt = _pt;\n      }\n\n      // ring was all (within rounding error of angle calc) colinear points\n      if (points.length === 1) return null;\n\n      // check if the starting point is necessary\n      var pt = points[0];\n      var nextPt = points[1];\n      if (compareVectorAngles(pt, prevPt, nextPt) === 0) points.shift();\n      points.push(points[0]);\n      var step = this.isExteriorRing() ? 1 : -1;\n      var iStart = this.isExteriorRing() ? 0 : points.length - 1;\n      var iEnd = this.isExteriorRing() ? points.length : -1;\n      var orderedPoints = [];\n      for (var _i = iStart; _i != iEnd; _i += step) orderedPoints.push([points[_i].x, points[_i].y]);\n      return orderedPoints;\n    }\n  }, {\n    key: \"isExteriorRing\",\n    value: function isExteriorRing() {\n      if (this._isExteriorRing === undefined) {\n        var enclosing = this.enclosingRing();\n        this._isExteriorRing = enclosing ? !enclosing.isExteriorRing() : true;\n      }\n      return this._isExteriorRing;\n    }\n  }, {\n    key: \"enclosingRing\",\n    value: function enclosingRing() {\n      if (this._enclosingRing === undefined) {\n        this._enclosingRing = this._calcEnclosingRing();\n      }\n      return this._enclosingRing;\n    }\n\n    /* Returns the ring that encloses this one, if any */\n  }, {\n    key: \"_calcEnclosingRing\",\n    value: function _calcEnclosingRing() {\n      // start with the ealier sweep line event so that the prevSeg\n      // chain doesn't lead us inside of a loop of ours\n      var leftMostEvt = this.events[0];\n      for (var i = 1, iMax = this.events.length; i < iMax; i++) {\n        var evt = this.events[i];\n        if (SweepEvent.compare(leftMostEvt, evt) > 0) leftMostEvt = evt;\n      }\n      var prevSeg = leftMostEvt.segment.prevInResult();\n      var prevPrevSeg = prevSeg ? prevSeg.prevInResult() : null;\n      while (true) {\n        // no segment found, thus no ring can enclose us\n        if (!prevSeg) return null;\n\n        // no segments below prev segment found, thus the ring of the prev\n        // segment must loop back around and enclose us\n        if (!prevPrevSeg) return prevSeg.ringOut;\n\n        // if the two segments are of different rings, the ring of the prev\n        // segment must either loop around us or the ring of the prev prev\n        // seg, which would make us and the ring of the prev peers\n        if (prevPrevSeg.ringOut !== prevSeg.ringOut) {\n          if (prevPrevSeg.ringOut.enclosingRing() !== prevSeg.ringOut) {\n            return prevSeg.ringOut;\n          } else return prevSeg.ringOut.enclosingRing();\n        }\n\n        // two segments are from the same ring, so this was a penisula\n        // of that ring. iterate downward, keep searching\n        prevSeg = prevPrevSeg.prevInResult();\n        prevPrevSeg = prevSeg ? prevSeg.prevInResult() : null;\n      }\n    }\n  }], [{\n    key: \"factory\",\n    value:\n    /* Given the segments from the sweep line pass, compute & return a series\n     * of closed rings from all the segments marked to be part of the result */\n    function factory(allSegments) {\n      var ringsOut = [];\n      for (var i = 0, iMax = allSegments.length; i < iMax; i++) {\n        var segment = allSegments[i];\n        if (!segment.isInResult() || segment.ringOut) continue;\n        var prevEvent = null;\n        var event = segment.leftSE;\n        var nextEvent = segment.rightSE;\n        var events = [event];\n        var startingPoint = event.point;\n        var intersectionLEs = [];\n\n        /* Walk the chain of linked events to form a closed ring */\n        while (true) {\n          prevEvent = event;\n          event = nextEvent;\n          events.push(event);\n\n          /* Is the ring complete? */\n          if (event.point === startingPoint) break;\n          while (true) {\n            var availableLEs = event.getAvailableLinkedEvents();\n\n            /* Did we hit a dead end? This shouldn't happen. Indicates some earlier\n             * part of the algorithm malfunctioned... please file a bug report. */\n            if (availableLEs.length === 0) {\n              var firstPt = events[0].point;\n              var lastPt = events[events.length - 1].point;\n              throw new Error(\"Unable to complete output ring starting at [\".concat(firstPt.x, \",\") + \" \".concat(firstPt.y, \"]. Last matching segment found ends at\") + \" [\".concat(lastPt.x, \", \").concat(lastPt.y, \"].\"));\n            }\n\n            /* Only one way to go, so cotinue on the path */\n            if (availableLEs.length === 1) {\n              nextEvent = availableLEs[0].otherSE;\n              break;\n            }\n\n            /* We must have an intersection. Check for a completed loop */\n            var indexLE = null;\n            for (var j = 0, jMax = intersectionLEs.length; j < jMax; j++) {\n              if (intersectionLEs[j].point === event.point) {\n                indexLE = j;\n                break;\n              }\n            }\n            /* Found a completed loop. Cut that off and make a ring */\n            if (indexLE !== null) {\n              var intersectionLE = intersectionLEs.splice(indexLE)[0];\n              var ringEvents = events.splice(intersectionLE.index);\n              ringEvents.unshift(ringEvents[0].otherSE);\n              ringsOut.push(new RingOut(ringEvents.reverse()));\n              continue;\n            }\n            /* register the intersection */\n            intersectionLEs.push({\n              index: events.length,\n              point: event.point\n            });\n            /* Choose the left-most option to continue the walk */\n            var comparator = event.getLeftmostComparator(prevEvent);\n            nextEvent = availableLEs.sort(comparator)[0].otherSE;\n            break;\n          }\n        }\n        ringsOut.push(new RingOut(events));\n      }\n      return ringsOut;\n    }\n  }]);\n  return RingOut;\n}();\nvar PolyOut = /*#__PURE__*/function () {\n  function PolyOut(exteriorRing) {\n    _classCallCheck(this, PolyOut);\n    this.exteriorRing = exteriorRing;\n    exteriorRing.poly = this;\n    this.interiorRings = [];\n  }\n  _createClass(PolyOut, [{\n    key: \"addInterior\",\n    value: function addInterior(ring) {\n      this.interiorRings.push(ring);\n      ring.poly = this;\n    }\n  }, {\n    key: \"getGeom\",\n    value: function getGeom() {\n      var geom = [this.exteriorRing.getGeom()];\n      // exterior ring was all (within rounding error of angle calc) colinear points\n      if (geom[0] === null) return null;\n      for (var i = 0, iMax = this.interiorRings.length; i < iMax; i++) {\n        var ringGeom = this.interiorRings[i].getGeom();\n        // interior ring was all (within rounding error of angle calc) colinear points\n        if (ringGeom === null) continue;\n        geom.push(ringGeom);\n      }\n      return geom;\n    }\n  }]);\n  return PolyOut;\n}();\nvar MultiPolyOut = /*#__PURE__*/function () {\n  function MultiPolyOut(rings) {\n    _classCallCheck(this, MultiPolyOut);\n    this.rings = rings;\n    this.polys = this._composePolys(rings);\n  }\n  _createClass(MultiPolyOut, [{\n    key: \"getGeom\",\n    value: function getGeom() {\n      var geom = [];\n      for (var i = 0, iMax = this.polys.length; i < iMax; i++) {\n        var polyGeom = this.polys[i].getGeom();\n        // exterior ring was all (within rounding error of angle calc) colinear points\n        if (polyGeom === null) continue;\n        geom.push(polyGeom);\n      }\n      return geom;\n    }\n  }, {\n    key: \"_composePolys\",\n    value: function _composePolys(rings) {\n      var polys = [];\n      for (var i = 0, iMax = rings.length; i < iMax; i++) {\n        var ring = rings[i];\n        if (ring.poly) continue;\n        if (ring.isExteriorRing()) polys.push(new PolyOut(ring));else {\n          var enclosingRing = ring.enclosingRing();\n          if (!enclosingRing.poly) polys.push(new PolyOut(enclosingRing));\n          enclosingRing.poly.addInterior(ring);\n        }\n      }\n      return polys;\n    }\n  }]);\n  return MultiPolyOut;\n}();\n\n/**\n * NOTE:  We must be careful not to change any segments while\n *        they are in the SplayTree. AFAIK, there's no way to tell\n *        the tree to rebalance itself - thus before splitting\n *        a segment that's in the tree, we remove it from the tree,\n *        do the split, then re-insert it. (Even though splitting a\n *        segment *shouldn't* change its correct position in the\n *        sweep line tree, the reality is because of rounding errors,\n *        it sometimes does.)\n */\nvar SweepLine = /*#__PURE__*/function () {\n  function SweepLine(queue) {\n    var comparator = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : Segment.compare;\n    _classCallCheck(this, SweepLine);\n    this.queue = queue;\n    this.tree = new SplayTree(comparator);\n    this.segments = [];\n  }\n  _createClass(SweepLine, [{\n    key: \"process\",\n    value: function process(event) {\n      var segment = event.segment;\n      var newEvents = [];\n\n      // if we've already been consumed by another segment,\n      // clean up our body parts and get out\n      if (event.consumedBy) {\n        if (event.isLeft) this.queue.remove(event.otherSE);else this.tree.remove(segment);\n        return newEvents;\n      }\n      var node = event.isLeft ? this.tree.insert(segment) : this.tree.find(segment);\n      if (!node) throw new Error(\"Unable to find segment #\".concat(segment.id, \" \") + \"[\".concat(segment.leftSE.point.x, \", \").concat(segment.leftSE.point.y, \"] -> \") + \"[\".concat(segment.rightSE.point.x, \", \").concat(segment.rightSE.point.y, \"] \") + 'in SweepLine tree. Please submit a bug report.');\n      var prevNode = node;\n      var nextNode = node;\n      var prevSeg = undefined;\n      var nextSeg = undefined;\n\n      // skip consumed segments still in tree\n      while (prevSeg === undefined) {\n        prevNode = this.tree.prev(prevNode);\n        if (prevNode === null) prevSeg = null;else if (prevNode.key.consumedBy === undefined) prevSeg = prevNode.key;\n      }\n\n      // skip consumed segments still in tree\n      while (nextSeg === undefined) {\n        nextNode = this.tree.next(nextNode);\n        if (nextNode === null) nextSeg = null;else if (nextNode.key.consumedBy === undefined) nextSeg = nextNode.key;\n      }\n      if (event.isLeft) {\n        // Check for intersections against the previous segment in the sweep line\n        var prevMySplitter = null;\n        if (prevSeg) {\n          var prevInter = prevSeg.getIntersection(segment);\n          if (prevInter !== null) {\n            if (!segment.isAnEndpoint(prevInter)) prevMySplitter = prevInter;\n            if (!prevSeg.isAnEndpoint(prevInter)) {\n              var newEventsFromSplit = this._splitSafely(prevSeg, prevInter);\n              for (var i = 0, iMax = newEventsFromSplit.length; i < iMax; i++) {\n                newEvents.push(newEventsFromSplit[i]);\n              }\n            }\n          }\n        }\n\n        // Check for intersections against the next segment in the sweep line\n        var nextMySplitter = null;\n        if (nextSeg) {\n          var nextInter = nextSeg.getIntersection(segment);\n          if (nextInter !== null) {\n            if (!segment.isAnEndpoint(nextInter)) nextMySplitter = nextInter;\n            if (!nextSeg.isAnEndpoint(nextInter)) {\n              var _newEventsFromSplit = this._splitSafely(nextSeg, nextInter);\n              for (var _i = 0, _iMax = _newEventsFromSplit.length; _i < _iMax; _i++) {\n                newEvents.push(_newEventsFromSplit[_i]);\n              }\n            }\n          }\n        }\n\n        // For simplicity, even if we find more than one intersection we only\n        // spilt on the 'earliest' (sweep-line style) of the intersections.\n        // The other intersection will be handled in a future process().\n        if (prevMySplitter !== null || nextMySplitter !== null) {\n          var mySplitter = null;\n          if (prevMySplitter === null) mySplitter = nextMySplitter;else if (nextMySplitter === null) mySplitter = prevMySplitter;else {\n            var cmpSplitters = SweepEvent.comparePoints(prevMySplitter, nextMySplitter);\n            if (cmpSplitters < 0) mySplitter = prevMySplitter;\n            if (cmpSplitters > 0) mySplitter = nextMySplitter;\n            // the two splitters are the exact same point\n            mySplitter = prevMySplitter;\n          }\n\n          // Rounding errors can cause changes in ordering,\n          // so remove afected segments and right sweep events before splitting\n          this.queue.remove(segment.rightSE);\n          newEvents.push(segment.rightSE);\n          var _newEventsFromSplit2 = segment.split(mySplitter);\n          for (var _i2 = 0, _iMax2 = _newEventsFromSplit2.length; _i2 < _iMax2; _i2++) {\n            newEvents.push(_newEventsFromSplit2[_i2]);\n          }\n        }\n        if (newEvents.length > 0) {\n          // We found some intersections, so re-do the current event to\n          // make sure sweep line ordering is totally consistent for later\n          // use with the segment 'prev' pointers\n          this.tree.remove(segment);\n          newEvents.push(event);\n        } else {\n          // done with left event\n          this.segments.push(segment);\n          segment.prev = prevSeg;\n        }\n      } else {\n        // event.isRight\n\n        // since we're about to be removed from the sweep line, check for\n        // intersections between our previous and next segments\n        if (prevSeg && nextSeg) {\n          var inter = prevSeg.getIntersection(nextSeg);\n          if (inter !== null) {\n            if (!prevSeg.isAnEndpoint(inter)) {\n              var _newEventsFromSplit3 = this._splitSafely(prevSeg, inter);\n              for (var _i3 = 0, _iMax3 = _newEventsFromSplit3.length; _i3 < _iMax3; _i3++) {\n                newEvents.push(_newEventsFromSplit3[_i3]);\n              }\n            }\n            if (!nextSeg.isAnEndpoint(inter)) {\n              var _newEventsFromSplit4 = this._splitSafely(nextSeg, inter);\n              for (var _i4 = 0, _iMax4 = _newEventsFromSplit4.length; _i4 < _iMax4; _i4++) {\n                newEvents.push(_newEventsFromSplit4[_i4]);\n              }\n            }\n          }\n        }\n        this.tree.remove(segment);\n      }\n      return newEvents;\n    }\n\n    /* Safely split a segment that is currently in the datastructures\n     * IE - a segment other than the one that is currently being processed. */\n  }, {\n    key: \"_splitSafely\",\n    value: function _splitSafely(seg, pt) {\n      // Rounding errors can cause changes in ordering,\n      // so remove afected segments and right sweep events before splitting\n      // removeNode() doesn't work, so have re-find the seg\n      // https://github.com/w8r/splay-tree/pull/5\n      this.tree.remove(seg);\n      var rightSE = seg.rightSE;\n      this.queue.remove(rightSE);\n      var newEvents = seg.split(pt);\n      newEvents.push(rightSE);\n      // splitting can trigger consumption\n      if (seg.consumedBy === undefined) this.tree.insert(seg);\n      return newEvents;\n    }\n  }]);\n  return SweepLine;\n}();\n\nvar Operation = /*#__PURE__*/function () {\n  function Operation() {\n    _classCallCheck(this, Operation);\n  }\n  _createClass(Operation, [{\n    key: \"run\",\n    value: function run(type, geom, moreGeoms) {\n      operation.type = type;\n      rounder.reset();\n\n      /* Make a copy of the input geometry with rounded points as objects */\n      var geoms = [pointsAsObjects(geom)];\n      for (var i = 0, iMax = moreGeoms.length; i < iMax; i++) {\n        geoms.push(pointsAsObjects(moreGeoms[i]));\n      }\n\n      /* Clean inputs */\n      for (var _i = 0, _iMax = geoms.length; _i < _iMax; _i++) {\n        forceMultiPoly(geoms[_i]);\n        cleanMultiPoly(geoms[_i]);\n      }\n\n      /* Convert inputs to MultiPoly objects, mark subject */\n      var multipolys = [];\n      for (var _i2 = 0, _iMax2 = geoms.length; _i2 < _iMax2; _i2++) {\n        multipolys.push(new MultiPolyIn(geoms[_i2]));\n      }\n      multipolys[0].markAsSubject();\n      operation.numMultiPolys = multipolys.length;\n\n      /* Put segment endpoints in a priority queue */\n      var queue = new SplayTree(SweepEvent.compare);\n      for (var _i3 = 0, _iMax3 = multipolys.length; _i3 < _iMax3; _i3++) {\n        var sweepEvents = multipolys[_i3].getSweepEvents();\n        for (var j = 0, jMax = sweepEvents.length; j < jMax; j++) {\n          queue.insert(sweepEvents[j]);\n        }\n      }\n\n      /* Pass the sweep line over those endpoints */\n      var sweepLine = new SweepLine(queue);\n      var prevQueueSize = queue.size;\n      var node = queue.pop();\n      while (node) {\n        var evt = node.key;\n        if (queue.size === prevQueueSize) {\n          // prevents an infinite loop, an otherwise common manifestation of bugs\n          throw new Error(\"Unable to pop() SweepEvent [\".concat(evt.point.x, \", \").concat(evt.point.y, \"] from \") + \"segment #\".concat(evt.segment.id, \" from queue. Please file a bug report.\"));\n        }\n        var newEvents = sweepLine.process(evt);\n        for (var _i4 = 0, _iMax4 = newEvents.length; _i4 < _iMax4; _i4++) {\n          var _evt = newEvents[_i4];\n          if (_evt.consumedBy === undefined) queue.insert(_evt);\n        }\n        prevQueueSize = queue.size;\n        node = queue.pop();\n      }\n\n      // free some memory we don't need anymore\n      rounder.reset();\n\n      /* Collect and compile segments we're keeping into a multipolygon */\n      var ringsOut = RingOut.factory(sweepLine.segments);\n      var result = new MultiPolyOut(ringsOut);\n      return result.getGeom();\n    }\n  }]);\n  return Operation;\n}();\n\n// singleton available by import\nvar operation = new Operation();\n\nvar union = function union(geom) {\n  for (var _len = arguments.length, moreGeoms = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    moreGeoms[_key - 1] = arguments[_key];\n  }\n  return operation.run('union', geom, moreGeoms);\n};\nvar intersection$1 = function intersection(geom) {\n  for (var _len2 = arguments.length, moreGeoms = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n    moreGeoms[_key2 - 1] = arguments[_key2];\n  }\n  return operation.run('intersection', geom, moreGeoms);\n};\nvar xor = function xor(geom) {\n  for (var _len3 = arguments.length, moreGeoms = new Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {\n    moreGeoms[_key3 - 1] = arguments[_key3];\n  }\n  return operation.run('xor', geom, moreGeoms);\n};\nvar difference = function difference(subjectGeom) {\n  for (var _len4 = arguments.length, clippingGeoms = new Array(_len4 > 1 ? _len4 - 1 : 0), _key4 = 1; _key4 < _len4; _key4++) {\n    clippingGeoms[_key4 - 1] = arguments[_key4];\n  }\n  return operation.run('difference', subjectGeom, clippingGeoms);\n};\nvar index = {\n  union: union,\n  intersection: intersection$1,\n  xor: xor,\n  difference: difference\n};\n\nexport default index;\n","function DEFAULT_COMPARE (a, b) { return a > b ? 1 : a < b ? -1 : 0; }\n\nexport default class SplayTree {\n\n  constructor(compare = DEFAULT_COMPARE, noDuplicates = false) {\n    this._compare = compare;\n    this._root = null;\n    this._size = 0;\n    this._noDuplicates = !!noDuplicates;\n  }\n\n\n  rotateLeft(x) {\n    var y = x.right;\n    if (y) {\n      x.right = y.left;\n      if (y.left) y.left.parent = x;\n      y.parent = x.parent;\n    }\n\n    if (!x.parent)                this._root = y;\n    else if (x === x.parent.left) x.parent.left = y;\n    else                          x.parent.right = y;\n    if (y) y.left = x;\n    x.parent = y;\n  }\n\n\n  rotateRight(x) {\n    var y = x.left;\n    if (y) {\n      x.left = y.right;\n      if (y.right) y.right.parent = x;\n      y.parent = x.parent;\n    }\n\n    if (!x.parent)               this._root = y;\n    else if(x === x.parent.left) x.parent.left = y;\n    else                         x.parent.right = y;\n    if (y) y.right = x;\n    x.parent = y;\n  }\n\n\n  _splay(x) {\n    while (x.parent) {\n      var p = x.parent;\n      if (!p.parent) {\n        if (p.left === x) this.rotateRight(p);\n        else              this.rotateLeft(p);\n      } else if (p.left === x && p.parent.left === p) {\n        this.rotateRight(p.parent);\n        this.rotateRight(p);\n      } else if (p.right === x && p.parent.right === p) {\n        this.rotateLeft(p.parent);\n        this.rotateLeft(p);\n      } else if (p.left === x && p.parent.right === p) {\n        this.rotateRight(p);\n        this.rotateLeft(p);\n      } else {\n        this.rotateLeft(p);\n        this.rotateRight(p);\n      }\n    }\n  }\n\n\n  splay(x) {\n    var p, gp, ggp, l, r;\n\n    while (x.parent) {\n      p = x.parent;\n      gp = p.parent;\n\n      if (gp && gp.parent) {\n        ggp = gp.parent;\n        if (ggp.left === gp) ggp.left  = x;\n        else                 ggp.right = x;\n        x.parent = ggp;\n      } else {\n        x.parent = null;\n        this._root = x;\n      }\n\n      l = x.left; r = x.right;\n\n      if (x === p.left) { // left\n        if (gp) {\n          if (gp.left === p) {\n            /* zig-zig */\n            if (p.right) {\n              gp.left = p.right;\n              gp.left.parent = gp;\n            } else gp.left = null;\n\n            p.right   = gp;\n            gp.parent = p;\n          } else {\n            /* zig-zag */\n            if (l) {\n              gp.right = l;\n              l.parent = gp;\n            } else gp.right = null;\n\n            x.left    = gp;\n            gp.parent = x;\n          }\n        }\n        if (r) {\n          p.left = r;\n          r.parent = p;\n        } else p.left = null;\n\n        x.right  = p;\n        p.parent = x;\n      } else { // right\n        if (gp) {\n          if (gp.right === p) {\n            /* zig-zig */\n            if (p.left) {\n              gp.right = p.left;\n              gp.right.parent = gp;\n            } else gp.right = null;\n\n            p.left = gp;\n            gp.parent = p;\n          } else {\n            /* zig-zag */\n            if (r) {\n              gp.left = r;\n              r.parent = gp;\n            } else gp.left = null;\n\n            x.right   = gp;\n            gp.parent = x;\n          }\n        }\n        if (l) {\n          p.right = l;\n          l.parent = p;\n        } else p.right = null;\n\n        x.left   = p;\n        p.parent = x;\n      }\n    }\n  }\n\n\n  replace(u, v) {\n    if (!u.parent) this._root = v;\n    else if (u === u.parent.left) u.parent.left = v;\n    else u.parent.right = v;\n    if (v) v.parent = u.parent;\n  }\n\n\n  minNode(u = this._root) {\n    if (u) while (u.left) u = u.left;\n    return u;\n  }\n\n\n  maxNode(u = this._root) {\n    if (u) while (u.right) u = u.right;\n    return u;\n  }\n\n\n  insert(key, data) {\n    var z = this._root;\n    var p = null;\n    var comp = this._compare;\n    var cmp;\n\n    if (this._noDuplicates) {\n      while (z) {\n        p = z;\n        cmp = comp(z.key, key);\n        if (cmp === 0) return;\n        else if (comp(z.key, key) < 0) z = z.right;\n        else z = z.left;\n      }\n    } else {\n      while (z) {\n        p = z;\n        if (comp(z.key, key) < 0) z = z.right;\n        else z = z.left;\n      }\n    }\n\n    z = { key, data, left: null, right: null, parent: p };\n\n    if (!p)                          this._root = z;\n    else if (comp(p.key, z.key) < 0) p.right = z;\n    else                             p.left  = z;\n\n    this.splay(z);\n    this._size++;\n    return z;\n  }\n\n\n  find (key) {\n    var z    = this._root;\n    var comp = this._compare;\n    while (z) {\n      var cmp = comp(z.key, key);\n      if      (cmp < 0) z = z.right;\n      else if (cmp > 0) z = z.left;\n      else              return z;\n    }\n    return null;\n  }\n\n  /**\n   * Whether the tree contains a node with the given key\n   * @param  {Key} key\n   * @return {boolean} true/false\n   */\n  contains (key) {\n    var node       = this._root;\n    var comparator = this._compare;\n    while (node)  {\n      var cmp = comparator(key, node.key);\n      if      (cmp === 0) return true;\n      else if (cmp < 0)   node = node.left;\n      else                node = node.right;\n    }\n\n    return false;\n  }\n\n\n  remove (key) {\n    var z = this.find(key);\n\n    if (!z) return false;\n\n    this.splay(z);\n\n    if (!z.left) this.replace(z, z.right);\n    else if (!z.right) this.replace(z, z.left);\n    else {\n      var y = this.minNode(z.right);\n      if (y.parent !== z) {\n        this.replace(y, y.right);\n        y.right = z.right;\n        y.right.parent = y;\n      }\n      this.replace(z, y);\n      y.left = z.left;\n      y.left.parent = y;\n    }\n\n    this._size--;\n    return true;\n  }\n\n\n  removeNode(z) {\n    if (!z) return false;\n\n    this.splay(z);\n\n    if (!z.left) this.replace(z, z.right);\n    else if (!z.right) this.replace(z, z.left);\n    else {\n      var y = this.minNode(z.right);\n      if (y.parent !== z) {\n        this.replace(y, y.right);\n        y.right = z.right;\n        y.right.parent = y;\n      }\n      this.replace(z, y);\n      y.left = z.left;\n      y.left.parent = y;\n    }\n\n    this._size--;\n    return true;\n  }\n\n\n  erase (key) {\n    var z = this.find(key);\n    if (!z) return;\n\n    this.splay(z);\n\n    var s = z.left;\n    var t = z.right;\n\n    var sMax = null;\n    if (s) {\n      s.parent = null;\n      sMax = this.maxNode(s);\n      this.splay(sMax);\n      this._root = sMax;\n    }\n    if (t) {\n      if (s) sMax.right = t;\n      else   this._root = t;\n      t.parent = sMax;\n    }\n\n    this._size--;\n  }\n\n  /**\n   * Removes and returns the node with smallest key\n   * @return {?Node}\n   */\n  pop () {\n    var node = this._root, returnValue = null;\n    if (node) {\n      while (node.left) node = node.left;\n      returnValue = { key: node.key, data: node.data };\n      this.remove(node.key);\n    }\n    return returnValue;\n  }\n\n\n  /* eslint-disable class-methods-use-this */\n\n  /**\n   * Successor node\n   * @param  {Node} node\n   * @return {?Node}\n   */\n  next (node) {\n    var successor = node;\n    if (successor) {\n      if (successor.right) {\n        successor = successor.right;\n        while (successor && successor.left) successor = successor.left;\n      } else {\n        successor = node.parent;\n        while (successor && successor.right === node) {\n          node = successor; successor = successor.parent;\n        }\n      }\n    }\n    return successor;\n  }\n\n\n  /**\n   * Predecessor node\n   * @param  {Node} node\n   * @return {?Node}\n   */\n  prev (node) {\n    var predecessor = node;\n    if (predecessor) {\n      if (predecessor.left) {\n        predecessor = predecessor.left;\n        while (predecessor && predecessor.right) predecessor = predecessor.right;\n      } else {\n        predecessor = node.parent;\n        while (predecessor && predecessor.left === node) {\n          node = predecessor;\n          predecessor = predecessor.parent;\n        }\n      }\n    }\n    return predecessor;\n  }\n  /* eslint-enable class-methods-use-this */\n\n\n  /**\n   * @param  {forEachCallback} callback\n   * @return {SplayTree}\n   */\n  forEach(callback) {\n    var current = this._root;\n    var s = [], done = false, i = 0;\n\n    while (!done) {\n      // Reach the left most Node of the current Node\n      if (current) {\n        // Place pointer to a tree node on the stack\n        // before traversing the node's left subtree\n        s.push(current);\n        current = current.left;\n      } else {\n        // BackTrack from the empty subtree and visit the Node\n        // at the top of the stack; however, if the stack is\n        // empty you are done\n        if (s.length > 0) {\n          current = s.pop();\n          callback(current, i++);\n\n          // We have visited the node and its left\n          // subtree. Now, it's right subtree's turn\n          current = current.right;\n        } else done = true;\n      }\n    }\n    return this;\n  }\n\n\n  /**\n   * Walk key range from `low` to `high`. Stops if `fn` returns a value.\n   * @param  {Key}      low\n   * @param  {Key}      high\n   * @param  {Function} fn\n   * @param  {*?}       ctx\n   * @return {SplayTree}\n   */\n  range(low, high, fn, ctx) {\n    const Q = [];\n    const compare = this._compare;\n    let node = this._root, cmp;\n\n    while (Q.length !== 0 || node) {\n      if (node) {\n        Q.push(node);\n        node = node.left;\n      } else {\n        node = Q.pop();\n        cmp = compare(node.key, high);\n        if (cmp > 0) {\n          break;\n        } else if (compare(node.key, low) >= 0) {\n          if (fn.call(ctx, node)) return this; // stop if smth is returned\n        }\n        node = node.right;\n      }\n    }\n    return this;\n  }\n\n  /**\n   * Returns all keys in order\n   * @return {Array<Key>}\n   */\n  keys () {\n    var current = this._root;\n    var s = [], r = [], done = false;\n\n    while (!done) {\n      if (current) {\n        s.push(current);\n        current = current.left;\n      } else {\n        if (s.length > 0) {\n          current = s.pop();\n          r.push(current.key);\n          current = current.right;\n        } else done = true;\n      }\n    }\n    return r;\n  }\n\n\n  /**\n   * Returns `data` fields of all nodes in order.\n   * @return {Array<Value>}\n   */\n  values () {\n    var current = this._root;\n    var s = [], r = [], done = false;\n\n    while (!done) {\n      if (current) {\n        s.push(current);\n        current = current.left;\n      } else {\n        if (s.length > 0) {\n          current = s.pop();\n          r.push(current.data);\n          current = current.right;\n        } else done = true;\n      }\n    }\n    return r;\n  }\n\n\n  /**\n   * Returns node at given index\n   * @param  {number} index\n   * @return {?Node}\n   */\n  at (index) {\n    // removed after a consideration, more misleading than useful\n    // index = index % this.size;\n    // if (index < 0) index = this.size - index;\n\n    var current = this._root;\n    var s = [], done = false, i = 0;\n\n    while (!done) {\n      if (current) {\n        s.push(current);\n        current = current.left;\n      } else {\n        if (s.length > 0) {\n          current = s.pop();\n          if (i === index) return current;\n          i++;\n          current = current.right;\n        } else done = true;\n      }\n    }\n    return null;\n  }\n\n  /**\n   * Bulk-load items. Both array have to be same size\n   * @param  {Array<Key>}    keys\n   * @param  {Array<Value>}  [values]\n   * @param  {Boolean}       [presort=false] Pre-sort keys and values, using\n   *                                         tree's comparator. Sorting is done\n   *                                         in-place\n   * @return {AVLTree}\n   */\n  load(keys = [], values = [], presort = false) {\n    if (this._size !== 0) throw new Error('bulk-load: tree is not empty');\n    const size = keys.length;\n    if (presort) sort(keys, values, 0, size - 1, this._compare);\n    this._root = loadRecursive(null, keys, values, 0, size);\n    this._size = size;\n    return this;\n  }\n\n\n  min() {\n    var node = this.minNode(this._root);\n    if (node) return node.key;\n    else      return null;\n  }\n\n\n  max() {\n    var node = this.maxNode(this._root);\n    if (node) return node.key;\n    else      return null;\n  }\n\n  isEmpty() { return this._root === null; }\n  get size() { return this._size; }\n\n\n  /**\n   * Create a tree and load it with items\n   * @param  {Array<Key>}          keys\n   * @param  {Array<Value>?}        [values]\n\n   * @param  {Function?}            [comparator]\n   * @param  {Boolean?}             [presort=false] Pre-sort keys and values, using\n   *                                               tree's comparator. Sorting is done\n   *                                               in-place\n   * @param  {Boolean?}             [noDuplicates=false]   Allow duplicates\n   * @return {SplayTree}\n   */\n  static createTree(keys, values, comparator, presort, noDuplicates) {\n    return new SplayTree(comparator, noDuplicates).load(keys, values, presort);\n  }\n}\n\n\nfunction loadRecursive (parent, keys, values, start, end) {\n  const size = end - start;\n  if (size > 0) {\n    const middle = start + Math.floor(size / 2);\n    const key    = keys[middle];\n    const data   = values[middle];\n    const node   = { key, data, parent };\n    node.left    = loadRecursive(node, keys, values, start, middle);\n    node.right   = loadRecursive(node, keys, values, middle + 1, end);\n    return node;\n  }\n  return null;\n}\n\n\nfunction sort(keys, values, left, right, compare) {\n  if (left >= right) return;\n\n  const pivot = keys[(left + right) >> 1];\n  let i = left - 1;\n  let j = right + 1;\n\n  while (true) {\n    do i++; while (compare(keys[i], pivot) < 0);\n    do j--; while (compare(keys[j], pivot) > 0);\n    if (i >= j) break;\n\n    let tmp = keys[i];\n    keys[i] = keys[j];\n    keys[j] = tmp;\n\n    tmp = values[i];\n    values[i] = values[j];\n    values[j] = tmp;\n  }\n\n  sort(keys, values,  left,     j, compare);\n  sort(keys, values, j + 1, right, compare);\n}\n","export const NORMAL               = 0;\nexport const NON_CONTRIBUTING     = 1;\nexport const SAME_TRANSITION      = 2;\nexport const DIFFERENT_TRANSITION = 3;\n","export const INTERSECTION = 0;\nexport const UNION        = 1;\nexport const DIFFERENCE   = 2;\nexport const XOR          = 3;\n","import {\n  NORMAL,\n  SAME_TRANSITION,\n  DIFFERENT_TRANSITION,\n  NON_CONTRIBUTING\n} from './edge_type';\nimport {\n  INTERSECTION,\n  UNION,\n  DIFFERENCE,\n  XOR\n} from './operation';\n\n/**\n * @param  {SweepEvent} event\n * @param  {SweepEvent} prev\n * @param  {Operation} operation\n */\nexport default function computeFields (event, prev, operation) {\n  // compute inOut and otherInOut fields\n  if (prev === null) {\n    event.inOut      = false;\n    event.otherInOut = true;\n\n  // previous line segment in sweepline belongs to the same polygon\n  } else {\n    if (event.isSubject === prev.isSubject) {\n      event.inOut      = !prev.inOut;\n      event.otherInOut = prev.otherInOut;\n\n    // previous line segment in sweepline belongs to the clipping polygon\n    } else {\n      event.inOut      = !prev.otherInOut;\n      event.otherInOut = prev.isVertical() ? !prev.inOut : prev.inOut;\n    }\n\n    // compute prevInResult field\n    if (prev) {\n      event.prevInResult = (!inResult(prev, operation) || prev.isVertical())\n        ? prev.prevInResult : prev;\n    }\n  }\n\n  // check if the line segment belongs to the Boolean operation\n  event.inResult = inResult(event, operation);\n}\n\n\n/* eslint-disable indent */\nfunction inResult(event, operation) {\n  switch (event.type) {\n    case NORMAL:\n      switch (operation) {\n        case INTERSECTION:\n          return !event.otherInOut;\n        case UNION:\n          return event.otherInOut;\n        case DIFFERENCE:\n          // return (event.isSubject && !event.otherInOut) ||\n          //         (!event.isSubject && event.otherInOut);\n          return (event.isSubject && event.otherInOut) ||\n                  (!event.isSubject && !event.otherInOut);\n        case XOR:\n          return true;\n      }\n      break;\n    case SAME_TRANSITION:\n      return operation === INTERSECTION || operation === UNION;\n    case DIFFERENT_TRANSITION:\n      return operation === DIFFERENCE;\n    case NON_CONTRIBUTING:\n      return false;\n  }\n  return false;\n}\n/* eslint-enable indent */\n","import { NORMAL } from './edge_type';\n\n\nexport default class SweepEvent {\n\n\n  /**\n   * Sweepline event\n   *\n   * @class {SweepEvent}\n   * @param {Array.<Number>}  point\n   * @param {Boolean}         left\n   * @param {SweepEvent=}     otherEvent\n   * @param {Boolean}         isSubject\n   * @param {Number}          edgeType\n   */\n  constructor (point, left, otherEvent, isSubject, edgeType) {\n\n    /**\n     * Is left endpoint?\n     * @type {Boolean}\n     */\n    this.left = left;\n\n    /**\n     * @type {Array.<Number>}\n     */\n    this.point = point;\n\n    /**\n     * Other edge reference\n     * @type {SweepEvent}\n     */\n    this.otherEvent = otherEvent;\n\n    /**\n     * Belongs to source or clipping polygon\n     * @type {Boolean}\n     */\n    this.isSubject = isSubject;\n\n    /**\n     * Edge contribution type\n     * @type {Number}\n     */\n    this.type = edgeType || NORMAL;\n\n\n    /**\n     * In-out transition for the sweepline crossing polygon\n     * @type {Boolean}\n     */\n    this.inOut = false;\n\n\n    /**\n     * @type {Boolean}\n     */\n    this.otherInOut = false;\n\n    /**\n     * Previous event in result?\n     * @type {SweepEvent}\n     */\n    this.prevInResult = null;\n\n    /**\n     * Does event belong to result?\n     * @type {Boolean}\n     */\n    this.inResult = false;\n\n\n    // connection step\n\n    /**\n     * @type {Boolean}\n     */\n    this.resultInOut = false;\n\n    this.isExteriorRing = true;\n  }\n\n\n  /**\n   * @param  {Array.<Number>}  p\n   * @return {Boolean}\n   */\n  isBelow (p) {\n    const p0 = this.point, p1 = this.otherEvent.point;\n    return this.left\n      ? (p0[0] - p[0]) * (p1[1] - p[1]) - (p1[0] - p[0]) * (p0[1] - p[1]) > 0\n      // signedArea(this.point, this.otherEvent.point, p) > 0 :\n      : (p1[0] - p[0]) * (p0[1] - p[1]) - (p0[0] - p[0]) * (p1[1] - p[1]) > 0;\n      //signedArea(this.otherEvent.point, this.point, p) > 0;\n  }\n\n\n  /**\n   * @param  {Array.<Number>}  p\n   * @return {Boolean}\n   */\n  isAbove (p) {\n    return !this.isBelow(p);\n  }\n\n\n  /**\n   * @return {Boolean}\n   */\n  isVertical () {\n    return this.point[0] === this.otherEvent.point[0];\n  }\n\n\n  clone () {\n    const copy = new SweepEvent(\n      this.point, this.left, this.otherEvent, this.isSubject, this.type);\n\n    copy.inResult       = this.inResult;\n    copy.prevInResult   = this.prevInResult;\n    copy.isExteriorRing = this.isExteriorRing;\n    copy.inOut          = this.inOut;\n    copy.otherInOut     = this.otherInOut;\n\n    return copy;\n  }\n}\n","export default function equals(p1, p2) {\n  if (p1[0] === p2[0]) {\n    if (p1[1] === p2[1]) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n  return false;\n}\n\n// const EPSILON = 1e-9;\n// const abs = Math.abs;\n// TODO https://github.com/w8r/martinez/issues/6#issuecomment-262847164\n// Precision problem.\n//\n// module.exports = function equals(p1, p2) {\n//   return abs(p1[0] - p2[0]) <= EPSILON && abs(p1[1] - p2[1]) <= EPSILON;\n// };\n","/**\n * Signed area of the triangle (p0, p1, p2)\n * @param  {Array.<Number>} p0\n * @param  {Array.<Number>} p1\n * @param  {Array.<Number>} p2\n * @return {Number}\n */\nexport default function signedArea(p0, p1, p2) {\n  return (p0[0] - p2[0]) * (p1[1] - p2[1]) - (p1[0] - p2[0]) * (p0[1] - p2[1]);\n}\n","import signedArea from './signed_area';\n\n/**\n * @param  {SweepEvent} e1\n * @param  {SweepEvent} e2\n * @return {Number}\n */\nexport default function compareEvents(e1, e2) {\n  const p1 = e1.point;\n  const p2 = e2.point;\n\n  // Different x-coordinate\n  if (p1[0] > p2[0]) return 1;\n  if (p1[0] < p2[0]) return -1;\n\n  // Different points, but same x-coordinate\n  // Event with lower y-coordinate is processed first\n  if (p1[1] !== p2[1]) return p1[1] > p2[1] ? 1 : -1;\n\n  return specialCases(e1, e2, p1, p2);\n}\n\n\n/* eslint-disable no-unused-vars */\nfunction specialCases(e1, e2, p1, p2) {\n  // Same coordinates, but one is a left endpoint and the other is\n  // a right endpoint. The right endpoint is processed first\n  if (e1.left !== e2.left)\n    return e1.left ? 1 : -1;\n\n  // const p2 = e1.otherEvent.point, p3 = e2.otherEvent.point;\n  // const sa = (p1[0] - p3[0]) * (p2[1] - p3[1]) - (p2[0] - p3[0]) * (p1[1] - p3[1])\n  // Same coordinates, both events\n  // are left endpoints or right endpoints.\n  // not collinear\n  if (signedArea(p1, e1.otherEvent.point, e2.otherEvent.point) !== 0) {\n    // the event associate to the bottom segment is processed first\n    return (!e1.isBelow(e2.otherEvent.point)) ? 1 : -1;\n  }\n\n  return (!e1.isSubject && e2.isSubject) ? 1 : -1;\n}\n/* eslint-enable no-unused-vars */\n","import SweepEvent    from './sweep_event';\nimport equals        from './equals';\nimport compareEvents from './compare_events';\n\n/**\n * @param  {SweepEvent} se\n * @param  {Array.<Number>} p\n * @param  {Queue} queue\n * @return {Queue}\n */\nexport default function divideSegment(se, p, queue)  {\n  const r = new SweepEvent(p, false, se,            se.isSubject);\n  const l = new SweepEvent(p, true,  se.otherEvent, se.isSubject);\n\n  /* eslint-disable no-console */\n  if (equals(se.point, se.otherEvent.point)) {\n\n    console.warn('what is that, a collapsed segment?', se);\n  }\n  /* eslint-enable no-console */\n\n  r.contourId = l.contourId = se.contourId;\n\n  // avoid a rounding error. The left event would be processed after the right event\n  if (compareEvents(l, se.otherEvent) > 0) {\n    se.otherEvent.left = true;\n    l.left = false;\n  }\n\n  // avoid a rounding error. The left event would be processed after the right event\n  // if (compareEvents(se, r) > 0) {}\n\n  se.otherEvent.otherEvent = l;\n  se.otherEvent = r;\n\n  queue.push(l);\n  queue.push(r);\n\n  return queue;\n}\n","//const EPS = 1e-9;\n\n/**\n * Finds the magnitude of the cross product of two vectors (if we pretend\n * they're in three dimensions)\n *\n * @param {Object} a First vector\n * @param {Object} b Second vector\n * @private\n * @returns {Number} The magnitude of the cross product\n */\nfunction crossProduct(a, b) {\n  return (a[0] * b[1]) - (a[1] * b[0]);\n}\n\n/**\n * Finds the dot product of two vectors.\n *\n * @param {Object} a First vector\n * @param {Object} b Second vector\n * @private\n * @returns {Number} The dot product\n */\nfunction dotProduct(a, b) {\n  return (a[0] * b[0]) + (a[1] * b[1]);\n}\n\n/**\n * Finds the intersection (if any) between two line segments a and b, given the\n * line segments' end points a1, a2 and b1, b2.\n *\n * This algorithm is based on Schneider and Eberly.\n * http://www.cimec.org.ar/~ncalvo/Schneider_Eberly.pdf\n * Page 244.\n *\n * @param {Array.<Number>} a1 point of first line\n * @param {Array.<Number>} a2 point of first line\n * @param {Array.<Number>} b1 point of second line\n * @param {Array.<Number>} b2 point of second line\n * @param {Boolean=}       noEndpointTouch whether to skip single touchpoints\n *                                         (meaning connected segments) as\n *                                         intersections\n * @returns {Array.<Array.<Number>>|Null} If the lines intersect, the point of\n * intersection. If they overlap, the two end points of the overlapping segment.\n * Otherwise, null.\n */\nexport default function (a1, a2, b1, b2, noEndpointTouch) {\n  // The algorithm expects our lines in the form P + sd, where P is a point,\n  // s is on the interval [0, 1], and d is a vector.\n  // We are passed two points. P can be the first point of each pair. The\n  // vector, then, could be thought of as the distance (in x and y components)\n  // from the first point to the second point.\n  // So first, let's make our vectors:\n  const va = [a2[0] - a1[0], a2[1] - a1[1]];\n  const vb = [b2[0] - b1[0], b2[1] - b1[1]];\n  // We also define a function to convert back to regular point form:\n\n  /* eslint-disable arrow-body-style */\n\n  function toPoint(p, s, d) {\n    return [\n      p[0] + s * d[0],\n      p[1] + s * d[1]\n    ];\n  }\n\n  /* eslint-enable arrow-body-style */\n\n  // The rest is pretty much a straight port of the algorithm.\n  const e = [b1[0] - a1[0], b1[1] - a1[1]];\n  let kross    = crossProduct(va, vb);\n  let sqrKross = kross * kross;\n  const sqrLenA  = dotProduct(va, va);\n  //const sqrLenB  = dotProduct(vb, vb);\n\n  // Check for line intersection. This works because of the properties of the\n  // cross product -- specifically, two vectors are parallel if and only if the\n  // cross product is the 0 vector. The full calculation involves relative error\n  // to account for possible very small line segments. See Schneider & Eberly\n  // for details.\n  if (sqrKross > 0/* EPS * sqrLenB * sqLenA */) {\n    // If they're not parallel, then (because these are line segments) they\n    // still might not actually intersect. This code checks that the\n    // intersection point of the lines is actually on both line segments.\n    const s = crossProduct(e, vb) / kross;\n    if (s < 0 || s > 1) {\n      // not on line segment a\n      return null;\n    }\n    const t = crossProduct(e, va) / kross;\n    if (t < 0 || t > 1) {\n      // not on line segment b\n      return null;\n    }\n    if (s === 0 || s === 1) {\n      // on an endpoint of line segment a\n      return noEndpointTouch ? null : [toPoint(a1, s, va)];\n    }\n    if (t === 0 || t === 1) {\n      // on an endpoint of line segment b\n      return noEndpointTouch ? null : [toPoint(b1, t, vb)];\n    }\n    return [toPoint(a1, s, va)];\n  }\n\n  // If we've reached this point, then the lines are either parallel or the\n  // same, but the segments could overlap partially or fully, or not at all.\n  // So we need to find the overlap, if any. To do that, we can use e, which is\n  // the (vector) difference between the two initial points. If this is parallel\n  // with the line itself, then the two lines are the same line, and there will\n  // be overlap.\n  //const sqrLenE = dotProduct(e, e);\n  kross = crossProduct(e, va);\n  sqrKross = kross * kross;\n\n  if (sqrKross > 0 /* EPS * sqLenB * sqLenE */) {\n  // Lines are just parallel, not the same. No overlap.\n    return null;\n  }\n\n  const sa = dotProduct(va, e) / sqrLenA;\n  const sb = sa + dotProduct(va, vb) / sqrLenA;\n  const smin = Math.min(sa, sb);\n  const smax = Math.max(sa, sb);\n\n  // this is, essentially, the FindIntersection acting on floats from\n  // Schneider & Eberly, just inlined into this function.\n  if (smin <= 1 && smax >= 0) {\n\n    // overlap on an end point\n    if (smin === 1) {\n      return noEndpointTouch ? null : [toPoint(a1, smin > 0 ? smin : 0, va)];\n    }\n\n    if (smax === 0) {\n      return noEndpointTouch ? null : [toPoint(a1, smax < 1 ? smax : 1, va)];\n    }\n\n    if (noEndpointTouch && smin === 0 && smax === 1) return null;\n\n    // There's overlap on a segment -- two points of intersection. Return both.\n    return [\n      toPoint(a1, smin > 0 ? smin : 0, va),\n      toPoint(a1, smax < 1 ? smax : 1, va)\n    ];\n  }\n\n  return null;\n}\n","import divideSegment from './divide_segment';\nimport intersection  from './segment_intersection';\nimport equals        from './equals';\nimport compareEvents from './compare_events';\nimport {\n  NON_CONTRIBUTING,\n  SAME_TRANSITION,\n  DIFFERENT_TRANSITION\n} from './edge_type';\n\n/**\n * @param  {SweepEvent} se1\n * @param  {SweepEvent} se2\n * @param  {Queue}      queue\n * @return {Number}\n */\nexport default function possibleIntersection (se1, se2, queue) {\n  // that disallows self-intersecting polygons,\n  // did cost us half a day, so I'll leave it\n  // out of respect\n  // if (se1.isSubject === se2.isSubject) return;\n  const inter = intersection(\n    se1.point, se1.otherEvent.point,\n    se2.point, se2.otherEvent.point\n  );\n\n  const nintersections = inter ? inter.length : 0;\n  if (nintersections === 0) return 0; // no intersection\n\n  // the line segments intersect at an endpoint of both line segments\n  if ((nintersections === 1) &&\n      (equals(se1.point, se2.point) ||\n       equals(se1.otherEvent.point, se2.otherEvent.point))) {\n    return 0;\n  }\n\n  if (nintersections === 2 && se1.isSubject === se2.isSubject) {\n    // if(se1.contourId === se2.contourId){\n    // console.warn('Edges of the same polygon overlap',\n    //   se1.point, se1.otherEvent.point, se2.point, se2.otherEvent.point);\n    // }\n    //throw new Error('Edges of the same polygon overlap');\n    return 0;\n  }\n\n  // The line segments associated to se1 and se2 intersect\n  if (nintersections === 1) {\n\n    // if the intersection point is not an endpoint of se1\n    if (!equals(se1.point, inter[0]) && !equals(se1.otherEvent.point, inter[0])) {\n      divideSegment(se1, inter[0], queue);\n    }\n\n    // if the intersection point is not an endpoint of se2\n    if (!equals(se2.point, inter[0]) && !equals(se2.otherEvent.point, inter[0])) {\n      divideSegment(se2, inter[0], queue);\n    }\n    return 1;\n  }\n\n  // The line segments associated to se1 and se2 overlap\n  const events        = [];\n  let leftCoincide  = false;\n  let rightCoincide = false;\n\n  if (equals(se1.point, se2.point)) {\n    leftCoincide = true; // linked\n  } else if (compareEvents(se1, se2) === 1) {\n    events.push(se2, se1);\n  } else {\n    events.push(se1, se2);\n  }\n\n  if (equals(se1.otherEvent.point, se2.otherEvent.point)) {\n    rightCoincide = true;\n  } else if (compareEvents(se1.otherEvent, se2.otherEvent) === 1) {\n    events.push(se2.otherEvent, se1.otherEvent);\n  } else {\n    events.push(se1.otherEvent, se2.otherEvent);\n  }\n\n  if ((leftCoincide && rightCoincide) || leftCoincide) {\n    // both line segments are equal or share the left endpoint\n    se2.type = NON_CONTRIBUTING;\n    se1.type = (se2.inOut === se1.inOut)\n      ? SAME_TRANSITION : DIFFERENT_TRANSITION;\n\n    if (leftCoincide && !rightCoincide) {\n      // honestly no idea, but changing events selection from [2, 1]\n      // to [0, 1] fixes the overlapping self-intersecting polygons issue\n      divideSegment(events[1].otherEvent, events[0].point, queue);\n    }\n    return 2;\n  }\n\n  // the line segments share the right endpoint\n  if (rightCoincide) {\n    divideSegment(events[0], events[1].point, queue);\n    return 3;\n  }\n\n  // no line segment includes totally the other one\n  if (events[0] !== events[3].otherEvent) {\n    divideSegment(events[0], events[1].point, queue);\n    divideSegment(events[1], events[2].point, queue);\n    return 3;\n  }\n\n  // one line segment includes the other one\n  divideSegment(events[0], events[1].point, queue);\n  divideSegment(events[3].otherEvent, events[2].point, queue);\n\n  return 3;\n}\n","import signedArea    from './signed_area';\nimport compareEvents from './compare_events';\nimport equals        from './equals';\n\n\n/**\n * @param  {SweepEvent} le1\n * @param  {SweepEvent} le2\n * @return {Number}\n */\nexport default function compareSegments(le1, le2) {\n  if (le1 === le2) return 0;\n\n  // Segments are not collinear\n  if (signedArea(le1.point, le1.otherEvent.point, le2.point) !== 0 ||\n    signedArea(le1.point, le1.otherEvent.point, le2.otherEvent.point) !== 0) {\n\n    // If they share their left endpoint use the right endpoint to sort\n    if (equals(le1.point, le2.point)) return le1.isBelow(le2.otherEvent.point) ? -1 : 1;\n\n    // Different left endpoint: use the left endpoint to sort\n    if (le1.point[0] === le2.point[0]) return le1.point[1] < le2.point[1] ? -1 : 1;\n\n    // has the line segment associated to e1 been inserted\n    // into S after the line segment associated to e2 ?\n    if (compareEvents(le1, le2) === 1) return le2.isAbove(le1.point) ? -1 : 1;\n\n    // The line segment associated to e2 has been inserted\n    // into S after the line segment associated to e1\n    return le1.isBelow(le2.point) ? -1 : 1;\n  }\n\n  if (le1.isSubject === le2.isSubject) { // same polygon\n    let p1 = le1.point, p2 = le2.point;\n    if (p1[0] === p2[0] && p1[1] === p2[1]/*equals(le1.point, le2.point)*/) {\n      p1 = le1.otherEvent.point; p2 = le2.otherEvent.point;\n      if (p1[0] === p2[0] && p1[1] === p2[1]) return 0;\n      else return le1.contourId > le2.contourId ? 1 : -1;\n    }\n  } else { // Segments are collinear, but belong to separate polygons\n    return le1.isSubject ? -1 : 1;\n  }\n\n  return compareEvents(le1, le2) === 1 ? 1 : -1;\n}\n","import compareEvents from './compare_events';\nimport { DIFFERENCE } from './operation';\n\n/**\n * @param  {Array.<SweepEvent>} sortedEvents\n * @return {Array.<SweepEvent>}\n */\nfunction orderEvents(sortedEvents) {\n  let event, i, len, tmp;\n  const resultEvents = [];\n  for (i = 0, len = sortedEvents.length; i < len; i++) {\n    event = sortedEvents[i];\n    if ((event.left && event.inResult) ||\n      (!event.left && event.otherEvent.inResult)) {\n      resultEvents.push(event);\n    }\n  }\n  // Due to overlapping edges the resultEvents array can be not wholly sorted\n  let sorted = false;\n  while (!sorted) {\n    sorted = true;\n    for (i = 0, len = resultEvents.length; i < len; i++) {\n      if ((i + 1) < len &&\n        compareEvents(resultEvents[i], resultEvents[i + 1]) === 1) {\n        tmp = resultEvents[i];\n        resultEvents[i] = resultEvents[i + 1];\n        resultEvents[i + 1] = tmp;\n        sorted = false;\n      }\n    }\n  }\n\n\n  for (i = 0, len = resultEvents.length; i < len; i++) {\n    event = resultEvents[i];\n    event.pos = i;\n  }\n\n  // imagine, the right event is found in the beginning of the queue,\n  // when his left counterpart is not marked yet\n  for (i = 0, len = resultEvents.length; i < len; i++) {\n    event = resultEvents[i];\n    if (!event.left) {\n      tmp = event.pos;\n      event.pos = event.otherEvent.pos;\n      event.otherEvent.pos = tmp;\n    }\n  }\n\n  return resultEvents;\n}\n\n\n/**\n * @param  {Number} pos\n * @param  {Array.<SweepEvent>} resultEvents\n * @param  {Object>}    processed\n * @return {Number}\n */\nfunction nextPos(pos, resultEvents, processed, origIndex) {\n  let p, p1;\n  let newPos = pos + 1;\n  const length = resultEvents.length;\n\n  p  = resultEvents[pos].point;\n\n  if (newPos < length)\n    p1 = resultEvents[newPos].point;\n\n\n  // while in range and not the current one by value\n  while (newPos < length && p1[0] === p[0] && p1[1] === p[1]) {\n    if (!processed[newPos]) {\n      return newPos;\n    } else   {\n      newPos++;\n    }\n    p1 = resultEvents[newPos].point;\n  }\n\n  newPos = pos - 1;\n\n  while (processed[newPos] && newPos >= origIndex) {\n    newPos--;\n  }\n  return newPos;\n}\n\n\n/**\n * @param  {Array.<SweepEvent>} sortedEvents\n * @return {Array.<*>} polygons\n */\nexport default function connectEdges(sortedEvents, operation) {\n  let i, len;\n  const resultEvents = orderEvents(sortedEvents);\n\n  // \"false\"-filled array\n  const processed = {};\n  const result = [];\n  let event;\n\n  for (i = 0, len = resultEvents.length; i < len; i++) {\n    if (processed[i]) continue;\n    const contour = [[]];\n\n    if (!resultEvents[i].isExteriorRing) {\n      if (operation === DIFFERENCE && !resultEvents[i].isSubject && result.length === 0) {\n        result.push(contour);\n      } else if (result.length === 0) {\n        result.push([[contour]]);\n      } else {\n        result[result.length - 1].push(contour[0]);\n      }\n    } else if (operation === DIFFERENCE && !resultEvents[i].isSubject && result.length > 1) {\n      result[result.length - 1].push(contour[0]);\n    } else {\n      result.push(contour);\n    }\n\n    const ringId = result.length - 1;\n    let pos = i;\n\n    const initial = resultEvents[i].point;\n    contour[0].push(initial);\n\n    while (pos >= i) {\n      event = resultEvents[pos];\n      processed[pos] = true;\n\n      if (event.left) {\n        event.resultInOut = false;\n        event.contourId   = ringId;\n      } else {\n        event.otherEvent.resultInOut = true;\n        event.otherEvent.contourId   = ringId;\n      }\n\n      pos = event.pos;\n      processed[pos] = true;\n      contour[0].push(resultEvents[pos].point);\n      pos = nextPos(pos, resultEvents, processed, i);\n    }\n\n    pos = pos === -1 ? i : pos;\n\n    event = resultEvents[pos];\n    processed[pos] = processed[event.pos] = true;\n    event.otherEvent.resultInOut = true;\n    event.otherEvent.contourId   = ringId;\n  }\n\n  // Handle if the result is a polygon (eg not multipoly)\n  // Commented it again, let's see what do we mean by that\n  // if (result.length === 1) result = result[0];\n  return result;\n}\n","'use strict';\n\nmodule.exports = TinyQueue;\nmodule.exports.default = TinyQueue;\n\nfunction TinyQueue(data, compare) {\n    if (!(this instanceof TinyQueue)) return new TinyQueue(data, compare);\n\n    this.data = data || [];\n    this.length = this.data.length;\n    this.compare = compare || defaultCompare;\n\n    if (this.length > 0) {\n        for (var i = (this.length >> 1) - 1; i >= 0; i--) this._down(i);\n    }\n}\n\nfunction defaultCompare(a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n}\n\nTinyQueue.prototype = {\n\n    push: function (item) {\n        this.data.push(item);\n        this.length++;\n        this._up(this.length - 1);\n    },\n\n    pop: function () {\n        if (this.length === 0) return undefined;\n\n        var top = this.data[0];\n        this.length--;\n\n        if (this.length > 0) {\n            this.data[0] = this.data[this.length];\n            this._down(0);\n        }\n        this.data.pop();\n\n        return top;\n    },\n\n    peek: function () {\n        return this.data[0];\n    },\n\n    _up: function (pos) {\n        var data = this.data;\n        var compare = this.compare;\n        var item = data[pos];\n\n        while (pos > 0) {\n            var parent = (pos - 1) >> 1;\n            var current = data[parent];\n            if (compare(item, current) >= 0) break;\n            data[pos] = current;\n            pos = parent;\n        }\n\n        data[pos] = item;\n    },\n\n    _down: function (pos) {\n        var data = this.data;\n        var compare = this.compare;\n        var halfLength = this.length >> 1;\n        var item = data[pos];\n\n        while (pos < halfLength) {\n            var left = (pos << 1) + 1;\n            var right = left + 1;\n            var best = data[left];\n\n            if (right < this.length && compare(data[right], best) < 0) {\n                left = right;\n                best = data[right];\n            }\n            if (compare(best, item) >= 0) break;\n\n            data[pos] = best;\n            pos = left;\n        }\n\n        data[pos] = item;\n    }\n};\n","import Queue           from 'tinyqueue';\nimport SweepEvent      from './sweep_event';\nimport compareEvents   from './compare_events';\nimport { DIFFERENCE }  from './operation';\n\nconst max = Math.max;\nconst min = Math.min;\n\nlet contourId = 0;\n\n\nfunction processPolygon(contourOrHole, isSubject, depth, Q, bbox, isExteriorRing) {\n  let i, len, s1, s2, e1, e2;\n  for (i = 0, len = contourOrHole.length - 1; i < len; i++) {\n    s1 = contourOrHole[i];\n    s2 = contourOrHole[i + 1];\n    e1 = new SweepEvent(s1, false, undefined, isSubject);\n    e2 = new SweepEvent(s2, false, e1,        isSubject);\n    e1.otherEvent = e2;\n\n    if (s1[0] === s2[0] && s1[1] === s2[1]) {\n      continue; // skip collapsed edges, or it breaks\n    }\n\n    e1.contourId = e2.contourId = depth;\n    if (!isExteriorRing) {\n      e1.isExteriorRing = false;\n      e2.isExteriorRing = false;\n    }\n    if (compareEvents(e1, e2) > 0) {\n      e2.left = true;\n    } else {\n      e1.left = true;\n    }\n\n    const x = s1[0], y = s1[1];\n    bbox[0] = min(bbox[0], x);\n    bbox[1] = min(bbox[1], y);\n    bbox[2] = max(bbox[2], x);\n    bbox[3] = max(bbox[3], y);\n\n    // Pushing it so the queue is sorted from left to right,\n    // with object on the left having the highest priority.\n    Q.push(e1);\n    Q.push(e2);\n  }\n}\n\n\nexport default function fillQueue(subject, clipping, sbbox, cbbox, operation) {\n  const eventQueue = new Queue(null, compareEvents);\n  let polygonSet, isExteriorRing, i, ii, j, jj; //, k, kk;\n\n  for (i = 0, ii = subject.length; i < ii; i++) {\n    polygonSet = subject[i];\n    for (j = 0, jj = polygonSet.length; j < jj; j++) {\n      isExteriorRing = j === 0;\n      if (isExteriorRing) contourId++;\n      processPolygon(polygonSet[j], true, contourId, eventQueue, sbbox, isExteriorRing);\n    }\n  }\n\n  for (i = 0, ii = clipping.length; i < ii; i++) {\n    polygonSet = clipping[i];\n    for (j = 0, jj = polygonSet.length; j < jj; j++) {\n      isExteriorRing = j === 0;\n      if (operation === DIFFERENCE) isExteriorRing = false;\n      if (isExteriorRing) contourId++;\n      processPolygon(polygonSet[j], false, contourId, eventQueue, cbbox, isExteriorRing);\n    }\n  }\n\n  return eventQueue;\n}\n","import subdivideSegments from './subdivide_segments';\nimport connectEdges      from './connect_edges';\nimport fillQueue         from './fill_queue';\nimport {\n  INTERSECTION,\n  DIFFERENCE,\n  UNION,\n  XOR\n}        from './operation';\n\nconst EMPTY = [];\n\n\nfunction trivialOperation(subject, clipping, operation) {\n  let result = null;\n  if (subject.length * clipping.length === 0) {\n    if        (operation === INTERSECTION) {\n      result = EMPTY;\n    } else if (operation === DIFFERENCE) {\n      result = subject;\n    } else if (operation === UNION ||\n               operation === XOR) {\n      result = (subject.length === 0) ? clipping : subject;\n    }\n  }\n  return result;\n}\n\n\nfunction compareBBoxes(subject, clipping, sbbox, cbbox, operation) {\n  let result = null;\n  if (sbbox[0] > cbbox[2] ||\n      cbbox[0] > sbbox[2] ||\n      sbbox[1] > cbbox[3] ||\n      cbbox[1] > sbbox[3]) {\n    if        (operation === INTERSECTION) {\n      result = EMPTY;\n    } else if (operation === DIFFERENCE) {\n      result = subject;\n    } else if (operation === UNION ||\n               operation === XOR) {\n      result = subject.concat(clipping);\n    }\n  }\n  return result;\n}\n\n\nexport default function boolean(subject, clipping, operation) {\n  if (typeof subject[0][0][0] === 'number') {\n    subject = [subject];\n  }\n  if (typeof clipping[0][0][0] === 'number') {\n    clipping = [clipping];\n  }\n  let trivial = trivialOperation(subject, clipping, operation);\n  if (trivial) {\n    return trivial === EMPTY ? null : trivial;\n  }\n  const sbbox = [Infinity, Infinity, -Infinity, -Infinity];\n  const cbbox = [Infinity, Infinity, -Infinity, -Infinity];\n\n  //console.time('fill queue');\n  const eventQueue = fillQueue(subject, clipping, sbbox, cbbox, operation);\n  //console.timeEnd('fill queue');\n\n  trivial = compareBBoxes(subject, clipping, sbbox, cbbox, operation);\n  if (trivial) {\n    return trivial === EMPTY ? null : trivial;\n  }\n  //console.time('subdivide edges');\n  const sortedEvents = subdivideSegments(eventQueue, subject, clipping, sbbox, cbbox, operation);\n  //console.timeEnd('subdivide edges');\n\n  //console.time('connect vertices');\n  const result = connectEdges(sortedEvents, operation);\n  //console.timeEnd('connect vertices');\n  return result;\n}\n","import Tree                 from 'splaytree';\nimport computeFields        from './compute_fields';\nimport possibleIntersection from './possible_intersection';\nimport compareSegments      from './compare_segments';\nimport {\n  INTERSECTION,\n  DIFFERENCE\n} from './operation';\n\n\nexport default function subdivide(eventQueue, subject, clipping, sbbox, cbbox, operation) {\n  const sweepLine = new Tree(compareSegments);\n  const sortedEvents = [];\n\n  const rightbound = Math.min(sbbox[2], cbbox[2]);\n\n  let prev, next, begin;\n\n  while (eventQueue.length !== 0) {\n    let event = eventQueue.pop();\n    sortedEvents.push(event);\n\n    // optimization by bboxes for intersection and difference goes here\n    if ((operation === INTERSECTION && event.point[0] > rightbound) ||\n        (operation === DIFFERENCE   && event.point[0] > sbbox[2])) {\n      break;\n    }\n\n    if (event.left) {\n      next  = prev = sweepLine.insert(event);\n      begin = sweepLine.minNode();\n\n      if (prev !== begin) prev = sweepLine.prev(prev);\n      else                prev = null;\n\n      next = sweepLine.next(next);\n\n      const prevEvent = prev ? prev.key : null;\n      let prevprevEvent;\n      computeFields(event, prevEvent, operation);\n      if (next) {\n        if (possibleIntersection(event, next.key, eventQueue) === 2) {\n          computeFields(event, prevEvent, operation);\n          computeFields(event, next.key, operation);\n        }\n      }\n\n      if (prev) {\n        if (possibleIntersection(prev.key, event, eventQueue) === 2) {\n          let prevprev = prev;\n          if (prevprev !== begin) prevprev = sweepLine.prev(prevprev);\n          else                    prevprev = null;\n\n          prevprevEvent = prevprev ? prevprev.key : null;\n          computeFields(prevEvent, prevprevEvent, operation);\n          computeFields(event,     prevEvent,     operation);\n        }\n      }\n    } else {\n      event = event.otherEvent;\n      next = prev = sweepLine.find(event);\n\n      if (prev && next) {\n\n        if (prev !== begin) prev = sweepLine.prev(prev);\n        else                prev = null;\n\n        next = sweepLine.next(next);\n        sweepLine.remove(event);\n\n        if (next && prev) {\n          possibleIntersection(prev.key, next.key, eventQueue);\n        }\n      }\n    }\n  }\n  return sortedEvents;\n}\n","/* Polyfill service v3.13.0\n * For detailed credits and licence information see http://github.com/financial-times/polyfill-service\n *\n * - Array.prototype.fill, License: CC0 */\n\nif (!('fill' in Array.prototype)) {\n  Object.defineProperty(Array.prototype, 'fill', {\n    configurable: true,\n    value: function fill (value) {\n      if (this === undefined || this === null) {\n        throw new TypeError(this + ' is not an object')\n      }\n\n      var arrayLike = Object(this);\n\n      var length = Math.max(Math.min(arrayLike.length, 9007199254740991), 0) || 0;\n\n      var relativeStart = 1 in arguments ? parseInt(Number(arguments[1]), 10) || 0 : 0;\n\n      relativeStart = relativeStart < 0 ? Math.max(length + relativeStart, 0) : Math.min(relativeStart, length);\n\n      var relativeEnd = 2 in arguments && arguments[2] !== undefined ? parseInt(Number(arguments[2]), 10) || 0 : length;\n\n      relativeEnd = relativeEnd < 0 ? Math.max(length + arguments[2], 0) : Math.min(relativeEnd, length);\n\n      while (relativeStart < relativeEnd) {\n        arrayLike[relativeStart] = value;\n\n        ++relativeStart;\n      }\n\n      return arrayLike\n    },\n    writable: true\n  });\n}\n\n/**\n * Polyfill for IE support\n */\nNumber.isFinite = Number.isFinite || function (value) {\n  return typeof value === 'number' && isFinite(value)\n};\n\nNumber.isInteger = Number.isInteger || function (val) {\n  return typeof val === 'number' &&\n  isFinite(val) &&\n  Math.floor(val) === val\n};\n\nNumber.parseFloat = Number.parseFloat || parseFloat;\n\nNumber.isNaN = Number.isNaN || function (value) {\n  return value !== value // eslint-disable-line\n};\n\n/**\n * Polyfill for IE support\n */\nMath.trunc = Math.trunc || function (x) {\n  return x < 0 ? Math.ceil(x) : Math.floor(x)\n};\n\nvar NumberUtil = function NumberUtil () {};\n\nNumberUtil.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nNumberUtil.prototype.getClass = function getClass () {\n  return NumberUtil\n};\nNumberUtil.prototype.equalsWithTolerance = function equalsWithTolerance (x1, x2, tolerance) {\n  return Math.abs(x1 - x2) <= tolerance\n};\n\nvar IllegalArgumentException = (function (Error) {\n\tfunction IllegalArgumentException (message) {\n\t\tError.call(this, message);\n\t\tthis.name = 'IllegalArgumentException';\n\t\tthis.message = message;\n\t\tthis.stack = (new Error()).stack;\n\t}\n\n\tif ( Error ) IllegalArgumentException.__proto__ = Error;\n\tIllegalArgumentException.prototype = Object.create( Error && Error.prototype );\n\tIllegalArgumentException.prototype.constructor = IllegalArgumentException;\n\n\treturn IllegalArgumentException;\n}(Error));\n\nvar Double = function Double () {};\n\nvar staticAccessors$1 = { MAX_VALUE: { configurable: true } };\n\nDouble.isNaN = function isNaN (n) { return Number.isNaN(n) };\nDouble.doubleToLongBits = function doubleToLongBits (n) { return n };\nDouble.longBitsToDouble = function longBitsToDouble (n) { return n };\nDouble.isInfinite = function isInfinite (n) { return !Number.isFinite(n) };\nstaticAccessors$1.MAX_VALUE.get = function () { return Number.MAX_VALUE };\n\nObject.defineProperties( Double, staticAccessors$1 );\n\nvar Comparable = function Comparable () {};\n\nvar Clonable = function Clonable () {};\n\nvar Comparator = function Comparator () {};\n\nfunction Serializable () {}\n\n// import Assert from '../util/Assert'\n\nvar Coordinate = function Coordinate () {\n  this.x = null;\n  this.y = null;\n  this.z = null;\n  if (arguments.length === 0) {\n    this.x = 0.0;\n    this.y = 0.0;\n    this.z = Coordinate.NULL_ORDINATE;\n  } else if (arguments.length === 1) {\n    var c = arguments[0];\n    this.x = c.x;\n    this.y = c.y;\n    this.z = c.z;\n  } else if (arguments.length === 2) {\n    this.x = arguments[0];\n    this.y = arguments[1];\n    this.z = Coordinate.NULL_ORDINATE;\n  } else if (arguments.length === 3) {\n    this.x = arguments[0];\n    this.y = arguments[1];\n    this.z = arguments[2];\n  }\n};\n\nvar staticAccessors = { DimensionalComparator: { configurable: true },serialVersionUID: { configurable: true },NULL_ORDINATE: { configurable: true },X: { configurable: true },Y: { configurable: true },Z: { configurable: true } };\nCoordinate.prototype.setOrdinate = function setOrdinate (ordinateIndex, value) {\n  switch (ordinateIndex) {\n    case Coordinate.X:\n      this.x = value;\n      break\n    case Coordinate.Y:\n      this.y = value;\n      break\n    case Coordinate.Z:\n      this.z = value;\n      break\n    default:\n      throw new IllegalArgumentException('Invalid ordinate index: ' + ordinateIndex)\n  }\n};\nCoordinate.prototype.equals2D = function equals2D () {\n  if (arguments.length === 1) {\n    var other = arguments[0];\n    if (this.x !== other.x) {\n      return false\n    }\n    if (this.y !== other.y) {\n      return false\n    }\n    return true\n  } else if (arguments.length === 2) {\n    var c = arguments[0];\n    var tolerance = arguments[1];\n    if (!NumberUtil.equalsWithTolerance(this.x, c.x, tolerance)) {\n      return false\n    }\n    if (!NumberUtil.equalsWithTolerance(this.y, c.y, tolerance)) {\n      return false\n    }\n    return true\n  }\n};\nCoordinate.prototype.getOrdinate = function getOrdinate (ordinateIndex) {\n  switch (ordinateIndex) {\n    case Coordinate.X:\n      return this.x\n    case Coordinate.Y:\n      return this.y\n    case Coordinate.Z:\n      return this.z\n    default:\n  }\n  throw new IllegalArgumentException('Invalid ordinate index: ' + ordinateIndex)\n};\nCoordinate.prototype.equals3D = function equals3D (other) {\n  return this.x === other.x &&\n         this.y === other.y &&\n         ((this.z === other.z || Double.isNaN(this.z)) &&\n         Double.isNaN(other.z))\n};\nCoordinate.prototype.equals = function equals (other) {\n  if (!(other instanceof Coordinate)) {\n    return false\n  }\n  return this.equals2D(other)\n};\nCoordinate.prototype.equalInZ = function equalInZ (c, tolerance) {\n  return NumberUtil.equalsWithTolerance(this.z, c.z, tolerance)\n};\nCoordinate.prototype.compareTo = function compareTo (o) {\n  var other = o;\n  if (this.x < other.x) { return -1 }\n  if (this.x > other.x) { return 1 }\n  if (this.y < other.y) { return -1 }\n  if (this.y > other.y) { return 1 }\n  return 0\n};\nCoordinate.prototype.clone = function clone () {\n  // try {\n  // var coord = null\n  // return coord\n  // } catch (e) {\n  // if (e instanceof CloneNotSupportedException) {\n  //   Assert.shouldNeverReachHere(\"this shouldn't happen because this class is Cloneable\")\n  //   return null\n  // } else throw e\n  // } finally {}\n};\nCoordinate.prototype.copy = function copy () {\n  return new Coordinate(this)\n};\nCoordinate.prototype.toString = function toString () {\n  return '(' + this.x + ', ' + this.y + ', ' + this.z + ')'\n};\nCoordinate.prototype.distance3D = function distance3D (c) {\n  var dx = this.x - c.x;\n  var dy = this.y - c.y;\n  var dz = this.z - c.z;\n  return Math.sqrt(dx * dx + dy * dy + dz * dz)\n};\nCoordinate.prototype.distance = function distance (c) {\n  var dx = this.x - c.x;\n  var dy = this.y - c.y;\n  return Math.sqrt(dx * dx + dy * dy)\n};\nCoordinate.prototype.hashCode = function hashCode () {\n  var result = 17;\n  result = 37 * result + Coordinate.hashCode(this.x);\n  result = 37 * result + Coordinate.hashCode(this.y);\n  return result\n};\nCoordinate.prototype.setCoordinate = function setCoordinate (other) {\n  this.x = other.x;\n  this.y = other.y;\n  this.z = other.z;\n};\nCoordinate.prototype.interfaces_ = function interfaces_ () {\n  return [Comparable, Clonable, Serializable]\n};\nCoordinate.prototype.getClass = function getClass () {\n  return Coordinate\n};\nCoordinate.hashCode = function hashCode () {\n  if (arguments.length === 1) {\n    var x = arguments[0];\n    var f = Double.doubleToLongBits(x);\n    return Math.trunc((f ^ f) >>> 32)\n  }\n};\nstaticAccessors.DimensionalComparator.get = function () { return DimensionalComparator };\nstaticAccessors.serialVersionUID.get = function () { return 6683108902428366910 };\nstaticAccessors.NULL_ORDINATE.get = function () { return Double.NaN };\nstaticAccessors.X.get = function () { return 0 };\nstaticAccessors.Y.get = function () { return 1 };\nstaticAccessors.Z.get = function () { return 2 };\n\nObject.defineProperties( Coordinate, staticAccessors );\n\nvar DimensionalComparator = function DimensionalComparator (dimensionsToTest) {\n  this._dimensionsToTest = 2;\n  if (arguments.length === 0) {} else if (arguments.length === 1) {\n    var dimensionsToTest$1 = arguments[0];\n    if (dimensionsToTest$1 !== 2 && dimensionsToTest$1 !== 3) { throw new IllegalArgumentException('only 2 or 3 dimensions may be specified') }\n    this._dimensionsToTest = dimensionsToTest$1;\n  }\n};\nDimensionalComparator.prototype.compare = function compare (o1, o2) {\n  var c1 = o1;\n  var c2 = o2;\n  var compX = DimensionalComparator.compare(c1.x, c2.x);\n  if (compX !== 0) { return compX }\n  var compY = DimensionalComparator.compare(c1.y, c2.y);\n  if (compY !== 0) { return compY }\n  if (this._dimensionsToTest <= 2) { return 0 }\n  var compZ = DimensionalComparator.compare(c1.z, c2.z);\n  return compZ\n};\nDimensionalComparator.prototype.interfaces_ = function interfaces_ () {\n  return [Comparator]\n};\nDimensionalComparator.prototype.getClass = function getClass () {\n  return DimensionalComparator\n};\nDimensionalComparator.compare = function compare (a, b) {\n  if (a < b) { return -1 }\n  if (a > b) { return 1 }\n  if (Double.isNaN(a)) {\n    if (Double.isNaN(b)) { return 0 }\n    return -1\n  }\n  if (Double.isNaN(b)) { return 1 }\n  return 0\n};\n\n// import hasInterface from '../../../../hasInterface'\n// import CoordinateSequence from './CoordinateSequence'\n\nvar CoordinateSequenceFactory = function CoordinateSequenceFactory () {};\n\nCoordinateSequenceFactory.prototype.create = function create () {\n  // if (arguments.length === 1) {\n  // if (arguments[0] instanceof Array) {\n  //   let coordinates = arguments[0]\n  // } else if (hasInterface(arguments[0], CoordinateSequence)) {\n  //   let coordSeq = arguments[0]\n  // }\n  // } else if (arguments.length === 2) {\n  // let size = arguments[0]\n  // let dimension = arguments[1]\n  // }\n};\nCoordinateSequenceFactory.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nCoordinateSequenceFactory.prototype.getClass = function getClass () {\n  return CoordinateSequenceFactory\n};\n\nvar Location = function Location () {};\n\nvar staticAccessors$4 = { INTERIOR: { configurable: true },BOUNDARY: { configurable: true },EXTERIOR: { configurable: true },NONE: { configurable: true } };\n\nLocation.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nLocation.prototype.getClass = function getClass () {\n  return Location\n};\nLocation.toLocationSymbol = function toLocationSymbol (locationValue) {\n  switch (locationValue) {\n    case Location.EXTERIOR:\n      return 'e'\n    case Location.BOUNDARY:\n      return 'b'\n    case Location.INTERIOR:\n      return 'i'\n    case Location.NONE:\n      return '-'\n    default:\n  }\n  throw new IllegalArgumentException('Unknown location value: ' + locationValue)\n};\nstaticAccessors$4.INTERIOR.get = function () { return 0 };\nstaticAccessors$4.BOUNDARY.get = function () { return 1 };\nstaticAccessors$4.EXTERIOR.get = function () { return 2 };\nstaticAccessors$4.NONE.get = function () { return -1 };\n\nObject.defineProperties( Location, staticAccessors$4 );\n\nvar hasInterface = function (o, i) {\n  return o.interfaces_ && o.interfaces_().indexOf(i) > -1\n};\n\nvar MathUtil = function MathUtil () {};\n\nvar staticAccessors$5 = { LOG_10: { configurable: true } };\n\nMathUtil.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nMathUtil.prototype.getClass = function getClass () {\n  return MathUtil\n};\nMathUtil.log10 = function log10 (x) {\n  var ln = Math.log(x);\n  if (Double.isInfinite(ln)) { return ln }\n  if (Double.isNaN(ln)) { return ln }\n  return ln / MathUtil.LOG_10\n};\nMathUtil.min = function min (v1, v2, v3, v4) {\n  var min = v1;\n  if (v2 < min) { min = v2; }\n  if (v3 < min) { min = v3; }\n  if (v4 < min) { min = v4; }\n  return min\n};\nMathUtil.clamp = function clamp () {\n  if (typeof arguments[2] === 'number' && (typeof arguments[0] === 'number' && typeof arguments[1] === 'number')) {\n    var x = arguments[0];\n    var min = arguments[1];\n    var max = arguments[2];\n    if (x < min) { return min }\n    if (x > max) { return max }\n    return x\n  } else if (Number.isInteger(arguments[2]) && (Number.isInteger(arguments[0]) && Number.isInteger(arguments[1]))) {\n    var x$1 = arguments[0];\n    var min$1 = arguments[1];\n    var max$1 = arguments[2];\n    if (x$1 < min$1) { return min$1 }\n    if (x$1 > max$1) { return max$1 }\n    return x$1\n  }\n};\nMathUtil.wrap = function wrap (index, max) {\n  if (index < 0) {\n    return max - -index % max\n  }\n  return index % max\n};\nMathUtil.max = function max () {\n  if (arguments.length === 3) {\n    var v1 = arguments[0];\n    var v2 = arguments[1];\n    var v3 = arguments[2];\n    var max = v1;\n    if (v2 > max) { max = v2; }\n    if (v3 > max) { max = v3; }\n    return max\n  } else if (arguments.length === 4) {\n    var v1$1 = arguments[0];\n    var v2$1 = arguments[1];\n    var v3$1 = arguments[2];\n    var v4 = arguments[3];\n    var max$1 = v1$1;\n    if (v2$1 > max$1) { max$1 = v2$1; }\n    if (v3$1 > max$1) { max$1 = v3$1; }\n    if (v4 > max$1) { max$1 = v4; }\n    return max$1\n  }\n};\nMathUtil.average = function average (x1, x2) {\n  return (x1 + x2) / 2.0\n};\nstaticAccessors$5.LOG_10.get = function () { return Math.log(10) };\n\nObject.defineProperties( MathUtil, staticAccessors$5 );\n\nvar StringBuffer = function StringBuffer (str) {\n  this.str = str;\n};\nStringBuffer.prototype.append = function append (e) {\n  this.str += e;\n};\n\nStringBuffer.prototype.setCharAt = function setCharAt (i, c) {\n  this.str = this.str.substr(0, i) + c + this.str.substr(i + 1);\n};\n\nStringBuffer.prototype.toString = function toString (e) {\n  return this.str\n};\n\nvar Integer = function Integer (value) {\n  this.value = value;\n};\nInteger.prototype.intValue = function intValue () {\n  return this.value\n};\nInteger.prototype.compareTo = function compareTo (o) {\n  if (this.value < o) { return -1 }\n  if (this.value > o) { return 1 }\n  return 0\n};\nInteger.isNaN = function isNaN (n) { return Number.isNaN(n) };\n\nvar Character = function Character () {};\n\nCharacter.isWhitespace = function isWhitespace (c) { return ((c <= 32 && c >= 0) || c === 127) };\nCharacter.toUpperCase = function toUpperCase (c) { return c.toUpperCase() };\n\nvar DD = function DD () {\n  this._hi = 0.0;\n  this._lo = 0.0;\n  if (arguments.length === 0) {\n    this.init(0.0);\n  } else if (arguments.length === 1) {\n    if (typeof arguments[0] === 'number') {\n      var x = arguments[0];\n      this.init(x);\n    } else if (arguments[0] instanceof DD) {\n      var dd = arguments[0];\n      this.init(dd);\n    } else if (typeof arguments[0] === 'string') {\n      var str = arguments[0];\n      DD.call(this, DD.parse(str));\n    }\n  } else if (arguments.length === 2) {\n    var hi = arguments[0];\n    var lo = arguments[1];\n    this.init(hi, lo);\n  }\n};\n\nvar staticAccessors$7 = { PI: { configurable: true },TWO_PI: { configurable: true },PI_2: { configurable: true },E: { configurable: true },NaN: { configurable: true },EPS: { configurable: true },SPLIT: { configurable: true },MAX_PRINT_DIGITS: { configurable: true },TEN: { configurable: true },ONE: { configurable: true },SCI_NOT_EXPONENT_CHAR: { configurable: true },SCI_NOT_ZERO: { configurable: true } };\nDD.prototype.le = function le (y) {\n  return (this._hi < y._hi || this._hi === y._hi) && this._lo <= y._lo\n};\nDD.prototype.extractSignificantDigits = function extractSignificantDigits (insertDecimalPoint, magnitude) {\n  var y = this.abs();\n  var mag = DD.magnitude(y._hi);\n  var scale = DD.TEN.pow(mag);\n  y = y.divide(scale);\n  if (y.gt(DD.TEN)) {\n    y = y.divide(DD.TEN);\n    mag += 1;\n  } else if (y.lt(DD.ONE)) {\n    y = y.multiply(DD.TEN);\n    mag -= 1;\n  }\n  var decimalPointPos = mag + 1;\n  var buf = new StringBuffer();\n  var numDigits = DD.MAX_PRINT_DIGITS - 1;\n  for (var i = 0; i <= numDigits; i++) {\n    if (insertDecimalPoint && i === decimalPointPos) {\n      buf.append('.');\n    }\n    var digit = Math.trunc(y._hi);\n    if (digit < 0) {\n      break\n    }\n    var rebiasBy10 = false;\n    var digitChar = 0;\n    if (digit > 9) {\n      rebiasBy10 = true;\n      digitChar = '9';\n    } else {\n      digitChar = '0' + digit;\n    }\n    buf.append(digitChar);\n    y = y.subtract(DD.valueOf(digit)).multiply(DD.TEN);\n    if (rebiasBy10) { y.selfAdd(DD.TEN); }\n    var continueExtractingDigits = true;\n    var remMag = DD.magnitude(y._hi);\n    if (remMag < 0 && Math.abs(remMag) >= numDigits - i) { continueExtractingDigits = false; }\n    if (!continueExtractingDigits) { break }\n  }\n  magnitude[0] = mag;\n  return buf.toString()\n};\nDD.prototype.sqr = function sqr () {\n  return this.multiply(this)\n};\nDD.prototype.doubleValue = function doubleValue () {\n  return this._hi + this._lo\n};\nDD.prototype.subtract = function subtract () {\n  if (arguments[0] instanceof DD) {\n    var y = arguments[0];\n    return this.add(y.negate())\n  } else if (typeof arguments[0] === 'number') {\n    var y$1 = arguments[0];\n    return this.add(-y$1)\n  }\n};\nDD.prototype.equals = function equals () {\n  if (arguments.length === 1) {\n    var y = arguments[0];\n    return this._hi === y._hi && this._lo === y._lo\n  }\n};\nDD.prototype.isZero = function isZero () {\n  return this._hi === 0.0 && this._lo === 0.0\n};\nDD.prototype.selfSubtract = function selfSubtract () {\n  if (arguments[0] instanceof DD) {\n    var y = arguments[0];\n    if (this.isNaN()) { return this }\n    return this.selfAdd(-y._hi, -y._lo)\n  } else if (typeof arguments[0] === 'number') {\n    var y$1 = arguments[0];\n    if (this.isNaN()) { return this }\n    return this.selfAdd(-y$1, 0.0)\n  }\n};\nDD.prototype.getSpecialNumberString = function getSpecialNumberString () {\n  if (this.isZero()) { return '0.0' }\n  if (this.isNaN()) { return 'NaN ' }\n  return null\n};\nDD.prototype.min = function min (x) {\n  if (this.le(x)) {\n    return this\n  } else {\n    return x\n  }\n};\nDD.prototype.selfDivide = function selfDivide () {\n  if (arguments.length === 1) {\n    if (arguments[0] instanceof DD) {\n      var y = arguments[0];\n      return this.selfDivide(y._hi, y._lo)\n    } else if (typeof arguments[0] === 'number') {\n      var y$1 = arguments[0];\n      return this.selfDivide(y$1, 0.0)\n    }\n  } else if (arguments.length === 2) {\n    var yhi = arguments[0];\n    var ylo = arguments[1];\n    var hc = null;\n    var tc = null;\n    var hy = null;\n    var ty = null;\n    var C = null;\n    var c = null;\n    var U = null;\n    var u = null;\n    C = this._hi / yhi;\n    c = DD.SPLIT * C;\n    hc = c - C;\n    u = DD.SPLIT * yhi;\n    hc = c - hc;\n    tc = C - hc;\n    hy = u - yhi;\n    U = C * yhi;\n    hy = u - hy;\n    ty = yhi - hy;\n    u = hc * hy - U + hc * ty + tc * hy + tc * ty;\n    c = (this._hi - U - u + this._lo - C * ylo) / yhi;\n    u = C + c;\n    this._hi = u;\n    this._lo = C - u + c;\n    return this\n  }\n};\nDD.prototype.dump = function dump () {\n  return 'DD<' + this._hi + ', ' + this._lo + '>'\n};\nDD.prototype.divide = function divide () {\n  if (arguments[0] instanceof DD) {\n    var y = arguments[0];\n    var hc = null;\n    var tc = null;\n    var hy = null;\n    var ty = null;\n    var C = null;\n    var c = null;\n    var U = null;\n    var u = null;\n    C = this._hi / y._hi;\n    c = DD.SPLIT * C;\n    hc = c - C;\n    u = DD.SPLIT * y._hi;\n    hc = c - hc;\n    tc = C - hc;\n    hy = u - y._hi;\n    U = C * y._hi;\n    hy = u - hy;\n    ty = y._hi - hy;\n    u = hc * hy - U + hc * ty + tc * hy + tc * ty;\n    c = (this._hi - U - u + this._lo - C * y._lo) / y._hi;\n    u = C + c;\n    var zhi = u;\n    var zlo = C - u + c;\n    return new DD(zhi, zlo)\n  } else if (typeof arguments[0] === 'number') {\n    var y$1 = arguments[0];\n    if (Double.isNaN(y$1)) { return DD.createNaN() }\n    return DD.copy(this).selfDivide(y$1, 0.0)\n  }\n};\nDD.prototype.ge = function ge (y) {\n  return (this._hi > y._hi || this._hi === y._hi) && this._lo >= y._lo\n};\nDD.prototype.pow = function pow (exp) {\n  if (exp === 0.0) { return DD.valueOf(1.0) }\n  var r = new DD(this);\n  var s = DD.valueOf(1.0);\n  var n = Math.abs(exp);\n  if (n > 1) {\n    while (n > 0) {\n      if (n % 2 === 1) {\n        s.selfMultiply(r);\n      }\n      n /= 2;\n      if (n > 0) { r = r.sqr(); }\n    }\n  } else {\n    s = r;\n  }\n  if (exp < 0) { return s.reciprocal() }\n  return s\n};\nDD.prototype.ceil = function ceil () {\n  if (this.isNaN()) { return DD.NaN }\n  var fhi = Math.ceil(this._hi);\n  var flo = 0.0;\n  if (fhi === this._hi) {\n    flo = Math.ceil(this._lo);\n  }\n  return new DD(fhi, flo)\n};\nDD.prototype.compareTo = function compareTo (o) {\n  var other = o;\n  if (this._hi < other._hi) { return -1 }\n  if (this._hi > other._hi) { return 1 }\n  if (this._lo < other._lo) { return -1 }\n  if (this._lo > other._lo) { return 1 }\n  return 0\n};\nDD.prototype.rint = function rint () {\n  if (this.isNaN()) { return this }\n  var plus5 = this.add(0.5);\n  return plus5.floor()\n};\nDD.prototype.setValue = function setValue () {\n  if (arguments[0] instanceof DD) {\n    var value = arguments[0];\n    this.init(value);\n    return this\n  } else if (typeof arguments[0] === 'number') {\n    var value$1 = arguments[0];\n    this.init(value$1);\n    return this\n  }\n};\nDD.prototype.max = function max (x) {\n  if (this.ge(x)) {\n    return this\n  } else {\n    return x\n  }\n};\nDD.prototype.sqrt = function sqrt () {\n  if (this.isZero()) { return DD.valueOf(0.0) }\n  if (this.isNegative()) {\n    return DD.NaN\n  }\n  var x = 1.0 / Math.sqrt(this._hi);\n  var ax = this._hi * x;\n  var axdd = DD.valueOf(ax);\n  var diffSq = this.subtract(axdd.sqr());\n  var d2 = diffSq._hi * (x * 0.5);\n  return axdd.add(d2)\n};\nDD.prototype.selfAdd = function selfAdd () {\n  if (arguments.length === 1) {\n    if (arguments[0] instanceof DD) {\n      var y = arguments[0];\n      return this.selfAdd(y._hi, y._lo)\n    } else if (typeof arguments[0] === 'number') {\n      var y$1 = arguments[0];\n      var H = null;\n      var h = null;\n      var S = null;\n      var s = null;\n      var e = null;\n      var f = null;\n      S = this._hi + y$1;\n      e = S - this._hi;\n      s = S - e;\n      s = y$1 - e + (this._hi - s);\n      f = s + this._lo;\n      H = S + f;\n      h = f + (S - H);\n      this._hi = H + h;\n      this._lo = h + (H - this._hi);\n      return this\n    }\n  } else if (arguments.length === 2) {\n    var yhi = arguments[0];\n    var ylo = arguments[1];\n    var H$1 = null;\n    var h$1 = null;\n    var T = null;\n    var t = null;\n    var S$1 = null;\n    var s$1 = null;\n    var e$1 = null;\n    var f$1 = null;\n    S$1 = this._hi + yhi;\n    T = this._lo + ylo;\n    e$1 = S$1 - this._hi;\n    f$1 = T - this._lo;\n    s$1 = S$1 - e$1;\n    t = T - f$1;\n    s$1 = yhi - e$1 + (this._hi - s$1);\n    t = ylo - f$1 + (this._lo - t);\n    e$1 = s$1 + T;\n    H$1 = S$1 + e$1;\n    h$1 = e$1 + (S$1 - H$1);\n    e$1 = t + h$1;\n    var zhi = H$1 + e$1;\n    var zlo = e$1 + (H$1 - zhi);\n    this._hi = zhi;\n    this._lo = zlo;\n    return this\n  }\n};\nDD.prototype.selfMultiply = function selfMultiply () {\n  if (arguments.length === 1) {\n    if (arguments[0] instanceof DD) {\n      var y = arguments[0];\n      return this.selfMultiply(y._hi, y._lo)\n    } else if (typeof arguments[0] === 'number') {\n      var y$1 = arguments[0];\n      return this.selfMultiply(y$1, 0.0)\n    }\n  } else if (arguments.length === 2) {\n    var yhi = arguments[0];\n    var ylo = arguments[1];\n    var hx = null;\n    var tx = null;\n    var hy = null;\n    var ty = null;\n    var C = null;\n    var c = null;\n    C = DD.SPLIT * this._hi;\n    hx = C - this._hi;\n    c = DD.SPLIT * yhi;\n    hx = C - hx;\n    tx = this._hi - hx;\n    hy = c - yhi;\n    C = this._hi * yhi;\n    hy = c - hy;\n    ty = yhi - hy;\n    c = hx * hy - C + hx * ty + tx * hy + tx * ty + (this._hi * ylo + this._lo * yhi);\n    var zhi = C + c;\n    hx = C - zhi;\n    var zlo = c + hx;\n    this._hi = zhi;\n    this._lo = zlo;\n    return this\n  }\n};\nDD.prototype.selfSqr = function selfSqr () {\n  return this.selfMultiply(this)\n};\nDD.prototype.floor = function floor () {\n  if (this.isNaN()) { return DD.NaN }\n  var fhi = Math.floor(this._hi);\n  var flo = 0.0;\n  if (fhi === this._hi) {\n    flo = Math.floor(this._lo);\n  }\n  return new DD(fhi, flo)\n};\nDD.prototype.negate = function negate () {\n  if (this.isNaN()) { return this }\n  return new DD(-this._hi, -this._lo)\n};\nDD.prototype.clone = function clone () {\n  // try {\n  // return null\n  // } catch (ex) {\n  // if (ex instanceof CloneNotSupportedException) {\n  //   return null\n  // } else throw ex\n  // } finally {}\n};\nDD.prototype.multiply = function multiply () {\n  if (arguments[0] instanceof DD) {\n    var y = arguments[0];\n    if (y.isNaN()) { return DD.createNaN() }\n    return DD.copy(this).selfMultiply(y)\n  } else if (typeof arguments[0] === 'number') {\n    var y$1 = arguments[0];\n    if (Double.isNaN(y$1)) { return DD.createNaN() }\n    return DD.copy(this).selfMultiply(y$1, 0.0)\n  }\n};\nDD.prototype.isNaN = function isNaN () {\n  return Double.isNaN(this._hi)\n};\nDD.prototype.intValue = function intValue () {\n  return Math.trunc(this._hi)\n};\nDD.prototype.toString = function toString () {\n  var mag = DD.magnitude(this._hi);\n  if (mag >= -3 && mag <= 20) { return this.toStandardNotation() }\n  return this.toSciNotation()\n};\nDD.prototype.toStandardNotation = function toStandardNotation () {\n  var specialStr = this.getSpecialNumberString();\n  if (specialStr !== null) { return specialStr }\n  var magnitude = new Array(1).fill(null);\n  var sigDigits = this.extractSignificantDigits(true, magnitude);\n  var decimalPointPos = magnitude[0] + 1;\n  var num = sigDigits;\n  if (sigDigits.charAt(0) === '.') {\n    num = '0' + sigDigits;\n  } else if (decimalPointPos < 0) {\n    num = '0.' + DD.stringOfChar('0', -decimalPointPos) + sigDigits;\n  } else if (sigDigits.indexOf('.') === -1) {\n    var numZeroes = decimalPointPos - sigDigits.length;\n    var zeroes = DD.stringOfChar('0', numZeroes);\n    num = sigDigits + zeroes + '.0';\n  }\n  if (this.isNegative()) { return '-' + num }\n  return num\n};\nDD.prototype.reciprocal = function reciprocal () {\n  var hc = null;\n  var tc = null;\n  var hy = null;\n  var ty = null;\n  var C = null;\n  var c = null;\n  var U = null;\n  var u = null;\n  C = 1.0 / this._hi;\n  c = DD.SPLIT * C;\n  hc = c - C;\n  u = DD.SPLIT * this._hi;\n  hc = c - hc;\n  tc = C - hc;\n  hy = u - this._hi;\n  U = C * this._hi;\n  hy = u - hy;\n  ty = this._hi - hy;\n  u = hc * hy - U + hc * ty + tc * hy + tc * ty;\n  c = (1.0 - U - u - C * this._lo) / this._hi;\n  var zhi = C + c;\n  var zlo = C - zhi + c;\n  return new DD(zhi, zlo)\n};\nDD.prototype.toSciNotation = function toSciNotation () {\n  if (this.isZero()) { return DD.SCI_NOT_ZERO }\n  var specialStr = this.getSpecialNumberString();\n  if (specialStr !== null) { return specialStr }\n  var magnitude = new Array(1).fill(null);\n  var digits = this.extractSignificantDigits(false, magnitude);\n  var expStr = DD.SCI_NOT_EXPONENT_CHAR + magnitude[0];\n  if (digits.charAt(0) === '0') {\n    throw new Error('Found leading zero: ' + digits)\n  }\n  var trailingDigits = '';\n  if (digits.length > 1) { trailingDigits = digits.substring(1); }\n  var digitsWithDecimal = digits.charAt(0) + '.' + trailingDigits;\n  if (this.isNegative()) { return '-' + digitsWithDecimal + expStr }\n  return digitsWithDecimal + expStr\n};\nDD.prototype.abs = function abs () {\n  if (this.isNaN()) { return DD.NaN }\n  if (this.isNegative()) { return this.negate() }\n  return new DD(this)\n};\nDD.prototype.isPositive = function isPositive () {\n  return (this._hi > 0.0 || this._hi === 0.0) && this._lo > 0.0\n};\nDD.prototype.lt = function lt (y) {\n  return (this._hi < y._hi || this._hi === y._hi) && this._lo < y._lo\n};\nDD.prototype.add = function add () {\n  if (arguments[0] instanceof DD) {\n    var y = arguments[0];\n    return DD.copy(this).selfAdd(y)\n  } else if (typeof arguments[0] === 'number') {\n    var y$1 = arguments[0];\n    return DD.copy(this).selfAdd(y$1)\n  }\n};\nDD.prototype.init = function init () {\n  if (arguments.length === 1) {\n    if (typeof arguments[0] === 'number') {\n      var x = arguments[0];\n      this._hi = x;\n      this._lo = 0.0;\n    } else if (arguments[0] instanceof DD) {\n      var dd = arguments[0];\n      this._hi = dd._hi;\n      this._lo = dd._lo;\n    }\n  } else if (arguments.length === 2) {\n    var hi = arguments[0];\n    var lo = arguments[1];\n    this._hi = hi;\n    this._lo = lo;\n  }\n};\nDD.prototype.gt = function gt (y) {\n  return (this._hi > y._hi || this._hi === y._hi) && this._lo > y._lo\n};\nDD.prototype.isNegative = function isNegative () {\n  return (this._hi < 0.0 || this._hi === 0.0) && this._lo < 0.0\n};\nDD.prototype.trunc = function trunc () {\n  if (this.isNaN()) { return DD.NaN }\n  if (this.isPositive()) { return this.floor(); } else { return this.ceil() }\n};\nDD.prototype.signum = function signum () {\n  if (this._hi > 0) { return 1 }\n  if (this._hi < 0) { return -1 }\n  if (this._lo > 0) { return 1 }\n  if (this._lo < 0) { return -1 }\n  return 0\n};\nDD.prototype.interfaces_ = function interfaces_ () {\n  return [Serializable, Comparable, Clonable]\n};\nDD.prototype.getClass = function getClass () {\n  return DD\n};\nDD.sqr = function sqr (x) {\n  return DD.valueOf(x).selfMultiply(x)\n};\nDD.valueOf = function valueOf () {\n  if (typeof arguments[0] === 'string') {\n    var str = arguments[0];\n    return DD.parse(str)\n  } else if (typeof arguments[0] === 'number') {\n    var x = arguments[0];\n    return new DD(x)\n  }\n};\nDD.sqrt = function sqrt (x) {\n  return DD.valueOf(x).sqrt()\n};\nDD.parse = function parse (str) {\n  var i = 0;\n  var strlen = str.length;\n  while (Character.isWhitespace(str.charAt(i))) { i++; }\n  var isNegative = false;\n  if (i < strlen) {\n    var signCh = str.charAt(i);\n    if (signCh === '-' || signCh === '+') {\n      i++;\n      if (signCh === '-') { isNegative = true; }\n    }\n  }\n  var val = new DD();\n  var numDigits = 0;\n  var numBeforeDec = 0;\n  var exp = 0;\n  while (true) {\n    if (i >= strlen) { break }\n    var ch = str.charAt(i);\n    i++;\n    if (Character.isDigit(ch)) {\n      var d = ch - '0';\n      val.selfMultiply(DD.TEN);\n      val.selfAdd(d);\n      numDigits++;\n      continue\n    }\n    if (ch === '.') {\n      numBeforeDec = numDigits;\n      continue\n    }\n    if (ch === 'e' || ch === 'E') {\n      var expStr = str.substring(i);\n      try {\n        exp = Integer.parseInt(expStr);\n      } catch (ex) {\n        if (ex instanceof Error) {\n          throw new Error('Invalid exponent ' + expStr + ' in string ' + str)\n        } else { throw ex }\n      } finally {}\n      break\n    }\n    throw new Error(\"Unexpected character '\" + ch + \"' at position \" + i + ' in string ' + str)\n  }\n  var val2 = val;\n  var numDecPlaces = numDigits - numBeforeDec - exp;\n  if (numDecPlaces === 0) {\n    val2 = val;\n  } else if (numDecPlaces > 0) {\n    var scale = DD.TEN.pow(numDecPlaces);\n    val2 = val.divide(scale);\n  } else if (numDecPlaces < 0) {\n    var scale$1 = DD.TEN.pow(-numDecPlaces);\n    val2 = val.multiply(scale$1);\n  }\n  if (isNegative) {\n    return val2.negate()\n  }\n  return val2\n};\nDD.createNaN = function createNaN () {\n  return new DD(Double.NaN, Double.NaN)\n};\nDD.copy = function copy (dd) {\n  return new DD(dd)\n};\nDD.magnitude = function magnitude (x) {\n  var xAbs = Math.abs(x);\n  var xLog10 = Math.log(xAbs) / Math.log(10);\n  var xMag = Math.trunc(Math.floor(xLog10));\n  var xApprox = Math.pow(10, xMag);\n  if (xApprox * 10 <= xAbs) { xMag += 1; }\n  return xMag\n};\nDD.stringOfChar = function stringOfChar (ch, len) {\n  var buf = new StringBuffer();\n  for (var i = 0; i < len; i++) {\n    buf.append(ch);\n  }\n  return buf.toString()\n};\nstaticAccessors$7.PI.get = function () { return new DD(3.141592653589793116e+00, 1.224646799147353207e-16) };\nstaticAccessors$7.TWO_PI.get = function () { return new DD(6.283185307179586232e+00, 2.449293598294706414e-16) };\nstaticAccessors$7.PI_2.get = function () { return new DD(1.570796326794896558e+00, 6.123233995736766036e-17) };\nstaticAccessors$7.E.get = function () { return new DD(2.718281828459045091e+00, 1.445646891729250158e-16) };\nstaticAccessors$7.NaN.get = function () { return new DD(Double.NaN, Double.NaN) };\nstaticAccessors$7.EPS.get = function () { return 1.23259516440783e-32 };\nstaticAccessors$7.SPLIT.get = function () { return 134217729.0 };\nstaticAccessors$7.MAX_PRINT_DIGITS.get = function () { return 32 };\nstaticAccessors$7.TEN.get = function () { return DD.valueOf(10.0) };\nstaticAccessors$7.ONE.get = function () { return DD.valueOf(1.0) };\nstaticAccessors$7.SCI_NOT_EXPONENT_CHAR.get = function () { return 'E' };\nstaticAccessors$7.SCI_NOT_ZERO.get = function () { return '0.0E0' };\n\nObject.defineProperties( DD, staticAccessors$7 );\n\nvar CGAlgorithmsDD = function CGAlgorithmsDD () {};\n\nvar staticAccessors$6 = { DP_SAFE_EPSILON: { configurable: true } };\n\nCGAlgorithmsDD.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nCGAlgorithmsDD.prototype.getClass = function getClass () {\n  return CGAlgorithmsDD\n};\nCGAlgorithmsDD.orientationIndex = function orientationIndex (p1, p2, q) {\n  var index = CGAlgorithmsDD.orientationIndexFilter(p1, p2, q);\n  if (index <= 1) { return index }\n  var dx1 = DD.valueOf(p2.x).selfAdd(-p1.x);\n  var dy1 = DD.valueOf(p2.y).selfAdd(-p1.y);\n  var dx2 = DD.valueOf(q.x).selfAdd(-p2.x);\n  var dy2 = DD.valueOf(q.y).selfAdd(-p2.y);\n  return dx1.selfMultiply(dy2).selfSubtract(dy1.selfMultiply(dx2)).signum()\n};\nCGAlgorithmsDD.signOfDet2x2 = function signOfDet2x2 (x1, y1, x2, y2) {\n  var det = x1.multiply(y2).selfSubtract(y1.multiply(x2));\n  return det.signum()\n};\nCGAlgorithmsDD.intersection = function intersection (p1, p2, q1, q2) {\n  var denom1 = DD.valueOf(q2.y).selfSubtract(q1.y).selfMultiply(DD.valueOf(p2.x).selfSubtract(p1.x));\n  var denom2 = DD.valueOf(q2.x).selfSubtract(q1.x).selfMultiply(DD.valueOf(p2.y).selfSubtract(p1.y));\n  var denom = denom1.subtract(denom2);\n  var numx1 = DD.valueOf(q2.x).selfSubtract(q1.x).selfMultiply(DD.valueOf(p1.y).selfSubtract(q1.y));\n  var numx2 = DD.valueOf(q2.y).selfSubtract(q1.y).selfMultiply(DD.valueOf(p1.x).selfSubtract(q1.x));\n  var numx = numx1.subtract(numx2);\n  var fracP = numx.selfDivide(denom).doubleValue();\n  var x = DD.valueOf(p1.x).selfAdd(DD.valueOf(p2.x).selfSubtract(p1.x).selfMultiply(fracP)).doubleValue();\n  var numy1 = DD.valueOf(p2.x).selfSubtract(p1.x).selfMultiply(DD.valueOf(p1.y).selfSubtract(q1.y));\n  var numy2 = DD.valueOf(p2.y).selfSubtract(p1.y).selfMultiply(DD.valueOf(p1.x).selfSubtract(q1.x));\n  var numy = numy1.subtract(numy2);\n  var fracQ = numy.selfDivide(denom).doubleValue();\n  var y = DD.valueOf(q1.y).selfAdd(DD.valueOf(q2.y).selfSubtract(q1.y).selfMultiply(fracQ)).doubleValue();\n  return new Coordinate(x, y)\n};\nCGAlgorithmsDD.orientationIndexFilter = function orientationIndexFilter (pa, pb, pc) {\n  var detsum = null;\n  var detleft = (pa.x - pc.x) * (pb.y - pc.y);\n  var detright = (pa.y - pc.y) * (pb.x - pc.x);\n  var det = detleft - detright;\n  if (detleft > 0.0) {\n    if (detright <= 0.0) {\n      return CGAlgorithmsDD.signum(det)\n    } else {\n      detsum = detleft + detright;\n    }\n  } else if (detleft < 0.0) {\n    if (detright >= 0.0) {\n      return CGAlgorithmsDD.signum(det)\n    } else {\n      detsum = -detleft - detright;\n    }\n  } else {\n    return CGAlgorithmsDD.signum(det)\n  }\n  var errbound = CGAlgorithmsDD.DP_SAFE_EPSILON * detsum;\n  if (det >= errbound || -det >= errbound) {\n    return CGAlgorithmsDD.signum(det)\n  }\n  return 2\n};\nCGAlgorithmsDD.signum = function signum (x) {\n  if (x > 0) { return 1 }\n  if (x < 0) { return -1 }\n  return 0\n};\nstaticAccessors$6.DP_SAFE_EPSILON.get = function () { return 1e-15 };\n\nObject.defineProperties( CGAlgorithmsDD, staticAccessors$6 );\n\nvar CoordinateSequence = function CoordinateSequence () {};\n\nvar staticAccessors$8 = { X: { configurable: true },Y: { configurable: true },Z: { configurable: true },M: { configurable: true } };\n\nstaticAccessors$8.X.get = function () { return 0 };\nstaticAccessors$8.Y.get = function () { return 1 };\nstaticAccessors$8.Z.get = function () { return 2 };\nstaticAccessors$8.M.get = function () { return 3 };\nCoordinateSequence.prototype.setOrdinate = function setOrdinate (index, ordinateIndex, value) {};\nCoordinateSequence.prototype.size = function size () {};\nCoordinateSequence.prototype.getOrdinate = function getOrdinate (index, ordinateIndex) {};\nCoordinateSequence.prototype.getCoordinate = function getCoordinate () {};\nCoordinateSequence.prototype.getCoordinateCopy = function getCoordinateCopy (i) {};\nCoordinateSequence.prototype.getDimension = function getDimension () {};\nCoordinateSequence.prototype.getX = function getX (index) {};\nCoordinateSequence.prototype.clone = function clone () {};\nCoordinateSequence.prototype.expandEnvelope = function expandEnvelope (env) {};\nCoordinateSequence.prototype.copy = function copy () {};\nCoordinateSequence.prototype.getY = function getY (index) {};\nCoordinateSequence.prototype.toCoordinateArray = function toCoordinateArray () {};\nCoordinateSequence.prototype.interfaces_ = function interfaces_ () {\n  return [Clonable]\n};\nCoordinateSequence.prototype.getClass = function getClass () {\n  return CoordinateSequence\n};\n\nObject.defineProperties( CoordinateSequence, staticAccessors$8 );\n\nvar Exception = function Exception () {};\n\nvar NotRepresentableException = (function (Exception$$1) {\n  function NotRepresentableException () {\n    Exception$$1.call(this, 'Projective point not representable on the Cartesian plane.');\n  }\n\n  if ( Exception$$1 ) NotRepresentableException.__proto__ = Exception$$1;\n  NotRepresentableException.prototype = Object.create( Exception$$1 && Exception$$1.prototype );\n  NotRepresentableException.prototype.constructor = NotRepresentableException;\n  NotRepresentableException.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  NotRepresentableException.prototype.getClass = function getClass () {\n    return NotRepresentableException\n  };\n\n  return NotRepresentableException;\n}(Exception));\n\nvar System = function System () {};\n\nSystem.arraycopy = function arraycopy (src, srcPos, dest, destPos, len) {\n  var c = 0;\n  for (var i = srcPos; i < srcPos + len; i++) {\n    dest[destPos + c] = src[i];\n    c++;\n  }\n};\n\nSystem.getProperty = function getProperty (name) {\n  return {\n    'line.separator': '\\n'\n  }[name]\n};\n\nvar HCoordinate = function HCoordinate () {\n  this.x = null;\n  this.y = null;\n  this.w = null;\n  if (arguments.length === 0) {\n    this.x = 0.0;\n    this.y = 0.0;\n    this.w = 1.0;\n  } else if (arguments.length === 1) {\n    var p = arguments[0];\n    this.x = p.x;\n    this.y = p.y;\n    this.w = 1.0;\n  } else if (arguments.length === 2) {\n    if (typeof arguments[0] === 'number' && typeof arguments[1] === 'number') {\n      var _x = arguments[0];\n      var _y = arguments[1];\n      this.x = _x;\n      this.y = _y;\n      this.w = 1.0;\n    } else if (arguments[0] instanceof HCoordinate && arguments[1] instanceof HCoordinate) {\n      var p1 = arguments[0];\n      var p2 = arguments[1];\n      this.x = p1.y * p2.w - p2.y * p1.w;\n      this.y = p2.x * p1.w - p1.x * p2.w;\n      this.w = p1.x * p2.y - p2.x * p1.y;\n    } else if (arguments[0] instanceof Coordinate && arguments[1] instanceof Coordinate) {\n      var p1$1 = arguments[0];\n      var p2$1 = arguments[1];\n      this.x = p1$1.y - p2$1.y;\n      this.y = p2$1.x - p1$1.x;\n      this.w = p1$1.x * p2$1.y - p2$1.x * p1$1.y;\n    }\n  } else if (arguments.length === 3) {\n    var _x$1 = arguments[0];\n    var _y$1 = arguments[1];\n    var _w = arguments[2];\n    this.x = _x$1;\n    this.y = _y$1;\n    this.w = _w;\n  } else if (arguments.length === 4) {\n    var p1$2 = arguments[0];\n    var p2$2 = arguments[1];\n    var q1 = arguments[2];\n    var q2 = arguments[3];\n    var px = p1$2.y - p2$2.y;\n    var py = p2$2.x - p1$2.x;\n    var pw = p1$2.x * p2$2.y - p2$2.x * p1$2.y;\n    var qx = q1.y - q2.y;\n    var qy = q2.x - q1.x;\n    var qw = q1.x * q2.y - q2.x * q1.y;\n    this.x = py * qw - qy * pw;\n    this.y = qx * pw - px * qw;\n    this.w = px * qy - qx * py;\n  }\n};\nHCoordinate.prototype.getY = function getY () {\n  var a = this.y / this.w;\n  if (Double.isNaN(a) || Double.isInfinite(a)) {\n    throw new NotRepresentableException()\n  }\n  return a\n};\nHCoordinate.prototype.getX = function getX () {\n  var a = this.x / this.w;\n  if (Double.isNaN(a) || Double.isInfinite(a)) {\n    throw new NotRepresentableException()\n  }\n  return a\n};\nHCoordinate.prototype.getCoordinate = function getCoordinate () {\n  var p = new Coordinate();\n  p.x = this.getX();\n  p.y = this.getY();\n  return p\n};\nHCoordinate.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nHCoordinate.prototype.getClass = function getClass () {\n  return HCoordinate\n};\nHCoordinate.intersection = function intersection (p1, p2, q1, q2) {\n  var px = p1.y - p2.y;\n  var py = p2.x - p1.x;\n  var pw = p1.x * p2.y - p2.x * p1.y;\n  var qx = q1.y - q2.y;\n  var qy = q2.x - q1.x;\n  var qw = q1.x * q2.y - q2.x * q1.y;\n  var x = py * qw - qy * pw;\n  var y = qx * pw - px * qw;\n  var w = px * qy - qx * py;\n  var xInt = x / w;\n  var yInt = y / w;\n  if (Double.isNaN(xInt) || (Double.isInfinite(xInt) || Double.isNaN(yInt)) || Double.isInfinite(yInt)) {\n    throw new NotRepresentableException()\n  }\n  return new Coordinate(xInt, yInt)\n};\n\nvar Envelope = function Envelope () {\n  this._minx = null;\n  this._maxx = null;\n  this._miny = null;\n  this._maxy = null;\n  if (arguments.length === 0) {\n    this.init();\n  } else if (arguments.length === 1) {\n    if (arguments[0] instanceof Coordinate) {\n      var p = arguments[0];\n      this.init(p.x, p.x, p.y, p.y);\n    } else if (arguments[0] instanceof Envelope) {\n      var env = arguments[0];\n      this.init(env);\n    }\n  } else if (arguments.length === 2) {\n    var p1 = arguments[0];\n    var p2 = arguments[1];\n    this.init(p1.x, p2.x, p1.y, p2.y);\n  } else if (arguments.length === 4) {\n    var x1 = arguments[0];\n    var x2 = arguments[1];\n    var y1 = arguments[2];\n    var y2 = arguments[3];\n    this.init(x1, x2, y1, y2);\n  }\n};\n\nvar staticAccessors$9 = { serialVersionUID: { configurable: true } };\nEnvelope.prototype.getArea = function getArea () {\n  return this.getWidth() * this.getHeight()\n};\nEnvelope.prototype.equals = function equals (other) {\n  if (!(other instanceof Envelope)) {\n    return false\n  }\n  var otherEnvelope = other;\n  if (this.isNull()) {\n    return otherEnvelope.isNull()\n  }\n  return this._maxx === otherEnvelope.getMaxX() && this._maxy === otherEnvelope.getMaxY() && this._minx === otherEnvelope.getMinX() && this._miny === otherEnvelope.getMinY()\n};\nEnvelope.prototype.intersection = function intersection (env) {\n  if (this.isNull() || env.isNull() || !this.intersects(env)) { return new Envelope() }\n  var intMinX = this._minx > env._minx ? this._minx : env._minx;\n  var intMinY = this._miny > env._miny ? this._miny : env._miny;\n  var intMaxX = this._maxx < env._maxx ? this._maxx : env._maxx;\n  var intMaxY = this._maxy < env._maxy ? this._maxy : env._maxy;\n  return new Envelope(intMinX, intMaxX, intMinY, intMaxY)\n};\nEnvelope.prototype.isNull = function isNull () {\n  return this._maxx < this._minx\n};\nEnvelope.prototype.getMaxX = function getMaxX () {\n  return this._maxx\n};\nEnvelope.prototype.covers = function covers () {\n  if (arguments.length === 1) {\n    if (arguments[0] instanceof Coordinate) {\n      var p = arguments[0];\n      return this.covers(p.x, p.y)\n    } else if (arguments[0] instanceof Envelope) {\n      var other = arguments[0];\n      if (this.isNull() || other.isNull()) {\n        return false\n      }\n      return other.getMinX() >= this._minx && other.getMaxX() <= this._maxx && other.getMinY() >= this._miny && other.getMaxY() <= this._maxy\n    }\n  } else if (arguments.length === 2) {\n    var x = arguments[0];\n    var y = arguments[1];\n    if (this.isNull()) { return false }\n    return x >= this._minx && x <= this._maxx && y >= this._miny && y <= this._maxy\n  }\n};\nEnvelope.prototype.intersects = function intersects () {\n  if (arguments.length === 1) {\n    if (arguments[0] instanceof Envelope) {\n      var other = arguments[0];\n      if (this.isNull() || other.isNull()) {\n        return false\n      }\n      return !(other._minx > this._maxx || other._maxx < this._minx || other._miny > this._maxy || other._maxy < this._miny)\n    } else if (arguments[0] instanceof Coordinate) {\n      var p = arguments[0];\n      return this.intersects(p.x, p.y)\n    }\n  } else if (arguments.length === 2) {\n    var x = arguments[0];\n    var y = arguments[1];\n    if (this.isNull()) { return false }\n    return !(x > this._maxx || x < this._minx || y > this._maxy || y < this._miny)\n  }\n};\nEnvelope.prototype.getMinY = function getMinY () {\n  return this._miny\n};\nEnvelope.prototype.getMinX = function getMinX () {\n  return this._minx\n};\nEnvelope.prototype.expandToInclude = function expandToInclude () {\n  if (arguments.length === 1) {\n    if (arguments[0] instanceof Coordinate) {\n      var p = arguments[0];\n      this.expandToInclude(p.x, p.y);\n    } else if (arguments[0] instanceof Envelope) {\n      var other = arguments[0];\n      if (other.isNull()) {\n        return null\n      }\n      if (this.isNull()) {\n        this._minx = other.getMinX();\n        this._maxx = other.getMaxX();\n        this._miny = other.getMinY();\n        this._maxy = other.getMaxY();\n      } else {\n        if (other._minx < this._minx) {\n          this._minx = other._minx;\n        }\n        if (other._maxx > this._maxx) {\n          this._maxx = other._maxx;\n        }\n        if (other._miny < this._miny) {\n          this._miny = other._miny;\n        }\n        if (other._maxy > this._maxy) {\n          this._maxy = other._maxy;\n        }\n      }\n    }\n  } else if (arguments.length === 2) {\n    var x = arguments[0];\n    var y = arguments[1];\n    if (this.isNull()) {\n      this._minx = x;\n      this._maxx = x;\n      this._miny = y;\n      this._maxy = y;\n    } else {\n      if (x < this._minx) {\n        this._minx = x;\n      }\n      if (x > this._maxx) {\n        this._maxx = x;\n      }\n      if (y < this._miny) {\n        this._miny = y;\n      }\n      if (y > this._maxy) {\n        this._maxy = y;\n      }\n    }\n  }\n};\nEnvelope.prototype.minExtent = function minExtent () {\n  if (this.isNull()) { return 0.0 }\n  var w = this.getWidth();\n  var h = this.getHeight();\n  if (w < h) { return w }\n  return h\n};\nEnvelope.prototype.getWidth = function getWidth () {\n  if (this.isNull()) {\n    return 0\n  }\n  return this._maxx - this._minx\n};\nEnvelope.prototype.compareTo = function compareTo (o) {\n  var env = o;\n  if (this.isNull()) {\n    if (env.isNull()) { return 0 }\n    return -1\n  } else {\n    if (env.isNull()) { return 1 }\n  }\n  if (this._minx < env._minx) { return -1 }\n  if (this._minx > env._minx) { return 1 }\n  if (this._miny < env._miny) { return -1 }\n  if (this._miny > env._miny) { return 1 }\n  if (this._maxx < env._maxx) { return -1 }\n  if (this._maxx > env._maxx) { return 1 }\n  if (this._maxy < env._maxy) { return -1 }\n  if (this._maxy > env._maxy) { return 1 }\n  return 0\n};\nEnvelope.prototype.translate = function translate (transX, transY) {\n  if (this.isNull()) {\n    return null\n  }\n  this.init(this.getMinX() + transX, this.getMaxX() + transX, this.getMinY() + transY, this.getMaxY() + transY);\n};\nEnvelope.prototype.toString = function toString () {\n  return 'Env[' + this._minx + ' : ' + this._maxx + ', ' + this._miny + ' : ' + this._maxy + ']'\n};\nEnvelope.prototype.setToNull = function setToNull () {\n  this._minx = 0;\n  this._maxx = -1;\n  this._miny = 0;\n  this._maxy = -1;\n};\nEnvelope.prototype.getHeight = function getHeight () {\n  if (this.isNull()) {\n    return 0\n  }\n  return this._maxy - this._miny\n};\nEnvelope.prototype.maxExtent = function maxExtent () {\n  if (this.isNull()) { return 0.0 }\n  var w = this.getWidth();\n  var h = this.getHeight();\n  if (w > h) { return w }\n  return h\n};\nEnvelope.prototype.expandBy = function expandBy () {\n  if (arguments.length === 1) {\n    var distance = arguments[0];\n    this.expandBy(distance, distance);\n  } else if (arguments.length === 2) {\n    var deltaX = arguments[0];\n    var deltaY = arguments[1];\n    if (this.isNull()) { return null }\n    this._minx -= deltaX;\n    this._maxx += deltaX;\n    this._miny -= deltaY;\n    this._maxy += deltaY;\n    if (this._minx > this._maxx || this._miny > this._maxy) { this.setToNull(); }\n  }\n};\nEnvelope.prototype.contains = function contains () {\n  if (arguments.length === 1) {\n    if (arguments[0] instanceof Envelope) {\n      var other = arguments[0];\n      return this.covers(other)\n    } else if (arguments[0] instanceof Coordinate) {\n      var p = arguments[0];\n      return this.covers(p)\n    }\n  } else if (arguments.length === 2) {\n    var x = arguments[0];\n    var y = arguments[1];\n    return this.covers(x, y)\n  }\n};\nEnvelope.prototype.centre = function centre () {\n  if (this.isNull()) { return null }\n  return new Coordinate((this.getMinX() + this.getMaxX()) / 2.0, (this.getMinY() + this.getMaxY()) / 2.0)\n};\nEnvelope.prototype.init = function init () {\n  if (arguments.length === 0) {\n    this.setToNull();\n  } else if (arguments.length === 1) {\n    if (arguments[0] instanceof Coordinate) {\n      var p = arguments[0];\n      this.init(p.x, p.x, p.y, p.y);\n    } else if (arguments[0] instanceof Envelope) {\n      var env = arguments[0];\n      this._minx = env._minx;\n      this._maxx = env._maxx;\n      this._miny = env._miny;\n      this._maxy = env._maxy;\n    }\n  } else if (arguments.length === 2) {\n    var p1 = arguments[0];\n    var p2 = arguments[1];\n    this.init(p1.x, p2.x, p1.y, p2.y);\n  } else if (arguments.length === 4) {\n    var x1 = arguments[0];\n    var x2 = arguments[1];\n    var y1 = arguments[2];\n    var y2 = arguments[3];\n    if (x1 < x2) {\n      this._minx = x1;\n      this._maxx = x2;\n    } else {\n      this._minx = x2;\n      this._maxx = x1;\n    }\n    if (y1 < y2) {\n      this._miny = y1;\n      this._maxy = y2;\n    } else {\n      this._miny = y2;\n      this._maxy = y1;\n    }\n  }\n};\nEnvelope.prototype.getMaxY = function getMaxY () {\n  return this._maxy\n};\nEnvelope.prototype.distance = function distance (env) {\n  if (this.intersects(env)) { return 0 }\n  var dx = 0.0;\n  if (this._maxx < env._minx) { dx = env._minx - this._maxx; } else if (this._minx > env._maxx) { dx = this._minx - env._maxx; }\n  var dy = 0.0;\n  if (this._maxy < env._miny) { dy = env._miny - this._maxy; } else if (this._miny > env._maxy) { dy = this._miny - env._maxy; }\n  if (dx === 0.0) { return dy }\n  if (dy === 0.0) { return dx }\n  return Math.sqrt(dx * dx + dy * dy)\n};\nEnvelope.prototype.hashCode = function hashCode () {\n  var result = 17;\n  result = 37 * result + Coordinate.hashCode(this._minx);\n  result = 37 * result + Coordinate.hashCode(this._maxx);\n  result = 37 * result + Coordinate.hashCode(this._miny);\n  result = 37 * result + Coordinate.hashCode(this._maxy);\n  return result\n};\nEnvelope.prototype.interfaces_ = function interfaces_ () {\n  return [Comparable, Serializable]\n};\nEnvelope.prototype.getClass = function getClass () {\n  return Envelope\n};\nEnvelope.intersects = function intersects () {\n  if (arguments.length === 3) {\n    var p1 = arguments[0];\n    var p2 = arguments[1];\n    var q = arguments[2];\n    if (q.x >= (p1.x < p2.x ? p1.x : p2.x) && q.x <= (p1.x > p2.x ? p1.x : p2.x) && (q.y >= (p1.y < p2.y ? p1.y : p2.y) && q.y <= (p1.y > p2.y ? p1.y : p2.y))) {\n      return true\n    }\n    return false\n  } else if (arguments.length === 4) {\n    var p1$1 = arguments[0];\n    var p2$1 = arguments[1];\n    var q1 = arguments[2];\n    var q2 = arguments[3];\n    var minq = Math.min(q1.x, q2.x);\n    var maxq = Math.max(q1.x, q2.x);\n    var minp = Math.min(p1$1.x, p2$1.x);\n    var maxp = Math.max(p1$1.x, p2$1.x);\n    if (minp > maxq) { return false }\n    if (maxp < minq) { return false }\n    minq = Math.min(q1.y, q2.y);\n    maxq = Math.max(q1.y, q2.y);\n    minp = Math.min(p1$1.y, p2$1.y);\n    maxp = Math.max(p1$1.y, p2$1.y);\n    if (minp > maxq) { return false }\n    if (maxp < minq) { return false }\n    return true\n  }\n};\nstaticAccessors$9.serialVersionUID.get = function () { return 5873921885273102420 };\n\nObject.defineProperties( Envelope, staticAccessors$9 );\n\nvar regExes = {\n  'typeStr': /^\\s*(\\w+)\\s*\\(\\s*(.*)\\s*\\)\\s*$/,\n  'emptyTypeStr': /^\\s*(\\w+)\\s*EMPTY\\s*$/,\n  'spaces': /\\s+/,\n  'parenComma': /\\)\\s*,\\s*\\(/,\n  'doubleParenComma': /\\)\\s*\\)\\s*,\\s*\\(\\s*\\(/, // can't use {2} here\n  'trimParens': /^\\s*\\(?(.*?)\\)?\\s*$/\n};\n\n/**\n * Class for reading and writing Well-Known Text.\n *\n * NOTE: Adapted from OpenLayers 2.11 implementation.\n */\n\n/** Create a new parser for WKT\n *\n * @param {GeometryFactory} geometryFactory\n * @return An instance of WKTParser.\n * @constructor\n * @private\n */\nvar WKTParser = function WKTParser (geometryFactory) {\n  this.geometryFactory = geometryFactory || new GeometryFactory();\n};\n/**\n * Deserialize a WKT string and return a geometry. Supports WKT for POINT,\n * MULTIPOINT, LINESTRING, LINEARRING, MULTILINESTRING, POLYGON, MULTIPOLYGON,\n * and GEOMETRYCOLLECTION.\n *\n * @param {String} wkt A WKT string.\n * @return {Geometry} A geometry instance.\n * @private\n */\nWKTParser.prototype.read = function read (wkt) {\n  var geometry, type, str;\n  wkt = wkt.replace(/[\\n\\r]/g, ' ');\n  var matches = regExes.typeStr.exec(wkt);\n  if (wkt.search('EMPTY') !== -1) {\n    matches = regExes.emptyTypeStr.exec(wkt);\n    matches[2] = undefined;\n  }\n  if (matches) {\n    type = matches[1].toLowerCase();\n    str = matches[2];\n    if (parse$1[type]) {\n      geometry = parse$1[type].apply(this, [str]);\n    }\n  }\n\n  if (geometry === undefined) { throw new Error('Could not parse WKT ' + wkt) }\n\n  return geometry\n};\n\n/**\n * Serialize a geometry into a WKT string.\n *\n * @param {Geometry} geometry A feature or array of features.\n * @return {String} The WKT string representation of the input geometries.\n * @private\n */\nWKTParser.prototype.write = function write (geometry) {\n  return this.extractGeometry(geometry)\n};\n\n/**\n * Entry point to construct the WKT for a single Geometry object.\n *\n * @param {Geometry} geometry\n * @return {String} A WKT string of representing the geometry.\n * @private\n */\nWKTParser.prototype.extractGeometry = function extractGeometry (geometry) {\n  var type = geometry.getGeometryType().toLowerCase();\n  if (!extract$1[type]) {\n    return null\n  }\n  var wktType = type.toUpperCase();\n  var data;\n  if (geometry.isEmpty()) {\n    data = wktType + ' EMPTY';\n  } else {\n    data = wktType + '(' + extract$1[type].apply(this, [geometry]) + ')';\n  }\n  return data\n};\n\n/**\n * Object with properties corresponding to the geometry types. Property values\n * are functions that do the actual data extraction.\n * @private\n */\nvar extract$1 = {\n  coordinate: function coordinate (coordinate$1) {\n    return coordinate$1.x + ' ' + coordinate$1.y\n  },\n\n  /**\n   * Return a space delimited string of point coordinates.\n   *\n   * @param {Point}\n   *          point\n   * @return {String} A string of coordinates representing the point.\n   */\n  point: function point (point$1) {\n    return extract$1.coordinate.call(this, point$1._coordinates._coordinates[0])\n  },\n\n  /**\n   * Return a comma delimited string of point coordinates from a multipoint.\n   *\n   * @param {MultiPoint}\n   *          multipoint\n   * @return {String} A string of point coordinate strings representing the\n   *         multipoint.\n   */\n  multipoint: function multipoint (multipoint$1) {\n    var this$1 = this;\n\n    var array = [];\n    for (var i = 0, len = multipoint$1._geometries.length; i < len; ++i) {\n      array.push('(' + extract$1.point.apply(this$1, [multipoint$1._geometries[i]]) + ')');\n    }\n    return array.join(',')\n  },\n\n  /**\n   * Return a comma delimited string of point coordinates from a line.\n   *\n   * @param {LineString} linestring\n   * @return {String} A string of point coordinate strings representing the linestring.\n   */\n  linestring: function linestring (linestring$1) {\n    var this$1 = this;\n\n    var array = [];\n    for (var i = 0, len = linestring$1._points._coordinates.length; i < len; ++i) {\n      array.push(extract$1.coordinate.apply(this$1, [linestring$1._points._coordinates[i]]));\n    }\n    return array.join(',')\n  },\n\n  linearring: function linearring (linearring$1) {\n    var this$1 = this;\n\n    var array = [];\n    for (var i = 0, len = linearring$1._points._coordinates.length; i < len; ++i) {\n      array.push(extract$1.coordinate.apply(this$1, [linearring$1._points._coordinates[i]]));\n    }\n    return array.join(',')\n  },\n\n  /**\n   * Return a comma delimited string of linestring strings from a\n   * multilinestring.\n   *\n   * @param {MultiLineString} multilinestring\n   * @return {String} A string of of linestring strings representing the multilinestring.\n   */\n  multilinestring: function multilinestring (multilinestring$1) {\n    var this$1 = this;\n\n    var array = [];\n    for (var i = 0, len = multilinestring$1._geometries.length; i < len; ++i) {\n      array.push('(' +\n        extract$1.linestring.apply(this$1, [multilinestring$1._geometries[i]]) +\n        ')');\n    }\n    return array.join(',')\n  },\n\n  /**\n   * Return a comma delimited string of linear ring arrays from a polygon.\n   *\n   * @param {Polygon} polygon\n   * @return {String} An array of linear ring arrays representing the polygon.\n   */\n  polygon: function polygon (polygon$1) {\n    var this$1 = this;\n\n    var array = [];\n    array.push('(' + extract$1.linestring.apply(this, [polygon$1._shell]) + ')');\n    for (var i = 0, len = polygon$1._holes.length; i < len; ++i) {\n      array.push('(' + extract$1.linestring.apply(this$1, [polygon$1._holes[i]]) + ')');\n    }\n    return array.join(',')\n  },\n\n  /**\n   * Return an array of polygon arrays from a multipolygon.\n   *\n   * @param {MultiPolygon} multipolygon\n   * @return {String} An array of polygon arrays representing the multipolygon.\n   */\n  multipolygon: function multipolygon (multipolygon$1) {\n    var this$1 = this;\n\n    var array = [];\n    for (var i = 0, len = multipolygon$1._geometries.length; i < len; ++i) {\n      array.push('(' + extract$1.polygon.apply(this$1, [multipolygon$1._geometries[i]]) + ')');\n    }\n    return array.join(',')\n  },\n\n  /**\n   * Return the WKT portion between 'GEOMETRYCOLLECTION(' and ')' for an\n   * geometrycollection.\n   *\n   * @param {GeometryCollection} collection\n   * @return {String} internal WKT representation of the collection.\n   */\n  geometrycollection: function geometrycollection (collection) {\n    var this$1 = this;\n\n    var array = [];\n    for (var i = 0, len = collection._geometries.length; i < len; ++i) {\n      array.push(this$1.extractGeometry(collection._geometries[i]));\n    }\n    return array.join(',')\n  }\n};\n\n/**\n * Object with properties corresponding to the geometry types. Property values\n * are functions that do the actual parsing.\n * @private\n */\nvar parse$1 = {\n  /**\n   * Return point geometry given a point WKT fragment.\n   *\n   * @param {String} str A WKT fragment representing the point.\n   * @return {Point} A point geometry.\n   * @private\n   */\n  point: function point (str) {\n    if (str === undefined) {\n      return this.geometryFactory.createPoint()\n    }\n\n    var coords = str.trim().split(regExes.spaces);\n    return this.geometryFactory.createPoint(new Coordinate(Number.parseFloat(coords[0]),\n      Number.parseFloat(coords[1])))\n  },\n\n  /**\n   * Return a multipoint geometry given a multipoint WKT fragment.\n   *\n   * @param {String} str A WKT fragment representing the multipoint.\n   * @return {Point} A multipoint feature.\n   * @private\n   */\n  multipoint: function multipoint (str) {\n    var this$1 = this;\n\n    if (str === undefined) {\n      return this.geometryFactory.createMultiPoint()\n    }\n\n    var point;\n    var points = str.trim().split(',');\n    var components = [];\n    for (var i = 0, len = points.length; i < len; ++i) {\n      point = points[i].replace(regExes.trimParens, '$1');\n      components.push(parse$1.point.apply(this$1, [point]));\n    }\n    return this.geometryFactory.createMultiPoint(components)\n  },\n\n  /**\n   * Return a linestring geometry given a linestring WKT fragment.\n   *\n   * @param {String} str A WKT fragment representing the linestring.\n   * @return {LineString} A linestring geometry.\n   * @private\n   */\n  linestring: function linestring (str) {\n    if (str === undefined) {\n      return this.geometryFactory.createLineString()\n    }\n\n    var points = str.trim().split(',');\n    var components = [];\n    var coords;\n    for (var i = 0, len = points.length; i < len; ++i) {\n      coords = points[i].trim().split(regExes.spaces);\n      components.push(new Coordinate(Number.parseFloat(coords[0]), Number.parseFloat(coords[1])));\n    }\n    return this.geometryFactory.createLineString(components)\n  },\n\n  /**\n   * Return a linearring geometry given a linearring WKT fragment.\n   *\n   * @param {String} str A WKT fragment representing the linearring.\n   * @return {LinearRing} A linearring geometry.\n   * @private\n   */\n  linearring: function linearring (str) {\n    if (str === undefined) {\n      return this.geometryFactory.createLinearRing()\n    }\n\n    var points = str.trim().split(',');\n    var components = [];\n    var coords;\n    for (var i = 0, len = points.length; i < len; ++i) {\n      coords = points[i].trim().split(regExes.spaces);\n      components.push(new Coordinate(Number.parseFloat(coords[0]), Number.parseFloat(coords[1])));\n    }\n    return this.geometryFactory.createLinearRing(components)\n  },\n\n  /**\n   * Return a multilinestring geometry given a multilinestring WKT fragment.\n   *\n   * @param {String} str A WKT fragment representing the multilinestring.\n   * @return {MultiLineString} A multilinestring geometry.\n   * @private\n   */\n  multilinestring: function multilinestring (str) {\n    var this$1 = this;\n\n    if (str === undefined) {\n      return this.geometryFactory.createMultiLineString()\n    }\n\n    var line;\n    var lines = str.trim().split(regExes.parenComma);\n    var components = [];\n    for (var i = 0, len = lines.length; i < len; ++i) {\n      line = lines[i].replace(regExes.trimParens, '$1');\n      components.push(parse$1.linestring.apply(this$1, [line]));\n    }\n    return this.geometryFactory.createMultiLineString(components)\n  },\n\n  /**\n   * Return a polygon geometry given a polygon WKT fragment.\n   *\n   * @param {String} str A WKT fragment representing the polygon.\n   * @return {Polygon} A polygon geometry.\n   * @private\n   */\n  polygon: function polygon (str) {\n    var this$1 = this;\n\n    if (str === undefined) {\n      return this.geometryFactory.createPolygon()\n    }\n\n    var ring, linestring, linearring;\n    var rings = str.trim().split(regExes.parenComma);\n    var shell;\n    var holes = [];\n    for (var i = 0, len = rings.length; i < len; ++i) {\n      ring = rings[i].replace(regExes.trimParens, '$1');\n      linestring = parse$1.linestring.apply(this$1, [ring]);\n      linearring = this$1.geometryFactory.createLinearRing(linestring._points);\n      if (i === 0) {\n        shell = linearring;\n      } else {\n        holes.push(linearring);\n      }\n    }\n    return this.geometryFactory.createPolygon(shell, holes)\n  },\n\n  /**\n   * Return a multipolygon geometry given a multipolygon WKT fragment.\n   *\n   * @param {String} str A WKT fragment representing the multipolygon.\n   * @return {MultiPolygon} A multipolygon geometry.\n   * @private\n   */\n  multipolygon: function multipolygon (str) {\n    var this$1 = this;\n\n    if (str === undefined) {\n      return this.geometryFactory.createMultiPolygon()\n    }\n\n    var polygon;\n    var polygons = str.trim().split(regExes.doubleParenComma);\n    var components = [];\n    for (var i = 0, len = polygons.length; i < len; ++i) {\n      polygon = polygons[i].replace(regExes.trimParens, '$1');\n      components.push(parse$1.polygon.apply(this$1, [polygon]));\n    }\n    return this.geometryFactory.createMultiPolygon(components)\n  },\n\n  /**\n   * Return a geometrycollection given a geometrycollection WKT fragment.\n   *\n   * @param {String} str A WKT fragment representing the geometrycollection.\n   * @return {GeometryCollection}\n   * @private\n   */\n  geometrycollection: function geometrycollection (str) {\n    var this$1 = this;\n\n    if (str === undefined) {\n      return this.geometryFactory.createGeometryCollection()\n    }\n\n    // separate components of the collection with |\n    str = str.replace(/,\\s*([A-Za-z])/g, '|$1');\n    var wktArray = str.trim().split('|');\n    var components = [];\n    for (var i = 0, len = wktArray.length; i < len; ++i) {\n      components.push(this$1.read(wktArray[i]));\n    }\n    return this.geometryFactory.createGeometryCollection(components)\n  }\n};\n\n/**\n * Writes the Well-Known Text representation of a {@link Geometry}. The\n * Well-Known Text format is defined in the <A\n * HREF=\"http://www.opengis.org/techno/specs.htm\"> OGC Simple Features\n * Specification for SQL</A>.\n * <p>\n * The <code>WKTWriter</code> outputs coordinates rounded to the precision\n * model. Only the maximum number of decimal places necessary to represent the\n * ordinates to the required precision will be output.\n * <p>\n * The SFS WKT spec does not define a special tag for {@link LinearRing}s.\n * Under the spec, rings are output as <code>LINESTRING</code>s.\n */\n\n/**\n * @param {GeometryFactory} geometryFactory\n * @constructor\n */\nvar WKTWriter = function WKTWriter (geometryFactory) {\n  this.parser = new WKTParser(geometryFactory);\n};\n\n/**\n * Converts a <code>Geometry</code> to its Well-known Text representation.\n *\n * @param {Geometry} geometry a <code>Geometry</code> to process.\n * @return {string} a <Geometry Tagged Text> string (see the OpenGIS Simple\n *       Features Specification).\n * @memberof WKTWriter\n */\nWKTWriter.prototype.write = function write (geometry) {\n  return this.parser.write(geometry)\n};\n/**\n * Generates the WKT for a <tt>LINESTRING</tt> specified by two\n * {@link Coordinate}s.\n *\n * @param p0 the first coordinate.\n * @param p1 the second coordinate.\n *\n * @return the WKT.\n * @private\n */\nWKTWriter.toLineString = function toLineString (p0, p1) {\n  if (arguments.length !== 2) {\n    throw new Error('Not implemented')\n  }\n  return 'LINESTRING ( ' + p0.x + ' ' + p0.y + ', ' + p1.x + ' ' + p1.y + ' )'\n};\n\nvar RuntimeException = (function (Error) {\n  function RuntimeException (message) {\n    Error.call(this, message);\n    this.name = 'RuntimeException';\n    this.message = message;\n    this.stack = (new Error()).stack;\n  }\n\n  if ( Error ) RuntimeException.__proto__ = Error;\n  RuntimeException.prototype = Object.create( Error && Error.prototype );\n  RuntimeException.prototype.constructor = RuntimeException;\n\n  return RuntimeException;\n}(Error));\n\nvar AssertionFailedException = (function (RuntimeException$$1) {\n  function AssertionFailedException () {\n    RuntimeException$$1.call(this);\n    if (arguments.length === 0) {\n      RuntimeException$$1.call(this);\n    } else if (arguments.length === 1) {\n      var message = arguments[0];\n      RuntimeException$$1.call(this, message);\n    }\n  }\n\n  if ( RuntimeException$$1 ) AssertionFailedException.__proto__ = RuntimeException$$1;\n  AssertionFailedException.prototype = Object.create( RuntimeException$$1 && RuntimeException$$1.prototype );\n  AssertionFailedException.prototype.constructor = AssertionFailedException;\n  AssertionFailedException.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  AssertionFailedException.prototype.getClass = function getClass () {\n    return AssertionFailedException\n  };\n\n  return AssertionFailedException;\n}(RuntimeException));\n\nvar Assert = function Assert () {};\n\nAssert.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nAssert.prototype.getClass = function getClass () {\n  return Assert\n};\nAssert.shouldNeverReachHere = function shouldNeverReachHere () {\n  if (arguments.length === 0) {\n    Assert.shouldNeverReachHere(null);\n  } else if (arguments.length === 1) {\n    var message = arguments[0];\n    throw new AssertionFailedException('Should never reach here' + (message !== null ? ': ' + message : ''))\n  }\n};\nAssert.isTrue = function isTrue () {\n  var assertion;\n  var message;\n  if (arguments.length === 1) {\n    assertion = arguments[0];\n    Assert.isTrue(assertion, null);\n  } else if (arguments.length === 2) {\n    assertion = arguments[0];\n    message = arguments[1];\n    if (!assertion) {\n      if (message === null) {\n        throw new AssertionFailedException()\n      } else {\n        throw new AssertionFailedException(message)\n      }\n    }\n  }\n};\nAssert.equals = function equals () {\n  var expectedValue;\n  var actualValue;\n  var message;\n  if (arguments.length === 2) {\n    expectedValue = arguments[0];\n    actualValue = arguments[1];\n    Assert.equals(expectedValue, actualValue, null);\n  } else if (arguments.length === 3) {\n    expectedValue = arguments[0];\n    actualValue = arguments[1];\n    message = arguments[2];\n    if (!actualValue.equals(expectedValue)) {\n      throw new AssertionFailedException('Expected ' + expectedValue + ' but encountered ' + actualValue + (message !== null ? ': ' + message : ''))\n    }\n  }\n};\n\nvar LineIntersector = function LineIntersector () {\n  this._result = null;\n  this._inputLines = Array(2).fill().map(function () { return Array(2); });\n  this._intPt = new Array(2).fill(null);\n  this._intLineIndex = null;\n  this._isProper = null;\n  this._pa = null;\n  this._pb = null;\n  this._precisionModel = null;\n  this._intPt[0] = new Coordinate();\n  this._intPt[1] = new Coordinate();\n  this._pa = this._intPt[0];\n  this._pb = this._intPt[1];\n  this._result = 0;\n};\n\nvar staticAccessors$10 = { DONT_INTERSECT: { configurable: true },DO_INTERSECT: { configurable: true },COLLINEAR: { configurable: true },NO_INTERSECTION: { configurable: true },POINT_INTERSECTION: { configurable: true },COLLINEAR_INTERSECTION: { configurable: true } };\nLineIntersector.prototype.getIndexAlongSegment = function getIndexAlongSegment (segmentIndex, intIndex) {\n  this.computeIntLineIndex();\n  return this._intLineIndex[segmentIndex][intIndex]\n};\nLineIntersector.prototype.getTopologySummary = function getTopologySummary () {\n  var catBuf = new StringBuffer();\n  if (this.isEndPoint()) { catBuf.append(' endpoint'); }\n  if (this._isProper) { catBuf.append(' proper'); }\n  if (this.isCollinear()) { catBuf.append(' collinear'); }\n  return catBuf.toString()\n};\nLineIntersector.prototype.computeIntersection = function computeIntersection (p1, p2, p3, p4) {\n  this._inputLines[0][0] = p1;\n  this._inputLines[0][1] = p2;\n  this._inputLines[1][0] = p3;\n  this._inputLines[1][1] = p4;\n  this._result = this.computeIntersect(p1, p2, p3, p4);\n};\nLineIntersector.prototype.getIntersectionNum = function getIntersectionNum () {\n  return this._result\n};\nLineIntersector.prototype.computeIntLineIndex = function computeIntLineIndex () {\n  if (arguments.length === 0) {\n    if (this._intLineIndex === null) {\n      this._intLineIndex = Array(2).fill().map(function () { return Array(2); });\n      this.computeIntLineIndex(0);\n      this.computeIntLineIndex(1);\n    }\n  } else if (arguments.length === 1) {\n    var segmentIndex = arguments[0];\n    var dist0 = this.getEdgeDistance(segmentIndex, 0);\n    var dist1 = this.getEdgeDistance(segmentIndex, 1);\n    if (dist0 > dist1) {\n      this._intLineIndex[segmentIndex][0] = 0;\n      this._intLineIndex[segmentIndex][1] = 1;\n    } else {\n      this._intLineIndex[segmentIndex][0] = 1;\n      this._intLineIndex[segmentIndex][1] = 0;\n    }\n  }\n};\nLineIntersector.prototype.isProper = function isProper () {\n  return this.hasIntersection() && this._isProper\n};\nLineIntersector.prototype.setPrecisionModel = function setPrecisionModel (precisionModel) {\n  this._precisionModel = precisionModel;\n};\nLineIntersector.prototype.isInteriorIntersection = function isInteriorIntersection () {\n    var this$1 = this;\n\n  if (arguments.length === 0) {\n    if (this.isInteriorIntersection(0)) { return true }\n    if (this.isInteriorIntersection(1)) { return true }\n    return false\n  } else if (arguments.length === 1) {\n    var inputLineIndex = arguments[0];\n    for (var i = 0; i < this._result; i++) {\n      if (!(this$1._intPt[i].equals2D(this$1._inputLines[inputLineIndex][0]) || this$1._intPt[i].equals2D(this$1._inputLines[inputLineIndex][1]))) {\n        return true\n      }\n    }\n    return false\n  }\n};\nLineIntersector.prototype.getIntersection = function getIntersection (intIndex) {\n  return this._intPt[intIndex]\n};\nLineIntersector.prototype.isEndPoint = function isEndPoint () {\n  return this.hasIntersection() && !this._isProper\n};\nLineIntersector.prototype.hasIntersection = function hasIntersection () {\n  return this._result !== LineIntersector.NO_INTERSECTION\n};\nLineIntersector.prototype.getEdgeDistance = function getEdgeDistance (segmentIndex, intIndex) {\n  var dist = LineIntersector.computeEdgeDistance(this._intPt[intIndex], this._inputLines[segmentIndex][0], this._inputLines[segmentIndex][1]);\n  return dist\n};\nLineIntersector.prototype.isCollinear = function isCollinear () {\n  return this._result === LineIntersector.COLLINEAR_INTERSECTION\n};\nLineIntersector.prototype.toString = function toString () {\n  return WKTWriter.toLineString(this._inputLines[0][0], this._inputLines[0][1]) + ' - ' + WKTWriter.toLineString(this._inputLines[1][0], this._inputLines[1][1]) + this.getTopologySummary()\n};\nLineIntersector.prototype.getEndpoint = function getEndpoint (segmentIndex, ptIndex) {\n  return this._inputLines[segmentIndex][ptIndex]\n};\nLineIntersector.prototype.isIntersection = function isIntersection (pt) {\n    var this$1 = this;\n\n  for (var i = 0; i < this._result; i++) {\n    if (this$1._intPt[i].equals2D(pt)) {\n      return true\n    }\n  }\n  return false\n};\nLineIntersector.prototype.getIntersectionAlongSegment = function getIntersectionAlongSegment (segmentIndex, intIndex) {\n  this.computeIntLineIndex();\n  return this._intPt[this._intLineIndex[segmentIndex][intIndex]]\n};\nLineIntersector.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nLineIntersector.prototype.getClass = function getClass () {\n  return LineIntersector\n};\nLineIntersector.computeEdgeDistance = function computeEdgeDistance (p, p0, p1) {\n  var dx = Math.abs(p1.x - p0.x);\n  var dy = Math.abs(p1.y - p0.y);\n  var dist = -1.0;\n  if (p.equals(p0)) {\n    dist = 0.0;\n  } else if (p.equals(p1)) {\n    if (dx > dy) { dist = dx; } else { dist = dy; }\n  } else {\n    var pdx = Math.abs(p.x - p0.x);\n    var pdy = Math.abs(p.y - p0.y);\n    if (dx > dy) { dist = pdx; } else { dist = pdy; }\n    if (dist === 0.0 && !p.equals(p0)) {\n      dist = Math.max(pdx, pdy);\n    }\n  }\n  Assert.isTrue(!(dist === 0.0 && !p.equals(p0)), 'Bad distance calculation');\n  return dist\n};\nLineIntersector.nonRobustComputeEdgeDistance = function nonRobustComputeEdgeDistance (p, p1, p2) {\n  var dx = p.x - p1.x;\n  var dy = p.y - p1.y;\n  var dist = Math.sqrt(dx * dx + dy * dy);\n  Assert.isTrue(!(dist === 0.0 && !p.equals(p1)), 'Invalid distance calculation');\n  return dist\n};\nstaticAccessors$10.DONT_INTERSECT.get = function () { return 0 };\nstaticAccessors$10.DO_INTERSECT.get = function () { return 1 };\nstaticAccessors$10.COLLINEAR.get = function () { return 2 };\nstaticAccessors$10.NO_INTERSECTION.get = function () { return 0 };\nstaticAccessors$10.POINT_INTERSECTION.get = function () { return 1 };\nstaticAccessors$10.COLLINEAR_INTERSECTION.get = function () { return 2 };\n\nObject.defineProperties( LineIntersector, staticAccessors$10 );\n\nvar RobustLineIntersector = (function (LineIntersector$$1) {\n  function RobustLineIntersector () {\n    LineIntersector$$1.apply(this, arguments);\n  }\n\n  if ( LineIntersector$$1 ) RobustLineIntersector.__proto__ = LineIntersector$$1;\n  RobustLineIntersector.prototype = Object.create( LineIntersector$$1 && LineIntersector$$1.prototype );\n  RobustLineIntersector.prototype.constructor = RobustLineIntersector;\n\n  RobustLineIntersector.prototype.isInSegmentEnvelopes = function isInSegmentEnvelopes (intPt) {\n    var env0 = new Envelope(this._inputLines[0][0], this._inputLines[0][1]);\n    var env1 = new Envelope(this._inputLines[1][0], this._inputLines[1][1]);\n    return env0.contains(intPt) && env1.contains(intPt)\n  };\n  RobustLineIntersector.prototype.computeIntersection = function computeIntersection () {\n    if (arguments.length === 3) {\n      var p = arguments[0];\n      var p1 = arguments[1];\n      var p2 = arguments[2];\n      this._isProper = false;\n      if (Envelope.intersects(p1, p2, p)) {\n        if (CGAlgorithms.orientationIndex(p1, p2, p) === 0 && CGAlgorithms.orientationIndex(p2, p1, p) === 0) {\n          this._isProper = true;\n          if (p.equals(p1) || p.equals(p2)) {\n            this._isProper = false;\n          }\n          this._result = LineIntersector$$1.POINT_INTERSECTION;\n          return null\n        }\n      }\n      this._result = LineIntersector$$1.NO_INTERSECTION;\n    } else { return LineIntersector$$1.prototype.computeIntersection.apply(this, arguments) }\n  };\n  RobustLineIntersector.prototype.normalizeToMinimum = function normalizeToMinimum (n1, n2, n3, n4, normPt) {\n    normPt.x = this.smallestInAbsValue(n1.x, n2.x, n3.x, n4.x);\n    normPt.y = this.smallestInAbsValue(n1.y, n2.y, n3.y, n4.y);\n    n1.x -= normPt.x;\n    n1.y -= normPt.y;\n    n2.x -= normPt.x;\n    n2.y -= normPt.y;\n    n3.x -= normPt.x;\n    n3.y -= normPt.y;\n    n4.x -= normPt.x;\n    n4.y -= normPt.y;\n  };\n  RobustLineIntersector.prototype.safeHCoordinateIntersection = function safeHCoordinateIntersection (p1, p2, q1, q2) {\n    var intPt = null;\n    try {\n      intPt = HCoordinate.intersection(p1, p2, q1, q2);\n    } catch (e) {\n      if (e instanceof NotRepresentableException) {\n        intPt = RobustLineIntersector.nearestEndpoint(p1, p2, q1, q2);\n      } else { throw e }\n    } finally {}\n    return intPt\n  };\n  RobustLineIntersector.prototype.intersection = function intersection (p1, p2, q1, q2) {\n    var intPt = this.intersectionWithNormalization(p1, p2, q1, q2);\n    if (!this.isInSegmentEnvelopes(intPt)) {\n      intPt = new Coordinate(RobustLineIntersector.nearestEndpoint(p1, p2, q1, q2));\n    }\n    if (this._precisionModel !== null) {\n      this._precisionModel.makePrecise(intPt);\n    }\n    return intPt\n  };\n  RobustLineIntersector.prototype.smallestInAbsValue = function smallestInAbsValue (x1, x2, x3, x4) {\n    var x = x1;\n    var xabs = Math.abs(x);\n    if (Math.abs(x2) < xabs) {\n      x = x2;\n      xabs = Math.abs(x2);\n    }\n    if (Math.abs(x3) < xabs) {\n      x = x3;\n      xabs = Math.abs(x3);\n    }\n    if (Math.abs(x4) < xabs) {\n      x = x4;\n    }\n    return x\n  };\n  RobustLineIntersector.prototype.checkDD = function checkDD (p1, p2, q1, q2, intPt) {\n    var intPtDD = CGAlgorithmsDD.intersection(p1, p2, q1, q2);\n    var isIn = this.isInSegmentEnvelopes(intPtDD);\n    System.out.println('DD in env = ' + isIn + '  --------------------- ' + intPtDD);\n    if (intPt.distance(intPtDD) > 0.0001) {\n      System.out.println('Distance = ' + intPt.distance(intPtDD));\n    }\n  };\n  RobustLineIntersector.prototype.intersectionWithNormalization = function intersectionWithNormalization (p1, p2, q1, q2) {\n    var n1 = new Coordinate(p1);\n    var n2 = new Coordinate(p2);\n    var n3 = new Coordinate(q1);\n    var n4 = new Coordinate(q2);\n    var normPt = new Coordinate();\n    this.normalizeToEnvCentre(n1, n2, n3, n4, normPt);\n    var intPt = this.safeHCoordinateIntersection(n1, n2, n3, n4);\n    intPt.x += normPt.x;\n    intPt.y += normPt.y;\n    return intPt\n  };\n  RobustLineIntersector.prototype.computeCollinearIntersection = function computeCollinearIntersection (p1, p2, q1, q2) {\n    var p1q1p2 = Envelope.intersects(p1, p2, q1);\n    var p1q2p2 = Envelope.intersects(p1, p2, q2);\n    var q1p1q2 = Envelope.intersects(q1, q2, p1);\n    var q1p2q2 = Envelope.intersects(q1, q2, p2);\n    if (p1q1p2 && p1q2p2) {\n      this._intPt[0] = q1;\n      this._intPt[1] = q2;\n      return LineIntersector$$1.COLLINEAR_INTERSECTION\n    }\n    if (q1p1q2 && q1p2q2) {\n      this._intPt[0] = p1;\n      this._intPt[1] = p2;\n      return LineIntersector$$1.COLLINEAR_INTERSECTION\n    }\n    if (p1q1p2 && q1p1q2) {\n      this._intPt[0] = q1;\n      this._intPt[1] = p1;\n      return q1.equals(p1) && !p1q2p2 && !q1p2q2 ? LineIntersector$$1.POINT_INTERSECTION : LineIntersector$$1.COLLINEAR_INTERSECTION\n    }\n    if (p1q1p2 && q1p2q2) {\n      this._intPt[0] = q1;\n      this._intPt[1] = p2;\n      return q1.equals(p2) && !p1q2p2 && !q1p1q2 ? LineIntersector$$1.POINT_INTERSECTION : LineIntersector$$1.COLLINEAR_INTERSECTION\n    }\n    if (p1q2p2 && q1p1q2) {\n      this._intPt[0] = q2;\n      this._intPt[1] = p1;\n      return q2.equals(p1) && !p1q1p2 && !q1p2q2 ? LineIntersector$$1.POINT_INTERSECTION : LineIntersector$$1.COLLINEAR_INTERSECTION\n    }\n    if (p1q2p2 && q1p2q2) {\n      this._intPt[0] = q2;\n      this._intPt[1] = p2;\n      return q2.equals(p2) && !p1q1p2 && !q1p1q2 ? LineIntersector$$1.POINT_INTERSECTION : LineIntersector$$1.COLLINEAR_INTERSECTION\n    }\n    return LineIntersector$$1.NO_INTERSECTION\n  };\n  RobustLineIntersector.prototype.normalizeToEnvCentre = function normalizeToEnvCentre (n00, n01, n10, n11, normPt) {\n    var minX0 = n00.x < n01.x ? n00.x : n01.x;\n    var minY0 = n00.y < n01.y ? n00.y : n01.y;\n    var maxX0 = n00.x > n01.x ? n00.x : n01.x;\n    var maxY0 = n00.y > n01.y ? n00.y : n01.y;\n    var minX1 = n10.x < n11.x ? n10.x : n11.x;\n    var minY1 = n10.y < n11.y ? n10.y : n11.y;\n    var maxX1 = n10.x > n11.x ? n10.x : n11.x;\n    var maxY1 = n10.y > n11.y ? n10.y : n11.y;\n    var intMinX = minX0 > minX1 ? minX0 : minX1;\n    var intMaxX = maxX0 < maxX1 ? maxX0 : maxX1;\n    var intMinY = minY0 > minY1 ? minY0 : minY1;\n    var intMaxY = maxY0 < maxY1 ? maxY0 : maxY1;\n    var intMidX = (intMinX + intMaxX) / 2.0;\n    var intMidY = (intMinY + intMaxY) / 2.0;\n    normPt.x = intMidX;\n    normPt.y = intMidY;\n    n00.x -= normPt.x;\n    n00.y -= normPt.y;\n    n01.x -= normPt.x;\n    n01.y -= normPt.y;\n    n10.x -= normPt.x;\n    n10.y -= normPt.y;\n    n11.x -= normPt.x;\n    n11.y -= normPt.y;\n  };\n  RobustLineIntersector.prototype.computeIntersect = function computeIntersect (p1, p2, q1, q2) {\n    this._isProper = false;\n    if (!Envelope.intersects(p1, p2, q1, q2)) { return LineIntersector$$1.NO_INTERSECTION }\n    var Pq1 = CGAlgorithms.orientationIndex(p1, p2, q1);\n    var Pq2 = CGAlgorithms.orientationIndex(p1, p2, q2);\n    if ((Pq1 > 0 && Pq2 > 0) || (Pq1 < 0 && Pq2 < 0)) {\n      return LineIntersector$$1.NO_INTERSECTION\n    }\n    var Qp1 = CGAlgorithms.orientationIndex(q1, q2, p1);\n    var Qp2 = CGAlgorithms.orientationIndex(q1, q2, p2);\n    if ((Qp1 > 0 && Qp2 > 0) || (Qp1 < 0 && Qp2 < 0)) {\n      return LineIntersector$$1.NO_INTERSECTION\n    }\n    var collinear = Pq1 === 0 && Pq2 === 0 && Qp1 === 0 && Qp2 === 0;\n    if (collinear) {\n      return this.computeCollinearIntersection(p1, p2, q1, q2)\n    }\n    if (Pq1 === 0 || Pq2 === 0 || Qp1 === 0 || Qp2 === 0) {\n      this._isProper = false;\n      if (p1.equals2D(q1) || p1.equals2D(q2)) {\n        this._intPt[0] = p1;\n      } else if (p2.equals2D(q1) || p2.equals2D(q2)) {\n        this._intPt[0] = p2;\n      } else if (Pq1 === 0) {\n        this._intPt[0] = new Coordinate(q1);\n      } else if (Pq2 === 0) {\n        this._intPt[0] = new Coordinate(q2);\n      } else if (Qp1 === 0) {\n        this._intPt[0] = new Coordinate(p1);\n      } else if (Qp2 === 0) {\n        this._intPt[0] = new Coordinate(p2);\n      }\n    } else {\n      this._isProper = true;\n      this._intPt[0] = this.intersection(p1, p2, q1, q2);\n    }\n    return LineIntersector$$1.POINT_INTERSECTION\n  };\n  RobustLineIntersector.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  RobustLineIntersector.prototype.getClass = function getClass () {\n    return RobustLineIntersector\n  };\n  RobustLineIntersector.nearestEndpoint = function nearestEndpoint (p1, p2, q1, q2) {\n    var nearestPt = p1;\n    var minDist = CGAlgorithms.distancePointLine(p1, q1, q2);\n    var dist = CGAlgorithms.distancePointLine(p2, q1, q2);\n    if (dist < minDist) {\n      minDist = dist;\n      nearestPt = p2;\n    }\n    dist = CGAlgorithms.distancePointLine(q1, p1, p2);\n    if (dist < minDist) {\n      minDist = dist;\n      nearestPt = q1;\n    }\n    dist = CGAlgorithms.distancePointLine(q2, p1, p2);\n    if (dist < minDist) {\n      minDist = dist;\n      nearestPt = q2;\n    }\n    return nearestPt\n  };\n\n  return RobustLineIntersector;\n}(LineIntersector));\n\nvar RobustDeterminant = function RobustDeterminant () {};\n\nRobustDeterminant.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nRobustDeterminant.prototype.getClass = function getClass () {\n  return RobustDeterminant\n};\nRobustDeterminant.orientationIndex = function orientationIndex (p1, p2, q) {\n  var dx1 = p2.x - p1.x;\n  var dy1 = p2.y - p1.y;\n  var dx2 = q.x - p2.x;\n  var dy2 = q.y - p2.y;\n  return RobustDeterminant.signOfDet2x2(dx1, dy1, dx2, dy2)\n};\nRobustDeterminant.signOfDet2x2 = function signOfDet2x2 (x1, y1, x2, y2) {\n  var sign = null;\n  var swap = null;\n  var k = null;\n  sign = 1;\n  if (x1 === 0.0 || y2 === 0.0) {\n    if (y1 === 0.0 || x2 === 0.0) {\n      return 0\n    } else if (y1 > 0) {\n      if (x2 > 0) {\n        return -sign\n      } else {\n        return sign\n      }\n    } else {\n      if (x2 > 0) {\n        return sign\n      } else {\n        return -sign\n      }\n    }\n  }\n  if (y1 === 0.0 || x2 === 0.0) {\n    if (y2 > 0) {\n      if (x1 > 0) {\n        return sign\n      } else {\n        return -sign\n      }\n    } else {\n      if (x1 > 0) {\n        return -sign\n      } else {\n        return sign\n      }\n    }\n  }\n  if (y1 > 0.0) {\n    if (y2 > 0.0) {\n      if (y1 <= y2) {\n        \n      } else {\n        sign = -sign;\n        swap = x1;\n        x1 = x2;\n        x2 = swap;\n        swap = y1;\n        y1 = y2;\n        y2 = swap;\n      }\n    } else {\n      if (y1 <= -y2) {\n        sign = -sign;\n        x2 = -x2;\n        y2 = -y2;\n      } else {\n        swap = x1;\n        x1 = -x2;\n        x2 = swap;\n        swap = y1;\n        y1 = -y2;\n        y2 = swap;\n      }\n    }\n  } else {\n    if (y2 > 0.0) {\n      if (-y1 <= y2) {\n        sign = -sign;\n        x1 = -x1;\n        y1 = -y1;\n      } else {\n        swap = -x1;\n        x1 = x2;\n        x2 = swap;\n        swap = -y1;\n        y1 = y2;\n        y2 = swap;\n      }\n    } else {\n      if (y1 >= y2) {\n        x1 = -x1;\n        y1 = -y1;\n        x2 = -x2;\n        y2 = -y2;\n      } else {\n        sign = -sign;\n        swap = -x1;\n        x1 = -x2;\n        x2 = swap;\n        swap = -y1;\n        y1 = -y2;\n        y2 = swap;\n      }\n    }\n  }\n  if (x1 > 0.0) {\n    if (x2 > 0.0) {\n      if (x1 <= x2) {\n        \n      } else {\n        return sign\n      }\n    } else {\n      return sign\n    }\n  } else {\n    if (x2 > 0.0) {\n      return -sign\n    } else {\n      if (x1 >= x2) {\n        sign = -sign;\n        x1 = -x1;\n        x2 = -x2;\n      } else {\n        return -sign\n      }\n    }\n  }\n  while (true) {\n    k = Math.floor(x2 / x1);\n    x2 = x2 - k * x1;\n    y2 = y2 - k * y1;\n    if (y2 < 0.0) {\n      return -sign\n    }\n    if (y2 > y1) {\n      return sign\n    }\n    if (x1 > x2 + x2) {\n      if (y1 < y2 + y2) {\n        return sign\n      }\n    } else {\n      if (y1 > y2 + y2) {\n        return -sign\n      } else {\n        x2 = x1 - x2;\n        y2 = y1 - y2;\n        sign = -sign;\n      }\n    }\n    if (y2 === 0.0) {\n      if (x2 === 0.0) {\n        return 0\n      } else {\n        return -sign\n      }\n    }\n    if (x2 === 0.0) {\n      return sign\n    }\n    k = Math.floor(x1 / x2);\n    x1 = x1 - k * x2;\n    y1 = y1 - k * y2;\n    if (y1 < 0.0) {\n      return sign\n    }\n    if (y1 > y2) {\n      return -sign\n    }\n    if (x2 > x1 + x1) {\n      if (y2 < y1 + y1) {\n        return -sign\n      }\n    } else {\n      if (y2 > y1 + y1) {\n        return sign\n      } else {\n        x1 = x2 - x1;\n        y1 = y2 - y1;\n        sign = -sign;\n      }\n    }\n    if (y1 === 0.0) {\n      if (x1 === 0.0) {\n        return 0\n      } else {\n        return sign\n      }\n    }\n    if (x1 === 0.0) {\n      return -sign\n    }\n  }\n};\n\nvar RayCrossingCounter = function RayCrossingCounter () {\n  this._p = null;\n  this._crossingCount = 0;\n  this._isPointOnSegment = false;\n  var p = arguments[0];\n  this._p = p;\n};\nRayCrossingCounter.prototype.countSegment = function countSegment (p1, p2) {\n  if (p1.x < this._p.x && p2.x < this._p.x) { return null }\n  if (this._p.x === p2.x && this._p.y === p2.y) {\n    this._isPointOnSegment = true;\n    return null\n  }\n  if (p1.y === this._p.y && p2.y === this._p.y) {\n    var minx = p1.x;\n    var maxx = p2.x;\n    if (minx > maxx) {\n      minx = p2.x;\n      maxx = p1.x;\n    }\n    if (this._p.x >= minx && this._p.x <= maxx) {\n      this._isPointOnSegment = true;\n    }\n    return null\n  }\n  if ((p1.y > this._p.y && p2.y <= this._p.y) || (p2.y > this._p.y && p1.y <= this._p.y)) {\n    var x1 = p1.x - this._p.x;\n    var y1 = p1.y - this._p.y;\n    var x2 = p2.x - this._p.x;\n    var y2 = p2.y - this._p.y;\n    var xIntSign = RobustDeterminant.signOfDet2x2(x1, y1, x2, y2);\n    if (xIntSign === 0.0) {\n      this._isPointOnSegment = true;\n      return null\n    }\n    if (y2 < y1) { xIntSign = -xIntSign; }\n    if (xIntSign > 0.0) {\n      this._crossingCount++;\n    }\n  }\n};\nRayCrossingCounter.prototype.isPointInPolygon = function isPointInPolygon () {\n  return this.getLocation() !== Location.EXTERIOR\n};\nRayCrossingCounter.prototype.getLocation = function getLocation () {\n  if (this._isPointOnSegment) { return Location.BOUNDARY }\n  if (this._crossingCount % 2 === 1) {\n    return Location.INTERIOR\n  }\n  return Location.EXTERIOR\n};\nRayCrossingCounter.prototype.isOnSegment = function isOnSegment () {\n  return this._isPointOnSegment\n};\nRayCrossingCounter.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nRayCrossingCounter.prototype.getClass = function getClass () {\n  return RayCrossingCounter\n};\nRayCrossingCounter.locatePointInRing = function locatePointInRing () {\n  if (arguments[0] instanceof Coordinate && hasInterface(arguments[1], CoordinateSequence)) {\n    var p = arguments[0];\n    var ring = arguments[1];\n    var counter = new RayCrossingCounter(p);\n    var p1 = new Coordinate();\n    var p2 = new Coordinate();\n    for (var i = 1; i < ring.size(); i++) {\n      ring.getCoordinate(i, p1);\n      ring.getCoordinate(i - 1, p2);\n      counter.countSegment(p1, p2);\n      if (counter.isOnSegment()) { return counter.getLocation() }\n    }\n    return counter.getLocation()\n  } else if (arguments[0] instanceof Coordinate && arguments[1] instanceof Array) {\n    var p$1 = arguments[0];\n    var ring$1 = arguments[1];\n    var counter$1 = new RayCrossingCounter(p$1);\n    for (var i$1 = 1; i$1 < ring$1.length; i$1++) {\n      var p1$1 = ring$1[i$1];\n      var p2$1 = ring$1[i$1 - 1];\n      counter$1.countSegment(p1$1, p2$1);\n      if (counter$1.isOnSegment()) { return counter$1.getLocation() }\n    }\n    return counter$1.getLocation()\n  }\n};\n\nvar CGAlgorithms = function CGAlgorithms () {};\n\nvar staticAccessors$3 = { CLOCKWISE: { configurable: true },RIGHT: { configurable: true },COUNTERCLOCKWISE: { configurable: true },LEFT: { configurable: true },COLLINEAR: { configurable: true },STRAIGHT: { configurable: true } };\n\nCGAlgorithms.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nCGAlgorithms.prototype.getClass = function getClass () {\n  return CGAlgorithms\n};\nCGAlgorithms.orientationIndex = function orientationIndex (p1, p2, q) {\n  return CGAlgorithmsDD.orientationIndex(p1, p2, q)\n};\nCGAlgorithms.signedArea = function signedArea () {\n  if (arguments[0] instanceof Array) {\n    var ring = arguments[0];\n    if (ring.length < 3) { return 0.0 }\n    var sum = 0.0;\n    var x0 = ring[0].x;\n    for (var i = 1; i < ring.length - 1; i++) {\n      var x = ring[i].x - x0;\n      var y1 = ring[i + 1].y;\n      var y2 = ring[i - 1].y;\n      sum += x * (y2 - y1);\n    }\n    return sum / 2.0\n  } else if (hasInterface(arguments[0], CoordinateSequence)) {\n    var ring$1 = arguments[0];\n    var n = ring$1.size();\n    if (n < 3) { return 0.0 }\n    var p0 = new Coordinate();\n    var p1 = new Coordinate();\n    var p2 = new Coordinate();\n    ring$1.getCoordinate(0, p1);\n    ring$1.getCoordinate(1, p2);\n    var x0$1 = p1.x;\n    p2.x -= x0$1;\n    var sum$1 = 0.0;\n    for (var i$1 = 1; i$1 < n - 1; i$1++) {\n      p0.y = p1.y;\n      p1.x = p2.x;\n      p1.y = p2.y;\n      ring$1.getCoordinate(i$1 + 1, p2);\n      p2.x -= x0$1;\n      sum$1 += p1.x * (p0.y - p2.y);\n    }\n    return sum$1 / 2.0\n  }\n};\nCGAlgorithms.distanceLineLine = function distanceLineLine (A, B, C, D) {\n  if (A.equals(B)) { return CGAlgorithms.distancePointLine(A, C, D) }\n  if (C.equals(D)) { return CGAlgorithms.distancePointLine(D, A, B) }\n  var noIntersection = false;\n  if (!Envelope.intersects(A, B, C, D)) {\n    noIntersection = true;\n  } else {\n    var denom = (B.x - A.x) * (D.y - C.y) - (B.y - A.y) * (D.x - C.x);\n    if (denom === 0) {\n      noIntersection = true;\n    } else {\n      var rNumb = (A.y - C.y) * (D.x - C.x) - (A.x - C.x) * (D.y - C.y);\n      var sNum = (A.y - C.y) * (B.x - A.x) - (A.x - C.x) * (B.y - A.y);\n      var s = sNum / denom;\n      var r = rNumb / denom;\n      if (r < 0 || r > 1 || s < 0 || s > 1) {\n        noIntersection = true;\n      }\n    }\n  }\n  if (noIntersection) {\n    return MathUtil.min(CGAlgorithms.distancePointLine(A, C, D), CGAlgorithms.distancePointLine(B, C, D), CGAlgorithms.distancePointLine(C, A, B), CGAlgorithms.distancePointLine(D, A, B))\n  }\n  return 0.0\n};\nCGAlgorithms.isPointInRing = function isPointInRing (p, ring) {\n  return CGAlgorithms.locatePointInRing(p, ring) !== Location.EXTERIOR\n};\nCGAlgorithms.computeLength = function computeLength (pts) {\n  var n = pts.size();\n  if (n <= 1) { return 0.0 }\n  var len = 0.0;\n  var p = new Coordinate();\n  pts.getCoordinate(0, p);\n  var x0 = p.x;\n  var y0 = p.y;\n  for (var i = 1; i < n; i++) {\n    pts.getCoordinate(i, p);\n    var x1 = p.x;\n    var y1 = p.y;\n    var dx = x1 - x0;\n    var dy = y1 - y0;\n    len += Math.sqrt(dx * dx + dy * dy);\n    x0 = x1;\n    y0 = y1;\n  }\n  return len\n};\nCGAlgorithms.isCCW = function isCCW (ring) {\n  var nPts = ring.length - 1;\n  if (nPts < 3) { throw new IllegalArgumentException('Ring has fewer than 4 points, so orientation cannot be determined') }\n  var hiPt = ring[0];\n  var hiIndex = 0;\n  for (var i = 1; i <= nPts; i++) {\n    var p = ring[i];\n    if (p.y > hiPt.y) {\n      hiPt = p;\n      hiIndex = i;\n    }\n  }\n  var iPrev = hiIndex;\n  do {\n    iPrev = iPrev - 1;\n    if (iPrev < 0) { iPrev = nPts; }\n  } while (ring[iPrev].equals2D(hiPt) && iPrev !== hiIndex)\n  var iNext = hiIndex;\n  do {\n    iNext = (iNext + 1) % nPts;\n  } while (ring[iNext].equals2D(hiPt) && iNext !== hiIndex)\n  var prev = ring[iPrev];\n  var next = ring[iNext];\n  if (prev.equals2D(hiPt) || next.equals2D(hiPt) || prev.equals2D(next)) { return false }\n  var disc = CGAlgorithms.computeOrientation(prev, hiPt, next);\n  var isCCW = false;\n  if (disc === 0) {\n    isCCW = prev.x > next.x;\n  } else {\n    isCCW = disc > 0;\n  }\n  return isCCW\n};\nCGAlgorithms.locatePointInRing = function locatePointInRing (p, ring) {\n  return RayCrossingCounter.locatePointInRing(p, ring)\n};\nCGAlgorithms.distancePointLinePerpendicular = function distancePointLinePerpendicular (p, A, B) {\n  var len2 = (B.x - A.x) * (B.x - A.x) + (B.y - A.y) * (B.y - A.y);\n  var s = ((A.y - p.y) * (B.x - A.x) - (A.x - p.x) * (B.y - A.y)) / len2;\n  return Math.abs(s) * Math.sqrt(len2)\n};\nCGAlgorithms.computeOrientation = function computeOrientation (p1, p2, q) {\n  return CGAlgorithms.orientationIndex(p1, p2, q)\n};\nCGAlgorithms.distancePointLine = function distancePointLine () {\n  if (arguments.length === 2) {\n    var p = arguments[0];\n    var line = arguments[1];\n    if (line.length === 0) { throw new IllegalArgumentException('Line array must contain at least one vertex') }\n    var minDistance = p.distance(line[0]);\n    for (var i = 0; i < line.length - 1; i++) {\n      var dist = CGAlgorithms.distancePointLine(p, line[i], line[i + 1]);\n      if (dist < minDistance) {\n        minDistance = dist;\n      }\n    }\n    return minDistance\n  } else if (arguments.length === 3) {\n    var p$1 = arguments[0];\n    var A = arguments[1];\n    var B = arguments[2];\n    if (A.x === B.x && A.y === B.y) { return p$1.distance(A) }\n    var len2 = (B.x - A.x) * (B.x - A.x) + (B.y - A.y) * (B.y - A.y);\n    var r = ((p$1.x - A.x) * (B.x - A.x) + (p$1.y - A.y) * (B.y - A.y)) / len2;\n    if (r <= 0.0) { return p$1.distance(A) }\n    if (r >= 1.0) { return p$1.distance(B) }\n    var s = ((A.y - p$1.y) * (B.x - A.x) - (A.x - p$1.x) * (B.y - A.y)) / len2;\n    return Math.abs(s) * Math.sqrt(len2)\n  }\n};\nCGAlgorithms.isOnLine = function isOnLine (p, pt) {\n  var lineIntersector = new RobustLineIntersector();\n  for (var i = 1; i < pt.length; i++) {\n    var p0 = pt[i - 1];\n    var p1 = pt[i];\n    lineIntersector.computeIntersection(p, p0, p1);\n    if (lineIntersector.hasIntersection()) {\n      return true\n    }\n  }\n  return false\n};\nstaticAccessors$3.CLOCKWISE.get = function () { return -1 };\nstaticAccessors$3.RIGHT.get = function () { return CGAlgorithms.CLOCKWISE };\nstaticAccessors$3.COUNTERCLOCKWISE.get = function () { return 1 };\nstaticAccessors$3.LEFT.get = function () { return CGAlgorithms.COUNTERCLOCKWISE };\nstaticAccessors$3.COLLINEAR.get = function () { return 0 };\nstaticAccessors$3.STRAIGHT.get = function () { return CGAlgorithms.COLLINEAR };\n\nObject.defineProperties( CGAlgorithms, staticAccessors$3 );\n\nvar GeometryComponentFilter = function GeometryComponentFilter () {};\n\nGeometryComponentFilter.prototype.filter = function filter (geom) {};\nGeometryComponentFilter.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nGeometryComponentFilter.prototype.getClass = function getClass () {\n  return GeometryComponentFilter\n};\n\nvar Geometry = function Geometry () {\n  var factory = arguments[0];\n\n  this._envelope = null;\n  this._factory = null;\n  this._SRID = null;\n  this._userData = null;\n  this._factory = factory;\n  this._SRID = factory.getSRID();\n};\n\nvar staticAccessors$11 = { serialVersionUID: { configurable: true },SORTINDEX_POINT: { configurable: true },SORTINDEX_MULTIPOINT: { configurable: true },SORTINDEX_LINESTRING: { configurable: true },SORTINDEX_LINEARRING: { configurable: true },SORTINDEX_MULTILINESTRING: { configurable: true },SORTINDEX_POLYGON: { configurable: true },SORTINDEX_MULTIPOLYGON: { configurable: true },SORTINDEX_GEOMETRYCOLLECTION: { configurable: true },geometryChangedFilter: { configurable: true } };\nGeometry.prototype.isGeometryCollection = function isGeometryCollection () {\n  return this.getSortIndex() === Geometry.SORTINDEX_GEOMETRYCOLLECTION\n};\nGeometry.prototype.getFactory = function getFactory () {\n  return this._factory\n};\nGeometry.prototype.getGeometryN = function getGeometryN (n) {\n  return this\n};\nGeometry.prototype.getArea = function getArea () {\n  return 0.0\n};\nGeometry.prototype.isRectangle = function isRectangle () {\n  return false\n};\nGeometry.prototype.equals = function equals () {\n  if (arguments[0] instanceof Geometry) {\n    var g$1 = arguments[0];\n    if (g$1 === null) { return false }\n    return this.equalsTopo(g$1)\n  } else if (arguments[0] instanceof Object) {\n    var o = arguments[0];\n    if (!(o instanceof Geometry)) { return false }\n    var g = o;\n    return this.equalsExact(g)\n  }\n};\nGeometry.prototype.equalsExact = function equalsExact (other) {\n  return this === other || this.equalsExact(other, 0)\n};\nGeometry.prototype.geometryChanged = function geometryChanged () {\n  this.apply(Geometry.geometryChangedFilter);\n};\nGeometry.prototype.geometryChangedAction = function geometryChangedAction () {\n  this._envelope = null;\n};\nGeometry.prototype.equalsNorm = function equalsNorm (g) {\n  if (g === null) { return false }\n  return this.norm().equalsExact(g.norm())\n};\nGeometry.prototype.getLength = function getLength () {\n  return 0.0\n};\nGeometry.prototype.getNumGeometries = function getNumGeometries () {\n  return 1\n};\nGeometry.prototype.compareTo = function compareTo () {\n  if (arguments.length === 1) {\n    var o = arguments[0];\n    var other = o;\n    if (this.getSortIndex() !== other.getSortIndex()) {\n      return this.getSortIndex() - other.getSortIndex()\n    }\n    if (this.isEmpty() && other.isEmpty()) {\n      return 0\n    }\n    if (this.isEmpty()) {\n      return -1\n    }\n    if (other.isEmpty()) {\n      return 1\n    }\n    return this.compareToSameClass(o)\n  } else if (arguments.length === 2) {\n    var other$1 = arguments[0];\n    var comp = arguments[1];\n    if (this.getSortIndex() !== other$1.getSortIndex()) {\n      return this.getSortIndex() - other$1.getSortIndex()\n    }\n    if (this.isEmpty() && other$1.isEmpty()) {\n      return 0\n    }\n    if (this.isEmpty()) {\n      return -1\n    }\n    if (other$1.isEmpty()) {\n      return 1\n    }\n    return this.compareToSameClass(other$1, comp)\n  }\n};\nGeometry.prototype.getUserData = function getUserData () {\n  return this._userData\n};\nGeometry.prototype.getSRID = function getSRID () {\n  return this._SRID\n};\nGeometry.prototype.getEnvelope = function getEnvelope () {\n  return this.getFactory().toGeometry(this.getEnvelopeInternal())\n};\nGeometry.prototype.checkNotGeometryCollection = function checkNotGeometryCollection (g) {\n  if (g.getSortIndex() === Geometry.SORTINDEX_GEOMETRYCOLLECTION) {\n    throw new IllegalArgumentException('This method does not support GeometryCollection arguments')\n  }\n};\nGeometry.prototype.equal = function equal (a, b, tolerance) {\n  if (tolerance === 0) {\n    return a.equals(b)\n  }\n  return a.distance(b) <= tolerance\n};\nGeometry.prototype.norm = function norm () {\n  var copy = this.copy();\n  copy.normalize();\n  return copy\n};\nGeometry.prototype.getPrecisionModel = function getPrecisionModel () {\n  return this._factory.getPrecisionModel()\n};\nGeometry.prototype.getEnvelopeInternal = function getEnvelopeInternal () {\n  if (this._envelope === null) {\n    this._envelope = this.computeEnvelopeInternal();\n  }\n  return new Envelope(this._envelope)\n};\nGeometry.prototype.setSRID = function setSRID (SRID) {\n  this._SRID = SRID;\n};\nGeometry.prototype.setUserData = function setUserData (userData) {\n  this._userData = userData;\n};\nGeometry.prototype.compare = function compare (a, b) {\n  var i = a.iterator();\n  var j = b.iterator();\n  while (i.hasNext() && j.hasNext()) {\n    var aElement = i.next();\n    var bElement = j.next();\n    var comparison = aElement.compareTo(bElement);\n    if (comparison !== 0) {\n      return comparison\n    }\n  }\n  if (i.hasNext()) {\n    return 1\n  }\n  if (j.hasNext()) {\n    return -1\n  }\n  return 0\n};\nGeometry.prototype.hashCode = function hashCode () {\n  return this.getEnvelopeInternal().hashCode()\n};\nGeometry.prototype.isGeometryCollectionOrDerived = function isGeometryCollectionOrDerived () {\n  if (this.getSortIndex() === Geometry.SORTINDEX_GEOMETRYCOLLECTION || this.getSortIndex() === Geometry.SORTINDEX_MULTIPOINT || this.getSortIndex() === Geometry.SORTINDEX_MULTILINESTRING || this.getSortIndex() === Geometry.SORTINDEX_MULTIPOLYGON) {\n    return true\n  }\n  return false\n};\nGeometry.prototype.interfaces_ = function interfaces_ () {\n  return [Clonable, Comparable, Serializable]\n};\nGeometry.prototype.getClass = function getClass () {\n  return Geometry\n};\nGeometry.hasNonEmptyElements = function hasNonEmptyElements (geometries) {\n  for (var i = 0; i < geometries.length; i++) {\n    if (!geometries[i].isEmpty()) {\n      return true\n    }\n  }\n  return false\n};\nGeometry.hasNullElements = function hasNullElements (array) {\n  for (var i = 0; i < array.length; i++) {\n    if (array[i] === null) {\n      return true\n    }\n  }\n  return false\n};\nstaticAccessors$11.serialVersionUID.get = function () { return 8763622679187376702 };\nstaticAccessors$11.SORTINDEX_POINT.get = function () { return 0 };\nstaticAccessors$11.SORTINDEX_MULTIPOINT.get = function () { return 1 };\nstaticAccessors$11.SORTINDEX_LINESTRING.get = function () { return 2 };\nstaticAccessors$11.SORTINDEX_LINEARRING.get = function () { return 3 };\nstaticAccessors$11.SORTINDEX_MULTILINESTRING.get = function () { return 4 };\nstaticAccessors$11.SORTINDEX_POLYGON.get = function () { return 5 };\nstaticAccessors$11.SORTINDEX_MULTIPOLYGON.get = function () { return 6 };\nstaticAccessors$11.SORTINDEX_GEOMETRYCOLLECTION.get = function () { return 7 };\nstaticAccessors$11.geometryChangedFilter.get = function () { return geometryChangedFilter };\n\nObject.defineProperties( Geometry, staticAccessors$11 );\n\nvar geometryChangedFilter = function geometryChangedFilter () {};\n\ngeometryChangedFilter.interfaces_ = function interfaces_ () {\n  return [GeometryComponentFilter]\n};\ngeometryChangedFilter.filter = function filter (geom) {\n  geom.geometryChangedAction();\n};\n\nvar CoordinateFilter = function CoordinateFilter () {};\n\nCoordinateFilter.prototype.filter = function filter (coord) {};\nCoordinateFilter.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nCoordinateFilter.prototype.getClass = function getClass () {\n  return CoordinateFilter\n};\n\nvar BoundaryNodeRule = function BoundaryNodeRule () {};\n\nvar staticAccessors$12 = { Mod2BoundaryNodeRule: { configurable: true },EndPointBoundaryNodeRule: { configurable: true },MultiValentEndPointBoundaryNodeRule: { configurable: true },MonoValentEndPointBoundaryNodeRule: { configurable: true },MOD2_BOUNDARY_RULE: { configurable: true },ENDPOINT_BOUNDARY_RULE: { configurable: true },MULTIVALENT_ENDPOINT_BOUNDARY_RULE: { configurable: true },MONOVALENT_ENDPOINT_BOUNDARY_RULE: { configurable: true },OGC_SFS_BOUNDARY_RULE: { configurable: true } };\n\nBoundaryNodeRule.prototype.isInBoundary = function isInBoundary (boundaryCount) {};\nBoundaryNodeRule.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nBoundaryNodeRule.prototype.getClass = function getClass () {\n  return BoundaryNodeRule\n};\nstaticAccessors$12.Mod2BoundaryNodeRule.get = function () { return Mod2BoundaryNodeRule };\nstaticAccessors$12.EndPointBoundaryNodeRule.get = function () { return EndPointBoundaryNodeRule };\nstaticAccessors$12.MultiValentEndPointBoundaryNodeRule.get = function () { return MultiValentEndPointBoundaryNodeRule };\nstaticAccessors$12.MonoValentEndPointBoundaryNodeRule.get = function () { return MonoValentEndPointBoundaryNodeRule };\nstaticAccessors$12.MOD2_BOUNDARY_RULE.get = function () { return new Mod2BoundaryNodeRule() };\nstaticAccessors$12.ENDPOINT_BOUNDARY_RULE.get = function () { return new EndPointBoundaryNodeRule() };\nstaticAccessors$12.MULTIVALENT_ENDPOINT_BOUNDARY_RULE.get = function () { return new MultiValentEndPointBoundaryNodeRule() };\nstaticAccessors$12.MONOVALENT_ENDPOINT_BOUNDARY_RULE.get = function () { return new MonoValentEndPointBoundaryNodeRule() };\nstaticAccessors$12.OGC_SFS_BOUNDARY_RULE.get = function () { return BoundaryNodeRule.MOD2_BOUNDARY_RULE };\n\nObject.defineProperties( BoundaryNodeRule, staticAccessors$12 );\n\nvar Mod2BoundaryNodeRule = function Mod2BoundaryNodeRule () {};\n\nMod2BoundaryNodeRule.prototype.isInBoundary = function isInBoundary (boundaryCount) {\n  return boundaryCount % 2 === 1\n};\nMod2BoundaryNodeRule.prototype.interfaces_ = function interfaces_ () {\n  return [BoundaryNodeRule]\n};\nMod2BoundaryNodeRule.prototype.getClass = function getClass () {\n  return Mod2BoundaryNodeRule\n};\n\nvar EndPointBoundaryNodeRule = function EndPointBoundaryNodeRule () {};\n\nEndPointBoundaryNodeRule.prototype.isInBoundary = function isInBoundary (boundaryCount) {\n  return boundaryCount > 0\n};\nEndPointBoundaryNodeRule.prototype.interfaces_ = function interfaces_ () {\n  return [BoundaryNodeRule]\n};\nEndPointBoundaryNodeRule.prototype.getClass = function getClass () {\n  return EndPointBoundaryNodeRule\n};\n\nvar MultiValentEndPointBoundaryNodeRule = function MultiValentEndPointBoundaryNodeRule () {};\n\nMultiValentEndPointBoundaryNodeRule.prototype.isInBoundary = function isInBoundary (boundaryCount) {\n  return boundaryCount > 1\n};\nMultiValentEndPointBoundaryNodeRule.prototype.interfaces_ = function interfaces_ () {\n  return [BoundaryNodeRule]\n};\nMultiValentEndPointBoundaryNodeRule.prototype.getClass = function getClass () {\n  return MultiValentEndPointBoundaryNodeRule\n};\n\nvar MonoValentEndPointBoundaryNodeRule = function MonoValentEndPointBoundaryNodeRule () {};\n\nMonoValentEndPointBoundaryNodeRule.prototype.isInBoundary = function isInBoundary (boundaryCount) {\n  return boundaryCount === 1\n};\nMonoValentEndPointBoundaryNodeRule.prototype.interfaces_ = function interfaces_ () {\n  return [BoundaryNodeRule]\n};\nMonoValentEndPointBoundaryNodeRule.prototype.getClass = function getClass () {\n  return MonoValentEndPointBoundaryNodeRule\n};\n\n// import Iterator from './Iterator'\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/Collection.html\n *\n * @constructor\n * @private\n */\nvar Collection = function Collection () {};\n\nCollection.prototype.add = function add () {};\n\n/**\n * Appends all of the elements in the specified collection to the end of this\n * list, in the order that they are returned by the specified collection's\n * iterator (optional operation).\n * @param {javascript.util.Collection} c\n * @return {boolean}\n */\nCollection.prototype.addAll = function addAll () {};\n\n/**\n * Returns true if this collection contains no elements.\n * @return {boolean}\n */\nCollection.prototype.isEmpty = function isEmpty () {};\n\n/**\n * Returns an iterator over the elements in this collection.\n * @return {javascript.util.Iterator}\n */\nCollection.prototype.iterator = function iterator () {};\n\n/**\n * Returns an iterator over the elements in this collection.\n * @return {number}\n */\nCollection.prototype.size = function size () {};\n\n/**\n * Returns an array containing all of the elements in this collection.\n * @return {Array}\n */\nCollection.prototype.toArray = function toArray () {};\n\n/**\n * Removes a single instance of the specified element from this collection if it\n * is present. (optional)\n * @param {Object} e\n * @return {boolean}\n */\nCollection.prototype.remove = function remove () {};\n\n/**\n * @param {string=} message Optional message\n * @extends {Error}\n * @constructor\n * @private\n */\nfunction IndexOutOfBoundsException (message) {\n  this.message = message || '';\n}\nIndexOutOfBoundsException.prototype = new Error();\n\n/**\n * @type {string}\n */\nIndexOutOfBoundsException.prototype.name = 'IndexOutOfBoundsException';\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/Iterator.html\n * @constructor\n * @private\n */\nvar Iterator = function Iterator () {};\n\nIterator.prototype.hasNext = function hasNext () {};\n\n/**\n * Returns the next element in the iteration.\n * @return {Object}\n */\nIterator.prototype.next = function next () {};\n\n/**\n * Removes from the underlying collection the last element returned by the\n * iterator (optional operation).\n */\nIterator.prototype.remove = function remove () {};\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/List.html\n *\n * @extends {javascript.util.Collection}\n * @constructor\n * @private\n */\nvar List = (function (Collection$$1) {\n  function List () {\n    Collection$$1.apply(this, arguments);\n  }\n\n  if ( Collection$$1 ) List.__proto__ = Collection$$1;\n  List.prototype = Object.create( Collection$$1 && Collection$$1.prototype );\n  List.prototype.constructor = List;\n\n  List.prototype.get = function get () { };\n\n  /**\n   * Replaces the element at the specified position in this list with the\n   * specified element (optional operation).\n   * @param {number} index\n   * @param {Object} e\n   * @return {Object}\n   */\n  List.prototype.set = function set () { };\n\n  /**\n   * Returns true if this collection contains no elements.\n   * @return {boolean}\n   */\n  List.prototype.isEmpty = function isEmpty () { };\n\n  return List;\n}(Collection));\n\n/**\n * @param {string=} message Optional message\n * @extends {Error}\n * @constructor\n * @private\n */\nfunction NoSuchElementException (message) {\n  this.message = message || '';\n}\nNoSuchElementException.prototype = new Error();\n\n/**\n * @type {string}\n */\nNoSuchElementException.prototype.name = 'NoSuchElementException';\n\n// import OperationNotSupported from './OperationNotSupported'\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/ArrayList.html\n *\n * @extends List\n * @private\n */\nvar ArrayList = (function (List$$1) {\n  function ArrayList () {\n    List$$1.call(this);\n    this.array_ = [];\n\n    if (arguments[0] instanceof Collection) {\n      this.addAll(arguments[0]);\n    }\n  }\n\n  if ( List$$1 ) ArrayList.__proto__ = List$$1;\n  ArrayList.prototype = Object.create( List$$1 && List$$1.prototype );\n  ArrayList.prototype.constructor = ArrayList;\n\n  ArrayList.prototype.ensureCapacity = function ensureCapacity () {};\n  ArrayList.prototype.interfaces_ = function interfaces_ () { return [List$$1, Collection] };\n\n  /**\n   * @override\n   */\n  ArrayList.prototype.add = function add (e) {\n    if (arguments.length === 1) {\n      this.array_.push(e);\n    } else {\n      this.array_.splice(arguments[0], arguments[1]);\n    }\n    return true\n  };\n\n  ArrayList.prototype.clear = function clear () {\n    this.array_ = [];\n  };\n\n  /**\n   * @override\n   */\n  ArrayList.prototype.addAll = function addAll (c) {\n    var this$1 = this;\n\n    for (var i = c.iterator(); i.hasNext();) {\n      this$1.add(i.next());\n    }\n    return true\n  };\n\n  /**\n   * @override\n   */\n  ArrayList.prototype.set = function set (index, element) {\n    var oldElement = this.array_[index];\n    this.array_[index] = element;\n    return oldElement\n  };\n\n  /**\n   * @override\n   */\n  ArrayList.prototype.iterator = function iterator () {\n    return new Iterator_(this)\n  };\n\n  /**\n   * @override\n   */\n  ArrayList.prototype.get = function get (index) {\n    if (index < 0 || index >= this.size()) {\n      throw new IndexOutOfBoundsException()\n    }\n\n    return this.array_[index]\n  };\n\n  /**\n   * @override\n   */\n  ArrayList.prototype.isEmpty = function isEmpty () {\n    return this.array_.length === 0\n  };\n\n  /**\n   * @override\n   */\n  ArrayList.prototype.size = function size () {\n    return this.array_.length\n  };\n\n  /**\n   * @override\n   */\n  ArrayList.prototype.toArray = function toArray () {\n    var this$1 = this;\n\n    var array = [];\n\n    for (var i = 0, len = this.array_.length; i < len; i++) {\n      array.push(this$1.array_[i]);\n    }\n\n    return array\n  };\n\n  /**\n   * @override\n   */\n  ArrayList.prototype.remove = function remove (o) {\n    var this$1 = this;\n\n    var found = false;\n\n    for (var i = 0, len = this.array_.length; i < len; i++) {\n      if (this$1.array_[i] === o) {\n        this$1.array_.splice(i, 1);\n        found = true;\n        break\n      }\n    }\n\n    return found\n  };\n\n  return ArrayList;\n}(List));\n\n/**\n * @extends {Iterator}\n * @param {ArrayList} arrayList\n * @constructor\n * @private\n */\nvar Iterator_ = (function (Iterator$$1) {\n  function Iterator_ (arrayList) {\n    Iterator$$1.call(this);\n    /**\n     * @type {ArrayList}\n     * @private\n    */\n    this.arrayList_ = arrayList;\n    /**\n     * @type {number}\n     * @private\n    */\n    this.position_ = 0;\n  }\n\n  if ( Iterator$$1 ) Iterator_.__proto__ = Iterator$$1;\n  Iterator_.prototype = Object.create( Iterator$$1 && Iterator$$1.prototype );\n  Iterator_.prototype.constructor = Iterator_;\n\n  /**\n   * @override\n   */\n  Iterator_.prototype.next = function next () {\n    if (this.position_ === this.arrayList_.size()) {\n      throw new NoSuchElementException()\n    }\n    return this.arrayList_.get(this.position_++)\n  };\n\n  /**\n   * @override\n   */\n  Iterator_.prototype.hasNext = function hasNext () {\n    if (this.position_ < this.arrayList_.size()) {\n      return true\n    } else {\n      return false\n    }\n  };\n\n  /**\n   * TODO: should be in ListIterator\n   * @override\n   */\n  Iterator_.prototype.set = function set (element) {\n    return this.arrayList_.set(this.position_ - 1, element)\n  };\n\n  /**\n   * @override\n   */\n  Iterator_.prototype.remove = function remove () {\n    this.arrayList_.remove(this.arrayList_.get(this.position_));\n  };\n\n  return Iterator_;\n}(Iterator));\n\nvar CoordinateList = (function (ArrayList$$1) {\n  function CoordinateList () {\n    ArrayList$$1.call(this);\n    if (arguments.length === 0) {\n    } else if (arguments.length === 1) {\n      var coord = arguments[0];\n      this.ensureCapacity(coord.length);\n      this.add(coord, true);\n    } else if (arguments.length === 2) {\n      var coord$1 = arguments[0];\n      var allowRepeated = arguments[1];\n      this.ensureCapacity(coord$1.length);\n      this.add(coord$1, allowRepeated);\n    }\n  }\n\n  if ( ArrayList$$1 ) CoordinateList.__proto__ = ArrayList$$1;\n  CoordinateList.prototype = Object.create( ArrayList$$1 && ArrayList$$1.prototype );\n  CoordinateList.prototype.constructor = CoordinateList;\n\n  var staticAccessors = { coordArrayType: { configurable: true } };\n  staticAccessors.coordArrayType.get = function () { return new Array(0).fill(null) };\n  CoordinateList.prototype.getCoordinate = function getCoordinate (i) {\n    return this.get(i)\n  };\n  CoordinateList.prototype.addAll = function addAll () {\n    var this$1 = this;\n\n    if (arguments.length === 2) {\n      var coll = arguments[0];\n      var allowRepeated = arguments[1];\n      var isChanged = false;\n      for (var i = coll.iterator(); i.hasNext();) {\n        this$1.add(i.next(), allowRepeated);\n        isChanged = true;\n      }\n      return isChanged\n    } else { return ArrayList$$1.prototype.addAll.apply(this, arguments) }\n  };\n  CoordinateList.prototype.clone = function clone () {\n    var this$1 = this;\n\n    var clone = ArrayList$$1.prototype.clone.call(this);\n    for (var i = 0; i < this.size(); i++) {\n      clone.add(i, this$1.get(i).copy());\n    }\n    return clone\n  };\n  CoordinateList.prototype.toCoordinateArray = function toCoordinateArray () {\n    return this.toArray(CoordinateList.coordArrayType)\n  };\n  CoordinateList.prototype.add = function add () {\n    var this$1 = this;\n\n    if (arguments.length === 1) {\n      var coord = arguments[0];\n      ArrayList$$1.prototype.add.call(this, coord);\n    } else if (arguments.length === 2) {\n      if (arguments[0] instanceof Array && typeof arguments[1] === 'boolean') {\n        var coord$1 = arguments[0];\n        var allowRepeated = arguments[1];\n        this.add(coord$1, allowRepeated, true);\n        return true\n      } else if (arguments[0] instanceof Coordinate && typeof arguments[1] === 'boolean') {\n        var coord$2 = arguments[0];\n        var allowRepeated$1 = arguments[1];\n        if (!allowRepeated$1) {\n          if (this.size() >= 1) {\n            var last = this.get(this.size() - 1);\n            if (last.equals2D(coord$2)) { return null }\n          }\n        }\n        ArrayList$$1.prototype.add.call(this, coord$2);\n      } else if (arguments[0] instanceof Object && typeof arguments[1] === 'boolean') {\n        var obj = arguments[0];\n        var allowRepeated$2 = arguments[1];\n        this.add(obj, allowRepeated$2);\n        return true\n      }\n    } else if (arguments.length === 3) {\n      if (typeof arguments[2] === 'boolean' && (arguments[0] instanceof Array && typeof arguments[1] === 'boolean')) {\n        var coord$3 = arguments[0];\n        var allowRepeated$3 = arguments[1];\n        var direction = arguments[2];\n        if (direction) {\n          for (var i$1 = 0; i$1 < coord$3.length; i$1++) {\n            this$1.add(coord$3[i$1], allowRepeated$3);\n          }\n        } else {\n          for (var i$2 = coord$3.length - 1; i$2 >= 0; i$2--) {\n            this$1.add(coord$3[i$2], allowRepeated$3);\n          }\n        }\n        return true\n      } else if (typeof arguments[2] === 'boolean' && (Number.isInteger(arguments[0]) && arguments[1] instanceof Coordinate)) {\n        var i$3 = arguments[0];\n        var coord$4 = arguments[1];\n        var allowRepeated$4 = arguments[2];\n        if (!allowRepeated$4) {\n          var size = this.size();\n          if (size > 0) {\n            if (i$3 > 0) {\n              var prev = this.get(i$3 - 1);\n              if (prev.equals2D(coord$4)) { return null }\n            }\n            if (i$3 < size) {\n              var next = this.get(i$3);\n              if (next.equals2D(coord$4)) { return null }\n            }\n          }\n        }\n        ArrayList$$1.prototype.add.call(this, i$3, coord$4);\n      }\n    } else if (arguments.length === 4) {\n      var coord$5 = arguments[0];\n      var allowRepeated$5 = arguments[1];\n      var start = arguments[2];\n      var end = arguments[3];\n      var inc = 1;\n      if (start > end) { inc = -1; }\n      for (var i = start; i !== end; i += inc) {\n        this$1.add(coord$5[i], allowRepeated$5);\n      }\n      return true\n    }\n  };\n  CoordinateList.prototype.closeRing = function closeRing () {\n    if (this.size() > 0) { this.add(new Coordinate(this.get(0)), false); }\n  };\n  CoordinateList.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  CoordinateList.prototype.getClass = function getClass () {\n    return CoordinateList\n  };\n\n  Object.defineProperties( CoordinateList, staticAccessors );\n\n  return CoordinateList;\n}(ArrayList));\n\nvar CoordinateArrays = function CoordinateArrays () {};\n\nvar staticAccessors$13 = { ForwardComparator: { configurable: true },BidirectionalComparator: { configurable: true },coordArrayType: { configurable: true } };\n\nstaticAccessors$13.ForwardComparator.get = function () { return ForwardComparator };\nstaticAccessors$13.BidirectionalComparator.get = function () { return BidirectionalComparator };\nstaticAccessors$13.coordArrayType.get = function () { return new Array(0).fill(null) };\n\nCoordinateArrays.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nCoordinateArrays.prototype.getClass = function getClass () {\n  return CoordinateArrays\n};\nCoordinateArrays.isRing = function isRing (pts) {\n  if (pts.length < 4) { return false }\n  if (!pts[0].equals2D(pts[pts.length - 1])) { return false }\n  return true\n};\nCoordinateArrays.ptNotInList = function ptNotInList (testPts, pts) {\n  for (var i = 0; i < testPts.length; i++) {\n    var testPt = testPts[i];\n    if (CoordinateArrays.indexOf(testPt, pts) < 0) { return testPt }\n  }\n  return null\n};\nCoordinateArrays.scroll = function scroll (coordinates, firstCoordinate) {\n  var i = CoordinateArrays.indexOf(firstCoordinate, coordinates);\n  if (i < 0) { return null }\n  var newCoordinates = new Array(coordinates.length).fill(null);\n  System.arraycopy(coordinates, i, newCoordinates, 0, coordinates.length - i);\n  System.arraycopy(coordinates, 0, newCoordinates, coordinates.length - i, i);\n  System.arraycopy(newCoordinates, 0, coordinates, 0, coordinates.length);\n};\nCoordinateArrays.equals = function equals () {\n  if (arguments.length === 2) {\n    var coord1 = arguments[0];\n    var coord2 = arguments[1];\n    if (coord1 === coord2) { return true }\n    if (coord1 === null || coord2 === null) { return false }\n    if (coord1.length !== coord2.length) { return false }\n    for (var i = 0; i < coord1.length; i++) {\n      if (!coord1[i].equals(coord2[i])) { return false }\n    }\n    return true\n  } else if (arguments.length === 3) {\n    var coord1$1 = arguments[0];\n    var coord2$1 = arguments[1];\n    var coordinateComparator = arguments[2];\n    if (coord1$1 === coord2$1) { return true }\n    if (coord1$1 === null || coord2$1 === null) { return false }\n    if (coord1$1.length !== coord2$1.length) { return false }\n    for (var i$1 = 0; i$1 < coord1$1.length; i$1++) {\n      if (coordinateComparator.compare(coord1$1[i$1], coord2$1[i$1]) !== 0) { return false }\n    }\n    return true\n  }\n};\nCoordinateArrays.intersection = function intersection (coordinates, env) {\n  var coordList = new CoordinateList();\n  for (var i = 0; i < coordinates.length; i++) {\n    if (env.intersects(coordinates[i])) { coordList.add(coordinates[i], true); }\n  }\n  return coordList.toCoordinateArray()\n};\nCoordinateArrays.hasRepeatedPoints = function hasRepeatedPoints (coord) {\n  for (var i = 1; i < coord.length; i++) {\n    if (coord[i - 1].equals(coord[i])) {\n      return true\n    }\n  }\n  return false\n};\nCoordinateArrays.removeRepeatedPoints = function removeRepeatedPoints (coord) {\n  if (!CoordinateArrays.hasRepeatedPoints(coord)) { return coord }\n  var coordList = new CoordinateList(coord, false);\n  return coordList.toCoordinateArray()\n};\nCoordinateArrays.reverse = function reverse (coord) {\n  var last = coord.length - 1;\n  var mid = Math.trunc(last / 2);\n  for (var i = 0; i <= mid; i++) {\n    var tmp = coord[i];\n    coord[i] = coord[last - i];\n    coord[last - i] = tmp;\n  }\n};\nCoordinateArrays.removeNull = function removeNull (coord) {\n  var nonNull = 0;\n  for (var i = 0; i < coord.length; i++) {\n    if (coord[i] !== null) { nonNull++; }\n  }\n  var newCoord = new Array(nonNull).fill(null);\n  if (nonNull === 0) { return newCoord }\n  var j = 0;\n  for (var i$1 = 0; i$1 < coord.length; i$1++) {\n    if (coord[i$1] !== null) { newCoord[j++] = coord[i$1]; }\n  }\n  return newCoord\n};\nCoordinateArrays.copyDeep = function copyDeep () {\n  if (arguments.length === 1) {\n    var coordinates = arguments[0];\n    var copy = new Array(coordinates.length).fill(null);\n    for (var i = 0; i < coordinates.length; i++) {\n      copy[i] = new Coordinate(coordinates[i]);\n    }\n    return copy\n  } else if (arguments.length === 5) {\n    var src = arguments[0];\n    var srcStart = arguments[1];\n    var dest = arguments[2];\n    var destStart = arguments[3];\n    var length = arguments[4];\n    for (var i$1 = 0; i$1 < length; i$1++) {\n      dest[destStart + i$1] = new Coordinate(src[srcStart + i$1]);\n    }\n  }\n};\nCoordinateArrays.isEqualReversed = function isEqualReversed (pts1, pts2) {\n  for (var i = 0; i < pts1.length; i++) {\n    var p1 = pts1[i];\n    var p2 = pts2[pts1.length - i - 1];\n    if (p1.compareTo(p2) !== 0) { return false }\n  }\n  return true\n};\nCoordinateArrays.envelope = function envelope (coordinates) {\n  var env = new Envelope();\n  for (var i = 0; i < coordinates.length; i++) {\n    env.expandToInclude(coordinates[i]);\n  }\n  return env\n};\nCoordinateArrays.toCoordinateArray = function toCoordinateArray (coordList) {\n  return coordList.toArray(CoordinateArrays.coordArrayType)\n};\nCoordinateArrays.atLeastNCoordinatesOrNothing = function atLeastNCoordinatesOrNothing (n, c) {\n  return c.length >= n ? c : []\n};\nCoordinateArrays.indexOf = function indexOf (coordinate, coordinates) {\n  for (var i = 0; i < coordinates.length; i++) {\n    if (coordinate.equals(coordinates[i])) {\n      return i\n    }\n  }\n  return -1\n};\nCoordinateArrays.increasingDirection = function increasingDirection (pts) {\n  for (var i = 0; i < Math.trunc(pts.length / 2); i++) {\n    var j = pts.length - 1 - i;\n    var comp = pts[i].compareTo(pts[j]);\n    if (comp !== 0) { return comp }\n  }\n  return 1\n};\nCoordinateArrays.compare = function compare (pts1, pts2) {\n  var i = 0;\n  while (i < pts1.length && i < pts2.length) {\n    var compare = pts1[i].compareTo(pts2[i]);\n    if (compare !== 0) { return compare }\n    i++;\n  }\n  if (i < pts2.length) { return -1 }\n  if (i < pts1.length) { return 1 }\n  return 0\n};\nCoordinateArrays.minCoordinate = function minCoordinate (coordinates) {\n  var minCoord = null;\n  for (var i = 0; i < coordinates.length; i++) {\n    if (minCoord === null || minCoord.compareTo(coordinates[i]) > 0) {\n      minCoord = coordinates[i];\n    }\n  }\n  return minCoord\n};\nCoordinateArrays.extract = function extract (pts, start, end) {\n  start = MathUtil.clamp(start, 0, pts.length);\n  end = MathUtil.clamp(end, -1, pts.length);\n  var npts = end - start + 1;\n  if (end < 0) { npts = 0; }\n  if (start >= pts.length) { npts = 0; }\n  if (end < start) { npts = 0; }\n  var extractPts = new Array(npts).fill(null);\n  if (npts === 0) { return extractPts }\n  var iPts = 0;\n  for (var i = start; i <= end; i++) {\n    extractPts[iPts++] = pts[i];\n  }\n  return extractPts\n};\n\nObject.defineProperties( CoordinateArrays, staticAccessors$13 );\n\nvar ForwardComparator = function ForwardComparator () {};\n\nForwardComparator.prototype.compare = function compare (o1, o2) {\n  var pts1 = o1;\n  var pts2 = o2;\n  return CoordinateArrays.compare(pts1, pts2)\n};\nForwardComparator.prototype.interfaces_ = function interfaces_ () {\n  return [Comparator]\n};\nForwardComparator.prototype.getClass = function getClass () {\n  return ForwardComparator\n};\n\nvar BidirectionalComparator = function BidirectionalComparator () {};\n\nBidirectionalComparator.prototype.compare = function compare (o1, o2) {\n  var pts1 = o1;\n  var pts2 = o2;\n  if (pts1.length < pts2.length) { return -1 }\n  if (pts1.length > pts2.length) { return 1 }\n  if (pts1.length === 0) { return 0 }\n  var forwardComp = CoordinateArrays.compare(pts1, pts2);\n  var isEqualRev = CoordinateArrays.isEqualReversed(pts1, pts2);\n  if (isEqualRev) { return 0 }\n  return forwardComp\n};\nBidirectionalComparator.prototype.OLDcompare = function OLDcompare (o1, o2) {\n  var pts1 = o1;\n  var pts2 = o2;\n  if (pts1.length < pts2.length) { return -1 }\n  if (pts1.length > pts2.length) { return 1 }\n  if (pts1.length === 0) { return 0 }\n  var dir1 = CoordinateArrays.increasingDirection(pts1);\n  var dir2 = CoordinateArrays.increasingDirection(pts2);\n  var i1 = dir1 > 0 ? 0 : pts1.length - 1;\n  var i2 = dir2 > 0 ? 0 : pts1.length - 1;\n  for (var i = 0; i < pts1.length; i++) {\n    var comparePt = pts1[i1].compareTo(pts2[i2]);\n    if (comparePt !== 0) { return comparePt }\n    i1 += dir1;\n    i2 += dir2;\n  }\n  return 0\n};\nBidirectionalComparator.prototype.interfaces_ = function interfaces_ () {\n  return [Comparator]\n};\nBidirectionalComparator.prototype.getClass = function getClass () {\n  return BidirectionalComparator\n};\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/Map.html\n *\n * @constructor\n * @private\n */\nvar Map$1 = function Map () {};\n\nMap$1.prototype.get = function get () {};\n/**\n * Associates the specified value with the specified key in this map (optional\n * operation).\n * @param {Object} key\n * @param {Object} value\n * @return {Object}\n */\nMap$1.prototype.put = function put () {};\n\n/**\n * Returns the number of key-value mappings in this map.\n * @return {number}\n */\nMap$1.prototype.size = function size () {};\n\n/**\n * Returns a Collection view of the values contained in this map.\n * @return {javascript.util.Collection}\n */\nMap$1.prototype.values = function values () {};\n\n/**\n * Returns a {@link Set} view of the mappings contained in this map.\n * The set is backed by the map, so changes to the map are\n * reflected in the set, and vice-versa.If the map is modified\n * while an iteration over the set is in progress (except through\n * the iterator's own <tt>remove</tt> operation, or through the\n * <tt>setValue</tt> operation on a map entry returned by the\n * iterator) the results of the iteration are undefined.The set\n * supports element removal, which removes the corresponding\n * mapping from the map, via the <tt>Iterator.remove</tt>,\n * <tt>Set.remove</tt>, <tt>removeAll</tt>, <tt>retainAll</tt> and\n * <tt>clear</tt> operations.It does not support the\n * <tt>add</tt> or <tt>addAll</tt> operations.\n *\n * @return {Set} a set view of the mappings contained in this map\n */\nMap$1.prototype.entrySet = function entrySet () {};\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/SortedMap.html\n *\n * @extends {Map}\n * @constructor\n * @private\n */\nvar SortedMap = (function (Map) {\n\tfunction SortedMap () {\n\t\tMap.apply(this, arguments);\n\t}if ( Map ) SortedMap.__proto__ = Map;\n\tSortedMap.prototype = Object.create( Map && Map.prototype );\n\tSortedMap.prototype.constructor = SortedMap;\n\n\t\n\n\treturn SortedMap;\n}(Map$1));\n\n/**\n * @param {string=} message Optional message\n * @extends {Error}\n * @constructor\n * @private\n */\nfunction OperationNotSupported (message) {\n  this.message = message || '';\n}\nOperationNotSupported.prototype = new Error();\n\n/**\n * @type {string}\n */\nOperationNotSupported.prototype.name = 'OperationNotSupported';\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/Set.html\n *\n * @extends {Collection}\n * @constructor\n * @private\n */\nfunction Set() {}\nSet.prototype = new Collection();\n\n\n/**\n * Returns true if this set contains the specified element. More formally,\n * returns true if and only if this set contains an element e such that (o==null ?\n * e==null : o.equals(e)).\n * @param {Object} e\n * @return {boolean}\n */\nSet.prototype.contains = function() {};\n\n/**\n * @see http://docs.oracle.com/javase/6/docs/api/java/util/HashSet.html\n *\n * @extends {javascript.util.Set}\n * @constructor\n * @private\n */\nvar HashSet = (function (Set$$1) {\n  function HashSet () {\n    Set$$1.call(this);\n    this.array_ = [];\n\n    if (arguments[0] instanceof Collection) {\n      this.addAll(arguments[0]);\n    }\n  }\n\n  if ( Set$$1 ) HashSet.__proto__ = Set$$1;\n  HashSet.prototype = Object.create( Set$$1 && Set$$1.prototype );\n  HashSet.prototype.constructor = HashSet;\n\n  /**\n   * @override\n   */\n  HashSet.prototype.contains = function contains (o) {\n    var this$1 = this;\n\n    for (var i = 0, len = this.array_.length; i < len; i++) {\n      var e = this$1.array_[i];\n      if (e === o) {\n        return true\n      }\n    }\n    return false\n  };\n\n  /**\n   * @override\n   */\n  HashSet.prototype.add = function add (o) {\n    if (this.contains(o)) {\n      return false\n    }\n\n    this.array_.push(o);\n\n    return true\n  };\n\n  /**\n   * @override\n   */\n  HashSet.prototype.addAll = function addAll (c) {\n    var this$1 = this;\n\n    for (var i = c.iterator(); i.hasNext();) {\n      this$1.add(i.next());\n    }\n    return true\n  };\n\n  /**\n   * @override\n   */\n  HashSet.prototype.remove = function remove (o) {\n    // throw new javascript.util.OperationNotSupported()\n    throw new Error()\n  };\n\n  /**\n   * @override\n   */\n  HashSet.prototype.size = function size () {\n    return this.array_.length\n  };\n\n  /**\n   * @override\n   */\n  HashSet.prototype.isEmpty = function isEmpty () {\n    return this.array_.length === 0\n  };\n\n  /**\n   * @override\n   */\n  HashSet.prototype.toArray = function toArray () {\n    var this$1 = this;\n\n    var array = [];\n\n    for (var i = 0, len = this.array_.length; i < len; i++) {\n      array.push(this$1.array_[i]);\n    }\n\n    return array\n  };\n\n  /**\n   * @override\n   */\n  HashSet.prototype.iterator = function iterator () {\n    return new Iterator_$1(this)\n  };\n\n  return HashSet;\n}(Set));\n\n/**\n   * @extends {Iterator}\n   * @param {HashSet} hashSet\n   * @constructor\n   * @private\n   */\nvar Iterator_$1 = (function (Iterator$$1) {\n  function Iterator_ (hashSet) {\n    Iterator$$1.call(this);\n    /**\n     * @type {HashSet}\n     * @private\n     */\n    this.hashSet_ = hashSet;\n    /**\n     * @type {number}\n     * @private\n     */\n    this.position_ = 0;\n  }\n\n  if ( Iterator$$1 ) Iterator_.__proto__ = Iterator$$1;\n  Iterator_.prototype = Object.create( Iterator$$1 && Iterator$$1.prototype );\n  Iterator_.prototype.constructor = Iterator_;\n\n  /**\n   * @override\n   */\n  Iterator_.prototype.next = function next () {\n    if (this.position_ === this.hashSet_.size()) {\n      throw new NoSuchElementException()\n    }\n    return this.hashSet_.array_[this.position_++]\n  };\n\n  /**\n   * @override\n   */\n  Iterator_.prototype.hasNext = function hasNext () {\n    if (this.position_ < this.hashSet_.size()) {\n      return true\n    } else {\n      return false\n    }\n  };\n\n  /**\n   * @override\n   */\n  Iterator_.prototype.remove = function remove () {\n    throw new OperationNotSupported()\n  };\n\n  return Iterator_;\n}(Iterator));\n\nvar BLACK = 0;\nvar RED = 1;\nfunction colorOf (p) { return (p === null ? BLACK : p.color) }\nfunction parentOf (p) { return (p === null ? null : p.parent) }\nfunction setColor (p, c) { if (p !== null) { p.color = c; } }\nfunction leftOf (p) { return (p === null ? null : p.left) }\nfunction rightOf (p) { return (p === null ? null : p.right) }\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/TreeMap.html\n *\n * @extends {SortedMap}\n * @constructor\n * @private\n */\nfunction TreeMap () {\n  /**\n   * @type {Object}\n   * @private\n   */\n  this.root_ = null;\n  /**\n   * @type {number}\n   * @private\n  */\n  this.size_ = 0;\n}\nTreeMap.prototype = new SortedMap();\n\n/**\n * @override\n */\nTreeMap.prototype.get = function (key) {\n  var p = this.root_;\n  while (p !== null) {\n    var cmp = key['compareTo'](p.key);\n    if (cmp < 0) { p = p.left; }\n    else if (cmp > 0) { p = p.right; }\n    else { return p.value }\n  }\n  return null\n};\n\n/**\n * @override\n */\nTreeMap.prototype.put = function (key, value) {\n  if (this.root_ === null) {\n    this.root_ = {\n      key: key,\n      value: value,\n      left: null,\n      right: null,\n      parent: null,\n      color: BLACK,\n      getValue: function getValue () { return this.value },\n      getKey: function getKey () { return this.key }\n    };\n    this.size_ = 1;\n    return null\n  }\n  var t = this.root_;\n  var parent;\n  var cmp;\n  do {\n    parent = t;\n    cmp = key['compareTo'](t.key);\n    if (cmp < 0) {\n      t = t.left;\n    } else if (cmp > 0) {\n      t = t.right;\n    } else {\n      var oldValue = t.value;\n      t.value = value;\n      return oldValue\n    }\n  } while (t !== null)\n  var e = {\n    key: key,\n    left: null,\n    right: null,\n    value: value,\n    parent: parent,\n    color: BLACK,\n    getValue: function getValue () { return this.value },\n    getKey: function getKey () { return this.key }\n  };\n  if (cmp < 0) {\n    parent.left = e;\n  } else {\n    parent.right = e;\n  }\n  this.fixAfterInsertion(e);\n  this.size_++;\n  return null\n};\n\n/**\n * @param {Object} x\n */\nTreeMap.prototype.fixAfterInsertion = function (x) {\n  var this$1 = this;\n\n  x.color = RED;\n  while (x != null && x !== this.root_ && x.parent.color === RED) {\n    if (parentOf(x) === leftOf(parentOf(parentOf(x)))) {\n      var y = rightOf(parentOf(parentOf(x)));\n      if (colorOf(y) === RED) {\n        setColor(parentOf(x), BLACK);\n        setColor(y, BLACK);\n        setColor(parentOf(parentOf(x)), RED);\n        x = parentOf(parentOf(x));\n      } else {\n        if (x === rightOf(parentOf(x))) {\n          x = parentOf(x);\n          this$1.rotateLeft(x);\n        }\n        setColor(parentOf(x), BLACK);\n        setColor(parentOf(parentOf(x)), RED);\n        this$1.rotateRight(parentOf(parentOf(x)));\n      }\n    } else {\n      var y$1 = leftOf(parentOf(parentOf(x)));\n      if (colorOf(y$1) === RED) {\n        setColor(parentOf(x), BLACK);\n        setColor(y$1, BLACK);\n        setColor(parentOf(parentOf(x)), RED);\n        x = parentOf(parentOf(x));\n      } else {\n        if (x === leftOf(parentOf(x))) {\n          x = parentOf(x);\n          this$1.rotateRight(x);\n        }\n        setColor(parentOf(x), BLACK);\n        setColor(parentOf(parentOf(x)), RED);\n        this$1.rotateLeft(parentOf(parentOf(x)));\n      }\n    }\n  }\n  this.root_.color = BLACK;\n};\n\n/**\n * @override\n */\nTreeMap.prototype.values = function () {\n  var arrayList = new ArrayList();\n  var p = this.getFirstEntry();\n  if (p !== null) {\n    arrayList.add(p.value);\n    while ((p = TreeMap.successor(p)) !== null) {\n      arrayList.add(p.value);\n    }\n  }\n  return arrayList\n};\n\n/**\n * @override\n */\nTreeMap.prototype.entrySet = function () {\n  var hashSet = new HashSet();\n  var p = this.getFirstEntry();\n  if (p !== null) {\n    hashSet.add(p);\n    while ((p = TreeMap.successor(p)) !== null) {\n      hashSet.add(p);\n    }\n  }\n  return hashSet\n};\n\n/**\n * @param {Object} p\n */\nTreeMap.prototype.rotateLeft = function (p) {\n  if (p != null) {\n    var r = p.right;\n    p.right = r.left;\n    if (r.left != null) { r.left.parent = p; }\n    r.parent = p.parent;\n    if (p.parent === null) { this.root_ = r; } else if (p.parent.left === p) { p.parent.left = r; } else { p.parent.right = r; }\n    r.left = p;\n    p.parent = r;\n  }\n};\n\n/**\n * @param {Object} p\n */\nTreeMap.prototype.rotateRight = function (p) {\n  if (p != null) {\n    var l = p.left;\n    p.left = l.right;\n    if (l.right != null) { l.right.parent = p; }\n    l.parent = p.parent;\n    if (p.parent === null) { this.root_ = l; } else if (p.parent.right === p) { p.parent.right = l; } else { p.parent.left = l; }\n    l.right = p;\n    p.parent = l;\n  }\n};\n\n/**\n * @return {Object}\n */\nTreeMap.prototype.getFirstEntry = function () {\n  var p = this.root_;\n  if (p != null) {\n    while (p.left != null) {\n      p = p.left;\n    }\n  }\n  return p\n};\n\n/**\n * @param {Object} t\n * @return {Object}\n * @private\n */\nTreeMap.successor = function (t) {\n  if (t === null) { return null } else if (t.right !== null) {\n    var p = t.right;\n    while (p.left !== null) {\n      p = p.left;\n    }\n    return p\n  } else {\n    var p$1 = t.parent;\n    var ch = t;\n    while (p$1 !== null && ch === p$1.right) {\n      ch = p$1;\n      p$1 = p$1.parent;\n    }\n    return p$1\n  }\n};\n\n/**\n * @override\n */\nTreeMap.prototype.size = function () {\n  return this.size_\n};\n\nvar Lineal = function Lineal () {};\n\nLineal.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nLineal.prototype.getClass = function getClass () {\n  return Lineal\n};\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/SortedSet.html\n *\n * @extends {Set}\n * @constructor\n * @private\n */\nfunction SortedSet () {}\nSortedSet.prototype = new Set();\n\n// import Iterator from './Iterator'\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/TreeSet.html\n *\n * @extends {SortedSet}\n * @constructor\n * @private\n */\nfunction TreeSet () {\n  /**\n   * @type {Array}\n   * @private\n  */\n  this.array_ = [];\n\n  if (arguments[0] instanceof Collection) {\n    this.addAll(arguments[0]);\n  }\n}\nTreeSet.prototype = new SortedSet();\n\n/**\n * @override\n */\nTreeSet.prototype.contains = function (o) {\n  var this$1 = this;\n\n  for (var i = 0, len = this.array_.length; i < len; i++) {\n    var e = this$1.array_[i];\n    if (e['compareTo'](o) === 0) {\n      return true\n    }\n  }\n  return false\n};\n\n/**\n * @override\n */\nTreeSet.prototype.add = function (o) {\n  var this$1 = this;\n\n  if (this.contains(o)) {\n    return false\n  }\n\n  for (var i = 0, len = this.array_.length; i < len; i++) {\n    var e = this$1.array_[i];\n    if (e['compareTo'](o) === 1) {\n      this$1.array_.splice(i, 0, o);\n      return true\n    }\n  }\n\n  this.array_.push(o);\n\n  return true\n};\n\n/**\n * @override\n */\nTreeSet.prototype.addAll = function (c) {\n  var this$1 = this;\n\n  for (var i = c.iterator(); i.hasNext();) {\n    this$1.add(i.next());\n  }\n  return true\n};\n\n/**\n * @override\n */\nTreeSet.prototype.remove = function (e) {\n  throw new OperationNotSupported()\n};\n\n/**\n * @override\n */\nTreeSet.prototype.size = function () {\n  return this.array_.length\n};\n\n/**\n * @override\n */\nTreeSet.prototype.isEmpty = function () {\n  return this.array_.length === 0\n};\n\n/**\n * @override\n */\nTreeSet.prototype.toArray = function () {\n  var this$1 = this;\n\n  var array = [];\n\n  for (var i = 0, len = this.array_.length; i < len; i++) {\n    array.push(this$1.array_[i]);\n  }\n\n  return array\n};\n\n/**\n * @override\n */\nTreeSet.prototype.iterator = function () {\n  return new Iterator_$2(this)\n};\n\n/**\n * @extends {javascript.util.Iterator}\n * @param {javascript.util.TreeSet} treeSet\n * @constructor\n * @private\n */\nvar Iterator_$2 = function (treeSet) {\n  /**\n   * @type {javascript.util.TreeSet}\n   * @private\n   */\n  this.treeSet_ = treeSet;\n  /**\n   * @type {number}\n   * @private\n   */\n  this.position_ = 0;\n};\n\n/**\n * @override\n */\nIterator_$2.prototype.next = function () {\n  if (this.position_ === this.treeSet_.size()) {\n    throw new NoSuchElementException()\n  }\n  return this.treeSet_.array_[this.position_++]\n};\n\n/**\n * @override\n */\nIterator_$2.prototype.hasNext = function () {\n  if (this.position_ < this.treeSet_.size()) {\n    return true\n  } else {\n    return false\n  }\n};\n\n/**\n * @override\n */\nIterator_$2.prototype.remove = function () {\n  throw new OperationNotSupported()\n};\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/Arrays.html\n *\n * @constructor\n * @private\n */\nvar Arrays = function Arrays () {};\n\nArrays.sort = function sort () {\n  var a = arguments[0];\n  var i;\n  var t;\n  var comparator;\n  var compare;\n  if (arguments.length === 1) {\n    compare = function (a, b) {\n      return a.compareTo(b)\n    };\n    a.sort(compare);\n  } else if (arguments.length === 2) {\n    comparator = arguments[1];\n    compare = function (a, b) {\n      return comparator['compare'](a, b)\n    };\n    a.sort(compare);\n  } else if (arguments.length === 3) {\n    t = a.slice(arguments[1], arguments[2]);\n    t.sort();\n    var r = a.slice(0, arguments[1]).concat(t, a.slice(arguments[2], a.length));\n    a.splice(0, a.length);\n    for (i = 0; i < r.length; i++) {\n      a.push(r[i]);\n    }\n  } else if (arguments.length === 4) {\n    t = a.slice(arguments[1], arguments[2]);\n    comparator = arguments[3];\n    compare = function (a, b) {\n      return comparator['compare'](a, b)\n    };\n    t.sort(compare);\n    r = a.slice(0, arguments[1]).concat(t, a.slice(arguments[2], a.length));\n    a.splice(0, a.length);\n    for (i = 0; i < r.length; i++) {\n      a.push(r[i]);\n    }\n  }\n};\n/**\n * @param {Array} array\n * @return {ArrayList}\n */\nArrays.asList = function asList (array) {\n  var arrayList = new ArrayList();\n  for (var i = 0, len = array.length; i < len; i++) {\n    arrayList.add(array[i]);\n  }\n  return arrayList\n};\n\nvar Dimension = function Dimension () {};\n\nvar staticAccessors$14 = { P: { configurable: true },L: { configurable: true },A: { configurable: true },FALSE: { configurable: true },TRUE: { configurable: true },DONTCARE: { configurable: true },SYM_FALSE: { configurable: true },SYM_TRUE: { configurable: true },SYM_DONTCARE: { configurable: true },SYM_P: { configurable: true },SYM_L: { configurable: true },SYM_A: { configurable: true } };\n\nstaticAccessors$14.P.get = function () { return 0 };\nstaticAccessors$14.L.get = function () { return 1 };\nstaticAccessors$14.A.get = function () { return 2 };\nstaticAccessors$14.FALSE.get = function () { return -1 };\nstaticAccessors$14.TRUE.get = function () { return -2 };\nstaticAccessors$14.DONTCARE.get = function () { return -3 };\nstaticAccessors$14.SYM_FALSE.get = function () { return 'F' };\nstaticAccessors$14.SYM_TRUE.get = function () { return 'T' };\nstaticAccessors$14.SYM_DONTCARE.get = function () { return '*' };\nstaticAccessors$14.SYM_P.get = function () { return '0' };\nstaticAccessors$14.SYM_L.get = function () { return '1' };\nstaticAccessors$14.SYM_A.get = function () { return '2' };\n\nDimension.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nDimension.prototype.getClass = function getClass () {\n  return Dimension\n};\nDimension.toDimensionSymbol = function toDimensionSymbol (dimensionValue) {\n  switch (dimensionValue) {\n    case Dimension.FALSE:\n      return Dimension.SYM_FALSE\n    case Dimension.TRUE:\n      return Dimension.SYM_TRUE\n    case Dimension.DONTCARE:\n      return Dimension.SYM_DONTCARE\n    case Dimension.P:\n      return Dimension.SYM_P\n    case Dimension.L:\n      return Dimension.SYM_L\n    case Dimension.A:\n      return Dimension.SYM_A\n    default:\n  }\n  throw new IllegalArgumentException('Unknown dimension value: ' + dimensionValue)\n};\nDimension.toDimensionValue = function toDimensionValue (dimensionSymbol) {\n  switch (Character.toUpperCase(dimensionSymbol)) {\n    case Dimension.SYM_FALSE:\n      return Dimension.FALSE\n    case Dimension.SYM_TRUE:\n      return Dimension.TRUE\n    case Dimension.SYM_DONTCARE:\n      return Dimension.DONTCARE\n    case Dimension.SYM_P:\n      return Dimension.P\n    case Dimension.SYM_L:\n      return Dimension.L\n    case Dimension.SYM_A:\n      return Dimension.A\n    default:\n  }\n  throw new IllegalArgumentException('Unknown dimension symbol: ' + dimensionSymbol)\n};\n\nObject.defineProperties( Dimension, staticAccessors$14 );\n\nvar GeometryFilter = function GeometryFilter () {};\n\nGeometryFilter.prototype.filter = function filter (geom) {};\nGeometryFilter.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nGeometryFilter.prototype.getClass = function getClass () {\n  return GeometryFilter\n};\n\nvar CoordinateSequenceFilter = function CoordinateSequenceFilter () {};\n\nCoordinateSequenceFilter.prototype.filter = function filter (seq, i) {};\nCoordinateSequenceFilter.prototype.isDone = function isDone () {};\nCoordinateSequenceFilter.prototype.isGeometryChanged = function isGeometryChanged () {};\nCoordinateSequenceFilter.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nCoordinateSequenceFilter.prototype.getClass = function getClass () {\n  return CoordinateSequenceFilter\n};\n\nvar GeometryCollection = (function (Geometry$$1) {\n  function GeometryCollection (geometries, factory) {\n    Geometry$$1.call(this, factory);\n    this._geometries = geometries || [];\n\n    if (Geometry$$1.hasNullElements(this._geometries)) {\n      throw new IllegalArgumentException('geometries must not contain null elements')\n    }\n  }\n\n  if ( Geometry$$1 ) GeometryCollection.__proto__ = Geometry$$1;\n  GeometryCollection.prototype = Object.create( Geometry$$1 && Geometry$$1.prototype );\n  GeometryCollection.prototype.constructor = GeometryCollection;\n\n  var staticAccessors = { serialVersionUID: { configurable: true } };\n  GeometryCollection.prototype.computeEnvelopeInternal = function computeEnvelopeInternal () {\n    var this$1 = this;\n\n    var envelope = new Envelope();\n    for (var i = 0; i < this._geometries.length; i++) {\n      envelope.expandToInclude(this$1._geometries[i].getEnvelopeInternal());\n    }\n    return envelope\n  };\n  GeometryCollection.prototype.getGeometryN = function getGeometryN (n) {\n    return this._geometries[n]\n  };\n  GeometryCollection.prototype.getSortIndex = function getSortIndex () {\n    return Geometry$$1.SORTINDEX_GEOMETRYCOLLECTION\n  };\n  GeometryCollection.prototype.getCoordinates = function getCoordinates () {\n    var this$1 = this;\n\n    var coordinates = new Array(this.getNumPoints()).fill(null);\n    var k = -1;\n    for (var i = 0; i < this._geometries.length; i++) {\n      var childCoordinates = this$1._geometries[i].getCoordinates();\n      for (var j = 0; j < childCoordinates.length; j++) {\n        k++;\n        coordinates[k] = childCoordinates[j];\n      }\n    }\n    return coordinates\n  };\n  GeometryCollection.prototype.getArea = function getArea () {\n    var this$1 = this;\n\n    var area = 0.0;\n    for (var i = 0; i < this._geometries.length; i++) {\n      area += this$1._geometries[i].getArea();\n    }\n    return area\n  };\n  GeometryCollection.prototype.equalsExact = function equalsExact () {\n    var this$1 = this;\n\n    if (arguments.length === 2) {\n      var other = arguments[0];\n      var tolerance = arguments[1];\n      if (!this.isEquivalentClass(other)) {\n        return false\n      }\n      var otherCollection = other;\n      if (this._geometries.length !== otherCollection._geometries.length) {\n        return false\n      }\n      for (var i = 0; i < this._geometries.length; i++) {\n        if (!this$1._geometries[i].equalsExact(otherCollection._geometries[i], tolerance)) {\n          return false\n        }\n      }\n      return true\n    } else { return Geometry$$1.prototype.equalsExact.apply(this, arguments) }\n  };\n  GeometryCollection.prototype.normalize = function normalize () {\n    var this$1 = this;\n\n    for (var i = 0; i < this._geometries.length; i++) {\n      this$1._geometries[i].normalize();\n    }\n    Arrays.sort(this._geometries);\n  };\n  GeometryCollection.prototype.getCoordinate = function getCoordinate () {\n    if (this.isEmpty()) { return null }\n    return this._geometries[0].getCoordinate()\n  };\n  GeometryCollection.prototype.getBoundaryDimension = function getBoundaryDimension () {\n    var this$1 = this;\n\n    var dimension = Dimension.FALSE;\n    for (var i = 0; i < this._geometries.length; i++) {\n      dimension = Math.max(dimension, this$1._geometries[i].getBoundaryDimension());\n    }\n    return dimension\n  };\n  GeometryCollection.prototype.getDimension = function getDimension () {\n    var this$1 = this;\n\n    var dimension = Dimension.FALSE;\n    for (var i = 0; i < this._geometries.length; i++) {\n      dimension = Math.max(dimension, this$1._geometries[i].getDimension());\n    }\n    return dimension\n  };\n  GeometryCollection.prototype.getLength = function getLength () {\n    var this$1 = this;\n\n    var sum = 0.0;\n    for (var i = 0; i < this._geometries.length; i++) {\n      sum += this$1._geometries[i].getLength();\n    }\n    return sum\n  };\n  GeometryCollection.prototype.getNumPoints = function getNumPoints () {\n    var this$1 = this;\n\n    var numPoints = 0;\n    for (var i = 0; i < this._geometries.length; i++) {\n      numPoints += this$1._geometries[i].getNumPoints();\n    }\n    return numPoints\n  };\n  GeometryCollection.prototype.getNumGeometries = function getNumGeometries () {\n    return this._geometries.length\n  };\n  GeometryCollection.prototype.reverse = function reverse () {\n    var this$1 = this;\n\n    var n = this._geometries.length;\n    var revGeoms = new Array(n).fill(null);\n    for (var i = 0; i < this._geometries.length; i++) {\n      revGeoms[i] = this$1._geometries[i].reverse();\n    }\n    return this.getFactory().createGeometryCollection(revGeoms)\n  };\n  GeometryCollection.prototype.compareToSameClass = function compareToSameClass () {\n    var this$1 = this;\n\n    if (arguments.length === 1) {\n      var o = arguments[0];\n      var theseElements = new TreeSet(Arrays.asList(this._geometries));\n      var otherElements = new TreeSet(Arrays.asList(o._geometries));\n      return this.compare(theseElements, otherElements)\n    } else if (arguments.length === 2) {\n      var o$1 = arguments[0];\n      var comp = arguments[1];\n      var gc = o$1;\n      var n1 = this.getNumGeometries();\n      var n2 = gc.getNumGeometries();\n      var i = 0;\n      while (i < n1 && i < n2) {\n        var thisGeom = this$1.getGeometryN(i);\n        var otherGeom = gc.getGeometryN(i);\n        var holeComp = thisGeom.compareToSameClass(otherGeom, comp);\n        if (holeComp !== 0) { return holeComp }\n        i++;\n      }\n      if (i < n1) { return 1 }\n      if (i < n2) { return -1 }\n      return 0\n    }\n  };\n  GeometryCollection.prototype.apply = function apply () {\n    var this$1 = this;\n\n    if (hasInterface(arguments[0], CoordinateFilter)) {\n      var filter = arguments[0];\n      for (var i = 0; i < this._geometries.length; i++) {\n        this$1._geometries[i].apply(filter);\n      }\n    } else if (hasInterface(arguments[0], CoordinateSequenceFilter)) {\n      var filter$1 = arguments[0];\n      if (this._geometries.length === 0) { return null }\n      for (var i$1 = 0; i$1 < this._geometries.length; i$1++) {\n        this$1._geometries[i$1].apply(filter$1);\n        if (filter$1.isDone()) {\n          break\n        }\n      }\n      if (filter$1.isGeometryChanged()) { this.geometryChanged(); }\n    } else if (hasInterface(arguments[0], GeometryFilter)) {\n      var filter$2 = arguments[0];\n      filter$2.filter(this);\n      for (var i$2 = 0; i$2 < this._geometries.length; i$2++) {\n        this$1._geometries[i$2].apply(filter$2);\n      }\n    } else if (hasInterface(arguments[0], GeometryComponentFilter)) {\n      var filter$3 = arguments[0];\n      filter$3.filter(this);\n      for (var i$3 = 0; i$3 < this._geometries.length; i$3++) {\n        this$1._geometries[i$3].apply(filter$3);\n      }\n    }\n  };\n  GeometryCollection.prototype.getBoundary = function getBoundary () {\n    this.checkNotGeometryCollection(this);\n    Assert.shouldNeverReachHere();\n    return null\n  };\n  GeometryCollection.prototype.clone = function clone () {\n    var this$1 = this;\n\n    var gc = Geometry$$1.prototype.clone.call(this);\n    gc._geometries = new Array(this._geometries.length).fill(null);\n    for (var i = 0; i < this._geometries.length; i++) {\n      gc._geometries[i] = this$1._geometries[i].clone();\n    }\n    return gc\n  };\n  GeometryCollection.prototype.getGeometryType = function getGeometryType () {\n    return 'GeometryCollection'\n  };\n  GeometryCollection.prototype.copy = function copy () {\n    var this$1 = this;\n\n    var geometries = new Array(this._geometries.length).fill(null);\n    for (var i = 0; i < geometries.length; i++) {\n      geometries[i] = this$1._geometries[i].copy();\n    }\n    return new GeometryCollection(geometries, this._factory)\n  };\n  GeometryCollection.prototype.isEmpty = function isEmpty () {\n    var this$1 = this;\n\n    for (var i = 0; i < this._geometries.length; i++) {\n      if (!this$1._geometries[i].isEmpty()) {\n        return false\n      }\n    }\n    return true\n  };\n  GeometryCollection.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  GeometryCollection.prototype.getClass = function getClass () {\n    return GeometryCollection\n  };\n  staticAccessors.serialVersionUID.get = function () { return -5694727726395021467 };\n\n  Object.defineProperties( GeometryCollection, staticAccessors );\n\n  return GeometryCollection;\n}(Geometry));\n\nvar MultiLineString = (function (GeometryCollection$$1) {\n  function MultiLineString () {\n    GeometryCollection$$1.apply(this, arguments);\n  }\n\n  if ( GeometryCollection$$1 ) MultiLineString.__proto__ = GeometryCollection$$1;\n  MultiLineString.prototype = Object.create( GeometryCollection$$1 && GeometryCollection$$1.prototype );\n  MultiLineString.prototype.constructor = MultiLineString;\n\n  var staticAccessors = { serialVersionUID: { configurable: true } };\n\n  MultiLineString.prototype.getSortIndex = function getSortIndex () {\n    return Geometry.SORTINDEX_MULTILINESTRING\n  };\n  MultiLineString.prototype.equalsExact = function equalsExact () {\n    if (arguments.length === 2) {\n      var other = arguments[0];\n      var tolerance = arguments[1];\n      if (!this.isEquivalentClass(other)) {\n        return false\n      }\n      return GeometryCollection$$1.prototype.equalsExact.call(this, other, tolerance)\n    } else { return GeometryCollection$$1.prototype.equalsExact.apply(this, arguments) }\n  };\n  MultiLineString.prototype.getBoundaryDimension = function getBoundaryDimension () {\n    if (this.isClosed()) {\n      return Dimension.FALSE\n    }\n    return 0\n  };\n  MultiLineString.prototype.isClosed = function isClosed () {\n    var this$1 = this;\n\n    if (this.isEmpty()) {\n      return false\n    }\n    for (var i = 0; i < this._geometries.length; i++) {\n      if (!this$1._geometries[i].isClosed()) {\n        return false\n      }\n    }\n    return true\n  };\n  MultiLineString.prototype.getDimension = function getDimension () {\n    return 1\n  };\n  MultiLineString.prototype.reverse = function reverse () {\n    var this$1 = this;\n\n    var nLines = this._geometries.length;\n    var revLines = new Array(nLines).fill(null);\n    for (var i = 0; i < this._geometries.length; i++) {\n      revLines[nLines - 1 - i] = this$1._geometries[i].reverse();\n    }\n    return this.getFactory().createMultiLineString(revLines)\n  };\n  MultiLineString.prototype.getBoundary = function getBoundary () {\n    return new BoundaryOp(this).getBoundary()\n  };\n  MultiLineString.prototype.getGeometryType = function getGeometryType () {\n    return 'MultiLineString'\n  };\n  MultiLineString.prototype.copy = function copy () {\n    var this$1 = this;\n\n    var lineStrings = new Array(this._geometries.length).fill(null);\n    for (var i = 0; i < lineStrings.length; i++) {\n      lineStrings[i] = this$1._geometries[i].copy();\n    }\n    return new MultiLineString(lineStrings, this._factory)\n  };\n  MultiLineString.prototype.interfaces_ = function interfaces_ () {\n    return [Lineal]\n  };\n  MultiLineString.prototype.getClass = function getClass () {\n    return MultiLineString\n  };\n  staticAccessors.serialVersionUID.get = function () { return 8166665132445433741 };\n\n  Object.defineProperties( MultiLineString, staticAccessors );\n\n  return MultiLineString;\n}(GeometryCollection));\n\nvar BoundaryOp = function BoundaryOp () {\n  this._geom = null;\n  this._geomFact = null;\n  this._bnRule = null;\n  this._endpointMap = null;\n  if (arguments.length === 1) {\n    var geom = arguments[0];\n    var bnRule = BoundaryNodeRule.MOD2_BOUNDARY_RULE;\n    this._geom = geom;\n    this._geomFact = geom.getFactory();\n    this._bnRule = bnRule;\n  } else if (arguments.length === 2) {\n    var geom$1 = arguments[0];\n    var bnRule$1 = arguments[1];\n    this._geom = geom$1;\n    this._geomFact = geom$1.getFactory();\n    this._bnRule = bnRule$1;\n  }\n};\nBoundaryOp.prototype.boundaryMultiLineString = function boundaryMultiLineString (mLine) {\n  if (this._geom.isEmpty()) {\n    return this.getEmptyMultiPoint()\n  }\n  var bdyPts = this.computeBoundaryCoordinates(mLine);\n  if (bdyPts.length === 1) {\n    return this._geomFact.createPoint(bdyPts[0])\n  }\n  return this._geomFact.createMultiPointFromCoords(bdyPts)\n};\nBoundaryOp.prototype.getBoundary = function getBoundary () {\n  if (this._geom instanceof LineString) { return this.boundaryLineString(this._geom) }\n  if (this._geom instanceof MultiLineString) { return this.boundaryMultiLineString(this._geom) }\n  return this._geom.getBoundary()\n};\nBoundaryOp.prototype.boundaryLineString = function boundaryLineString (line) {\n  if (this._geom.isEmpty()) {\n    return this.getEmptyMultiPoint()\n  }\n  if (line.isClosed()) {\n    var closedEndpointOnBoundary = this._bnRule.isInBoundary(2);\n    if (closedEndpointOnBoundary) {\n      return line.getStartPoint()\n    } else {\n      return this._geomFact.createMultiPoint()\n    }\n  }\n  return this._geomFact.createMultiPoint([line.getStartPoint(), line.getEndPoint()])\n};\nBoundaryOp.prototype.getEmptyMultiPoint = function getEmptyMultiPoint () {\n  return this._geomFact.createMultiPoint()\n};\nBoundaryOp.prototype.computeBoundaryCoordinates = function computeBoundaryCoordinates (mLine) {\n    var this$1 = this;\n\n  var bdyPts = new ArrayList();\n  this._endpointMap = new TreeMap();\n  for (var i = 0; i < mLine.getNumGeometries(); i++) {\n    var line = mLine.getGeometryN(i);\n    if (line.getNumPoints() === 0) { continue }\n    this$1.addEndpoint(line.getCoordinateN(0));\n    this$1.addEndpoint(line.getCoordinateN(line.getNumPoints() - 1));\n  }\n  for (var it = this._endpointMap.entrySet().iterator(); it.hasNext();) {\n    var entry = it.next();\n    var counter = entry.getValue();\n    var valence = counter.count;\n    if (this$1._bnRule.isInBoundary(valence)) {\n      bdyPts.add(entry.getKey());\n    }\n  }\n  return CoordinateArrays.toCoordinateArray(bdyPts)\n};\nBoundaryOp.prototype.addEndpoint = function addEndpoint (pt) {\n  var counter = this._endpointMap.get(pt);\n  if (counter === null) {\n    counter = new Counter();\n    this._endpointMap.put(pt, counter);\n  }\n  counter.count++;\n};\nBoundaryOp.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nBoundaryOp.prototype.getClass = function getClass () {\n  return BoundaryOp\n};\nBoundaryOp.getBoundary = function getBoundary () {\n  if (arguments.length === 1) {\n    var g = arguments[0];\n    var bop = new BoundaryOp(g);\n    return bop.getBoundary()\n  } else if (arguments.length === 2) {\n    var g$1 = arguments[0];\n    var bnRule = arguments[1];\n    var bop$1 = new BoundaryOp(g$1, bnRule);\n    return bop$1.getBoundary()\n  }\n};\n\nvar Counter = function Counter () {\n  this.count = null;\n};\nCounter.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nCounter.prototype.getClass = function getClass () {\n  return Counter\n};\n\n// boundary\n\nfunction PrintStream () {}\n\nfunction StringReader () {}\n\nvar DecimalFormat = function DecimalFormat () {};\n\nfunction ByteArrayOutputStream () {}\n\nfunction IOException () {}\n\nfunction LineNumberReader () {}\n\nvar StringUtil = function StringUtil () {};\n\nvar staticAccessors$15 = { NEWLINE: { configurable: true },SIMPLE_ORDINATE_FORMAT: { configurable: true } };\n\nStringUtil.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nStringUtil.prototype.getClass = function getClass () {\n  return StringUtil\n};\nStringUtil.chars = function chars (c, n) {\n  var ch = new Array(n).fill(null);\n  for (var i = 0; i < n; i++) {\n    ch[i] = c;\n  }\n  return String(ch)\n};\nStringUtil.getStackTrace = function getStackTrace () {\n  if (arguments.length === 1) {\n    var t = arguments[0];\n    var os = new ByteArrayOutputStream();\n    var ps = new PrintStream(os);\n    t.printStackTrace(ps);\n    return os.toString()\n  } else if (arguments.length === 2) {\n    var t$1 = arguments[0];\n    var depth = arguments[1];\n    var stackTrace = '';\n    var stringReader = new StringReader(StringUtil.getStackTrace(t$1));\n    var lineNumberReader = new LineNumberReader(stringReader);\n    for (var i = 0; i < depth; i++) {\n      try {\n        stackTrace += lineNumberReader.readLine() + StringUtil.NEWLINE;\n      } catch (e) {\n        if (e instanceof IOException) {\n          Assert.shouldNeverReachHere();\n        } else { throw e }\n      } finally {}\n    }\n    return stackTrace\n  }\n};\nStringUtil.split = function split (s, separator) {\n  var separatorlen = separator.length;\n  var tokenList = new ArrayList();\n  var tmpString = '' + s;\n  var pos = tmpString.indexOf(separator);\n  while (pos >= 0) {\n    var token = tmpString.substring(0, pos);\n    tokenList.add(token);\n    tmpString = tmpString.substring(pos + separatorlen);\n    pos = tmpString.indexOf(separator);\n  }\n  if (tmpString.length > 0) { tokenList.add(tmpString); }\n  var res = new Array(tokenList.size()).fill(null);\n  for (var i = 0; i < res.length; i++) {\n    res[i] = tokenList.get(i);\n  }\n  return res\n};\nStringUtil.toString = function toString () {\n  if (arguments.length === 1) {\n    var d = arguments[0];\n    return StringUtil.SIMPLE_ORDINATE_FORMAT.format(d)\n  }\n};\nStringUtil.spaces = function spaces (n) {\n  return StringUtil.chars(' ', n)\n};\nstaticAccessors$15.NEWLINE.get = function () { return System.getProperty('line.separator') };\nstaticAccessors$15.SIMPLE_ORDINATE_FORMAT.get = function () { return new DecimalFormat('0.#') };\n\nObject.defineProperties( StringUtil, staticAccessors$15 );\n\nvar CoordinateSequences = function CoordinateSequences () {};\n\nCoordinateSequences.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nCoordinateSequences.prototype.getClass = function getClass () {\n  return CoordinateSequences\n};\nCoordinateSequences.copyCoord = function copyCoord (src, srcPos, dest, destPos) {\n  var minDim = Math.min(src.getDimension(), dest.getDimension());\n  for (var dim = 0; dim < minDim; dim++) {\n    dest.setOrdinate(destPos, dim, src.getOrdinate(srcPos, dim));\n  }\n};\nCoordinateSequences.isRing = function isRing (seq) {\n  var n = seq.size();\n  if (n === 0) { return true }\n  if (n <= 3) { return false }\n  return seq.getOrdinate(0, CoordinateSequence.X) === seq.getOrdinate(n - 1, CoordinateSequence.X) && seq.getOrdinate(0, CoordinateSequence.Y) === seq.getOrdinate(n - 1, CoordinateSequence.Y)\n};\nCoordinateSequences.isEqual = function isEqual (cs1, cs2) {\n  var cs1Size = cs1.size();\n  var cs2Size = cs2.size();\n  if (cs1Size !== cs2Size) { return false }\n  var dim = Math.min(cs1.getDimension(), cs2.getDimension());\n  for (var i = 0; i < cs1Size; i++) {\n    for (var d = 0; d < dim; d++) {\n      var v1 = cs1.getOrdinate(i, d);\n      var v2 = cs2.getOrdinate(i, d);\n      if (cs1.getOrdinate(i, d) === cs2.getOrdinate(i, d)) { continue }\n      if (Double.isNaN(v1) && Double.isNaN(v2)) { continue }\n      return false\n    }\n  }\n  return true\n};\nCoordinateSequences.extend = function extend (fact, seq, size) {\n  var newseq = fact.create(size, seq.getDimension());\n  var n = seq.size();\n  CoordinateSequences.copy(seq, 0, newseq, 0, n);\n  if (n > 0) {\n    for (var i = n; i < size; i++) { CoordinateSequences.copy(seq, n - 1, newseq, i, 1); }\n  }\n  return newseq\n};\nCoordinateSequences.reverse = function reverse (seq) {\n  var last = seq.size() - 1;\n  var mid = Math.trunc(last / 2);\n  for (var i = 0; i <= mid; i++) {\n    CoordinateSequences.swap(seq, i, last - i);\n  }\n};\nCoordinateSequences.swap = function swap (seq, i, j) {\n  if (i === j) { return null }\n  for (var dim = 0; dim < seq.getDimension(); dim++) {\n    var tmp = seq.getOrdinate(i, dim);\n    seq.setOrdinate(i, dim, seq.getOrdinate(j, dim));\n    seq.setOrdinate(j, dim, tmp);\n  }\n};\nCoordinateSequences.copy = function copy (src, srcPos, dest, destPos, length) {\n  for (var i = 0; i < length; i++) {\n    CoordinateSequences.copyCoord(src, srcPos + i, dest, destPos + i);\n  }\n};\nCoordinateSequences.toString = function toString () {\n  if (arguments.length === 1) {\n    var cs = arguments[0];\n    var size = cs.size();\n    if (size === 0) { return '()' }\n    var dim = cs.getDimension();\n    var buf = new StringBuffer();\n    buf.append('(');\n    for (var i = 0; i < size; i++) {\n      if (i > 0) { buf.append(' '); }\n      for (var d = 0; d < dim; d++) {\n        if (d > 0) { buf.append(','); }\n        buf.append(StringUtil.toString(cs.getOrdinate(i, d)));\n      }\n    }\n    buf.append(')');\n    return buf.toString()\n  }\n};\nCoordinateSequences.ensureValidRing = function ensureValidRing (fact, seq) {\n  var n = seq.size();\n  if (n === 0) { return seq }\n  if (n <= 3) { return CoordinateSequences.createClosedRing(fact, seq, 4) }\n  var isClosed = seq.getOrdinate(0, CoordinateSequence.X) === seq.getOrdinate(n - 1, CoordinateSequence.X) && seq.getOrdinate(0, CoordinateSequence.Y) === seq.getOrdinate(n - 1, CoordinateSequence.Y);\n  if (isClosed) { return seq }\n  return CoordinateSequences.createClosedRing(fact, seq, n + 1)\n};\nCoordinateSequences.createClosedRing = function createClosedRing (fact, seq, size) {\n  var newseq = fact.create(size, seq.getDimension());\n  var n = seq.size();\n  CoordinateSequences.copy(seq, 0, newseq, 0, n);\n  for (var i = n; i < size; i++) { CoordinateSequences.copy(seq, 0, newseq, i, 1); }\n  return newseq\n};\n\nvar LineString = (function (Geometry$$1) {\n  function LineString (points, factory) {\n    Geometry$$1.call(this, factory);\n    this._points = null;\n    this.init(points);\n  }\n\n  if ( Geometry$$1 ) LineString.__proto__ = Geometry$$1;\n  LineString.prototype = Object.create( Geometry$$1 && Geometry$$1.prototype );\n  LineString.prototype.constructor = LineString;\n\n  var staticAccessors = { serialVersionUID: { configurable: true } };\n  LineString.prototype.computeEnvelopeInternal = function computeEnvelopeInternal () {\n    if (this.isEmpty()) {\n      return new Envelope()\n    }\n    return this._points.expandEnvelope(new Envelope())\n  };\n  LineString.prototype.isRing = function isRing () {\n    return this.isClosed() && this.isSimple()\n  };\n  LineString.prototype.getSortIndex = function getSortIndex () {\n    return Geometry$$1.SORTINDEX_LINESTRING\n  };\n  LineString.prototype.getCoordinates = function getCoordinates () {\n    return this._points.toCoordinateArray()\n  };\n  LineString.prototype.equalsExact = function equalsExact () {\n    var this$1 = this;\n\n    if (arguments.length === 2) {\n      var other = arguments[0];\n      var tolerance = arguments[1];\n      if (!this.isEquivalentClass(other)) {\n        return false\n      }\n      var otherLineString = other;\n      if (this._points.size() !== otherLineString._points.size()) {\n        return false\n      }\n      for (var i = 0; i < this._points.size(); i++) {\n        if (!this$1.equal(this$1._points.getCoordinate(i), otherLineString._points.getCoordinate(i), tolerance)) {\n          return false\n        }\n      }\n      return true\n    } else { return Geometry$$1.prototype.equalsExact.apply(this, arguments) }\n  };\n  LineString.prototype.normalize = function normalize () {\n    var this$1 = this;\n\n    for (var i = 0; i < Math.trunc(this._points.size() / 2); i++) {\n      var j = this$1._points.size() - 1 - i;\n      if (!this$1._points.getCoordinate(i).equals(this$1._points.getCoordinate(j))) {\n        if (this$1._points.getCoordinate(i).compareTo(this$1._points.getCoordinate(j)) > 0) {\n          CoordinateSequences.reverse(this$1._points);\n        }\n        return null\n      }\n    }\n  };\n  LineString.prototype.getCoordinate = function getCoordinate () {\n    if (this.isEmpty()) { return null }\n    return this._points.getCoordinate(0)\n  };\n  LineString.prototype.getBoundaryDimension = function getBoundaryDimension () {\n    if (this.isClosed()) {\n      return Dimension.FALSE\n    }\n    return 0\n  };\n  LineString.prototype.isClosed = function isClosed () {\n    if (this.isEmpty()) {\n      return false\n    }\n    return this.getCoordinateN(0).equals2D(this.getCoordinateN(this.getNumPoints() - 1))\n  };\n  LineString.prototype.getEndPoint = function getEndPoint () {\n    if (this.isEmpty()) {\n      return null\n    }\n    return this.getPointN(this.getNumPoints() - 1)\n  };\n  LineString.prototype.getDimension = function getDimension () {\n    return 1\n  };\n  LineString.prototype.getLength = function getLength () {\n    return CGAlgorithms.computeLength(this._points)\n  };\n  LineString.prototype.getNumPoints = function getNumPoints () {\n    return this._points.size()\n  };\n  LineString.prototype.reverse = function reverse () {\n    var seq = this._points.copy();\n    CoordinateSequences.reverse(seq);\n    var revLine = this.getFactory().createLineString(seq);\n    return revLine\n  };\n  LineString.prototype.compareToSameClass = function compareToSameClass () {\n    var this$1 = this;\n\n    if (arguments.length === 1) {\n      var o = arguments[0];\n      var line = o;\n      var i = 0;\n      var j = 0;\n      while (i < this._points.size() && j < line._points.size()) {\n        var comparison = this$1._points.getCoordinate(i).compareTo(line._points.getCoordinate(j));\n        if (comparison !== 0) {\n          return comparison\n        }\n        i++;\n        j++;\n      }\n      if (i < this._points.size()) {\n        return 1\n      }\n      if (j < line._points.size()) {\n        return -1\n      }\n      return 0\n    } else if (arguments.length === 2) {\n      var o$1 = arguments[0];\n      var comp = arguments[1];\n      var line$1 = o$1;\n      return comp.compare(this._points, line$1._points)\n    }\n  };\n  LineString.prototype.apply = function apply () {\n    var this$1 = this;\n\n    if (hasInterface(arguments[0], CoordinateFilter)) {\n      var filter = arguments[0];\n      for (var i = 0; i < this._points.size(); i++) {\n        filter.filter(this$1._points.getCoordinate(i));\n      }\n    } else if (hasInterface(arguments[0], CoordinateSequenceFilter)) {\n      var filter$1 = arguments[0];\n      if (this._points.size() === 0) { return null }\n      for (var i$1 = 0; i$1 < this._points.size(); i$1++) {\n        filter$1.filter(this$1._points, i$1);\n        if (filter$1.isDone()) { break }\n      }\n      if (filter$1.isGeometryChanged()) { this.geometryChanged(); }\n    } else if (hasInterface(arguments[0], GeometryFilter)) {\n      var filter$2 = arguments[0];\n      filter$2.filter(this);\n    } else if (hasInterface(arguments[0], GeometryComponentFilter)) {\n      var filter$3 = arguments[0];\n      filter$3.filter(this);\n    }\n  };\n  LineString.prototype.getBoundary = function getBoundary () {\n    return new BoundaryOp(this).getBoundary()\n  };\n  LineString.prototype.isEquivalentClass = function isEquivalentClass (other) {\n    return other instanceof LineString\n  };\n  LineString.prototype.clone = function clone () {\n    var ls = Geometry$$1.prototype.clone.call(this);\n    ls._points = this._points.clone();\n    return ls\n  };\n  LineString.prototype.getCoordinateN = function getCoordinateN (n) {\n    return this._points.getCoordinate(n)\n  };\n  LineString.prototype.getGeometryType = function getGeometryType () {\n    return 'LineString'\n  };\n  LineString.prototype.copy = function copy () {\n    return new LineString(this._points.copy(), this._factory)\n  };\n  LineString.prototype.getCoordinateSequence = function getCoordinateSequence () {\n    return this._points\n  };\n  LineString.prototype.isEmpty = function isEmpty () {\n    return this._points.size() === 0\n  };\n  LineString.prototype.init = function init (points) {\n    if (points === null) {\n      points = this.getFactory().getCoordinateSequenceFactory().create([]);\n    }\n    if (points.size() === 1) {\n      throw new IllegalArgumentException('Invalid number of points in LineString (found ' + points.size() + ' - must be 0 or >= 2)')\n    }\n    this._points = points;\n  };\n  LineString.prototype.isCoordinate = function isCoordinate (pt) {\n    var this$1 = this;\n\n    for (var i = 0; i < this._points.size(); i++) {\n      if (this$1._points.getCoordinate(i).equals(pt)) {\n        return true\n      }\n    }\n    return false\n  };\n  LineString.prototype.getStartPoint = function getStartPoint () {\n    if (this.isEmpty()) {\n      return null\n    }\n    return this.getPointN(0)\n  };\n  LineString.prototype.getPointN = function getPointN (n) {\n    return this.getFactory().createPoint(this._points.getCoordinate(n))\n  };\n  LineString.prototype.interfaces_ = function interfaces_ () {\n    return [Lineal]\n  };\n  LineString.prototype.getClass = function getClass () {\n    return LineString\n  };\n  staticAccessors.serialVersionUID.get = function () { return 3110669828065365560 };\n\n  Object.defineProperties( LineString, staticAccessors );\n\n  return LineString;\n}(Geometry));\n\nvar Puntal = function Puntal () {};\n\nPuntal.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nPuntal.prototype.getClass = function getClass () {\n  return Puntal\n};\n\nvar Point = (function (Geometry$$1) {\n  function Point (coordinates, factory) {\n    Geometry$$1.call(this, factory);\n    this._coordinates = coordinates || null;\n    this.init(this._coordinates);\n  }\n\n  if ( Geometry$$1 ) Point.__proto__ = Geometry$$1;\n  Point.prototype = Object.create( Geometry$$1 && Geometry$$1.prototype );\n  Point.prototype.constructor = Point;\n\n  var staticAccessors = { serialVersionUID: { configurable: true } };\n  Point.prototype.computeEnvelopeInternal = function computeEnvelopeInternal () {\n    if (this.isEmpty()) {\n      return new Envelope()\n    }\n    var env = new Envelope();\n    env.expandToInclude(this._coordinates.getX(0), this._coordinates.getY(0));\n    return env\n  };\n  Point.prototype.getSortIndex = function getSortIndex () {\n    return Geometry$$1.SORTINDEX_POINT\n  };\n  Point.prototype.getCoordinates = function getCoordinates () {\n    return this.isEmpty() ? [] : [this.getCoordinate()]\n  };\n  Point.prototype.equalsExact = function equalsExact () {\n    if (arguments.length === 2) {\n      var other = arguments[0];\n      var tolerance = arguments[1];\n      if (!this.isEquivalentClass(other)) {\n        return false\n      }\n      if (this.isEmpty() && other.isEmpty()) {\n        return true\n      }\n      if (this.isEmpty() !== other.isEmpty()) {\n        return false\n      }\n      return this.equal(other.getCoordinate(), this.getCoordinate(), tolerance)\n    } else { return Geometry$$1.prototype.equalsExact.apply(this, arguments) }\n  };\n  Point.prototype.normalize = function normalize () {};\n  Point.prototype.getCoordinate = function getCoordinate () {\n    return this._coordinates.size() !== 0 ? this._coordinates.getCoordinate(0) : null\n  };\n  Point.prototype.getBoundaryDimension = function getBoundaryDimension () {\n    return Dimension.FALSE\n  };\n  Point.prototype.getDimension = function getDimension () {\n    return 0\n  };\n  Point.prototype.getNumPoints = function getNumPoints () {\n    return this.isEmpty() ? 0 : 1\n  };\n  Point.prototype.reverse = function reverse () {\n    return this.copy()\n  };\n  Point.prototype.getX = function getX () {\n    if (this.getCoordinate() === null) {\n      throw new Error('getX called on empty Point')\n    }\n    return this.getCoordinate().x\n  };\n  Point.prototype.compareToSameClass = function compareToSameClass () {\n    if (arguments.length === 1) {\n      var other = arguments[0];\n      var point$1 = other;\n      return this.getCoordinate().compareTo(point$1.getCoordinate())\n    } else if (arguments.length === 2) {\n      var other$1 = arguments[0];\n      var comp = arguments[1];\n      var point = other$1;\n      return comp.compare(this._coordinates, point._coordinates)\n    }\n  };\n  Point.prototype.apply = function apply () {\n    if (hasInterface(arguments[0], CoordinateFilter)) {\n      var filter = arguments[0];\n      if (this.isEmpty()) {\n        return null\n      }\n      filter.filter(this.getCoordinate());\n    } else if (hasInterface(arguments[0], CoordinateSequenceFilter)) {\n      var filter$1 = arguments[0];\n      if (this.isEmpty()) { return null }\n      filter$1.filter(this._coordinates, 0);\n      if (filter$1.isGeometryChanged()) { this.geometryChanged(); }\n    } else if (hasInterface(arguments[0], GeometryFilter)) {\n      var filter$2 = arguments[0];\n      filter$2.filter(this);\n    } else if (hasInterface(arguments[0], GeometryComponentFilter)) {\n      var filter$3 = arguments[0];\n      filter$3.filter(this);\n    }\n  };\n  Point.prototype.getBoundary = function getBoundary () {\n    return this.getFactory().createGeometryCollection(null)\n  };\n  Point.prototype.clone = function clone () {\n    var p = Geometry$$1.prototype.clone.call(this);\n    p._coordinates = this._coordinates.clone();\n    return p\n  };\n  Point.prototype.getGeometryType = function getGeometryType () {\n    return 'Point'\n  };\n  Point.prototype.copy = function copy () {\n    return new Point(this._coordinates.copy(), this._factory)\n  };\n  Point.prototype.getCoordinateSequence = function getCoordinateSequence () {\n    return this._coordinates\n  };\n  Point.prototype.getY = function getY () {\n    if (this.getCoordinate() === null) {\n      throw new Error('getY called on empty Point')\n    }\n    return this.getCoordinate().y\n  };\n  Point.prototype.isEmpty = function isEmpty () {\n    return this._coordinates.size() === 0\n  };\n  Point.prototype.init = function init (coordinates) {\n    if (coordinates === null) {\n      coordinates = this.getFactory().getCoordinateSequenceFactory().create([]);\n    }\n    Assert.isTrue(coordinates.size() <= 1);\n    this._coordinates = coordinates;\n  };\n  Point.prototype.isSimple = function isSimple () {\n    return true\n  };\n  Point.prototype.interfaces_ = function interfaces_ () {\n    return [Puntal]\n  };\n  Point.prototype.getClass = function getClass () {\n    return Point\n  };\n  staticAccessors.serialVersionUID.get = function () { return 4902022702746614570 };\n\n  Object.defineProperties( Point, staticAccessors );\n\n  return Point;\n}(Geometry));\n\nvar Polygonal = function Polygonal () {};\n\nPolygonal.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nPolygonal.prototype.getClass = function getClass () {\n  return Polygonal\n};\n\nvar Polygon = (function (Geometry$$1) {\n  function Polygon (shell, holes, factory) {\n    Geometry$$1.call(this, factory);\n    this._shell = null;\n    this._holes = null;\n    if (shell === null) {\n      shell = this.getFactory().createLinearRing();\n    }\n    if (holes === null) {\n      holes = [];\n    }\n    if (Geometry$$1.hasNullElements(holes)) {\n      throw new IllegalArgumentException('holes must not contain null elements')\n    }\n    if (shell.isEmpty() && Geometry$$1.hasNonEmptyElements(holes)) {\n      throw new IllegalArgumentException('shell is empty but holes are not')\n    }\n    this._shell = shell;\n    this._holes = holes;\n  }\n\n  if ( Geometry$$1 ) Polygon.__proto__ = Geometry$$1;\n  Polygon.prototype = Object.create( Geometry$$1 && Geometry$$1.prototype );\n  Polygon.prototype.constructor = Polygon;\n\n  var staticAccessors = { serialVersionUID: { configurable: true } };\n  Polygon.prototype.computeEnvelopeInternal = function computeEnvelopeInternal () {\n    return this._shell.getEnvelopeInternal()\n  };\n  Polygon.prototype.getSortIndex = function getSortIndex () {\n    return Geometry$$1.SORTINDEX_POLYGON\n  };\n  Polygon.prototype.getCoordinates = function getCoordinates () {\n    var this$1 = this;\n\n    if (this.isEmpty()) {\n      return []\n    }\n    var coordinates = new Array(this.getNumPoints()).fill(null);\n    var k = -1;\n    var shellCoordinates = this._shell.getCoordinates();\n    for (var x = 0; x < shellCoordinates.length; x++) {\n      k++;\n      coordinates[k] = shellCoordinates[x];\n    }\n    for (var i = 0; i < this._holes.length; i++) {\n      var childCoordinates = this$1._holes[i].getCoordinates();\n      for (var j = 0; j < childCoordinates.length; j++) {\n        k++;\n        coordinates[k] = childCoordinates[j];\n      }\n    }\n    return coordinates\n  };\n  Polygon.prototype.getArea = function getArea () {\n    var this$1 = this;\n\n    var area = 0.0;\n    area += Math.abs(CGAlgorithms.signedArea(this._shell.getCoordinateSequence()));\n    for (var i = 0; i < this._holes.length; i++) {\n      area -= Math.abs(CGAlgorithms.signedArea(this$1._holes[i].getCoordinateSequence()));\n    }\n    return area\n  };\n  Polygon.prototype.isRectangle = function isRectangle () {\n    if (this.getNumInteriorRing() !== 0) { return false }\n    if (this._shell === null) { return false }\n    if (this._shell.getNumPoints() !== 5) { return false }\n    var seq = this._shell.getCoordinateSequence();\n    var env = this.getEnvelopeInternal();\n    for (var i = 0; i < 5; i++) {\n      var x = seq.getX(i);\n      if (!(x === env.getMinX() || x === env.getMaxX())) { return false }\n      var y = seq.getY(i);\n      if (!(y === env.getMinY() || y === env.getMaxY())) { return false }\n    }\n    var prevX = seq.getX(0);\n    var prevY = seq.getY(0);\n    for (var i$1 = 1; i$1 <= 4; i$1++) {\n      var x$1 = seq.getX(i$1);\n      var y$1 = seq.getY(i$1);\n      var xChanged = x$1 !== prevX;\n      var yChanged = y$1 !== prevY;\n      if (xChanged === yChanged) { return false }\n      prevX = x$1;\n      prevY = y$1;\n    }\n    return true\n  };\n  Polygon.prototype.equalsExact = function equalsExact () {\n    var this$1 = this;\n\n    if (arguments.length === 2) {\n      var other = arguments[0];\n      var tolerance = arguments[1];\n      if (!this.isEquivalentClass(other)) {\n        return false\n      }\n      var otherPolygon = other;\n      var thisShell = this._shell;\n      var otherPolygonShell = otherPolygon._shell;\n      if (!thisShell.equalsExact(otherPolygonShell, tolerance)) {\n        return false\n      }\n      if (this._holes.length !== otherPolygon._holes.length) {\n        return false\n      }\n      for (var i = 0; i < this._holes.length; i++) {\n        if (!this$1._holes[i].equalsExact(otherPolygon._holes[i], tolerance)) {\n          return false\n        }\n      }\n      return true\n    } else { return Geometry$$1.prototype.equalsExact.apply(this, arguments) }\n  };\n  Polygon.prototype.normalize = function normalize () {\n    var this$1 = this;\n\n    if (arguments.length === 0) {\n      this.normalize(this._shell, true);\n      for (var i = 0; i < this._holes.length; i++) {\n        this$1.normalize(this$1._holes[i], false);\n      }\n      Arrays.sort(this._holes);\n    } else if (arguments.length === 2) {\n      var ring = arguments[0];\n      var clockwise = arguments[1];\n      if (ring.isEmpty()) {\n        return null\n      }\n      var uniqueCoordinates = new Array(ring.getCoordinates().length - 1).fill(null);\n      System.arraycopy(ring.getCoordinates(), 0, uniqueCoordinates, 0, uniqueCoordinates.length);\n      var minCoordinate = CoordinateArrays.minCoordinate(ring.getCoordinates());\n      CoordinateArrays.scroll(uniqueCoordinates, minCoordinate);\n      System.arraycopy(uniqueCoordinates, 0, ring.getCoordinates(), 0, uniqueCoordinates.length);\n      ring.getCoordinates()[uniqueCoordinates.length] = uniqueCoordinates[0];\n      if (CGAlgorithms.isCCW(ring.getCoordinates()) === clockwise) {\n        CoordinateArrays.reverse(ring.getCoordinates());\n      }\n    }\n  };\n  Polygon.prototype.getCoordinate = function getCoordinate () {\n    return this._shell.getCoordinate()\n  };\n  Polygon.prototype.getNumInteriorRing = function getNumInteriorRing () {\n    return this._holes.length\n  };\n  Polygon.prototype.getBoundaryDimension = function getBoundaryDimension () {\n    return 1\n  };\n  Polygon.prototype.getDimension = function getDimension () {\n    return 2\n  };\n  Polygon.prototype.getLength = function getLength () {\n    var this$1 = this;\n\n    var len = 0.0;\n    len += this._shell.getLength();\n    for (var i = 0; i < this._holes.length; i++) {\n      len += this$1._holes[i].getLength();\n    }\n    return len\n  };\n  Polygon.prototype.getNumPoints = function getNumPoints () {\n    var this$1 = this;\n\n    var numPoints = this._shell.getNumPoints();\n    for (var i = 0; i < this._holes.length; i++) {\n      numPoints += this$1._holes[i].getNumPoints();\n    }\n    return numPoints\n  };\n  Polygon.prototype.reverse = function reverse () {\n    var this$1 = this;\n\n    var poly = this.copy();\n    poly._shell = this._shell.copy().reverse();\n    poly._holes = new Array(this._holes.length).fill(null);\n    for (var i = 0; i < this._holes.length; i++) {\n      poly._holes[i] = this$1._holes[i].copy().reverse();\n    }\n    return poly\n  };\n  Polygon.prototype.convexHull = function convexHull () {\n    return this.getExteriorRing().convexHull()\n  };\n  Polygon.prototype.compareToSameClass = function compareToSameClass () {\n    var this$1 = this;\n\n    if (arguments.length === 1) {\n      var o = arguments[0];\n      var thisShell = this._shell;\n      var otherShell = o._shell;\n      return thisShell.compareToSameClass(otherShell)\n    } else if (arguments.length === 2) {\n      var o$1 = arguments[0];\n      var comp = arguments[1];\n      var poly = o$1;\n      var thisShell$1 = this._shell;\n      var otherShell$1 = poly._shell;\n      var shellComp = thisShell$1.compareToSameClass(otherShell$1, comp);\n      if (shellComp !== 0) { return shellComp }\n      var nHole1 = this.getNumInteriorRing();\n      var nHole2 = poly.getNumInteriorRing();\n      var i = 0;\n      while (i < nHole1 && i < nHole2) {\n        var thisHole = this$1.getInteriorRingN(i);\n        var otherHole = poly.getInteriorRingN(i);\n        var holeComp = thisHole.compareToSameClass(otherHole, comp);\n        if (holeComp !== 0) { return holeComp }\n        i++;\n      }\n      if (i < nHole1) { return 1 }\n      if (i < nHole2) { return -1 }\n      return 0\n    }\n  };\n  Polygon.prototype.apply = function apply (filter) {\n    var this$1 = this;\n\n    if (hasInterface(filter, CoordinateFilter)) {\n      this._shell.apply(filter);\n      for (var i$1 = 0; i$1 < this._holes.length; i$1++) {\n        this$1._holes[i$1].apply(filter);\n      }\n    } else if (hasInterface(filter, CoordinateSequenceFilter)) {\n      this._shell.apply(filter);\n      if (!filter.isDone()) {\n        for (var i$2 = 0; i$2 < this._holes.length; i$2++) {\n          this$1._holes[i$2].apply(filter);\n          if (filter.isDone()) { break }\n        }\n      }\n      if (filter.isGeometryChanged()) { this.geometryChanged(); }\n    } else if (hasInterface(filter, GeometryFilter)) {\n      filter.filter(this);\n    } else if (hasInterface(filter, GeometryComponentFilter)) {\n      filter.filter(this);\n      this._shell.apply(filter);\n      for (var i = 0; i < this._holes.length; i++) {\n        this$1._holes[i].apply(filter);\n      }\n    }\n  };\n  Polygon.prototype.getBoundary = function getBoundary () {\n    var this$1 = this;\n\n    if (this.isEmpty()) {\n      return this.getFactory().createMultiLineString()\n    }\n    var rings = new Array(this._holes.length + 1).fill(null);\n    rings[0] = this._shell;\n    for (var i = 0; i < this._holes.length; i++) {\n      rings[i + 1] = this$1._holes[i];\n    }\n    if (rings.length <= 1) { return this.getFactory().createLinearRing(rings[0].getCoordinateSequence()) }\n    return this.getFactory().createMultiLineString(rings)\n  };\n  Polygon.prototype.clone = function clone () {\n    var this$1 = this;\n\n    var poly = Geometry$$1.prototype.clone.call(this);\n    poly._shell = this._shell.clone();\n    poly._holes = new Array(this._holes.length).fill(null);\n    for (var i = 0; i < this._holes.length; i++) {\n      poly._holes[i] = this$1._holes[i].clone();\n    }\n    return poly\n  };\n  Polygon.prototype.getGeometryType = function getGeometryType () {\n    return 'Polygon'\n  };\n  Polygon.prototype.copy = function copy () {\n    var this$1 = this;\n\n    var shell = this._shell.copy();\n    var holes = new Array(this._holes.length).fill(null);\n    for (var i = 0; i < holes.length; i++) {\n      holes[i] = this$1._holes[i].copy();\n    }\n    return new Polygon(shell, holes, this._factory)\n  };\n  Polygon.prototype.getExteriorRing = function getExteriorRing () {\n    return this._shell\n  };\n  Polygon.prototype.isEmpty = function isEmpty () {\n    return this._shell.isEmpty()\n  };\n  Polygon.prototype.getInteriorRingN = function getInteriorRingN (n) {\n    return this._holes[n]\n  };\n  Polygon.prototype.interfaces_ = function interfaces_ () {\n    return [Polygonal]\n  };\n  Polygon.prototype.getClass = function getClass () {\n    return Polygon\n  };\n  staticAccessors.serialVersionUID.get = function () { return -3494792200821764533 };\n\n  Object.defineProperties( Polygon, staticAccessors );\n\n  return Polygon;\n}(Geometry));\n\nvar MultiPoint = (function (GeometryCollection$$1) {\n  function MultiPoint () {\n    GeometryCollection$$1.apply(this, arguments);\n  }\n\n  if ( GeometryCollection$$1 ) MultiPoint.__proto__ = GeometryCollection$$1;\n  MultiPoint.prototype = Object.create( GeometryCollection$$1 && GeometryCollection$$1.prototype );\n  MultiPoint.prototype.constructor = MultiPoint;\n\n  var staticAccessors = { serialVersionUID: { configurable: true } };\n\n  MultiPoint.prototype.getSortIndex = function getSortIndex () {\n    return Geometry.SORTINDEX_MULTIPOINT\n  };\n  MultiPoint.prototype.isValid = function isValid () {\n    return true\n  };\n  MultiPoint.prototype.equalsExact = function equalsExact () {\n    if (arguments.length === 2) {\n      var other = arguments[0];\n      var tolerance = arguments[1];\n      if (!this.isEquivalentClass(other)) {\n        return false\n      }\n      return GeometryCollection$$1.prototype.equalsExact.call(this, other, tolerance)\n    } else { return GeometryCollection$$1.prototype.equalsExact.apply(this, arguments) }\n  };\n  MultiPoint.prototype.getCoordinate = function getCoordinate () {\n    if (arguments.length === 1) {\n      var n = arguments[0];\n      return this._geometries[n].getCoordinate()\n    } else { return GeometryCollection$$1.prototype.getCoordinate.apply(this, arguments) }\n  };\n  MultiPoint.prototype.getBoundaryDimension = function getBoundaryDimension () {\n    return Dimension.FALSE\n  };\n  MultiPoint.prototype.getDimension = function getDimension () {\n    return 0\n  };\n  MultiPoint.prototype.getBoundary = function getBoundary () {\n    return this.getFactory().createGeometryCollection(null)\n  };\n  MultiPoint.prototype.getGeometryType = function getGeometryType () {\n    return 'MultiPoint'\n  };\n  MultiPoint.prototype.copy = function copy () {\n    var this$1 = this;\n\n    var points = new Array(this._geometries.length).fill(null);\n    for (var i = 0; i < points.length; i++) {\n      points[i] = this$1._geometries[i].copy();\n    }\n    return new MultiPoint(points, this._factory)\n  };\n  MultiPoint.prototype.interfaces_ = function interfaces_ () {\n    return [Puntal]\n  };\n  MultiPoint.prototype.getClass = function getClass () {\n    return MultiPoint\n  };\n  staticAccessors.serialVersionUID.get = function () { return -8048474874175355449 };\n\n  Object.defineProperties( MultiPoint, staticAccessors );\n\n  return MultiPoint;\n}(GeometryCollection));\n\nvar LinearRing = (function (LineString$$1) {\n  function LinearRing (points, factory) {\n    if (points instanceof Coordinate && factory instanceof GeometryFactory) {\n      points = factory.getCoordinateSequenceFactory().create(points);\n    }\n    LineString$$1.call(this, points, factory);\n    this.validateConstruction();\n  }\n\n  if ( LineString$$1 ) LinearRing.__proto__ = LineString$$1;\n  LinearRing.prototype = Object.create( LineString$$1 && LineString$$1.prototype );\n  LinearRing.prototype.constructor = LinearRing;\n\n  var staticAccessors = { MINIMUM_VALID_SIZE: { configurable: true },serialVersionUID: { configurable: true } };\n  LinearRing.prototype.getSortIndex = function getSortIndex () {\n    return Geometry.SORTINDEX_LINEARRING\n  };\n  LinearRing.prototype.getBoundaryDimension = function getBoundaryDimension () {\n    return Dimension.FALSE\n  };\n  LinearRing.prototype.isClosed = function isClosed () {\n    if (this.isEmpty()) {\n      return true\n    }\n    return LineString$$1.prototype.isClosed.call(this)\n  };\n  LinearRing.prototype.reverse = function reverse () {\n    var seq = this._points.copy();\n    CoordinateSequences.reverse(seq);\n    var rev = this.getFactory().createLinearRing(seq);\n    return rev\n  };\n  LinearRing.prototype.validateConstruction = function validateConstruction () {\n    if (!this.isEmpty() && !LineString$$1.prototype.isClosed.call(this)) {\n      throw new IllegalArgumentException('Points of LinearRing do not form a closed linestring')\n    }\n    if (this.getCoordinateSequence().size() >= 1 && this.getCoordinateSequence().size() < LinearRing.MINIMUM_VALID_SIZE) {\n      throw new IllegalArgumentException('Invalid number of points in LinearRing (found ' + this.getCoordinateSequence().size() + ' - must be 0 or >= 4)')\n    }\n  };\n  LinearRing.prototype.getGeometryType = function getGeometryType () {\n    return 'LinearRing'\n  };\n  LinearRing.prototype.copy = function copy () {\n    return new LinearRing(this._points.copy(), this._factory)\n  };\n  LinearRing.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  LinearRing.prototype.getClass = function getClass () {\n    return LinearRing\n  };\n  staticAccessors.MINIMUM_VALID_SIZE.get = function () { return 4 };\n  staticAccessors.serialVersionUID.get = function () { return -4261142084085851829 };\n\n  Object.defineProperties( LinearRing, staticAccessors );\n\n  return LinearRing;\n}(LineString));\n\nvar MultiPolygon = (function (GeometryCollection$$1) {\n  function MultiPolygon () {\n    GeometryCollection$$1.apply(this, arguments);\n  }\n\n  if ( GeometryCollection$$1 ) MultiPolygon.__proto__ = GeometryCollection$$1;\n  MultiPolygon.prototype = Object.create( GeometryCollection$$1 && GeometryCollection$$1.prototype );\n  MultiPolygon.prototype.constructor = MultiPolygon;\n\n  var staticAccessors = { serialVersionUID: { configurable: true } };\n\n  MultiPolygon.prototype.getSortIndex = function getSortIndex () {\n    return Geometry.SORTINDEX_MULTIPOLYGON\n  };\n  MultiPolygon.prototype.equalsExact = function equalsExact () {\n    if (arguments.length === 2) {\n      var other = arguments[0];\n      var tolerance = arguments[1];\n      if (!this.isEquivalentClass(other)) {\n        return false\n      }\n      return GeometryCollection$$1.prototype.equalsExact.call(this, other, tolerance)\n    } else { return GeometryCollection$$1.prototype.equalsExact.apply(this, arguments) }\n  };\n  MultiPolygon.prototype.getBoundaryDimension = function getBoundaryDimension () {\n    return 1\n  };\n  MultiPolygon.prototype.getDimension = function getDimension () {\n    return 2\n  };\n  MultiPolygon.prototype.reverse = function reverse () {\n    var this$1 = this;\n\n    var n = this._geometries.length;\n    var revGeoms = new Array(n).fill(null);\n    for (var i = 0; i < this._geometries.length; i++) {\n      revGeoms[i] = this$1._geometries[i].reverse();\n    }\n    return this.getFactory().createMultiPolygon(revGeoms)\n  };\n  MultiPolygon.prototype.getBoundary = function getBoundary () {\n    var this$1 = this;\n\n    if (this.isEmpty()) {\n      return this.getFactory().createMultiLineString()\n    }\n    var allRings = new ArrayList();\n    for (var i = 0; i < this._geometries.length; i++) {\n      var polygon = this$1._geometries[i];\n      var rings = polygon.getBoundary();\n      for (var j = 0; j < rings.getNumGeometries(); j++) {\n        allRings.add(rings.getGeometryN(j));\n      }\n    }\n    var allRingsArray = new Array(allRings.size()).fill(null);\n    return this.getFactory().createMultiLineString(allRings.toArray(allRingsArray))\n  };\n  MultiPolygon.prototype.getGeometryType = function getGeometryType () {\n    return 'MultiPolygon'\n  };\n  MultiPolygon.prototype.copy = function copy () {\n    var this$1 = this;\n\n    var polygons = new Array(this._geometries.length).fill(null);\n    for (var i = 0; i < polygons.length; i++) {\n      polygons[i] = this$1._geometries[i].copy();\n    }\n    return new MultiPolygon(polygons, this._factory)\n  };\n  MultiPolygon.prototype.interfaces_ = function interfaces_ () {\n    return [Polygonal]\n  };\n  MultiPolygon.prototype.getClass = function getClass () {\n    return MultiPolygon\n  };\n  staticAccessors.serialVersionUID.get = function () { return -551033529766975875 };\n\n  Object.defineProperties( MultiPolygon, staticAccessors );\n\n  return MultiPolygon;\n}(GeometryCollection));\n\nvar GeometryEditor = function GeometryEditor (factory) {\n  this._factory = factory || null;\n  this._isUserDataCopied = false;\n};\n\nvar staticAccessors$16 = { NoOpGeometryOperation: { configurable: true },CoordinateOperation: { configurable: true },CoordinateSequenceOperation: { configurable: true } };\nGeometryEditor.prototype.setCopyUserData = function setCopyUserData (isUserDataCopied) {\n  this._isUserDataCopied = isUserDataCopied;\n};\nGeometryEditor.prototype.edit = function edit (geometry, operation) {\n  if (geometry === null) { return null }\n  var result = this.editInternal(geometry, operation);\n  if (this._isUserDataCopied) {\n    result.setUserData(geometry.getUserData());\n  }\n  return result\n};\nGeometryEditor.prototype.editInternal = function editInternal (geometry, operation) {\n  if (this._factory === null) { this._factory = geometry.getFactory(); }\n  if (geometry instanceof GeometryCollection) {\n    return this.editGeometryCollection(geometry, operation)\n  }\n  if (geometry instanceof Polygon) {\n    return this.editPolygon(geometry, operation)\n  }\n  if (geometry instanceof Point) {\n    return operation.edit(geometry, this._factory)\n  }\n  if (geometry instanceof LineString) {\n    return operation.edit(geometry, this._factory)\n  }\n  Assert.shouldNeverReachHere('Unsupported Geometry class: ' + geometry.getClass().getName());\n  return null\n};\nGeometryEditor.prototype.editGeometryCollection = function editGeometryCollection (collection, operation) {\n    var this$1 = this;\n\n  var collectionForType = operation.edit(collection, this._factory);\n  var geometries = new ArrayList();\n  for (var i = 0; i < collectionForType.getNumGeometries(); i++) {\n    var geometry = this$1.edit(collectionForType.getGeometryN(i), operation);\n    if (geometry === null || geometry.isEmpty()) {\n      continue\n    }\n    geometries.add(geometry);\n  }\n  if (collectionForType.getClass() === MultiPoint) {\n    return this._factory.createMultiPoint(geometries.toArray([]))\n  }\n  if (collectionForType.getClass() === MultiLineString) {\n    return this._factory.createMultiLineString(geometries.toArray([]))\n  }\n  if (collectionForType.getClass() === MultiPolygon) {\n    return this._factory.createMultiPolygon(geometries.toArray([]))\n  }\n  return this._factory.createGeometryCollection(geometries.toArray([]))\n};\nGeometryEditor.prototype.editPolygon = function editPolygon (polygon, operation) {\n    var this$1 = this;\n\n  var newPolygon = operation.edit(polygon, this._factory);\n  if (newPolygon === null) { newPolygon = this._factory.createPolygon(null); }\n  if (newPolygon.isEmpty()) {\n    return newPolygon\n  }\n  var shell = this.edit(newPolygon.getExteriorRing(), operation);\n  if (shell === null || shell.isEmpty()) {\n    return this._factory.createPolygon()\n  }\n  var holes = new ArrayList();\n  for (var i = 0; i < newPolygon.getNumInteriorRing(); i++) {\n    var hole = this$1.edit(newPolygon.getInteriorRingN(i), operation);\n    if (hole === null || hole.isEmpty()) {\n      continue\n    }\n    holes.add(hole);\n  }\n  return this._factory.createPolygon(shell, holes.toArray([]))\n};\nGeometryEditor.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nGeometryEditor.prototype.getClass = function getClass () {\n  return GeometryEditor\n};\nGeometryEditor.GeometryEditorOperation = function GeometryEditorOperation () {};\nstaticAccessors$16.NoOpGeometryOperation.get = function () { return NoOpGeometryOperation };\nstaticAccessors$16.CoordinateOperation.get = function () { return CoordinateOperation };\nstaticAccessors$16.CoordinateSequenceOperation.get = function () { return CoordinateSequenceOperation };\n\nObject.defineProperties( GeometryEditor, staticAccessors$16 );\n\nvar NoOpGeometryOperation = function NoOpGeometryOperation () {};\n\nNoOpGeometryOperation.prototype.edit = function edit (geometry, factory) {\n  return geometry\n};\nNoOpGeometryOperation.prototype.interfaces_ = function interfaces_ () {\n  return [GeometryEditor.GeometryEditorOperation]\n};\nNoOpGeometryOperation.prototype.getClass = function getClass () {\n  return NoOpGeometryOperation\n};\n\nvar CoordinateOperation = function CoordinateOperation () {};\n\nCoordinateOperation.prototype.edit = function edit (geometry, factory) {\n  var coords = this.editCoordinates(geometry.getCoordinates(), geometry);\n  if (coords === null) { return geometry }\n  if (geometry instanceof LinearRing) {\n    return factory.createLinearRing(coords)\n  }\n  if (geometry instanceof LineString) {\n    return factory.createLineString(coords)\n  }\n  if (geometry instanceof Point) {\n    if (coords.length > 0) {\n      return factory.createPoint(coords[0])\n    } else {\n      return factory.createPoint()\n    }\n  }\n  return geometry\n};\nCoordinateOperation.prototype.interfaces_ = function interfaces_ () {\n  return [GeometryEditor.GeometryEditorOperation]\n};\nCoordinateOperation.prototype.getClass = function getClass () {\n  return CoordinateOperation\n};\n\nvar CoordinateSequenceOperation = function CoordinateSequenceOperation () {};\n\nCoordinateSequenceOperation.prototype.edit = function edit (geometry, factory) {\n  if (geometry instanceof LinearRing) {\n    return factory.createLinearRing(this.edit(geometry.getCoordinateSequence(), geometry))\n  }\n  if (geometry instanceof LineString) {\n    return factory.createLineString(this.edit(geometry.getCoordinateSequence(), geometry))\n  }\n  if (geometry instanceof Point) {\n    return factory.createPoint(this.edit(geometry.getCoordinateSequence(), geometry))\n  }\n  return geometry\n};\nCoordinateSequenceOperation.prototype.interfaces_ = function interfaces_ () {\n  return [GeometryEditor.GeometryEditorOperation]\n};\nCoordinateSequenceOperation.prototype.getClass = function getClass () {\n  return CoordinateSequenceOperation\n};\n\nvar CoordinateArraySequence = function CoordinateArraySequence () {\n  var this$1 = this;\n\n  this._dimension = 3;\n  this._coordinates = null;\n  if (arguments.length === 1) {\n    if (arguments[0] instanceof Array) {\n      this._coordinates = arguments[0];\n      this._dimension = 3;\n    } else if (Number.isInteger(arguments[0])) {\n      var size = arguments[0];\n      this._coordinates = new Array(size).fill(null);\n      for (var i = 0; i < size; i++) {\n        this$1._coordinates[i] = new Coordinate();\n      }\n    } else if (hasInterface(arguments[0], CoordinateSequence)) {\n      var coordSeq = arguments[0];\n      if (coordSeq === null) {\n        this._coordinates = new Array(0).fill(null);\n        return null\n      }\n      this._dimension = coordSeq.getDimension();\n      this._coordinates = new Array(coordSeq.size()).fill(null);\n      for (var i$1 = 0; i$1 < this._coordinates.length; i$1++) {\n        this$1._coordinates[i$1] = coordSeq.getCoordinateCopy(i$1);\n      }\n    }\n  } else if (arguments.length === 2) {\n    if (arguments[0] instanceof Array && Number.isInteger(arguments[1])) {\n      var coordinates = arguments[0];\n      var dimension = arguments[1];\n      this._coordinates = coordinates;\n      this._dimension = dimension;\n      if (coordinates === null) { this._coordinates = new Array(0).fill(null); }\n    } else if (Number.isInteger(arguments[0]) && Number.isInteger(arguments[1])) {\n      var size$1 = arguments[0];\n      var dimension$1 = arguments[1];\n      this._coordinates = new Array(size$1).fill(null);\n      this._dimension = dimension$1;\n      for (var i$2 = 0; i$2 < size$1; i$2++) {\n        this$1._coordinates[i$2] = new Coordinate();\n      }\n    }\n  }\n};\n\nvar staticAccessors$18 = { serialVersionUID: { configurable: true } };\nCoordinateArraySequence.prototype.setOrdinate = function setOrdinate (index, ordinateIndex, value) {\n  switch (ordinateIndex) {\n    case CoordinateSequence.X:\n      this._coordinates[index].x = value;\n      break\n    case CoordinateSequence.Y:\n      this._coordinates[index].y = value;\n      break\n    case CoordinateSequence.Z:\n      this._coordinates[index].z = value;\n      break\n    default:\n      throw new IllegalArgumentException('invalid ordinateIndex')\n  }\n};\nCoordinateArraySequence.prototype.size = function size () {\n  return this._coordinates.length\n};\nCoordinateArraySequence.prototype.getOrdinate = function getOrdinate (index, ordinateIndex) {\n  switch (ordinateIndex) {\n    case CoordinateSequence.X:\n      return this._coordinates[index].x\n    case CoordinateSequence.Y:\n      return this._coordinates[index].y\n    case CoordinateSequence.Z:\n      return this._coordinates[index].z\n    default:\n  }\n  return Double.NaN\n};\nCoordinateArraySequence.prototype.getCoordinate = function getCoordinate () {\n  if (arguments.length === 1) {\n    var i = arguments[0];\n    return this._coordinates[i]\n  } else if (arguments.length === 2) {\n    var index = arguments[0];\n    var coord = arguments[1];\n    coord.x = this._coordinates[index].x;\n    coord.y = this._coordinates[index].y;\n    coord.z = this._coordinates[index].z;\n  }\n};\nCoordinateArraySequence.prototype.getCoordinateCopy = function getCoordinateCopy (i) {\n  return new Coordinate(this._coordinates[i])\n};\nCoordinateArraySequence.prototype.getDimension = function getDimension () {\n  return this._dimension\n};\nCoordinateArraySequence.prototype.getX = function getX (index) {\n  return this._coordinates[index].x\n};\nCoordinateArraySequence.prototype.clone = function clone () {\n    var this$1 = this;\n\n  var cloneCoordinates = new Array(this.size()).fill(null);\n  for (var i = 0; i < this._coordinates.length; i++) {\n    cloneCoordinates[i] = this$1._coordinates[i].clone();\n  }\n  return new CoordinateArraySequence(cloneCoordinates, this._dimension)\n};\nCoordinateArraySequence.prototype.expandEnvelope = function expandEnvelope (env) {\n    var this$1 = this;\n\n  for (var i = 0; i < this._coordinates.length; i++) {\n    env.expandToInclude(this$1._coordinates[i]);\n  }\n  return env\n};\nCoordinateArraySequence.prototype.copy = function copy () {\n    var this$1 = this;\n\n  var cloneCoordinates = new Array(this.size()).fill(null);\n  for (var i = 0; i < this._coordinates.length; i++) {\n    cloneCoordinates[i] = this$1._coordinates[i].copy();\n  }\n  return new CoordinateArraySequence(cloneCoordinates, this._dimension)\n};\nCoordinateArraySequence.prototype.toString = function toString () {\n    var this$1 = this;\n\n  if (this._coordinates.length > 0) {\n    var strBuf = new StringBuffer(17 * this._coordinates.length);\n    strBuf.append('(');\n    strBuf.append(this._coordinates[0]);\n    for (var i = 1; i < this._coordinates.length; i++) {\n      strBuf.append(', ');\n      strBuf.append(this$1._coordinates[i]);\n    }\n    strBuf.append(')');\n    return strBuf.toString()\n  } else {\n    return '()'\n  }\n};\nCoordinateArraySequence.prototype.getY = function getY (index) {\n  return this._coordinates[index].y\n};\nCoordinateArraySequence.prototype.toCoordinateArray = function toCoordinateArray () {\n  return this._coordinates\n};\nCoordinateArraySequence.prototype.interfaces_ = function interfaces_ () {\n  return [CoordinateSequence, Serializable]\n};\nCoordinateArraySequence.prototype.getClass = function getClass () {\n  return CoordinateArraySequence\n};\nstaticAccessors$18.serialVersionUID.get = function () { return -915438501601840650 };\n\nObject.defineProperties( CoordinateArraySequence, staticAccessors$18 );\n\nvar CoordinateArraySequenceFactory = function CoordinateArraySequenceFactory () {};\n\nvar staticAccessors$17 = { serialVersionUID: { configurable: true },instanceObject: { configurable: true } };\n\nCoordinateArraySequenceFactory.prototype.readResolve = function readResolve () {\n  return CoordinateArraySequenceFactory.instance()\n};\nCoordinateArraySequenceFactory.prototype.create = function create () {\n  if (arguments.length === 1) {\n    if (arguments[0] instanceof Array) {\n      var coordinates = arguments[0];\n      return new CoordinateArraySequence(coordinates)\n    } else if (hasInterface(arguments[0], CoordinateSequence)) {\n      var coordSeq = arguments[0];\n      return new CoordinateArraySequence(coordSeq)\n    }\n  } else if (arguments.length === 2) {\n    var size = arguments[0];\n    var dimension = arguments[1];\n    if (dimension > 3) { dimension = 3; }\n    if (dimension < 2) { return new CoordinateArraySequence(size) }\n    return new CoordinateArraySequence(size, dimension)\n  }\n};\nCoordinateArraySequenceFactory.prototype.interfaces_ = function interfaces_ () {\n  return [CoordinateSequenceFactory, Serializable]\n};\nCoordinateArraySequenceFactory.prototype.getClass = function getClass () {\n  return CoordinateArraySequenceFactory\n};\nCoordinateArraySequenceFactory.instance = function instance () {\n  return CoordinateArraySequenceFactory.instanceObject\n};\n\nstaticAccessors$17.serialVersionUID.get = function () { return -4099577099607551657 };\nstaticAccessors$17.instanceObject.get = function () { return new CoordinateArraySequenceFactory() };\n\nObject.defineProperties( CoordinateArraySequenceFactory, staticAccessors$17 );\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/HashMap.html\n *\n * @extends {javascript.util.Map}\n * @constructor\n * @private\n */\nvar HashMap = (function (MapInterface) {\n  function HashMap () {\n    MapInterface.call(this);\n    this.map_ = new Map();\n  }\n\n  if ( MapInterface ) HashMap.__proto__ = MapInterface;\n  HashMap.prototype = Object.create( MapInterface && MapInterface.prototype );\n  HashMap.prototype.constructor = HashMap;\n  /**\n   * @override\n   */\n  HashMap.prototype.get = function get (key) {\n    return this.map_.get(key) || null\n  };\n\n  /**\n   * @override\n   */\n  HashMap.prototype.put = function put (key, value) {\n    this.map_.set(key, value);\n    return value\n  };\n\n  /**\n   * @override\n   */\n  HashMap.prototype.values = function values () {\n    var arrayList = new ArrayList();\n    var it = this.map_.values();\n    var o = it.next();\n    while (!o.done) {\n      arrayList.add(o.value);\n      o = it.next();\n    }\n    return arrayList\n  };\n\n  /**\n   * @override\n   */\n  HashMap.prototype.entrySet = function entrySet () {\n    var hashSet = new HashSet();\n    this.map_.entries().forEach(function (entry) { return hashSet.add(entry); });\n    return hashSet\n  };\n\n  /**\n   * @override\n   */\n  HashMap.prototype.size = function size () {\n    return this.map_.size()\n  };\n\n  return HashMap;\n}(Map$1));\n\nvar PrecisionModel = function PrecisionModel () {\n  this._modelType = null;\n  this._scale = null;\n  if (arguments.length === 0) {\n    this._modelType = PrecisionModel.FLOATING;\n  } else if (arguments.length === 1) {\n    if (arguments[0] instanceof Type) {\n      var modelType = arguments[0];\n      this._modelType = modelType;\n      if (modelType === PrecisionModel.FIXED) {\n        this.setScale(1.0);\n      }\n    } else if (typeof arguments[0] === 'number') {\n      var scale = arguments[0];\n      this._modelType = PrecisionModel.FIXED;\n      this.setScale(scale);\n    } else if (arguments[0] instanceof PrecisionModel) {\n      var pm = arguments[0];\n      this._modelType = pm._modelType;\n      this._scale = pm._scale;\n    }\n  }\n};\n\nvar staticAccessors$19 = { serialVersionUID: { configurable: true },maximumPreciseValue: { configurable: true } };\nPrecisionModel.prototype.equals = function equals (other) {\n  if (!(other instanceof PrecisionModel)) {\n    return false\n  }\n  var otherPrecisionModel = other;\n  return this._modelType === otherPrecisionModel._modelType && this._scale === otherPrecisionModel._scale\n};\nPrecisionModel.prototype.compareTo = function compareTo (o) {\n  var other = o;\n  var sigDigits = this.getMaximumSignificantDigits();\n  var otherSigDigits = other.getMaximumSignificantDigits();\n  return new Integer(sigDigits).compareTo(new Integer(otherSigDigits))\n};\nPrecisionModel.prototype.getScale = function getScale () {\n  return this._scale\n};\nPrecisionModel.prototype.isFloating = function isFloating () {\n  return this._modelType === PrecisionModel.FLOATING || this._modelType === PrecisionModel.FLOATING_SINGLE\n};\nPrecisionModel.prototype.getType = function getType () {\n  return this._modelType\n};\nPrecisionModel.prototype.toString = function toString () {\n  var description = 'UNKNOWN';\n  if (this._modelType === PrecisionModel.FLOATING) {\n    description = 'Floating';\n  } else if (this._modelType === PrecisionModel.FLOATING_SINGLE) {\n    description = 'Floating-Single';\n  } else if (this._modelType === PrecisionModel.FIXED) {\n    description = 'Fixed (Scale=' + this.getScale() + ')';\n  }\n  return description\n};\nPrecisionModel.prototype.makePrecise = function makePrecise () {\n  if (typeof arguments[0] === 'number') {\n    var val = arguments[0];\n    if (Double.isNaN(val)) { return val }\n    if (this._modelType === PrecisionModel.FLOATING_SINGLE) {\n      var floatSingleVal = val;\n      return floatSingleVal\n    }\n    if (this._modelType === PrecisionModel.FIXED) {\n      return Math.round(val * this._scale) / this._scale\n    }\n    return val\n  } else if (arguments[0] instanceof Coordinate) {\n    var coord = arguments[0];\n    if (this._modelType === PrecisionModel.FLOATING) { return null }\n    coord.x = this.makePrecise(coord.x);\n    coord.y = this.makePrecise(coord.y);\n  }\n};\nPrecisionModel.prototype.getMaximumSignificantDigits = function getMaximumSignificantDigits () {\n  var maxSigDigits = 16;\n  if (this._modelType === PrecisionModel.FLOATING) {\n    maxSigDigits = 16;\n  } else if (this._modelType === PrecisionModel.FLOATING_SINGLE) {\n    maxSigDigits = 6;\n  } else if (this._modelType === PrecisionModel.FIXED) {\n    maxSigDigits = 1 + Math.trunc(Math.ceil(Math.log(this.getScale()) / Math.log(10)));\n  }\n  return maxSigDigits\n};\nPrecisionModel.prototype.setScale = function setScale (scale) {\n  this._scale = Math.abs(scale);\n};\nPrecisionModel.prototype.interfaces_ = function interfaces_ () {\n  return [Serializable, Comparable]\n};\nPrecisionModel.prototype.getClass = function getClass () {\n  return PrecisionModel\n};\nPrecisionModel.mostPrecise = function mostPrecise (pm1, pm2) {\n  if (pm1.compareTo(pm2) >= 0) { return pm1 }\n  return pm2\n};\nstaticAccessors$19.serialVersionUID.get = function () { return 7777263578777803835 };\nstaticAccessors$19.maximumPreciseValue.get = function () { return 9007199254740992.0 };\n\nObject.defineProperties( PrecisionModel, staticAccessors$19 );\n\nvar Type = function Type (name) {\n  this._name = name || null;\n  Type.nameToTypeMap.put(name, this);\n};\n\nvar staticAccessors$1$1 = { serialVersionUID: { configurable: true },nameToTypeMap: { configurable: true } };\nType.prototype.readResolve = function readResolve () {\n  return Type.nameToTypeMap.get(this._name)\n};\nType.prototype.toString = function toString () {\n  return this._name\n};\nType.prototype.interfaces_ = function interfaces_ () {\n  return [Serializable]\n};\nType.prototype.getClass = function getClass () {\n  return Type\n};\nstaticAccessors$1$1.serialVersionUID.get = function () { return -5528602631731589822 };\nstaticAccessors$1$1.nameToTypeMap.get = function () { return new HashMap() };\n\nObject.defineProperties( Type, staticAccessors$1$1 );\n\nPrecisionModel.Type = Type;\nPrecisionModel.FIXED = new Type('FIXED');\nPrecisionModel.FLOATING = new Type('FLOATING');\nPrecisionModel.FLOATING_SINGLE = new Type('FLOATING SINGLE');\n\nvar GeometryFactory = function GeometryFactory () {\n  this._precisionModel = new PrecisionModel();\n  this._SRID = 0;\n  this._coordinateSequenceFactory = GeometryFactory.getDefaultCoordinateSequenceFactory();\n\n  if (arguments.length === 0) {\n  } else if (arguments.length === 1) {\n    if (hasInterface(arguments[0], CoordinateSequenceFactory)) {\n      this._coordinateSequenceFactory = arguments[0];\n    } else if (arguments[0] instanceof PrecisionModel) {\n      this._precisionModel = arguments[0];\n    }\n  } else if (arguments.length === 2) {\n    this._precisionModel = arguments[0];\n    this._SRID = arguments[1];\n  } else if (arguments.length === 3) {\n    this._precisionModel = arguments[0];\n    this._SRID = arguments[1];\n    this._coordinateSequenceFactory = arguments[2];\n  }\n};\n\nvar staticAccessors$2 = { serialVersionUID: { configurable: true } };\nGeometryFactory.prototype.toGeometry = function toGeometry (envelope) {\n  if (envelope.isNull()) {\n    return this.createPoint(null)\n  }\n  if (envelope.getMinX() === envelope.getMaxX() && envelope.getMinY() === envelope.getMaxY()) {\n    return this.createPoint(new Coordinate(envelope.getMinX(), envelope.getMinY()))\n  }\n  if (envelope.getMinX() === envelope.getMaxX() || envelope.getMinY() === envelope.getMaxY()) {\n    return this.createLineString([new Coordinate(envelope.getMinX(), envelope.getMinY()), new Coordinate(envelope.getMaxX(), envelope.getMaxY())])\n  }\n  return this.createPolygon(this.createLinearRing([new Coordinate(envelope.getMinX(), envelope.getMinY()), new Coordinate(envelope.getMinX(), envelope.getMaxY()), new Coordinate(envelope.getMaxX(), envelope.getMaxY()), new Coordinate(envelope.getMaxX(), envelope.getMinY()), new Coordinate(envelope.getMinX(), envelope.getMinY())]), null)\n};\nGeometryFactory.prototype.createLineString = function createLineString (coordinates) {\n  if (!coordinates) { return new LineString(this.getCoordinateSequenceFactory().create([]), this) }\n  else if (coordinates instanceof Array) { return new LineString(this.getCoordinateSequenceFactory().create(coordinates), this) }\n  else if (hasInterface(coordinates, CoordinateSequence)) { return new LineString(coordinates, this) }\n};\nGeometryFactory.prototype.createMultiLineString = function createMultiLineString () {\n  if (arguments.length === 0) {\n    return new MultiLineString(null, this)\n  } else if (arguments.length === 1) {\n    var lineStrings = arguments[0];\n    return new MultiLineString(lineStrings, this)\n  }\n};\nGeometryFactory.prototype.buildGeometry = function buildGeometry (geomList) {\n  var geomClass = null;\n  var isHeterogeneous = false;\n  var hasGeometryCollection = false;\n  for (var i = geomList.iterator(); i.hasNext();) {\n    var geom = i.next();\n    var partClass = geom.getClass();\n    if (geomClass === null) {\n      geomClass = partClass;\n    }\n    if (partClass !== geomClass) {\n      isHeterogeneous = true;\n    }\n    if (geom.isGeometryCollectionOrDerived()) { hasGeometryCollection = true; }\n  }\n  if (geomClass === null) {\n    return this.createGeometryCollection()\n  }\n  if (isHeterogeneous || hasGeometryCollection) {\n    return this.createGeometryCollection(GeometryFactory.toGeometryArray(geomList))\n  }\n  var geom0 = geomList.iterator().next();\n  var isCollection = geomList.size() > 1;\n  if (isCollection) {\n    if (geom0 instanceof Polygon) {\n      return this.createMultiPolygon(GeometryFactory.toPolygonArray(geomList))\n    } else if (geom0 instanceof LineString) {\n      return this.createMultiLineString(GeometryFactory.toLineStringArray(geomList))\n    } else if (geom0 instanceof Point) {\n      return this.createMultiPoint(GeometryFactory.toPointArray(geomList))\n    }\n    Assert.shouldNeverReachHere('Unhandled class: ' + geom0.getClass().getName());\n  }\n  return geom0\n};\nGeometryFactory.prototype.createMultiPointFromCoords = function createMultiPointFromCoords (coordinates) {\n  return this.createMultiPoint(coordinates !== null ? this.getCoordinateSequenceFactory().create(coordinates) : null)\n};\nGeometryFactory.prototype.createPoint = function createPoint () {\n  if (arguments.length === 0) {\n    return this.createPoint(this.getCoordinateSequenceFactory().create([]))\n  } else if (arguments.length === 1) {\n    if (arguments[0] instanceof Coordinate) {\n      var coordinate = arguments[0];\n      return this.createPoint(coordinate !== null ? this.getCoordinateSequenceFactory().create([coordinate]) : null)\n    } else if (hasInterface(arguments[0], CoordinateSequence)) {\n      var coordinates = arguments[0];\n      return new Point(coordinates, this)\n    }\n  }\n};\nGeometryFactory.prototype.getCoordinateSequenceFactory = function getCoordinateSequenceFactory () {\n  return this._coordinateSequenceFactory\n};\nGeometryFactory.prototype.createPolygon = function createPolygon () {\n  if (arguments.length === 0) {\n    return new Polygon(null, null, this)\n  } else if (arguments.length === 1) {\n    if (hasInterface(arguments[0], CoordinateSequence)) {\n      var coordinates = arguments[0];\n      return this.createPolygon(this.createLinearRing(coordinates))\n    } else if (arguments[0] instanceof Array) {\n      var coordinates$1 = arguments[0];\n      return this.createPolygon(this.createLinearRing(coordinates$1))\n    } else if (arguments[0] instanceof LinearRing) {\n      var shell = arguments[0];\n      return this.createPolygon(shell, null)\n    }\n  } else if (arguments.length === 2) {\n    var shell$1 = arguments[0];\n    var holes = arguments[1];\n    return new Polygon(shell$1, holes, this)\n  }\n};\nGeometryFactory.prototype.getSRID = function getSRID () {\n  return this._SRID\n};\nGeometryFactory.prototype.createGeometryCollection = function createGeometryCollection () {\n  if (arguments.length === 0) {\n    return new GeometryCollection(null, this)\n  } else if (arguments.length === 1) {\n    var geometries = arguments[0];\n    return new GeometryCollection(geometries, this)\n  }\n};\nGeometryFactory.prototype.createGeometry = function createGeometry (g) {\n  var editor = new GeometryEditor(this);\n  return editor.edit(g, {\n    edit: function () {\n      if (arguments.length === 2) {\n        var coordSeq = arguments[0];\n        // const geometry = arguments[1]\n        return this._coordinateSequenceFactory.create(coordSeq)\n      }\n    }\n  })\n};\nGeometryFactory.prototype.getPrecisionModel = function getPrecisionModel () {\n  return this._precisionModel\n};\nGeometryFactory.prototype.createLinearRing = function createLinearRing () {\n  if (arguments.length === 0) {\n    return this.createLinearRing(this.getCoordinateSequenceFactory().create([]))\n  } else if (arguments.length === 1) {\n    if (arguments[0] instanceof Array) {\n      var coordinates = arguments[0];\n      return this.createLinearRing(coordinates !== null ? this.getCoordinateSequenceFactory().create(coordinates) : null)\n    } else if (hasInterface(arguments[0], CoordinateSequence)) {\n      var coordinates$1 = arguments[0];\n      return new LinearRing(coordinates$1, this)\n    }\n  }\n};\nGeometryFactory.prototype.createMultiPolygon = function createMultiPolygon () {\n  if (arguments.length === 0) {\n    return new MultiPolygon(null, this)\n  } else if (arguments.length === 1) {\n    var polygons = arguments[0];\n    return new MultiPolygon(polygons, this)\n  }\n};\nGeometryFactory.prototype.createMultiPoint = function createMultiPoint () {\n    var this$1 = this;\n\n  if (arguments.length === 0) {\n    return new MultiPoint(null, this)\n  } else if (arguments.length === 1) {\n    if (arguments[0] instanceof Array) {\n      var point = arguments[0];\n      return new MultiPoint(point, this)\n    } else if (arguments[0] instanceof Array) {\n      var coordinates = arguments[0];\n      return this.createMultiPoint(coordinates !== null ? this.getCoordinateSequenceFactory().create(coordinates) : null)\n    } else if (hasInterface(arguments[0], CoordinateSequence)) {\n      var coordinates$1 = arguments[0];\n      if (coordinates$1 === null) {\n        return this.createMultiPoint(new Array(0).fill(null))\n      }\n      var points = new Array(coordinates$1.size()).fill(null);\n      for (var i = 0; i < coordinates$1.size(); i++) {\n        var ptSeq = this$1.getCoordinateSequenceFactory().create(1, coordinates$1.getDimension());\n        CoordinateSequences.copy(coordinates$1, i, ptSeq, 0, 1);\n        points[i] = this$1.createPoint(ptSeq);\n      }\n      return this.createMultiPoint(points)\n    }\n  }\n};\nGeometryFactory.prototype.interfaces_ = function interfaces_ () {\n  return [Serializable]\n};\nGeometryFactory.prototype.getClass = function getClass () {\n  return GeometryFactory\n};\nGeometryFactory.toMultiPolygonArray = function toMultiPolygonArray (multiPolygons) {\n  var multiPolygonArray = new Array(multiPolygons.size()).fill(null);\n  return multiPolygons.toArray(multiPolygonArray)\n};\nGeometryFactory.toGeometryArray = function toGeometryArray (geometries) {\n  if (geometries === null) { return null }\n  var geometryArray = new Array(geometries.size()).fill(null);\n  return geometries.toArray(geometryArray)\n};\nGeometryFactory.getDefaultCoordinateSequenceFactory = function getDefaultCoordinateSequenceFactory () {\n  return CoordinateArraySequenceFactory.instance()\n};\nGeometryFactory.toMultiLineStringArray = function toMultiLineStringArray (multiLineStrings) {\n  var multiLineStringArray = new Array(multiLineStrings.size()).fill(null);\n  return multiLineStrings.toArray(multiLineStringArray)\n};\nGeometryFactory.toLineStringArray = function toLineStringArray (lineStrings) {\n  var lineStringArray = new Array(lineStrings.size()).fill(null);\n  return lineStrings.toArray(lineStringArray)\n};\nGeometryFactory.toMultiPointArray = function toMultiPointArray (multiPoints) {\n  var multiPointArray = new Array(multiPoints.size()).fill(null);\n  return multiPoints.toArray(multiPointArray)\n};\nGeometryFactory.toLinearRingArray = function toLinearRingArray (linearRings) {\n  var linearRingArray = new Array(linearRings.size()).fill(null);\n  return linearRings.toArray(linearRingArray)\n};\nGeometryFactory.toPointArray = function toPointArray (points) {\n  var pointArray = new Array(points.size()).fill(null);\n  return points.toArray(pointArray)\n};\nGeometryFactory.toPolygonArray = function toPolygonArray (polygons) {\n  var polygonArray = new Array(polygons.size()).fill(null);\n  return polygons.toArray(polygonArray)\n};\nGeometryFactory.createPointFromInternalCoord = function createPointFromInternalCoord (coord, exemplar) {\n  exemplar.getPrecisionModel().makePrecise(coord);\n  return exemplar.getFactory().createPoint(coord)\n};\nstaticAccessors$2.serialVersionUID.get = function () { return -6820524753094095635 };\n\nObject.defineProperties( GeometryFactory, staticAccessors$2 );\n\nvar geometryTypes = ['Point', 'MultiPoint', 'LineString', 'MultiLineString', 'Polygon', 'MultiPolygon'];\n\n/**\n * Class for reading and writing Well-Known Text.Create a new parser for GeoJSON\n * NOTE: Adapted from OpenLayers 2.11 implementation.\n */\n\n/**\n * Create a new parser for GeoJSON\n *\n * @param {GeometryFactory} geometryFactory\n * @return An instance of GeoJsonParser.\n * @constructor\n * @private\n */\nvar GeoJSONParser = function GeoJSONParser (geometryFactory) {\n  this.geometryFactory = geometryFactory || new GeometryFactory();\n};\n/**\n * Deserialize a GeoJSON object and return the Geometry or Feature(Collection) with JSTS Geometries\n *\n * @param {}\n *        A GeoJSON object.\n * @return {} A Geometry instance or object representing a Feature(Collection) with Geometry instances.\n * @private\n */\nGeoJSONParser.prototype.read = function read (json) {\n  var obj;\n  if (typeof json === 'string') {\n    obj = JSON.parse(json);\n  } else {\n    obj = json;\n  }\n\n  var type = obj.type;\n\n  if (!parse[type]) {\n    throw new Error('Unknown GeoJSON type: ' + obj.type)\n  }\n\n  if (geometryTypes.indexOf(type) !== -1) {\n    return parse[type].apply(this, [obj.coordinates])\n  } else if (type === 'GeometryCollection') {\n    return parse[type].apply(this, [obj.geometries])\n  }\n\n  // feature or feature collection\n  return parse[type].apply(this, [obj])\n};\n\n/**\n * Serialize a Geometry object into GeoJSON\n *\n * @param {Geometry}\n *        geometry A Geometry or array of Geometries.\n * @return {Object} A GeoJSON object represting the input Geometry/Geometries.\n * @private\n */\nGeoJSONParser.prototype.write = function write (geometry) {\n  var type = geometry.getGeometryType();\n\n  if (!extract[type]) {\n    throw new Error('Geometry is not supported')\n  }\n\n  return extract[type].apply(this, [geometry])\n};\n\nvar parse = {\n  /**\n   * Parse a GeoJSON Feature object\n   *\n   * @param {Object}\n   *          obj Object to parse.\n   *\n   * @return {Object} Feature with geometry/bbox converted to JSTS Geometries.\n   */\n  Feature: function (obj) {\n    var feature = {};\n\n    // copy features\n    for (var key in obj) {\n      feature[key] = obj[key];\n    }\n\n    // parse geometry\n    if (obj.geometry) {\n      var type = obj.geometry.type;\n      if (!parse[type]) {\n        throw new Error('Unknown GeoJSON type: ' + obj.type)\n      }\n      feature.geometry = this.read(obj.geometry);\n    }\n\n    // bbox\n    if (obj.bbox) {\n      feature.bbox = parse.bbox.apply(this, [obj.bbox]);\n    }\n\n    return feature\n  },\n\n  /**\n   * Parse a GeoJSON FeatureCollection object\n   *\n   * @param {Object}\n   *          obj Object to parse.\n   *\n   * @return {Object} FeatureCollection with geometry/bbox converted to JSTS Geometries.\n   */\n  FeatureCollection: function (obj) {\n    var this$1 = this;\n\n    var featureCollection = {};\n\n    if (obj.features) {\n      featureCollection.features = [];\n\n      for (var i = 0; i < obj.features.length; ++i) {\n        featureCollection.features.push(this$1.read(obj.features[i]));\n      }\n    }\n\n    if (obj.bbox) {\n      featureCollection.bbox = this.parse.bbox.apply(this, [obj.bbox]);\n    }\n\n    return featureCollection\n  },\n\n  /**\n   * Convert the ordinates in an array to an array of Coordinates\n   *\n   * @param {Array}\n   *          array Array with {Number}s.\n   *\n   * @return {Array} Array with Coordinates.\n   */\n  coordinates: function (array) {\n    var coordinates = [];\n    for (var i = 0; i < array.length; ++i) {\n      var sub = array[i];\n      coordinates.push(new Coordinate(sub[0], sub[1]));\n    }\n    return coordinates\n  },\n\n  /**\n   * Convert the bbox to a LinearRing\n   *\n   * @param {Array}\n   *          array Array with [xMin, yMin, xMax, yMax].\n   *\n   * @return {Array} Array with Coordinates.\n   */\n  bbox: function (array) {\n    return this.geometryFactory.createLinearRing([\n      new Coordinate(array[0], array[1]),\n      new Coordinate(array[2], array[1]),\n      new Coordinate(array[2], array[3]),\n      new Coordinate(array[0], array[3]),\n      new Coordinate(array[0], array[1])\n    ])\n  },\n\n  /**\n   * Convert an Array with ordinates to a Point\n   *\n   * @param {Array}\n   *          array Array with ordinates.\n   *\n   * @return {Point} Point.\n   */\n  Point: function (array) {\n    var coordinate = new Coordinate(array[0], array[1]);\n    return this.geometryFactory.createPoint(coordinate)\n  },\n\n  /**\n   * Convert an Array with coordinates to a MultiPoint\n   *\n   * @param {Array}\n   *          array Array with coordinates.\n   *\n   * @return {MultiPoint} MultiPoint.\n   */\n  MultiPoint: function (array) {\n    var this$1 = this;\n\n    var points = [];\n    for (var i = 0; i < array.length; ++i) {\n      points.push(parse.Point.apply(this$1, [array[i]]));\n    }\n    return this.geometryFactory.createMultiPoint(points)\n  },\n\n  /**\n   * Convert an Array with coordinates to a LineString\n   *\n   * @param {Array}\n   *          array Array with coordinates.\n   *\n   * @return {LineString} LineString.\n   */\n  LineString: function (array) {\n    var coordinates = parse.coordinates.apply(this, [array]);\n    return this.geometryFactory.createLineString(coordinates)\n  },\n\n  /**\n   * Convert an Array with coordinates to a MultiLineString\n   *\n   * @param {Array}\n   *          array Array with coordinates.\n   *\n   * @return {MultiLineString} MultiLineString.\n   */\n  MultiLineString: function (array) {\n    var this$1 = this;\n\n    var lineStrings = [];\n    for (var i = 0; i < array.length; ++i) {\n      lineStrings.push(parse.LineString.apply(this$1, [array[i]]));\n    }\n    return this.geometryFactory.createMultiLineString(lineStrings)\n  },\n\n  /**\n   * Convert an Array to a Polygon\n   *\n   * @param {Array}\n   *          array Array with shell and holes.\n   *\n   * @return {Polygon} Polygon.\n   */\n  Polygon: function (array) {\n    var this$1 = this;\n\n    var shellCoordinates = parse.coordinates.apply(this, [array[0]]);\n    var shell = this.geometryFactory.createLinearRing(shellCoordinates);\n    var holes = [];\n    for (var i = 1; i < array.length; ++i) {\n      var hole = array[i];\n      var coordinates = parse.coordinates.apply(this$1, [hole]);\n      var linearRing = this$1.geometryFactory.createLinearRing(coordinates);\n      holes.push(linearRing);\n    }\n    return this.geometryFactory.createPolygon(shell, holes)\n  },\n\n  /**\n   * Convert an Array to a MultiPolygon\n   *\n   * @param {Array}\n   *          array Array of arrays with shell and rings.\n   *\n   * @return {MultiPolygon} MultiPolygon.\n   */\n  MultiPolygon: function (array) {\n    var this$1 = this;\n\n    var polygons = [];\n    for (var i = 0; i < array.length; ++i) {\n      var polygon = array[i];\n      polygons.push(parse.Polygon.apply(this$1, [polygon]));\n    }\n    return this.geometryFactory.createMultiPolygon(polygons)\n  },\n\n  /**\n   * Convert an Array to a GeometryCollection\n   *\n   * @param {Array}\n   *          array Array of GeoJSON geometries.\n   *\n   * @return {GeometryCollection} GeometryCollection.\n   */\n  GeometryCollection: function (array) {\n    var this$1 = this;\n\n    var geometries = [];\n    for (var i = 0; i < array.length; ++i) {\n      var geometry = array[i];\n      geometries.push(this$1.read(geometry));\n    }\n    return this.geometryFactory.createGeometryCollection(geometries)\n  }\n};\n\nvar extract = {\n  /**\n   * Convert a Coordinate to an Array\n   *\n   * @param {Coordinate}\n   *          coordinate Coordinate to convert.\n   *\n   * @return {Array} Array of ordinates.\n   */\n  coordinate: function (coordinate) {\n    return [coordinate.x, coordinate.y]\n  },\n\n  /**\n   * Convert a Point to a GeoJSON object\n   *\n   * @param {Point}\n   *          point Point to convert.\n   *\n   * @return {Array} Array of 2 ordinates (paired to a coordinate).\n   */\n  Point: function (point) {\n    var array = extract.coordinate.apply(this, [point.getCoordinate()]);\n    return {\n      type: 'Point',\n      coordinates: array\n    }\n  },\n\n  /**\n   * Convert a MultiPoint to a GeoJSON object\n   *\n   * @param {MultiPoint}\n   *          multipoint MultiPoint to convert.\n   *\n   * @return {Array} Array of coordinates.\n   */\n  MultiPoint: function (multipoint) {\n    var this$1 = this;\n\n    var array = [];\n    for (var i = 0; i < multipoint._geometries.length; ++i) {\n      var point = multipoint._geometries[i];\n      var geoJson = extract.Point.apply(this$1, [point]);\n      array.push(geoJson.coordinates);\n    }\n    return {\n      type: 'MultiPoint',\n      coordinates: array\n    }\n  },\n\n  /**\n   * Convert a LineString to a GeoJSON object\n   *\n   * @param {LineString}\n   *          linestring LineString to convert.\n   *\n   * @return {Array} Array of coordinates.\n   */\n  LineString: function (linestring) {\n    var this$1 = this;\n\n    var array = [];\n    var coordinates = linestring.getCoordinates();\n    for (var i = 0; i < coordinates.length; ++i) {\n      var coordinate = coordinates[i];\n      array.push(extract.coordinate.apply(this$1, [coordinate]));\n    }\n    return {\n      type: 'LineString',\n      coordinates: array\n    }\n  },\n\n  /**\n   * Convert a MultiLineString to a GeoJSON object\n   *\n   * @param {MultiLineString}\n   *          multilinestring MultiLineString to convert.\n   *\n   * @return {Array} Array of Array of coordinates.\n   */\n  MultiLineString: function (multilinestring) {\n    var this$1 = this;\n\n    var array = [];\n    for (var i = 0; i < multilinestring._geometries.length; ++i) {\n      var linestring = multilinestring._geometries[i];\n      var geoJson = extract.LineString.apply(this$1, [linestring]);\n      array.push(geoJson.coordinates);\n    }\n    return {\n      type: 'MultiLineString',\n      coordinates: array\n    }\n  },\n\n  /**\n   * Convert a Polygon to a GeoJSON object\n   *\n   * @param {Polygon}\n   *          polygon Polygon to convert.\n   *\n   * @return {Array} Array with shell, holes.\n   */\n  Polygon: function (polygon) {\n    var this$1 = this;\n\n    var array = [];\n    var shellGeoJson = extract.LineString.apply(this, [polygon._shell]);\n    array.push(shellGeoJson.coordinates);\n    for (var i = 0; i < polygon._holes.length; ++i) {\n      var hole = polygon._holes[i];\n      var holeGeoJson = extract.LineString.apply(this$1, [hole]);\n      array.push(holeGeoJson.coordinates);\n    }\n    return {\n      type: 'Polygon',\n      coordinates: array\n    }\n  },\n\n  /**\n   * Convert a MultiPolygon to a GeoJSON object\n   *\n   * @param {MultiPolygon}\n   *          multipolygon MultiPolygon to convert.\n   *\n   * @return {Array} Array of polygons.\n   */\n  MultiPolygon: function (multipolygon) {\n    var this$1 = this;\n\n    var array = [];\n    for (var i = 0; i < multipolygon._geometries.length; ++i) {\n      var polygon = multipolygon._geometries[i];\n      var geoJson = extract.Polygon.apply(this$1, [polygon]);\n      array.push(geoJson.coordinates);\n    }\n    return {\n      type: 'MultiPolygon',\n      coordinates: array\n    }\n  },\n\n  /**\n   * Convert a GeometryCollection to a GeoJSON object\n   *\n   * @param {GeometryCollection}\n   *          collection GeometryCollection to convert.\n   *\n   * @return {Array} Array of geometries.\n   */\n  GeometryCollection: function (collection) {\n    var this$1 = this;\n\n    var array = [];\n    for (var i = 0; i < collection._geometries.length; ++i) {\n      var geometry = collection._geometries[i];\n      var type = geometry.getGeometryType();\n      array.push(extract[type].apply(this$1, [geometry]));\n    }\n    return {\n      type: 'GeometryCollection',\n      geometries: array\n    }\n  }\n};\n\n/**\n * Converts a geometry in GeoJSON to a {@link Geometry}.\n */\n\n/**\n * A <code>GeoJSONReader</code> is parameterized by a <code>GeometryFactory</code>,\n * to allow it to create <code>Geometry</code> objects of the appropriate\n * implementation. In particular, the <code>GeometryFactory</code> determines\n * the <code>PrecisionModel</code> and <code>SRID</code> that is used.\n *\n * @param {GeometryFactory} geometryFactory\n * @constructor\n */\nvar GeoJSONReader = function GeoJSONReader (geometryFactory) {\n  this.geometryFactory = geometryFactory || new GeometryFactory();\n  this.precisionModel = this.geometryFactory.getPrecisionModel();\n  this.parser = new GeoJSONParser(this.geometryFactory);\n};\n/**\n * Reads a GeoJSON representation of a {@link Geometry}\n *\n * Will also parse GeoJSON Features/FeatureCollections as custom objects.\n *\n * @param {Object|String} geoJson a GeoJSON Object or String.\n * @return {Geometry|Object} a <code>Geometry or Feature/FeatureCollection representation.</code>\n * @memberof GeoJSONReader\n */\nGeoJSONReader.prototype.read = function read (geoJson) {\n  var geometry = this.parser.read(geoJson);\n\n  if (this.precisionModel.getType() === PrecisionModel.FIXED) {\n    this.reducePrecision(geometry);\n  }\n\n  return geometry\n};\n\n// NOTE: this is a hack\nGeoJSONReader.prototype.reducePrecision = function reducePrecision (geometry) {\n    var this$1 = this;\n\n  var i, len;\n\n  if (geometry.coordinate) {\n    this.precisionModel.makePrecise(geometry.coordinate);\n  } else if (geometry.points) {\n    for (i = 0, len = geometry.points.length; i < len; i++) {\n      this$1.precisionModel.makePrecise(geometry.points[i]);\n    }\n  } else if (geometry.geometries) {\n    for (i = 0, len = geometry.geometries.length; i < len; i++) {\n      this$1.reducePrecision(geometry.geometries[i]);\n    }\n  }\n};\n\n/**\n * @module GeoJSONWriter\n */\n\n/**\n * Writes the GeoJSON representation of a {@link Geometry}. The\n * The GeoJSON format is defined <A\n * HREF=\"http://geojson.org/geojson-spec.html\">here</A>.\n */\n\n/**\n * The <code>GeoJSONWriter</code> outputs coordinates rounded to the precision\n * model. Only the maximum number of decimal places necessary to represent the\n * ordinates to the required precision will be output.\n *\n * @param {GeometryFactory} geometryFactory\n * @constructor\n */\nvar GeoJSONWriter = function GeoJSONWriter () {\n  this.parser = new GeoJSONParser(this.geometryFactory);\n};\n/**\n * Converts a <code>Geometry</code> to its GeoJSON representation.\n *\n * @param {Geometry}\n *        geometry a <code>Geometry</code> to process.\n * @return {Object} The GeoJSON representation of the Geometry.\n * @memberof GeoJSONWriter\n */\nGeoJSONWriter.prototype.write = function write (geometry) {\n  return this.parser.write(geometry)\n};\n\n/* eslint-disable no-undef */\n\n// io\n\nvar Position = function Position () {};\n\nvar staticAccessors$20 = { ON: { configurable: true },LEFT: { configurable: true },RIGHT: { configurable: true } };\n\nPosition.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nPosition.prototype.getClass = function getClass () {\n  return Position\n};\nPosition.opposite = function opposite (position) {\n  if (position === Position.LEFT) { return Position.RIGHT }\n  if (position === Position.RIGHT) { return Position.LEFT }\n  return position\n};\nstaticAccessors$20.ON.get = function () { return 0 };\nstaticAccessors$20.LEFT.get = function () { return 1 };\nstaticAccessors$20.RIGHT.get = function () { return 2 };\n\nObject.defineProperties( Position, staticAccessors$20 );\n\n/**\n * @param {string=} message Optional message\n * @extends {Error}\n * @constructor\n * @private\n */\nfunction EmptyStackException (message) {\n  this.message = message || '';\n}\nEmptyStackException.prototype = new Error();\n\n/**\n * @type {string}\n */\nEmptyStackException.prototype.name = 'EmptyStackException';\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/Stack.html\n *\n * @extends {List}\n * @constructor\n * @private\n */\nfunction Stack () {\n  /**\n   * @type {Array}\n   * @private\n   */\n  this.array_ = [];\n}\nStack.prototype = new List();\n\n/**\n * @override\n */\nStack.prototype.add = function (e) {\n  this.array_.push(e);\n  return true\n};\n\n/**\n * @override\n */\nStack.prototype.get = function (index) {\n  if (index < 0 || index >= this.size()) {\n    throw new Error()\n  }\n\n  return this.array_[index]\n};\n\n/**\n * Pushes an item onto the top of this stack.\n * @param {Object} e\n * @return {Object}\n */\nStack.prototype.push = function (e) {\n  this.array_.push(e);\n  return e\n};\n\n/**\n * Pushes an item onto the top of this stack.\n * @param {Object} e\n * @return {Object}\n */\nStack.prototype.pop = function (e) {\n  if (this.array_.length === 0) {\n    throw new EmptyStackException()\n  }\n\n  return this.array_.pop()\n};\n\n/**\n * Looks at the object at the top of this stack without removing it from the\n * stack.\n * @return {Object}\n */\nStack.prototype.peek = function () {\n  if (this.array_.length === 0) {\n    throw new EmptyStackException()\n  }\n\n  return this.array_[this.array_.length - 1]\n};\n\n/**\n * Tests if this stack is empty.\n * @return {boolean} true if and only if this stack contains no items; false\n *         otherwise.\n */\nStack.prototype.empty = function () {\n  if (this.array_.length === 0) {\n    return true\n  } else {\n    return false\n  }\n};\n\n/**\n * @return {boolean}\n */\nStack.prototype.isEmpty = function () {\n  return this.empty()\n};\n\n/**\n * Returns the 1-based position where an object is on this stack. If the object\n * o occurs as an item in this stack, this method returns the distance from the\n * top of the stack of the occurrence nearest the top of the stack; the topmost\n * item on the stack is considered to be at distance 1. The equals method is\n * used to compare o to the items in this stack.\n *\n * NOTE: does not currently actually use equals. (=== is used)\n *\n * @param {Object} o\n * @return {number} the 1-based position from the top of the stack where the\n *         object is located; the return value -1 indicates that the object is\n *         not on the stack.\n */\nStack.prototype.search = function (o) {\n  return this.array_.indexOf(o)\n};\n\n/**\n * @return {number}\n * @export\n */\nStack.prototype.size = function () {\n  return this.array_.length\n};\n\n/**\n * @return {Array}\n */\nStack.prototype.toArray = function () {\n  var this$1 = this;\n\n  var array = [];\n\n  for (var i = 0, len = this.array_.length; i < len; i++) {\n    array.push(this$1.array_[i]);\n  }\n\n  return array\n};\n\nvar RightmostEdgeFinder = function RightmostEdgeFinder () {\n  this._minIndex = -1;\n  this._minCoord = null;\n  this._minDe = null;\n  this._orientedDe = null;\n};\nRightmostEdgeFinder.prototype.getCoordinate = function getCoordinate () {\n  return this._minCoord\n};\nRightmostEdgeFinder.prototype.getRightmostSide = function getRightmostSide (de, index) {\n  var side = this.getRightmostSideOfSegment(de, index);\n  if (side < 0) { side = this.getRightmostSideOfSegment(de, index - 1); }\n  if (side < 0) {\n    this._minCoord = null;\n    this.checkForRightmostCoordinate(de);\n  }\n  return side\n};\nRightmostEdgeFinder.prototype.findRightmostEdgeAtVertex = function findRightmostEdgeAtVertex () {\n  var pts = this._minDe.getEdge().getCoordinates();\n  Assert.isTrue(this._minIndex > 0 && this._minIndex < pts.length, 'rightmost point expected to be interior vertex of edge');\n  var pPrev = pts[this._minIndex - 1];\n  var pNext = pts[this._minIndex + 1];\n  var orientation = CGAlgorithms.computeOrientation(this._minCoord, pNext, pPrev);\n  var usePrev = false;\n  if (pPrev.y < this._minCoord.y && pNext.y < this._minCoord.y && orientation === CGAlgorithms.COUNTERCLOCKWISE) {\n    usePrev = true;\n  } else if (pPrev.y > this._minCoord.y && pNext.y > this._minCoord.y && orientation === CGAlgorithms.CLOCKWISE) {\n    usePrev = true;\n  }\n  if (usePrev) {\n    this._minIndex = this._minIndex - 1;\n  }\n};\nRightmostEdgeFinder.prototype.getRightmostSideOfSegment = function getRightmostSideOfSegment (de, i) {\n  var e = de.getEdge();\n  var coord = e.getCoordinates();\n  if (i < 0 || i + 1 >= coord.length) { return -1 }\n  if (coord[i].y === coord[i + 1].y) { return -1 }\n  var pos = Position.LEFT;\n  if (coord[i].y < coord[i + 1].y) { pos = Position.RIGHT; }\n  return pos\n};\nRightmostEdgeFinder.prototype.getEdge = function getEdge () {\n  return this._orientedDe\n};\nRightmostEdgeFinder.prototype.checkForRightmostCoordinate = function checkForRightmostCoordinate (de) {\n    var this$1 = this;\n\n  var coord = de.getEdge().getCoordinates();\n  for (var i = 0; i < coord.length - 1; i++) {\n    if (this$1._minCoord === null || coord[i].x > this$1._minCoord.x) {\n      this$1._minDe = de;\n      this$1._minIndex = i;\n      this$1._minCoord = coord[i];\n    }\n  }\n};\nRightmostEdgeFinder.prototype.findRightmostEdgeAtNode = function findRightmostEdgeAtNode () {\n  var node = this._minDe.getNode();\n  var star = node.getEdges();\n  this._minDe = star.getRightmostEdge();\n  if (!this._minDe.isForward()) {\n    this._minDe = this._minDe.getSym();\n    this._minIndex = this._minDe.getEdge().getCoordinates().length - 1;\n  }\n};\nRightmostEdgeFinder.prototype.findEdge = function findEdge (dirEdgeList) {\n    var this$1 = this;\n\n  for (var i = dirEdgeList.iterator(); i.hasNext();) {\n    var de = i.next();\n    if (!de.isForward()) { continue }\n    this$1.checkForRightmostCoordinate(de);\n  }\n  Assert.isTrue(this._minIndex !== 0 || this._minCoord.equals(this._minDe.getCoordinate()), 'inconsistency in rightmost processing');\n  if (this._minIndex === 0) {\n    this.findRightmostEdgeAtNode();\n  } else {\n    this.findRightmostEdgeAtVertex();\n  }\n  this._orientedDe = this._minDe;\n  var rightmostSide = this.getRightmostSide(this._minDe, this._minIndex);\n  if (rightmostSide === Position.LEFT) {\n    this._orientedDe = this._minDe.getSym();\n  }\n};\nRightmostEdgeFinder.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nRightmostEdgeFinder.prototype.getClass = function getClass () {\n  return RightmostEdgeFinder\n};\n\nvar TopologyException = (function (RuntimeException$$1) {\n  function TopologyException (msg, pt) {\n    RuntimeException$$1.call(this, TopologyException.msgWithCoord(msg, pt));\n    this.pt = pt ? new Coordinate(pt) : null;\n    this.name = 'TopologyException';\n  }\n\n  if ( RuntimeException$$1 ) TopologyException.__proto__ = RuntimeException$$1;\n  TopologyException.prototype = Object.create( RuntimeException$$1 && RuntimeException$$1.prototype );\n  TopologyException.prototype.constructor = TopologyException;\n  TopologyException.prototype.getCoordinate = function getCoordinate () {\n    return this.pt\n  };\n  TopologyException.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  TopologyException.prototype.getClass = function getClass () {\n    return TopologyException\n  };\n  TopologyException.msgWithCoord = function msgWithCoord (msg, pt) {\n    if (!pt) { return msg + ' [ ' + pt + ' ]' }\n    return msg\n  };\n\n  return TopologyException;\n}(RuntimeException));\n\nvar LinkedList = function LinkedList () {\n  this.array_ = [];\n};\nLinkedList.prototype.addLast = function addLast (e) {\n  this.array_.push(e);\n};\nLinkedList.prototype.removeFirst = function removeFirst () {\n  return this.array_.shift()\n};\nLinkedList.prototype.isEmpty = function isEmpty () {\n  return this.array_.length === 0\n};\n\nvar BufferSubgraph = function BufferSubgraph () {\n  this._finder = null;\n  this._dirEdgeList = new ArrayList();\n  this._nodes = new ArrayList();\n  this._rightMostCoord = null;\n  this._env = null;\n  this._finder = new RightmostEdgeFinder();\n};\nBufferSubgraph.prototype.clearVisitedEdges = function clearVisitedEdges () {\n  for (var it = this._dirEdgeList.iterator(); it.hasNext();) {\n    var de = it.next();\n    de.setVisited(false);\n  }\n};\nBufferSubgraph.prototype.getRightmostCoordinate = function getRightmostCoordinate () {\n  return this._rightMostCoord\n};\nBufferSubgraph.prototype.computeNodeDepth = function computeNodeDepth (n) {\n    var this$1 = this;\n\n  var startEdge = null;\n  for (var i = n.getEdges().iterator(); i.hasNext();) {\n    var de = i.next();\n    if (de.isVisited() || de.getSym().isVisited()) {\n      startEdge = de;\n      break\n    }\n  }\n  if (startEdge === null) { throw new TopologyException('unable to find edge to compute depths at ' + n.getCoordinate()) }\n  n.getEdges().computeDepths(startEdge);\n  for (var i$1 = n.getEdges().iterator(); i$1.hasNext();) {\n    var de$1 = i$1.next();\n    de$1.setVisited(true);\n    this$1.copySymDepths(de$1);\n  }\n};\nBufferSubgraph.prototype.computeDepth = function computeDepth (outsideDepth) {\n  this.clearVisitedEdges();\n  var de = this._finder.getEdge();\n  // const n = de.getNode()\n  // const label = de.getLabel()\n  de.setEdgeDepths(Position.RIGHT, outsideDepth);\n  this.copySymDepths(de);\n  this.computeDepths(de);\n};\nBufferSubgraph.prototype.create = function create (node) {\n  this.addReachable(node);\n  this._finder.findEdge(this._dirEdgeList);\n  this._rightMostCoord = this._finder.getCoordinate();\n};\nBufferSubgraph.prototype.findResultEdges = function findResultEdges () {\n  for (var it = this._dirEdgeList.iterator(); it.hasNext();) {\n    var de = it.next();\n    if (de.getDepth(Position.RIGHT) >= 1 && de.getDepth(Position.LEFT) <= 0 && !de.isInteriorAreaEdge()) {\n      de.setInResult(true);\n    }\n  }\n};\nBufferSubgraph.prototype.computeDepths = function computeDepths (startEdge) {\n    var this$1 = this;\n\n  var nodesVisited = new HashSet();\n  var nodeQueue = new LinkedList();\n  var startNode = startEdge.getNode();\n  nodeQueue.addLast(startNode);\n  nodesVisited.add(startNode);\n  startEdge.setVisited(true);\n  while (!nodeQueue.isEmpty()) {\n    var n = nodeQueue.removeFirst();\n    nodesVisited.add(n);\n    this$1.computeNodeDepth(n);\n    for (var i = n.getEdges().iterator(); i.hasNext();) {\n      var de = i.next();\n      var sym = de.getSym();\n      if (sym.isVisited()) { continue }\n      var adjNode = sym.getNode();\n      if (!nodesVisited.contains(adjNode)) {\n        nodeQueue.addLast(adjNode);\n        nodesVisited.add(adjNode);\n      }\n    }\n  }\n};\nBufferSubgraph.prototype.compareTo = function compareTo (o) {\n  var graph = o;\n  if (this._rightMostCoord.x < graph._rightMostCoord.x) {\n    return -1\n  }\n  if (this._rightMostCoord.x > graph._rightMostCoord.x) {\n    return 1\n  }\n  return 0\n};\nBufferSubgraph.prototype.getEnvelope = function getEnvelope () {\n  if (this._env === null) {\n    var edgeEnv = new Envelope();\n    for (var it = this._dirEdgeList.iterator(); it.hasNext();) {\n      var dirEdge = it.next();\n      var pts = dirEdge.getEdge().getCoordinates();\n      for (var i = 0; i < pts.length - 1; i++) {\n        edgeEnv.expandToInclude(pts[i]);\n      }\n    }\n    this._env = edgeEnv;\n  }\n  return this._env\n};\nBufferSubgraph.prototype.addReachable = function addReachable (startNode) {\n    var this$1 = this;\n\n  var nodeStack = new Stack();\n  nodeStack.add(startNode);\n  while (!nodeStack.empty()) {\n    var node = nodeStack.pop();\n    this$1.add(node, nodeStack);\n  }\n};\nBufferSubgraph.prototype.copySymDepths = function copySymDepths (de) {\n  var sym = de.getSym();\n  sym.setDepth(Position.LEFT, de.getDepth(Position.RIGHT));\n  sym.setDepth(Position.RIGHT, de.getDepth(Position.LEFT));\n};\nBufferSubgraph.prototype.add = function add (node, nodeStack) {\n    var this$1 = this;\n\n  node.setVisited(true);\n  this._nodes.add(node);\n  for (var i = node.getEdges().iterator(); i.hasNext();) {\n    var de = i.next();\n    this$1._dirEdgeList.add(de);\n    var sym = de.getSym();\n    var symNode = sym.getNode();\n    if (!symNode.isVisited()) { nodeStack.push(symNode); }\n  }\n};\nBufferSubgraph.prototype.getNodes = function getNodes () {\n  return this._nodes\n};\nBufferSubgraph.prototype.getDirectedEdges = function getDirectedEdges () {\n  return this._dirEdgeList\n};\nBufferSubgraph.prototype.interfaces_ = function interfaces_ () {\n  return [Comparable]\n};\nBufferSubgraph.prototype.getClass = function getClass () {\n  return BufferSubgraph\n};\n\nvar TopologyLocation = function TopologyLocation () {\n  var this$1 = this;\n\n  this.location = null;\n  if (arguments.length === 1) {\n    if (arguments[0] instanceof Array) {\n      var location = arguments[0];\n      this.init(location.length);\n    } else if (Number.isInteger(arguments[0])) {\n      var on = arguments[0];\n      this.init(1);\n      this.location[Position.ON] = on;\n    } else if (arguments[0] instanceof TopologyLocation) {\n      var gl = arguments[0];\n      this.init(gl.location.length);\n      if (gl !== null) {\n        for (var i = 0; i < this.location.length; i++) {\n          this$1.location[i] = gl.location[i];\n        }\n      }\n    }\n  } else if (arguments.length === 3) {\n    var on$1 = arguments[0];\n    var left = arguments[1];\n    var right = arguments[2];\n    this.init(3);\n    this.location[Position.ON] = on$1;\n    this.location[Position.LEFT] = left;\n    this.location[Position.RIGHT] = right;\n  }\n};\nTopologyLocation.prototype.setAllLocations = function setAllLocations (locValue) {\n    var this$1 = this;\n\n  for (var i = 0; i < this.location.length; i++) {\n    this$1.location[i] = locValue;\n  }\n};\nTopologyLocation.prototype.isNull = function isNull () {\n    var this$1 = this;\n\n  for (var i = 0; i < this.location.length; i++) {\n    if (this$1.location[i] !== Location.NONE) { return false }\n  }\n  return true\n};\nTopologyLocation.prototype.setAllLocationsIfNull = function setAllLocationsIfNull (locValue) {\n    var this$1 = this;\n\n  for (var i = 0; i < this.location.length; i++) {\n    if (this$1.location[i] === Location.NONE) { this$1.location[i] = locValue; }\n  }\n};\nTopologyLocation.prototype.isLine = function isLine () {\n  return this.location.length === 1\n};\nTopologyLocation.prototype.merge = function merge (gl) {\n    var this$1 = this;\n\n  if (gl.location.length > this.location.length) {\n    var newLoc = new Array(3).fill(null);\n    newLoc[Position.ON] = this.location[Position.ON];\n    newLoc[Position.LEFT] = Location.NONE;\n    newLoc[Position.RIGHT] = Location.NONE;\n    this.location = newLoc;\n  }\n  for (var i = 0; i < this.location.length; i++) {\n    if (this$1.location[i] === Location.NONE && i < gl.location.length) { this$1.location[i] = gl.location[i]; }\n  }\n};\nTopologyLocation.prototype.getLocations = function getLocations () {\n  return this.location\n};\nTopologyLocation.prototype.flip = function flip () {\n  if (this.location.length <= 1) { return null }\n  var temp = this.location[Position.LEFT];\n  this.location[Position.LEFT] = this.location[Position.RIGHT];\n  this.location[Position.RIGHT] = temp;\n};\nTopologyLocation.prototype.toString = function toString () {\n  var buf = new StringBuffer();\n  if (this.location.length > 1) { buf.append(Location.toLocationSymbol(this.location[Position.LEFT])); }\n  buf.append(Location.toLocationSymbol(this.location[Position.ON]));\n  if (this.location.length > 1) { buf.append(Location.toLocationSymbol(this.location[Position.RIGHT])); }\n  return buf.toString()\n};\nTopologyLocation.prototype.setLocations = function setLocations (on, left, right) {\n  this.location[Position.ON] = on;\n  this.location[Position.LEFT] = left;\n  this.location[Position.RIGHT] = right;\n};\nTopologyLocation.prototype.get = function get (posIndex) {\n  if (posIndex < this.location.length) { return this.location[posIndex] }\n  return Location.NONE\n};\nTopologyLocation.prototype.isArea = function isArea () {\n  return this.location.length > 1\n};\nTopologyLocation.prototype.isAnyNull = function isAnyNull () {\n    var this$1 = this;\n\n  for (var i = 0; i < this.location.length; i++) {\n    if (this$1.location[i] === Location.NONE) { return true }\n  }\n  return false\n};\nTopologyLocation.prototype.setLocation = function setLocation () {\n  if (arguments.length === 1) {\n    var locValue = arguments[0];\n    this.setLocation(Position.ON, locValue);\n  } else if (arguments.length === 2) {\n    var locIndex = arguments[0];\n    var locValue$1 = arguments[1];\n    this.location[locIndex] = locValue$1;\n  }\n};\nTopologyLocation.prototype.init = function init (size) {\n  this.location = new Array(size).fill(null);\n  this.setAllLocations(Location.NONE);\n};\nTopologyLocation.prototype.isEqualOnSide = function isEqualOnSide (le, locIndex) {\n  return this.location[locIndex] === le.location[locIndex]\n};\nTopologyLocation.prototype.allPositionsEqual = function allPositionsEqual (loc) {\n    var this$1 = this;\n\n  for (var i = 0; i < this.location.length; i++) {\n    if (this$1.location[i] !== loc) { return false }\n  }\n  return true\n};\nTopologyLocation.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nTopologyLocation.prototype.getClass = function getClass () {\n  return TopologyLocation\n};\n\nvar Label = function Label () {\n  this.elt = new Array(2).fill(null);\n  if (arguments.length === 1) {\n    if (Number.isInteger(arguments[0])) {\n      var onLoc = arguments[0];\n      this.elt[0] = new TopologyLocation(onLoc);\n      this.elt[1] = new TopologyLocation(onLoc);\n    } else if (arguments[0] instanceof Label) {\n      var lbl = arguments[0];\n      this.elt[0] = new TopologyLocation(lbl.elt[0]);\n      this.elt[1] = new TopologyLocation(lbl.elt[1]);\n    }\n  } else if (arguments.length === 2) {\n    var geomIndex = arguments[0];\n    var onLoc$1 = arguments[1];\n    this.elt[0] = new TopologyLocation(Location.NONE);\n    this.elt[1] = new TopologyLocation(Location.NONE);\n    this.elt[geomIndex].setLocation(onLoc$1);\n  } else if (arguments.length === 3) {\n    var onLoc$2 = arguments[0];\n    var leftLoc = arguments[1];\n    var rightLoc = arguments[2];\n    this.elt[0] = new TopologyLocation(onLoc$2, leftLoc, rightLoc);\n    this.elt[1] = new TopologyLocation(onLoc$2, leftLoc, rightLoc);\n  } else if (arguments.length === 4) {\n    var geomIndex$1 = arguments[0];\n    var onLoc$3 = arguments[1];\n    var leftLoc$1 = arguments[2];\n    var rightLoc$1 = arguments[3];\n    this.elt[0] = new TopologyLocation(Location.NONE, Location.NONE, Location.NONE);\n    this.elt[1] = new TopologyLocation(Location.NONE, Location.NONE, Location.NONE);\n    this.elt[geomIndex$1].setLocations(onLoc$3, leftLoc$1, rightLoc$1);\n  }\n};\nLabel.prototype.getGeometryCount = function getGeometryCount () {\n  var count = 0;\n  if (!this.elt[0].isNull()) { count++; }\n  if (!this.elt[1].isNull()) { count++; }\n  return count\n};\nLabel.prototype.setAllLocations = function setAllLocations (geomIndex, location) {\n  this.elt[geomIndex].setAllLocations(location);\n};\nLabel.prototype.isNull = function isNull (geomIndex) {\n  return this.elt[geomIndex].isNull()\n};\nLabel.prototype.setAllLocationsIfNull = function setAllLocationsIfNull () {\n  if (arguments.length === 1) {\n    var location = arguments[0];\n    this.setAllLocationsIfNull(0, location);\n    this.setAllLocationsIfNull(1, location);\n  } else if (arguments.length === 2) {\n    var geomIndex = arguments[0];\n    var location$1 = arguments[1];\n    this.elt[geomIndex].setAllLocationsIfNull(location$1);\n  }\n};\nLabel.prototype.isLine = function isLine (geomIndex) {\n  return this.elt[geomIndex].isLine()\n};\nLabel.prototype.merge = function merge (lbl) {\n    var this$1 = this;\n\n  for (var i = 0; i < 2; i++) {\n    if (this$1.elt[i] === null && lbl.elt[i] !== null) {\n      this$1.elt[i] = new TopologyLocation(lbl.elt[i]);\n    } else {\n      this$1.elt[i].merge(lbl.elt[i]);\n    }\n  }\n};\nLabel.prototype.flip = function flip () {\n  this.elt[0].flip();\n  this.elt[1].flip();\n};\nLabel.prototype.getLocation = function getLocation () {\n  if (arguments.length === 1) {\n    var geomIndex = arguments[0];\n    return this.elt[geomIndex].get(Position.ON)\n  } else if (arguments.length === 2) {\n    var geomIndex$1 = arguments[0];\n    var posIndex = arguments[1];\n    return this.elt[geomIndex$1].get(posIndex)\n  }\n};\nLabel.prototype.toString = function toString () {\n  var buf = new StringBuffer();\n  if (this.elt[0] !== null) {\n    buf.append('A:');\n    buf.append(this.elt[0].toString());\n  }\n  if (this.elt[1] !== null) {\n    buf.append(' B:');\n    buf.append(this.elt[1].toString());\n  }\n  return buf.toString()\n};\nLabel.prototype.isArea = function isArea () {\n  if (arguments.length === 0) {\n    return this.elt[0].isArea() || this.elt[1].isArea()\n  } else if (arguments.length === 1) {\n    var geomIndex = arguments[0];\n    return this.elt[geomIndex].isArea()\n  }\n};\nLabel.prototype.isAnyNull = function isAnyNull (geomIndex) {\n  return this.elt[geomIndex].isAnyNull()\n};\nLabel.prototype.setLocation = function setLocation () {\n  if (arguments.length === 2) {\n    var geomIndex = arguments[0];\n    var location = arguments[1];\n    this.elt[geomIndex].setLocation(Position.ON, location);\n  } else if (arguments.length === 3) {\n    var geomIndex$1 = arguments[0];\n    var posIndex = arguments[1];\n    var location$1 = arguments[2];\n    this.elt[geomIndex$1].setLocation(posIndex, location$1);\n  }\n};\nLabel.prototype.isEqualOnSide = function isEqualOnSide (lbl, side) {\n  return this.elt[0].isEqualOnSide(lbl.elt[0], side) && this.elt[1].isEqualOnSide(lbl.elt[1], side)\n};\nLabel.prototype.allPositionsEqual = function allPositionsEqual (geomIndex, loc) {\n  return this.elt[geomIndex].allPositionsEqual(loc)\n};\nLabel.prototype.toLine = function toLine (geomIndex) {\n  if (this.elt[geomIndex].isArea()) { this.elt[geomIndex] = new TopologyLocation(this.elt[geomIndex].location[0]); }\n};\nLabel.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nLabel.prototype.getClass = function getClass () {\n  return Label\n};\nLabel.toLineLabel = function toLineLabel (label) {\n  var lineLabel = new Label(Location.NONE);\n  for (var i = 0; i < 2; i++) {\n    lineLabel.setLocation(i, label.getLocation(i));\n  }\n  return lineLabel\n};\n\nvar EdgeRing = function EdgeRing () {\n  this._startDe = null;\n  this._maxNodeDegree = -1;\n  this._edges = new ArrayList();\n  this._pts = new ArrayList();\n  this._label = new Label(Location.NONE);\n  this._ring = null;\n  this._isHole = null;\n  this._shell = null;\n  this._holes = new ArrayList();\n  this._geometryFactory = null;\n  var start = arguments[0];\n  var geometryFactory = arguments[1];\n  this._geometryFactory = geometryFactory;\n  this.computePoints(start);\n  this.computeRing();\n};\nEdgeRing.prototype.computeRing = function computeRing () {\n    var this$1 = this;\n\n  if (this._ring !== null) { return null }\n  var coord = new Array(this._pts.size()).fill(null);\n  for (var i = 0; i < this._pts.size(); i++) {\n    coord[i] = this$1._pts.get(i);\n  }\n  this._ring = this._geometryFactory.createLinearRing(coord);\n  this._isHole = CGAlgorithms.isCCW(this._ring.getCoordinates());\n};\nEdgeRing.prototype.isIsolated = function isIsolated () {\n  return this._label.getGeometryCount() === 1\n};\nEdgeRing.prototype.computePoints = function computePoints (start) {\n    var this$1 = this;\n\n  this._startDe = start;\n  var de = start;\n  var isFirstEdge = true;\n  do {\n    if (de === null) { throw new TopologyException('Found null DirectedEdge') }\n    if (de.getEdgeRing() === this$1) { throw new TopologyException('Directed Edge visited twice during ring-building at ' + de.getCoordinate()) }\n    this$1._edges.add(de);\n    var label = de.getLabel();\n    Assert.isTrue(label.isArea());\n    this$1.mergeLabel(label);\n    this$1.addPoints(de.getEdge(), de.isForward(), isFirstEdge);\n    isFirstEdge = false;\n    this$1.setEdgeRing(de, this$1);\n    de = this$1.getNext(de);\n  } while (de !== this._startDe)\n};\nEdgeRing.prototype.getLinearRing = function getLinearRing () {\n  return this._ring\n};\nEdgeRing.prototype.getCoordinate = function getCoordinate (i) {\n  return this._pts.get(i)\n};\nEdgeRing.prototype.computeMaxNodeDegree = function computeMaxNodeDegree () {\n    var this$1 = this;\n\n  this._maxNodeDegree = 0;\n  var de = this._startDe;\n  do {\n    var node = de.getNode();\n    var degree = node.getEdges().getOutgoingDegree(this$1);\n    if (degree > this$1._maxNodeDegree) { this$1._maxNodeDegree = degree; }\n    de = this$1.getNext(de);\n  } while (de !== this._startDe)\n  this._maxNodeDegree *= 2;\n};\nEdgeRing.prototype.addPoints = function addPoints (edge, isForward, isFirstEdge) {\n    var this$1 = this;\n\n  var edgePts = edge.getCoordinates();\n  if (isForward) {\n    var startIndex = 1;\n    if (isFirstEdge) { startIndex = 0; }\n    for (var i = startIndex; i < edgePts.length; i++) {\n      this$1._pts.add(edgePts[i]);\n    }\n  } else {\n    var startIndex$1 = edgePts.length - 2;\n    if (isFirstEdge) { startIndex$1 = edgePts.length - 1; }\n    for (var i$1 = startIndex$1; i$1 >= 0; i$1--) {\n      this$1._pts.add(edgePts[i$1]);\n    }\n  }\n};\nEdgeRing.prototype.isHole = function isHole () {\n  return this._isHole\n};\nEdgeRing.prototype.setInResult = function setInResult () {\n  var de = this._startDe;\n  do {\n    de.getEdge().setInResult(true);\n    de = de.getNext();\n  } while (de !== this._startDe)\n};\nEdgeRing.prototype.containsPoint = function containsPoint (p) {\n  var shell = this.getLinearRing();\n  var env = shell.getEnvelopeInternal();\n  if (!env.contains(p)) { return false }\n  if (!CGAlgorithms.isPointInRing(p, shell.getCoordinates())) { return false }\n  for (var i = this._holes.iterator(); i.hasNext();) {\n    var hole = i.next();\n    if (hole.containsPoint(p)) { return false }\n  }\n  return true\n};\nEdgeRing.prototype.addHole = function addHole (ring) {\n  this._holes.add(ring);\n};\nEdgeRing.prototype.isShell = function isShell () {\n  return this._shell === null\n};\nEdgeRing.prototype.getLabel = function getLabel () {\n  return this._label\n};\nEdgeRing.prototype.getEdges = function getEdges () {\n  return this._edges\n};\nEdgeRing.prototype.getMaxNodeDegree = function getMaxNodeDegree () {\n  if (this._maxNodeDegree < 0) { this.computeMaxNodeDegree(); }\n  return this._maxNodeDegree\n};\nEdgeRing.prototype.getShell = function getShell () {\n  return this._shell\n};\nEdgeRing.prototype.mergeLabel = function mergeLabel () {\n  if (arguments.length === 1) {\n    var deLabel = arguments[0];\n    this.mergeLabel(deLabel, 0);\n    this.mergeLabel(deLabel, 1);\n  } else if (arguments.length === 2) {\n    var deLabel$1 = arguments[0];\n    var geomIndex = arguments[1];\n    var loc = deLabel$1.getLocation(geomIndex, Position.RIGHT);\n    if (loc === Location.NONE) { return null }\n    if (this._label.getLocation(geomIndex) === Location.NONE) {\n      this._label.setLocation(geomIndex, loc);\n      return null\n    }\n  }\n};\nEdgeRing.prototype.setShell = function setShell (shell) {\n  this._shell = shell;\n  if (shell !== null) { shell.addHole(this); }\n};\nEdgeRing.prototype.toPolygon = function toPolygon (geometryFactory) {\n    var this$1 = this;\n\n  var holeLR = new Array(this._holes.size()).fill(null);\n  for (var i = 0; i < this._holes.size(); i++) {\n    holeLR[i] = this$1._holes.get(i).getLinearRing();\n  }\n  var poly = geometryFactory.createPolygon(this.getLinearRing(), holeLR);\n  return poly\n};\nEdgeRing.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nEdgeRing.prototype.getClass = function getClass () {\n  return EdgeRing\n};\n\nvar MinimalEdgeRing = (function (EdgeRing$$1) {\n  function MinimalEdgeRing () {\n    var start = arguments[0];\n    var geometryFactory = arguments[1];\n    EdgeRing$$1.call(this, start, geometryFactory);\n  }\n\n  if ( EdgeRing$$1 ) MinimalEdgeRing.__proto__ = EdgeRing$$1;\n  MinimalEdgeRing.prototype = Object.create( EdgeRing$$1 && EdgeRing$$1.prototype );\n  MinimalEdgeRing.prototype.constructor = MinimalEdgeRing;\n  MinimalEdgeRing.prototype.setEdgeRing = function setEdgeRing (de, er) {\n    de.setMinEdgeRing(er);\n  };\n  MinimalEdgeRing.prototype.getNext = function getNext (de) {\n    return de.getNextMin()\n  };\n  MinimalEdgeRing.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  MinimalEdgeRing.prototype.getClass = function getClass () {\n    return MinimalEdgeRing\n  };\n\n  return MinimalEdgeRing;\n}(EdgeRing));\n\nvar MaximalEdgeRing = (function (EdgeRing$$1) {\n  function MaximalEdgeRing () {\n    var start = arguments[0];\n    var geometryFactory = arguments[1];\n    EdgeRing$$1.call(this, start, geometryFactory);\n  }\n\n  if ( EdgeRing$$1 ) MaximalEdgeRing.__proto__ = EdgeRing$$1;\n  MaximalEdgeRing.prototype = Object.create( EdgeRing$$1 && EdgeRing$$1.prototype );\n  MaximalEdgeRing.prototype.constructor = MaximalEdgeRing;\n  MaximalEdgeRing.prototype.buildMinimalRings = function buildMinimalRings () {\n    var this$1 = this;\n\n    var minEdgeRings = new ArrayList();\n    var de = this._startDe;\n    do {\n      if (de.getMinEdgeRing() === null) {\n        var minEr = new MinimalEdgeRing(de, this$1._geometryFactory);\n        minEdgeRings.add(minEr);\n      }\n      de = de.getNext();\n    } while (de !== this._startDe)\n    return minEdgeRings\n  };\n  MaximalEdgeRing.prototype.setEdgeRing = function setEdgeRing (de, er) {\n    de.setEdgeRing(er);\n  };\n  MaximalEdgeRing.prototype.linkDirectedEdgesForMinimalEdgeRings = function linkDirectedEdgesForMinimalEdgeRings () {\n    var this$1 = this;\n\n    var de = this._startDe;\n    do {\n      var node = de.getNode();\n      node.getEdges().linkMinimalDirectedEdges(this$1);\n      de = de.getNext();\n    } while (de !== this._startDe)\n  };\n  MaximalEdgeRing.prototype.getNext = function getNext (de) {\n    return de.getNext()\n  };\n  MaximalEdgeRing.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  MaximalEdgeRing.prototype.getClass = function getClass () {\n    return MaximalEdgeRing\n  };\n\n  return MaximalEdgeRing;\n}(EdgeRing));\n\nvar GraphComponent = function GraphComponent () {\n  this._label = null;\n  this._isInResult = false;\n  this._isCovered = false;\n  this._isCoveredSet = false;\n  this._isVisited = false;\n  if (arguments.length === 0) {} else if (arguments.length === 1) {\n    var label = arguments[0];\n    this._label = label;\n  }\n};\nGraphComponent.prototype.setVisited = function setVisited (isVisited) {\n  this._isVisited = isVisited;\n};\nGraphComponent.prototype.setInResult = function setInResult (isInResult) {\n  this._isInResult = isInResult;\n};\nGraphComponent.prototype.isCovered = function isCovered () {\n  return this._isCovered\n};\nGraphComponent.prototype.isCoveredSet = function isCoveredSet () {\n  return this._isCoveredSet\n};\nGraphComponent.prototype.setLabel = function setLabel (label) {\n  this._label = label;\n};\nGraphComponent.prototype.getLabel = function getLabel () {\n  return this._label\n};\nGraphComponent.prototype.setCovered = function setCovered (isCovered) {\n  this._isCovered = isCovered;\n  this._isCoveredSet = true;\n};\nGraphComponent.prototype.updateIM = function updateIM (im) {\n  Assert.isTrue(this._label.getGeometryCount() >= 2, 'found partial label');\n  this.computeIM(im);\n};\nGraphComponent.prototype.isInResult = function isInResult () {\n  return this._isInResult\n};\nGraphComponent.prototype.isVisited = function isVisited () {\n  return this._isVisited\n};\nGraphComponent.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nGraphComponent.prototype.getClass = function getClass () {\n  return GraphComponent\n};\n\nvar Node = (function (GraphComponent$$1) {\n  function Node () {\n    GraphComponent$$1.call(this);\n    this._coord = null;\n    this._edges = null;\n    var coord = arguments[0];\n    var edges = arguments[1];\n    this._coord = coord;\n    this._edges = edges;\n    this._label = new Label(0, Location.NONE);\n  }\n\n  if ( GraphComponent$$1 ) Node.__proto__ = GraphComponent$$1;\n  Node.prototype = Object.create( GraphComponent$$1 && GraphComponent$$1.prototype );\n  Node.prototype.constructor = Node;\n  Node.prototype.isIncidentEdgeInResult = function isIncidentEdgeInResult () {\n    for (var it = this.getEdges().getEdges().iterator(); it.hasNext();) {\n      var de = it.next();\n      if (de.getEdge().isInResult()) { return true }\n    }\n    return false\n  };\n  Node.prototype.isIsolated = function isIsolated () {\n    return this._label.getGeometryCount() === 1\n  };\n  Node.prototype.getCoordinate = function getCoordinate () {\n    return this._coord\n  };\n  Node.prototype.print = function print (out) {\n    out.println('node ' + this._coord + ' lbl: ' + this._label);\n  };\n  Node.prototype.computeIM = function computeIM (im) {};\n  Node.prototype.computeMergedLocation = function computeMergedLocation (label2, eltIndex) {\n    var loc = Location.NONE;\n    loc = this._label.getLocation(eltIndex);\n    if (!label2.isNull(eltIndex)) {\n      var nLoc = label2.getLocation(eltIndex);\n      if (loc !== Location.BOUNDARY) { loc = nLoc; }\n    }\n    return loc\n  };\n  Node.prototype.setLabel = function setLabel () {\n    if (arguments.length === 2) {\n      var argIndex = arguments[0];\n      var onLocation = arguments[1];\n      if (this._label === null) {\n        this._label = new Label(argIndex, onLocation);\n      } else { this._label.setLocation(argIndex, onLocation); }\n    } else { return GraphComponent$$1.prototype.setLabel.apply(this, arguments) }\n  };\n  Node.prototype.getEdges = function getEdges () {\n    return this._edges\n  };\n  Node.prototype.mergeLabel = function mergeLabel () {\n    var this$1 = this;\n\n    if (arguments[0] instanceof Node) {\n      var n = arguments[0];\n      this.mergeLabel(n._label);\n    } else if (arguments[0] instanceof Label) {\n      var label2 = arguments[0];\n      for (var i = 0; i < 2; i++) {\n        var loc = this$1.computeMergedLocation(label2, i);\n        var thisLoc = this$1._label.getLocation(i);\n        if (thisLoc === Location.NONE) { this$1._label.setLocation(i, loc); }\n      }\n    }\n  };\n  Node.prototype.add = function add (e) {\n    this._edges.insert(e);\n    e.setNode(this);\n  };\n  Node.prototype.setLabelBoundary = function setLabelBoundary (argIndex) {\n    if (this._label === null) { return null }\n    var loc = Location.NONE;\n    if (this._label !== null) { loc = this._label.getLocation(argIndex); }\n    var newLoc = null;\n    switch (loc) {\n      case Location.BOUNDARY:\n        newLoc = Location.INTERIOR;\n        break\n      case Location.INTERIOR:\n        newLoc = Location.BOUNDARY;\n        break\n      default:\n        newLoc = Location.BOUNDARY;\n        break\n    }\n    this._label.setLocation(argIndex, newLoc);\n  };\n  Node.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  Node.prototype.getClass = function getClass () {\n    return Node\n  };\n\n  return Node;\n}(GraphComponent));\n\nvar NodeMap = function NodeMap () {\n  this.nodeMap = new TreeMap();\n  this.nodeFact = null;\n  var nodeFact = arguments[0];\n  this.nodeFact = nodeFact;\n};\nNodeMap.prototype.find = function find (coord) {\n  return this.nodeMap.get(coord)\n};\nNodeMap.prototype.addNode = function addNode () {\n  if (arguments[0] instanceof Coordinate) {\n    var coord = arguments[0];\n    var node = this.nodeMap.get(coord);\n    if (node === null) {\n      node = this.nodeFact.createNode(coord);\n      this.nodeMap.put(coord, node);\n    }\n    return node\n  } else if (arguments[0] instanceof Node) {\n    var n = arguments[0];\n    var node$1 = this.nodeMap.get(n.getCoordinate());\n    if (node$1 === null) {\n      this.nodeMap.put(n.getCoordinate(), n);\n      return n\n    }\n    node$1.mergeLabel(n);\n    return node$1\n  }\n};\nNodeMap.prototype.print = function print (out) {\n  for (var it = this.iterator(); it.hasNext();) {\n    var n = it.next();\n    n.print(out);\n  }\n};\nNodeMap.prototype.iterator = function iterator () {\n  return this.nodeMap.values().iterator()\n};\nNodeMap.prototype.values = function values () {\n  return this.nodeMap.values()\n};\nNodeMap.prototype.getBoundaryNodes = function getBoundaryNodes (geomIndex) {\n  var bdyNodes = new ArrayList();\n  for (var i = this.iterator(); i.hasNext();) {\n    var node = i.next();\n    if (node.getLabel().getLocation(geomIndex) === Location.BOUNDARY) { bdyNodes.add(node); }\n  }\n  return bdyNodes\n};\nNodeMap.prototype.add = function add (e) {\n  var p = e.getCoordinate();\n  var n = this.addNode(p);\n  n.add(e);\n};\nNodeMap.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nNodeMap.prototype.getClass = function getClass () {\n  return NodeMap\n};\n\nvar Quadrant = function Quadrant () {};\n\nvar staticAccessors$21 = { NE: { configurable: true },NW: { configurable: true },SW: { configurable: true },SE: { configurable: true } };\n\nQuadrant.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nQuadrant.prototype.getClass = function getClass () {\n  return Quadrant\n};\nQuadrant.isNorthern = function isNorthern (quad) {\n  return quad === Quadrant.NE || quad === Quadrant.NW\n};\nQuadrant.isOpposite = function isOpposite (quad1, quad2) {\n  if (quad1 === quad2) { return false }\n  var diff = (quad1 - quad2 + 4) % 4;\n  if (diff === 2) { return true }\n  return false\n};\nQuadrant.commonHalfPlane = function commonHalfPlane (quad1, quad2) {\n  if (quad1 === quad2) { return quad1 }\n  var diff = (quad1 - quad2 + 4) % 4;\n  if (diff === 2) { return -1 }\n  var min = quad1 < quad2 ? quad1 : quad2;\n  var max = quad1 > quad2 ? quad1 : quad2;\n  if (min === 0 && max === 3) { return 3 }\n  return min\n};\nQuadrant.isInHalfPlane = function isInHalfPlane (quad, halfPlane) {\n  if (halfPlane === Quadrant.SE) {\n    return quad === Quadrant.SE || quad === Quadrant.SW\n  }\n  return quad === halfPlane || quad === halfPlane + 1\n};\nQuadrant.quadrant = function quadrant () {\n  if (typeof arguments[0] === 'number' && typeof arguments[1] === 'number') {\n    var dx = arguments[0];\n    var dy = arguments[1];\n    if (dx === 0.0 && dy === 0.0) { throw new IllegalArgumentException('Cannot compute the quadrant for point ( ' + dx + ', ' + dy + ' )') }\n    if (dx >= 0.0) {\n      if (dy >= 0.0) { return Quadrant.NE; } else { return Quadrant.SE }\n    } else {\n      if (dy >= 0.0) { return Quadrant.NW; } else { return Quadrant.SW }\n    }\n  } else if (arguments[0] instanceof Coordinate && arguments[1] instanceof Coordinate) {\n    var p0 = arguments[0];\n    var p1 = arguments[1];\n    if (p1.x === p0.x && p1.y === p0.y) { throw new IllegalArgumentException('Cannot compute the quadrant for two identical points ' + p0) }\n    if (p1.x >= p0.x) {\n      if (p1.y >= p0.y) { return Quadrant.NE; } else { return Quadrant.SE }\n    } else {\n      if (p1.y >= p0.y) { return Quadrant.NW; } else { return Quadrant.SW }\n    }\n  }\n};\nstaticAccessors$21.NE.get = function () { return 0 };\nstaticAccessors$21.NW.get = function () { return 1 };\nstaticAccessors$21.SW.get = function () { return 2 };\nstaticAccessors$21.SE.get = function () { return 3 };\n\nObject.defineProperties( Quadrant, staticAccessors$21 );\n\nvar EdgeEnd = function EdgeEnd () {\n  this._edge = null;\n  this._label = null;\n  this._node = null;\n  this._p0 = null;\n  this._p1 = null;\n  this._dx = null;\n  this._dy = null;\n  this._quadrant = null;\n  if (arguments.length === 1) {\n    var edge = arguments[0];\n    this._edge = edge;\n  } else if (arguments.length === 3) {\n    var edge$1 = arguments[0];\n    var p0 = arguments[1];\n    var p1 = arguments[2];\n    var label = null;\n    this._edge = edge$1;\n    this.init(p0, p1);\n    this._label = label;\n  } else if (arguments.length === 4) {\n    var edge$2 = arguments[0];\n    var p0$1 = arguments[1];\n    var p1$1 = arguments[2];\n    var label$1 = arguments[3];\n    this._edge = edge$2;\n    this.init(p0$1, p1$1);\n    this._label = label$1;\n  }\n};\nEdgeEnd.prototype.compareDirection = function compareDirection (e) {\n  if (this._dx === e._dx && this._dy === e._dy) { return 0 }\n  if (this._quadrant > e._quadrant) { return 1 }\n  if (this._quadrant < e._quadrant) { return -1 }\n  return CGAlgorithms.computeOrientation(e._p0, e._p1, this._p1)\n};\nEdgeEnd.prototype.getDy = function getDy () {\n  return this._dy\n};\nEdgeEnd.prototype.getCoordinate = function getCoordinate () {\n  return this._p0\n};\nEdgeEnd.prototype.setNode = function setNode (node) {\n  this._node = node;\n};\nEdgeEnd.prototype.print = function print (out) {\n  var angle = Math.atan2(this._dy, this._dx);\n  var className = this.getClass().getName();\n  var lastDotPos = className.lastIndexOf('.');\n  var name = className.substring(lastDotPos + 1);\n  out.print('  ' + name + ': ' + this._p0 + ' - ' + this._p1 + ' ' + this._quadrant + ':' + angle + '   ' + this._label);\n};\nEdgeEnd.prototype.compareTo = function compareTo (obj) {\n  var e = obj;\n  return this.compareDirection(e)\n};\nEdgeEnd.prototype.getDirectedCoordinate = function getDirectedCoordinate () {\n  return this._p1\n};\nEdgeEnd.prototype.getDx = function getDx () {\n  return this._dx\n};\nEdgeEnd.prototype.getLabel = function getLabel () {\n  return this._label\n};\nEdgeEnd.prototype.getEdge = function getEdge () {\n  return this._edge\n};\nEdgeEnd.prototype.getQuadrant = function getQuadrant () {\n  return this._quadrant\n};\nEdgeEnd.prototype.getNode = function getNode () {\n  return this._node\n};\nEdgeEnd.prototype.toString = function toString () {\n  var angle = Math.atan2(this._dy, this._dx);\n  var className = this.getClass().getName();\n  var lastDotPos = className.lastIndexOf('.');\n  var name = className.substring(lastDotPos + 1);\n  return '  ' + name + ': ' + this._p0 + ' - ' + this._p1 + ' ' + this._quadrant + ':' + angle + '   ' + this._label\n};\nEdgeEnd.prototype.computeLabel = function computeLabel (boundaryNodeRule) {};\nEdgeEnd.prototype.init = function init (p0, p1) {\n  this._p0 = p0;\n  this._p1 = p1;\n  this._dx = p1.x - p0.x;\n  this._dy = p1.y - p0.y;\n  this._quadrant = Quadrant.quadrant(this._dx, this._dy);\n  Assert.isTrue(!(this._dx === 0 && this._dy === 0), 'EdgeEnd with identical endpoints found');\n};\nEdgeEnd.prototype.interfaces_ = function interfaces_ () {\n  return [Comparable]\n};\nEdgeEnd.prototype.getClass = function getClass () {\n  return EdgeEnd\n};\n\nvar DirectedEdge = (function (EdgeEnd$$1) {\n  function DirectedEdge () {\n    var edge = arguments[0];\n    var isForward = arguments[1];\n    EdgeEnd$$1.call(this, edge);\n    this._isForward = null;\n    this._isInResult = false;\n    this._isVisited = false;\n    this._sym = null;\n    this._next = null;\n    this._nextMin = null;\n    this._edgeRing = null;\n    this._minEdgeRing = null;\n    this._depth = [0, -999, -999];\n    this._isForward = isForward;\n    if (isForward) {\n      this.init(edge.getCoordinate(0), edge.getCoordinate(1));\n    } else {\n      var n = edge.getNumPoints() - 1;\n      this.init(edge.getCoordinate(n), edge.getCoordinate(n - 1));\n    }\n    this.computeDirectedLabel();\n  }\n\n  if ( EdgeEnd$$1 ) DirectedEdge.__proto__ = EdgeEnd$$1;\n  DirectedEdge.prototype = Object.create( EdgeEnd$$1 && EdgeEnd$$1.prototype );\n  DirectedEdge.prototype.constructor = DirectedEdge;\n  DirectedEdge.prototype.getNextMin = function getNextMin () {\n    return this._nextMin\n  };\n  DirectedEdge.prototype.getDepth = function getDepth (position) {\n    return this._depth[position]\n  };\n  DirectedEdge.prototype.setVisited = function setVisited (isVisited) {\n    this._isVisited = isVisited;\n  };\n  DirectedEdge.prototype.computeDirectedLabel = function computeDirectedLabel () {\n    this._label = new Label(this._edge.getLabel());\n    if (!this._isForward) { this._label.flip(); }\n  };\n  DirectedEdge.prototype.getNext = function getNext () {\n    return this._next\n  };\n  DirectedEdge.prototype.setDepth = function setDepth (position, depthVal) {\n    if (this._depth[position] !== -999) {\n      if (this._depth[position] !== depthVal) { throw new TopologyException('assigned depths do not match', this.getCoordinate()) }\n    }\n    this._depth[position] = depthVal;\n  };\n  DirectedEdge.prototype.isInteriorAreaEdge = function isInteriorAreaEdge () {\n    var this$1 = this;\n\n    var isInteriorAreaEdge = true;\n    for (var i = 0; i < 2; i++) {\n      if (!(this$1._label.isArea(i) && this$1._label.getLocation(i, Position.LEFT) === Location.INTERIOR && this$1._label.getLocation(i, Position.RIGHT) === Location.INTERIOR)) {\n        isInteriorAreaEdge = false;\n      }\n    }\n    return isInteriorAreaEdge\n  };\n  DirectedEdge.prototype.setNextMin = function setNextMin (nextMin) {\n    this._nextMin = nextMin;\n  };\n  DirectedEdge.prototype.print = function print (out) {\n    EdgeEnd$$1.prototype.print.call(this, out);\n    out.print(' ' + this._depth[Position.LEFT] + '/' + this._depth[Position.RIGHT]);\n    out.print(' (' + this.getDepthDelta() + ')');\n    if (this._isInResult) { out.print(' inResult'); }\n  };\n  DirectedEdge.prototype.setMinEdgeRing = function setMinEdgeRing (minEdgeRing) {\n    this._minEdgeRing = minEdgeRing;\n  };\n  DirectedEdge.prototype.isLineEdge = function isLineEdge () {\n    var isLine = this._label.isLine(0) || this._label.isLine(1);\n    var isExteriorIfArea0 = !this._label.isArea(0) || this._label.allPositionsEqual(0, Location.EXTERIOR);\n    var isExteriorIfArea1 = !this._label.isArea(1) || this._label.allPositionsEqual(1, Location.EXTERIOR);\n    return isLine && isExteriorIfArea0 && isExteriorIfArea1\n  };\n  DirectedEdge.prototype.setEdgeRing = function setEdgeRing (edgeRing) {\n    this._edgeRing = edgeRing;\n  };\n  DirectedEdge.prototype.getMinEdgeRing = function getMinEdgeRing () {\n    return this._minEdgeRing\n  };\n  DirectedEdge.prototype.getDepthDelta = function getDepthDelta () {\n    var depthDelta = this._edge.getDepthDelta();\n    if (!this._isForward) { depthDelta = -depthDelta; }\n    return depthDelta\n  };\n  DirectedEdge.prototype.setInResult = function setInResult (isInResult) {\n    this._isInResult = isInResult;\n  };\n  DirectedEdge.prototype.getSym = function getSym () {\n    return this._sym\n  };\n  DirectedEdge.prototype.isForward = function isForward () {\n    return this._isForward\n  };\n  DirectedEdge.prototype.getEdge = function getEdge () {\n    return this._edge\n  };\n  DirectedEdge.prototype.printEdge = function printEdge (out) {\n    this.print(out);\n    out.print(' ');\n    if (this._isForward) { this._edge.print(out); } else { this._edge.printReverse(out); }\n  };\n  DirectedEdge.prototype.setSym = function setSym (de) {\n    this._sym = de;\n  };\n  DirectedEdge.prototype.setVisitedEdge = function setVisitedEdge (isVisited) {\n    this.setVisited(isVisited);\n    this._sym.setVisited(isVisited);\n  };\n  DirectedEdge.prototype.setEdgeDepths = function setEdgeDepths (position, depth) {\n    var depthDelta = this.getEdge().getDepthDelta();\n    if (!this._isForward) { depthDelta = -depthDelta; }\n    var directionFactor = 1;\n    if (position === Position.LEFT) { directionFactor = -1; }\n    var oppositePos = Position.opposite(position);\n    var delta = depthDelta * directionFactor;\n    var oppositeDepth = depth + delta;\n    this.setDepth(position, depth);\n    this.setDepth(oppositePos, oppositeDepth);\n  };\n  DirectedEdge.prototype.getEdgeRing = function getEdgeRing () {\n    return this._edgeRing\n  };\n  DirectedEdge.prototype.isInResult = function isInResult () {\n    return this._isInResult\n  };\n  DirectedEdge.prototype.setNext = function setNext (next) {\n    this._next = next;\n  };\n  DirectedEdge.prototype.isVisited = function isVisited () {\n    return this._isVisited\n  };\n  DirectedEdge.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  DirectedEdge.prototype.getClass = function getClass () {\n    return DirectedEdge\n  };\n  DirectedEdge.depthFactor = function depthFactor (currLocation, nextLocation) {\n    if (currLocation === Location.EXTERIOR && nextLocation === Location.INTERIOR) { return 1; } else if (currLocation === Location.INTERIOR && nextLocation === Location.EXTERIOR) { return -1 }\n    return 0\n  };\n\n  return DirectedEdge;\n}(EdgeEnd));\n\nvar NodeFactory = function NodeFactory () {};\n\nNodeFactory.prototype.createNode = function createNode (coord) {\n  return new Node(coord, null)\n};\nNodeFactory.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nNodeFactory.prototype.getClass = function getClass () {\n  return NodeFactory\n};\n\nvar PlanarGraph = function PlanarGraph () {\n  this._edges = new ArrayList();\n  this._nodes = null;\n  this._edgeEndList = new ArrayList();\n  if (arguments.length === 0) {\n    this._nodes = new NodeMap(new NodeFactory());\n  } else if (arguments.length === 1) {\n    var nodeFact = arguments[0];\n    this._nodes = new NodeMap(nodeFact);\n  }\n};\nPlanarGraph.prototype.printEdges = function printEdges (out) {\n    var this$1 = this;\n\n  out.println('Edges:');\n  for (var i = 0; i < this._edges.size(); i++) {\n    out.println('edge ' + i + ':');\n    var e = this$1._edges.get(i);\n    e.print(out);\n    e.eiList.print(out);\n  }\n};\nPlanarGraph.prototype.find = function find (coord) {\n  return this._nodes.find(coord)\n};\nPlanarGraph.prototype.addNode = function addNode () {\n  if (arguments[0] instanceof Node) {\n    var node = arguments[0];\n    return this._nodes.addNode(node)\n  } else if (arguments[0] instanceof Coordinate) {\n    var coord = arguments[0];\n    return this._nodes.addNode(coord)\n  }\n};\nPlanarGraph.prototype.getNodeIterator = function getNodeIterator () {\n  return this._nodes.iterator()\n};\nPlanarGraph.prototype.linkResultDirectedEdges = function linkResultDirectedEdges () {\n  for (var nodeit = this._nodes.iterator(); nodeit.hasNext();) {\n    var node = nodeit.next();\n    node.getEdges().linkResultDirectedEdges();\n  }\n};\nPlanarGraph.prototype.debugPrintln = function debugPrintln (o) {\n  System.out.println(o);\n};\nPlanarGraph.prototype.isBoundaryNode = function isBoundaryNode (geomIndex, coord) {\n  var node = this._nodes.find(coord);\n  if (node === null) { return false }\n  var label = node.getLabel();\n  if (label !== null && label.getLocation(geomIndex) === Location.BOUNDARY) { return true }\n  return false\n};\nPlanarGraph.prototype.linkAllDirectedEdges = function linkAllDirectedEdges () {\n  for (var nodeit = this._nodes.iterator(); nodeit.hasNext();) {\n    var node = nodeit.next();\n    node.getEdges().linkAllDirectedEdges();\n  }\n};\nPlanarGraph.prototype.matchInSameDirection = function matchInSameDirection (p0, p1, ep0, ep1) {\n  if (!p0.equals(ep0)) { return false }\n  if (CGAlgorithms.computeOrientation(p0, p1, ep1) === CGAlgorithms.COLLINEAR && Quadrant.quadrant(p0, p1) === Quadrant.quadrant(ep0, ep1)) { return true }\n  return false\n};\nPlanarGraph.prototype.getEdgeEnds = function getEdgeEnds () {\n  return this._edgeEndList\n};\nPlanarGraph.prototype.debugPrint = function debugPrint (o) {\n  System.out.print(o);\n};\nPlanarGraph.prototype.getEdgeIterator = function getEdgeIterator () {\n  return this._edges.iterator()\n};\nPlanarGraph.prototype.findEdgeInSameDirection = function findEdgeInSameDirection (p0, p1) {\n    var this$1 = this;\n\n  for (var i = 0; i < this._edges.size(); i++) {\n    var e = this$1._edges.get(i);\n    var eCoord = e.getCoordinates();\n    if (this$1.matchInSameDirection(p0, p1, eCoord[0], eCoord[1])) { return e }\n    if (this$1.matchInSameDirection(p0, p1, eCoord[eCoord.length - 1], eCoord[eCoord.length - 2])) { return e }\n  }\n  return null\n};\nPlanarGraph.prototype.insertEdge = function insertEdge (e) {\n  this._edges.add(e);\n};\nPlanarGraph.prototype.findEdgeEnd = function findEdgeEnd (e) {\n  for (var i = this.getEdgeEnds().iterator(); i.hasNext();) {\n    var ee = i.next();\n    if (ee.getEdge() === e) { return ee }\n  }\n  return null\n};\nPlanarGraph.prototype.addEdges = function addEdges (edgesToAdd) {\n    var this$1 = this;\n\n  for (var it = edgesToAdd.iterator(); it.hasNext();) {\n    var e = it.next();\n    this$1._edges.add(e);\n    var de1 = new DirectedEdge(e, true);\n    var de2 = new DirectedEdge(e, false);\n    de1.setSym(de2);\n    de2.setSym(de1);\n    this$1.add(de1);\n    this$1.add(de2);\n  }\n};\nPlanarGraph.prototype.add = function add (e) {\n  this._nodes.add(e);\n  this._edgeEndList.add(e);\n};\nPlanarGraph.prototype.getNodes = function getNodes () {\n  return this._nodes.values()\n};\nPlanarGraph.prototype.findEdge = function findEdge (p0, p1) {\n    var this$1 = this;\n\n  for (var i = 0; i < this._edges.size(); i++) {\n    var e = this$1._edges.get(i);\n    var eCoord = e.getCoordinates();\n    if (p0.equals(eCoord[0]) && p1.equals(eCoord[1])) { return e }\n  }\n  return null\n};\nPlanarGraph.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nPlanarGraph.prototype.getClass = function getClass () {\n  return PlanarGraph\n};\nPlanarGraph.linkResultDirectedEdges = function linkResultDirectedEdges (nodes) {\n  for (var nodeit = nodes.iterator(); nodeit.hasNext();) {\n    var node = nodeit.next();\n    node.getEdges().linkResultDirectedEdges();\n  }\n};\n\nvar PolygonBuilder = function PolygonBuilder () {\n  this._geometryFactory = null;\n  this._shellList = new ArrayList();\n  var geometryFactory = arguments[0];\n  this._geometryFactory = geometryFactory;\n};\nPolygonBuilder.prototype.sortShellsAndHoles = function sortShellsAndHoles (edgeRings, shellList, freeHoleList) {\n  for (var it = edgeRings.iterator(); it.hasNext();) {\n    var er = it.next();\n    if (er.isHole()) {\n      freeHoleList.add(er);\n    } else {\n      shellList.add(er);\n    }\n  }\n};\nPolygonBuilder.prototype.computePolygons = function computePolygons (shellList) {\n    var this$1 = this;\n\n  var resultPolyList = new ArrayList();\n  for (var it = shellList.iterator(); it.hasNext();) {\n    var er = it.next();\n    var poly = er.toPolygon(this$1._geometryFactory);\n    resultPolyList.add(poly);\n  }\n  return resultPolyList\n};\nPolygonBuilder.prototype.placeFreeHoles = function placeFreeHoles (shellList, freeHoleList) {\n    var this$1 = this;\n\n  for (var it = freeHoleList.iterator(); it.hasNext();) {\n    var hole = it.next();\n    if (hole.getShell() === null) {\n      var shell = this$1.findEdgeRingContaining(hole, shellList);\n      if (shell === null) { throw new TopologyException('unable to assign hole to a shell', hole.getCoordinate(0)) }\n      hole.setShell(shell);\n    }\n  }\n};\nPolygonBuilder.prototype.buildMinimalEdgeRings = function buildMinimalEdgeRings (maxEdgeRings, shellList, freeHoleList) {\n    var this$1 = this;\n\n  var edgeRings = new ArrayList();\n  for (var it = maxEdgeRings.iterator(); it.hasNext();) {\n    var er = it.next();\n    if (er.getMaxNodeDegree() > 2) {\n      er.linkDirectedEdgesForMinimalEdgeRings();\n      var minEdgeRings = er.buildMinimalRings();\n      var shell = this$1.findShell(minEdgeRings);\n      if (shell !== null) {\n        this$1.placePolygonHoles(shell, minEdgeRings);\n        shellList.add(shell);\n      } else {\n        freeHoleList.addAll(minEdgeRings);\n      }\n    } else {\n      edgeRings.add(er);\n    }\n  }\n  return edgeRings\n};\nPolygonBuilder.prototype.containsPoint = function containsPoint (p) {\n  for (var it = this._shellList.iterator(); it.hasNext();) {\n    var er = it.next();\n    if (er.containsPoint(p)) { return true }\n  }\n  return false\n};\nPolygonBuilder.prototype.buildMaximalEdgeRings = function buildMaximalEdgeRings (dirEdges) {\n    var this$1 = this;\n\n  var maxEdgeRings = new ArrayList();\n  for (var it = dirEdges.iterator(); it.hasNext();) {\n    var de = it.next();\n    if (de.isInResult() && de.getLabel().isArea()) {\n      if (de.getEdgeRing() === null) {\n        var er = new MaximalEdgeRing(de, this$1._geometryFactory);\n        maxEdgeRings.add(er);\n        er.setInResult();\n      }\n    }\n  }\n  return maxEdgeRings\n};\nPolygonBuilder.prototype.placePolygonHoles = function placePolygonHoles (shell, minEdgeRings) {\n  for (var it = minEdgeRings.iterator(); it.hasNext();) {\n    var er = it.next();\n    if (er.isHole()) {\n      er.setShell(shell);\n    }\n  }\n};\nPolygonBuilder.prototype.getPolygons = function getPolygons () {\n  var resultPolyList = this.computePolygons(this._shellList);\n  return resultPolyList\n};\nPolygonBuilder.prototype.findEdgeRingContaining = function findEdgeRingContaining (testEr, shellList) {\n  var testRing = testEr.getLinearRing();\n  var testEnv = testRing.getEnvelopeInternal();\n  var testPt = testRing.getCoordinateN(0);\n  var minShell = null;\n  var minEnv = null;\n  for (var it = shellList.iterator(); it.hasNext();) {\n    var tryShell = it.next();\n    var tryRing = tryShell.getLinearRing();\n    var tryEnv = tryRing.getEnvelopeInternal();\n    if (minShell !== null) { minEnv = minShell.getLinearRing().getEnvelopeInternal(); }\n    var isContained = false;\n    if (tryEnv.contains(testEnv) && CGAlgorithms.isPointInRing(testPt, tryRing.getCoordinates())) { isContained = true; }\n    if (isContained) {\n      if (minShell === null || minEnv.contains(tryEnv)) {\n        minShell = tryShell;\n      }\n    }\n  }\n  return minShell\n};\nPolygonBuilder.prototype.findShell = function findShell (minEdgeRings) {\n  var shellCount = 0;\n  var shell = null;\n  for (var it = minEdgeRings.iterator(); it.hasNext();) {\n    var er = it.next();\n    if (!er.isHole()) {\n      shell = er;\n      shellCount++;\n    }\n  }\n  Assert.isTrue(shellCount <= 1, 'found two shells in MinimalEdgeRing list');\n  return shell\n};\nPolygonBuilder.prototype.add = function add () {\n  if (arguments.length === 1) {\n    var graph = arguments[0];\n    this.add(graph.getEdgeEnds(), graph.getNodes());\n  } else if (arguments.length === 2) {\n    var dirEdges = arguments[0];\n    var nodes = arguments[1];\n    PlanarGraph.linkResultDirectedEdges(nodes);\n    var maxEdgeRings = this.buildMaximalEdgeRings(dirEdges);\n    var freeHoleList = new ArrayList();\n    var edgeRings = this.buildMinimalEdgeRings(maxEdgeRings, this._shellList, freeHoleList);\n    this.sortShellsAndHoles(edgeRings, this._shellList, freeHoleList);\n    this.placeFreeHoles(this._shellList, freeHoleList);\n  }\n};\nPolygonBuilder.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nPolygonBuilder.prototype.getClass = function getClass () {\n  return PolygonBuilder\n};\n\nvar Boundable = function Boundable () {};\n\nBoundable.prototype.getBounds = function getBounds () {};\nBoundable.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nBoundable.prototype.getClass = function getClass () {\n  return Boundable\n};\n\nvar ItemBoundable = function ItemBoundable () {\n  this._bounds = null;\n  this._item = null;\n  var bounds = arguments[0];\n  var item = arguments[1];\n  this._bounds = bounds;\n  this._item = item;\n};\nItemBoundable.prototype.getItem = function getItem () {\n  return this._item\n};\nItemBoundable.prototype.getBounds = function getBounds () {\n  return this._bounds\n};\nItemBoundable.prototype.interfaces_ = function interfaces_ () {\n  return [Boundable, Serializable]\n};\nItemBoundable.prototype.getClass = function getClass () {\n  return ItemBoundable\n};\n\nvar PriorityQueue = function PriorityQueue () {\n  this._size = null;\n  this._items = null;\n  this._size = 0;\n  this._items = new ArrayList();\n  this._items.add(null);\n};\nPriorityQueue.prototype.poll = function poll () {\n  if (this.isEmpty()) { return null }\n  var minItem = this._items.get(1);\n  this._items.set(1, this._items.get(this._size));\n  this._size -= 1;\n  this.reorder(1);\n  return minItem\n};\nPriorityQueue.prototype.size = function size () {\n  return this._size\n};\nPriorityQueue.prototype.reorder = function reorder (hole) {\n    var this$1 = this;\n\n  var child = null;\n  var tmp = this._items.get(hole);\n  for (; hole * 2 <= this._size; hole = child) {\n    child = hole * 2;\n    if (child !== this$1._size && this$1._items.get(child + 1).compareTo(this$1._items.get(child)) < 0) { child++; }\n    if (this$1._items.get(child).compareTo(tmp) < 0) { this$1._items.set(hole, this$1._items.get(child)); } else { break }\n  }\n  this._items.set(hole, tmp);\n};\nPriorityQueue.prototype.clear = function clear () {\n  this._size = 0;\n  this._items.clear();\n};\nPriorityQueue.prototype.isEmpty = function isEmpty () {\n  return this._size === 0\n};\nPriorityQueue.prototype.add = function add (x) {\n    var this$1 = this;\n\n  this._items.add(null);\n  this._size += 1;\n  var hole = this._size;\n  this._items.set(0, x);\n  for (; x.compareTo(this._items.get(Math.trunc(hole / 2))) < 0; hole /= 2) {\n    this$1._items.set(hole, this$1._items.get(Math.trunc(hole / 2)));\n  }\n  this._items.set(hole, x);\n};\nPriorityQueue.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nPriorityQueue.prototype.getClass = function getClass () {\n  return PriorityQueue\n};\n\nvar ItemVisitor = function ItemVisitor () {};\n\nItemVisitor.prototype.visitItem = function visitItem (item) {};\nItemVisitor.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nItemVisitor.prototype.getClass = function getClass () {\n  return ItemVisitor\n};\n\nvar SpatialIndex = function SpatialIndex () {};\n\nSpatialIndex.prototype.insert = function insert (itemEnv, item) {};\nSpatialIndex.prototype.remove = function remove (itemEnv, item) {};\nSpatialIndex.prototype.query = function query () {\n  // if (arguments.length === 1) {\n  // const searchEnv = arguments[0]\n  // } else if (arguments.length === 2) {\n  // const searchEnv = arguments[0]\n  // const visitor = arguments[1]\n  // }\n};\nSpatialIndex.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nSpatialIndex.prototype.getClass = function getClass () {\n  return SpatialIndex\n};\n\nvar AbstractNode = function AbstractNode () {\n  this._childBoundables = new ArrayList();\n  this._bounds = null;\n  this._level = null;\n  if (arguments.length === 0) {} else if (arguments.length === 1) {\n    var level = arguments[0];\n    this._level = level;\n  }\n};\n\nvar staticAccessors$22 = { serialVersionUID: { configurable: true } };\nAbstractNode.prototype.getLevel = function getLevel () {\n  return this._level\n};\nAbstractNode.prototype.size = function size () {\n  return this._childBoundables.size()\n};\nAbstractNode.prototype.getChildBoundables = function getChildBoundables () {\n  return this._childBoundables\n};\nAbstractNode.prototype.addChildBoundable = function addChildBoundable (childBoundable) {\n  Assert.isTrue(this._bounds === null);\n  this._childBoundables.add(childBoundable);\n};\nAbstractNode.prototype.isEmpty = function isEmpty () {\n  return this._childBoundables.isEmpty()\n};\nAbstractNode.prototype.getBounds = function getBounds () {\n  if (this._bounds === null) {\n    this._bounds = this.computeBounds();\n  }\n  return this._bounds\n};\nAbstractNode.prototype.interfaces_ = function interfaces_ () {\n  return [Boundable, Serializable]\n};\nAbstractNode.prototype.getClass = function getClass () {\n  return AbstractNode\n};\nstaticAccessors$22.serialVersionUID.get = function () { return 6493722185909573708 };\n\nObject.defineProperties( AbstractNode, staticAccessors$22 );\n\nvar Collections = function Collections () {};\n\nCollections.reverseOrder = function reverseOrder () {\n  return {\n    compare: function compare (a, b) {\n      return b.compareTo(a)\n    }\n  }\n};\nCollections.min = function min (l) {\n  Collections.sort(l);\n  return l.get(0)\n};\nCollections.sort = function sort (l, c) {\n  var a = l.toArray();\n  if (c) {\n    Arrays.sort(a, c);\n  } else {\n    Arrays.sort(a);\n  }\n  var i = l.iterator();\n  for (var pos = 0, alen = a.length; pos < alen; pos++) {\n    i.next();\n    i.set(a[pos]);\n  }\n};\nCollections.singletonList = function singletonList (o) {\n  var arrayList = new ArrayList();\n  arrayList.add(o);\n  return arrayList\n};\n\nvar BoundablePair = function BoundablePair () {\n  this._boundable1 = null;\n  this._boundable2 = null;\n  this._distance = null;\n  this._itemDistance = null;\n  var boundable1 = arguments[0];\n  var boundable2 = arguments[1];\n  var itemDistance = arguments[2];\n  this._boundable1 = boundable1;\n  this._boundable2 = boundable2;\n  this._itemDistance = itemDistance;\n  this._distance = this.distance();\n};\nBoundablePair.prototype.expandToQueue = function expandToQueue (priQ, minDistance) {\n  var isComp1 = BoundablePair.isComposite(this._boundable1);\n  var isComp2 = BoundablePair.isComposite(this._boundable2);\n  if (isComp1 && isComp2) {\n    if (BoundablePair.area(this._boundable1) > BoundablePair.area(this._boundable2)) {\n      this.expand(this._boundable1, this._boundable2, priQ, minDistance);\n      return null\n    } else {\n      this.expand(this._boundable2, this._boundable1, priQ, minDistance);\n      return null\n    }\n  } else if (isComp1) {\n    this.expand(this._boundable1, this._boundable2, priQ, minDistance);\n    return null\n  } else if (isComp2) {\n    this.expand(this._boundable2, this._boundable1, priQ, minDistance);\n    return null\n  }\n  throw new IllegalArgumentException('neither boundable is composite')\n};\nBoundablePair.prototype.isLeaves = function isLeaves () {\n  return !(BoundablePair.isComposite(this._boundable1) || BoundablePair.isComposite(this._boundable2))\n};\nBoundablePair.prototype.compareTo = function compareTo (o) {\n  var nd = o;\n  if (this._distance < nd._distance) { return -1 }\n  if (this._distance > nd._distance) { return 1 }\n  return 0\n};\nBoundablePair.prototype.expand = function expand (bndComposite, bndOther, priQ, minDistance) {\n    var this$1 = this;\n\n  var children = bndComposite.getChildBoundables();\n  for (var i = children.iterator(); i.hasNext();) {\n    var child = i.next();\n    var bp = new BoundablePair(child, bndOther, this$1._itemDistance);\n    if (bp.getDistance() < minDistance) {\n      priQ.add(bp);\n    }\n  }\n};\nBoundablePair.prototype.getBoundable = function getBoundable (i) {\n  if (i === 0) { return this._boundable1 }\n  return this._boundable2\n};\nBoundablePair.prototype.getDistance = function getDistance () {\n  return this._distance\n};\nBoundablePair.prototype.distance = function distance () {\n  if (this.isLeaves()) {\n    return this._itemDistance.distance(this._boundable1, this._boundable2)\n  }\n  return this._boundable1.getBounds().distance(this._boundable2.getBounds())\n};\nBoundablePair.prototype.interfaces_ = function interfaces_ () {\n  return [Comparable]\n};\nBoundablePair.prototype.getClass = function getClass () {\n  return BoundablePair\n};\nBoundablePair.area = function area (b) {\n  return b.getBounds().getArea()\n};\nBoundablePair.isComposite = function isComposite (item) {\n  return item instanceof AbstractNode\n};\n\nvar AbstractSTRtree = function AbstractSTRtree () {\n  this._root = null;\n  this._built = false;\n  this._itemBoundables = new ArrayList();\n  this._nodeCapacity = null;\n  if (arguments.length === 0) {\n    var nodeCapacity = AbstractSTRtree.DEFAULT_NODE_CAPACITY;\n    this._nodeCapacity = nodeCapacity;\n  } else if (arguments.length === 1) {\n    var nodeCapacity$1 = arguments[0];\n    Assert.isTrue(nodeCapacity$1 > 1, 'Node capacity must be greater than 1');\n    this._nodeCapacity = nodeCapacity$1;\n  }\n};\n\nvar staticAccessors$23 = { IntersectsOp: { configurable: true },serialVersionUID: { configurable: true },DEFAULT_NODE_CAPACITY: { configurable: true } };\nAbstractSTRtree.prototype.getNodeCapacity = function getNodeCapacity () {\n  return this._nodeCapacity\n};\nAbstractSTRtree.prototype.lastNode = function lastNode (nodes) {\n  return nodes.get(nodes.size() - 1)\n};\nAbstractSTRtree.prototype.size = function size () {\n    var this$1 = this;\n\n  if (arguments.length === 0) {\n    if (this.isEmpty()) {\n      return 0\n    }\n    this.build();\n    return this.size(this._root)\n  } else if (arguments.length === 1) {\n    var node = arguments[0];\n    var size = 0;\n    for (var i = node.getChildBoundables().iterator(); i.hasNext();) {\n      var childBoundable = i.next();\n      if (childBoundable instanceof AbstractNode) {\n        size += this$1.size(childBoundable);\n      } else if (childBoundable instanceof ItemBoundable) {\n        size += 1;\n      }\n    }\n    return size\n  }\n};\nAbstractSTRtree.prototype.removeItem = function removeItem (node, item) {\n  var childToRemove = null;\n  for (var i = node.getChildBoundables().iterator(); i.hasNext();) {\n    var childBoundable = i.next();\n    if (childBoundable instanceof ItemBoundable) {\n      if (childBoundable.getItem() === item) { childToRemove = childBoundable; }\n    }\n  }\n  if (childToRemove !== null) {\n    node.getChildBoundables().remove(childToRemove);\n    return true\n  }\n  return false\n};\nAbstractSTRtree.prototype.itemsTree = function itemsTree () {\n    var this$1 = this;\n\n  if (arguments.length === 0) {\n    this.build();\n    var valuesTree = this.itemsTree(this._root);\n    if (valuesTree === null) { return new ArrayList() }\n    return valuesTree\n  } else if (arguments.length === 1) {\n    var node = arguments[0];\n    var valuesTreeForNode = new ArrayList();\n    for (var i = node.getChildBoundables().iterator(); i.hasNext();) {\n      var childBoundable = i.next();\n      if (childBoundable instanceof AbstractNode) {\n        var valuesTreeForChild = this$1.itemsTree(childBoundable);\n        if (valuesTreeForChild !== null) { valuesTreeForNode.add(valuesTreeForChild); }\n      } else if (childBoundable instanceof ItemBoundable) {\n        valuesTreeForNode.add(childBoundable.getItem());\n      } else {\n        Assert.shouldNeverReachHere();\n      }\n    }\n    if (valuesTreeForNode.size() <= 0) { return null }\n    return valuesTreeForNode\n  }\n};\nAbstractSTRtree.prototype.insert = function insert (bounds, item) {\n  Assert.isTrue(!this._built, 'Cannot insert items into an STR packed R-tree after it has been built.');\n  this._itemBoundables.add(new ItemBoundable(bounds, item));\n};\nAbstractSTRtree.prototype.boundablesAtLevel = function boundablesAtLevel () {\n    var this$1 = this;\n\n  if (arguments.length === 1) {\n    var level = arguments[0];\n    var boundables = new ArrayList();\n    this.boundablesAtLevel(level, this._root, boundables);\n    return boundables\n  } else if (arguments.length === 3) {\n    var level$1 = arguments[0];\n    var top = arguments[1];\n    var boundables$1 = arguments[2];\n    Assert.isTrue(level$1 > -2);\n    if (top.getLevel() === level$1) {\n      boundables$1.add(top);\n      return null\n    }\n    for (var i = top.getChildBoundables().iterator(); i.hasNext();) {\n      var boundable = i.next();\n      if (boundable instanceof AbstractNode) {\n        this$1.boundablesAtLevel(level$1, boundable, boundables$1);\n      } else {\n        Assert.isTrue(boundable instanceof ItemBoundable);\n        if (level$1 === -1) {\n          boundables$1.add(boundable);\n        }\n      }\n    }\n    return null\n  }\n};\nAbstractSTRtree.prototype.query = function query () {\n    var this$1 = this;\n\n  if (arguments.length === 1) {\n    var searchBounds = arguments[0];\n    this.build();\n    var matches = new ArrayList();\n    if (this.isEmpty()) {\n      return matches\n    }\n    if (this.getIntersectsOp().intersects(this._root.getBounds(), searchBounds)) {\n      this.query(searchBounds, this._root, matches);\n    }\n    return matches\n  } else if (arguments.length === 2) {\n    var searchBounds$1 = arguments[0];\n    var visitor = arguments[1];\n    this.build();\n    if (this.isEmpty()) {\n      return null\n    }\n    if (this.getIntersectsOp().intersects(this._root.getBounds(), searchBounds$1)) {\n      this.query(searchBounds$1, this._root, visitor);\n    }\n  } else if (arguments.length === 3) {\n    if (hasInterface(arguments[2], ItemVisitor) && (arguments[0] instanceof Object && arguments[1] instanceof AbstractNode)) {\n      var searchBounds$2 = arguments[0];\n      var node = arguments[1];\n      var visitor$1 = arguments[2];\n      var childBoundables = node.getChildBoundables();\n      for (var i = 0; i < childBoundables.size(); i++) {\n        var childBoundable = childBoundables.get(i);\n        if (!this$1.getIntersectsOp().intersects(childBoundable.getBounds(), searchBounds$2)) {\n          continue\n        }\n        if (childBoundable instanceof AbstractNode) {\n          this$1.query(searchBounds$2, childBoundable, visitor$1);\n        } else if (childBoundable instanceof ItemBoundable) {\n          visitor$1.visitItem(childBoundable.getItem());\n        } else {\n          Assert.shouldNeverReachHere();\n        }\n      }\n    } else if (hasInterface(arguments[2], List) && (arguments[0] instanceof Object && arguments[1] instanceof AbstractNode)) {\n      var searchBounds$3 = arguments[0];\n      var node$1 = arguments[1];\n      var matches$1 = arguments[2];\n      var childBoundables$1 = node$1.getChildBoundables();\n      for (var i$1 = 0; i$1 < childBoundables$1.size(); i$1++) {\n        var childBoundable$1 = childBoundables$1.get(i$1);\n        if (!this$1.getIntersectsOp().intersects(childBoundable$1.getBounds(), searchBounds$3)) {\n          continue\n        }\n        if (childBoundable$1 instanceof AbstractNode) {\n          this$1.query(searchBounds$3, childBoundable$1, matches$1);\n        } else if (childBoundable$1 instanceof ItemBoundable) {\n          matches$1.add(childBoundable$1.getItem());\n        } else {\n          Assert.shouldNeverReachHere();\n        }\n      }\n    }\n  }\n};\nAbstractSTRtree.prototype.build = function build () {\n  if (this._built) { return null }\n  this._root = this._itemBoundables.isEmpty() ? this.createNode(0) : this.createHigherLevels(this._itemBoundables, -1);\n  this._itemBoundables = null;\n  this._built = true;\n};\nAbstractSTRtree.prototype.getRoot = function getRoot () {\n  this.build();\n  return this._root\n};\nAbstractSTRtree.prototype.remove = function remove () {\n    var this$1 = this;\n\n  if (arguments.length === 2) {\n    var searchBounds = arguments[0];\n    var item = arguments[1];\n    this.build();\n    if (this.getIntersectsOp().intersects(this._root.getBounds(), searchBounds)) {\n      return this.remove(searchBounds, this._root, item)\n    }\n    return false\n  } else if (arguments.length === 3) {\n    var searchBounds$1 = arguments[0];\n    var node = arguments[1];\n    var item$1 = arguments[2];\n    var found = this.removeItem(node, item$1);\n    if (found) { return true }\n    var childToPrune = null;\n    for (var i = node.getChildBoundables().iterator(); i.hasNext();) {\n      var childBoundable = i.next();\n      if (!this$1.getIntersectsOp().intersects(childBoundable.getBounds(), searchBounds$1)) {\n        continue\n      }\n      if (childBoundable instanceof AbstractNode) {\n        found = this$1.remove(searchBounds$1, childBoundable, item$1);\n        if (found) {\n          childToPrune = childBoundable;\n          break\n        }\n      }\n    }\n    if (childToPrune !== null) {\n      if (childToPrune.getChildBoundables().isEmpty()) {\n        node.getChildBoundables().remove(childToPrune);\n      }\n    }\n    return found\n  }\n};\nAbstractSTRtree.prototype.createHigherLevels = function createHigherLevels (boundablesOfALevel, level) {\n  Assert.isTrue(!boundablesOfALevel.isEmpty());\n  var parentBoundables = this.createParentBoundables(boundablesOfALevel, level + 1);\n  if (parentBoundables.size() === 1) {\n    return parentBoundables.get(0)\n  }\n  return this.createHigherLevels(parentBoundables, level + 1)\n};\nAbstractSTRtree.prototype.depth = function depth () {\n    var this$1 = this;\n\n  if (arguments.length === 0) {\n    if (this.isEmpty()) {\n      return 0\n    }\n    this.build();\n    return this.depth(this._root)\n  } else if (arguments.length === 1) {\n    var node = arguments[0];\n    var maxChildDepth = 0;\n    for (var i = node.getChildBoundables().iterator(); i.hasNext();) {\n      var childBoundable = i.next();\n      if (childBoundable instanceof AbstractNode) {\n        var childDepth = this$1.depth(childBoundable);\n        if (childDepth > maxChildDepth) { maxChildDepth = childDepth; }\n      }\n    }\n    return maxChildDepth + 1\n  }\n};\nAbstractSTRtree.prototype.createParentBoundables = function createParentBoundables (childBoundables, newLevel) {\n    var this$1 = this;\n\n  Assert.isTrue(!childBoundables.isEmpty());\n  var parentBoundables = new ArrayList();\n  parentBoundables.add(this.createNode(newLevel));\n  var sortedChildBoundables = new ArrayList(childBoundables);\n  Collections.sort(sortedChildBoundables, this.getComparator());\n  for (var i = sortedChildBoundables.iterator(); i.hasNext();) {\n    var childBoundable = i.next();\n    if (this$1.lastNode(parentBoundables).getChildBoundables().size() === this$1.getNodeCapacity()) {\n      parentBoundables.add(this$1.createNode(newLevel));\n    }\n    this$1.lastNode(parentBoundables).addChildBoundable(childBoundable);\n  }\n  return parentBoundables\n};\nAbstractSTRtree.prototype.isEmpty = function isEmpty () {\n  if (!this._built) { return this._itemBoundables.isEmpty() }\n  return this._root.isEmpty()\n};\nAbstractSTRtree.prototype.interfaces_ = function interfaces_ () {\n  return [Serializable]\n};\nAbstractSTRtree.prototype.getClass = function getClass () {\n  return AbstractSTRtree\n};\nAbstractSTRtree.compareDoubles = function compareDoubles (a, b) {\n  return a > b ? 1 : a < b ? -1 : 0\n};\nstaticAccessors$23.IntersectsOp.get = function () { return IntersectsOp };\nstaticAccessors$23.serialVersionUID.get = function () { return -3886435814360241337 };\nstaticAccessors$23.DEFAULT_NODE_CAPACITY.get = function () { return 10 };\n\nObject.defineProperties( AbstractSTRtree, staticAccessors$23 );\n\nvar IntersectsOp = function IntersectsOp () {};\n\nvar ItemDistance = function ItemDistance () {};\n\nItemDistance.prototype.distance = function distance (item1, item2) {};\nItemDistance.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nItemDistance.prototype.getClass = function getClass () {\n  return ItemDistance\n};\n\nvar STRtree = (function (AbstractSTRtree$$1) {\n  function STRtree (nodeCapacity) {\n    nodeCapacity = nodeCapacity || STRtree.DEFAULT_NODE_CAPACITY;\n    AbstractSTRtree$$1.call(this, nodeCapacity);\n  }\n\n  if ( AbstractSTRtree$$1 ) STRtree.__proto__ = AbstractSTRtree$$1;\n  STRtree.prototype = Object.create( AbstractSTRtree$$1 && AbstractSTRtree$$1.prototype );\n  STRtree.prototype.constructor = STRtree;\n\n  var staticAccessors = { STRtreeNode: { configurable: true },serialVersionUID: { configurable: true },xComparator: { configurable: true },yComparator: { configurable: true },intersectsOp: { configurable: true },DEFAULT_NODE_CAPACITY: { configurable: true } };\n  STRtree.prototype.createParentBoundablesFromVerticalSlices = function createParentBoundablesFromVerticalSlices (verticalSlices, newLevel) {\n    var this$1 = this;\n\n    Assert.isTrue(verticalSlices.length > 0);\n    var parentBoundables = new ArrayList();\n    for (var i = 0; i < verticalSlices.length; i++) {\n      parentBoundables.addAll(this$1.createParentBoundablesFromVerticalSlice(verticalSlices[i], newLevel));\n    }\n    return parentBoundables\n  };\n  STRtree.prototype.createNode = function createNode (level) {\n    return new STRtreeNode(level)\n  };\n  STRtree.prototype.size = function size () {\n    if (arguments.length === 0) {\n      return AbstractSTRtree$$1.prototype.size.call(this)\n    } else { return AbstractSTRtree$$1.prototype.size.apply(this, arguments) }\n  };\n  STRtree.prototype.insert = function insert () {\n    if (arguments.length === 2) {\n      var itemEnv = arguments[0];\n      var item = arguments[1];\n      if (itemEnv.isNull()) {\n        return null\n      }\n      AbstractSTRtree$$1.prototype.insert.call(this, itemEnv, item);\n    } else { return AbstractSTRtree$$1.prototype.insert.apply(this, arguments) }\n  };\n  STRtree.prototype.getIntersectsOp = function getIntersectsOp () {\n    return STRtree.intersectsOp\n  };\n  STRtree.prototype.verticalSlices = function verticalSlices (childBoundables, sliceCount) {\n    var sliceCapacity = Math.trunc(Math.ceil(childBoundables.size() / sliceCount));\n    var slices = new Array(sliceCount).fill(null);\n    var i = childBoundables.iterator();\n    for (var j = 0; j < sliceCount; j++) {\n      slices[j] = new ArrayList();\n      var boundablesAddedToSlice = 0;\n      while (i.hasNext() && boundablesAddedToSlice < sliceCapacity) {\n        var childBoundable = i.next();\n        slices[j].add(childBoundable);\n        boundablesAddedToSlice++;\n      }\n    }\n    return slices\n  };\n  STRtree.prototype.query = function query () {\n    if (arguments.length === 1) {\n      var searchEnv = arguments[0];\n      return AbstractSTRtree$$1.prototype.query.call(this, searchEnv)\n    } else if (arguments.length === 2) {\n      var searchEnv$1 = arguments[0];\n      var visitor = arguments[1];\n      AbstractSTRtree$$1.prototype.query.call(this, searchEnv$1, visitor);\n    } else if (arguments.length === 3) {\n      if (hasInterface(arguments[2], ItemVisitor) && (arguments[0] instanceof Object && arguments[1] instanceof AbstractNode)) {\n        var searchBounds = arguments[0];\n        var node = arguments[1];\n        var visitor$1 = arguments[2];\n        AbstractSTRtree$$1.prototype.query.call(this, searchBounds, node, visitor$1);\n      } else if (hasInterface(arguments[2], List) && (arguments[0] instanceof Object && arguments[1] instanceof AbstractNode)) {\n        var searchBounds$1 = arguments[0];\n        var node$1 = arguments[1];\n        var matches = arguments[2];\n        AbstractSTRtree$$1.prototype.query.call(this, searchBounds$1, node$1, matches);\n      }\n    }\n  };\n  STRtree.prototype.getComparator = function getComparator () {\n    return STRtree.yComparator\n  };\n  STRtree.prototype.createParentBoundablesFromVerticalSlice = function createParentBoundablesFromVerticalSlice (childBoundables, newLevel) {\n    return AbstractSTRtree$$1.prototype.createParentBoundables.call(this, childBoundables, newLevel)\n  };\n  STRtree.prototype.remove = function remove () {\n    if (arguments.length === 2) {\n      var itemEnv = arguments[0];\n      var item = arguments[1];\n      return AbstractSTRtree$$1.prototype.remove.call(this, itemEnv, item)\n    } else { return AbstractSTRtree$$1.prototype.remove.apply(this, arguments) }\n  };\n  STRtree.prototype.depth = function depth () {\n    if (arguments.length === 0) {\n      return AbstractSTRtree$$1.prototype.depth.call(this)\n    } else { return AbstractSTRtree$$1.prototype.depth.apply(this, arguments) }\n  };\n  STRtree.prototype.createParentBoundables = function createParentBoundables (childBoundables, newLevel) {\n    Assert.isTrue(!childBoundables.isEmpty());\n    var minLeafCount = Math.trunc(Math.ceil(childBoundables.size() / this.getNodeCapacity()));\n    var sortedChildBoundables = new ArrayList(childBoundables);\n    Collections.sort(sortedChildBoundables, STRtree.xComparator);\n    var verticalSlices = this.verticalSlices(sortedChildBoundables, Math.trunc(Math.ceil(Math.sqrt(minLeafCount))));\n    return this.createParentBoundablesFromVerticalSlices(verticalSlices, newLevel)\n  };\n  STRtree.prototype.nearestNeighbour = function nearestNeighbour () {\n    if (arguments.length === 1) {\n      if (hasInterface(arguments[0], ItemDistance)) {\n        var itemDist = arguments[0];\n        var bp = new BoundablePair(this.getRoot(), this.getRoot(), itemDist);\n        return this.nearestNeighbour(bp)\n      } else if (arguments[0] instanceof BoundablePair) {\n        var initBndPair = arguments[0];\n        return this.nearestNeighbour(initBndPair, Double.POSITIVE_INFINITY)\n      }\n    } else if (arguments.length === 2) {\n      if (arguments[0] instanceof STRtree && hasInterface(arguments[1], ItemDistance)) {\n        var tree = arguments[0];\n        var itemDist$1 = arguments[1];\n        var bp$1 = new BoundablePair(this.getRoot(), tree.getRoot(), itemDist$1);\n        return this.nearestNeighbour(bp$1)\n      } else if (arguments[0] instanceof BoundablePair && typeof arguments[1] === 'number') {\n        var initBndPair$1 = arguments[0];\n        var maxDistance = arguments[1];\n        var distanceLowerBound = maxDistance;\n        var minPair = null;\n        var priQ = new PriorityQueue();\n        priQ.add(initBndPair$1);\n        while (!priQ.isEmpty() && distanceLowerBound > 0.0) {\n          var bndPair = priQ.poll();\n          var currentDistance = bndPair.getDistance();\n          if (currentDistance >= distanceLowerBound) { break }\n          if (bndPair.isLeaves()) {\n            distanceLowerBound = currentDistance;\n            minPair = bndPair;\n          } else {\n            bndPair.expandToQueue(priQ, distanceLowerBound);\n          }\n        }\n        return [minPair.getBoundable(0).getItem(), minPair.getBoundable(1).getItem()]\n      }\n    } else if (arguments.length === 3) {\n      var env = arguments[0];\n      var item = arguments[1];\n      var itemDist$2 = arguments[2];\n      var bnd = new ItemBoundable(env, item);\n      var bp$2 = new BoundablePair(this.getRoot(), bnd, itemDist$2);\n      return this.nearestNeighbour(bp$2)[0]\n    }\n  };\n  STRtree.prototype.interfaces_ = function interfaces_ () {\n    return [SpatialIndex, Serializable]\n  };\n  STRtree.prototype.getClass = function getClass () {\n    return STRtree\n  };\n  STRtree.centreX = function centreX (e) {\n    return STRtree.avg(e.getMinX(), e.getMaxX())\n  };\n  STRtree.avg = function avg (a, b) {\n    return (a + b) / 2\n  };\n  STRtree.centreY = function centreY (e) {\n    return STRtree.avg(e.getMinY(), e.getMaxY())\n  };\n  staticAccessors.STRtreeNode.get = function () { return STRtreeNode };\n  staticAccessors.serialVersionUID.get = function () { return 259274702368956900 };\n  staticAccessors.xComparator.get = function () {\n    return {\n      interfaces_: function () {\n        return [Comparator]\n      },\n      compare: function (o1, o2) {\n        return AbstractSTRtree$$1.compareDoubles(STRtree.centreX(o1.getBounds()), STRtree.centreX(o2.getBounds()))\n      }\n    }\n  };\n  staticAccessors.yComparator.get = function () {\n    return {\n      interfaces_: function () {\n        return [Comparator]\n      },\n      compare: function (o1, o2) {\n        return AbstractSTRtree$$1.compareDoubles(STRtree.centreY(o1.getBounds()), STRtree.centreY(o2.getBounds()))\n      }\n    }\n  };\n  staticAccessors.intersectsOp.get = function () {\n    return {\n      interfaces_: function () {\n        return [AbstractSTRtree$$1.IntersectsOp]\n      },\n      intersects: function (aBounds, bBounds) {\n        return aBounds.intersects(bBounds)\n      }\n    }\n  };\n  staticAccessors.DEFAULT_NODE_CAPACITY.get = function () { return 10 };\n\n  Object.defineProperties( STRtree, staticAccessors );\n\n  return STRtree;\n}(AbstractSTRtree));\n\nvar STRtreeNode = (function (AbstractNode$$1) {\n  function STRtreeNode () {\n    var level = arguments[0];\n    AbstractNode$$1.call(this, level);\n  }\n\n  if ( AbstractNode$$1 ) STRtreeNode.__proto__ = AbstractNode$$1;\n  STRtreeNode.prototype = Object.create( AbstractNode$$1 && AbstractNode$$1.prototype );\n  STRtreeNode.prototype.constructor = STRtreeNode;\n  STRtreeNode.prototype.computeBounds = function computeBounds () {\n    var bounds = null;\n    for (var i = this.getChildBoundables().iterator(); i.hasNext();) {\n      var childBoundable = i.next();\n      if (bounds === null) {\n        bounds = new Envelope(childBoundable.getBounds());\n      } else {\n        bounds.expandToInclude(childBoundable.getBounds());\n      }\n    }\n    return bounds\n  };\n  STRtreeNode.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  STRtreeNode.prototype.getClass = function getClass () {\n    return STRtreeNode\n  };\n\n  return STRtreeNode;\n}(AbstractNode));\n\nvar SegmentPointComparator = function SegmentPointComparator () {};\n\nSegmentPointComparator.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nSegmentPointComparator.prototype.getClass = function getClass () {\n  return SegmentPointComparator\n};\nSegmentPointComparator.relativeSign = function relativeSign (x0, x1) {\n  if (x0 < x1) { return -1 }\n  if (x0 > x1) { return 1 }\n  return 0\n};\nSegmentPointComparator.compare = function compare (octant, p0, p1) {\n  if (p0.equals2D(p1)) { return 0 }\n  var xSign = SegmentPointComparator.relativeSign(p0.x, p1.x);\n  var ySign = SegmentPointComparator.relativeSign(p0.y, p1.y);\n  switch (octant) {\n    case 0:\n      return SegmentPointComparator.compareValue(xSign, ySign)\n    case 1:\n      return SegmentPointComparator.compareValue(ySign, xSign)\n    case 2:\n      return SegmentPointComparator.compareValue(ySign, -xSign)\n    case 3:\n      return SegmentPointComparator.compareValue(-xSign, ySign)\n    case 4:\n      return SegmentPointComparator.compareValue(-xSign, -ySign)\n    case 5:\n      return SegmentPointComparator.compareValue(-ySign, -xSign)\n    case 6:\n      return SegmentPointComparator.compareValue(-ySign, xSign)\n    case 7:\n      return SegmentPointComparator.compareValue(xSign, -ySign)\n    default:\n  }\n  Assert.shouldNeverReachHere('invalid octant value');\n  return 0\n};\nSegmentPointComparator.compareValue = function compareValue (compareSign0, compareSign1) {\n  if (compareSign0 < 0) { return -1 }\n  if (compareSign0 > 0) { return 1 }\n  if (compareSign1 < 0) { return -1 }\n  if (compareSign1 > 0) { return 1 }\n  return 0\n};\n\nvar SegmentNode = function SegmentNode () {\n  this._segString = null;\n  this.coord = null;\n  this.segmentIndex = null;\n  this._segmentOctant = null;\n  this._isInterior = null;\n  var segString = arguments[0];\n  var coord = arguments[1];\n  var segmentIndex = arguments[2];\n  var segmentOctant = arguments[3];\n  this._segString = segString;\n  this.coord = new Coordinate(coord);\n  this.segmentIndex = segmentIndex;\n  this._segmentOctant = segmentOctant;\n  this._isInterior = !coord.equals2D(segString.getCoordinate(segmentIndex));\n};\nSegmentNode.prototype.getCoordinate = function getCoordinate () {\n  return this.coord\n};\nSegmentNode.prototype.print = function print (out) {\n  out.print(this.coord);\n  out.print(' seg # = ' + this.segmentIndex);\n};\nSegmentNode.prototype.compareTo = function compareTo (obj) {\n  var other = obj;\n  if (this.segmentIndex < other.segmentIndex) { return -1 }\n  if (this.segmentIndex > other.segmentIndex) { return 1 }\n  if (this.coord.equals2D(other.coord)) { return 0 }\n  return SegmentPointComparator.compare(this._segmentOctant, this.coord, other.coord)\n};\nSegmentNode.prototype.isEndPoint = function isEndPoint (maxSegmentIndex) {\n  if (this.segmentIndex === 0 && !this._isInterior) { return true }\n  if (this.segmentIndex === maxSegmentIndex) { return true }\n  return false\n};\nSegmentNode.prototype.isInterior = function isInterior () {\n  return this._isInterior\n};\nSegmentNode.prototype.interfaces_ = function interfaces_ () {\n  return [Comparable]\n};\nSegmentNode.prototype.getClass = function getClass () {\n  return SegmentNode\n};\n\n// import Iterator from '../../../../java/util/Iterator'\nvar SegmentNodeList = function SegmentNodeList () {\n  this._nodeMap = new TreeMap();\n  this._edge = null;\n  var edge = arguments[0];\n  this._edge = edge;\n};\nSegmentNodeList.prototype.getSplitCoordinates = function getSplitCoordinates () {\n    var this$1 = this;\n\n  var coordList = new CoordinateList();\n  this.addEndpoints();\n  var it = this.iterator();\n  var eiPrev = it.next();\n  while (it.hasNext()) {\n    var ei = it.next();\n    this$1.addEdgeCoordinates(eiPrev, ei, coordList);\n    eiPrev = ei;\n  }\n  return coordList.toCoordinateArray()\n};\nSegmentNodeList.prototype.addCollapsedNodes = function addCollapsedNodes () {\n    var this$1 = this;\n\n  var collapsedVertexIndexes = new ArrayList();\n  this.findCollapsesFromInsertedNodes(collapsedVertexIndexes);\n  this.findCollapsesFromExistingVertices(collapsedVertexIndexes);\n  for (var it = collapsedVertexIndexes.iterator(); it.hasNext();) {\n    var vertexIndex = it.next().intValue();\n    this$1.add(this$1._edge.getCoordinate(vertexIndex), vertexIndex);\n  }\n};\nSegmentNodeList.prototype.print = function print (out) {\n  out.println('Intersections:');\n  for (var it = this.iterator(); it.hasNext();) {\n    var ei = it.next();\n    ei.print(out);\n  }\n};\nSegmentNodeList.prototype.findCollapsesFromExistingVertices = function findCollapsesFromExistingVertices (collapsedVertexIndexes) {\n    var this$1 = this;\n\n  for (var i = 0; i < this._edge.size() - 2; i++) {\n    var p0 = this$1._edge.getCoordinate(i);\n    // const p1 = this._edge.getCoordinate(i + 1)\n    var p2 = this$1._edge.getCoordinate(i + 2);\n    if (p0.equals2D(p2)) {\n      collapsedVertexIndexes.add(new Integer(i + 1));\n    }\n  }\n};\nSegmentNodeList.prototype.addEdgeCoordinates = function addEdgeCoordinates (ei0, ei1, coordList) {\n    var this$1 = this;\n\n  // let npts = ei1.segmentIndex - ei0.segmentIndex + 2\n  var lastSegStartPt = this._edge.getCoordinate(ei1.segmentIndex);\n  var useIntPt1 = ei1.isInterior() || !ei1.coord.equals2D(lastSegStartPt);\n  // if (!useIntPt1) {\n  // npts--\n  // }\n  // const ipt = 0\n  coordList.add(new Coordinate(ei0.coord), false);\n  for (var i = ei0.segmentIndex + 1; i <= ei1.segmentIndex; i++) {\n    coordList.add(this$1._edge.getCoordinate(i));\n  }\n  if (useIntPt1) {\n    coordList.add(new Coordinate(ei1.coord));\n  }\n};\nSegmentNodeList.prototype.iterator = function iterator () {\n  return this._nodeMap.values().iterator()\n};\nSegmentNodeList.prototype.addSplitEdges = function addSplitEdges (edgeList) {\n    var this$1 = this;\n\n  this.addEndpoints();\n  this.addCollapsedNodes();\n  var it = this.iterator();\n  var eiPrev = it.next();\n  while (it.hasNext()) {\n    var ei = it.next();\n    var newEdge = this$1.createSplitEdge(eiPrev, ei);\n    edgeList.add(newEdge);\n    eiPrev = ei;\n  }\n};\nSegmentNodeList.prototype.findCollapseIndex = function findCollapseIndex (ei0, ei1, collapsedVertexIndex) {\n  if (!ei0.coord.equals2D(ei1.coord)) { return false }\n  var numVerticesBetween = ei1.segmentIndex - ei0.segmentIndex;\n  if (!ei1.isInterior()) {\n    numVerticesBetween--;\n  }\n  if (numVerticesBetween === 1) {\n    collapsedVertexIndex[0] = ei0.segmentIndex + 1;\n    return true\n  }\n  return false\n};\nSegmentNodeList.prototype.findCollapsesFromInsertedNodes = function findCollapsesFromInsertedNodes (collapsedVertexIndexes) {\n    var this$1 = this;\n\n  var collapsedVertexIndex = new Array(1).fill(null);\n  var it = this.iterator();\n  var eiPrev = it.next();\n  while (it.hasNext()) {\n    var ei = it.next();\n    var isCollapsed = this$1.findCollapseIndex(eiPrev, ei, collapsedVertexIndex);\n    if (isCollapsed) { collapsedVertexIndexes.add(new Integer(collapsedVertexIndex[0])); }\n    eiPrev = ei;\n  }\n};\nSegmentNodeList.prototype.getEdge = function getEdge () {\n  return this._edge\n};\nSegmentNodeList.prototype.addEndpoints = function addEndpoints () {\n  var maxSegIndex = this._edge.size() - 1;\n  this.add(this._edge.getCoordinate(0), 0);\n  this.add(this._edge.getCoordinate(maxSegIndex), maxSegIndex);\n};\nSegmentNodeList.prototype.createSplitEdge = function createSplitEdge (ei0, ei1) {\n    var this$1 = this;\n\n  var npts = ei1.segmentIndex - ei0.segmentIndex + 2;\n  var lastSegStartPt = this._edge.getCoordinate(ei1.segmentIndex);\n  var useIntPt1 = ei1.isInterior() || !ei1.coord.equals2D(lastSegStartPt);\n  if (!useIntPt1) {\n    npts--;\n  }\n  var pts = new Array(npts).fill(null);\n  var ipt = 0;\n  pts[ipt++] = new Coordinate(ei0.coord);\n  for (var i = ei0.segmentIndex + 1; i <= ei1.segmentIndex; i++) {\n    pts[ipt++] = this$1._edge.getCoordinate(i);\n  }\n  if (useIntPt1) { pts[ipt] = new Coordinate(ei1.coord); }\n  return new NodedSegmentString(pts, this._edge.getData())\n};\nSegmentNodeList.prototype.add = function add (intPt, segmentIndex) {\n  var eiNew = new SegmentNode(this._edge, intPt, segmentIndex, this._edge.getSegmentOctant(segmentIndex));\n  var ei = this._nodeMap.get(eiNew);\n  if (ei !== null) {\n    Assert.isTrue(ei.coord.equals2D(intPt), 'Found equal nodes with different coordinates');\n    return ei\n  }\n  this._nodeMap.put(eiNew, eiNew);\n  return eiNew\n};\nSegmentNodeList.prototype.checkSplitEdgesCorrectness = function checkSplitEdgesCorrectness (splitEdges) {\n  var edgePts = this._edge.getCoordinates();\n  var split0 = splitEdges.get(0);\n  var pt0 = split0.getCoordinate(0);\n  if (!pt0.equals2D(edgePts[0])) { throw new RuntimeException('bad split edge start point at ' + pt0) }\n  var splitn = splitEdges.get(splitEdges.size() - 1);\n  var splitnPts = splitn.getCoordinates();\n  var ptn = splitnPts[splitnPts.length - 1];\n  if (!ptn.equals2D(edgePts[edgePts.length - 1])) { throw new RuntimeException('bad split edge end point at ' + ptn) }\n};\nSegmentNodeList.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nSegmentNodeList.prototype.getClass = function getClass () {\n  return SegmentNodeList\n};\n\n\n\n// class NodeVertexIterator {\n//   constructor () {\n//     this._nodeList = null\n//     this._edge = null\n//     this._nodeIt = null\n//     this._currNode = null\n//     this._nextNode = null\n//     this._currSegIndex = 0\n//     let nodeList = arguments[0]\n//     this._nodeList = nodeList\n//     this._edge = nodeList.getEdge()\n//     this._nodeIt = nodeList.iterator()\n//     this.readNextNode()\n//   }\n//   next () {\n//     if (this._currNode === null) {\n//       this._currNode = this._nextNode\n//       this._currSegIndex = this._currNode.segmentIndex\n//       this.readNextNode()\n//       return this._currNode\n//     }\n//     if (this._nextNode === null) return null\n//     if (this._nextNode.segmentIndex === this._currNode.segmentIndex) {\n//       this._currNode = this._nextNode\n//       this._currSegIndex = this._currNode.segmentIndex\n//       this.readNextNode()\n//       return this._currNode\n//     }\n//     if (this._nextNode.segmentIndex > this._currNode.segmentIndex) {}\n//     return null\n//   }\n//   remove () {\n//     // throw new UnsupportedOperationException(this.getClass().getName())\n//   }\n//   hasNext () {\n//     if (this._nextNode === null) return false\n//     return true\n//   }\n//   readNextNode () {\n//     if (this._nodeIt.hasNext()) this._nextNode = this._nodeIt.next(); else this._nextNode = null\n//   }\n//   interfaces_ () {\n//     return [Iterator]\n//   }\n//   getClass () {\n//     return NodeVertexIterator\n//   }\n// }\n\nvar Octant = function Octant () {};\n\nOctant.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nOctant.prototype.getClass = function getClass () {\n  return Octant\n};\nOctant.octant = function octant () {\n  if (typeof arguments[0] === 'number' && typeof arguments[1] === 'number') {\n    var dx = arguments[0];\n    var dy = arguments[1];\n    if (dx === 0.0 && dy === 0.0) { throw new IllegalArgumentException('Cannot compute the octant for point ( ' + dx + ', ' + dy + ' )') }\n    var adx = Math.abs(dx);\n    var ady = Math.abs(dy);\n    if (dx >= 0) {\n      if (dy >= 0) {\n        if (adx >= ady) { return 0; } else { return 1 }\n      } else {\n        if (adx >= ady) { return 7; } else { return 6 }\n      }\n    } else {\n      if (dy >= 0) {\n        if (adx >= ady) { return 3; } else { return 2 }\n      } else {\n        if (adx >= ady) { return 4; } else { return 5 }\n      }\n    }\n  } else if (arguments[0] instanceof Coordinate && arguments[1] instanceof Coordinate) {\n    var p0 = arguments[0];\n    var p1 = arguments[1];\n    var dx$1 = p1.x - p0.x;\n    var dy$1 = p1.y - p0.y;\n    if (dx$1 === 0.0 && dy$1 === 0.0) { throw new IllegalArgumentException('Cannot compute the octant for two identical points ' + p0) }\n    return Octant.octant(dx$1, dy$1)\n  }\n};\n\nvar SegmentString = function SegmentString () {};\n\nSegmentString.prototype.getCoordinates = function getCoordinates () {};\nSegmentString.prototype.size = function size () {};\nSegmentString.prototype.getCoordinate = function getCoordinate (i) {};\nSegmentString.prototype.isClosed = function isClosed () {};\nSegmentString.prototype.setData = function setData (data) {};\nSegmentString.prototype.getData = function getData () {};\nSegmentString.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nSegmentString.prototype.getClass = function getClass () {\n  return SegmentString\n};\n\nvar NodableSegmentString = function NodableSegmentString () {};\n\nNodableSegmentString.prototype.addIntersection = function addIntersection (intPt, segmentIndex) {};\nNodableSegmentString.prototype.interfaces_ = function interfaces_ () {\n  return [SegmentString]\n};\nNodableSegmentString.prototype.getClass = function getClass () {\n  return NodableSegmentString\n};\n\nvar NodedSegmentString = function NodedSegmentString () {\n  this._nodeList = new SegmentNodeList(this);\n  this._pts = null;\n  this._data = null;\n  var pts = arguments[0];\n  var data = arguments[1];\n  this._pts = pts;\n  this._data = data;\n};\nNodedSegmentString.prototype.getCoordinates = function getCoordinates () {\n  return this._pts\n};\nNodedSegmentString.prototype.size = function size () {\n  return this._pts.length\n};\nNodedSegmentString.prototype.getCoordinate = function getCoordinate (i) {\n  return this._pts[i]\n};\nNodedSegmentString.prototype.isClosed = function isClosed () {\n  return this._pts[0].equals(this._pts[this._pts.length - 1])\n};\nNodedSegmentString.prototype.getSegmentOctant = function getSegmentOctant (index) {\n  if (index === this._pts.length - 1) { return -1 }\n  return this.safeOctant(this.getCoordinate(index), this.getCoordinate(index + 1))\n};\nNodedSegmentString.prototype.setData = function setData (data) {\n  this._data = data;\n};\nNodedSegmentString.prototype.safeOctant = function safeOctant (p0, p1) {\n  if (p0.equals2D(p1)) { return 0 }\n  return Octant.octant(p0, p1)\n};\nNodedSegmentString.prototype.getData = function getData () {\n  return this._data\n};\nNodedSegmentString.prototype.addIntersection = function addIntersection () {\n  if (arguments.length === 2) {\n    var intPt$1 = arguments[0];\n    var segmentIndex = arguments[1];\n    this.addIntersectionNode(intPt$1, segmentIndex);\n  } else if (arguments.length === 4) {\n    var li = arguments[0];\n    var segmentIndex$1 = arguments[1];\n    // const geomIndex = arguments[2]\n    var intIndex = arguments[3];\n    var intPt = new Coordinate(li.getIntersection(intIndex));\n    this.addIntersection(intPt, segmentIndex$1);\n  }\n};\nNodedSegmentString.prototype.toString = function toString () {\n  return WKTWriter.toLineString(new CoordinateArraySequence(this._pts))\n};\nNodedSegmentString.prototype.getNodeList = function getNodeList () {\n  return this._nodeList\n};\nNodedSegmentString.prototype.addIntersectionNode = function addIntersectionNode (intPt, segmentIndex) {\n  var normalizedSegmentIndex = segmentIndex;\n  var nextSegIndex = normalizedSegmentIndex + 1;\n  if (nextSegIndex < this._pts.length) {\n    var nextPt = this._pts[nextSegIndex];\n    if (intPt.equals2D(nextPt)) {\n      normalizedSegmentIndex = nextSegIndex;\n    }\n  }\n  var ei = this._nodeList.add(intPt, normalizedSegmentIndex);\n  return ei\n};\nNodedSegmentString.prototype.addIntersections = function addIntersections (li, segmentIndex, geomIndex) {\n    var this$1 = this;\n\n  for (var i = 0; i < li.getIntersectionNum(); i++) {\n    this$1.addIntersection(li, segmentIndex, geomIndex, i);\n  }\n};\nNodedSegmentString.prototype.interfaces_ = function interfaces_ () {\n  return [NodableSegmentString]\n};\nNodedSegmentString.prototype.getClass = function getClass () {\n  return NodedSegmentString\n};\nNodedSegmentString.getNodedSubstrings = function getNodedSubstrings () {\n  if (arguments.length === 1) {\n    var segStrings = arguments[0];\n    var resultEdgelist = new ArrayList();\n    NodedSegmentString.getNodedSubstrings(segStrings, resultEdgelist);\n    return resultEdgelist\n  } else if (arguments.length === 2) {\n    var segStrings$1 = arguments[0];\n    var resultEdgelist$1 = arguments[1];\n    for (var i = segStrings$1.iterator(); i.hasNext();) {\n      var ss = i.next();\n      ss.getNodeList().addSplitEdges(resultEdgelist$1);\n    }\n  }\n};\n\nvar LineSegment = function LineSegment () {\n  this.p0 = null;\n  this.p1 = null;\n  if (arguments.length === 0) {\n    this.p0 = new Coordinate();\n    this.p1 = new Coordinate();\n  } else if (arguments.length === 1) {\n    var ls = arguments[0];\n    this.p0 = new Coordinate(ls.p0);\n    this.p1 = new Coordinate(ls.p1);\n  } else if (arguments.length === 2) {\n    this.p0 = arguments[0];\n    this.p1 = arguments[1];\n  } else if (arguments.length === 4) {\n    var x0 = arguments[0];\n    var y0 = arguments[1];\n    var x1 = arguments[2];\n    var y1 = arguments[3];\n    this.p0 = new Coordinate(x0, y0);\n    this.p1 = new Coordinate(x1, y1);\n  }\n};\n\nvar staticAccessors$24 = { serialVersionUID: { configurable: true } };\nLineSegment.prototype.minX = function minX () {\n  return Math.min(this.p0.x, this.p1.x)\n};\nLineSegment.prototype.orientationIndex = function orientationIndex () {\n  if (arguments[0] instanceof LineSegment) {\n    var seg = arguments[0];\n    var orient0 = CGAlgorithms.orientationIndex(this.p0, this.p1, seg.p0);\n    var orient1 = CGAlgorithms.orientationIndex(this.p0, this.p1, seg.p1);\n    if (orient0 >= 0 && orient1 >= 0) { return Math.max(orient0, orient1) }\n    if (orient0 <= 0 && orient1 <= 0) { return Math.max(orient0, orient1) }\n    return 0\n  } else if (arguments[0] instanceof Coordinate) {\n    var p = arguments[0];\n    return CGAlgorithms.orientationIndex(this.p0, this.p1, p)\n  }\n};\nLineSegment.prototype.toGeometry = function toGeometry (geomFactory) {\n  return geomFactory.createLineString([this.p0, this.p1])\n};\nLineSegment.prototype.isVertical = function isVertical () {\n  return this.p0.x === this.p1.x\n};\nLineSegment.prototype.equals = function equals (o) {\n  if (!(o instanceof LineSegment)) {\n    return false\n  }\n  var other = o;\n  return this.p0.equals(other.p0) && this.p1.equals(other.p1)\n};\nLineSegment.prototype.intersection = function intersection (line) {\n  var li = new RobustLineIntersector();\n  li.computeIntersection(this.p0, this.p1, line.p0, line.p1);\n  if (li.hasIntersection()) { return li.getIntersection(0) }\n  return null\n};\nLineSegment.prototype.project = function project () {\n  if (arguments[0] instanceof Coordinate) {\n    var p = arguments[0];\n    if (p.equals(this.p0) || p.equals(this.p1)) { return new Coordinate(p) }\n    var r = this.projectionFactor(p);\n    var coord = new Coordinate();\n    coord.x = this.p0.x + r * (this.p1.x - this.p0.x);\n    coord.y = this.p0.y + r * (this.p1.y - this.p0.y);\n    return coord\n  } else if (arguments[0] instanceof LineSegment) {\n    var seg = arguments[0];\n    var pf0 = this.projectionFactor(seg.p0);\n    var pf1 = this.projectionFactor(seg.p1);\n    if (pf0 >= 1.0 && pf1 >= 1.0) { return null }\n    if (pf0 <= 0.0 && pf1 <= 0.0) { return null }\n    var newp0 = this.project(seg.p0);\n    if (pf0 < 0.0) { newp0 = this.p0; }\n    if (pf0 > 1.0) { newp0 = this.p1; }\n    var newp1 = this.project(seg.p1);\n    if (pf1 < 0.0) { newp1 = this.p0; }\n    if (pf1 > 1.0) { newp1 = this.p1; }\n    return new LineSegment(newp0, newp1)\n  }\n};\nLineSegment.prototype.normalize = function normalize () {\n  if (this.p1.compareTo(this.p0) < 0) { this.reverse(); }\n};\nLineSegment.prototype.angle = function angle () {\n  return Math.atan2(this.p1.y - this.p0.y, this.p1.x - this.p0.x)\n};\nLineSegment.prototype.getCoordinate = function getCoordinate (i) {\n  if (i === 0) { return this.p0 }\n  return this.p1\n};\nLineSegment.prototype.distancePerpendicular = function distancePerpendicular (p) {\n  return CGAlgorithms.distancePointLinePerpendicular(p, this.p0, this.p1)\n};\nLineSegment.prototype.minY = function minY () {\n  return Math.min(this.p0.y, this.p1.y)\n};\nLineSegment.prototype.midPoint = function midPoint () {\n  return LineSegment.midPoint(this.p0, this.p1)\n};\nLineSegment.prototype.projectionFactor = function projectionFactor (p) {\n  if (p.equals(this.p0)) { return 0.0 }\n  if (p.equals(this.p1)) { return 1.0 }\n  var dx = this.p1.x - this.p0.x;\n  var dy = this.p1.y - this.p0.y;\n  var len = dx * dx + dy * dy;\n  if (len <= 0.0) { return Double.NaN }\n  var r = ((p.x - this.p0.x) * dx + (p.y - this.p0.y) * dy) / len;\n  return r\n};\nLineSegment.prototype.closestPoints = function closestPoints (line) {\n  var intPt = this.intersection(line);\n  if (intPt !== null) {\n    return [intPt, intPt]\n  }\n  var closestPt = new Array(2).fill(null);\n  var minDistance = Double.MAX_VALUE;\n  var dist = null;\n  var close00 = this.closestPoint(line.p0);\n  minDistance = close00.distance(line.p0);\n  closestPt[0] = close00;\n  closestPt[1] = line.p0;\n  var close01 = this.closestPoint(line.p1);\n  dist = close01.distance(line.p1);\n  if (dist < minDistance) {\n    minDistance = dist;\n    closestPt[0] = close01;\n    closestPt[1] = line.p1;\n  }\n  var close10 = line.closestPoint(this.p0);\n  dist = close10.distance(this.p0);\n  if (dist < minDistance) {\n    minDistance = dist;\n    closestPt[0] = this.p0;\n    closestPt[1] = close10;\n  }\n  var close11 = line.closestPoint(this.p1);\n  dist = close11.distance(this.p1);\n  if (dist < minDistance) {\n    minDistance = dist;\n    closestPt[0] = this.p1;\n    closestPt[1] = close11;\n  }\n  return closestPt\n};\nLineSegment.prototype.closestPoint = function closestPoint (p) {\n  var factor = this.projectionFactor(p);\n  if (factor > 0 && factor < 1) {\n    return this.project(p)\n  }\n  var dist0 = this.p0.distance(p);\n  var dist1 = this.p1.distance(p);\n  if (dist0 < dist1) { return this.p0 }\n  return this.p1\n};\nLineSegment.prototype.maxX = function maxX () {\n  return Math.max(this.p0.x, this.p1.x)\n};\nLineSegment.prototype.getLength = function getLength () {\n  return this.p0.distance(this.p1)\n};\nLineSegment.prototype.compareTo = function compareTo (o) {\n  var other = o;\n  var comp0 = this.p0.compareTo(other.p0);\n  if (comp0 !== 0) { return comp0 }\n  return this.p1.compareTo(other.p1)\n};\nLineSegment.prototype.reverse = function reverse () {\n  var temp = this.p0;\n  this.p0 = this.p1;\n  this.p1 = temp;\n};\nLineSegment.prototype.equalsTopo = function equalsTopo (other) {\n  return this.p0.equals(other.p0) &&\n        (this.p1.equals(other.p1) || this.p0.equals(other.p1)) &&\n         this.p1.equals(other.p0)\n};\nLineSegment.prototype.lineIntersection = function lineIntersection (line) {\n  try {\n    var intPt = HCoordinate.intersection(this.p0, this.p1, line.p0, line.p1);\n    return intPt\n  } catch (ex) {\n    if (ex instanceof NotRepresentableException) {} else { throw ex }\n  } finally {}\n  return null\n};\nLineSegment.prototype.maxY = function maxY () {\n  return Math.max(this.p0.y, this.p1.y)\n};\nLineSegment.prototype.pointAlongOffset = function pointAlongOffset (segmentLengthFraction, offsetDistance) {\n  var segx = this.p0.x + segmentLengthFraction * (this.p1.x - this.p0.x);\n  var segy = this.p0.y + segmentLengthFraction * (this.p1.y - this.p0.y);\n  var dx = this.p1.x - this.p0.x;\n  var dy = this.p1.y - this.p0.y;\n  var len = Math.sqrt(dx * dx + dy * dy);\n  var ux = 0.0;\n  var uy = 0.0;\n  if (offsetDistance !== 0.0) {\n    if (len <= 0.0) { throw new Error('Cannot compute offset from zero-length line segment') }\n    ux = offsetDistance * dx / len;\n    uy = offsetDistance * dy / len;\n  }\n  var offsetx = segx - uy;\n  var offsety = segy + ux;\n  var coord = new Coordinate(offsetx, offsety);\n  return coord\n};\nLineSegment.prototype.setCoordinates = function setCoordinates () {\n  if (arguments.length === 1) {\n    var ls = arguments[0];\n    this.setCoordinates(ls.p0, ls.p1);\n  } else if (arguments.length === 2) {\n    var p0 = arguments[0];\n    var p1 = arguments[1];\n    this.p0.x = p0.x;\n    this.p0.y = p0.y;\n    this.p1.x = p1.x;\n    this.p1.y = p1.y;\n  }\n};\nLineSegment.prototype.segmentFraction = function segmentFraction (inputPt) {\n  var segFrac = this.projectionFactor(inputPt);\n  if (segFrac < 0.0) { segFrac = 0.0; } else if (segFrac > 1.0 || Double.isNaN(segFrac)) { segFrac = 1.0; }\n  return segFrac\n};\nLineSegment.prototype.toString = function toString () {\n  return 'LINESTRING( ' + this.p0.x + ' ' + this.p0.y + ', ' + this.p1.x + ' ' + this.p1.y + ')'\n};\nLineSegment.prototype.isHorizontal = function isHorizontal () {\n  return this.p0.y === this.p1.y\n};\nLineSegment.prototype.distance = function distance () {\n  if (arguments[0] instanceof LineSegment) {\n    var ls = arguments[0];\n    return CGAlgorithms.distanceLineLine(this.p0, this.p1, ls.p0, ls.p1)\n  } else if (arguments[0] instanceof Coordinate) {\n    var p = arguments[0];\n    return CGAlgorithms.distancePointLine(p, this.p0, this.p1)\n  }\n};\nLineSegment.prototype.pointAlong = function pointAlong (segmentLengthFraction) {\n  var coord = new Coordinate();\n  coord.x = this.p0.x + segmentLengthFraction * (this.p1.x - this.p0.x);\n  coord.y = this.p0.y + segmentLengthFraction * (this.p1.y - this.p0.y);\n  return coord\n};\nLineSegment.prototype.hashCode = function hashCode () {\n  var bits0 = Double.doubleToLongBits(this.p0.x);\n  bits0 ^= Double.doubleToLongBits(this.p0.y) * 31;\n  var hash0 = Math.trunc(bits0) ^ Math.trunc(bits0 >> 32);\n  var bits1 = Double.doubleToLongBits(this.p1.x);\n  bits1 ^= Double.doubleToLongBits(this.p1.y) * 31;\n  var hash1 = Math.trunc(bits1) ^ Math.trunc(bits1 >> 32);\n  return hash0 ^ hash1\n};\nLineSegment.prototype.interfaces_ = function interfaces_ () {\n  return [Comparable, Serializable]\n};\nLineSegment.prototype.getClass = function getClass () {\n  return LineSegment\n};\nLineSegment.midPoint = function midPoint (p0, p1) {\n  return new Coordinate((p0.x + p1.x) / 2, (p0.y + p1.y) / 2)\n};\nstaticAccessors$24.serialVersionUID.get = function () { return 3252005833466256227 };\n\nObject.defineProperties( LineSegment, staticAccessors$24 );\n\nvar MonotoneChainOverlapAction = function MonotoneChainOverlapAction () {\n  this.tempEnv1 = new Envelope();\n  this.tempEnv2 = new Envelope();\n  this._overlapSeg1 = new LineSegment();\n  this._overlapSeg2 = new LineSegment();\n};\nMonotoneChainOverlapAction.prototype.overlap = function overlap () {\n  if (arguments.length === 2) {\n    // const seg1 = arguments[0]\n    // const seg2 = arguments[1]\n  } else if (arguments.length === 4) {\n    var mc1 = arguments[0];\n    var start1 = arguments[1];\n    var mc2 = arguments[2];\n    var start2 = arguments[3];\n    mc1.getLineSegment(start1, this._overlapSeg1);\n    mc2.getLineSegment(start2, this._overlapSeg2);\n    this.overlap(this._overlapSeg1, this._overlapSeg2);\n  }\n};\nMonotoneChainOverlapAction.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nMonotoneChainOverlapAction.prototype.getClass = function getClass () {\n  return MonotoneChainOverlapAction\n};\n\nvar MonotoneChain = function MonotoneChain () {\n  this._pts = null;\n  this._start = null;\n  this._end = null;\n  this._env = null;\n  this._context = null;\n  this._id = null;\n  var pts = arguments[0];\n  var start = arguments[1];\n  var end = arguments[2];\n  var context = arguments[3];\n  this._pts = pts;\n  this._start = start;\n  this._end = end;\n  this._context = context;\n};\nMonotoneChain.prototype.getLineSegment = function getLineSegment (index, ls) {\n  ls.p0 = this._pts[index];\n  ls.p1 = this._pts[index + 1];\n};\nMonotoneChain.prototype.computeSelect = function computeSelect (searchEnv, start0, end0, mcs) {\n  var p0 = this._pts[start0];\n  var p1 = this._pts[end0];\n  mcs.tempEnv1.init(p0, p1);\n  if (end0 - start0 === 1) {\n    mcs.select(this, start0);\n    return null\n  }\n  if (!searchEnv.intersects(mcs.tempEnv1)) { return null }\n  var mid = Math.trunc((start0 + end0) / 2);\n  if (start0 < mid) {\n    this.computeSelect(searchEnv, start0, mid, mcs);\n  }\n  if (mid < end0) {\n    this.computeSelect(searchEnv, mid, end0, mcs);\n  }\n};\nMonotoneChain.prototype.getCoordinates = function getCoordinates () {\n    var this$1 = this;\n\n  var coord = new Array(this._end - this._start + 1).fill(null);\n  var index = 0;\n  for (var i = this._start; i <= this._end; i++) {\n    coord[index++] = this$1._pts[i];\n  }\n  return coord\n};\nMonotoneChain.prototype.computeOverlaps = function computeOverlaps (mc, mco) {\n  this.computeOverlapsInternal(this._start, this._end, mc, mc._start, mc._end, mco);\n};\nMonotoneChain.prototype.setId = function setId (id) {\n  this._id = id;\n};\nMonotoneChain.prototype.select = function select (searchEnv, mcs) {\n  this.computeSelect(searchEnv, this._start, this._end, mcs);\n};\nMonotoneChain.prototype.getEnvelope = function getEnvelope () {\n  if (this._env === null) {\n    var p0 = this._pts[this._start];\n    var p1 = this._pts[this._end];\n    this._env = new Envelope(p0, p1);\n  }\n  return this._env\n};\nMonotoneChain.prototype.getEndIndex = function getEndIndex () {\n  return this._end\n};\nMonotoneChain.prototype.getStartIndex = function getStartIndex () {\n  return this._start\n};\nMonotoneChain.prototype.getContext = function getContext () {\n  return this._context\n};\nMonotoneChain.prototype.getId = function getId () {\n  return this._id\n};\nMonotoneChain.prototype.computeOverlapsInternal = function computeOverlapsInternal (start0, end0, mc, start1, end1, mco) {\n  var p00 = this._pts[start0];\n  var p01 = this._pts[end0];\n  var p10 = mc._pts[start1];\n  var p11 = mc._pts[end1];\n  if (end0 - start0 === 1 && end1 - start1 === 1) {\n    mco.overlap(this, start0, mc, start1);\n    return null\n  }\n  mco.tempEnv1.init(p00, p01);\n  mco.tempEnv2.init(p10, p11);\n  if (!mco.tempEnv1.intersects(mco.tempEnv2)) { return null }\n  var mid0 = Math.trunc((start0 + end0) / 2);\n  var mid1 = Math.trunc((start1 + end1) / 2);\n  if (start0 < mid0) {\n    if (start1 < mid1) { this.computeOverlapsInternal(start0, mid0, mc, start1, mid1, mco); }\n    if (mid1 < end1) { this.computeOverlapsInternal(start0, mid0, mc, mid1, end1, mco); }\n  }\n  if (mid0 < end0) {\n    if (start1 < mid1) { this.computeOverlapsInternal(mid0, end0, mc, start1, mid1, mco); }\n    if (mid1 < end1) { this.computeOverlapsInternal(mid0, end0, mc, mid1, end1, mco); }\n  }\n};\nMonotoneChain.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nMonotoneChain.prototype.getClass = function getClass () {\n  return MonotoneChain\n};\n\nvar MonotoneChainBuilder = function MonotoneChainBuilder () {};\n\nMonotoneChainBuilder.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nMonotoneChainBuilder.prototype.getClass = function getClass () {\n  return MonotoneChainBuilder\n};\nMonotoneChainBuilder.getChainStartIndices = function getChainStartIndices (pts) {\n  var start = 0;\n  var startIndexList = new ArrayList();\n  startIndexList.add(new Integer(start));\n  do {\n    var last = MonotoneChainBuilder.findChainEnd(pts, start);\n    startIndexList.add(new Integer(last));\n    start = last;\n  } while (start < pts.length - 1)\n  var startIndex = MonotoneChainBuilder.toIntArray(startIndexList);\n  return startIndex\n};\nMonotoneChainBuilder.findChainEnd = function findChainEnd (pts, start) {\n  var safeStart = start;\n  while (safeStart < pts.length - 1 && pts[safeStart].equals2D(pts[safeStart + 1])) {\n    safeStart++;\n  }\n  if (safeStart >= pts.length - 1) {\n    return pts.length - 1\n  }\n  var chainQuad = Quadrant.quadrant(pts[safeStart], pts[safeStart + 1]);\n  var last = start + 1;\n  while (last < pts.length) {\n    if (!pts[last - 1].equals2D(pts[last])) {\n      var quad = Quadrant.quadrant(pts[last - 1], pts[last]);\n      if (quad !== chainQuad) { break }\n    }\n    last++;\n  }\n  return last - 1\n};\nMonotoneChainBuilder.getChains = function getChains () {\n  if (arguments.length === 1) {\n    var pts = arguments[0];\n    return MonotoneChainBuilder.getChains(pts, null)\n  } else if (arguments.length === 2) {\n    var pts$1 = arguments[0];\n    var context = arguments[1];\n    var mcList = new ArrayList();\n    var startIndex = MonotoneChainBuilder.getChainStartIndices(pts$1);\n    for (var i = 0; i < startIndex.length - 1; i++) {\n      var mc = new MonotoneChain(pts$1, startIndex[i], startIndex[i + 1], context);\n      mcList.add(mc);\n    }\n    return mcList\n  }\n};\nMonotoneChainBuilder.toIntArray = function toIntArray (list) {\n  var array = new Array(list.size()).fill(null);\n  for (var i = 0; i < array.length; i++) {\n    array[i] = list.get(i).intValue();\n  }\n  return array\n};\n\nvar Noder = function Noder () {};\n\nNoder.prototype.computeNodes = function computeNodes (segStrings) {};\nNoder.prototype.getNodedSubstrings = function getNodedSubstrings () {};\nNoder.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nNoder.prototype.getClass = function getClass () {\n  return Noder\n};\n\nvar SinglePassNoder = function SinglePassNoder () {\n  this._segInt = null;\n  if (arguments.length === 0) {} else if (arguments.length === 1) {\n    var segInt = arguments[0];\n    this.setSegmentIntersector(segInt);\n  }\n};\nSinglePassNoder.prototype.setSegmentIntersector = function setSegmentIntersector (segInt) {\n  this._segInt = segInt;\n};\nSinglePassNoder.prototype.interfaces_ = function interfaces_ () {\n  return [Noder]\n};\nSinglePassNoder.prototype.getClass = function getClass () {\n  return SinglePassNoder\n};\n\nvar MCIndexNoder = (function (SinglePassNoder$$1) {\n  function MCIndexNoder (si) {\n    if (si) { SinglePassNoder$$1.call(this, si); }\n    else { SinglePassNoder$$1.call(this); }\n    this._monoChains = new ArrayList();\n    this._index = new STRtree();\n    this._idCounter = 0;\n    this._nodedSegStrings = null;\n    this._nOverlaps = 0;\n  }\n\n  if ( SinglePassNoder$$1 ) MCIndexNoder.__proto__ = SinglePassNoder$$1;\n  MCIndexNoder.prototype = Object.create( SinglePassNoder$$1 && SinglePassNoder$$1.prototype );\n  MCIndexNoder.prototype.constructor = MCIndexNoder;\n\n  var staticAccessors = { SegmentOverlapAction: { configurable: true } };\n  MCIndexNoder.prototype.getMonotoneChains = function getMonotoneChains () {\n    return this._monoChains\n  };\n  MCIndexNoder.prototype.getNodedSubstrings = function getNodedSubstrings () {\n    return NodedSegmentString.getNodedSubstrings(this._nodedSegStrings)\n  };\n  MCIndexNoder.prototype.getIndex = function getIndex () {\n    return this._index\n  };\n  MCIndexNoder.prototype.add = function add (segStr) {\n    var this$1 = this;\n\n    var segChains = MonotoneChainBuilder.getChains(segStr.getCoordinates(), segStr);\n    for (var i = segChains.iterator(); i.hasNext();) {\n      var mc = i.next();\n      mc.setId(this$1._idCounter++);\n      this$1._index.insert(mc.getEnvelope(), mc);\n      this$1._monoChains.add(mc);\n    }\n  };\n  MCIndexNoder.prototype.computeNodes = function computeNodes (inputSegStrings) {\n    var this$1 = this;\n\n    this._nodedSegStrings = inputSegStrings;\n    for (var i = inputSegStrings.iterator(); i.hasNext();) {\n      this$1.add(i.next());\n    }\n    this.intersectChains();\n  };\n  MCIndexNoder.prototype.intersectChains = function intersectChains () {\n    var this$1 = this;\n\n    var overlapAction = new SegmentOverlapAction(this._segInt);\n    for (var i = this._monoChains.iterator(); i.hasNext();) {\n      var queryChain = i.next();\n      var overlapChains = this$1._index.query(queryChain.getEnvelope());\n      for (var j = overlapChains.iterator(); j.hasNext();) {\n        var testChain = j.next();\n        if (testChain.getId() > queryChain.getId()) {\n          queryChain.computeOverlaps(testChain, overlapAction);\n          this$1._nOverlaps++;\n        }\n        if (this$1._segInt.isDone()) { return null }\n      }\n    }\n  };\n  MCIndexNoder.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  MCIndexNoder.prototype.getClass = function getClass () {\n    return MCIndexNoder\n  };\n  staticAccessors.SegmentOverlapAction.get = function () { return SegmentOverlapAction };\n\n  Object.defineProperties( MCIndexNoder, staticAccessors );\n\n  return MCIndexNoder;\n}(SinglePassNoder));\n\nvar SegmentOverlapAction = (function (MonotoneChainOverlapAction$$1) {\n  function SegmentOverlapAction () {\n    MonotoneChainOverlapAction$$1.call(this);\n    this._si = null;\n    var si = arguments[0];\n    this._si = si;\n  }\n\n  if ( MonotoneChainOverlapAction$$1 ) SegmentOverlapAction.__proto__ = MonotoneChainOverlapAction$$1;\n  SegmentOverlapAction.prototype = Object.create( MonotoneChainOverlapAction$$1 && MonotoneChainOverlapAction$$1.prototype );\n  SegmentOverlapAction.prototype.constructor = SegmentOverlapAction;\n  SegmentOverlapAction.prototype.overlap = function overlap () {\n    if (arguments.length === 4) {\n      var mc1 = arguments[0];\n      var start1 = arguments[1];\n      var mc2 = arguments[2];\n      var start2 = arguments[3];\n      var ss1 = mc1.getContext();\n      var ss2 = mc2.getContext();\n      this._si.processIntersections(ss1, start1, ss2, start2);\n    } else { return MonotoneChainOverlapAction$$1.prototype.overlap.apply(this, arguments) }\n  };\n  SegmentOverlapAction.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  SegmentOverlapAction.prototype.getClass = function getClass () {\n    return SegmentOverlapAction\n  };\n\n  return SegmentOverlapAction;\n}(MonotoneChainOverlapAction));\n\nvar BufferParameters = function BufferParameters () {\n  this._quadrantSegments = BufferParameters.DEFAULT_QUADRANT_SEGMENTS;\n  this._endCapStyle = BufferParameters.CAP_ROUND;\n  this._joinStyle = BufferParameters.JOIN_ROUND;\n  this._mitreLimit = BufferParameters.DEFAULT_MITRE_LIMIT;\n  this._isSingleSided = false;\n  this._simplifyFactor = BufferParameters.DEFAULT_SIMPLIFY_FACTOR;\n\n  if (arguments.length === 0) {} else if (arguments.length === 1) {\n    var quadrantSegments = arguments[0];\n    this.setQuadrantSegments(quadrantSegments);\n  } else if (arguments.length === 2) {\n    var quadrantSegments$1 = arguments[0];\n    var endCapStyle = arguments[1];\n    this.setQuadrantSegments(quadrantSegments$1);\n    this.setEndCapStyle(endCapStyle);\n  } else if (arguments.length === 4) {\n    var quadrantSegments$2 = arguments[0];\n    var endCapStyle$1 = arguments[1];\n    var joinStyle = arguments[2];\n    var mitreLimit = arguments[3];\n    this.setQuadrantSegments(quadrantSegments$2);\n    this.setEndCapStyle(endCapStyle$1);\n    this.setJoinStyle(joinStyle);\n    this.setMitreLimit(mitreLimit);\n  }\n};\n\nvar staticAccessors$25 = { CAP_ROUND: { configurable: true },CAP_FLAT: { configurable: true },CAP_SQUARE: { configurable: true },JOIN_ROUND: { configurable: true },JOIN_MITRE: { configurable: true },JOIN_BEVEL: { configurable: true },DEFAULT_QUADRANT_SEGMENTS: { configurable: true },DEFAULT_MITRE_LIMIT: { configurable: true },DEFAULT_SIMPLIFY_FACTOR: { configurable: true } };\nBufferParameters.prototype.getEndCapStyle = function getEndCapStyle () {\n  return this._endCapStyle\n};\nBufferParameters.prototype.isSingleSided = function isSingleSided () {\n  return this._isSingleSided\n};\nBufferParameters.prototype.setQuadrantSegments = function setQuadrantSegments (quadSegs) {\n  this._quadrantSegments = quadSegs;\n  if (this._quadrantSegments === 0) { this._joinStyle = BufferParameters.JOIN_BEVEL; }\n  if (this._quadrantSegments < 0) {\n    this._joinStyle = BufferParameters.JOIN_MITRE;\n    this._mitreLimit = Math.abs(this._quadrantSegments);\n  }\n  if (quadSegs <= 0) {\n    this._quadrantSegments = 1;\n  }\n  if (this._joinStyle !== BufferParameters.JOIN_ROUND) {\n    this._quadrantSegments = BufferParameters.DEFAULT_QUADRANT_SEGMENTS;\n  }\n};\nBufferParameters.prototype.getJoinStyle = function getJoinStyle () {\n  return this._joinStyle\n};\nBufferParameters.prototype.setJoinStyle = function setJoinStyle (joinStyle) {\n  this._joinStyle = joinStyle;\n};\nBufferParameters.prototype.setSimplifyFactor = function setSimplifyFactor (simplifyFactor) {\n  this._simplifyFactor = simplifyFactor < 0 ? 0 : simplifyFactor;\n};\nBufferParameters.prototype.getSimplifyFactor = function getSimplifyFactor () {\n  return this._simplifyFactor\n};\nBufferParameters.prototype.getQuadrantSegments = function getQuadrantSegments () {\n  return this._quadrantSegments\n};\nBufferParameters.prototype.setEndCapStyle = function setEndCapStyle (endCapStyle) {\n  this._endCapStyle = endCapStyle;\n};\nBufferParameters.prototype.getMitreLimit = function getMitreLimit () {\n  return this._mitreLimit\n};\nBufferParameters.prototype.setMitreLimit = function setMitreLimit (mitreLimit) {\n  this._mitreLimit = mitreLimit;\n};\nBufferParameters.prototype.setSingleSided = function setSingleSided (isSingleSided) {\n  this._isSingleSided = isSingleSided;\n};\nBufferParameters.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nBufferParameters.prototype.getClass = function getClass () {\n  return BufferParameters\n};\nBufferParameters.bufferDistanceError = function bufferDistanceError (quadSegs) {\n  var alpha = Math.PI / 2.0 / quadSegs;\n  return 1 - Math.cos(alpha / 2.0)\n};\nstaticAccessors$25.CAP_ROUND.get = function () { return 1 };\nstaticAccessors$25.CAP_FLAT.get = function () { return 2 };\nstaticAccessors$25.CAP_SQUARE.get = function () { return 3 };\nstaticAccessors$25.JOIN_ROUND.get = function () { return 1 };\nstaticAccessors$25.JOIN_MITRE.get = function () { return 2 };\nstaticAccessors$25.JOIN_BEVEL.get = function () { return 3 };\nstaticAccessors$25.DEFAULT_QUADRANT_SEGMENTS.get = function () { return 8 };\nstaticAccessors$25.DEFAULT_MITRE_LIMIT.get = function () { return 5.0 };\nstaticAccessors$25.DEFAULT_SIMPLIFY_FACTOR.get = function () { return 0.01 };\n\nObject.defineProperties( BufferParameters, staticAccessors$25 );\n\nvar BufferInputLineSimplifier = function BufferInputLineSimplifier (inputLine) {\n  this._distanceTol = null;\n  this._isDeleted = null;\n  this._angleOrientation = CGAlgorithms.COUNTERCLOCKWISE;\n  this._inputLine = inputLine || null;\n};\n\nvar staticAccessors$26 = { INIT: { configurable: true },DELETE: { configurable: true },KEEP: { configurable: true },NUM_PTS_TO_CHECK: { configurable: true } };\nBufferInputLineSimplifier.prototype.isDeletable = function isDeletable (i0, i1, i2, distanceTol) {\n  var p0 = this._inputLine[i0];\n  var p1 = this._inputLine[i1];\n  var p2 = this._inputLine[i2];\n  if (!this.isConcave(p0, p1, p2)) { return false }\n  if (!this.isShallow(p0, p1, p2, distanceTol)) { return false }\n  return this.isShallowSampled(p0, p1, i0, i2, distanceTol)\n};\nBufferInputLineSimplifier.prototype.deleteShallowConcavities = function deleteShallowConcavities () {\n    var this$1 = this;\n\n  var index = 1;\n  // const maxIndex = this._inputLine.length - 1\n  var midIndex = this.findNextNonDeletedIndex(index);\n  var lastIndex = this.findNextNonDeletedIndex(midIndex);\n  var isChanged = false;\n  while (lastIndex < this._inputLine.length) {\n    var isMiddleVertexDeleted = false;\n    if (this$1.isDeletable(index, midIndex, lastIndex, this$1._distanceTol)) {\n      this$1._isDeleted[midIndex] = BufferInputLineSimplifier.DELETE;\n      isMiddleVertexDeleted = true;\n      isChanged = true;\n    }\n    if (isMiddleVertexDeleted) { index = lastIndex; } else { index = midIndex; }\n    midIndex = this$1.findNextNonDeletedIndex(index);\n    lastIndex = this$1.findNextNonDeletedIndex(midIndex);\n  }\n  return isChanged\n};\nBufferInputLineSimplifier.prototype.isShallowConcavity = function isShallowConcavity (p0, p1, p2, distanceTol) {\n  var orientation = CGAlgorithms.computeOrientation(p0, p1, p2);\n  var isAngleToSimplify = orientation === this._angleOrientation;\n  if (!isAngleToSimplify) { return false }\n  var dist = CGAlgorithms.distancePointLine(p1, p0, p2);\n  return dist < distanceTol\n};\nBufferInputLineSimplifier.prototype.isShallowSampled = function isShallowSampled (p0, p2, i0, i2, distanceTol) {\n    var this$1 = this;\n\n  var inc = Math.trunc((i2 - i0) / BufferInputLineSimplifier.NUM_PTS_TO_CHECK);\n  if (inc <= 0) { inc = 1; }\n  for (var i = i0; i < i2; i += inc) {\n    if (!this$1.isShallow(p0, p2, this$1._inputLine[i], distanceTol)) { return false }\n  }\n  return true\n};\nBufferInputLineSimplifier.prototype.isConcave = function isConcave (p0, p1, p2) {\n  var orientation = CGAlgorithms.computeOrientation(p0, p1, p2);\n  var isConcave = orientation === this._angleOrientation;\n  return isConcave\n};\nBufferInputLineSimplifier.prototype.simplify = function simplify (distanceTol) {\n    var this$1 = this;\n\n  this._distanceTol = Math.abs(distanceTol);\n  if (distanceTol < 0) { this._angleOrientation = CGAlgorithms.CLOCKWISE; }\n  this._isDeleted = new Array(this._inputLine.length).fill(null);\n  var isChanged = false;\n  do {\n    isChanged = this$1.deleteShallowConcavities();\n  } while (isChanged)\n  return this.collapseLine()\n};\nBufferInputLineSimplifier.prototype.findNextNonDeletedIndex = function findNextNonDeletedIndex (index) {\n  var next = index + 1;\n  while (next < this._inputLine.length && this._isDeleted[next] === BufferInputLineSimplifier.DELETE) { next++; }\n  return next\n};\nBufferInputLineSimplifier.prototype.isShallow = function isShallow (p0, p1, p2, distanceTol) {\n  var dist = CGAlgorithms.distancePointLine(p1, p0, p2);\n  return dist < distanceTol\n};\nBufferInputLineSimplifier.prototype.collapseLine = function collapseLine () {\n    var this$1 = this;\n\n  var coordList = new CoordinateList();\n  for (var i = 0; i < this._inputLine.length; i++) {\n    if (this$1._isDeleted[i] !== BufferInputLineSimplifier.DELETE) { coordList.add(this$1._inputLine[i]); }\n  }\n  return coordList.toCoordinateArray()\n};\nBufferInputLineSimplifier.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nBufferInputLineSimplifier.prototype.getClass = function getClass () {\n  return BufferInputLineSimplifier\n};\nBufferInputLineSimplifier.simplify = function simplify (inputLine, distanceTol) {\n  var simp = new BufferInputLineSimplifier(inputLine);\n  return simp.simplify(distanceTol)\n};\nstaticAccessors$26.INIT.get = function () { return 0 };\nstaticAccessors$26.DELETE.get = function () { return 1 };\nstaticAccessors$26.KEEP.get = function () { return 1 };\nstaticAccessors$26.NUM_PTS_TO_CHECK.get = function () { return 10 };\n\nObject.defineProperties( BufferInputLineSimplifier, staticAccessors$26 );\n\nvar OffsetSegmentString = function OffsetSegmentString () {\n  this._ptList = null;\n  this._precisionModel = null;\n  this._minimimVertexDistance = 0.0;\n  this._ptList = new ArrayList();\n};\n\nvar staticAccessors$28 = { COORDINATE_ARRAY_TYPE: { configurable: true } };\nOffsetSegmentString.prototype.getCoordinates = function getCoordinates () {\n  var coord = this._ptList.toArray(OffsetSegmentString.COORDINATE_ARRAY_TYPE);\n  return coord\n};\nOffsetSegmentString.prototype.setPrecisionModel = function setPrecisionModel (precisionModel) {\n  this._precisionModel = precisionModel;\n};\nOffsetSegmentString.prototype.addPt = function addPt (pt) {\n  var bufPt = new Coordinate(pt);\n  this._precisionModel.makePrecise(bufPt);\n  if (this.isRedundant(bufPt)) { return null }\n  this._ptList.add(bufPt);\n};\nOffsetSegmentString.prototype.revere = function revere () {};\nOffsetSegmentString.prototype.addPts = function addPts (pt, isForward) {\n    var this$1 = this;\n\n  if (isForward) {\n    for (var i = 0; i < pt.length; i++) {\n      this$1.addPt(pt[i]);\n    }\n  } else {\n    for (var i$1 = pt.length - 1; i$1 >= 0; i$1--) {\n      this$1.addPt(pt[i$1]);\n    }\n  }\n};\nOffsetSegmentString.prototype.isRedundant = function isRedundant (pt) {\n  if (this._ptList.size() < 1) { return false }\n  var lastPt = this._ptList.get(this._ptList.size() - 1);\n  var ptDist = pt.distance(lastPt);\n  if (ptDist < this._minimimVertexDistance) { return true }\n  return false\n};\nOffsetSegmentString.prototype.toString = function toString () {\n  var fact = new GeometryFactory();\n  var line = fact.createLineString(this.getCoordinates());\n  return line.toString()\n};\nOffsetSegmentString.prototype.closeRing = function closeRing () {\n  if (this._ptList.size() < 1) { return null }\n  var startPt = new Coordinate(this._ptList.get(0));\n  var lastPt = this._ptList.get(this._ptList.size() - 1);\n  // const last2Pt = null\n  // if (this._ptList.size() >= 2) last2Pt = this._ptList.get(this._ptList.size() - 2)\n  if (startPt.equals(lastPt)) { return null }\n  this._ptList.add(startPt);\n};\nOffsetSegmentString.prototype.setMinimumVertexDistance = function setMinimumVertexDistance (minimimVertexDistance) {\n  this._minimimVertexDistance = minimimVertexDistance;\n};\nOffsetSegmentString.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nOffsetSegmentString.prototype.getClass = function getClass () {\n  return OffsetSegmentString\n};\nstaticAccessors$28.COORDINATE_ARRAY_TYPE.get = function () { return new Array(0).fill(null) };\n\nObject.defineProperties( OffsetSegmentString, staticAccessors$28 );\n\nvar Angle = function Angle () {};\n\nvar staticAccessors$29 = { PI_TIMES_2: { configurable: true },PI_OVER_2: { configurable: true },PI_OVER_4: { configurable: true },COUNTERCLOCKWISE: { configurable: true },CLOCKWISE: { configurable: true },NONE: { configurable: true } };\n\nAngle.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nAngle.prototype.getClass = function getClass () {\n  return Angle\n};\nAngle.toDegrees = function toDegrees (radians) {\n  return radians * 180 / Math.PI\n};\nAngle.normalize = function normalize (angle) {\n  while (angle > Math.PI) { angle -= Angle.PI_TIMES_2; }\n  while (angle <= -Math.PI) { angle += Angle.PI_TIMES_2; }\n  return angle\n};\nAngle.angle = function angle () {\n  if (arguments.length === 1) {\n    var p = arguments[0];\n    return Math.atan2(p.y, p.x)\n  } else if (arguments.length === 2) {\n    var p0 = arguments[0];\n    var p1 = arguments[1];\n    var dx = p1.x - p0.x;\n    var dy = p1.y - p0.y;\n    return Math.atan2(dy, dx)\n  }\n};\nAngle.isAcute = function isAcute (p0, p1, p2) {\n  var dx0 = p0.x - p1.x;\n  var dy0 = p0.y - p1.y;\n  var dx1 = p2.x - p1.x;\n  var dy1 = p2.y - p1.y;\n  var dotprod = dx0 * dx1 + dy0 * dy1;\n  return dotprod > 0\n};\nAngle.isObtuse = function isObtuse (p0, p1, p2) {\n  var dx0 = p0.x - p1.x;\n  var dy0 = p0.y - p1.y;\n  var dx1 = p2.x - p1.x;\n  var dy1 = p2.y - p1.y;\n  var dotprod = dx0 * dx1 + dy0 * dy1;\n  return dotprod < 0\n};\nAngle.interiorAngle = function interiorAngle (p0, p1, p2) {\n  var anglePrev = Angle.angle(p1, p0);\n  var angleNext = Angle.angle(p1, p2);\n  return Math.abs(angleNext - anglePrev)\n};\nAngle.normalizePositive = function normalizePositive (angle) {\n  if (angle < 0.0) {\n    while (angle < 0.0) { angle += Angle.PI_TIMES_2; }\n    if (angle >= Angle.PI_TIMES_2) { angle = 0.0; }\n  } else {\n    while (angle >= Angle.PI_TIMES_2) { angle -= Angle.PI_TIMES_2; }\n    if (angle < 0.0) { angle = 0.0; }\n  }\n  return angle\n};\nAngle.angleBetween = function angleBetween (tip1, tail, tip2) {\n  var a1 = Angle.angle(tail, tip1);\n  var a2 = Angle.angle(tail, tip2);\n  return Angle.diff(a1, a2)\n};\nAngle.diff = function diff (ang1, ang2) {\n  var delAngle = null;\n  if (ang1 < ang2) {\n    delAngle = ang2 - ang1;\n  } else {\n    delAngle = ang1 - ang2;\n  }\n  if (delAngle > Math.PI) {\n    delAngle = 2 * Math.PI - delAngle;\n  }\n  return delAngle\n};\nAngle.toRadians = function toRadians (angleDegrees) {\n  return angleDegrees * Math.PI / 180.0\n};\nAngle.getTurn = function getTurn (ang1, ang2) {\n  var crossproduct = Math.sin(ang2 - ang1);\n  if (crossproduct > 0) {\n    return Angle.COUNTERCLOCKWISE\n  }\n  if (crossproduct < 0) {\n    return Angle.CLOCKWISE\n  }\n  return Angle.NONE\n};\nAngle.angleBetweenOriented = function angleBetweenOriented (tip1, tail, tip2) {\n  var a1 = Angle.angle(tail, tip1);\n  var a2 = Angle.angle(tail, tip2);\n  var angDel = a2 - a1;\n  if (angDel <= -Math.PI) { return angDel + Angle.PI_TIMES_2 }\n  if (angDel > Math.PI) { return angDel - Angle.PI_TIMES_2 }\n  return angDel\n};\nstaticAccessors$29.PI_TIMES_2.get = function () { return 2.0 * Math.PI };\nstaticAccessors$29.PI_OVER_2.get = function () { return Math.PI / 2.0 };\nstaticAccessors$29.PI_OVER_4.get = function () { return Math.PI / 4.0 };\nstaticAccessors$29.COUNTERCLOCKWISE.get = function () { return CGAlgorithms.COUNTERCLOCKWISE };\nstaticAccessors$29.CLOCKWISE.get = function () { return CGAlgorithms.CLOCKWISE };\nstaticAccessors$29.NONE.get = function () { return CGAlgorithms.COLLINEAR };\n\nObject.defineProperties( Angle, staticAccessors$29 );\n\nvar OffsetSegmentGenerator = function OffsetSegmentGenerator () {\n  this._maxCurveSegmentError = 0.0;\n  this._filletAngleQuantum = null;\n  this._closingSegLengthFactor = 1;\n  this._segList = null;\n  this._distance = 0.0;\n  this._precisionModel = null;\n  this._bufParams = null;\n  this._li = null;\n  this._s0 = null;\n  this._s1 = null;\n  this._s2 = null;\n  this._seg0 = new LineSegment();\n  this._seg1 = new LineSegment();\n  this._offset0 = new LineSegment();\n  this._offset1 = new LineSegment();\n  this._side = 0;\n  this._hasNarrowConcaveAngle = false;\n  var precisionModel = arguments[0];\n  var bufParams = arguments[1];\n  var distance = arguments[2];\n  this._precisionModel = precisionModel;\n  this._bufParams = bufParams;\n  this._li = new RobustLineIntersector();\n  this._filletAngleQuantum = Math.PI / 2.0 / bufParams.getQuadrantSegments();\n  if (bufParams.getQuadrantSegments() >= 8 && bufParams.getJoinStyle() === BufferParameters.JOIN_ROUND) { this._closingSegLengthFactor = OffsetSegmentGenerator.MAX_CLOSING_SEG_LEN_FACTOR; }\n  this.init(distance);\n};\n\nvar staticAccessors$27 = { OFFSET_SEGMENT_SEPARATION_FACTOR: { configurable: true },INSIDE_TURN_VERTEX_SNAP_DISTANCE_FACTOR: { configurable: true },CURVE_VERTEX_SNAP_DISTANCE_FACTOR: { configurable: true },MAX_CLOSING_SEG_LEN_FACTOR: { configurable: true } };\nOffsetSegmentGenerator.prototype.addNextSegment = function addNextSegment (p, addStartPoint) {\n  this._s0 = this._s1;\n  this._s1 = this._s2;\n  this._s2 = p;\n  this._seg0.setCoordinates(this._s0, this._s1);\n  this.computeOffsetSegment(this._seg0, this._side, this._distance, this._offset0);\n  this._seg1.setCoordinates(this._s1, this._s2);\n  this.computeOffsetSegment(this._seg1, this._side, this._distance, this._offset1);\n  if (this._s1.equals(this._s2)) { return null }\n  var orientation = CGAlgorithms.computeOrientation(this._s0, this._s1, this._s2);\n  var outsideTurn = (orientation === CGAlgorithms.CLOCKWISE && this._side === Position.LEFT) || (orientation === CGAlgorithms.COUNTERCLOCKWISE && this._side === Position.RIGHT);\n  if (orientation === 0) {\n    this.addCollinear(addStartPoint);\n  } else if (outsideTurn) {\n    this.addOutsideTurn(orientation, addStartPoint);\n  } else {\n    this.addInsideTurn(orientation, addStartPoint);\n  }\n};\nOffsetSegmentGenerator.prototype.addLineEndCap = function addLineEndCap (p0, p1) {\n  var seg = new LineSegment(p0, p1);\n  var offsetL = new LineSegment();\n  this.computeOffsetSegment(seg, Position.LEFT, this._distance, offsetL);\n  var offsetR = new LineSegment();\n  this.computeOffsetSegment(seg, Position.RIGHT, this._distance, offsetR);\n  var dx = p1.x - p0.x;\n  var dy = p1.y - p0.y;\n  var angle = Math.atan2(dy, dx);\n  switch (this._bufParams.getEndCapStyle()) {\n    case BufferParameters.CAP_ROUND:\n      this._segList.addPt(offsetL.p1);\n      this.addFilletArc(p1, angle + Math.PI / 2, angle - Math.PI / 2, CGAlgorithms.CLOCKWISE, this._distance);\n      this._segList.addPt(offsetR.p1);\n      break\n    case BufferParameters.CAP_FLAT:\n      this._segList.addPt(offsetL.p1);\n      this._segList.addPt(offsetR.p1);\n      break\n    case BufferParameters.CAP_SQUARE:\n      var squareCapSideOffset = new Coordinate();\n      squareCapSideOffset.x = Math.abs(this._distance) * Math.cos(angle);\n      squareCapSideOffset.y = Math.abs(this._distance) * Math.sin(angle);\n      var squareCapLOffset = new Coordinate(offsetL.p1.x + squareCapSideOffset.x, offsetL.p1.y + squareCapSideOffset.y);\n      var squareCapROffset = new Coordinate(offsetR.p1.x + squareCapSideOffset.x, offsetR.p1.y + squareCapSideOffset.y);\n      this._segList.addPt(squareCapLOffset);\n      this._segList.addPt(squareCapROffset);\n      break\n    default:\n  }\n};\nOffsetSegmentGenerator.prototype.getCoordinates = function getCoordinates () {\n  var pts = this._segList.getCoordinates();\n  return pts\n};\nOffsetSegmentGenerator.prototype.addMitreJoin = function addMitreJoin (p, offset0, offset1, distance) {\n  var isMitreWithinLimit = true;\n  var intPt = null;\n  try {\n    intPt = HCoordinate.intersection(offset0.p0, offset0.p1, offset1.p0, offset1.p1);\n    var mitreRatio = distance <= 0.0 ? 1.0 : intPt.distance(p) / Math.abs(distance);\n    if (mitreRatio > this._bufParams.getMitreLimit()) { isMitreWithinLimit = false; }\n  } catch (ex) {\n    if (ex instanceof NotRepresentableException) {\n      intPt = new Coordinate(0, 0);\n      isMitreWithinLimit = false;\n    } else { throw ex }\n  } finally {}\n  if (isMitreWithinLimit) {\n    this._segList.addPt(intPt);\n  } else {\n    this.addLimitedMitreJoin(offset0, offset1, distance, this._bufParams.getMitreLimit());\n  }\n};\nOffsetSegmentGenerator.prototype.addFilletCorner = function addFilletCorner (p, p0, p1, direction, radius) {\n  var dx0 = p0.x - p.x;\n  var dy0 = p0.y - p.y;\n  var startAngle = Math.atan2(dy0, dx0);\n  var dx1 = p1.x - p.x;\n  var dy1 = p1.y - p.y;\n  var endAngle = Math.atan2(dy1, dx1);\n  if (direction === CGAlgorithms.CLOCKWISE) {\n    if (startAngle <= endAngle) { startAngle += 2.0 * Math.PI; }\n  } else {\n    if (startAngle >= endAngle) { startAngle -= 2.0 * Math.PI; }\n  }\n  this._segList.addPt(p0);\n  this.addFilletArc(p, startAngle, endAngle, direction, radius);\n  this._segList.addPt(p1);\n};\nOffsetSegmentGenerator.prototype.addOutsideTurn = function addOutsideTurn (orientation, addStartPoint) {\n  if (this._offset0.p1.distance(this._offset1.p0) < this._distance * OffsetSegmentGenerator.OFFSET_SEGMENT_SEPARATION_FACTOR) {\n    this._segList.addPt(this._offset0.p1);\n    return null\n  }\n  if (this._bufParams.getJoinStyle() === BufferParameters.JOIN_MITRE) {\n    this.addMitreJoin(this._s1, this._offset0, this._offset1, this._distance);\n  } else if (this._bufParams.getJoinStyle() === BufferParameters.JOIN_BEVEL) {\n    this.addBevelJoin(this._offset0, this._offset1);\n  } else {\n    if (addStartPoint) { this._segList.addPt(this._offset0.p1); }\n    this.addFilletCorner(this._s1, this._offset0.p1, this._offset1.p0, orientation, this._distance);\n    this._segList.addPt(this._offset1.p0);\n  }\n};\nOffsetSegmentGenerator.prototype.createSquare = function createSquare (p) {\n  this._segList.addPt(new Coordinate(p.x + this._distance, p.y + this._distance));\n  this._segList.addPt(new Coordinate(p.x + this._distance, p.y - this._distance));\n  this._segList.addPt(new Coordinate(p.x - this._distance, p.y - this._distance));\n  this._segList.addPt(new Coordinate(p.x - this._distance, p.y + this._distance));\n  this._segList.closeRing();\n};\nOffsetSegmentGenerator.prototype.addSegments = function addSegments (pt, isForward) {\n  this._segList.addPts(pt, isForward);\n};\nOffsetSegmentGenerator.prototype.addFirstSegment = function addFirstSegment () {\n  this._segList.addPt(this._offset1.p0);\n};\nOffsetSegmentGenerator.prototype.addLastSegment = function addLastSegment () {\n  this._segList.addPt(this._offset1.p1);\n};\nOffsetSegmentGenerator.prototype.initSideSegments = function initSideSegments (s1, s2, side) {\n  this._s1 = s1;\n  this._s2 = s2;\n  this._side = side;\n  this._seg1.setCoordinates(s1, s2);\n  this.computeOffsetSegment(this._seg1, side, this._distance, this._offset1);\n};\nOffsetSegmentGenerator.prototype.addLimitedMitreJoin = function addLimitedMitreJoin (offset0, offset1, distance, mitreLimit) {\n  var basePt = this._seg0.p1;\n  var ang0 = Angle.angle(basePt, this._seg0.p0);\n  // const ang1 = Angle.angle(basePt, this._seg1.p1)\n  var angDiff = Angle.angleBetweenOriented(this._seg0.p0, basePt, this._seg1.p1);\n  var angDiffHalf = angDiff / 2;\n  var midAng = Angle.normalize(ang0 + angDiffHalf);\n  var mitreMidAng = Angle.normalize(midAng + Math.PI);\n  var mitreDist = mitreLimit * distance;\n  var bevelDelta = mitreDist * Math.abs(Math.sin(angDiffHalf));\n  var bevelHalfLen = distance - bevelDelta;\n  var bevelMidX = basePt.x + mitreDist * Math.cos(mitreMidAng);\n  var bevelMidY = basePt.y + mitreDist * Math.sin(mitreMidAng);\n  var bevelMidPt = new Coordinate(bevelMidX, bevelMidY);\n  var mitreMidLine = new LineSegment(basePt, bevelMidPt);\n  var bevelEndLeft = mitreMidLine.pointAlongOffset(1.0, bevelHalfLen);\n  var bevelEndRight = mitreMidLine.pointAlongOffset(1.0, -bevelHalfLen);\n  if (this._side === Position.LEFT) {\n    this._segList.addPt(bevelEndLeft);\n    this._segList.addPt(bevelEndRight);\n  } else {\n    this._segList.addPt(bevelEndRight);\n    this._segList.addPt(bevelEndLeft);\n  }\n};\nOffsetSegmentGenerator.prototype.computeOffsetSegment = function computeOffsetSegment (seg, side, distance, offset) {\n  var sideSign = side === Position.LEFT ? 1 : -1;\n  var dx = seg.p1.x - seg.p0.x;\n  var dy = seg.p1.y - seg.p0.y;\n  var len = Math.sqrt(dx * dx + dy * dy);\n  var ux = sideSign * distance * dx / len;\n  var uy = sideSign * distance * dy / len;\n  offset.p0.x = seg.p0.x - uy;\n  offset.p0.y = seg.p0.y + ux;\n  offset.p1.x = seg.p1.x - uy;\n  offset.p1.y = seg.p1.y + ux;\n};\nOffsetSegmentGenerator.prototype.addFilletArc = function addFilletArc (p, startAngle, endAngle, direction, radius) {\n    var this$1 = this;\n\n  var directionFactor = direction === CGAlgorithms.CLOCKWISE ? -1 : 1;\n  var totalAngle = Math.abs(startAngle - endAngle);\n  var nSegs = Math.trunc(totalAngle / this._filletAngleQuantum + 0.5);\n  if (nSegs < 1) { return null }\n  var initAngle = 0.0;\n  var currAngleInc = totalAngle / nSegs;\n  var currAngle = initAngle;\n  var pt = new Coordinate();\n  while (currAngle < totalAngle) {\n    var angle = startAngle + directionFactor * currAngle;\n    pt.x = p.x + radius * Math.cos(angle);\n    pt.y = p.y + radius * Math.sin(angle);\n    this$1._segList.addPt(pt);\n    currAngle += currAngleInc;\n  }\n};\nOffsetSegmentGenerator.prototype.addInsideTurn = function addInsideTurn (orientation, addStartPoint) {\n  this._li.computeIntersection(this._offset0.p0, this._offset0.p1, this._offset1.p0, this._offset1.p1);\n  if (this._li.hasIntersection()) {\n    this._segList.addPt(this._li.getIntersection(0));\n  } else {\n    this._hasNarrowConcaveAngle = true;\n    if (this._offset0.p1.distance(this._offset1.p0) < this._distance * OffsetSegmentGenerator.INSIDE_TURN_VERTEX_SNAP_DISTANCE_FACTOR) {\n      this._segList.addPt(this._offset0.p1);\n    } else {\n      this._segList.addPt(this._offset0.p1);\n      if (this._closingSegLengthFactor > 0) {\n        var mid0 = new Coordinate((this._closingSegLengthFactor * this._offset0.p1.x + this._s1.x) / (this._closingSegLengthFactor + 1), (this._closingSegLengthFactor * this._offset0.p1.y + this._s1.y) / (this._closingSegLengthFactor + 1));\n        this._segList.addPt(mid0);\n        var mid1 = new Coordinate((this._closingSegLengthFactor * this._offset1.p0.x + this._s1.x) / (this._closingSegLengthFactor + 1), (this._closingSegLengthFactor * this._offset1.p0.y + this._s1.y) / (this._closingSegLengthFactor + 1));\n        this._segList.addPt(mid1);\n      } else {\n        this._segList.addPt(this._s1);\n      }\n      this._segList.addPt(this._offset1.p0);\n    }\n  }\n};\nOffsetSegmentGenerator.prototype.createCircle = function createCircle (p) {\n  var pt = new Coordinate(p.x + this._distance, p.y);\n  this._segList.addPt(pt);\n  this.addFilletArc(p, 0.0, 2.0 * Math.PI, -1, this._distance);\n  this._segList.closeRing();\n};\nOffsetSegmentGenerator.prototype.addBevelJoin = function addBevelJoin (offset0, offset1) {\n  this._segList.addPt(offset0.p1);\n  this._segList.addPt(offset1.p0);\n};\nOffsetSegmentGenerator.prototype.init = function init (distance) {\n  this._distance = distance;\n  this._maxCurveSegmentError = distance * (1 - Math.cos(this._filletAngleQuantum / 2.0));\n  this._segList = new OffsetSegmentString();\n  this._segList.setPrecisionModel(this._precisionModel);\n  this._segList.setMinimumVertexDistance(distance * OffsetSegmentGenerator.CURVE_VERTEX_SNAP_DISTANCE_FACTOR);\n};\nOffsetSegmentGenerator.prototype.addCollinear = function addCollinear (addStartPoint) {\n  this._li.computeIntersection(this._s0, this._s1, this._s1, this._s2);\n  var numInt = this._li.getIntersectionNum();\n  if (numInt >= 2) {\n    if (this._bufParams.getJoinStyle() === BufferParameters.JOIN_BEVEL || this._bufParams.getJoinStyle() === BufferParameters.JOIN_MITRE) {\n      if (addStartPoint) { this._segList.addPt(this._offset0.p1); }\n      this._segList.addPt(this._offset1.p0);\n    } else {\n      this.addFilletCorner(this._s1, this._offset0.p1, this._offset1.p0, CGAlgorithms.CLOCKWISE, this._distance);\n    }\n  }\n};\nOffsetSegmentGenerator.prototype.closeRing = function closeRing () {\n  this._segList.closeRing();\n};\nOffsetSegmentGenerator.prototype.hasNarrowConcaveAngle = function hasNarrowConcaveAngle () {\n  return this._hasNarrowConcaveAngle\n};\nOffsetSegmentGenerator.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nOffsetSegmentGenerator.prototype.getClass = function getClass () {\n  return OffsetSegmentGenerator\n};\nstaticAccessors$27.OFFSET_SEGMENT_SEPARATION_FACTOR.get = function () { return 1.0E-3 };\nstaticAccessors$27.INSIDE_TURN_VERTEX_SNAP_DISTANCE_FACTOR.get = function () { return 1.0E-3 };\nstaticAccessors$27.CURVE_VERTEX_SNAP_DISTANCE_FACTOR.get = function () { return 1.0E-6 };\nstaticAccessors$27.MAX_CLOSING_SEG_LEN_FACTOR.get = function () { return 80 };\n\nObject.defineProperties( OffsetSegmentGenerator, staticAccessors$27 );\n\nvar OffsetCurveBuilder = function OffsetCurveBuilder () {\n  this._distance = 0.0;\n  this._precisionModel = null;\n  this._bufParams = null;\n  var precisionModel = arguments[0];\n  var bufParams = arguments[1];\n  this._precisionModel = precisionModel;\n  this._bufParams = bufParams;\n};\nOffsetCurveBuilder.prototype.getOffsetCurve = function getOffsetCurve (inputPts, distance) {\n  this._distance = distance;\n  if (distance === 0.0) { return null }\n  var isRightSide = distance < 0.0;\n  var posDistance = Math.abs(distance);\n  var segGen = this.getSegGen(posDistance);\n  if (inputPts.length <= 1) {\n    this.computePointCurve(inputPts[0], segGen);\n  } else {\n    this.computeOffsetCurve(inputPts, isRightSide, segGen);\n  }\n  var curvePts = segGen.getCoordinates();\n  if (isRightSide) { CoordinateArrays.reverse(curvePts); }\n  return curvePts\n};\nOffsetCurveBuilder.prototype.computeSingleSidedBufferCurve = function computeSingleSidedBufferCurve (inputPts, isRightSide, segGen) {\n  var distTol = this.simplifyTolerance(this._distance);\n  if (isRightSide) {\n    segGen.addSegments(inputPts, true);\n    var simp2 = BufferInputLineSimplifier.simplify(inputPts, -distTol);\n    var n2 = simp2.length - 1;\n    segGen.initSideSegments(simp2[n2], simp2[n2 - 1], Position.LEFT);\n    segGen.addFirstSegment();\n    for (var i = n2 - 2; i >= 0; i--) {\n      segGen.addNextSegment(simp2[i], true);\n    }\n  } else {\n    segGen.addSegments(inputPts, false);\n    var simp1 = BufferInputLineSimplifier.simplify(inputPts, distTol);\n    var n1 = simp1.length - 1;\n    segGen.initSideSegments(simp1[0], simp1[1], Position.LEFT);\n    segGen.addFirstSegment();\n    for (var i$1 = 2; i$1 <= n1; i$1++) {\n      segGen.addNextSegment(simp1[i$1], true);\n    }\n  }\n  segGen.addLastSegment();\n  segGen.closeRing();\n};\nOffsetCurveBuilder.prototype.computeRingBufferCurve = function computeRingBufferCurve (inputPts, side, segGen) {\n  var distTol = this.simplifyTolerance(this._distance);\n  if (side === Position.RIGHT) { distTol = -distTol; }\n  var simp = BufferInputLineSimplifier.simplify(inputPts, distTol);\n  var n = simp.length - 1;\n  segGen.initSideSegments(simp[n - 1], simp[0], side);\n  for (var i = 1; i <= n; i++) {\n    var addStartPoint = i !== 1;\n    segGen.addNextSegment(simp[i], addStartPoint);\n  }\n  segGen.closeRing();\n};\nOffsetCurveBuilder.prototype.computeLineBufferCurve = function computeLineBufferCurve (inputPts, segGen) {\n  var distTol = this.simplifyTolerance(this._distance);\n  var simp1 = BufferInputLineSimplifier.simplify(inputPts, distTol);\n  var n1 = simp1.length - 1;\n  segGen.initSideSegments(simp1[0], simp1[1], Position.LEFT);\n  for (var i = 2; i <= n1; i++) {\n    segGen.addNextSegment(simp1[i], true);\n  }\n  segGen.addLastSegment();\n  segGen.addLineEndCap(simp1[n1 - 1], simp1[n1]);\n  var simp2 = BufferInputLineSimplifier.simplify(inputPts, -distTol);\n  var n2 = simp2.length - 1;\n  segGen.initSideSegments(simp2[n2], simp2[n2 - 1], Position.LEFT);\n  for (var i$1 = n2 - 2; i$1 >= 0; i$1--) {\n    segGen.addNextSegment(simp2[i$1], true);\n  }\n  segGen.addLastSegment();\n  segGen.addLineEndCap(simp2[1], simp2[0]);\n  segGen.closeRing();\n};\nOffsetCurveBuilder.prototype.computePointCurve = function computePointCurve (pt, segGen) {\n  switch (this._bufParams.getEndCapStyle()) {\n    case BufferParameters.CAP_ROUND:\n      segGen.createCircle(pt);\n      break\n    case BufferParameters.CAP_SQUARE:\n      segGen.createSquare(pt);\n      break\n    default:\n  }\n};\nOffsetCurveBuilder.prototype.getLineCurve = function getLineCurve (inputPts, distance) {\n  this._distance = distance;\n  if (distance < 0.0 && !this._bufParams.isSingleSided()) { return null }\n  if (distance === 0.0) { return null }\n  var posDistance = Math.abs(distance);\n  var segGen = this.getSegGen(posDistance);\n  if (inputPts.length <= 1) {\n    this.computePointCurve(inputPts[0], segGen);\n  } else {\n    if (this._bufParams.isSingleSided()) {\n      var isRightSide = distance < 0.0;\n      this.computeSingleSidedBufferCurve(inputPts, isRightSide, segGen);\n    } else { this.computeLineBufferCurve(inputPts, segGen); }\n  }\n  var lineCoord = segGen.getCoordinates();\n  return lineCoord\n};\nOffsetCurveBuilder.prototype.getBufferParameters = function getBufferParameters () {\n  return this._bufParams\n};\nOffsetCurveBuilder.prototype.simplifyTolerance = function simplifyTolerance (bufDistance) {\n  return bufDistance * this._bufParams.getSimplifyFactor()\n};\nOffsetCurveBuilder.prototype.getRingCurve = function getRingCurve (inputPts, side, distance) {\n  this._distance = distance;\n  if (inputPts.length <= 2) { return this.getLineCurve(inputPts, distance) }\n  if (distance === 0.0) {\n    return OffsetCurveBuilder.copyCoordinates(inputPts)\n  }\n  var segGen = this.getSegGen(distance);\n  this.computeRingBufferCurve(inputPts, side, segGen);\n  return segGen.getCoordinates()\n};\nOffsetCurveBuilder.prototype.computeOffsetCurve = function computeOffsetCurve (inputPts, isRightSide, segGen) {\n  var distTol = this.simplifyTolerance(this._distance);\n  if (isRightSide) {\n    var simp2 = BufferInputLineSimplifier.simplify(inputPts, -distTol);\n    var n2 = simp2.length - 1;\n    segGen.initSideSegments(simp2[n2], simp2[n2 - 1], Position.LEFT);\n    segGen.addFirstSegment();\n    for (var i = n2 - 2; i >= 0; i--) {\n      segGen.addNextSegment(simp2[i], true);\n    }\n  } else {\n    var simp1 = BufferInputLineSimplifier.simplify(inputPts, distTol);\n    var n1 = simp1.length - 1;\n    segGen.initSideSegments(simp1[0], simp1[1], Position.LEFT);\n    segGen.addFirstSegment();\n    for (var i$1 = 2; i$1 <= n1; i$1++) {\n      segGen.addNextSegment(simp1[i$1], true);\n    }\n  }\n  segGen.addLastSegment();\n};\nOffsetCurveBuilder.prototype.getSegGen = function getSegGen (distance) {\n  return new OffsetSegmentGenerator(this._precisionModel, this._bufParams, distance)\n};\nOffsetCurveBuilder.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nOffsetCurveBuilder.prototype.getClass = function getClass () {\n  return OffsetCurveBuilder\n};\nOffsetCurveBuilder.copyCoordinates = function copyCoordinates (pts) {\n  var copy = new Array(pts.length).fill(null);\n  for (var i = 0; i < copy.length; i++) {\n    copy[i] = new Coordinate(pts[i]);\n  }\n  return copy\n};\n\nvar SubgraphDepthLocater = function SubgraphDepthLocater () {\n  this._subgraphs = null;\n  this._seg = new LineSegment();\n  this._cga = new CGAlgorithms();\n  var subgraphs = arguments[0];\n  this._subgraphs = subgraphs;\n};\n\nvar staticAccessors$30 = { DepthSegment: { configurable: true } };\nSubgraphDepthLocater.prototype.findStabbedSegments = function findStabbedSegments () {\n    var this$1 = this;\n\n  if (arguments.length === 1) {\n    var stabbingRayLeftPt = arguments[0];\n    var stabbedSegments = new ArrayList();\n    for (var i = this._subgraphs.iterator(); i.hasNext();) {\n      var bsg = i.next();\n      var env = bsg.getEnvelope();\n      if (stabbingRayLeftPt.y < env.getMinY() || stabbingRayLeftPt.y > env.getMaxY()) { continue }\n      this$1.findStabbedSegments(stabbingRayLeftPt, bsg.getDirectedEdges(), stabbedSegments);\n    }\n    return stabbedSegments\n  } else if (arguments.length === 3) {\n    if (hasInterface(arguments[2], List) && (arguments[0] instanceof Coordinate && arguments[1] instanceof DirectedEdge)) {\n      var stabbingRayLeftPt$1 = arguments[0];\n      var dirEdge = arguments[1];\n      var stabbedSegments$1 = arguments[2];\n      var pts = dirEdge.getEdge().getCoordinates();\n      for (var i$1 = 0; i$1 < pts.length - 1; i$1++) {\n        this$1._seg.p0 = pts[i$1];\n        this$1._seg.p1 = pts[i$1 + 1];\n        if (this$1._seg.p0.y > this$1._seg.p1.y) { this$1._seg.reverse(); }\n        var maxx = Math.max(this$1._seg.p0.x, this$1._seg.p1.x);\n        if (maxx < stabbingRayLeftPt$1.x) { continue }\n        if (this$1._seg.isHorizontal()) { continue }\n        if (stabbingRayLeftPt$1.y < this$1._seg.p0.y || stabbingRayLeftPt$1.y > this$1._seg.p1.y) { continue }\n        if (CGAlgorithms.computeOrientation(this$1._seg.p0, this$1._seg.p1, stabbingRayLeftPt$1) === CGAlgorithms.RIGHT) { continue }\n        var depth = dirEdge.getDepth(Position.LEFT);\n        if (!this$1._seg.p0.equals(pts[i$1])) { depth = dirEdge.getDepth(Position.RIGHT); }\n        var ds = new DepthSegment(this$1._seg, depth);\n        stabbedSegments$1.add(ds);\n      }\n    } else if (hasInterface(arguments[2], List) && (arguments[0] instanceof Coordinate && hasInterface(arguments[1], List))) {\n      var stabbingRayLeftPt$2 = arguments[0];\n      var dirEdges = arguments[1];\n      var stabbedSegments$2 = arguments[2];\n      for (var i$2 = dirEdges.iterator(); i$2.hasNext();) {\n        var de = i$2.next();\n        if (!de.isForward()) { continue }\n        this$1.findStabbedSegments(stabbingRayLeftPt$2, de, stabbedSegments$2);\n      }\n    }\n  }\n};\nSubgraphDepthLocater.prototype.getDepth = function getDepth (p) {\n  var stabbedSegments = this.findStabbedSegments(p);\n  if (stabbedSegments.size() === 0) { return 0 }\n  var ds = Collections.min(stabbedSegments);\n  return ds._leftDepth\n};\nSubgraphDepthLocater.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nSubgraphDepthLocater.prototype.getClass = function getClass () {\n  return SubgraphDepthLocater\n};\nstaticAccessors$30.DepthSegment.get = function () { return DepthSegment };\n\nObject.defineProperties( SubgraphDepthLocater, staticAccessors$30 );\n\nvar DepthSegment = function DepthSegment () {\n  this._upwardSeg = null;\n  this._leftDepth = null;\n  var seg = arguments[0];\n  var depth = arguments[1];\n  this._upwardSeg = new LineSegment(seg);\n  this._leftDepth = depth;\n};\nDepthSegment.prototype.compareTo = function compareTo (obj) {\n  var other = obj;\n  if (this._upwardSeg.minX() >= other._upwardSeg.maxX()) { return 1 }\n  if (this._upwardSeg.maxX() <= other._upwardSeg.minX()) { return -1 }\n  var orientIndex = this._upwardSeg.orientationIndex(other._upwardSeg);\n  if (orientIndex !== 0) { return orientIndex }\n  orientIndex = -1 * other._upwardSeg.orientationIndex(this._upwardSeg);\n  if (orientIndex !== 0) { return orientIndex }\n  return this._upwardSeg.compareTo(other._upwardSeg)\n};\nDepthSegment.prototype.compareX = function compareX (seg0, seg1) {\n  var compare0 = seg0.p0.compareTo(seg1.p0);\n  if (compare0 !== 0) { return compare0 }\n  return seg0.p1.compareTo(seg1.p1)\n};\nDepthSegment.prototype.toString = function toString () {\n  return this._upwardSeg.toString()\n};\nDepthSegment.prototype.interfaces_ = function interfaces_ () {\n  return [Comparable]\n};\nDepthSegment.prototype.getClass = function getClass () {\n  return DepthSegment\n};\n\nvar Triangle = function Triangle (p0, p1, p2) {\n  this.p0 = p0 || null;\n  this.p1 = p1 || null;\n  this.p2 = p2 || null;\n};\nTriangle.prototype.area = function area () {\n  return Triangle.area(this.p0, this.p1, this.p2)\n};\nTriangle.prototype.signedArea = function signedArea () {\n  return Triangle.signedArea(this.p0, this.p1, this.p2)\n};\nTriangle.prototype.interpolateZ = function interpolateZ (p) {\n  if (p === null) { throw new IllegalArgumentException('Supplied point is null.') }\n  return Triangle.interpolateZ(p, this.p0, this.p1, this.p2)\n};\nTriangle.prototype.longestSideLength = function longestSideLength () {\n  return Triangle.longestSideLength(this.p0, this.p1, this.p2)\n};\nTriangle.prototype.isAcute = function isAcute () {\n  return Triangle.isAcute(this.p0, this.p1, this.p2)\n};\nTriangle.prototype.circumcentre = function circumcentre () {\n  return Triangle.circumcentre(this.p0, this.p1, this.p2)\n};\nTriangle.prototype.area3D = function area3D () {\n  return Triangle.area3D(this.p0, this.p1, this.p2)\n};\nTriangle.prototype.centroid = function centroid () {\n  return Triangle.centroid(this.p0, this.p1, this.p2)\n};\nTriangle.prototype.inCentre = function inCentre () {\n  return Triangle.inCentre(this.p0, this.p1, this.p2)\n};\nTriangle.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nTriangle.prototype.getClass = function getClass () {\n  return Triangle\n};\nTriangle.area = function area (a, b, c) {\n  return Math.abs(((c.x - a.x) * (b.y - a.y) - (b.x - a.x) * (c.y - a.y)) / 2)\n};\nTriangle.signedArea = function signedArea (a, b, c) {\n  return ((c.x - a.x) * (b.y - a.y) - (b.x - a.x) * (c.y - a.y)) / 2\n};\nTriangle.det = function det (m00, m01, m10, m11) {\n  return m00 * m11 - m01 * m10\n};\nTriangle.interpolateZ = function interpolateZ (p, v0, v1, v2) {\n  var x0 = v0.x;\n  var y0 = v0.y;\n  var a = v1.x - x0;\n  var b = v2.x - x0;\n  var c = v1.y - y0;\n  var d = v2.y - y0;\n  var det = a * d - b * c;\n  var dx = p.x - x0;\n  var dy = p.y - y0;\n  var t = (d * dx - b * dy) / det;\n  var u = (-c * dx + a * dy) / det;\n  var z = v0.z + t * (v1.z - v0.z) + u * (v2.z - v0.z);\n  return z\n};\nTriangle.longestSideLength = function longestSideLength (a, b, c) {\n  var lenAB = a.distance(b);\n  var lenBC = b.distance(c);\n  var lenCA = c.distance(a);\n  var maxLen = lenAB;\n  if (lenBC > maxLen) { maxLen = lenBC; }\n  if (lenCA > maxLen) { maxLen = lenCA; }\n  return maxLen\n};\nTriangle.isAcute = function isAcute (a, b, c) {\n  if (!Angle.isAcute(a, b, c)) { return false }\n  if (!Angle.isAcute(b, c, a)) { return false }\n  if (!Angle.isAcute(c, a, b)) { return false }\n  return true\n};\nTriangle.circumcentre = function circumcentre (a, b, c) {\n  var cx = c.x;\n  var cy = c.y;\n  var ax = a.x - cx;\n  var ay = a.y - cy;\n  var bx = b.x - cx;\n  var by = b.y - cy;\n  var denom = 2 * Triangle.det(ax, ay, bx, by);\n  var numx = Triangle.det(ay, ax * ax + ay * ay, by, bx * bx + by * by);\n  var numy = Triangle.det(ax, ax * ax + ay * ay, bx, bx * bx + by * by);\n  var ccx = cx - numx / denom;\n  var ccy = cy + numy / denom;\n  return new Coordinate(ccx, ccy)\n};\nTriangle.perpendicularBisector = function perpendicularBisector (a, b) {\n  var dx = b.x - a.x;\n  var dy = b.y - a.y;\n  var l1 = new HCoordinate(a.x + dx / 2.0, a.y + dy / 2.0, 1.0);\n  var l2 = new HCoordinate(a.x - dy + dx / 2.0, a.y + dx + dy / 2.0, 1.0);\n  return new HCoordinate(l1, l2)\n};\nTriangle.angleBisector = function angleBisector (a, b, c) {\n  var len0 = b.distance(a);\n  var len2 = b.distance(c);\n  var frac = len0 / (len0 + len2);\n  var dx = c.x - a.x;\n  var dy = c.y - a.y;\n  var splitPt = new Coordinate(a.x + frac * dx, a.y + frac * dy);\n  return splitPt\n};\nTriangle.area3D = function area3D (a, b, c) {\n  var ux = b.x - a.x;\n  var uy = b.y - a.y;\n  var uz = b.z - a.z;\n  var vx = c.x - a.x;\n  var vy = c.y - a.y;\n  var vz = c.z - a.z;\n  var crossx = uy * vz - uz * vy;\n  var crossy = uz * vx - ux * vz;\n  var crossz = ux * vy - uy * vx;\n  var absSq = crossx * crossx + crossy * crossy + crossz * crossz;\n  var area3D = Math.sqrt(absSq) / 2;\n  return area3D\n};\nTriangle.centroid = function centroid (a, b, c) {\n  var x = (a.x + b.x + c.x) / 3;\n  var y = (a.y + b.y + c.y) / 3;\n  return new Coordinate(x, y)\n};\nTriangle.inCentre = function inCentre (a, b, c) {\n  var len0 = b.distance(c);\n  var len1 = a.distance(c);\n  var len2 = a.distance(b);\n  var circum = len0 + len1 + len2;\n  var inCentreX = (len0 * a.x + len1 * b.x + len2 * c.x) / circum;\n  var inCentreY = (len0 * a.y + len1 * b.y + len2 * c.y) / circum;\n  return new Coordinate(inCentreX, inCentreY)\n};\n\nvar OffsetCurveSetBuilder = function OffsetCurveSetBuilder () {\n  this._inputGeom = null;\n  this._distance = null;\n  this._curveBuilder = null;\n  this._curveList = new ArrayList();\n  var inputGeom = arguments[0];\n  var distance = arguments[1];\n  var curveBuilder = arguments[2];\n  this._inputGeom = inputGeom;\n  this._distance = distance;\n  this._curveBuilder = curveBuilder;\n};\nOffsetCurveSetBuilder.prototype.addPoint = function addPoint (p) {\n  if (this._distance <= 0.0) { return null }\n  var coord = p.getCoordinates();\n  var curve = this._curveBuilder.getLineCurve(coord, this._distance);\n  this.addCurve(curve, Location.EXTERIOR, Location.INTERIOR);\n};\nOffsetCurveSetBuilder.prototype.addPolygon = function addPolygon (p) {\n    var this$1 = this;\n\n  var offsetDistance = this._distance;\n  var offsetSide = Position.LEFT;\n  if (this._distance < 0.0) {\n    offsetDistance = -this._distance;\n    offsetSide = Position.RIGHT;\n  }\n  var shell = p.getExteriorRing();\n  var shellCoord = CoordinateArrays.removeRepeatedPoints(shell.getCoordinates());\n  if (this._distance < 0.0 && this.isErodedCompletely(shell, this._distance)) { return null }\n  if (this._distance <= 0.0 && shellCoord.length < 3) { return null }\n  this.addPolygonRing(shellCoord, offsetDistance, offsetSide, Location.EXTERIOR, Location.INTERIOR);\n  for (var i = 0; i < p.getNumInteriorRing(); i++) {\n    var hole = p.getInteriorRingN(i);\n    var holeCoord = CoordinateArrays.removeRepeatedPoints(hole.getCoordinates());\n    if (this$1._distance > 0.0 && this$1.isErodedCompletely(hole, -this$1._distance)) { continue }\n    this$1.addPolygonRing(holeCoord, offsetDistance, Position.opposite(offsetSide), Location.INTERIOR, Location.EXTERIOR);\n  }\n};\nOffsetCurveSetBuilder.prototype.isTriangleErodedCompletely = function isTriangleErodedCompletely (triangleCoord, bufferDistance) {\n  var tri = new Triangle(triangleCoord[0], triangleCoord[1], triangleCoord[2]);\n  var inCentre = tri.inCentre();\n  var distToCentre = CGAlgorithms.distancePointLine(inCentre, tri.p0, tri.p1);\n  return distToCentre < Math.abs(bufferDistance)\n};\nOffsetCurveSetBuilder.prototype.addLineString = function addLineString (line) {\n  if (this._distance <= 0.0 && !this._curveBuilder.getBufferParameters().isSingleSided()) { return null }\n  var coord = CoordinateArrays.removeRepeatedPoints(line.getCoordinates());\n  var curve = this._curveBuilder.getLineCurve(coord, this._distance);\n  this.addCurve(curve, Location.EXTERIOR, Location.INTERIOR);\n};\nOffsetCurveSetBuilder.prototype.addCurve = function addCurve (coord, leftLoc, rightLoc) {\n  if (coord === null || coord.length < 2) { return null }\n  var e = new NodedSegmentString(coord, new Label(0, Location.BOUNDARY, leftLoc, rightLoc));\n  this._curveList.add(e);\n};\nOffsetCurveSetBuilder.prototype.getCurves = function getCurves () {\n  this.add(this._inputGeom);\n  return this._curveList\n};\nOffsetCurveSetBuilder.prototype.addPolygonRing = function addPolygonRing (coord, offsetDistance, side, cwLeftLoc, cwRightLoc) {\n  if (offsetDistance === 0.0 && coord.length < LinearRing.MINIMUM_VALID_SIZE) { return null }\n  var leftLoc = cwLeftLoc;\n  var rightLoc = cwRightLoc;\n  if (coord.length >= LinearRing.MINIMUM_VALID_SIZE && CGAlgorithms.isCCW(coord)) {\n    leftLoc = cwRightLoc;\n    rightLoc = cwLeftLoc;\n    side = Position.opposite(side);\n  }\n  var curve = this._curveBuilder.getRingCurve(coord, side, offsetDistance);\n  this.addCurve(curve, leftLoc, rightLoc);\n};\nOffsetCurveSetBuilder.prototype.add = function add (g) {\n  if (g.isEmpty()) { return null }\n  if (g instanceof Polygon) { this.addPolygon(g); }\n  else if (g instanceof LineString) { this.addLineString(g); }\n  else if (g instanceof Point) { this.addPoint(g); }\n  else if (g instanceof MultiPoint) { this.addCollection(g); }\n  else if (g instanceof MultiLineString) { this.addCollection(g); }\n  else if (g instanceof MultiPolygon) { this.addCollection(g); }\n  else if (g instanceof GeometryCollection) { this.addCollection(g); }\n  // else throw new UnsupportedOperationException(g.getClass().getName())\n};\nOffsetCurveSetBuilder.prototype.isErodedCompletely = function isErodedCompletely (ring, bufferDistance) {\n  var ringCoord = ring.getCoordinates();\n  // const minDiam = 0.0\n  if (ringCoord.length < 4) { return bufferDistance < 0 }\n  if (ringCoord.length === 4) { return this.isTriangleErodedCompletely(ringCoord, bufferDistance) }\n  var env = ring.getEnvelopeInternal();\n  var envMinDimension = Math.min(env.getHeight(), env.getWidth());\n  if (bufferDistance < 0.0 && 2 * Math.abs(bufferDistance) > envMinDimension) { return true }\n  return false\n};\nOffsetCurveSetBuilder.prototype.addCollection = function addCollection (gc) {\n    var this$1 = this;\n\n  for (var i = 0; i < gc.getNumGeometries(); i++) {\n    var g = gc.getGeometryN(i);\n    this$1.add(g);\n  }\n};\nOffsetCurveSetBuilder.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nOffsetCurveSetBuilder.prototype.getClass = function getClass () {\n  return OffsetCurveSetBuilder\n};\n\nvar PointOnGeometryLocator = function PointOnGeometryLocator () {};\n\nPointOnGeometryLocator.prototype.locate = function locate (p) {};\nPointOnGeometryLocator.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nPointOnGeometryLocator.prototype.getClass = function getClass () {\n  return PointOnGeometryLocator\n};\n\nvar GeometryCollectionIterator = function GeometryCollectionIterator () {\n  this._parent = null;\n  this._atStart = null;\n  this._max = null;\n  this._index = null;\n  this._subcollectionIterator = null;\n  var parent = arguments[0];\n  this._parent = parent;\n  this._atStart = true;\n  this._index = 0;\n  this._max = parent.getNumGeometries();\n};\nGeometryCollectionIterator.prototype.next = function next () {\n  if (this._atStart) {\n    this._atStart = false;\n    if (GeometryCollectionIterator.isAtomic(this._parent)) { this._index++; }\n    return this._parent\n  }\n  if (this._subcollectionIterator !== null) {\n    if (this._subcollectionIterator.hasNext()) {\n      return this._subcollectionIterator.next()\n    } else {\n      this._subcollectionIterator = null;\n    }\n  }\n  if (this._index >= this._max) {\n    throw new NoSuchElementException()\n  }\n  var obj = this._parent.getGeometryN(this._index++);\n  if (obj instanceof GeometryCollection) {\n    this._subcollectionIterator = new GeometryCollectionIterator(obj);\n    return this._subcollectionIterator.next()\n  }\n  return obj\n};\nGeometryCollectionIterator.prototype.remove = function remove () {\n  throw new Error(this.getClass().getName())\n};\nGeometryCollectionIterator.prototype.hasNext = function hasNext () {\n  if (this._atStart) {\n    return true\n  }\n  if (this._subcollectionIterator !== null) {\n    if (this._subcollectionIterator.hasNext()) {\n      return true\n    }\n    this._subcollectionIterator = null;\n  }\n  if (this._index >= this._max) {\n    return false\n  }\n  return true\n};\nGeometryCollectionIterator.prototype.interfaces_ = function interfaces_ () {\n  return [Iterator]\n};\nGeometryCollectionIterator.prototype.getClass = function getClass () {\n  return GeometryCollectionIterator\n};\nGeometryCollectionIterator.isAtomic = function isAtomic (geom) {\n  return !(geom instanceof GeometryCollection)\n};\n\nvar SimplePointInAreaLocator = function SimplePointInAreaLocator () {\n  this._geom = null;\n  var geom = arguments[0];\n  this._geom = geom;\n};\nSimplePointInAreaLocator.prototype.locate = function locate (p) {\n  return SimplePointInAreaLocator.locate(p, this._geom)\n};\nSimplePointInAreaLocator.prototype.interfaces_ = function interfaces_ () {\n  return [PointOnGeometryLocator]\n};\nSimplePointInAreaLocator.prototype.getClass = function getClass () {\n  return SimplePointInAreaLocator\n};\nSimplePointInAreaLocator.isPointInRing = function isPointInRing (p, ring) {\n  if (!ring.getEnvelopeInternal().intersects(p)) { return false }\n  return CGAlgorithms.isPointInRing(p, ring.getCoordinates())\n};\nSimplePointInAreaLocator.containsPointInPolygon = function containsPointInPolygon (p, poly) {\n  if (poly.isEmpty()) { return false }\n  var shell = poly.getExteriorRing();\n  if (!SimplePointInAreaLocator.isPointInRing(p, shell)) { return false }\n  for (var i = 0; i < poly.getNumInteriorRing(); i++) {\n    var hole = poly.getInteriorRingN(i);\n    if (SimplePointInAreaLocator.isPointInRing(p, hole)) { return false }\n  }\n  return true\n};\nSimplePointInAreaLocator.containsPoint = function containsPoint (p, geom) {\n  if (geom instanceof Polygon) {\n    return SimplePointInAreaLocator.containsPointInPolygon(p, geom)\n  } else if (geom instanceof GeometryCollection) {\n    var geomi = new GeometryCollectionIterator(geom);\n    while (geomi.hasNext()) {\n      var g2 = geomi.next();\n      if (g2 !== geom) { if (SimplePointInAreaLocator.containsPoint(p, g2)) { return true } }\n    }\n  }\n  return false\n};\nSimplePointInAreaLocator.locate = function locate (p, geom) {\n  if (geom.isEmpty()) { return Location.EXTERIOR }\n  if (SimplePointInAreaLocator.containsPoint(p, geom)) { return Location.INTERIOR }\n  return Location.EXTERIOR\n};\n\nvar EdgeEndStar = function EdgeEndStar () {\n  this._edgeMap = new TreeMap();\n  this._edgeList = null;\n  this._ptInAreaLocation = [Location.NONE, Location.NONE];\n};\nEdgeEndStar.prototype.getNextCW = function getNextCW (ee) {\n  this.getEdges();\n  var i = this._edgeList.indexOf(ee);\n  var iNextCW = i - 1;\n  if (i === 0) { iNextCW = this._edgeList.size() - 1; }\n  return this._edgeList.get(iNextCW)\n};\nEdgeEndStar.prototype.propagateSideLabels = function propagateSideLabels (geomIndex) {\n  var startLoc = Location.NONE;\n  for (var it = this.iterator(); it.hasNext();) {\n    var e = it.next();\n    var label = e.getLabel();\n    if (label.isArea(geomIndex) && label.getLocation(geomIndex, Position.LEFT) !== Location.NONE) { startLoc = label.getLocation(geomIndex, Position.LEFT); }\n  }\n  if (startLoc === Location.NONE) { return null }\n  var currLoc = startLoc;\n  for (var it$1 = this.iterator(); it$1.hasNext();) {\n    var e$1 = it$1.next();\n    var label$1 = e$1.getLabel();\n    if (label$1.getLocation(geomIndex, Position.ON) === Location.NONE) { label$1.setLocation(geomIndex, Position.ON, currLoc); }\n    if (label$1.isArea(geomIndex)) {\n      var leftLoc = label$1.getLocation(geomIndex, Position.LEFT);\n      var rightLoc = label$1.getLocation(geomIndex, Position.RIGHT);\n      if (rightLoc !== Location.NONE) {\n        if (rightLoc !== currLoc) { throw new TopologyException('side location conflict', e$1.getCoordinate()) }\n        if (leftLoc === Location.NONE) {\n          Assert.shouldNeverReachHere('found single null side (at ' + e$1.getCoordinate() + ')');\n        }\n        currLoc = leftLoc;\n      } else {\n        Assert.isTrue(label$1.getLocation(geomIndex, Position.LEFT) === Location.NONE, 'found single null side');\n        label$1.setLocation(geomIndex, Position.RIGHT, currLoc);\n        label$1.setLocation(geomIndex, Position.LEFT, currLoc);\n      }\n    }\n  }\n};\nEdgeEndStar.prototype.getCoordinate = function getCoordinate () {\n  var it = this.iterator();\n  if (!it.hasNext()) { return null }\n  var e = it.next();\n  return e.getCoordinate()\n};\nEdgeEndStar.prototype.print = function print (out) {\n  System.out.println('EdgeEndStar:   ' + this.getCoordinate());\n  for (var it = this.iterator(); it.hasNext();) {\n    var e = it.next();\n    e.print(out);\n  }\n};\nEdgeEndStar.prototype.isAreaLabelsConsistent = function isAreaLabelsConsistent (geomGraph) {\n  this.computeEdgeEndLabels(geomGraph.getBoundaryNodeRule());\n  return this.checkAreaLabelsConsistent(0)\n};\nEdgeEndStar.prototype.checkAreaLabelsConsistent = function checkAreaLabelsConsistent (geomIndex) {\n  var edges = this.getEdges();\n  if (edges.size() <= 0) { return true }\n  var lastEdgeIndex = edges.size() - 1;\n  var startLabel = edges.get(lastEdgeIndex).getLabel();\n  var startLoc = startLabel.getLocation(geomIndex, Position.LEFT);\n  Assert.isTrue(startLoc !== Location.NONE, 'Found unlabelled area edge');\n  var currLoc = startLoc;\n  for (var it = this.iterator(); it.hasNext();) {\n    var e = it.next();\n    var label = e.getLabel();\n    Assert.isTrue(label.isArea(geomIndex), 'Found non-area edge');\n    var leftLoc = label.getLocation(geomIndex, Position.LEFT);\n    var rightLoc = label.getLocation(geomIndex, Position.RIGHT);\n    if (leftLoc === rightLoc) {\n      return false\n    }\n    if (rightLoc !== currLoc) {\n      return false\n    }\n    currLoc = leftLoc;\n  }\n  return true\n};\nEdgeEndStar.prototype.findIndex = function findIndex (eSearch) {\n    var this$1 = this;\n\n  this.iterator();\n  for (var i = 0; i < this._edgeList.size(); i++) {\n    var e = this$1._edgeList.get(i);\n    if (e === eSearch) { return i }\n  }\n  return -1\n};\nEdgeEndStar.prototype.iterator = function iterator () {\n  return this.getEdges().iterator()\n};\nEdgeEndStar.prototype.getEdges = function getEdges () {\n  if (this._edgeList === null) {\n    this._edgeList = new ArrayList(this._edgeMap.values());\n  }\n  return this._edgeList\n};\nEdgeEndStar.prototype.getLocation = function getLocation (geomIndex, p, geom) {\n  if (this._ptInAreaLocation[geomIndex] === Location.NONE) {\n    this._ptInAreaLocation[geomIndex] = SimplePointInAreaLocator.locate(p, geom[geomIndex].getGeometry());\n  }\n  return this._ptInAreaLocation[geomIndex]\n};\nEdgeEndStar.prototype.toString = function toString () {\n  var buf = new StringBuffer();\n  buf.append('EdgeEndStar:   ' + this.getCoordinate());\n  buf.append('\\n');\n  for (var it = this.iterator(); it.hasNext();) {\n    var e = it.next();\n    buf.append(e);\n    buf.append('\\n');\n  }\n  return buf.toString()\n};\nEdgeEndStar.prototype.computeEdgeEndLabels = function computeEdgeEndLabels (boundaryNodeRule) {\n  for (var it = this.iterator(); it.hasNext();) {\n    var ee = it.next();\n    ee.computeLabel(boundaryNodeRule);\n  }\n};\nEdgeEndStar.prototype.computeLabelling = function computeLabelling (geomGraph) {\n    var this$1 = this;\n\n  this.computeEdgeEndLabels(geomGraph[0].getBoundaryNodeRule());\n  this.propagateSideLabels(0);\n  this.propagateSideLabels(1);\n  var hasDimensionalCollapseEdge = [false, false];\n  for (var it = this.iterator(); it.hasNext();) {\n    var e = it.next();\n    var label = e.getLabel();\n    for (var geomi = 0; geomi < 2; geomi++) {\n      if (label.isLine(geomi) && label.getLocation(geomi) === Location.BOUNDARY) { hasDimensionalCollapseEdge[geomi] = true; }\n    }\n  }\n  for (var it$1 = this.iterator(); it$1.hasNext();) {\n    var e$1 = it$1.next();\n    var label$1 = e$1.getLabel();\n    for (var geomi$1 = 0; geomi$1 < 2; geomi$1++) {\n      if (label$1.isAnyNull(geomi$1)) {\n        var loc = Location.NONE;\n        if (hasDimensionalCollapseEdge[geomi$1]) {\n          loc = Location.EXTERIOR;\n        } else {\n          var p = e$1.getCoordinate();\n          loc = this$1.getLocation(geomi$1, p, geomGraph);\n        }\n        label$1.setAllLocationsIfNull(geomi$1, loc);\n      }\n    }\n  }\n};\nEdgeEndStar.prototype.getDegree = function getDegree () {\n  return this._edgeMap.size()\n};\nEdgeEndStar.prototype.insertEdgeEnd = function insertEdgeEnd (e, obj) {\n  this._edgeMap.put(e, obj);\n  this._edgeList = null;\n};\nEdgeEndStar.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nEdgeEndStar.prototype.getClass = function getClass () {\n  return EdgeEndStar\n};\n\nvar DirectedEdgeStar = (function (EdgeEndStar$$1) {\n  function DirectedEdgeStar () {\n    EdgeEndStar$$1.call(this);\n    this._resultAreaEdgeList = null;\n    this._label = null;\n    this._SCANNING_FOR_INCOMING = 1;\n    this._LINKING_TO_OUTGOING = 2;\n  }\n\n  if ( EdgeEndStar$$1 ) DirectedEdgeStar.__proto__ = EdgeEndStar$$1;\n  DirectedEdgeStar.prototype = Object.create( EdgeEndStar$$1 && EdgeEndStar$$1.prototype );\n  DirectedEdgeStar.prototype.constructor = DirectedEdgeStar;\n  DirectedEdgeStar.prototype.linkResultDirectedEdges = function linkResultDirectedEdges () {\n    var this$1 = this;\n\n    this.getResultAreaEdges();\n    var firstOut = null;\n    var incoming = null;\n    var state = this._SCANNING_FOR_INCOMING;\n    for (var i = 0; i < this._resultAreaEdgeList.size(); i++) {\n      var nextOut = this$1._resultAreaEdgeList.get(i);\n      var nextIn = nextOut.getSym();\n      if (!nextOut.getLabel().isArea()) { continue }\n      if (firstOut === null && nextOut.isInResult()) { firstOut = nextOut; }\n      switch (state) {\n        case this$1._SCANNING_FOR_INCOMING:\n          if (!nextIn.isInResult()) { continue }\n          incoming = nextIn;\n          state = this$1._LINKING_TO_OUTGOING;\n          break\n        case this$1._LINKING_TO_OUTGOING:\n          if (!nextOut.isInResult()) { continue }\n          incoming.setNext(nextOut);\n          state = this$1._SCANNING_FOR_INCOMING;\n          break\n        default:\n      }\n    }\n    if (state === this._LINKING_TO_OUTGOING) {\n      if (firstOut === null) { throw new TopologyException('no outgoing dirEdge found', this.getCoordinate()) }\n      Assert.isTrue(firstOut.isInResult(), 'unable to link last incoming dirEdge');\n      incoming.setNext(firstOut);\n    }\n  };\n  DirectedEdgeStar.prototype.insert = function insert (ee) {\n    var de = ee;\n    this.insertEdgeEnd(de, de);\n  };\n  DirectedEdgeStar.prototype.getRightmostEdge = function getRightmostEdge () {\n    var edges = this.getEdges();\n    var size = edges.size();\n    if (size < 1) { return null }\n    var de0 = edges.get(0);\n    if (size === 1) { return de0 }\n    var deLast = edges.get(size - 1);\n    var quad0 = de0.getQuadrant();\n    var quad1 = deLast.getQuadrant();\n    if (Quadrant.isNorthern(quad0) && Quadrant.isNorthern(quad1)) { return de0; } else if (!Quadrant.isNorthern(quad0) && !Quadrant.isNorthern(quad1)) { return deLast; } else {\n      // const nonHorizontalEdge = null\n      if (de0.getDy() !== 0) { return de0; } else if (deLast.getDy() !== 0) { return deLast }\n    }\n    Assert.shouldNeverReachHere('found two horizontal edges incident on node');\n    return null\n  };\n  DirectedEdgeStar.prototype.print = function print (out) {\n    System.out.println('DirectedEdgeStar: ' + this.getCoordinate());\n    for (var it = this.iterator(); it.hasNext();) {\n      var de = it.next();\n      out.print('out ');\n      de.print(out);\n      out.println();\n      out.print('in ');\n      de.getSym().print(out);\n      out.println();\n    }\n  };\n  DirectedEdgeStar.prototype.getResultAreaEdges = function getResultAreaEdges () {\n    var this$1 = this;\n\n    if (this._resultAreaEdgeList !== null) { return this._resultAreaEdgeList }\n    this._resultAreaEdgeList = new ArrayList();\n    for (var it = this.iterator(); it.hasNext();) {\n      var de = it.next();\n      if (de.isInResult() || de.getSym().isInResult()) { this$1._resultAreaEdgeList.add(de); }\n    }\n    return this._resultAreaEdgeList\n  };\n  DirectedEdgeStar.prototype.updateLabelling = function updateLabelling (nodeLabel) {\n    for (var it = this.iterator(); it.hasNext();) {\n      var de = it.next();\n      var label = de.getLabel();\n      label.setAllLocationsIfNull(0, nodeLabel.getLocation(0));\n      label.setAllLocationsIfNull(1, nodeLabel.getLocation(1));\n    }\n  };\n  DirectedEdgeStar.prototype.linkAllDirectedEdges = function linkAllDirectedEdges () {\n    var this$1 = this;\n\n    this.getEdges();\n    var prevOut = null;\n    var firstIn = null;\n    for (var i = this._edgeList.size() - 1; i >= 0; i--) {\n      var nextOut = this$1._edgeList.get(i);\n      var nextIn = nextOut.getSym();\n      if (firstIn === null) { firstIn = nextIn; }\n      if (prevOut !== null) { nextIn.setNext(prevOut); }\n      prevOut = nextOut;\n    }\n    firstIn.setNext(prevOut);\n  };\n  DirectedEdgeStar.prototype.computeDepths = function computeDepths () {\n    var this$1 = this;\n\n    if (arguments.length === 1) {\n      var de = arguments[0];\n      var edgeIndex = this.findIndex(de);\n      // const label = de.getLabel()\n      var startDepth = de.getDepth(Position.LEFT);\n      var targetLastDepth = de.getDepth(Position.RIGHT);\n      var nextDepth = this.computeDepths(edgeIndex + 1, this._edgeList.size(), startDepth);\n      var lastDepth = this.computeDepths(0, edgeIndex, nextDepth);\n      if (lastDepth !== targetLastDepth) { throw new TopologyException('depth mismatch at ' + de.getCoordinate()) }\n    } else if (arguments.length === 3) {\n      var startIndex = arguments[0];\n      var endIndex = arguments[1];\n      var startDepth$1 = arguments[2];\n      var currDepth = startDepth$1;\n      for (var i = startIndex; i < endIndex; i++) {\n        var nextDe = this$1._edgeList.get(i);\n        // const label = nextDe.getLabel()\n        nextDe.setEdgeDepths(Position.RIGHT, currDepth);\n        currDepth = nextDe.getDepth(Position.LEFT);\n      }\n      return currDepth\n    }\n  };\n  DirectedEdgeStar.prototype.mergeSymLabels = function mergeSymLabels () {\n    for (var it = this.iterator(); it.hasNext();) {\n      var de = it.next();\n      var label = de.getLabel();\n      label.merge(de.getSym().getLabel());\n    }\n  };\n  DirectedEdgeStar.prototype.linkMinimalDirectedEdges = function linkMinimalDirectedEdges (er) {\n    var this$1 = this;\n\n    var firstOut = null;\n    var incoming = null;\n    var state = this._SCANNING_FOR_INCOMING;\n    for (var i = this._resultAreaEdgeList.size() - 1; i >= 0; i--) {\n      var nextOut = this$1._resultAreaEdgeList.get(i);\n      var nextIn = nextOut.getSym();\n      if (firstOut === null && nextOut.getEdgeRing() === er) { firstOut = nextOut; }\n      switch (state) {\n        case this$1._SCANNING_FOR_INCOMING:\n          if (nextIn.getEdgeRing() !== er) { continue }\n          incoming = nextIn;\n          state = this$1._LINKING_TO_OUTGOING;\n          break\n        case this$1._LINKING_TO_OUTGOING:\n          if (nextOut.getEdgeRing() !== er) { continue }\n          incoming.setNextMin(nextOut);\n          state = this$1._SCANNING_FOR_INCOMING;\n          break\n        default:\n      }\n    }\n    if (state === this._LINKING_TO_OUTGOING) {\n      Assert.isTrue(firstOut !== null, 'found null for first outgoing dirEdge');\n      Assert.isTrue(firstOut.getEdgeRing() === er, 'unable to link last incoming dirEdge');\n      incoming.setNextMin(firstOut);\n    }\n  };\n  DirectedEdgeStar.prototype.getOutgoingDegree = function getOutgoingDegree () {\n    if (arguments.length === 0) {\n      var degree = 0;\n      for (var it = this.iterator(); it.hasNext();) {\n        var de = it.next();\n        if (de.isInResult()) { degree++; }\n      }\n      return degree\n    } else if (arguments.length === 1) {\n      var er = arguments[0];\n      var degree$1 = 0;\n      for (var it$1 = this.iterator(); it$1.hasNext();) {\n        var de$1 = it$1.next();\n        if (de$1.getEdgeRing() === er) { degree$1++; }\n      }\n      return degree$1\n    }\n  };\n  DirectedEdgeStar.prototype.getLabel = function getLabel () {\n    return this._label\n  };\n  DirectedEdgeStar.prototype.findCoveredLineEdges = function findCoveredLineEdges () {\n    var startLoc = Location.NONE;\n    for (var it = this.iterator(); it.hasNext();) {\n      var nextOut = it.next();\n      var nextIn = nextOut.getSym();\n      if (!nextOut.isLineEdge()) {\n        if (nextOut.isInResult()) {\n          startLoc = Location.INTERIOR;\n          break\n        }\n        if (nextIn.isInResult()) {\n          startLoc = Location.EXTERIOR;\n          break\n        }\n      }\n    }\n    if (startLoc === Location.NONE) { return null }\n    var currLoc = startLoc;\n    for (var it$1 = this.iterator(); it$1.hasNext();) {\n      var nextOut$1 = it$1.next();\n      var nextIn$1 = nextOut$1.getSym();\n      if (nextOut$1.isLineEdge()) {\n        nextOut$1.getEdge().setCovered(currLoc === Location.INTERIOR);\n      } else {\n        if (nextOut$1.isInResult()) { currLoc = Location.EXTERIOR; }\n        if (nextIn$1.isInResult()) { currLoc = Location.INTERIOR; }\n      }\n    }\n  };\n  DirectedEdgeStar.prototype.computeLabelling = function computeLabelling (geom) {\n    var this$1 = this;\n\n    EdgeEndStar$$1.prototype.computeLabelling.call(this, geom);\n    this._label = new Label(Location.NONE);\n    for (var it = this.iterator(); it.hasNext();) {\n      var ee = it.next();\n      var e = ee.getEdge();\n      var eLabel = e.getLabel();\n      for (var i = 0; i < 2; i++) {\n        var eLoc = eLabel.getLocation(i);\n        if (eLoc === Location.INTERIOR || eLoc === Location.BOUNDARY) { this$1._label.setLocation(i, Location.INTERIOR); }\n      }\n    }\n  };\n  DirectedEdgeStar.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  DirectedEdgeStar.prototype.getClass = function getClass () {\n    return DirectedEdgeStar\n  };\n\n  return DirectedEdgeStar;\n}(EdgeEndStar));\n\nvar OverlayNodeFactory = (function (NodeFactory$$1) {\n  function OverlayNodeFactory () {\n    NodeFactory$$1.apply(this, arguments);\n  }\n\n  if ( NodeFactory$$1 ) OverlayNodeFactory.__proto__ = NodeFactory$$1;\n  OverlayNodeFactory.prototype = Object.create( NodeFactory$$1 && NodeFactory$$1.prototype );\n  OverlayNodeFactory.prototype.constructor = OverlayNodeFactory;\n\n  OverlayNodeFactory.prototype.createNode = function createNode (coord) {\n    return new Node(coord, new DirectedEdgeStar())\n  };\n  OverlayNodeFactory.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  OverlayNodeFactory.prototype.getClass = function getClass () {\n    return OverlayNodeFactory\n  };\n\n  return OverlayNodeFactory;\n}(NodeFactory));\n\nvar OrientedCoordinateArray = function OrientedCoordinateArray () {\n  this._pts = null;\n  this._orientation = null;\n  var pts = arguments[0];\n  this._pts = pts;\n  this._orientation = OrientedCoordinateArray.orientation(pts);\n};\nOrientedCoordinateArray.prototype.compareTo = function compareTo (o1) {\n  var oca = o1;\n  var comp = OrientedCoordinateArray.compareOriented(this._pts, this._orientation, oca._pts, oca._orientation);\n  return comp\n};\nOrientedCoordinateArray.prototype.interfaces_ = function interfaces_ () {\n  return [Comparable]\n};\nOrientedCoordinateArray.prototype.getClass = function getClass () {\n  return OrientedCoordinateArray\n};\nOrientedCoordinateArray.orientation = function orientation (pts) {\n  return CoordinateArrays.increasingDirection(pts) === 1\n};\nOrientedCoordinateArray.compareOriented = function compareOriented (pts1, orientation1, pts2, orientation2) {\n  var dir1 = orientation1 ? 1 : -1;\n  var dir2 = orientation2 ? 1 : -1;\n  var limit1 = orientation1 ? pts1.length : -1;\n  var limit2 = orientation2 ? pts2.length : -1;\n  var i1 = orientation1 ? 0 : pts1.length - 1;\n  var i2 = orientation2 ? 0 : pts2.length - 1;\n  // const comp = 0\n  while (true) {\n    var compPt = pts1[i1].compareTo(pts2[i2]);\n    if (compPt !== 0) { return compPt }\n    i1 += dir1;\n    i2 += dir2;\n    var done1 = i1 === limit1;\n    var done2 = i2 === limit2;\n    if (done1 && !done2) { return -1 }\n    if (!done1 && done2) { return 1 }\n    if (done1 && done2) { return 0 }\n  }\n};\n\nvar EdgeList = function EdgeList () {\n  this._edges = new ArrayList();\n  this._ocaMap = new TreeMap();\n};\nEdgeList.prototype.print = function print (out) {\n    var this$1 = this;\n\n  out.print('MULTILINESTRING ( ');\n  for (var j = 0; j < this._edges.size(); j++) {\n    var e = this$1._edges.get(j);\n    if (j > 0) { out.print(','); }\n    out.print('(');\n    var pts = e.getCoordinates();\n    for (var i = 0; i < pts.length; i++) {\n      if (i > 0) { out.print(','); }\n      out.print(pts[i].x + ' ' + pts[i].y);\n    }\n    out.println(')');\n  }\n  out.print(')  ');\n};\nEdgeList.prototype.addAll = function addAll (edgeColl) {\n    var this$1 = this;\n\n  for (var i = edgeColl.iterator(); i.hasNext();) {\n    this$1.add(i.next());\n  }\n};\nEdgeList.prototype.findEdgeIndex = function findEdgeIndex (e) {\n    var this$1 = this;\n\n  for (var i = 0; i < this._edges.size(); i++) {\n    if (this$1._edges.get(i).equals(e)) { return i }\n  }\n  return -1\n};\nEdgeList.prototype.iterator = function iterator () {\n  return this._edges.iterator()\n};\nEdgeList.prototype.getEdges = function getEdges () {\n  return this._edges\n};\nEdgeList.prototype.get = function get (i) {\n  return this._edges.get(i)\n};\nEdgeList.prototype.findEqualEdge = function findEqualEdge (e) {\n  var oca = new OrientedCoordinateArray(e.getCoordinates());\n  var matchEdge = this._ocaMap.get(oca);\n  return matchEdge\n};\nEdgeList.prototype.add = function add (e) {\n  this._edges.add(e);\n  var oca = new OrientedCoordinateArray(e.getCoordinates());\n  this._ocaMap.put(oca, e);\n};\nEdgeList.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nEdgeList.prototype.getClass = function getClass () {\n  return EdgeList\n};\n\nvar SegmentIntersector = function SegmentIntersector () {};\n\nSegmentIntersector.prototype.processIntersections = function processIntersections (e0, segIndex0, e1, segIndex1) {};\nSegmentIntersector.prototype.isDone = function isDone () {};\nSegmentIntersector.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nSegmentIntersector.prototype.getClass = function getClass () {\n  return SegmentIntersector\n};\n\nvar IntersectionAdder = function IntersectionAdder () {\n  this._hasIntersection = false;\n  this._hasProper = false;\n  this._hasProperInterior = false;\n  this._hasInterior = false;\n  this._properIntersectionPoint = null;\n  this._li = null;\n  this._isSelfIntersection = null;\n  this.numIntersections = 0;\n  this.numInteriorIntersections = 0;\n  this.numProperIntersections = 0;\n  this.numTests = 0;\n  var li = arguments[0];\n  this._li = li;\n};\nIntersectionAdder.prototype.isTrivialIntersection = function isTrivialIntersection (e0, segIndex0, e1, segIndex1) {\n  if (e0 === e1) {\n    if (this._li.getIntersectionNum() === 1) {\n      if (IntersectionAdder.isAdjacentSegments(segIndex0, segIndex1)) { return true }\n      if (e0.isClosed()) {\n        var maxSegIndex = e0.size() - 1;\n        if ((segIndex0 === 0 && segIndex1 === maxSegIndex) ||\n            (segIndex1 === 0 && segIndex0 === maxSegIndex)) {\n          return true\n        }\n      }\n    }\n  }\n  return false\n};\nIntersectionAdder.prototype.getProperIntersectionPoint = function getProperIntersectionPoint () {\n  return this._properIntersectionPoint\n};\nIntersectionAdder.prototype.hasProperInteriorIntersection = function hasProperInteriorIntersection () {\n  return this._hasProperInterior\n};\nIntersectionAdder.prototype.getLineIntersector = function getLineIntersector () {\n  return this._li\n};\nIntersectionAdder.prototype.hasProperIntersection = function hasProperIntersection () {\n  return this._hasProper\n};\nIntersectionAdder.prototype.processIntersections = function processIntersections (e0, segIndex0, e1, segIndex1) {\n  if (e0 === e1 && segIndex0 === segIndex1) { return null }\n  this.numTests++;\n  var p00 = e0.getCoordinates()[segIndex0];\n  var p01 = e0.getCoordinates()[segIndex0 + 1];\n  var p10 = e1.getCoordinates()[segIndex1];\n  var p11 = e1.getCoordinates()[segIndex1 + 1];\n  this._li.computeIntersection(p00, p01, p10, p11);\n  if (this._li.hasIntersection()) {\n    this.numIntersections++;\n    if (this._li.isInteriorIntersection()) {\n      this.numInteriorIntersections++;\n      this._hasInterior = true;\n    }\n    if (!this.isTrivialIntersection(e0, segIndex0, e1, segIndex1)) {\n      this._hasIntersection = true;\n      e0.addIntersections(this._li, segIndex0, 0);\n      e1.addIntersections(this._li, segIndex1, 1);\n      if (this._li.isProper()) {\n        this.numProperIntersections++;\n        this._hasProper = true;\n        this._hasProperInterior = true;\n      }\n    }\n  }\n};\nIntersectionAdder.prototype.hasIntersection = function hasIntersection () {\n  return this._hasIntersection\n};\nIntersectionAdder.prototype.isDone = function isDone () {\n  return false\n};\nIntersectionAdder.prototype.hasInteriorIntersection = function hasInteriorIntersection () {\n  return this._hasInterior\n};\nIntersectionAdder.prototype.interfaces_ = function interfaces_ () {\n  return [SegmentIntersector]\n};\nIntersectionAdder.prototype.getClass = function getClass () {\n  return IntersectionAdder\n};\nIntersectionAdder.isAdjacentSegments = function isAdjacentSegments (i1, i2) {\n  return Math.abs(i1 - i2) === 1\n};\n\nvar EdgeIntersection = function EdgeIntersection () {\n  this.coord = null;\n  this.segmentIndex = null;\n  this.dist = null;\n  var coord = arguments[0];\n  var segmentIndex = arguments[1];\n  var dist = arguments[2];\n  this.coord = new Coordinate(coord);\n  this.segmentIndex = segmentIndex;\n  this.dist = dist;\n};\nEdgeIntersection.prototype.getSegmentIndex = function getSegmentIndex () {\n  return this.segmentIndex\n};\nEdgeIntersection.prototype.getCoordinate = function getCoordinate () {\n  return this.coord\n};\nEdgeIntersection.prototype.print = function print (out) {\n  out.print(this.coord);\n  out.print(' seg # = ' + this.segmentIndex);\n  out.println(' dist = ' + this.dist);\n};\nEdgeIntersection.prototype.compareTo = function compareTo (obj) {\n  var other = obj;\n  return this.compare(other.segmentIndex, other.dist)\n};\nEdgeIntersection.prototype.isEndPoint = function isEndPoint (maxSegmentIndex) {\n  if (this.segmentIndex === 0 && this.dist === 0.0) { return true }\n  if (this.segmentIndex === maxSegmentIndex) { return true }\n  return false\n};\nEdgeIntersection.prototype.toString = function toString () {\n  return this.coord + ' seg # = ' + this.segmentIndex + ' dist = ' + this.dist\n};\nEdgeIntersection.prototype.getDistance = function getDistance () {\n  return this.dist\n};\nEdgeIntersection.prototype.compare = function compare (segmentIndex, dist) {\n  if (this.segmentIndex < segmentIndex) { return -1 }\n  if (this.segmentIndex > segmentIndex) { return 1 }\n  if (this.dist < dist) { return -1 }\n  if (this.dist > dist) { return 1 }\n  return 0\n};\nEdgeIntersection.prototype.interfaces_ = function interfaces_ () {\n  return [Comparable]\n};\nEdgeIntersection.prototype.getClass = function getClass () {\n  return EdgeIntersection\n};\n\nvar EdgeIntersectionList = function EdgeIntersectionList () {\n  this._nodeMap = new TreeMap();\n  this.edge = null;\n  var edge = arguments[0];\n  this.edge = edge;\n};\nEdgeIntersectionList.prototype.print = function print (out) {\n  out.println('Intersections:');\n  for (var it = this.iterator(); it.hasNext();) {\n    var ei = it.next();\n    ei.print(out);\n  }\n};\nEdgeIntersectionList.prototype.iterator = function iterator () {\n  return this._nodeMap.values().iterator()\n};\nEdgeIntersectionList.prototype.addSplitEdges = function addSplitEdges (edgeList) {\n    var this$1 = this;\n\n  this.addEndpoints();\n  var it = this.iterator();\n  var eiPrev = it.next();\n  while (it.hasNext()) {\n    var ei = it.next();\n    var newEdge = this$1.createSplitEdge(eiPrev, ei);\n    edgeList.add(newEdge);\n    eiPrev = ei;\n  }\n};\nEdgeIntersectionList.prototype.addEndpoints = function addEndpoints () {\n  var maxSegIndex = this.edge.pts.length - 1;\n  this.add(this.edge.pts[0], 0, 0.0);\n  this.add(this.edge.pts[maxSegIndex], maxSegIndex, 0.0);\n};\nEdgeIntersectionList.prototype.createSplitEdge = function createSplitEdge (ei0, ei1) {\n    var this$1 = this;\n\n  var npts = ei1.segmentIndex - ei0.segmentIndex + 2;\n  var lastSegStartPt = this.edge.pts[ei1.segmentIndex];\n  var useIntPt1 = ei1.dist > 0.0 || !ei1.coord.equals2D(lastSegStartPt);\n  if (!useIntPt1) {\n    npts--;\n  }\n  var pts = new Array(npts).fill(null);\n  var ipt = 0;\n  pts[ipt++] = new Coordinate(ei0.coord);\n  for (var i = ei0.segmentIndex + 1; i <= ei1.segmentIndex; i++) {\n    pts[ipt++] = this$1.edge.pts[i];\n  }\n  if (useIntPt1) { pts[ipt] = ei1.coord; }\n  return new Edge(pts, new Label(this.edge._label))\n};\nEdgeIntersectionList.prototype.add = function add (intPt, segmentIndex, dist) {\n  var eiNew = new EdgeIntersection(intPt, segmentIndex, dist);\n  var ei = this._nodeMap.get(eiNew);\n  if (ei !== null) {\n    return ei\n  }\n  this._nodeMap.put(eiNew, eiNew);\n  return eiNew\n};\nEdgeIntersectionList.prototype.isIntersection = function isIntersection (pt) {\n  for (var it = this.iterator(); it.hasNext();) {\n    var ei = it.next();\n    if (ei.coord.equals(pt)) { return true }\n  }\n  return false\n};\nEdgeIntersectionList.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nEdgeIntersectionList.prototype.getClass = function getClass () {\n  return EdgeIntersectionList\n};\n\nvar MonotoneChainIndexer = function MonotoneChainIndexer () {};\n\nMonotoneChainIndexer.prototype.getChainStartIndices = function getChainStartIndices (pts) {\n    var this$1 = this;\n\n  var start = 0;\n  var startIndexList = new ArrayList();\n  startIndexList.add(new Integer(start));\n  do {\n    var last = this$1.findChainEnd(pts, start);\n    startIndexList.add(new Integer(last));\n    start = last;\n  } while (start < pts.length - 1)\n  var startIndex = MonotoneChainIndexer.toIntArray(startIndexList);\n  return startIndex\n};\nMonotoneChainIndexer.prototype.findChainEnd = function findChainEnd (pts, start) {\n  var chainQuad = Quadrant.quadrant(pts[start], pts[start + 1]);\n  var last = start + 1;\n  while (last < pts.length) {\n    var quad = Quadrant.quadrant(pts[last - 1], pts[last]);\n    if (quad !== chainQuad) { break }\n    last++;\n  }\n  return last - 1\n};\nMonotoneChainIndexer.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nMonotoneChainIndexer.prototype.getClass = function getClass () {\n  return MonotoneChainIndexer\n};\nMonotoneChainIndexer.toIntArray = function toIntArray (list) {\n  var array = new Array(list.size()).fill(null);\n  for (var i = 0; i < array.length; i++) {\n    array[i] = list.get(i).intValue();\n  }\n  return array\n};\n\nvar MonotoneChainEdge = function MonotoneChainEdge () {\n  this.e = null;\n  this.pts = null;\n  this.startIndex = null;\n  this.env1 = new Envelope();\n  this.env2 = new Envelope();\n  var e = arguments[0];\n  this.e = e;\n  this.pts = e.getCoordinates();\n  var mcb = new MonotoneChainIndexer();\n  this.startIndex = mcb.getChainStartIndices(this.pts);\n};\nMonotoneChainEdge.prototype.getCoordinates = function getCoordinates () {\n  return this.pts\n};\nMonotoneChainEdge.prototype.getMaxX = function getMaxX (chainIndex) {\n  var x1 = this.pts[this.startIndex[chainIndex]].x;\n  var x2 = this.pts[this.startIndex[chainIndex + 1]].x;\n  return x1 > x2 ? x1 : x2\n};\nMonotoneChainEdge.prototype.getMinX = function getMinX (chainIndex) {\n  var x1 = this.pts[this.startIndex[chainIndex]].x;\n  var x2 = this.pts[this.startIndex[chainIndex + 1]].x;\n  return x1 < x2 ? x1 : x2\n};\nMonotoneChainEdge.prototype.computeIntersectsForChain = function computeIntersectsForChain () {\n  if (arguments.length === 4) {\n    var chainIndex0 = arguments[0];\n    var mce = arguments[1];\n    var chainIndex1 = arguments[2];\n    var si = arguments[3];\n    this.computeIntersectsForChain(this.startIndex[chainIndex0], this.startIndex[chainIndex0 + 1], mce, mce.startIndex[chainIndex1], mce.startIndex[chainIndex1 + 1], si);\n  } else if (arguments.length === 6) {\n    var start0 = arguments[0];\n    var end0 = arguments[1];\n    var mce$1 = arguments[2];\n    var start1 = arguments[3];\n    var end1 = arguments[4];\n    var ei = arguments[5];\n    var p00 = this.pts[start0];\n    var p01 = this.pts[end0];\n    var p10 = mce$1.pts[start1];\n    var p11 = mce$1.pts[end1];\n    if (end0 - start0 === 1 && end1 - start1 === 1) {\n      ei.addIntersections(this.e, start0, mce$1.e, start1);\n      return null\n    }\n    this.env1.init(p00, p01);\n    this.env2.init(p10, p11);\n    if (!this.env1.intersects(this.env2)) { return null }\n    var mid0 = Math.trunc((start0 + end0) / 2);\n    var mid1 = Math.trunc((start1 + end1) / 2);\n    if (start0 < mid0) {\n      if (start1 < mid1) { this.computeIntersectsForChain(start0, mid0, mce$1, start1, mid1, ei); }\n      if (mid1 < end1) { this.computeIntersectsForChain(start0, mid0, mce$1, mid1, end1, ei); }\n    }\n    if (mid0 < end0) {\n      if (start1 < mid1) { this.computeIntersectsForChain(mid0, end0, mce$1, start1, mid1, ei); }\n      if (mid1 < end1) { this.computeIntersectsForChain(mid0, end0, mce$1, mid1, end1, ei); }\n    }\n  }\n};\nMonotoneChainEdge.prototype.getStartIndexes = function getStartIndexes () {\n  return this.startIndex\n};\nMonotoneChainEdge.prototype.computeIntersects = function computeIntersects (mce, si) {\n    var this$1 = this;\n\n  for (var i = 0; i < this.startIndex.length - 1; i++) {\n    for (var j = 0; j < mce.startIndex.length - 1; j++) {\n      this$1.computeIntersectsForChain(i, mce, j, si);\n    }\n  }\n};\nMonotoneChainEdge.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nMonotoneChainEdge.prototype.getClass = function getClass () {\n  return MonotoneChainEdge\n};\n\nvar Depth = function Depth () {\n  var this$1 = this;\n\n  this._depth = Array(2).fill().map(function () { return Array(3); });\n  for (var i = 0; i < 2; i++) {\n    for (var j = 0; j < 3; j++) {\n      this$1._depth[i][j] = Depth.NULL_VALUE;\n    }\n  }\n};\n\nvar staticAccessors$31 = { NULL_VALUE: { configurable: true } };\nDepth.prototype.getDepth = function getDepth (geomIndex, posIndex) {\n  return this._depth[geomIndex][posIndex]\n};\nDepth.prototype.setDepth = function setDepth (geomIndex, posIndex, depthValue) {\n  this._depth[geomIndex][posIndex] = depthValue;\n};\nDepth.prototype.isNull = function isNull () {\n    var this$1 = this;\n\n  if (arguments.length === 0) {\n    for (var i = 0; i < 2; i++) {\n      for (var j = 0; j < 3; j++) {\n        if (this$1._depth[i][j] !== Depth.NULL_VALUE) { return false }\n      }\n    }\n    return true\n  } else if (arguments.length === 1) {\n    var geomIndex = arguments[0];\n    return this._depth[geomIndex][1] === Depth.NULL_VALUE\n  } else if (arguments.length === 2) {\n    var geomIndex$1 = arguments[0];\n    var posIndex = arguments[1];\n    return this._depth[geomIndex$1][posIndex] === Depth.NULL_VALUE\n  }\n};\nDepth.prototype.normalize = function normalize () {\n    var this$1 = this;\n\n  for (var i = 0; i < 2; i++) {\n    if (!this$1.isNull(i)) {\n      var minDepth = this$1._depth[i][1];\n      if (this$1._depth[i][2] < minDepth) { minDepth = this$1._depth[i][2]; }\n      if (minDepth < 0) { minDepth = 0; }\n      for (var j = 1; j < 3; j++) {\n        var newValue = 0;\n        if (this$1._depth[i][j] > minDepth) { newValue = 1; }\n        this$1._depth[i][j] = newValue;\n      }\n    }\n  }\n};\nDepth.prototype.getDelta = function getDelta (geomIndex) {\n  return this._depth[geomIndex][Position.RIGHT] - this._depth[geomIndex][Position.LEFT]\n};\nDepth.prototype.getLocation = function getLocation (geomIndex, posIndex) {\n  if (this._depth[geomIndex][posIndex] <= 0) { return Location.EXTERIOR }\n  return Location.INTERIOR\n};\nDepth.prototype.toString = function toString () {\n  return 'A: ' + this._depth[0][1] + ',' + this._depth[0][2] + ' B: ' + this._depth[1][1] + ',' + this._depth[1][2]\n};\nDepth.prototype.add = function add () {\n    var this$1 = this;\n\n  if (arguments.length === 1) {\n    var lbl = arguments[0];\n    for (var i = 0; i < 2; i++) {\n      for (var j = 1; j < 3; j++) {\n        var loc = lbl.getLocation(i, j);\n        if (loc === Location.EXTERIOR || loc === Location.INTERIOR) {\n          if (this$1.isNull(i, j)) {\n            this$1._depth[i][j] = Depth.depthAtLocation(loc);\n          } else { this$1._depth[i][j] += Depth.depthAtLocation(loc); }\n        }\n      }\n    }\n  } else if (arguments.length === 3) {\n    var geomIndex = arguments[0];\n    var posIndex = arguments[1];\n    var location = arguments[2];\n    if (location === Location.INTERIOR) { this._depth[geomIndex][posIndex]++; }\n  }\n};\nDepth.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nDepth.prototype.getClass = function getClass () {\n  return Depth\n};\nDepth.depthAtLocation = function depthAtLocation (location) {\n  if (location === Location.EXTERIOR) { return 0 }\n  if (location === Location.INTERIOR) { return 1 }\n  return Depth.NULL_VALUE\n};\nstaticAccessors$31.NULL_VALUE.get = function () { return -1 };\n\nObject.defineProperties( Depth, staticAccessors$31 );\n\nvar Edge = (function (GraphComponent$$1) {\n  function Edge () {\n    GraphComponent$$1.call(this);\n    this.pts = null;\n    this._env = null;\n    this.eiList = new EdgeIntersectionList(this);\n    this._name = null;\n    this._mce = null;\n    this._isIsolated = true;\n    this._depth = new Depth();\n    this._depthDelta = 0;\n    if (arguments.length === 1) {\n      var pts = arguments[0];\n      Edge.call(this, pts, null);\n    } else if (arguments.length === 2) {\n      var pts$1 = arguments[0];\n      var label = arguments[1];\n      this.pts = pts$1;\n      this._label = label;\n    }\n  }\n\n  if ( GraphComponent$$1 ) Edge.__proto__ = GraphComponent$$1;\n  Edge.prototype = Object.create( GraphComponent$$1 && GraphComponent$$1.prototype );\n  Edge.prototype.constructor = Edge;\n  Edge.prototype.getDepth = function getDepth () {\n    return this._depth\n  };\n  Edge.prototype.getCollapsedEdge = function getCollapsedEdge () {\n    var newPts = new Array(2).fill(null);\n    newPts[0] = this.pts[0];\n    newPts[1] = this.pts[1];\n    var newe = new Edge(newPts, Label.toLineLabel(this._label));\n    return newe\n  };\n  Edge.prototype.isIsolated = function isIsolated () {\n    return this._isIsolated\n  };\n  Edge.prototype.getCoordinates = function getCoordinates () {\n    return this.pts\n  };\n  Edge.prototype.setIsolated = function setIsolated (isIsolated) {\n    this._isIsolated = isIsolated;\n  };\n  Edge.prototype.setName = function setName (name) {\n    this._name = name;\n  };\n  Edge.prototype.equals = function equals (o) {\n    var this$1 = this;\n\n    if (!(o instanceof Edge)) { return false }\n    var e = o;\n    if (this.pts.length !== e.pts.length) { return false }\n    var isEqualForward = true;\n    var isEqualReverse = true;\n    var iRev = this.pts.length;\n    for (var i = 0; i < this.pts.length; i++) {\n      if (!this$1.pts[i].equals2D(e.pts[i])) {\n        isEqualForward = false;\n      }\n      if (!this$1.pts[i].equals2D(e.pts[--iRev])) {\n        isEqualReverse = false;\n      }\n      if (!isEqualForward && !isEqualReverse) { return false }\n    }\n    return true\n  };\n  Edge.prototype.getCoordinate = function getCoordinate () {\n    if (arguments.length === 0) {\n      if (this.pts.length > 0) { return this.pts[0] }\n      return null\n    } else if (arguments.length === 1) {\n      var i = arguments[0];\n      return this.pts[i]\n    }\n  };\n  Edge.prototype.print = function print (out) {\n    var this$1 = this;\n\n    out.print('edge ' + this._name + ': ');\n    out.print('LINESTRING (');\n    for (var i = 0; i < this.pts.length; i++) {\n      if (i > 0) { out.print(','); }\n      out.print(this$1.pts[i].x + ' ' + this$1.pts[i].y);\n    }\n    out.print(')  ' + this._label + ' ' + this._depthDelta);\n  };\n  Edge.prototype.computeIM = function computeIM (im) {\n    Edge.updateIM(this._label, im);\n  };\n  Edge.prototype.isCollapsed = function isCollapsed () {\n    if (!this._label.isArea()) { return false }\n    if (this.pts.length !== 3) { return false }\n    if (this.pts[0].equals(this.pts[2])) { return true }\n    return false\n  };\n  Edge.prototype.isClosed = function isClosed () {\n    return this.pts[0].equals(this.pts[this.pts.length - 1])\n  };\n  Edge.prototype.getMaximumSegmentIndex = function getMaximumSegmentIndex () {\n    return this.pts.length - 1\n  };\n  Edge.prototype.getDepthDelta = function getDepthDelta () {\n    return this._depthDelta\n  };\n  Edge.prototype.getNumPoints = function getNumPoints () {\n    return this.pts.length\n  };\n  Edge.prototype.printReverse = function printReverse (out) {\n    var this$1 = this;\n\n    out.print('edge ' + this._name + ': ');\n    for (var i = this.pts.length - 1; i >= 0; i--) {\n      out.print(this$1.pts[i] + ' ');\n    }\n    out.println('');\n  };\n  Edge.prototype.getMonotoneChainEdge = function getMonotoneChainEdge () {\n    if (this._mce === null) { this._mce = new MonotoneChainEdge(this); }\n    return this._mce\n  };\n  Edge.prototype.getEnvelope = function getEnvelope () {\n    var this$1 = this;\n\n    if (this._env === null) {\n      this._env = new Envelope();\n      for (var i = 0; i < this.pts.length; i++) {\n        this$1._env.expandToInclude(this$1.pts[i]);\n      }\n    }\n    return this._env\n  };\n  Edge.prototype.addIntersection = function addIntersection (li, segmentIndex, geomIndex, intIndex) {\n    var intPt = new Coordinate(li.getIntersection(intIndex));\n    var normalizedSegmentIndex = segmentIndex;\n    var dist = li.getEdgeDistance(geomIndex, intIndex);\n    var nextSegIndex = normalizedSegmentIndex + 1;\n    if (nextSegIndex < this.pts.length) {\n      var nextPt = this.pts[nextSegIndex];\n      if (intPt.equals2D(nextPt)) {\n        normalizedSegmentIndex = nextSegIndex;\n        dist = 0.0;\n      }\n    }\n    this.eiList.add(intPt, normalizedSegmentIndex, dist);\n  };\n  Edge.prototype.toString = function toString () {\n    var this$1 = this;\n\n    var buf = new StringBuffer();\n    buf.append('edge ' + this._name + ': ');\n    buf.append('LINESTRING (');\n    for (var i = 0; i < this.pts.length; i++) {\n      if (i > 0) { buf.append(','); }\n      buf.append(this$1.pts[i].x + ' ' + this$1.pts[i].y);\n    }\n    buf.append(')  ' + this._label + ' ' + this._depthDelta);\n    return buf.toString()\n  };\n  Edge.prototype.isPointwiseEqual = function isPointwiseEqual (e) {\n    var this$1 = this;\n\n    if (this.pts.length !== e.pts.length) { return false }\n    for (var i = 0; i < this.pts.length; i++) {\n      if (!this$1.pts[i].equals2D(e.pts[i])) {\n        return false\n      }\n    }\n    return true\n  };\n  Edge.prototype.setDepthDelta = function setDepthDelta (depthDelta) {\n    this._depthDelta = depthDelta;\n  };\n  Edge.prototype.getEdgeIntersectionList = function getEdgeIntersectionList () {\n    return this.eiList\n  };\n  Edge.prototype.addIntersections = function addIntersections (li, segmentIndex, geomIndex) {\n    var this$1 = this;\n\n    for (var i = 0; i < li.getIntersectionNum(); i++) {\n      this$1.addIntersection(li, segmentIndex, geomIndex, i);\n    }\n  };\n  Edge.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  Edge.prototype.getClass = function getClass () {\n    return Edge\n  };\n  Edge.updateIM = function updateIM () {\n    if (arguments.length === 2) {\n      var label = arguments[0];\n      var im = arguments[1];\n      im.setAtLeastIfValid(label.getLocation(0, Position.ON), label.getLocation(1, Position.ON), 1);\n      if (label.isArea()) {\n        im.setAtLeastIfValid(label.getLocation(0, Position.LEFT), label.getLocation(1, Position.LEFT), 2);\n        im.setAtLeastIfValid(label.getLocation(0, Position.RIGHT), label.getLocation(1, Position.RIGHT), 2);\n      }\n    } else { return GraphComponent$$1.prototype.updateIM.apply(this, arguments) }\n  };\n\n  return Edge;\n}(GraphComponent));\n\nvar BufferBuilder = function BufferBuilder (bufParams) {\n  this._workingPrecisionModel = null;\n  this._workingNoder = null;\n  this._geomFact = null;\n  this._graph = null;\n  this._edgeList = new EdgeList();\n  this._bufParams = bufParams || null;\n};\nBufferBuilder.prototype.setWorkingPrecisionModel = function setWorkingPrecisionModel (pm) {\n  this._workingPrecisionModel = pm;\n};\nBufferBuilder.prototype.insertUniqueEdge = function insertUniqueEdge (e) {\n  var existingEdge = this._edgeList.findEqualEdge(e);\n  if (existingEdge !== null) {\n    var existingLabel = existingEdge.getLabel();\n    var labelToMerge = e.getLabel();\n    if (!existingEdge.isPointwiseEqual(e)) {\n      labelToMerge = new Label(e.getLabel());\n      labelToMerge.flip();\n    }\n    existingLabel.merge(labelToMerge);\n    var mergeDelta = BufferBuilder.depthDelta(labelToMerge);\n    var existingDelta = existingEdge.getDepthDelta();\n    var newDelta = existingDelta + mergeDelta;\n    existingEdge.setDepthDelta(newDelta);\n  } else {\n    this._edgeList.add(e);\n    e.setDepthDelta(BufferBuilder.depthDelta(e.getLabel()));\n  }\n};\nBufferBuilder.prototype.buildSubgraphs = function buildSubgraphs (subgraphList, polyBuilder) {\n  var processedGraphs = new ArrayList();\n  for (var i = subgraphList.iterator(); i.hasNext();) {\n    var subgraph = i.next();\n    var p = subgraph.getRightmostCoordinate();\n    var locater = new SubgraphDepthLocater(processedGraphs);\n    var outsideDepth = locater.getDepth(p);\n    subgraph.computeDepth(outsideDepth);\n    subgraph.findResultEdges();\n    processedGraphs.add(subgraph);\n    polyBuilder.add(subgraph.getDirectedEdges(), subgraph.getNodes());\n  }\n};\nBufferBuilder.prototype.createSubgraphs = function createSubgraphs (graph) {\n  var subgraphList = new ArrayList();\n  for (var i = graph.getNodes().iterator(); i.hasNext();) {\n    var node = i.next();\n    if (!node.isVisited()) {\n      var subgraph = new BufferSubgraph();\n      subgraph.create(node);\n      subgraphList.add(subgraph);\n    }\n  }\n  Collections.sort(subgraphList, Collections.reverseOrder());\n  return subgraphList\n};\nBufferBuilder.prototype.createEmptyResultGeometry = function createEmptyResultGeometry () {\n  var emptyGeom = this._geomFact.createPolygon();\n  return emptyGeom\n};\nBufferBuilder.prototype.getNoder = function getNoder (precisionModel) {\n  if (this._workingNoder !== null) { return this._workingNoder }\n  var noder = new MCIndexNoder();\n  var li = new RobustLineIntersector();\n  li.setPrecisionModel(precisionModel);\n  noder.setSegmentIntersector(new IntersectionAdder(li));\n  return noder\n};\nBufferBuilder.prototype.buffer = function buffer (g, distance) {\n  var precisionModel = this._workingPrecisionModel;\n  if (precisionModel === null) { precisionModel = g.getPrecisionModel(); }\n  this._geomFact = g.getFactory();\n  var curveBuilder = new OffsetCurveBuilder(precisionModel, this._bufParams);\n  var curveSetBuilder = new OffsetCurveSetBuilder(g, distance, curveBuilder);\n  var bufferSegStrList = curveSetBuilder.getCurves();\n  if (bufferSegStrList.size() <= 0) {\n    return this.createEmptyResultGeometry()\n  }\n  this.computeNodedEdges(bufferSegStrList, precisionModel);\n  this._graph = new PlanarGraph(new OverlayNodeFactory());\n  this._graph.addEdges(this._edgeList.getEdges());\n  var subgraphList = this.createSubgraphs(this._graph);\n  var polyBuilder = new PolygonBuilder(this._geomFact);\n  this.buildSubgraphs(subgraphList, polyBuilder);\n  var resultPolyList = polyBuilder.getPolygons();\n  if (resultPolyList.size() <= 0) {\n    return this.createEmptyResultGeometry()\n  }\n  var resultGeom = this._geomFact.buildGeometry(resultPolyList);\n  return resultGeom\n};\nBufferBuilder.prototype.computeNodedEdges = function computeNodedEdges (bufferSegStrList, precisionModel) {\n    var this$1 = this;\n\n  var noder = this.getNoder(precisionModel);\n  noder.computeNodes(bufferSegStrList);\n  var nodedSegStrings = noder.getNodedSubstrings();\n  for (var i = nodedSegStrings.iterator(); i.hasNext();) {\n    var segStr = i.next();\n    var pts = segStr.getCoordinates();\n    if (pts.length === 2 && pts[0].equals2D(pts[1])) { continue }\n    var oldLabel = segStr.getData();\n    var edge = new Edge(segStr.getCoordinates(), new Label(oldLabel));\n    this$1.insertUniqueEdge(edge);\n  }\n};\nBufferBuilder.prototype.setNoder = function setNoder (noder) {\n  this._workingNoder = noder;\n};\nBufferBuilder.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nBufferBuilder.prototype.getClass = function getClass () {\n  return BufferBuilder\n};\nBufferBuilder.depthDelta = function depthDelta (label) {\n  var lLoc = label.getLocation(0, Position.LEFT);\n  var rLoc = label.getLocation(0, Position.RIGHT);\n  if (lLoc === Location.INTERIOR && rLoc === Location.EXTERIOR) { return 1; } else if (lLoc === Location.EXTERIOR && rLoc === Location.INTERIOR) { return -1 }\n  return 0\n};\nBufferBuilder.convertSegStrings = function convertSegStrings (it) {\n  var fact = new GeometryFactory();\n  var lines = new ArrayList();\n  while (it.hasNext()) {\n    var ss = it.next();\n    var line = fact.createLineString(ss.getCoordinates());\n    lines.add(line);\n  }\n  return fact.buildGeometry(lines)\n};\n\nvar ScaledNoder = function ScaledNoder () {\n  this._noder = null;\n  this._scaleFactor = null;\n  this._offsetX = null;\n  this._offsetY = null;\n  this._isScaled = false;\n  if (arguments.length === 2) {\n    var noder = arguments[0];\n    var scaleFactor = arguments[1];\n    this._noder = noder;\n    this._scaleFactor = scaleFactor;\n    this._offsetX = 0.0;\n    this._offsetY = 0.0;\n    this._isScaled = !this.isIntegerPrecision();\n  } else if (arguments.length === 4) {\n    var noder$1 = arguments[0];\n    var scaleFactor$1 = arguments[1];\n    var offsetX = arguments[2];\n    var offsetY = arguments[3];\n    this._noder = noder$1;\n    this._scaleFactor = scaleFactor$1;\n    this._offsetX = offsetX;\n    this._offsetY = offsetY;\n    this._isScaled = !this.isIntegerPrecision();\n  }\n};\nScaledNoder.prototype.rescale = function rescale () {\n    var this$1 = this;\n\n  if (hasInterface(arguments[0], Collection)) {\n    var segStrings = arguments[0];\n    for (var i = segStrings.iterator(); i.hasNext();) {\n      var ss = i.next();\n      this$1.rescale(ss.getCoordinates());\n    }\n  } else if (arguments[0] instanceof Array) {\n    var pts = arguments[0];\n    // let p0 = null\n    // let p1 = null\n    // if (pts.length === 2) {\n    // p0 = new Coordinate(pts[0])\n    // p1 = new Coordinate(pts[1])\n    // }\n    for (var i$1 = 0; i$1 < pts.length; i$1++) {\n      pts[i$1].x = pts[i$1].x / this$1._scaleFactor + this$1._offsetX;\n      pts[i$1].y = pts[i$1].y / this$1._scaleFactor + this$1._offsetY;\n    }\n    if (pts.length === 2 && pts[0].equals2D(pts[1])) {\n      System.out.println(pts);\n    }\n  }\n};\nScaledNoder.prototype.scale = function scale () {\n    var this$1 = this;\n\n  if (hasInterface(arguments[0], Collection)) {\n    var segStrings = arguments[0];\n    var nodedSegmentStrings = new ArrayList();\n    for (var i = segStrings.iterator(); i.hasNext();) {\n      var ss = i.next();\n      nodedSegmentStrings.add(new NodedSegmentString(this$1.scale(ss.getCoordinates()), ss.getData()));\n    }\n    return nodedSegmentStrings\n  } else if (arguments[0] instanceof Array) {\n    var pts = arguments[0];\n    var roundPts = new Array(pts.length).fill(null);\n    for (var i$1 = 0; i$1 < pts.length; i$1++) {\n      roundPts[i$1] = new Coordinate(Math.round((pts[i$1].x - this$1._offsetX) * this$1._scaleFactor), Math.round((pts[i$1].y - this$1._offsetY) * this$1._scaleFactor), pts[i$1].z);\n    }\n    var roundPtsNoDup = CoordinateArrays.removeRepeatedPoints(roundPts);\n    return roundPtsNoDup\n  }\n};\nScaledNoder.prototype.isIntegerPrecision = function isIntegerPrecision () {\n  return this._scaleFactor === 1.0\n};\nScaledNoder.prototype.getNodedSubstrings = function getNodedSubstrings () {\n  var splitSS = this._noder.getNodedSubstrings();\n  if (this._isScaled) { this.rescale(splitSS); }\n  return splitSS\n};\nScaledNoder.prototype.computeNodes = function computeNodes (inputSegStrings) {\n  var intSegStrings = inputSegStrings;\n  if (this._isScaled) { intSegStrings = this.scale(inputSegStrings); }\n  this._noder.computeNodes(intSegStrings);\n};\nScaledNoder.prototype.interfaces_ = function interfaces_ () {\n  return [Noder]\n};\nScaledNoder.prototype.getClass = function getClass () {\n  return ScaledNoder\n};\n\nvar NodingValidator = function NodingValidator () {\n  this._li = new RobustLineIntersector();\n  this._segStrings = null;\n  var segStrings = arguments[0];\n  this._segStrings = segStrings;\n};\n\nvar staticAccessors$33 = { fact: { configurable: true } };\nNodingValidator.prototype.checkEndPtVertexIntersections = function checkEndPtVertexIntersections () {\n    var this$1 = this;\n\n  if (arguments.length === 0) {\n    for (var i = this._segStrings.iterator(); i.hasNext();) {\n      var ss = i.next();\n      var pts = ss.getCoordinates();\n      this$1.checkEndPtVertexIntersections(pts[0], this$1._segStrings);\n      this$1.checkEndPtVertexIntersections(pts[pts.length - 1], this$1._segStrings);\n    }\n  } else if (arguments.length === 2) {\n    var testPt = arguments[0];\n    var segStrings = arguments[1];\n    for (var i$1 = segStrings.iterator(); i$1.hasNext();) {\n      var ss$1 = i$1.next();\n      var pts$1 = ss$1.getCoordinates();\n      for (var j = 1; j < pts$1.length - 1; j++) {\n        if (pts$1[j].equals(testPt)) { throw new RuntimeException('found endpt/interior pt intersection at index ' + j + ' :pt ' + testPt) }\n      }\n    }\n  }\n};\nNodingValidator.prototype.checkInteriorIntersections = function checkInteriorIntersections () {\n    var this$1 = this;\n\n  if (arguments.length === 0) {\n    for (var i = this._segStrings.iterator(); i.hasNext();) {\n      var ss0 = i.next();\n      for (var j = this._segStrings.iterator(); j.hasNext();) {\n        var ss1 = j.next();\n        this$1.checkInteriorIntersections(ss0, ss1);\n      }\n    }\n  } else if (arguments.length === 2) {\n    var ss0$1 = arguments[0];\n    var ss1$1 = arguments[1];\n    var pts0 = ss0$1.getCoordinates();\n    var pts1 = ss1$1.getCoordinates();\n    for (var i0 = 0; i0 < pts0.length - 1; i0++) {\n      for (var i1 = 0; i1 < pts1.length - 1; i1++) {\n        this$1.checkInteriorIntersections(ss0$1, i0, ss1$1, i1);\n      }\n    }\n  } else if (arguments.length === 4) {\n    var e0 = arguments[0];\n    var segIndex0 = arguments[1];\n    var e1 = arguments[2];\n    var segIndex1 = arguments[3];\n    if (e0 === e1 && segIndex0 === segIndex1) { return null }\n    var p00 = e0.getCoordinates()[segIndex0];\n    var p01 = e0.getCoordinates()[segIndex0 + 1];\n    var p10 = e1.getCoordinates()[segIndex1];\n    var p11 = e1.getCoordinates()[segIndex1 + 1];\n    this._li.computeIntersection(p00, p01, p10, p11);\n    if (this._li.hasIntersection()) {\n      if (this._li.isProper() || this.hasInteriorIntersection(this._li, p00, p01) || this.hasInteriorIntersection(this._li, p10, p11)) {\n        throw new RuntimeException('found non-noded intersection at ' + p00 + '-' + p01 + ' and ' + p10 + '-' + p11)\n      }\n    }\n  }\n};\nNodingValidator.prototype.checkValid = function checkValid () {\n  this.checkEndPtVertexIntersections();\n  this.checkInteriorIntersections();\n  this.checkCollapses();\n};\nNodingValidator.prototype.checkCollapses = function checkCollapses () {\n    var this$1 = this;\n\n  if (arguments.length === 0) {\n    for (var i = this._segStrings.iterator(); i.hasNext();) {\n      var ss = i.next();\n      this$1.checkCollapses(ss);\n    }\n  } else if (arguments.length === 1) {\n    var ss$1 = arguments[0];\n    var pts = ss$1.getCoordinates();\n    for (var i$1 = 0; i$1 < pts.length - 2; i$1++) {\n      this$1.checkCollapse(pts[i$1], pts[i$1 + 1], pts[i$1 + 2]);\n    }\n  }\n};\nNodingValidator.prototype.hasInteriorIntersection = function hasInteriorIntersection (li, p0, p1) {\n  for (var i = 0; i < li.getIntersectionNum(); i++) {\n    var intPt = li.getIntersection(i);\n    if (!(intPt.equals(p0) || intPt.equals(p1))) { return true }\n  }\n  return false\n};\nNodingValidator.prototype.checkCollapse = function checkCollapse (p0, p1, p2) {\n  if (p0.equals(p2)) { throw new RuntimeException('found non-noded collapse at ' + NodingValidator.fact.createLineString([p0, p1, p2])) }\n};\nNodingValidator.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nNodingValidator.prototype.getClass = function getClass () {\n  return NodingValidator\n};\nstaticAccessors$33.fact.get = function () { return new GeometryFactory() };\n\nObject.defineProperties( NodingValidator, staticAccessors$33 );\n\nvar HotPixel = function HotPixel () {\n  this._li = null;\n  this._pt = null;\n  this._originalPt = null;\n  this._ptScaled = null;\n  this._p0Scaled = null;\n  this._p1Scaled = null;\n  this._scaleFactor = null;\n  this._minx = null;\n  this._maxx = null;\n  this._miny = null;\n  this._maxy = null;\n  this._corner = new Array(4).fill(null);\n  this._safeEnv = null;\n  var pt = arguments[0];\n  var scaleFactor = arguments[1];\n  var li = arguments[2];\n  this._originalPt = pt;\n  this._pt = pt;\n  this._scaleFactor = scaleFactor;\n  this._li = li;\n  if (scaleFactor <= 0) { throw new IllegalArgumentException('Scale factor must be non-zero') }\n  if (scaleFactor !== 1.0) {\n    this._pt = new Coordinate(this.scale(pt.x), this.scale(pt.y));\n    this._p0Scaled = new Coordinate();\n    this._p1Scaled = new Coordinate();\n  }\n  this.initCorners(this._pt);\n};\n\nvar staticAccessors$34 = { SAFE_ENV_EXPANSION_FACTOR: { configurable: true } };\nHotPixel.prototype.intersectsScaled = function intersectsScaled (p0, p1) {\n  var segMinx = Math.min(p0.x, p1.x);\n  var segMaxx = Math.max(p0.x, p1.x);\n  var segMiny = Math.min(p0.y, p1.y);\n  var segMaxy = Math.max(p0.y, p1.y);\n  var isOutsidePixelEnv = this._maxx < segMinx || this._minx > segMaxx || this._maxy < segMiny || this._miny > segMaxy;\n  if (isOutsidePixelEnv) { return false }\n  var intersects = this.intersectsToleranceSquare(p0, p1);\n  Assert.isTrue(!(isOutsidePixelEnv && intersects), 'Found bad envelope test');\n  return intersects\n};\nHotPixel.prototype.initCorners = function initCorners (pt) {\n  var tolerance = 0.5;\n  this._minx = pt.x - tolerance;\n  this._maxx = pt.x + tolerance;\n  this._miny = pt.y - tolerance;\n  this._maxy = pt.y + tolerance;\n  this._corner[0] = new Coordinate(this._maxx, this._maxy);\n  this._corner[1] = new Coordinate(this._minx, this._maxy);\n  this._corner[2] = new Coordinate(this._minx, this._miny);\n  this._corner[3] = new Coordinate(this._maxx, this._miny);\n};\nHotPixel.prototype.intersects = function intersects (p0, p1) {\n  if (this._scaleFactor === 1.0) { return this.intersectsScaled(p0, p1) }\n  this.copyScaled(p0, this._p0Scaled);\n  this.copyScaled(p1, this._p1Scaled);\n  return this.intersectsScaled(this._p0Scaled, this._p1Scaled)\n};\nHotPixel.prototype.scale = function scale (val) {\n  return Math.round(val * this._scaleFactor)\n};\nHotPixel.prototype.getCoordinate = function getCoordinate () {\n  return this._originalPt\n};\nHotPixel.prototype.copyScaled = function copyScaled (p, pScaled) {\n  pScaled.x = this.scale(p.x);\n  pScaled.y = this.scale(p.y);\n};\nHotPixel.prototype.getSafeEnvelope = function getSafeEnvelope () {\n  if (this._safeEnv === null) {\n    var safeTolerance = HotPixel.SAFE_ENV_EXPANSION_FACTOR / this._scaleFactor;\n    this._safeEnv = new Envelope(this._originalPt.x - safeTolerance, this._originalPt.x + safeTolerance, this._originalPt.y - safeTolerance, this._originalPt.y + safeTolerance);\n  }\n  return this._safeEnv\n};\nHotPixel.prototype.intersectsPixelClosure = function intersectsPixelClosure (p0, p1) {\n  this._li.computeIntersection(p0, p1, this._corner[0], this._corner[1]);\n  if (this._li.hasIntersection()) { return true }\n  this._li.computeIntersection(p0, p1, this._corner[1], this._corner[2]);\n  if (this._li.hasIntersection()) { return true }\n  this._li.computeIntersection(p0, p1, this._corner[2], this._corner[3]);\n  if (this._li.hasIntersection()) { return true }\n  this._li.computeIntersection(p0, p1, this._corner[3], this._corner[0]);\n  if (this._li.hasIntersection()) { return true }\n  return false\n};\nHotPixel.prototype.intersectsToleranceSquare = function intersectsToleranceSquare (p0, p1) {\n  var intersectsLeft = false;\n  var intersectsBottom = false;\n  this._li.computeIntersection(p0, p1, this._corner[0], this._corner[1]);\n  if (this._li.isProper()) { return true }\n  this._li.computeIntersection(p0, p1, this._corner[1], this._corner[2]);\n  if (this._li.isProper()) { return true }\n  if (this._li.hasIntersection()) { intersectsLeft = true; }\n  this._li.computeIntersection(p0, p1, this._corner[2], this._corner[3]);\n  if (this._li.isProper()) { return true }\n  if (this._li.hasIntersection()) { intersectsBottom = true; }\n  this._li.computeIntersection(p0, p1, this._corner[3], this._corner[0]);\n  if (this._li.isProper()) { return true }\n  if (intersectsLeft && intersectsBottom) { return true }\n  if (p0.equals(this._pt)) { return true }\n  if (p1.equals(this._pt)) { return true }\n  return false\n};\nHotPixel.prototype.addSnappedNode = function addSnappedNode (segStr, segIndex) {\n  var p0 = segStr.getCoordinate(segIndex);\n  var p1 = segStr.getCoordinate(segIndex + 1);\n  if (this.intersects(p0, p1)) {\n    segStr.addIntersection(this.getCoordinate(), segIndex);\n    return true\n  }\n  return false\n};\nHotPixel.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nHotPixel.prototype.getClass = function getClass () {\n  return HotPixel\n};\nstaticAccessors$34.SAFE_ENV_EXPANSION_FACTOR.get = function () { return 0.75 };\n\nObject.defineProperties( HotPixel, staticAccessors$34 );\n\nvar MonotoneChainSelectAction = function MonotoneChainSelectAction () {\n  this.tempEnv1 = new Envelope();\n  this.selectedSegment = new LineSegment();\n};\nMonotoneChainSelectAction.prototype.select = function select () {\n  if (arguments.length === 1) {\n    // const seg = arguments[0]\n  } else if (arguments.length === 2) {\n    var mc = arguments[0];\n    var startIndex = arguments[1];\n    mc.getLineSegment(startIndex, this.selectedSegment);\n    this.select(this.selectedSegment);\n  }\n};\nMonotoneChainSelectAction.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nMonotoneChainSelectAction.prototype.getClass = function getClass () {\n  return MonotoneChainSelectAction\n};\n\nvar MCIndexPointSnapper = function MCIndexPointSnapper () {\n  this._index = null;\n  var index = arguments[0];\n  this._index = index;\n};\n\nvar staticAccessors$35 = { HotPixelSnapAction: { configurable: true } };\nMCIndexPointSnapper.prototype.snap = function snap () {\n  if (arguments.length === 1) {\n    var hotPixel = arguments[0];\n    return this.snap(hotPixel, null, -1)\n  } else if (arguments.length === 3) {\n    var hotPixel$1 = arguments[0];\n    var parentEdge = arguments[1];\n    var hotPixelVertexIndex = arguments[2];\n    var pixelEnv = hotPixel$1.getSafeEnvelope();\n    var hotPixelSnapAction = new HotPixelSnapAction(hotPixel$1, parentEdge, hotPixelVertexIndex);\n    this._index.query(pixelEnv, {\n      interfaces_: function () {\n        return [ItemVisitor]\n      },\n      visitItem: function (item) {\n        var testChain = item;\n        testChain.select(pixelEnv, hotPixelSnapAction);\n      }\n    });\n    return hotPixelSnapAction.isNodeAdded()\n  }\n};\nMCIndexPointSnapper.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nMCIndexPointSnapper.prototype.getClass = function getClass () {\n  return MCIndexPointSnapper\n};\nstaticAccessors$35.HotPixelSnapAction.get = function () { return HotPixelSnapAction };\n\nObject.defineProperties( MCIndexPointSnapper, staticAccessors$35 );\n\nvar HotPixelSnapAction = (function (MonotoneChainSelectAction$$1) {\n  function HotPixelSnapAction () {\n    MonotoneChainSelectAction$$1.call(this);\n    this._hotPixel = null;\n    this._parentEdge = null;\n    this._hotPixelVertexIndex = null;\n    this._isNodeAdded = false;\n    var hotPixel = arguments[0];\n    var parentEdge = arguments[1];\n    var hotPixelVertexIndex = arguments[2];\n    this._hotPixel = hotPixel;\n    this._parentEdge = parentEdge;\n    this._hotPixelVertexIndex = hotPixelVertexIndex;\n  }\n\n  if ( MonotoneChainSelectAction$$1 ) HotPixelSnapAction.__proto__ = MonotoneChainSelectAction$$1;\n  HotPixelSnapAction.prototype = Object.create( MonotoneChainSelectAction$$1 && MonotoneChainSelectAction$$1.prototype );\n  HotPixelSnapAction.prototype.constructor = HotPixelSnapAction;\n  HotPixelSnapAction.prototype.isNodeAdded = function isNodeAdded () {\n    return this._isNodeAdded\n  };\n  HotPixelSnapAction.prototype.select = function select () {\n    if (arguments.length === 2) {\n      var mc = arguments[0];\n      var startIndex = arguments[1];\n      var ss = mc.getContext();\n      if (this._parentEdge !== null) {\n        if (ss === this._parentEdge && startIndex === this._hotPixelVertexIndex) { return null }\n      }\n      this._isNodeAdded = this._hotPixel.addSnappedNode(ss, startIndex);\n    } else { return MonotoneChainSelectAction$$1.prototype.select.apply(this, arguments) }\n  };\n  HotPixelSnapAction.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  HotPixelSnapAction.prototype.getClass = function getClass () {\n    return HotPixelSnapAction\n  };\n\n  return HotPixelSnapAction;\n}(MonotoneChainSelectAction));\n\nvar InteriorIntersectionFinderAdder = function InteriorIntersectionFinderAdder () {\n  this._li = null;\n  this._interiorIntersections = null;\n  var li = arguments[0];\n  this._li = li;\n  this._interiorIntersections = new ArrayList();\n};\nInteriorIntersectionFinderAdder.prototype.processIntersections = function processIntersections (e0, segIndex0, e1, segIndex1) {\n    var this$1 = this;\n\n  if (e0 === e1 && segIndex0 === segIndex1) { return null }\n  var p00 = e0.getCoordinates()[segIndex0];\n  var p01 = e0.getCoordinates()[segIndex0 + 1];\n  var p10 = e1.getCoordinates()[segIndex1];\n  var p11 = e1.getCoordinates()[segIndex1 + 1];\n  this._li.computeIntersection(p00, p01, p10, p11);\n  if (this._li.hasIntersection()) {\n    if (this._li.isInteriorIntersection()) {\n      for (var intIndex = 0; intIndex < this._li.getIntersectionNum(); intIndex++) {\n        this$1._interiorIntersections.add(this$1._li.getIntersection(intIndex));\n      }\n      e0.addIntersections(this._li, segIndex0, 0);\n      e1.addIntersections(this._li, segIndex1, 1);\n    }\n  }\n};\nInteriorIntersectionFinderAdder.prototype.isDone = function isDone () {\n  return false\n};\nInteriorIntersectionFinderAdder.prototype.getInteriorIntersections = function getInteriorIntersections () {\n  return this._interiorIntersections\n};\nInteriorIntersectionFinderAdder.prototype.interfaces_ = function interfaces_ () {\n  return [SegmentIntersector]\n};\nInteriorIntersectionFinderAdder.prototype.getClass = function getClass () {\n  return InteriorIntersectionFinderAdder\n};\n\nvar MCIndexSnapRounder = function MCIndexSnapRounder () {\n  this._pm = null;\n  this._li = null;\n  this._scaleFactor = null;\n  this._noder = null;\n  this._pointSnapper = null;\n  this._nodedSegStrings = null;\n  var pm = arguments[0];\n  this._pm = pm;\n  this._li = new RobustLineIntersector();\n  this._li.setPrecisionModel(pm);\n  this._scaleFactor = pm.getScale();\n};\nMCIndexSnapRounder.prototype.checkCorrectness = function checkCorrectness (inputSegmentStrings) {\n  var resultSegStrings = NodedSegmentString.getNodedSubstrings(inputSegmentStrings);\n  var nv = new NodingValidator(resultSegStrings);\n  try {\n    nv.checkValid();\n  } catch (ex) {\n    if (ex instanceof Exception) {\n      ex.printStackTrace();\n    } else { throw ex }\n  } finally {}\n};\nMCIndexSnapRounder.prototype.getNodedSubstrings = function getNodedSubstrings () {\n  return NodedSegmentString.getNodedSubstrings(this._nodedSegStrings)\n};\nMCIndexSnapRounder.prototype.snapRound = function snapRound (segStrings, li) {\n  var intersections = this.findInteriorIntersections(segStrings, li);\n  this.computeIntersectionSnaps(intersections);\n  this.computeVertexSnaps(segStrings);\n};\nMCIndexSnapRounder.prototype.findInteriorIntersections = function findInteriorIntersections (segStrings, li) {\n  var intFinderAdder = new InteriorIntersectionFinderAdder(li);\n  this._noder.setSegmentIntersector(intFinderAdder);\n  this._noder.computeNodes(segStrings);\n  return intFinderAdder.getInteriorIntersections()\n};\nMCIndexSnapRounder.prototype.computeVertexSnaps = function computeVertexSnaps () {\n    var this$1 = this;\n\n  if (hasInterface(arguments[0], Collection)) {\n    var edges = arguments[0];\n    for (var i0 = edges.iterator(); i0.hasNext();) {\n      var edge0 = i0.next();\n      this$1.computeVertexSnaps(edge0);\n    }\n  } else if (arguments[0] instanceof NodedSegmentString) {\n    var e = arguments[0];\n    var pts0 = e.getCoordinates();\n    for (var i = 0; i < pts0.length; i++) {\n      var hotPixel = new HotPixel(pts0[i], this$1._scaleFactor, this$1._li);\n      var isNodeAdded = this$1._pointSnapper.snap(hotPixel, e, i);\n      if (isNodeAdded) {\n        e.addIntersection(pts0[i], i);\n      }\n    }\n  }\n};\nMCIndexSnapRounder.prototype.computeNodes = function computeNodes (inputSegmentStrings) {\n  this._nodedSegStrings = inputSegmentStrings;\n  this._noder = new MCIndexNoder();\n  this._pointSnapper = new MCIndexPointSnapper(this._noder.getIndex());\n  this.snapRound(inputSegmentStrings, this._li);\n};\nMCIndexSnapRounder.prototype.computeIntersectionSnaps = function computeIntersectionSnaps (snapPts) {\n    var this$1 = this;\n\n  for (var it = snapPts.iterator(); it.hasNext();) {\n    var snapPt = it.next();\n    var hotPixel = new HotPixel(snapPt, this$1._scaleFactor, this$1._li);\n    this$1._pointSnapper.snap(hotPixel);\n  }\n};\nMCIndexSnapRounder.prototype.interfaces_ = function interfaces_ () {\n  return [Noder]\n};\nMCIndexSnapRounder.prototype.getClass = function getClass () {\n  return MCIndexSnapRounder\n};\n\nvar BufferOp = function BufferOp () {\n  this._argGeom = null;\n  this._distance = null;\n  this._bufParams = new BufferParameters();\n  this._resultGeometry = null;\n  this._saveException = null;\n  if (arguments.length === 1) {\n    var g = arguments[0];\n    this._argGeom = g;\n  } else if (arguments.length === 2) {\n    var g$1 = arguments[0];\n    var bufParams = arguments[1];\n    this._argGeom = g$1;\n    this._bufParams = bufParams;\n  }\n};\n\nvar staticAccessors$32 = { CAP_ROUND: { configurable: true },CAP_BUTT: { configurable: true },CAP_FLAT: { configurable: true },CAP_SQUARE: { configurable: true },MAX_PRECISION_DIGITS: { configurable: true } };\nBufferOp.prototype.bufferFixedPrecision = function bufferFixedPrecision (fixedPM) {\n  var noder = new ScaledNoder(new MCIndexSnapRounder(new PrecisionModel(1.0)), fixedPM.getScale());\n  var bufBuilder = new BufferBuilder(this._bufParams);\n  bufBuilder.setWorkingPrecisionModel(fixedPM);\n  bufBuilder.setNoder(noder);\n  this._resultGeometry = bufBuilder.buffer(this._argGeom, this._distance);\n};\nBufferOp.prototype.bufferReducedPrecision = function bufferReducedPrecision () {\n    var this$1 = this;\n\n  if (arguments.length === 0) {\n    for (var precDigits = BufferOp.MAX_PRECISION_DIGITS; precDigits >= 0; precDigits--) {\n      try {\n        this$1.bufferReducedPrecision(precDigits);\n      } catch (ex) {\n        if (ex instanceof TopologyException) {\n          this$1._saveException = ex;\n        } else { throw ex }\n      } finally {}\n      if (this$1._resultGeometry !== null) { return null }\n    }\n    throw this._saveException\n  } else if (arguments.length === 1) {\n    var precisionDigits = arguments[0];\n    var sizeBasedScaleFactor = BufferOp.precisionScaleFactor(this._argGeom, this._distance, precisionDigits);\n    var fixedPM = new PrecisionModel(sizeBasedScaleFactor);\n    this.bufferFixedPrecision(fixedPM);\n  }\n};\nBufferOp.prototype.computeGeometry = function computeGeometry () {\n  this.bufferOriginalPrecision();\n  if (this._resultGeometry !== null) { return null }\n  var argPM = this._argGeom.getFactory().getPrecisionModel();\n  if (argPM.getType() === PrecisionModel.FIXED) { this.bufferFixedPrecision(argPM); } else { this.bufferReducedPrecision(); }\n};\nBufferOp.prototype.setQuadrantSegments = function setQuadrantSegments (quadrantSegments) {\n  this._bufParams.setQuadrantSegments(quadrantSegments);\n};\nBufferOp.prototype.bufferOriginalPrecision = function bufferOriginalPrecision () {\n  try {\n    var bufBuilder = new BufferBuilder(this._bufParams);\n    this._resultGeometry = bufBuilder.buffer(this._argGeom, this._distance);\n  } catch (ex) {\n    if (ex instanceof RuntimeException) {\n      this._saveException = ex;\n    } else { throw ex }\n  } finally {}\n};\nBufferOp.prototype.getResultGeometry = function getResultGeometry (distance) {\n  this._distance = distance;\n  this.computeGeometry();\n  return this._resultGeometry\n};\nBufferOp.prototype.setEndCapStyle = function setEndCapStyle (endCapStyle) {\n  this._bufParams.setEndCapStyle(endCapStyle);\n};\nBufferOp.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nBufferOp.prototype.getClass = function getClass () {\n  return BufferOp\n};\nBufferOp.bufferOp = function bufferOp () {\n  if (arguments.length === 2) {\n    var g = arguments[0];\n    var distance = arguments[1];\n    var gBuf = new BufferOp(g);\n    var geomBuf = gBuf.getResultGeometry(distance);\n    return geomBuf\n  } else if (arguments.length === 3) {\n    if (Number.isInteger(arguments[2]) && (arguments[0] instanceof Geometry && typeof arguments[1] === 'number')) {\n      var g$1 = arguments[0];\n      var distance$1 = arguments[1];\n      var quadrantSegments = arguments[2];\n      var bufOp = new BufferOp(g$1);\n      bufOp.setQuadrantSegments(quadrantSegments);\n      var geomBuf$1 = bufOp.getResultGeometry(distance$1);\n      return geomBuf$1\n    } else if (arguments[2] instanceof BufferParameters && (arguments[0] instanceof Geometry && typeof arguments[1] === 'number')) {\n      var g$2 = arguments[0];\n      var distance$2 = arguments[1];\n      var params = arguments[2];\n      var bufOp$1 = new BufferOp(g$2, params);\n      var geomBuf$2 = bufOp$1.getResultGeometry(distance$2);\n      return geomBuf$2\n    }\n  } else if (arguments.length === 4) {\n    var g$3 = arguments[0];\n    var distance$3 = arguments[1];\n    var quadrantSegments$1 = arguments[2];\n    var endCapStyle = arguments[3];\n    var bufOp$2 = new BufferOp(g$3);\n    bufOp$2.setQuadrantSegments(quadrantSegments$1);\n    bufOp$2.setEndCapStyle(endCapStyle);\n    var geomBuf$3 = bufOp$2.getResultGeometry(distance$3);\n    return geomBuf$3\n  }\n};\nBufferOp.precisionScaleFactor = function precisionScaleFactor (g, distance, maxPrecisionDigits) {\n  var env = g.getEnvelopeInternal();\n  var envMax = MathUtil.max(Math.abs(env.getMaxX()), Math.abs(env.getMaxY()), Math.abs(env.getMinX()), Math.abs(env.getMinY()));\n  var expandByDistance = distance > 0.0 ? distance : 0.0;\n  var bufEnvMax = envMax + 2 * expandByDistance;\n  var bufEnvPrecisionDigits = Math.trunc(Math.log(bufEnvMax) / Math.log(10) + 1.0);\n  var minUnitLog10 = maxPrecisionDigits - bufEnvPrecisionDigits;\n  var scaleFactor = Math.pow(10.0, minUnitLog10);\n  return scaleFactor\n};\nstaticAccessors$32.CAP_ROUND.get = function () { return BufferParameters.CAP_ROUND };\nstaticAccessors$32.CAP_BUTT.get = function () { return BufferParameters.CAP_FLAT };\nstaticAccessors$32.CAP_FLAT.get = function () { return BufferParameters.CAP_FLAT };\nstaticAccessors$32.CAP_SQUARE.get = function () { return BufferParameters.CAP_SQUARE };\nstaticAccessors$32.MAX_PRECISION_DIGITS.get = function () { return 12 };\n\nObject.defineProperties( BufferOp, staticAccessors$32 );\n\nvar PointPairDistance = function PointPairDistance () {\n  this._pt = [new Coordinate(), new Coordinate()];\n  this._distance = Double.NaN;\n  this._isNull = true;\n};\nPointPairDistance.prototype.getCoordinates = function getCoordinates () {\n  return this._pt\n};\nPointPairDistance.prototype.getCoordinate = function getCoordinate (i) {\n  return this._pt[i]\n};\nPointPairDistance.prototype.setMinimum = function setMinimum () {\n  if (arguments.length === 1) {\n    var ptDist = arguments[0];\n    this.setMinimum(ptDist._pt[0], ptDist._pt[1]);\n  } else if (arguments.length === 2) {\n    var p0 = arguments[0];\n    var p1 = arguments[1];\n    if (this._isNull) {\n      this.initialize(p0, p1);\n      return null\n    }\n    var dist = p0.distance(p1);\n    if (dist < this._distance) { this.initialize(p0, p1, dist); }\n  }\n};\nPointPairDistance.prototype.initialize = function initialize () {\n  if (arguments.length === 0) {\n    this._isNull = true;\n  } else if (arguments.length === 2) {\n    var p0 = arguments[0];\n    var p1 = arguments[1];\n    this._pt[0].setCoordinate(p0);\n    this._pt[1].setCoordinate(p1);\n    this._distance = p0.distance(p1);\n    this._isNull = false;\n  } else if (arguments.length === 3) {\n    var p0$1 = arguments[0];\n    var p1$1 = arguments[1];\n    var distance = arguments[2];\n    this._pt[0].setCoordinate(p0$1);\n    this._pt[1].setCoordinate(p1$1);\n    this._distance = distance;\n    this._isNull = false;\n  }\n};\nPointPairDistance.prototype.getDistance = function getDistance () {\n  return this._distance\n};\nPointPairDistance.prototype.setMaximum = function setMaximum () {\n  if (arguments.length === 1) {\n    var ptDist = arguments[0];\n    this.setMaximum(ptDist._pt[0], ptDist._pt[1]);\n  } else if (arguments.length === 2) {\n    var p0 = arguments[0];\n    var p1 = arguments[1];\n    if (this._isNull) {\n      this.initialize(p0, p1);\n      return null\n    }\n    var dist = p0.distance(p1);\n    if (dist > this._distance) { this.initialize(p0, p1, dist); }\n  }\n};\nPointPairDistance.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nPointPairDistance.prototype.getClass = function getClass () {\n  return PointPairDistance\n};\n\nvar DistanceToPointFinder = function DistanceToPointFinder () {};\n\nDistanceToPointFinder.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nDistanceToPointFinder.prototype.getClass = function getClass () {\n  return DistanceToPointFinder\n};\nDistanceToPointFinder.computeDistance = function computeDistance () {\n  if (arguments[2] instanceof PointPairDistance && (arguments[0] instanceof LineString && arguments[1] instanceof Coordinate)) {\n    var line = arguments[0];\n    var pt = arguments[1];\n    var ptDist = arguments[2];\n    var coords = line.getCoordinates();\n    var tempSegment = new LineSegment();\n    for (var i = 0; i < coords.length - 1; i++) {\n      tempSegment.setCoordinates(coords[i], coords[i + 1]);\n      var closestPt = tempSegment.closestPoint(pt);\n      ptDist.setMinimum(closestPt, pt);\n    }\n  } else if (arguments[2] instanceof PointPairDistance && (arguments[0] instanceof Polygon && arguments[1] instanceof Coordinate)) {\n    var poly = arguments[0];\n    var pt$1 = arguments[1];\n    var ptDist$1 = arguments[2];\n    DistanceToPointFinder.computeDistance(poly.getExteriorRing(), pt$1, ptDist$1);\n    for (var i$1 = 0; i$1 < poly.getNumInteriorRing(); i$1++) {\n      DistanceToPointFinder.computeDistance(poly.getInteriorRingN(i$1), pt$1, ptDist$1);\n    }\n  } else if (arguments[2] instanceof PointPairDistance && (arguments[0] instanceof Geometry && arguments[1] instanceof Coordinate)) {\n    var geom = arguments[0];\n    var pt$2 = arguments[1];\n    var ptDist$2 = arguments[2];\n    if (geom instanceof LineString) {\n      DistanceToPointFinder.computeDistance(geom, pt$2, ptDist$2);\n    } else if (geom instanceof Polygon) {\n      DistanceToPointFinder.computeDistance(geom, pt$2, ptDist$2);\n    } else if (geom instanceof GeometryCollection) {\n      var gc = geom;\n      for (var i$2 = 0; i$2 < gc.getNumGeometries(); i$2++) {\n        var g = gc.getGeometryN(i$2);\n        DistanceToPointFinder.computeDistance(g, pt$2, ptDist$2);\n      }\n    } else {\n      ptDist$2.setMinimum(geom.getCoordinate(), pt$2);\n    }\n  } else if (arguments[2] instanceof PointPairDistance && (arguments[0] instanceof LineSegment && arguments[1] instanceof Coordinate)) {\n    var segment = arguments[0];\n    var pt$3 = arguments[1];\n    var ptDist$3 = arguments[2];\n    var closestPt$1 = segment.closestPoint(pt$3);\n    ptDist$3.setMinimum(closestPt$1, pt$3);\n  }\n};\n\nvar BufferCurveMaximumDistanceFinder = function BufferCurveMaximumDistanceFinder (inputGeom) {\n  this._maxPtDist = new PointPairDistance();\n  this._inputGeom = inputGeom || null;\n};\n\nvar staticAccessors$36 = { MaxPointDistanceFilter: { configurable: true },MaxMidpointDistanceFilter: { configurable: true } };\nBufferCurveMaximumDistanceFinder.prototype.computeMaxMidpointDistance = function computeMaxMidpointDistance (curve) {\n  var distFilter = new MaxMidpointDistanceFilter(this._inputGeom);\n  curve.apply(distFilter);\n  this._maxPtDist.setMaximum(distFilter.getMaxPointDistance());\n};\nBufferCurveMaximumDistanceFinder.prototype.computeMaxVertexDistance = function computeMaxVertexDistance (curve) {\n  var distFilter = new MaxPointDistanceFilter(this._inputGeom);\n  curve.apply(distFilter);\n  this._maxPtDist.setMaximum(distFilter.getMaxPointDistance());\n};\nBufferCurveMaximumDistanceFinder.prototype.findDistance = function findDistance (bufferCurve) {\n  this.computeMaxVertexDistance(bufferCurve);\n  this.computeMaxMidpointDistance(bufferCurve);\n  return this._maxPtDist.getDistance()\n};\nBufferCurveMaximumDistanceFinder.prototype.getDistancePoints = function getDistancePoints () {\n  return this._maxPtDist\n};\nBufferCurveMaximumDistanceFinder.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nBufferCurveMaximumDistanceFinder.prototype.getClass = function getClass () {\n  return BufferCurveMaximumDistanceFinder\n};\nstaticAccessors$36.MaxPointDistanceFilter.get = function () { return MaxPointDistanceFilter };\nstaticAccessors$36.MaxMidpointDistanceFilter.get = function () { return MaxMidpointDistanceFilter };\n\nObject.defineProperties( BufferCurveMaximumDistanceFinder, staticAccessors$36 );\n\nvar MaxPointDistanceFilter = function MaxPointDistanceFilter (geom) {\n  this._maxPtDist = new PointPairDistance();\n  this._minPtDist = new PointPairDistance();\n  this._geom = geom || null;\n};\nMaxPointDistanceFilter.prototype.filter = function filter (pt) {\n  this._minPtDist.initialize();\n  DistanceToPointFinder.computeDistance(this._geom, pt, this._minPtDist);\n  this._maxPtDist.setMaximum(this._minPtDist);\n};\nMaxPointDistanceFilter.prototype.getMaxPointDistance = function getMaxPointDistance () {\n  return this._maxPtDist\n};\nMaxPointDistanceFilter.prototype.interfaces_ = function interfaces_ () {\n  return [CoordinateFilter]\n};\nMaxPointDistanceFilter.prototype.getClass = function getClass () {\n  return MaxPointDistanceFilter\n};\n\nvar MaxMidpointDistanceFilter = function MaxMidpointDistanceFilter (geom) {\n  this._maxPtDist = new PointPairDistance();\n  this._minPtDist = new PointPairDistance();\n  this._geom = geom || null;\n};\nMaxMidpointDistanceFilter.prototype.filter = function filter (seq, index) {\n  if (index === 0) { return null }\n  var p0 = seq.getCoordinate(index - 1);\n  var p1 = seq.getCoordinate(index);\n  var midPt = new Coordinate((p0.x + p1.x) / 2, (p0.y + p1.y) / 2);\n  this._minPtDist.initialize();\n  DistanceToPointFinder.computeDistance(this._geom, midPt, this._minPtDist);\n  this._maxPtDist.setMaximum(this._minPtDist);\n};\nMaxMidpointDistanceFilter.prototype.isDone = function isDone () {\n  return false\n};\nMaxMidpointDistanceFilter.prototype.isGeometryChanged = function isGeometryChanged () {\n  return false\n};\nMaxMidpointDistanceFilter.prototype.getMaxPointDistance = function getMaxPointDistance () {\n  return this._maxPtDist\n};\nMaxMidpointDistanceFilter.prototype.interfaces_ = function interfaces_ () {\n  return [CoordinateSequenceFilter]\n};\nMaxMidpointDistanceFilter.prototype.getClass = function getClass () {\n  return MaxMidpointDistanceFilter\n};\n\nvar PolygonExtracter = function PolygonExtracter (comps) {\n  this._comps = comps || null;\n};\nPolygonExtracter.prototype.filter = function filter (geom) {\n  if (geom instanceof Polygon) { this._comps.add(geom); }\n};\nPolygonExtracter.prototype.interfaces_ = function interfaces_ () {\n  return [GeometryFilter]\n};\nPolygonExtracter.prototype.getClass = function getClass () {\n  return PolygonExtracter\n};\nPolygonExtracter.getPolygons = function getPolygons () {\n  if (arguments.length === 1) {\n    var geom = arguments[0];\n    return PolygonExtracter.getPolygons(geom, new ArrayList())\n  } else if (arguments.length === 2) {\n    var geom$1 = arguments[0];\n    var list = arguments[1];\n    if (geom$1 instanceof Polygon) {\n      list.add(geom$1);\n    } else if (geom$1 instanceof GeometryCollection) {\n      geom$1.apply(new PolygonExtracter(list));\n    }\n    return list\n  }\n};\n\nvar LinearComponentExtracter = function LinearComponentExtracter () {\n  this._lines = null;\n  this._isForcedToLineString = false;\n  if (arguments.length === 1) {\n    var lines = arguments[0];\n    this._lines = lines;\n  } else if (arguments.length === 2) {\n    var lines$1 = arguments[0];\n    var isForcedToLineString = arguments[1];\n    this._lines = lines$1;\n    this._isForcedToLineString = isForcedToLineString;\n  }\n};\nLinearComponentExtracter.prototype.filter = function filter (geom) {\n  if (this._isForcedToLineString && geom instanceof LinearRing) {\n    var line = geom.getFactory().createLineString(geom.getCoordinateSequence());\n    this._lines.add(line);\n    return null\n  }\n  if (geom instanceof LineString) { this._lines.add(geom); }\n};\nLinearComponentExtracter.prototype.setForceToLineString = function setForceToLineString (isForcedToLineString) {\n  this._isForcedToLineString = isForcedToLineString;\n};\nLinearComponentExtracter.prototype.interfaces_ = function interfaces_ () {\n  return [GeometryComponentFilter]\n};\nLinearComponentExtracter.prototype.getClass = function getClass () {\n  return LinearComponentExtracter\n};\nLinearComponentExtracter.getGeometry = function getGeometry () {\n  if (arguments.length === 1) {\n    var geom = arguments[0];\n    return geom.getFactory().buildGeometry(LinearComponentExtracter.getLines(geom))\n  } else if (arguments.length === 2) {\n    var geom$1 = arguments[0];\n    var forceToLineString = arguments[1];\n    return geom$1.getFactory().buildGeometry(LinearComponentExtracter.getLines(geom$1, forceToLineString))\n  }\n};\nLinearComponentExtracter.getLines = function getLines () {\n  if (arguments.length === 1) {\n    var geom = arguments[0];\n    return LinearComponentExtracter.getLines(geom, false)\n  } else if (arguments.length === 2) {\n    if (hasInterface(arguments[0], Collection) && hasInterface(arguments[1], Collection)) {\n      var geoms = arguments[0];\n      var lines$1 = arguments[1];\n      for (var i = geoms.iterator(); i.hasNext();) {\n        var g = i.next();\n        LinearComponentExtracter.getLines(g, lines$1);\n      }\n      return lines$1\n    } else if (arguments[0] instanceof Geometry && typeof arguments[1] === 'boolean') {\n      var geom$1 = arguments[0];\n      var forceToLineString = arguments[1];\n      var lines = new ArrayList();\n      geom$1.apply(new LinearComponentExtracter(lines, forceToLineString));\n      return lines\n    } else if (arguments[0] instanceof Geometry && hasInterface(arguments[1], Collection)) {\n      var geom$2 = arguments[0];\n      var lines$2 = arguments[1];\n      if (geom$2 instanceof LineString) {\n        lines$2.add(geom$2);\n      } else {\n        geom$2.apply(new LinearComponentExtracter(lines$2));\n      }\n      return lines$2\n    }\n  } else if (arguments.length === 3) {\n    if (typeof arguments[2] === 'boolean' && (hasInterface(arguments[0], Collection) && hasInterface(arguments[1], Collection))) {\n      var geoms$1 = arguments[0];\n      var lines$3 = arguments[1];\n      var forceToLineString$1 = arguments[2];\n      for (var i$1 = geoms$1.iterator(); i$1.hasNext();) {\n        var g$1 = i$1.next();\n        LinearComponentExtracter.getLines(g$1, lines$3, forceToLineString$1);\n      }\n      return lines$3\n    } else if (typeof arguments[2] === 'boolean' && (arguments[0] instanceof Geometry && hasInterface(arguments[1], Collection))) {\n      var geom$3 = arguments[0];\n      var lines$4 = arguments[1];\n      var forceToLineString$2 = arguments[2];\n      geom$3.apply(new LinearComponentExtracter(lines$4, forceToLineString$2));\n      return lines$4\n    }\n  }\n};\n\nvar PointLocator = function PointLocator () {\n  this._boundaryRule = BoundaryNodeRule.OGC_SFS_BOUNDARY_RULE;\n  this._isIn = null;\n  this._numBoundaries = null;\n  if (arguments.length === 0) {} else if (arguments.length === 1) {\n    var boundaryRule = arguments[0];\n    if (boundaryRule === null) { throw new IllegalArgumentException('Rule must be non-null') }\n    this._boundaryRule = boundaryRule;\n  }\n};\nPointLocator.prototype.locateInternal = function locateInternal () {\n    var this$1 = this;\n\n  if (arguments[0] instanceof Coordinate && arguments[1] instanceof Polygon) {\n    var p = arguments[0];\n    var poly = arguments[1];\n    if (poly.isEmpty()) { return Location.EXTERIOR }\n    var shell = poly.getExteriorRing();\n    var shellLoc = this.locateInPolygonRing(p, shell);\n    if (shellLoc === Location.EXTERIOR) { return Location.EXTERIOR }\n    if (shellLoc === Location.BOUNDARY) { return Location.BOUNDARY }\n    for (var i = 0; i < poly.getNumInteriorRing(); i++) {\n      var hole = poly.getInteriorRingN(i);\n      var holeLoc = this$1.locateInPolygonRing(p, hole);\n      if (holeLoc === Location.INTERIOR) { return Location.EXTERIOR }\n      if (holeLoc === Location.BOUNDARY) { return Location.BOUNDARY }\n    }\n    return Location.INTERIOR\n  } else if (arguments[0] instanceof Coordinate && arguments[1] instanceof LineString) {\n    var p$1 = arguments[0];\n    var l = arguments[1];\n    if (!l.getEnvelopeInternal().intersects(p$1)) { return Location.EXTERIOR }\n    var pt = l.getCoordinates();\n    if (!l.isClosed()) {\n      if (p$1.equals(pt[0]) || p$1.equals(pt[pt.length - 1])) {\n        return Location.BOUNDARY\n      }\n    }\n    if (CGAlgorithms.isOnLine(p$1, pt)) { return Location.INTERIOR }\n    return Location.EXTERIOR\n  } else if (arguments[0] instanceof Coordinate && arguments[1] instanceof Point) {\n    var p$2 = arguments[0];\n    var pt$1 = arguments[1];\n    var ptCoord = pt$1.getCoordinate();\n    if (ptCoord.equals2D(p$2)) { return Location.INTERIOR }\n    return Location.EXTERIOR\n  }\n};\nPointLocator.prototype.locateInPolygonRing = function locateInPolygonRing (p, ring) {\n  if (!ring.getEnvelopeInternal().intersects(p)) { return Location.EXTERIOR }\n  return CGAlgorithms.locatePointInRing(p, ring.getCoordinates())\n};\nPointLocator.prototype.intersects = function intersects (p, geom) {\n  return this.locate(p, geom) !== Location.EXTERIOR\n};\nPointLocator.prototype.updateLocationInfo = function updateLocationInfo (loc) {\n  if (loc === Location.INTERIOR) { this._isIn = true; }\n  if (loc === Location.BOUNDARY) { this._numBoundaries++; }\n};\nPointLocator.prototype.computeLocation = function computeLocation (p, geom) {\n    var this$1 = this;\n\n  if (geom instanceof Point) {\n    this.updateLocationInfo(this.locateInternal(p, geom));\n  }\n  if (geom instanceof LineString) {\n    this.updateLocationInfo(this.locateInternal(p, geom));\n  } else if (geom instanceof Polygon) {\n    this.updateLocationInfo(this.locateInternal(p, geom));\n  } else if (geom instanceof MultiLineString) {\n    var ml = geom;\n    for (var i = 0; i < ml.getNumGeometries(); i++) {\n      var l = ml.getGeometryN(i);\n      this$1.updateLocationInfo(this$1.locateInternal(p, l));\n    }\n  } else if (geom instanceof MultiPolygon) {\n    var mpoly = geom;\n    for (var i$1 = 0; i$1 < mpoly.getNumGeometries(); i$1++) {\n      var poly = mpoly.getGeometryN(i$1);\n      this$1.updateLocationInfo(this$1.locateInternal(p, poly));\n    }\n  } else if (geom instanceof GeometryCollection) {\n    var geomi = new GeometryCollectionIterator(geom);\n    while (geomi.hasNext()) {\n      var g2 = geomi.next();\n      if (g2 !== geom) { this$1.computeLocation(p, g2); }\n    }\n  }\n};\nPointLocator.prototype.locate = function locate (p, geom) {\n  if (geom.isEmpty()) { return Location.EXTERIOR }\n  if (geom instanceof LineString) {\n    return this.locateInternal(p, geom)\n  } else if (geom instanceof Polygon) {\n    return this.locateInternal(p, geom)\n  }\n  this._isIn = false;\n  this._numBoundaries = 0;\n  this.computeLocation(p, geom);\n  if (this._boundaryRule.isInBoundary(this._numBoundaries)) { return Location.BOUNDARY }\n  if (this._numBoundaries > 0 || this._isIn) { return Location.INTERIOR }\n  return Location.EXTERIOR\n};\nPointLocator.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nPointLocator.prototype.getClass = function getClass () {\n  return PointLocator\n};\n\nvar GeometryLocation = function GeometryLocation () {\n  this._component = null;\n  this._segIndex = null;\n  this._pt = null;\n  if (arguments.length === 2) {\n    var component = arguments[0];\n    var pt = arguments[1];\n    GeometryLocation.call(this, component, GeometryLocation.INSIDE_AREA, pt);\n  } else if (arguments.length === 3) {\n    var component$1 = arguments[0];\n    var segIndex = arguments[1];\n    var pt$1 = arguments[2];\n    this._component = component$1;\n    this._segIndex = segIndex;\n    this._pt = pt$1;\n  }\n};\n\nvar staticAccessors$38 = { INSIDE_AREA: { configurable: true } };\nGeometryLocation.prototype.isInsideArea = function isInsideArea () {\n  return this._segIndex === GeometryLocation.INSIDE_AREA\n};\nGeometryLocation.prototype.getCoordinate = function getCoordinate () {\n  return this._pt\n};\nGeometryLocation.prototype.getGeometryComponent = function getGeometryComponent () {\n  return this._component\n};\nGeometryLocation.prototype.getSegmentIndex = function getSegmentIndex () {\n  return this._segIndex\n};\nGeometryLocation.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nGeometryLocation.prototype.getClass = function getClass () {\n  return GeometryLocation\n};\nstaticAccessors$38.INSIDE_AREA.get = function () { return -1 };\n\nObject.defineProperties( GeometryLocation, staticAccessors$38 );\n\nvar PointExtracter = function PointExtracter (pts) {\n  this._pts = pts || null;\n};\nPointExtracter.prototype.filter = function filter (geom) {\n  if (geom instanceof Point) { this._pts.add(geom); }\n};\nPointExtracter.prototype.interfaces_ = function interfaces_ () {\n  return [GeometryFilter]\n};\nPointExtracter.prototype.getClass = function getClass () {\n  return PointExtracter\n};\nPointExtracter.getPoints = function getPoints () {\n  if (arguments.length === 1) {\n    var geom = arguments[0];\n    if (geom instanceof Point) {\n      return Collections.singletonList(geom)\n    }\n    return PointExtracter.getPoints(geom, new ArrayList())\n  } else if (arguments.length === 2) {\n    var geom$1 = arguments[0];\n    var list = arguments[1];\n    if (geom$1 instanceof Point) {\n      list.add(geom$1);\n    } else if (geom$1 instanceof GeometryCollection) {\n      geom$1.apply(new PointExtracter(list));\n    }\n    return list\n  }\n};\n\nvar ConnectedElementLocationFilter = function ConnectedElementLocationFilter () {\n  this._locations = null;\n  var locations = arguments[0];\n  this._locations = locations;\n};\nConnectedElementLocationFilter.prototype.filter = function filter (geom) {\n  if (geom instanceof Point || geom instanceof LineString || geom instanceof Polygon) { this._locations.add(new GeometryLocation(geom, 0, geom.getCoordinate())); }\n};\nConnectedElementLocationFilter.prototype.interfaces_ = function interfaces_ () {\n  return [GeometryFilter]\n};\nConnectedElementLocationFilter.prototype.getClass = function getClass () {\n  return ConnectedElementLocationFilter\n};\nConnectedElementLocationFilter.getLocations = function getLocations (geom) {\n  var locations = new ArrayList();\n  geom.apply(new ConnectedElementLocationFilter(locations));\n  return locations\n};\n\nvar DistanceOp = function DistanceOp () {\n  this._geom = null;\n  this._terminateDistance = 0.0;\n  this._ptLocator = new PointLocator();\n  this._minDistanceLocation = null;\n  this._minDistance = Double.MAX_VALUE;\n  if (arguments.length === 2) {\n    var g0 = arguments[0];\n    var g1 = arguments[1];\n    this._geom = [g0, g1];\n    this._terminateDistance = 0.0;\n  } else if (arguments.length === 3) {\n    var g0$1 = arguments[0];\n    var g1$1 = arguments[1];\n    var terminateDistance = arguments[2];\n    this._geom = new Array(2).fill(null);\n    this._geom[0] = g0$1;\n    this._geom[1] = g1$1;\n    this._terminateDistance = terminateDistance;\n  }\n};\nDistanceOp.prototype.computeContainmentDistance = function computeContainmentDistance () {\n    var this$1 = this;\n\n  if (arguments.length === 0) {\n    var locPtPoly = new Array(2).fill(null);\n    this.computeContainmentDistance(0, locPtPoly);\n    if (this._minDistance <= this._terminateDistance) { return null }\n    this.computeContainmentDistance(1, locPtPoly);\n  } else if (arguments.length === 2) {\n    var polyGeomIndex = arguments[0];\n    var locPtPoly$1 = arguments[1];\n    var locationsIndex = 1 - polyGeomIndex;\n    var polys = PolygonExtracter.getPolygons(this._geom[polyGeomIndex]);\n    if (polys.size() > 0) {\n      var insideLocs = ConnectedElementLocationFilter.getLocations(this._geom[locationsIndex]);\n      this.computeContainmentDistance(insideLocs, polys, locPtPoly$1);\n      if (this._minDistance <= this._terminateDistance) {\n        this._minDistanceLocation[locationsIndex] = locPtPoly$1[0];\n        this._minDistanceLocation[polyGeomIndex] = locPtPoly$1[1];\n        return null\n      }\n    }\n  } else if (arguments.length === 3) {\n    if (arguments[2] instanceof Array && (hasInterface(arguments[0], List) && hasInterface(arguments[1], List))) {\n      var locs = arguments[0];\n      var polys$1 = arguments[1];\n      var locPtPoly$2 = arguments[2];\n      for (var i = 0; i < locs.size(); i++) {\n        var loc = locs.get(i);\n        for (var j = 0; j < polys$1.size(); j++) {\n          this$1.computeContainmentDistance(loc, polys$1.get(j), locPtPoly$2);\n          if (this$1._minDistance <= this$1._terminateDistance) { return null }\n        }\n      }\n    } else if (arguments[2] instanceof Array && (arguments[0] instanceof GeometryLocation && arguments[1] instanceof Polygon)) {\n      var ptLoc = arguments[0];\n      var poly = arguments[1];\n      var locPtPoly$3 = arguments[2];\n      var pt = ptLoc.getCoordinate();\n      if (Location.EXTERIOR !== this._ptLocator.locate(pt, poly)) {\n        this._minDistance = 0.0;\n        locPtPoly$3[0] = ptLoc;\n        locPtPoly$3[1] = new GeometryLocation(poly, pt);\n\n        return null\n      }\n    }\n  }\n};\nDistanceOp.prototype.computeMinDistanceLinesPoints = function computeMinDistanceLinesPoints (lines, points, locGeom) {\n    var this$1 = this;\n\n  for (var i = 0; i < lines.size(); i++) {\n    var line = lines.get(i);\n    for (var j = 0; j < points.size(); j++) {\n      var pt = points.get(j);\n      this$1.computeMinDistance(line, pt, locGeom);\n      if (this$1._minDistance <= this$1._terminateDistance) { return null }\n    }\n  }\n};\nDistanceOp.prototype.computeFacetDistance = function computeFacetDistance () {\n  var locGeom = new Array(2).fill(null);\n  var lines0 = LinearComponentExtracter.getLines(this._geom[0]);\n  var lines1 = LinearComponentExtracter.getLines(this._geom[1]);\n  var pts0 = PointExtracter.getPoints(this._geom[0]);\n  var pts1 = PointExtracter.getPoints(this._geom[1]);\n  this.computeMinDistanceLines(lines0, lines1, locGeom);\n  this.updateMinDistance(locGeom, false);\n  if (this._minDistance <= this._terminateDistance) { return null }\n  locGeom[0] = null;\n  locGeom[1] = null;\n  this.computeMinDistanceLinesPoints(lines0, pts1, locGeom);\n  this.updateMinDistance(locGeom, false);\n  if (this._minDistance <= this._terminateDistance) { return null }\n  locGeom[0] = null;\n  locGeom[1] = null;\n  this.computeMinDistanceLinesPoints(lines1, pts0, locGeom);\n  this.updateMinDistance(locGeom, true);\n  if (this._minDistance <= this._terminateDistance) { return null }\n  locGeom[0] = null;\n  locGeom[1] = null;\n  this.computeMinDistancePoints(pts0, pts1, locGeom);\n  this.updateMinDistance(locGeom, false);\n};\nDistanceOp.prototype.nearestLocations = function nearestLocations () {\n  this.computeMinDistance();\n  return this._minDistanceLocation\n};\nDistanceOp.prototype.updateMinDistance = function updateMinDistance (locGeom, flip) {\n  if (locGeom[0] === null) { return null }\n  if (flip) {\n    this._minDistanceLocation[0] = locGeom[1];\n    this._minDistanceLocation[1] = locGeom[0];\n  } else {\n    this._minDistanceLocation[0] = locGeom[0];\n    this._minDistanceLocation[1] = locGeom[1];\n  }\n};\nDistanceOp.prototype.nearestPoints = function nearestPoints () {\n  this.computeMinDistance();\n  var nearestPts = [this._minDistanceLocation[0].getCoordinate(), this._minDistanceLocation[1].getCoordinate()];\n  return nearestPts\n};\nDistanceOp.prototype.computeMinDistance = function computeMinDistance () {\n    var this$1 = this;\n\n  if (arguments.length === 0) {\n    if (this._minDistanceLocation !== null) { return null }\n    this._minDistanceLocation = new Array(2).fill(null);\n    this.computeContainmentDistance();\n    if (this._minDistance <= this._terminateDistance) { return null }\n    this.computeFacetDistance();\n  } else if (arguments.length === 3) {\n    if (arguments[2] instanceof Array && (arguments[0] instanceof LineString && arguments[1] instanceof Point)) {\n      var line = arguments[0];\n      var pt = arguments[1];\n      var locGeom = arguments[2];\n      if (line.getEnvelopeInternal().distance(pt.getEnvelopeInternal()) > this._minDistance) { return null }\n      var coord0 = line.getCoordinates();\n      var coord = pt.getCoordinate();\n      for (var i = 0; i < coord0.length - 1; i++) {\n        var dist = CGAlgorithms.distancePointLine(coord, coord0[i], coord0[i + 1]);\n        if (dist < this$1._minDistance) {\n          this$1._minDistance = dist;\n          var seg = new LineSegment(coord0[i], coord0[i + 1]);\n          var segClosestPoint = seg.closestPoint(coord);\n          locGeom[0] = new GeometryLocation(line, i, segClosestPoint);\n          locGeom[1] = new GeometryLocation(pt, 0, coord);\n        }\n        if (this$1._minDistance <= this$1._terminateDistance) { return null }\n      }\n    } else if (arguments[2] instanceof Array && (arguments[0] instanceof LineString && arguments[1] instanceof LineString)) {\n      var line0 = arguments[0];\n      var line1 = arguments[1];\n      var locGeom$1 = arguments[2];\n      if (line0.getEnvelopeInternal().distance(line1.getEnvelopeInternal()) > this._minDistance) { return null }\n      var coord0$1 = line0.getCoordinates();\n      var coord1 = line1.getCoordinates();\n      for (var i$1 = 0; i$1 < coord0$1.length - 1; i$1++) {\n        for (var j = 0; j < coord1.length - 1; j++) {\n          var dist$1 = CGAlgorithms.distanceLineLine(coord0$1[i$1], coord0$1[i$1 + 1], coord1[j], coord1[j + 1]);\n          if (dist$1 < this$1._minDistance) {\n            this$1._minDistance = dist$1;\n            var seg0 = new LineSegment(coord0$1[i$1], coord0$1[i$1 + 1]);\n            var seg1 = new LineSegment(coord1[j], coord1[j + 1]);\n            var closestPt = seg0.closestPoints(seg1);\n            locGeom$1[0] = new GeometryLocation(line0, i$1, closestPt[0]);\n            locGeom$1[1] = new GeometryLocation(line1, j, closestPt[1]);\n          }\n          if (this$1._minDistance <= this$1._terminateDistance) { return null }\n        }\n      }\n    }\n  }\n};\nDistanceOp.prototype.computeMinDistancePoints = function computeMinDistancePoints (points0, points1, locGeom) {\n    var this$1 = this;\n\n  for (var i = 0; i < points0.size(); i++) {\n    var pt0 = points0.get(i);\n    for (var j = 0; j < points1.size(); j++) {\n      var pt1 = points1.get(j);\n      var dist = pt0.getCoordinate().distance(pt1.getCoordinate());\n      if (dist < this$1._minDistance) {\n        this$1._minDistance = dist;\n        locGeom[0] = new GeometryLocation(pt0, 0, pt0.getCoordinate());\n        locGeom[1] = new GeometryLocation(pt1, 0, pt1.getCoordinate());\n      }\n      if (this$1._minDistance <= this$1._terminateDistance) { return null }\n    }\n  }\n};\nDistanceOp.prototype.distance = function distance () {\n  if (this._geom[0] === null || this._geom[1] === null) { throw new IllegalArgumentException('null geometries are not supported') }\n  if (this._geom[0].isEmpty() || this._geom[1].isEmpty()) { return 0.0 }\n  this.computeMinDistance();\n  return this._minDistance\n};\nDistanceOp.prototype.computeMinDistanceLines = function computeMinDistanceLines (lines0, lines1, locGeom) {\n    var this$1 = this;\n\n  for (var i = 0; i < lines0.size(); i++) {\n    var line0 = lines0.get(i);\n    for (var j = 0; j < lines1.size(); j++) {\n      var line1 = lines1.get(j);\n      this$1.computeMinDistance(line0, line1, locGeom);\n      if (this$1._minDistance <= this$1._terminateDistance) { return null }\n    }\n  }\n};\nDistanceOp.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nDistanceOp.prototype.getClass = function getClass () {\n  return DistanceOp\n};\nDistanceOp.distance = function distance (g0, g1) {\n  var distOp = new DistanceOp(g0, g1);\n  return distOp.distance()\n};\nDistanceOp.isWithinDistance = function isWithinDistance (g0, g1, distance) {\n  var distOp = new DistanceOp(g0, g1, distance);\n  return distOp.distance() <= distance\n};\nDistanceOp.nearestPoints = function nearestPoints (g0, g1) {\n  var distOp = new DistanceOp(g0, g1);\n  return distOp.nearestPoints()\n};\n\nvar PointPairDistance$2 = function PointPairDistance () {\n  this._pt = [new Coordinate(), new Coordinate()];\n  this._distance = Double.NaN;\n  this._isNull = true;\n};\nPointPairDistance$2.prototype.getCoordinates = function getCoordinates () {\n  return this._pt\n};\nPointPairDistance$2.prototype.getCoordinate = function getCoordinate (i) {\n  return this._pt[i]\n};\nPointPairDistance$2.prototype.setMinimum = function setMinimum () {\n  if (arguments.length === 1) {\n    var ptDist = arguments[0];\n    this.setMinimum(ptDist._pt[0], ptDist._pt[1]);\n  } else if (arguments.length === 2) {\n    var p0 = arguments[0];\n    var p1 = arguments[1];\n    if (this._isNull) {\n      this.initialize(p0, p1);\n      return null\n    }\n    var dist = p0.distance(p1);\n    if (dist < this._distance) { this.initialize(p0, p1, dist); }\n  }\n};\nPointPairDistance$2.prototype.initialize = function initialize () {\n  if (arguments.length === 0) {\n    this._isNull = true;\n  } else if (arguments.length === 2) {\n    var p0 = arguments[0];\n    var p1 = arguments[1];\n    this._pt[0].setCoordinate(p0);\n    this._pt[1].setCoordinate(p1);\n    this._distance = p0.distance(p1);\n    this._isNull = false;\n  } else if (arguments.length === 3) {\n    var p0$1 = arguments[0];\n    var p1$1 = arguments[1];\n    var distance = arguments[2];\n    this._pt[0].setCoordinate(p0$1);\n    this._pt[1].setCoordinate(p1$1);\n    this._distance = distance;\n    this._isNull = false;\n  }\n};\nPointPairDistance$2.prototype.toString = function toString () {\n  return WKTWriter.toLineString(this._pt[0], this._pt[1])\n};\nPointPairDistance$2.prototype.getDistance = function getDistance () {\n  return this._distance\n};\nPointPairDistance$2.prototype.setMaximum = function setMaximum () {\n  if (arguments.length === 1) {\n    var ptDist = arguments[0];\n    this.setMaximum(ptDist._pt[0], ptDist._pt[1]);\n  } else if (arguments.length === 2) {\n    var p0 = arguments[0];\n    var p1 = arguments[1];\n    if (this._isNull) {\n      this.initialize(p0, p1);\n      return null\n    }\n    var dist = p0.distance(p1);\n    if (dist > this._distance) { this.initialize(p0, p1, dist); }\n  }\n};\nPointPairDistance$2.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nPointPairDistance$2.prototype.getClass = function getClass () {\n  return PointPairDistance$2\n};\n\nvar DistanceToPoint = function DistanceToPoint () {};\n\nDistanceToPoint.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nDistanceToPoint.prototype.getClass = function getClass () {\n  return DistanceToPoint\n};\nDistanceToPoint.computeDistance = function computeDistance () {\n  if (arguments[2] instanceof PointPairDistance$2 && (arguments[0] instanceof LineString && arguments[1] instanceof Coordinate)) {\n    var line = arguments[0];\n    var pt = arguments[1];\n    var ptDist = arguments[2];\n    var tempSegment = new LineSegment();\n    var coords = line.getCoordinates();\n    for (var i = 0; i < coords.length - 1; i++) {\n      tempSegment.setCoordinates(coords[i], coords[i + 1]);\n      var closestPt = tempSegment.closestPoint(pt);\n      ptDist.setMinimum(closestPt, pt);\n    }\n  } else if (arguments[2] instanceof PointPairDistance$2 && (arguments[0] instanceof Polygon && arguments[1] instanceof Coordinate)) {\n    var poly = arguments[0];\n    var pt$1 = arguments[1];\n    var ptDist$1 = arguments[2];\n    DistanceToPoint.computeDistance(poly.getExteriorRing(), pt$1, ptDist$1);\n    for (var i$1 = 0; i$1 < poly.getNumInteriorRing(); i$1++) {\n      DistanceToPoint.computeDistance(poly.getInteriorRingN(i$1), pt$1, ptDist$1);\n    }\n  } else if (arguments[2] instanceof PointPairDistance$2 && (arguments[0] instanceof Geometry && arguments[1] instanceof Coordinate)) {\n    var geom = arguments[0];\n    var pt$2 = arguments[1];\n    var ptDist$2 = arguments[2];\n    if (geom instanceof LineString) {\n      DistanceToPoint.computeDistance(geom, pt$2, ptDist$2);\n    } else if (geom instanceof Polygon) {\n      DistanceToPoint.computeDistance(geom, pt$2, ptDist$2);\n    } else if (geom instanceof GeometryCollection) {\n      var gc = geom;\n      for (var i$2 = 0; i$2 < gc.getNumGeometries(); i$2++) {\n        var g = gc.getGeometryN(i$2);\n        DistanceToPoint.computeDistance(g, pt$2, ptDist$2);\n      }\n    } else {\n      ptDist$2.setMinimum(geom.getCoordinate(), pt$2);\n    }\n  } else if (arguments[2] instanceof PointPairDistance$2 && (arguments[0] instanceof LineSegment && arguments[1] instanceof Coordinate)) {\n    var segment = arguments[0];\n    var pt$3 = arguments[1];\n    var ptDist$3 = arguments[2];\n    var closestPt$1 = segment.closestPoint(pt$3);\n    ptDist$3.setMinimum(closestPt$1, pt$3);\n  }\n};\n\nvar DiscreteHausdorffDistance = function DiscreteHausdorffDistance () {\n  this._g0 = null;\n  this._g1 = null;\n  this._ptDist = new PointPairDistance$2();\n  this._densifyFrac = 0.0;\n  var g0 = arguments[0];\n  var g1 = arguments[1];\n  this._g0 = g0;\n  this._g1 = g1;\n};\n\nvar staticAccessors$39 = { MaxPointDistanceFilter: { configurable: true },MaxDensifiedByFractionDistanceFilter: { configurable: true } };\nDiscreteHausdorffDistance.prototype.getCoordinates = function getCoordinates () {\n  return this._ptDist.getCoordinates()\n};\nDiscreteHausdorffDistance.prototype.setDensifyFraction = function setDensifyFraction (densifyFrac) {\n  if (densifyFrac > 1.0 || densifyFrac <= 0.0) { throw new IllegalArgumentException('Fraction is not in range (0.0 - 1.0]') }\n  this._densifyFrac = densifyFrac;\n};\nDiscreteHausdorffDistance.prototype.compute = function compute (g0, g1) {\n  this.computeOrientedDistance(g0, g1, this._ptDist);\n  this.computeOrientedDistance(g1, g0, this._ptDist);\n};\nDiscreteHausdorffDistance.prototype.distance = function distance () {\n  this.compute(this._g0, this._g1);\n  return this._ptDist.getDistance()\n};\nDiscreteHausdorffDistance.prototype.computeOrientedDistance = function computeOrientedDistance (discreteGeom, geom, ptDist) {\n  var distFilter = new MaxPointDistanceFilter$1(geom);\n  discreteGeom.apply(distFilter);\n  ptDist.setMaximum(distFilter.getMaxPointDistance());\n  if (this._densifyFrac > 0) {\n    var fracFilter = new MaxDensifiedByFractionDistanceFilter(geom, this._densifyFrac);\n    discreteGeom.apply(fracFilter);\n    ptDist.setMaximum(fracFilter.getMaxPointDistance());\n  }\n};\nDiscreteHausdorffDistance.prototype.orientedDistance = function orientedDistance () {\n  this.computeOrientedDistance(this._g0, this._g1, this._ptDist);\n  return this._ptDist.getDistance()\n};\nDiscreteHausdorffDistance.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nDiscreteHausdorffDistance.prototype.getClass = function getClass () {\n  return DiscreteHausdorffDistance\n};\nDiscreteHausdorffDistance.distance = function distance () {\n  if (arguments.length === 2) {\n    var g0 = arguments[0];\n    var g1 = arguments[1];\n    var dist = new DiscreteHausdorffDistance(g0, g1);\n    return dist.distance()\n  } else if (arguments.length === 3) {\n    var g0$1 = arguments[0];\n    var g1$1 = arguments[1];\n    var densifyFrac = arguments[2];\n    var dist$1 = new DiscreteHausdorffDistance(g0$1, g1$1);\n    dist$1.setDensifyFraction(densifyFrac);\n    return dist$1.distance()\n  }\n};\nstaticAccessors$39.MaxPointDistanceFilter.get = function () { return MaxPointDistanceFilter$1 };\nstaticAccessors$39.MaxDensifiedByFractionDistanceFilter.get = function () { return MaxDensifiedByFractionDistanceFilter };\n\nObject.defineProperties( DiscreteHausdorffDistance, staticAccessors$39 );\n\nvar MaxPointDistanceFilter$1 = function MaxPointDistanceFilter () {\n  this._maxPtDist = new PointPairDistance$2();\n  this._minPtDist = new PointPairDistance$2();\n  this._euclideanDist = new DistanceToPoint();\n  this._geom = null;\n  var geom = arguments[0];\n  this._geom = geom;\n};\nMaxPointDistanceFilter$1.prototype.filter = function filter (pt) {\n  this._minPtDist.initialize();\n  DistanceToPoint.computeDistance(this._geom, pt, this._minPtDist);\n  this._maxPtDist.setMaximum(this._minPtDist);\n};\nMaxPointDistanceFilter$1.prototype.getMaxPointDistance = function getMaxPointDistance () {\n  return this._maxPtDist\n};\nMaxPointDistanceFilter$1.prototype.interfaces_ = function interfaces_ () {\n  return [CoordinateFilter]\n};\nMaxPointDistanceFilter$1.prototype.getClass = function getClass () {\n  return MaxPointDistanceFilter$1\n};\n\nvar MaxDensifiedByFractionDistanceFilter = function MaxDensifiedByFractionDistanceFilter () {\n  this._maxPtDist = new PointPairDistance$2();\n  this._minPtDist = new PointPairDistance$2();\n  this._geom = null;\n  this._numSubSegs = 0;\n  var geom = arguments[0];\n  var fraction = arguments[1];\n  this._geom = geom;\n  this._numSubSegs = Math.trunc(Math.round(1.0 / fraction));\n};\nMaxDensifiedByFractionDistanceFilter.prototype.filter = function filter (seq, index) {\n    var this$1 = this;\n\n  if (index === 0) { return null }\n  var p0 = seq.getCoordinate(index - 1);\n  var p1 = seq.getCoordinate(index);\n  var delx = (p1.x - p0.x) / this._numSubSegs;\n  var dely = (p1.y - p0.y) / this._numSubSegs;\n  for (var i = 0; i < this._numSubSegs; i++) {\n    var x = p0.x + i * delx;\n    var y = p0.y + i * dely;\n    var pt = new Coordinate(x, y);\n    this$1._minPtDist.initialize();\n    DistanceToPoint.computeDistance(this$1._geom, pt, this$1._minPtDist);\n    this$1._maxPtDist.setMaximum(this$1._minPtDist);\n  }\n};\nMaxDensifiedByFractionDistanceFilter.prototype.isDone = function isDone () {\n  return false\n};\nMaxDensifiedByFractionDistanceFilter.prototype.isGeometryChanged = function isGeometryChanged () {\n  return false\n};\nMaxDensifiedByFractionDistanceFilter.prototype.getMaxPointDistance = function getMaxPointDistance () {\n  return this._maxPtDist\n};\nMaxDensifiedByFractionDistanceFilter.prototype.interfaces_ = function interfaces_ () {\n  return [CoordinateSequenceFilter]\n};\nMaxDensifiedByFractionDistanceFilter.prototype.getClass = function getClass () {\n  return MaxDensifiedByFractionDistanceFilter\n};\n\nvar BufferDistanceValidator = function BufferDistanceValidator (input, bufDistance, result) {\n  this._minValidDistance = null;\n  this._maxValidDistance = null;\n  this._minDistanceFound = null;\n  this._maxDistanceFound = null;\n  this._isValid = true;\n  this._errMsg = null;\n  this._errorLocation = null;\n  this._errorIndicator = null;\n  this._input = input || null;\n  this._bufDistance = bufDistance || null;\n  this._result = result || null;\n};\n\nvar staticAccessors$37 = { VERBOSE: { configurable: true },MAX_DISTANCE_DIFF_FRAC: { configurable: true } };\nBufferDistanceValidator.prototype.checkMaximumDistance = function checkMaximumDistance (input, bufCurve, maxDist) {\n  var haus = new DiscreteHausdorffDistance(bufCurve, input);\n  haus.setDensifyFraction(0.25);\n  this._maxDistanceFound = haus.orientedDistance();\n  if (this._maxDistanceFound > maxDist) {\n    this._isValid = false;\n    var pts = haus.getCoordinates();\n    this._errorLocation = pts[1];\n    this._errorIndicator = input.getFactory().createLineString(pts);\n    this._errMsg = 'Distance between buffer curve and input is too large (' + this._maxDistanceFound + ' at ' + WKTWriter.toLineString(pts[0], pts[1]) + ')';\n  }\n};\nBufferDistanceValidator.prototype.isValid = function isValid () {\n  var posDistance = Math.abs(this._bufDistance);\n  var distDelta = BufferDistanceValidator.MAX_DISTANCE_DIFF_FRAC * posDistance;\n  this._minValidDistance = posDistance - distDelta;\n  this._maxValidDistance = posDistance + distDelta;\n  if (this._input.isEmpty() || this._result.isEmpty()) { return true }\n  if (this._bufDistance > 0.0) {\n    this.checkPositiveValid();\n  } else {\n    this.checkNegativeValid();\n  }\n  if (BufferDistanceValidator.VERBOSE) {\n    System.out.println('Min Dist= ' + this._minDistanceFound + '  err= ' + (1.0 - this._minDistanceFound / this._bufDistance) + '  Max Dist= ' + this._maxDistanceFound + '  err= ' + (this._maxDistanceFound / this._bufDistance - 1.0));\n  }\n  return this._isValid\n};\nBufferDistanceValidator.prototype.checkNegativeValid = function checkNegativeValid () {\n  if (!(this._input instanceof Polygon || this._input instanceof MultiPolygon || this._input instanceof GeometryCollection)) {\n    return null\n  }\n  var inputCurve = this.getPolygonLines(this._input);\n  this.checkMinimumDistance(inputCurve, this._result, this._minValidDistance);\n  if (!this._isValid) { return null }\n  this.checkMaximumDistance(inputCurve, this._result, this._maxValidDistance);\n};\nBufferDistanceValidator.prototype.getErrorIndicator = function getErrorIndicator () {\n  return this._errorIndicator\n};\nBufferDistanceValidator.prototype.checkMinimumDistance = function checkMinimumDistance (g1, g2, minDist) {\n  var distOp = new DistanceOp(g1, g2, minDist);\n  this._minDistanceFound = distOp.distance();\n  if (this._minDistanceFound < minDist) {\n    this._isValid = false;\n    var pts = distOp.nearestPoints();\n    this._errorLocation = distOp.nearestPoints()[1];\n    this._errorIndicator = g1.getFactory().createLineString(pts);\n    this._errMsg = 'Distance between buffer curve and input is too small (' + this._minDistanceFound + ' at ' + WKTWriter.toLineString(pts[0], pts[1]) + ' )';\n  }\n};\nBufferDistanceValidator.prototype.checkPositiveValid = function checkPositiveValid () {\n  var bufCurve = this._result.getBoundary();\n  this.checkMinimumDistance(this._input, bufCurve, this._minValidDistance);\n  if (!this._isValid) { return null }\n  this.checkMaximumDistance(this._input, bufCurve, this._maxValidDistance);\n};\nBufferDistanceValidator.prototype.getErrorLocation = function getErrorLocation () {\n  return this._errorLocation\n};\nBufferDistanceValidator.prototype.getPolygonLines = function getPolygonLines (g) {\n  var lines = new ArrayList();\n  var lineExtracter = new LinearComponentExtracter(lines);\n  var polys = PolygonExtracter.getPolygons(g);\n  for (var i = polys.iterator(); i.hasNext();) {\n    var poly = i.next();\n    poly.apply(lineExtracter);\n  }\n  return g.getFactory().buildGeometry(lines)\n};\nBufferDistanceValidator.prototype.getErrorMessage = function getErrorMessage () {\n  return this._errMsg\n};\nBufferDistanceValidator.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nBufferDistanceValidator.prototype.getClass = function getClass () {\n  return BufferDistanceValidator\n};\nstaticAccessors$37.VERBOSE.get = function () { return false };\nstaticAccessors$37.MAX_DISTANCE_DIFF_FRAC.get = function () { return 0.012 };\n\nObject.defineProperties( BufferDistanceValidator, staticAccessors$37 );\n\nvar BufferResultValidator = function BufferResultValidator (input, distance, result) {\n  this._isValid = true;\n  this._errorMsg = null;\n  this._errorLocation = null;\n  this._errorIndicator = null;\n  this._input = input || null;\n  this._distance = distance || null;\n  this._result = result || null;\n};\n\nvar staticAccessors$40 = { VERBOSE: { configurable: true },MAX_ENV_DIFF_FRAC: { configurable: true } };\nBufferResultValidator.prototype.isValid = function isValid () {\n  this.checkPolygonal();\n  if (!this._isValid) { return this._isValid }\n  this.checkExpectedEmpty();\n  if (!this._isValid) { return this._isValid }\n  this.checkEnvelope();\n  if (!this._isValid) { return this._isValid }\n  this.checkArea();\n  if (!this._isValid) { return this._isValid }\n  this.checkDistance();\n  return this._isValid\n};\nBufferResultValidator.prototype.checkEnvelope = function checkEnvelope () {\n  if (this._distance < 0.0) { return null }\n  var padding = this._distance * BufferResultValidator.MAX_ENV_DIFF_FRAC;\n  if (padding === 0.0) { padding = 0.001; }\n  var expectedEnv = new Envelope(this._input.getEnvelopeInternal());\n  expectedEnv.expandBy(this._distance);\n  var bufEnv = new Envelope(this._result.getEnvelopeInternal());\n  bufEnv.expandBy(padding);\n  if (!bufEnv.contains(expectedEnv)) {\n    this._isValid = false;\n    this._errorMsg = 'Buffer envelope is incorrect';\n    this._errorIndicator = this._input.getFactory().toGeometry(bufEnv);\n  }\n  this.report('Envelope');\n};\nBufferResultValidator.prototype.checkDistance = function checkDistance () {\n  var distValid = new BufferDistanceValidator(this._input, this._distance, this._result);\n  if (!distValid.isValid()) {\n    this._isValid = false;\n    this._errorMsg = distValid.getErrorMessage();\n    this._errorLocation = distValid.getErrorLocation();\n    this._errorIndicator = distValid.getErrorIndicator();\n  }\n  this.report('Distance');\n};\nBufferResultValidator.prototype.checkArea = function checkArea () {\n  var inputArea = this._input.getArea();\n  var resultArea = this._result.getArea();\n  if (this._distance > 0.0 && inputArea > resultArea) {\n    this._isValid = false;\n    this._errorMsg = 'Area of positive buffer is smaller than input';\n    this._errorIndicator = this._result;\n  }\n  if (this._distance < 0.0 && inputArea < resultArea) {\n    this._isValid = false;\n    this._errorMsg = 'Area of negative buffer is larger than input';\n    this._errorIndicator = this._result;\n  }\n  this.report('Area');\n};\nBufferResultValidator.prototype.checkPolygonal = function checkPolygonal () {\n  if (!(this._result instanceof Polygon || this._result instanceof MultiPolygon)) { this._isValid = false; }\n  this._errorMsg = 'Result is not polygonal';\n  this._errorIndicator = this._result;\n  this.report('Polygonal');\n};\nBufferResultValidator.prototype.getErrorIndicator = function getErrorIndicator () {\n  return this._errorIndicator\n};\nBufferResultValidator.prototype.getErrorLocation = function getErrorLocation () {\n  return this._errorLocation\n};\nBufferResultValidator.prototype.checkExpectedEmpty = function checkExpectedEmpty () {\n  if (this._input.getDimension() >= 2) { return null }\n  if (this._distance > 0.0) { return null }\n  if (!this._result.isEmpty()) {\n    this._isValid = false;\n    this._errorMsg = 'Result is non-empty';\n    this._errorIndicator = this._result;\n  }\n  this.report('ExpectedEmpty');\n};\nBufferResultValidator.prototype.report = function report (checkName) {\n  if (!BufferResultValidator.VERBOSE) { return null }\n  System.out.println('Check ' + checkName + ': ' + (this._isValid ? 'passed' : 'FAILED'));\n};\nBufferResultValidator.prototype.getErrorMessage = function getErrorMessage () {\n  return this._errorMsg\n};\nBufferResultValidator.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nBufferResultValidator.prototype.getClass = function getClass () {\n  return BufferResultValidator\n};\nBufferResultValidator.isValidMsg = function isValidMsg (g, distance, result) {\n  var validator = new BufferResultValidator(g, distance, result);\n  if (!validator.isValid()) { return validator.getErrorMessage() }\n  return null\n};\nBufferResultValidator.isValid = function isValid (g, distance, result) {\n  var validator = new BufferResultValidator(g, distance, result);\n  if (validator.isValid()) { return true }\n  return false\n};\nstaticAccessors$40.VERBOSE.get = function () { return false };\nstaticAccessors$40.MAX_ENV_DIFF_FRAC.get = function () { return 0.012 };\n\nObject.defineProperties( BufferResultValidator, staticAccessors$40 );\n\n// operation.buffer\n\nvar BasicSegmentString = function BasicSegmentString () {\n  this._pts = null;\n  this._data = null;\n  var pts = arguments[0];\n  var data = arguments[1];\n  this._pts = pts;\n  this._data = data;\n};\nBasicSegmentString.prototype.getCoordinates = function getCoordinates () {\n  return this._pts\n};\nBasicSegmentString.prototype.size = function size () {\n  return this._pts.length\n};\nBasicSegmentString.prototype.getCoordinate = function getCoordinate (i) {\n  return this._pts[i]\n};\nBasicSegmentString.prototype.isClosed = function isClosed () {\n  return this._pts[0].equals(this._pts[this._pts.length - 1])\n};\nBasicSegmentString.prototype.getSegmentOctant = function getSegmentOctant (index) {\n  if (index === this._pts.length - 1) { return -1 }\n  return Octant.octant(this.getCoordinate(index), this.getCoordinate(index + 1))\n};\nBasicSegmentString.prototype.setData = function setData (data) {\n  this._data = data;\n};\nBasicSegmentString.prototype.getData = function getData () {\n  return this._data\n};\nBasicSegmentString.prototype.toString = function toString () {\n  return WKTWriter.toLineString(new CoordinateArraySequence(this._pts))\n};\nBasicSegmentString.prototype.interfaces_ = function interfaces_ () {\n  return [SegmentString]\n};\nBasicSegmentString.prototype.getClass = function getClass () {\n  return BasicSegmentString\n};\n\nvar InteriorIntersectionFinder = function InteriorIntersectionFinder () {\n  this._findAllIntersections = false;\n  this._isCheckEndSegmentsOnly = false;\n  this._li = null;\n  this._interiorIntersection = null;\n  this._intSegments = null;\n  this._intersections = new ArrayList();\n  this._intersectionCount = 0;\n  this._keepIntersections = true;\n  var li = arguments[0];\n  this._li = li;\n  this._interiorIntersection = null;\n};\nInteriorIntersectionFinder.prototype.getInteriorIntersection = function getInteriorIntersection () {\n  return this._interiorIntersection\n};\nInteriorIntersectionFinder.prototype.setCheckEndSegmentsOnly = function setCheckEndSegmentsOnly (isCheckEndSegmentsOnly) {\n  this._isCheckEndSegmentsOnly = isCheckEndSegmentsOnly;\n};\nInteriorIntersectionFinder.prototype.getIntersectionSegments = function getIntersectionSegments () {\n  return this._intSegments\n};\nInteriorIntersectionFinder.prototype.count = function count () {\n  return this._intersectionCount\n};\nInteriorIntersectionFinder.prototype.getIntersections = function getIntersections () {\n  return this._intersections\n};\nInteriorIntersectionFinder.prototype.setFindAllIntersections = function setFindAllIntersections (findAllIntersections) {\n  this._findAllIntersections = findAllIntersections;\n};\nInteriorIntersectionFinder.prototype.setKeepIntersections = function setKeepIntersections (keepIntersections) {\n  this._keepIntersections = keepIntersections;\n};\nInteriorIntersectionFinder.prototype.processIntersections = function processIntersections (e0, segIndex0, e1, segIndex1) {\n  if (!this._findAllIntersections && this.hasIntersection()) { return null }\n  if (e0 === e1 && segIndex0 === segIndex1) { return null }\n  if (this._isCheckEndSegmentsOnly) {\n    var isEndSegPresent = this.isEndSegment(e0, segIndex0) || this.isEndSegment(e1, segIndex1);\n    if (!isEndSegPresent) { return null }\n  }\n  var p00 = e0.getCoordinates()[segIndex0];\n  var p01 = e0.getCoordinates()[segIndex0 + 1];\n  var p10 = e1.getCoordinates()[segIndex1];\n  var p11 = e1.getCoordinates()[segIndex1 + 1];\n  this._li.computeIntersection(p00, p01, p10, p11);\n  if (this._li.hasIntersection()) {\n    if (this._li.isInteriorIntersection()) {\n      this._intSegments = new Array(4).fill(null);\n      this._intSegments[0] = p00;\n      this._intSegments[1] = p01;\n      this._intSegments[2] = p10;\n      this._intSegments[3] = p11;\n      this._interiorIntersection = this._li.getIntersection(0);\n      if (this._keepIntersections) { this._intersections.add(this._interiorIntersection); }\n      this._intersectionCount++;\n    }\n  }\n};\nInteriorIntersectionFinder.prototype.isEndSegment = function isEndSegment (segStr, index) {\n  if (index === 0) { return true }\n  if (index >= segStr.size() - 2) { return true }\n  return false\n};\nInteriorIntersectionFinder.prototype.hasIntersection = function hasIntersection () {\n  return this._interiorIntersection !== null\n};\nInteriorIntersectionFinder.prototype.isDone = function isDone () {\n  if (this._findAllIntersections) { return false }\n  return this._interiorIntersection !== null\n};\nInteriorIntersectionFinder.prototype.interfaces_ = function interfaces_ () {\n  return [SegmentIntersector]\n};\nInteriorIntersectionFinder.prototype.getClass = function getClass () {\n  return InteriorIntersectionFinder\n};\nInteriorIntersectionFinder.createAllIntersectionsFinder = function createAllIntersectionsFinder (li) {\n  var finder = new InteriorIntersectionFinder(li);\n  finder.setFindAllIntersections(true);\n  return finder\n};\nInteriorIntersectionFinder.createAnyIntersectionFinder = function createAnyIntersectionFinder (li) {\n  return new InteriorIntersectionFinder(li)\n};\nInteriorIntersectionFinder.createIntersectionCounter = function createIntersectionCounter (li) {\n  var finder = new InteriorIntersectionFinder(li);\n  finder.setFindAllIntersections(true);\n  finder.setKeepIntersections(false);\n  return finder\n};\n\nvar FastNodingValidator = function FastNodingValidator () {\n  this._li = new RobustLineIntersector();\n  this._segStrings = null;\n  this._findAllIntersections = false;\n  this._segInt = null;\n  this._isValid = true;\n  var segStrings = arguments[0];\n  this._segStrings = segStrings;\n};\nFastNodingValidator.prototype.execute = function execute () {\n  if (this._segInt !== null) { return null }\n  this.checkInteriorIntersections();\n};\nFastNodingValidator.prototype.getIntersections = function getIntersections () {\n  return this._segInt.getIntersections()\n};\nFastNodingValidator.prototype.isValid = function isValid () {\n  this.execute();\n  return this._isValid\n};\nFastNodingValidator.prototype.setFindAllIntersections = function setFindAllIntersections (findAllIntersections) {\n  this._findAllIntersections = findAllIntersections;\n};\nFastNodingValidator.prototype.checkInteriorIntersections = function checkInteriorIntersections () {\n  this._isValid = true;\n  this._segInt = new InteriorIntersectionFinder(this._li);\n  this._segInt.setFindAllIntersections(this._findAllIntersections);\n  var noder = new MCIndexNoder();\n  noder.setSegmentIntersector(this._segInt);\n  noder.computeNodes(this._segStrings);\n  if (this._segInt.hasIntersection()) {\n    this._isValid = false;\n    return null\n  }\n};\nFastNodingValidator.prototype.checkValid = function checkValid () {\n  this.execute();\n  if (!this._isValid) { throw new TopologyException(this.getErrorMessage(), this._segInt.getInteriorIntersection()) }\n};\nFastNodingValidator.prototype.getErrorMessage = function getErrorMessage () {\n  if (this._isValid) { return 'no intersections found' }\n  var intSegs = this._segInt.getIntersectionSegments();\n  return 'found non-noded intersection between ' + WKTWriter.toLineString(intSegs[0], intSegs[1]) + ' and ' + WKTWriter.toLineString(intSegs[2], intSegs[3])\n};\nFastNodingValidator.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nFastNodingValidator.prototype.getClass = function getClass () {\n  return FastNodingValidator\n};\nFastNodingValidator.computeIntersections = function computeIntersections (segStrings) {\n  var nv = new FastNodingValidator(segStrings);\n  nv.setFindAllIntersections(true);\n  nv.isValid();\n  return nv.getIntersections()\n};\n\nvar EdgeNodingValidator = function EdgeNodingValidator () {\n  this._nv = null;\n  var edges = arguments[0];\n  this._nv = new FastNodingValidator(EdgeNodingValidator.toSegmentStrings(edges));\n};\nEdgeNodingValidator.prototype.checkValid = function checkValid () {\n  this._nv.checkValid();\n};\nEdgeNodingValidator.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nEdgeNodingValidator.prototype.getClass = function getClass () {\n  return EdgeNodingValidator\n};\nEdgeNodingValidator.toSegmentStrings = function toSegmentStrings (edges) {\n  var segStrings = new ArrayList();\n  for (var i = edges.iterator(); i.hasNext();) {\n    var e = i.next();\n    segStrings.add(new BasicSegmentString(e.getCoordinates(), e));\n  }\n  return segStrings\n};\nEdgeNodingValidator.checkValid = function checkValid (edges) {\n  var validator = new EdgeNodingValidator(edges);\n  validator.checkValid();\n};\n\nvar GeometryCollectionMapper = function GeometryCollectionMapper (mapOp) {\n  this._mapOp = mapOp;\n};\nGeometryCollectionMapper.prototype.map = function map (gc) {\n    var this$1 = this;\n\n  var mapped = new ArrayList();\n  for (var i = 0; i < gc.getNumGeometries(); i++) {\n    var g = this$1._mapOp.map(gc.getGeometryN(i));\n    if (!g.isEmpty()) { mapped.add(g); }\n  }\n  return gc.getFactory().createGeometryCollection(GeometryFactory.toGeometryArray(mapped))\n};\nGeometryCollectionMapper.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nGeometryCollectionMapper.prototype.getClass = function getClass () {\n  return GeometryCollectionMapper\n};\nGeometryCollectionMapper.map = function map (gc, op) {\n  var mapper = new GeometryCollectionMapper(op);\n  return mapper.map(gc)\n};\n\nvar LineBuilder = function LineBuilder () {\n  this._op = null;\n  this._geometryFactory = null;\n  this._ptLocator = null;\n  this._lineEdgesList = new ArrayList();\n  this._resultLineList = new ArrayList();\n  var op = arguments[0];\n  var geometryFactory = arguments[1];\n  var ptLocator = arguments[2];\n  this._op = op;\n  this._geometryFactory = geometryFactory;\n  this._ptLocator = ptLocator;\n};\nLineBuilder.prototype.collectLines = function collectLines (opCode) {\n    var this$1 = this;\n\n  for (var it = this._op.getGraph().getEdgeEnds().iterator(); it.hasNext();) {\n    var de = it.next();\n    this$1.collectLineEdge(de, opCode, this$1._lineEdgesList);\n    this$1.collectBoundaryTouchEdge(de, opCode, this$1._lineEdgesList);\n  }\n};\nLineBuilder.prototype.labelIsolatedLine = function labelIsolatedLine (e, targetIndex) {\n  var loc = this._ptLocator.locate(e.getCoordinate(), this._op.getArgGeometry(targetIndex));\n  e.getLabel().setLocation(targetIndex, loc);\n};\nLineBuilder.prototype.build = function build (opCode) {\n  this.findCoveredLineEdges();\n  this.collectLines(opCode);\n  this.buildLines(opCode);\n  return this._resultLineList\n};\nLineBuilder.prototype.collectLineEdge = function collectLineEdge (de, opCode, edges) {\n  var label = de.getLabel();\n  var e = de.getEdge();\n  if (de.isLineEdge()) {\n    if (!de.isVisited() && OverlayOp.isResultOfOp(label, opCode) && !e.isCovered()) {\n      edges.add(e);\n      de.setVisitedEdge(true);\n    }\n  }\n};\nLineBuilder.prototype.findCoveredLineEdges = function findCoveredLineEdges () {\n    var this$1 = this;\n\n  for (var nodeit = this._op.getGraph().getNodes().iterator(); nodeit.hasNext();) {\n    var node = nodeit.next();\n    node.getEdges().findCoveredLineEdges();\n  }\n  for (var it = this._op.getGraph().getEdgeEnds().iterator(); it.hasNext();) {\n    var de = it.next();\n    var e = de.getEdge();\n    if (de.isLineEdge() && !e.isCoveredSet()) {\n      var isCovered = this$1._op.isCoveredByA(de.getCoordinate());\n      e.setCovered(isCovered);\n    }\n  }\n};\nLineBuilder.prototype.labelIsolatedLines = function labelIsolatedLines (edgesList) {\n    var this$1 = this;\n\n  for (var it = edgesList.iterator(); it.hasNext();) {\n    var e = it.next();\n    var label = e.getLabel();\n    if (e.isIsolated()) {\n      if (label.isNull(0)) { this$1.labelIsolatedLine(e, 0); } else { this$1.labelIsolatedLine(e, 1); }\n    }\n  }\n};\nLineBuilder.prototype.buildLines = function buildLines (opCode) {\n    var this$1 = this;\n\n  for (var it = this._lineEdgesList.iterator(); it.hasNext();) {\n    var e = it.next();\n    // const label = e.getLabel()\n    var line = this$1._geometryFactory.createLineString(e.getCoordinates());\n    this$1._resultLineList.add(line);\n    e.setInResult(true);\n  }\n};\nLineBuilder.prototype.collectBoundaryTouchEdge = function collectBoundaryTouchEdge (de, opCode, edges) {\n  var label = de.getLabel();\n  if (de.isLineEdge()) { return null }\n  if (de.isVisited()) { return null }\n  if (de.isInteriorAreaEdge()) { return null }\n  if (de.getEdge().isInResult()) { return null }\n  Assert.isTrue(!(de.isInResult() || de.getSym().isInResult()) || !de.getEdge().isInResult());\n  if (OverlayOp.isResultOfOp(label, opCode) && opCode === OverlayOp.INTERSECTION) {\n    edges.add(de.getEdge());\n    de.setVisitedEdge(true);\n  }\n};\nLineBuilder.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nLineBuilder.prototype.getClass = function getClass () {\n  return LineBuilder\n};\n\nvar PointBuilder = function PointBuilder () {\n  this._op = null;\n  this._geometryFactory = null;\n  this._resultPointList = new ArrayList();\n  var op = arguments[0];\n  var geometryFactory = arguments[1];\n  // const ptLocator = arguments[2]\n  this._op = op;\n  this._geometryFactory = geometryFactory;\n};\nPointBuilder.prototype.filterCoveredNodeToPoint = function filterCoveredNodeToPoint (n) {\n  var coord = n.getCoordinate();\n  if (!this._op.isCoveredByLA(coord)) {\n    var pt = this._geometryFactory.createPoint(coord);\n    this._resultPointList.add(pt);\n  }\n};\nPointBuilder.prototype.extractNonCoveredResultNodes = function extractNonCoveredResultNodes (opCode) {\n    var this$1 = this;\n\n  for (var nodeit = this._op.getGraph().getNodes().iterator(); nodeit.hasNext();) {\n    var n = nodeit.next();\n    if (n.isInResult()) { continue }\n    if (n.isIncidentEdgeInResult()) { continue }\n    if (n.getEdges().getDegree() === 0 || opCode === OverlayOp.INTERSECTION) {\n      var label = n.getLabel();\n      if (OverlayOp.isResultOfOp(label, opCode)) {\n        this$1.filterCoveredNodeToPoint(n);\n      }\n    }\n  }\n};\nPointBuilder.prototype.build = function build (opCode) {\n  this.extractNonCoveredResultNodes(opCode);\n  return this._resultPointList\n};\nPointBuilder.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nPointBuilder.prototype.getClass = function getClass () {\n  return PointBuilder\n};\n\nvar GeometryTransformer = function GeometryTransformer () {\n  this._inputGeom = null;\n  this._factory = null;\n  this._pruneEmptyGeometry = true;\n  this._preserveGeometryCollectionType = true;\n  this._preserveCollections = false;\n  this._preserveType = false;\n};\nGeometryTransformer.prototype.transformPoint = function transformPoint (geom, parent) {\n  return this._factory.createPoint(this.transformCoordinates(geom.getCoordinateSequence(), geom))\n};\nGeometryTransformer.prototype.transformPolygon = function transformPolygon (geom, parent) {\n    var this$1 = this;\n\n  var isAllValidLinearRings = true;\n  var shell = this.transformLinearRing(geom.getExteriorRing(), geom);\n  if (shell === null || !(shell instanceof LinearRing) || shell.isEmpty()) { isAllValidLinearRings = false; }\n  var holes = new ArrayList();\n  for (var i = 0; i < geom.getNumInteriorRing(); i++) {\n    var hole = this$1.transformLinearRing(geom.getInteriorRingN(i), geom);\n    if (hole === null || hole.isEmpty()) {\n      continue\n    }\n    if (!(hole instanceof LinearRing)) { isAllValidLinearRings = false; }\n    holes.add(hole);\n  }\n  if (isAllValidLinearRings) { return this._factory.createPolygon(shell, holes.toArray([])); } else {\n    var components = new ArrayList();\n    if (shell !== null) { components.add(shell); }\n    components.addAll(holes);\n    return this._factory.buildGeometry(components)\n  }\n};\nGeometryTransformer.prototype.createCoordinateSequence = function createCoordinateSequence (coords) {\n  return this._factory.getCoordinateSequenceFactory().create(coords)\n};\nGeometryTransformer.prototype.getInputGeometry = function getInputGeometry () {\n  return this._inputGeom\n};\nGeometryTransformer.prototype.transformMultiLineString = function transformMultiLineString (geom, parent) {\n    var this$1 = this;\n\n  var transGeomList = new ArrayList();\n  for (var i = 0; i < geom.getNumGeometries(); i++) {\n    var transformGeom = this$1.transformLineString(geom.getGeometryN(i), geom);\n    if (transformGeom === null) { continue }\n    if (transformGeom.isEmpty()) { continue }\n    transGeomList.add(transformGeom);\n  }\n  return this._factory.buildGeometry(transGeomList)\n};\nGeometryTransformer.prototype.transformCoordinates = function transformCoordinates (coords, parent) {\n  return this.copy(coords)\n};\nGeometryTransformer.prototype.transformLineString = function transformLineString (geom, parent) {\n  return this._factory.createLineString(this.transformCoordinates(geom.getCoordinateSequence(), geom))\n};\nGeometryTransformer.prototype.transformMultiPoint = function transformMultiPoint (geom, parent) {\n    var this$1 = this;\n\n  var transGeomList = new ArrayList();\n  for (var i = 0; i < geom.getNumGeometries(); i++) {\n    var transformGeom = this$1.transformPoint(geom.getGeometryN(i), geom);\n    if (transformGeom === null) { continue }\n    if (transformGeom.isEmpty()) { continue }\n    transGeomList.add(transformGeom);\n  }\n  return this._factory.buildGeometry(transGeomList)\n};\nGeometryTransformer.prototype.transformMultiPolygon = function transformMultiPolygon (geom, parent) {\n    var this$1 = this;\n\n  var transGeomList = new ArrayList();\n  for (var i = 0; i < geom.getNumGeometries(); i++) {\n    var transformGeom = this$1.transformPolygon(geom.getGeometryN(i), geom);\n    if (transformGeom === null) { continue }\n    if (transformGeom.isEmpty()) { continue }\n    transGeomList.add(transformGeom);\n  }\n  return this._factory.buildGeometry(transGeomList)\n};\nGeometryTransformer.prototype.copy = function copy (seq) {\n  return seq.copy()\n};\nGeometryTransformer.prototype.transformGeometryCollection = function transformGeometryCollection (geom, parent) {\n    var this$1 = this;\n\n  var transGeomList = new ArrayList();\n  for (var i = 0; i < geom.getNumGeometries(); i++) {\n    var transformGeom = this$1.transform(geom.getGeometryN(i));\n    if (transformGeom === null) { continue }\n    if (this$1._pruneEmptyGeometry && transformGeom.isEmpty()) { continue }\n    transGeomList.add(transformGeom);\n  }\n  if (this._preserveGeometryCollectionType) { return this._factory.createGeometryCollection(GeometryFactory.toGeometryArray(transGeomList)) }\n  return this._factory.buildGeometry(transGeomList)\n};\nGeometryTransformer.prototype.transform = function transform (inputGeom) {\n  this._inputGeom = inputGeom;\n  this._factory = inputGeom.getFactory();\n  if (inputGeom instanceof Point) { return this.transformPoint(inputGeom, null) }\n  if (inputGeom instanceof MultiPoint) { return this.transformMultiPoint(inputGeom, null) }\n  if (inputGeom instanceof LinearRing) { return this.transformLinearRing(inputGeom, null) }\n  if (inputGeom instanceof LineString) { return this.transformLineString(inputGeom, null) }\n  if (inputGeom instanceof MultiLineString) { return this.transformMultiLineString(inputGeom, null) }\n  if (inputGeom instanceof Polygon) { return this.transformPolygon(inputGeom, null) }\n  if (inputGeom instanceof MultiPolygon) { return this.transformMultiPolygon(inputGeom, null) }\n  if (inputGeom instanceof GeometryCollection) { return this.transformGeometryCollection(inputGeom, null) }\n  throw new IllegalArgumentException('Unknown Geometry subtype: ' + inputGeom.getClass().getName())\n};\nGeometryTransformer.prototype.transformLinearRing = function transformLinearRing (geom, parent) {\n  var seq = this.transformCoordinates(geom.getCoordinateSequence(), geom);\n  if (seq === null) { return this._factory.createLinearRing(null) }\n  var seqSize = seq.size();\n  if (seqSize > 0 && seqSize < 4 && !this._preserveType) { return this._factory.createLineString(seq) }\n  return this._factory.createLinearRing(seq)\n};\nGeometryTransformer.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nGeometryTransformer.prototype.getClass = function getClass () {\n  return GeometryTransformer\n};\n\nvar LineStringSnapper = function LineStringSnapper () {\n  this._snapTolerance = 0.0;\n  this._srcPts = null;\n  this._seg = new LineSegment();\n  this._allowSnappingToSourceVertices = false;\n  this._isClosed = false;\n  if (arguments[0] instanceof LineString && typeof arguments[1] === 'number') {\n    var srcLine = arguments[0];\n    var snapTolerance = arguments[1];\n    LineStringSnapper.call(this, srcLine.getCoordinates(), snapTolerance);\n  } else if (arguments[0] instanceof Array && typeof arguments[1] === 'number') {\n    var srcPts = arguments[0];\n    var snapTolerance$1 = arguments[1];\n    this._srcPts = srcPts;\n    this._isClosed = LineStringSnapper.isClosed(srcPts);\n    this._snapTolerance = snapTolerance$1;\n  }\n};\nLineStringSnapper.prototype.snapVertices = function snapVertices (srcCoords, snapPts) {\n    var this$1 = this;\n\n  var end = this._isClosed ? srcCoords.size() - 1 : srcCoords.size();\n  for (var i = 0; i < end; i++) {\n    var srcPt = srcCoords.get(i);\n    var snapVert = this$1.findSnapForVertex(srcPt, snapPts);\n    if (snapVert !== null) {\n      srcCoords.set(i, new Coordinate(snapVert));\n      if (i === 0 && this$1._isClosed) { srcCoords.set(srcCoords.size() - 1, new Coordinate(snapVert)); }\n    }\n  }\n};\nLineStringSnapper.prototype.findSnapForVertex = function findSnapForVertex (pt, snapPts) {\n    var this$1 = this;\n\n  for (var i = 0; i < snapPts.length; i++) {\n    if (pt.equals2D(snapPts[i])) { return null }\n    if (pt.distance(snapPts[i]) < this$1._snapTolerance) { return snapPts[i] }\n  }\n  return null\n};\nLineStringSnapper.prototype.snapTo = function snapTo (snapPts) {\n  var coordList = new CoordinateList(this._srcPts);\n  this.snapVertices(coordList, snapPts);\n  this.snapSegments(coordList, snapPts);\n  var newPts = coordList.toCoordinateArray();\n  return newPts\n};\nLineStringSnapper.prototype.snapSegments = function snapSegments (srcCoords, snapPts) {\n    var this$1 = this;\n\n  if (snapPts.length === 0) { return null }\n  var distinctPtCount = snapPts.length;\n  if (snapPts[0].equals2D(snapPts[snapPts.length - 1])) { distinctPtCount = snapPts.length - 1; }\n  for (var i = 0; i < distinctPtCount; i++) {\n    var snapPt = snapPts[i];\n    var index = this$1.findSegmentIndexToSnap(snapPt, srcCoords);\n    if (index >= 0) {\n      srcCoords.add(index + 1, new Coordinate(snapPt), false);\n    }\n  }\n};\nLineStringSnapper.prototype.findSegmentIndexToSnap = function findSegmentIndexToSnap (snapPt, srcCoords) {\n    var this$1 = this;\n\n  var minDist = Double.MAX_VALUE;\n  var snapIndex = -1;\n  for (var i = 0; i < srcCoords.size() - 1; i++) {\n    this$1._seg.p0 = srcCoords.get(i);\n    this$1._seg.p1 = srcCoords.get(i + 1);\n    if (this$1._seg.p0.equals2D(snapPt) || this$1._seg.p1.equals2D(snapPt)) {\n      if (this$1._allowSnappingToSourceVertices) { continue; } else { return -1 }\n    }\n    var dist = this$1._seg.distance(snapPt);\n    if (dist < this$1._snapTolerance && dist < minDist) {\n      minDist = dist;\n      snapIndex = i;\n    }\n  }\n  return snapIndex\n};\nLineStringSnapper.prototype.setAllowSnappingToSourceVertices = function setAllowSnappingToSourceVertices (allowSnappingToSourceVertices) {\n  this._allowSnappingToSourceVertices = allowSnappingToSourceVertices;\n};\nLineStringSnapper.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nLineStringSnapper.prototype.getClass = function getClass () {\n  return LineStringSnapper\n};\nLineStringSnapper.isClosed = function isClosed (pts) {\n  if (pts.length <= 1) { return false }\n  return pts[0].equals2D(pts[pts.length - 1])\n};\n\nvar GeometrySnapper = function GeometrySnapper (srcGeom) {\n  this._srcGeom = srcGeom || null;\n};\n\nvar staticAccessors$41 = { SNAP_PRECISION_FACTOR: { configurable: true } };\nGeometrySnapper.prototype.snapTo = function snapTo (snapGeom, snapTolerance) {\n  var snapPts = this.extractTargetCoordinates(snapGeom);\n  var snapTrans = new SnapTransformer(snapTolerance, snapPts);\n  return snapTrans.transform(this._srcGeom)\n};\nGeometrySnapper.prototype.snapToSelf = function snapToSelf (snapTolerance, cleanResult) {\n  var snapPts = this.extractTargetCoordinates(this._srcGeom);\n  var snapTrans = new SnapTransformer(snapTolerance, snapPts, true);\n  var snappedGeom = snapTrans.transform(this._srcGeom);\n  var result = snappedGeom;\n  if (cleanResult && hasInterface(result, Polygonal)) {\n    result = snappedGeom.buffer(0);\n  }\n  return result\n};\nGeometrySnapper.prototype.computeSnapTolerance = function computeSnapTolerance (ringPts) {\n  var minSegLen = this.computeMinimumSegmentLength(ringPts);\n  var snapTol = minSegLen / 10;\n  return snapTol\n};\nGeometrySnapper.prototype.extractTargetCoordinates = function extractTargetCoordinates (g) {\n  var ptSet = new TreeSet();\n  var pts = g.getCoordinates();\n  for (var i = 0; i < pts.length; i++) {\n    ptSet.add(pts[i]);\n  }\n  return ptSet.toArray(new Array(0).fill(null))\n};\nGeometrySnapper.prototype.computeMinimumSegmentLength = function computeMinimumSegmentLength (pts) {\n  var minSegLen = Double.MAX_VALUE;\n  for (var i = 0; i < pts.length - 1; i++) {\n    var segLen = pts[i].distance(pts[i + 1]);\n    if (segLen < minSegLen) { minSegLen = segLen; }\n  }\n  return minSegLen\n};\nGeometrySnapper.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nGeometrySnapper.prototype.getClass = function getClass () {\n  return GeometrySnapper\n};\nGeometrySnapper.snap = function snap (g0, g1, snapTolerance) {\n  var snapGeom = new Array(2).fill(null);\n  var snapper0 = new GeometrySnapper(g0);\n  snapGeom[0] = snapper0.snapTo(g1, snapTolerance);\n  var snapper1 = new GeometrySnapper(g1);\n  snapGeom[1] = snapper1.snapTo(snapGeom[0], snapTolerance);\n  return snapGeom\n};\nGeometrySnapper.computeOverlaySnapTolerance = function computeOverlaySnapTolerance () {\n  if (arguments.length === 1) {\n    var g = arguments[0];\n    var snapTolerance = GeometrySnapper.computeSizeBasedSnapTolerance(g);\n    var pm = g.getPrecisionModel();\n    if (pm.getType() === PrecisionModel.FIXED) {\n      var fixedSnapTol = 1 / pm.getScale() * 2 / 1.415;\n      if (fixedSnapTol > snapTolerance) { snapTolerance = fixedSnapTol; }\n    }\n    return snapTolerance\n  } else if (arguments.length === 2) {\n    var g0 = arguments[0];\n    var g1 = arguments[1];\n    return Math.min(GeometrySnapper.computeOverlaySnapTolerance(g0), GeometrySnapper.computeOverlaySnapTolerance(g1))\n  }\n};\nGeometrySnapper.computeSizeBasedSnapTolerance = function computeSizeBasedSnapTolerance (g) {\n  var env = g.getEnvelopeInternal();\n  var minDimension = Math.min(env.getHeight(), env.getWidth());\n  var snapTol = minDimension * GeometrySnapper.SNAP_PRECISION_FACTOR;\n  return snapTol\n};\nGeometrySnapper.snapToSelf = function snapToSelf (geom, snapTolerance, cleanResult) {\n  var snapper0 = new GeometrySnapper(geom);\n  return snapper0.snapToSelf(snapTolerance, cleanResult)\n};\nstaticAccessors$41.SNAP_PRECISION_FACTOR.get = function () { return 1e-9 };\n\nObject.defineProperties( GeometrySnapper, staticAccessors$41 );\n\nvar SnapTransformer = (function (GeometryTransformer$$1) {\n  function SnapTransformer (snapTolerance, snapPts, isSelfSnap) {\n    GeometryTransformer$$1.call(this);\n    this._snapTolerance = snapTolerance || null;\n    this._snapPts = snapPts || null;\n    this._isSelfSnap = (isSelfSnap !== undefined) ? isSelfSnap : false;\n  }\n\n  if ( GeometryTransformer$$1 ) SnapTransformer.__proto__ = GeometryTransformer$$1;\n  SnapTransformer.prototype = Object.create( GeometryTransformer$$1 && GeometryTransformer$$1.prototype );\n  SnapTransformer.prototype.constructor = SnapTransformer;\n  SnapTransformer.prototype.snapLine = function snapLine (srcPts, snapPts) {\n    var snapper = new LineStringSnapper(srcPts, this._snapTolerance);\n    snapper.setAllowSnappingToSourceVertices(this._isSelfSnap);\n    return snapper.snapTo(snapPts)\n  };\n  SnapTransformer.prototype.transformCoordinates = function transformCoordinates (coords, parent) {\n    var srcPts = coords.toCoordinateArray();\n    var newPts = this.snapLine(srcPts, this._snapPts);\n    return this._factory.getCoordinateSequenceFactory().create(newPts)\n  };\n  SnapTransformer.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  SnapTransformer.prototype.getClass = function getClass () {\n    return SnapTransformer\n  };\n\n  return SnapTransformer;\n}(GeometryTransformer));\n\nvar CommonBits = function CommonBits () {\n  this._isFirst = true;\n  this._commonMantissaBitsCount = 53;\n  this._commonBits = 0;\n  this._commonSignExp = null;\n};\nCommonBits.prototype.getCommon = function getCommon () {\n  return Double.longBitsToDouble(this._commonBits)\n};\nCommonBits.prototype.add = function add (num) {\n  var numBits = Double.doubleToLongBits(num);\n  if (this._isFirst) {\n    this._commonBits = numBits;\n    this._commonSignExp = CommonBits.signExpBits(this._commonBits);\n    this._isFirst = false;\n    return null\n  }\n  var numSignExp = CommonBits.signExpBits(numBits);\n  if (numSignExp !== this._commonSignExp) {\n    this._commonBits = 0;\n    return null\n  }\n  this._commonMantissaBitsCount = CommonBits.numCommonMostSigMantissaBits(this._commonBits, numBits);\n  this._commonBits = CommonBits.zeroLowerBits(this._commonBits, 64 - (12 + this._commonMantissaBitsCount));\n};\nCommonBits.prototype.toString = function toString () {\n  if (arguments.length === 1) {\n    var bits = arguments[0];\n    var x = Double.longBitsToDouble(bits);\n    var numStr = Double.toBinaryString(bits);\n    var padStr = '0000000000000000000000000000000000000000000000000000000000000000' + numStr;\n    var bitStr = padStr.substring(padStr.length - 64);\n    var str = bitStr.substring(0, 1) + '  ' + bitStr.substring(1, 12) + '(exp) ' + bitStr.substring(12) + ' [ ' + x + ' ]';\n    return str\n  }\n};\nCommonBits.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nCommonBits.prototype.getClass = function getClass () {\n  return CommonBits\n};\nCommonBits.getBit = function getBit (bits, i) {\n  var mask = 1 << i;\n  return (bits & mask) !== 0 ? 1 : 0\n};\nCommonBits.signExpBits = function signExpBits (num) {\n  return num >> 52\n};\nCommonBits.zeroLowerBits = function zeroLowerBits (bits, nBits) {\n  var invMask = (1 << nBits) - 1;\n  var mask = ~invMask;\n  var zeroed = bits & mask;\n  return zeroed\n};\nCommonBits.numCommonMostSigMantissaBits = function numCommonMostSigMantissaBits (num1, num2) {\n  var count = 0;\n  for (var i = 52; i >= 0; i--) {\n    if (CommonBits.getBit(num1, i) !== CommonBits.getBit(num2, i)) { return count }\n    count++;\n  }\n  return 52\n};\n\nvar CommonBitsRemover = function CommonBitsRemover () {\n  this._commonCoord = null;\n  this._ccFilter = new CommonCoordinateFilter();\n};\n\nvar staticAccessors$42 = { CommonCoordinateFilter: { configurable: true },Translater: { configurable: true } };\nCommonBitsRemover.prototype.addCommonBits = function addCommonBits (geom) {\n  var trans = new Translater(this._commonCoord);\n  geom.apply(trans);\n  geom.geometryChanged();\n};\nCommonBitsRemover.prototype.removeCommonBits = function removeCommonBits (geom) {\n  if (this._commonCoord.x === 0.0 && this._commonCoord.y === 0.0) { return geom }\n  var invCoord = new Coordinate(this._commonCoord);\n  invCoord.x = -invCoord.x;\n  invCoord.y = -invCoord.y;\n  var trans = new Translater(invCoord);\n  geom.apply(trans);\n  geom.geometryChanged();\n  return geom\n};\nCommonBitsRemover.prototype.getCommonCoordinate = function getCommonCoordinate () {\n  return this._commonCoord\n};\nCommonBitsRemover.prototype.add = function add (geom) {\n  geom.apply(this._ccFilter);\n  this._commonCoord = this._ccFilter.getCommonCoordinate();\n};\nCommonBitsRemover.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nCommonBitsRemover.prototype.getClass = function getClass () {\n  return CommonBitsRemover\n};\nstaticAccessors$42.CommonCoordinateFilter.get = function () { return CommonCoordinateFilter };\nstaticAccessors$42.Translater.get = function () { return Translater };\n\nObject.defineProperties( CommonBitsRemover, staticAccessors$42 );\n\nvar CommonCoordinateFilter = function CommonCoordinateFilter () {\n  this._commonBitsX = new CommonBits();\n  this._commonBitsY = new CommonBits();\n};\nCommonCoordinateFilter.prototype.filter = function filter (coord) {\n  this._commonBitsX.add(coord.x);\n  this._commonBitsY.add(coord.y);\n};\nCommonCoordinateFilter.prototype.getCommonCoordinate = function getCommonCoordinate () {\n  return new Coordinate(this._commonBitsX.getCommon(), this._commonBitsY.getCommon())\n};\nCommonCoordinateFilter.prototype.interfaces_ = function interfaces_ () {\n  return [CoordinateFilter]\n};\nCommonCoordinateFilter.prototype.getClass = function getClass () {\n  return CommonCoordinateFilter\n};\n\nvar Translater = function Translater () {\n  this.trans = null;\n  var trans = arguments[0];\n  this.trans = trans;\n};\nTranslater.prototype.filter = function filter (seq, i) {\n  var xp = seq.getOrdinate(i, 0) + this.trans.x;\n  var yp = seq.getOrdinate(i, 1) + this.trans.y;\n  seq.setOrdinate(i, 0, xp);\n  seq.setOrdinate(i, 1, yp);\n};\nTranslater.prototype.isDone = function isDone () {\n  return false\n};\nTranslater.prototype.isGeometryChanged = function isGeometryChanged () {\n  return true\n};\nTranslater.prototype.interfaces_ = function interfaces_ () {\n  return [CoordinateSequenceFilter]\n};\nTranslater.prototype.getClass = function getClass () {\n  return Translater\n};\n\nvar SnapOverlayOp = function SnapOverlayOp (g1, g2) {\n  this._geom = new Array(2).fill(null);\n  this._snapTolerance = null;\n  this._cbr = null;\n  this._geom[0] = g1;\n  this._geom[1] = g2;\n  this.computeSnapTolerance();\n};\nSnapOverlayOp.prototype.selfSnap = function selfSnap (geom) {\n  var snapper0 = new GeometrySnapper(geom);\n  var snapGeom = snapper0.snapTo(geom, this._snapTolerance);\n  return snapGeom\n};\nSnapOverlayOp.prototype.removeCommonBits = function removeCommonBits (geom) {\n  this._cbr = new CommonBitsRemover();\n  this._cbr.add(geom[0]);\n  this._cbr.add(geom[1]);\n  var remGeom = new Array(2).fill(null);\n  remGeom[0] = this._cbr.removeCommonBits(geom[0].copy());\n  remGeom[1] = this._cbr.removeCommonBits(geom[1].copy());\n  return remGeom\n};\nSnapOverlayOp.prototype.prepareResult = function prepareResult (geom) {\n  this._cbr.addCommonBits(geom);\n  return geom\n};\nSnapOverlayOp.prototype.getResultGeometry = function getResultGeometry (opCode) {\n  var prepGeom = this.snap(this._geom);\n  var result = OverlayOp.overlayOp(prepGeom[0], prepGeom[1], opCode);\n  return this.prepareResult(result)\n};\nSnapOverlayOp.prototype.checkValid = function checkValid (g) {\n  if (!g.isValid()) {\n    System.out.println('Snapped geometry is invalid');\n  }\n};\nSnapOverlayOp.prototype.computeSnapTolerance = function computeSnapTolerance () {\n  this._snapTolerance = GeometrySnapper.computeOverlaySnapTolerance(this._geom[0], this._geom[1]);\n};\nSnapOverlayOp.prototype.snap = function snap (geom) {\n  var remGeom = this.removeCommonBits(geom);\n  var snapGeom = GeometrySnapper.snap(remGeom[0], remGeom[1], this._snapTolerance);\n  return snapGeom\n};\nSnapOverlayOp.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nSnapOverlayOp.prototype.getClass = function getClass () {\n  return SnapOverlayOp\n};\nSnapOverlayOp.overlayOp = function overlayOp (g0, g1, opCode) {\n  var op = new SnapOverlayOp(g0, g1);\n  return op.getResultGeometry(opCode)\n};\nSnapOverlayOp.union = function union (g0, g1) {\n  return SnapOverlayOp.overlayOp(g0, g1, OverlayOp.UNION)\n};\nSnapOverlayOp.intersection = function intersection (g0, g1) {\n  return SnapOverlayOp.overlayOp(g0, g1, OverlayOp.INTERSECTION)\n};\nSnapOverlayOp.symDifference = function symDifference (g0, g1) {\n  return SnapOverlayOp.overlayOp(g0, g1, OverlayOp.SYMDIFFERENCE)\n};\nSnapOverlayOp.difference = function difference (g0, g1) {\n  return SnapOverlayOp.overlayOp(g0, g1, OverlayOp.DIFFERENCE)\n};\n\nvar SnapIfNeededOverlayOp = function SnapIfNeededOverlayOp (g1, g2) {\n  this._geom = new Array(2).fill(null);\n  this._geom[0] = g1;\n  this._geom[1] = g2;\n};\nSnapIfNeededOverlayOp.prototype.getResultGeometry = function getResultGeometry (opCode) {\n  var result = null;\n  var isSuccess = false;\n  var savedException = null;\n  try {\n    result = OverlayOp.overlayOp(this._geom[0], this._geom[1], opCode);\n    var isValid = true;\n    if (isValid) { isSuccess = true; }\n  } catch (ex) {\n    if (ex instanceof RuntimeException) {\n      savedException = ex;\n    } else { throw ex }\n  } finally {}\n  if (!isSuccess) {\n    try {\n      result = SnapOverlayOp.overlayOp(this._geom[0], this._geom[1], opCode);\n    } catch (ex) {\n      if (ex instanceof RuntimeException) {\n        throw savedException\n      } else { throw ex }\n    } finally {}\n  }\n  return result\n};\nSnapIfNeededOverlayOp.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nSnapIfNeededOverlayOp.prototype.getClass = function getClass () {\n  return SnapIfNeededOverlayOp\n};\nSnapIfNeededOverlayOp.overlayOp = function overlayOp (g0, g1, opCode) {\n  var op = new SnapIfNeededOverlayOp(g0, g1);\n  return op.getResultGeometry(opCode)\n};\nSnapIfNeededOverlayOp.union = function union (g0, g1) {\n  return SnapIfNeededOverlayOp.overlayOp(g0, g1, OverlayOp.UNION)\n};\nSnapIfNeededOverlayOp.intersection = function intersection (g0, g1) {\n  return SnapIfNeededOverlayOp.overlayOp(g0, g1, OverlayOp.INTERSECTION)\n};\nSnapIfNeededOverlayOp.symDifference = function symDifference (g0, g1) {\n  return SnapIfNeededOverlayOp.overlayOp(g0, g1, OverlayOp.SYMDIFFERENCE)\n};\nSnapIfNeededOverlayOp.difference = function difference (g0, g1) {\n  return SnapIfNeededOverlayOp.overlayOp(g0, g1, OverlayOp.DIFFERENCE)\n};\n\nvar MonotoneChain$2 = function MonotoneChain () {\n  this.mce = null;\n  this.chainIndex = null;\n  var mce = arguments[0];\n  var chainIndex = arguments[1];\n  this.mce = mce;\n  this.chainIndex = chainIndex;\n};\nMonotoneChain$2.prototype.computeIntersections = function computeIntersections (mc, si) {\n  this.mce.computeIntersectsForChain(this.chainIndex, mc.mce, mc.chainIndex, si);\n};\nMonotoneChain$2.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nMonotoneChain$2.prototype.getClass = function getClass () {\n  return MonotoneChain$2\n};\n\nvar SweepLineEvent = function SweepLineEvent () {\n  this._label = null;\n  this._xValue = null;\n  this._eventType = null;\n  this._insertEvent = null;\n  this._deleteEventIndex = null;\n  this._obj = null;\n  if (arguments.length === 2) {\n    var x = arguments[0];\n    var insertEvent = arguments[1];\n    this._eventType = SweepLineEvent.DELETE;\n    this._xValue = x;\n    this._insertEvent = insertEvent;\n  } else if (arguments.length === 3) {\n    var label = arguments[0];\n    var x$1 = arguments[1];\n    var obj = arguments[2];\n    this._eventType = SweepLineEvent.INSERT;\n    this._label = label;\n    this._xValue = x$1;\n    this._obj = obj;\n  }\n};\n\nvar staticAccessors$43 = { INSERT: { configurable: true },DELETE: { configurable: true } };\nSweepLineEvent.prototype.isDelete = function isDelete () {\n  return this._eventType === SweepLineEvent.DELETE\n};\nSweepLineEvent.prototype.setDeleteEventIndex = function setDeleteEventIndex (deleteEventIndex) {\n  this._deleteEventIndex = deleteEventIndex;\n};\nSweepLineEvent.prototype.getObject = function getObject () {\n  return this._obj\n};\nSweepLineEvent.prototype.compareTo = function compareTo (o) {\n  var pe = o;\n  if (this._xValue < pe._xValue) { return -1 }\n  if (this._xValue > pe._xValue) { return 1 }\n  if (this._eventType < pe._eventType) { return -1 }\n  if (this._eventType > pe._eventType) { return 1 }\n  return 0\n};\nSweepLineEvent.prototype.getInsertEvent = function getInsertEvent () {\n  return this._insertEvent\n};\nSweepLineEvent.prototype.isInsert = function isInsert () {\n  return this._eventType === SweepLineEvent.INSERT\n};\nSweepLineEvent.prototype.isSameLabel = function isSameLabel (ev) {\n  if (this._label === null) { return false }\n  return this._label === ev._label\n};\nSweepLineEvent.prototype.getDeleteEventIndex = function getDeleteEventIndex () {\n  return this._deleteEventIndex\n};\nSweepLineEvent.prototype.interfaces_ = function interfaces_ () {\n  return [Comparable]\n};\nSweepLineEvent.prototype.getClass = function getClass () {\n  return SweepLineEvent\n};\nstaticAccessors$43.INSERT.get = function () { return 1 };\nstaticAccessors$43.DELETE.get = function () { return 2 };\n\nObject.defineProperties( SweepLineEvent, staticAccessors$43 );\n\nvar EdgeSetIntersector = function EdgeSetIntersector () {};\n\nEdgeSetIntersector.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nEdgeSetIntersector.prototype.getClass = function getClass () {\n  return EdgeSetIntersector\n};\n\nvar SegmentIntersector$2 = function SegmentIntersector () {\n  this._hasIntersection = false;\n  this._hasProper = false;\n  this._hasProperInterior = false;\n  this._properIntersectionPoint = null;\n  this._li = null;\n  this._includeProper = null;\n  this._recordIsolated = null;\n  this._isSelfIntersection = null;\n  this._numIntersections = 0;\n  this.numTests = 0;\n  this._bdyNodes = null;\n  this._isDone = false;\n  this._isDoneWhenProperInt = false;\n  var li = arguments[0];\n  var includeProper = arguments[1];\n  var recordIsolated = arguments[2];\n  this._li = li;\n  this._includeProper = includeProper;\n  this._recordIsolated = recordIsolated;\n};\nSegmentIntersector$2.prototype.isTrivialIntersection = function isTrivialIntersection (e0, segIndex0, e1, segIndex1) {\n  if (e0 === e1) {\n    if (this._li.getIntersectionNum() === 1) {\n      if (SegmentIntersector$2.isAdjacentSegments(segIndex0, segIndex1)) { return true }\n      if (e0.isClosed()) {\n        var maxSegIndex = e0.getNumPoints() - 1;\n        if ((segIndex0 === 0 && segIndex1 === maxSegIndex) ||\n            (segIndex1 === 0 && segIndex0 === maxSegIndex)) {\n          return true\n        }\n      }\n    }\n  }\n  return false\n};\nSegmentIntersector$2.prototype.getProperIntersectionPoint = function getProperIntersectionPoint () {\n  return this._properIntersectionPoint\n};\nSegmentIntersector$2.prototype.setIsDoneIfProperInt = function setIsDoneIfProperInt (isDoneWhenProperInt) {\n  this._isDoneWhenProperInt = isDoneWhenProperInt;\n};\nSegmentIntersector$2.prototype.hasProperInteriorIntersection = function hasProperInteriorIntersection () {\n  return this._hasProperInterior\n};\nSegmentIntersector$2.prototype.isBoundaryPointInternal = function isBoundaryPointInternal (li, bdyNodes) {\n  for (var i = bdyNodes.iterator(); i.hasNext();) {\n    var node = i.next();\n    var pt = node.getCoordinate();\n    if (li.isIntersection(pt)) { return true }\n  }\n  return false\n};\nSegmentIntersector$2.prototype.hasProperIntersection = function hasProperIntersection () {\n  return this._hasProper\n};\nSegmentIntersector$2.prototype.hasIntersection = function hasIntersection () {\n  return this._hasIntersection\n};\nSegmentIntersector$2.prototype.isDone = function isDone () {\n  return this._isDone\n};\nSegmentIntersector$2.prototype.isBoundaryPoint = function isBoundaryPoint (li, bdyNodes) {\n  if (bdyNodes === null) { return false }\n  if (this.isBoundaryPointInternal(li, bdyNodes[0])) { return true }\n  if (this.isBoundaryPointInternal(li, bdyNodes[1])) { return true }\n  return false\n};\nSegmentIntersector$2.prototype.setBoundaryNodes = function setBoundaryNodes (bdyNodes0, bdyNodes1) {\n  this._bdyNodes = new Array(2).fill(null);\n  this._bdyNodes[0] = bdyNodes0;\n  this._bdyNodes[1] = bdyNodes1;\n};\nSegmentIntersector$2.prototype.addIntersections = function addIntersections (e0, segIndex0, e1, segIndex1) {\n  if (e0 === e1 && segIndex0 === segIndex1) { return null }\n  this.numTests++;\n  var p00 = e0.getCoordinates()[segIndex0];\n  var p01 = e0.getCoordinates()[segIndex0 + 1];\n  var p10 = e1.getCoordinates()[segIndex1];\n  var p11 = e1.getCoordinates()[segIndex1 + 1];\n  this._li.computeIntersection(p00, p01, p10, p11);\n  if (this._li.hasIntersection()) {\n    if (this._recordIsolated) {\n      e0.setIsolated(false);\n      e1.setIsolated(false);\n    }\n    this._numIntersections++;\n    if (!this.isTrivialIntersection(e0, segIndex0, e1, segIndex1)) {\n      this._hasIntersection = true;\n      if (this._includeProper || !this._li.isProper()) {\n        e0.addIntersections(this._li, segIndex0, 0);\n        e1.addIntersections(this._li, segIndex1, 1);\n      }\n      if (this._li.isProper()) {\n        this._properIntersectionPoint = this._li.getIntersection(0).copy();\n        this._hasProper = true;\n        if (this._isDoneWhenProperInt) {\n          this._isDone = true;\n        }\n        if (!this.isBoundaryPoint(this._li, this._bdyNodes)) { this._hasProperInterior = true; }\n      }\n    }\n  }\n};\nSegmentIntersector$2.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nSegmentIntersector$2.prototype.getClass = function getClass () {\n  return SegmentIntersector$2\n};\nSegmentIntersector$2.isAdjacentSegments = function isAdjacentSegments (i1, i2) {\n  return Math.abs(i1 - i2) === 1\n};\n\nvar SimpleMCSweepLineIntersector = (function (EdgeSetIntersector$$1) {\n  function SimpleMCSweepLineIntersector () {\n    EdgeSetIntersector$$1.call(this);\n    this.events = new ArrayList();\n    this.nOverlaps = null;\n  }\n\n  if ( EdgeSetIntersector$$1 ) SimpleMCSweepLineIntersector.__proto__ = EdgeSetIntersector$$1;\n  SimpleMCSweepLineIntersector.prototype = Object.create( EdgeSetIntersector$$1 && EdgeSetIntersector$$1.prototype );\n  SimpleMCSweepLineIntersector.prototype.constructor = SimpleMCSweepLineIntersector;\n  SimpleMCSweepLineIntersector.prototype.prepareEvents = function prepareEvents () {\n    var this$1 = this;\n\n    Collections.sort(this.events);\n    for (var i = 0; i < this.events.size(); i++) {\n      var ev = this$1.events.get(i);\n      if (ev.isDelete()) {\n        ev.getInsertEvent().setDeleteEventIndex(i);\n      }\n    }\n  };\n  SimpleMCSweepLineIntersector.prototype.computeIntersections = function computeIntersections () {\n    var this$1 = this;\n\n    if (arguments.length === 1) {\n      var si = arguments[0];\n      this.nOverlaps = 0;\n      this.prepareEvents();\n      for (var i = 0; i < this.events.size(); i++) {\n        var ev = this$1.events.get(i);\n        if (ev.isInsert()) {\n          this$1.processOverlaps(i, ev.getDeleteEventIndex(), ev, si);\n        }\n        if (si.isDone()) {\n          break\n        }\n      }\n    } else if (arguments.length === 3) {\n      if (arguments[2] instanceof SegmentIntersector$2 && (hasInterface(arguments[0], List) && hasInterface(arguments[1], List))) {\n        var edges0 = arguments[0];\n        var edges1 = arguments[1];\n        var si$1 = arguments[2];\n        this.addEdges(edges0, edges0);\n        this.addEdges(edges1, edges1);\n        this.computeIntersections(si$1);\n      } else if (typeof arguments[2] === 'boolean' && (hasInterface(arguments[0], List) && arguments[1] instanceof SegmentIntersector$2)) {\n        var edges = arguments[0];\n        var si$2 = arguments[1];\n        var testAllSegments = arguments[2];\n        if (testAllSegments) { this.addEdges(edges, null); } else { this.addEdges(edges); }\n        this.computeIntersections(si$2);\n      }\n    }\n  };\n  SimpleMCSweepLineIntersector.prototype.addEdge = function addEdge (edge, edgeSet) {\n    var this$1 = this;\n\n    var mce = edge.getMonotoneChainEdge();\n    var startIndex = mce.getStartIndexes();\n    for (var i = 0; i < startIndex.length - 1; i++) {\n      var mc = new MonotoneChain$2(mce, i);\n      var insertEvent = new SweepLineEvent(edgeSet, mce.getMinX(i), mc);\n      this$1.events.add(insertEvent);\n      this$1.events.add(new SweepLineEvent(mce.getMaxX(i), insertEvent));\n    }\n  };\n  SimpleMCSweepLineIntersector.prototype.processOverlaps = function processOverlaps (start, end, ev0, si) {\n    var this$1 = this;\n\n    var mc0 = ev0.getObject();\n    for (var i = start; i < end; i++) {\n      var ev1 = this$1.events.get(i);\n      if (ev1.isInsert()) {\n        var mc1 = ev1.getObject();\n        if (!ev0.isSameLabel(ev1)) {\n          mc0.computeIntersections(mc1, si);\n          this$1.nOverlaps++;\n        }\n      }\n    }\n  };\n  SimpleMCSweepLineIntersector.prototype.addEdges = function addEdges () {\n    var this$1 = this;\n\n    if (arguments.length === 1) {\n      var edges = arguments[0];\n      for (var i = edges.iterator(); i.hasNext();) {\n        var edge = i.next();\n        this$1.addEdge(edge, edge);\n      }\n    } else if (arguments.length === 2) {\n      var edges$1 = arguments[0];\n      var edgeSet = arguments[1];\n      for (var i$1 = edges$1.iterator(); i$1.hasNext();) {\n        var edge$1 = i$1.next();\n        this$1.addEdge(edge$1, edgeSet);\n      }\n    }\n  };\n  SimpleMCSweepLineIntersector.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  SimpleMCSweepLineIntersector.prototype.getClass = function getClass () {\n    return SimpleMCSweepLineIntersector\n  };\n\n  return SimpleMCSweepLineIntersector;\n}(EdgeSetIntersector));\n\nvar IntervalRTreeNode = function IntervalRTreeNode () {\n  this._min = Double.POSITIVE_INFINITY;\n  this._max = Double.NEGATIVE_INFINITY;\n};\n\nvar staticAccessors$45 = { NodeComparator: { configurable: true } };\nIntervalRTreeNode.prototype.getMin = function getMin () {\n  return this._min\n};\nIntervalRTreeNode.prototype.intersects = function intersects (queryMin, queryMax) {\n  if (this._min > queryMax || this._max < queryMin) { return false }\n  return true\n};\nIntervalRTreeNode.prototype.getMax = function getMax () {\n  return this._max\n};\nIntervalRTreeNode.prototype.toString = function toString () {\n  return WKTWriter.toLineString(new Coordinate(this._min, 0), new Coordinate(this._max, 0))\n};\nIntervalRTreeNode.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nIntervalRTreeNode.prototype.getClass = function getClass () {\n  return IntervalRTreeNode\n};\nstaticAccessors$45.NodeComparator.get = function () { return NodeComparator };\n\nObject.defineProperties( IntervalRTreeNode, staticAccessors$45 );\n\nvar NodeComparator = function NodeComparator () {};\n\nNodeComparator.prototype.compare = function compare (o1, o2) {\n  var n1 = o1;\n  var n2 = o2;\n  var mid1 = (n1._min + n1._max) / 2;\n  var mid2 = (n2._min + n2._max) / 2;\n  if (mid1 < mid2) { return -1 }\n  if (mid1 > mid2) { return 1 }\n  return 0\n};\nNodeComparator.prototype.interfaces_ = function interfaces_ () {\n  return [Comparator]\n};\nNodeComparator.prototype.getClass = function getClass () {\n  return NodeComparator\n};\n\nvar IntervalRTreeLeafNode = (function (IntervalRTreeNode$$1) {\n  function IntervalRTreeLeafNode () {\n    IntervalRTreeNode$$1.call(this);\n    this._item = null;\n    var min = arguments[0];\n    var max = arguments[1];\n    var item = arguments[2];\n    this._min = min;\n    this._max = max;\n    this._item = item;\n  }\n\n  if ( IntervalRTreeNode$$1 ) IntervalRTreeLeafNode.__proto__ = IntervalRTreeNode$$1;\n  IntervalRTreeLeafNode.prototype = Object.create( IntervalRTreeNode$$1 && IntervalRTreeNode$$1.prototype );\n  IntervalRTreeLeafNode.prototype.constructor = IntervalRTreeLeafNode;\n  IntervalRTreeLeafNode.prototype.query = function query (queryMin, queryMax, visitor) {\n    if (!this.intersects(queryMin, queryMax)) { return null }\n    visitor.visitItem(this._item);\n  };\n  IntervalRTreeLeafNode.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  IntervalRTreeLeafNode.prototype.getClass = function getClass () {\n    return IntervalRTreeLeafNode\n  };\n\n  return IntervalRTreeLeafNode;\n}(IntervalRTreeNode));\n\nvar IntervalRTreeBranchNode = (function (IntervalRTreeNode$$1) {\n  function IntervalRTreeBranchNode () {\n    IntervalRTreeNode$$1.call(this);\n    this._node1 = null;\n    this._node2 = null;\n    var n1 = arguments[0];\n    var n2 = arguments[1];\n    this._node1 = n1;\n    this._node2 = n2;\n    this.buildExtent(this._node1, this._node2);\n  }\n\n  if ( IntervalRTreeNode$$1 ) IntervalRTreeBranchNode.__proto__ = IntervalRTreeNode$$1;\n  IntervalRTreeBranchNode.prototype = Object.create( IntervalRTreeNode$$1 && IntervalRTreeNode$$1.prototype );\n  IntervalRTreeBranchNode.prototype.constructor = IntervalRTreeBranchNode;\n  IntervalRTreeBranchNode.prototype.buildExtent = function buildExtent (n1, n2) {\n    this._min = Math.min(n1._min, n2._min);\n    this._max = Math.max(n1._max, n2._max);\n  };\n  IntervalRTreeBranchNode.prototype.query = function query (queryMin, queryMax, visitor) {\n    if (!this.intersects(queryMin, queryMax)) {\n      return null\n    }\n    if (this._node1 !== null) { this._node1.query(queryMin, queryMax, visitor); }\n    if (this._node2 !== null) { this._node2.query(queryMin, queryMax, visitor); }\n  };\n  IntervalRTreeBranchNode.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  IntervalRTreeBranchNode.prototype.getClass = function getClass () {\n    return IntervalRTreeBranchNode\n  };\n\n  return IntervalRTreeBranchNode;\n}(IntervalRTreeNode));\n\nvar SortedPackedIntervalRTree = function SortedPackedIntervalRTree () {\n  this._leaves = new ArrayList();\n  this._root = null;\n  this._level = 0;\n};\nSortedPackedIntervalRTree.prototype.buildTree = function buildTree () {\n    var this$1 = this;\n\n  Collections.sort(this._leaves, new IntervalRTreeNode.NodeComparator());\n  var src = this._leaves;\n  var temp = null;\n  var dest = new ArrayList();\n  while (true) {\n    this$1.buildLevel(src, dest);\n    if (dest.size() === 1) { return dest.get(0) }\n    temp = src;\n    src = dest;\n    dest = temp;\n  }\n};\nSortedPackedIntervalRTree.prototype.insert = function insert (min, max, item) {\n  if (this._root !== null) { throw new Error('Index cannot be added to once it has been queried') }\n  this._leaves.add(new IntervalRTreeLeafNode(min, max, item));\n};\nSortedPackedIntervalRTree.prototype.query = function query (min, max, visitor) {\n  this.init();\n  this._root.query(min, max, visitor);\n};\nSortedPackedIntervalRTree.prototype.buildRoot = function buildRoot () {\n  if (this._root !== null) { return null }\n  this._root = this.buildTree();\n};\nSortedPackedIntervalRTree.prototype.printNode = function printNode (node) {\n  System.out.println(WKTWriter.toLineString(new Coordinate(node._min, this._level), new Coordinate(node._max, this._level)));\n};\nSortedPackedIntervalRTree.prototype.init = function init () {\n  if (this._root !== null) { return null }\n  this.buildRoot();\n};\nSortedPackedIntervalRTree.prototype.buildLevel = function buildLevel (src, dest) {\n  this._level++;\n  dest.clear();\n  for (var i = 0; i < src.size(); i += 2) {\n    var n1 = src.get(i);\n    var n2 = i + 1 < src.size() ? src.get(i) : null;\n    if (n2 === null) {\n      dest.add(n1);\n    } else {\n      var node = new IntervalRTreeBranchNode(src.get(i), src.get(i + 1));\n      dest.add(node);\n    }\n  }\n};\nSortedPackedIntervalRTree.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nSortedPackedIntervalRTree.prototype.getClass = function getClass () {\n  return SortedPackedIntervalRTree\n};\n\nvar ArrayListVisitor = function ArrayListVisitor () {\n  this._items = new ArrayList();\n};\nArrayListVisitor.prototype.visitItem = function visitItem (item) {\n  this._items.add(item);\n};\nArrayListVisitor.prototype.getItems = function getItems () {\n  return this._items\n};\nArrayListVisitor.prototype.interfaces_ = function interfaces_ () {\n  return [ItemVisitor]\n};\nArrayListVisitor.prototype.getClass = function getClass () {\n  return ArrayListVisitor\n};\n\nvar IndexedPointInAreaLocator = function IndexedPointInAreaLocator () {\n  this._index = null;\n  var g = arguments[0];\n  if (!hasInterface(g, Polygonal)) { throw new IllegalArgumentException('Argument must be Polygonal') }\n  this._index = new IntervalIndexedGeometry(g);\n};\n\nvar staticAccessors$44 = { SegmentVisitor: { configurable: true },IntervalIndexedGeometry: { configurable: true } };\nIndexedPointInAreaLocator.prototype.locate = function locate (p) {\n  var rcc = new RayCrossingCounter(p);\n  var visitor = new SegmentVisitor(rcc);\n  this._index.query(p.y, p.y, visitor);\n  return rcc.getLocation()\n};\nIndexedPointInAreaLocator.prototype.interfaces_ = function interfaces_ () {\n  return [PointOnGeometryLocator]\n};\nIndexedPointInAreaLocator.prototype.getClass = function getClass () {\n  return IndexedPointInAreaLocator\n};\nstaticAccessors$44.SegmentVisitor.get = function () { return SegmentVisitor };\nstaticAccessors$44.IntervalIndexedGeometry.get = function () { return IntervalIndexedGeometry };\n\nObject.defineProperties( IndexedPointInAreaLocator, staticAccessors$44 );\n\nvar SegmentVisitor = function SegmentVisitor () {\n  this._counter = null;\n  var counter = arguments[0];\n  this._counter = counter;\n};\nSegmentVisitor.prototype.visitItem = function visitItem (item) {\n  var seg = item;\n  this._counter.countSegment(seg.getCoordinate(0), seg.getCoordinate(1));\n};\nSegmentVisitor.prototype.interfaces_ = function interfaces_ () {\n  return [ItemVisitor]\n};\nSegmentVisitor.prototype.getClass = function getClass () {\n  return SegmentVisitor\n};\n\nvar IntervalIndexedGeometry = function IntervalIndexedGeometry () {\n  this._index = new SortedPackedIntervalRTree();\n  var geom = arguments[0];\n  this.init(geom);\n};\nIntervalIndexedGeometry.prototype.init = function init (geom) {\n    var this$1 = this;\n\n  var lines = LinearComponentExtracter.getLines(geom);\n  for (var i = lines.iterator(); i.hasNext();) {\n    var line = i.next();\n    var pts = line.getCoordinates();\n    this$1.addLine(pts);\n  }\n};\nIntervalIndexedGeometry.prototype.addLine = function addLine (pts) {\n    var this$1 = this;\n\n  for (var i = 1; i < pts.length; i++) {\n    var seg = new LineSegment(pts[i - 1], pts[i]);\n    var min = Math.min(seg.p0.y, seg.p1.y);\n    var max = Math.max(seg.p0.y, seg.p1.y);\n    this$1._index.insert(min, max, seg);\n  }\n};\nIntervalIndexedGeometry.prototype.query = function query () {\n  if (arguments.length === 2) {\n    var min = arguments[0];\n    var max = arguments[1];\n    var visitor = new ArrayListVisitor();\n    this._index.query(min, max, visitor);\n    return visitor.getItems()\n  } else if (arguments.length === 3) {\n    var min$1 = arguments[0];\n    var max$1 = arguments[1];\n    var visitor$1 = arguments[2];\n    this._index.query(min$1, max$1, visitor$1);\n  }\n};\nIntervalIndexedGeometry.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nIntervalIndexedGeometry.prototype.getClass = function getClass () {\n  return IntervalIndexedGeometry\n};\n\nvar GeometryGraph = (function (PlanarGraph$$1) {\n  function GeometryGraph () {\n    PlanarGraph$$1.call(this);\n    this._parentGeom = null;\n    this._lineEdgeMap = new HashMap();\n    this._boundaryNodeRule = null;\n    this._useBoundaryDeterminationRule = true;\n    this._argIndex = null;\n    this._boundaryNodes = null;\n    this._hasTooFewPoints = false;\n    this._invalidPoint = null;\n    this._areaPtLocator = null;\n    this._ptLocator = new PointLocator();\n    if (arguments.length === 2) {\n      var argIndex = arguments[0];\n      var parentGeom = arguments[1];\n      var boundaryNodeRule = BoundaryNodeRule.OGC_SFS_BOUNDARY_RULE;\n      this._argIndex = argIndex;\n      this._parentGeom = parentGeom;\n      this._boundaryNodeRule = boundaryNodeRule;\n      if (parentGeom !== null) {\n        this.add(parentGeom);\n      }\n    } else if (arguments.length === 3) {\n      var argIndex$1 = arguments[0];\n      var parentGeom$1 = arguments[1];\n      var boundaryNodeRule$1 = arguments[2];\n      this._argIndex = argIndex$1;\n      this._parentGeom = parentGeom$1;\n      this._boundaryNodeRule = boundaryNodeRule$1;\n      if (parentGeom$1 !== null) {\n        this.add(parentGeom$1);\n      }\n    }\n  }\n\n  if ( PlanarGraph$$1 ) GeometryGraph.__proto__ = PlanarGraph$$1;\n  GeometryGraph.prototype = Object.create( PlanarGraph$$1 && PlanarGraph$$1.prototype );\n  GeometryGraph.prototype.constructor = GeometryGraph;\n  GeometryGraph.prototype.insertBoundaryPoint = function insertBoundaryPoint (argIndex, coord) {\n    var n = this._nodes.addNode(coord);\n    var lbl = n.getLabel();\n    var boundaryCount = 1;\n    var loc = Location.NONE;\n    loc = lbl.getLocation(argIndex, Position.ON);\n    if (loc === Location.BOUNDARY) { boundaryCount++; }\n    var newLoc = GeometryGraph.determineBoundary(this._boundaryNodeRule, boundaryCount);\n    lbl.setLocation(argIndex, newLoc);\n  };\n  GeometryGraph.prototype.computeSelfNodes = function computeSelfNodes () {\n    if (arguments.length === 2) {\n      var li = arguments[0];\n      var computeRingSelfNodes = arguments[1];\n      return this.computeSelfNodes(li, computeRingSelfNodes, false)\n    } else if (arguments.length === 3) {\n      var li$1 = arguments[0];\n      var computeRingSelfNodes$1 = arguments[1];\n      var isDoneIfProperInt = arguments[2];\n      var si = new SegmentIntersector$2(li$1, true, false);\n      si.setIsDoneIfProperInt(isDoneIfProperInt);\n      var esi = this.createEdgeSetIntersector();\n      var isRings = this._parentGeom instanceof LinearRing || this._parentGeom instanceof Polygon || this._parentGeom instanceof MultiPolygon;\n      var computeAllSegments = computeRingSelfNodes$1 || !isRings;\n      esi.computeIntersections(this._edges, si, computeAllSegments);\n      this.addSelfIntersectionNodes(this._argIndex);\n      return si\n    }\n  };\n  GeometryGraph.prototype.computeSplitEdges = function computeSplitEdges (edgelist) {\n    for (var i = this._edges.iterator(); i.hasNext();) {\n      var e = i.next();\n      e.eiList.addSplitEdges(edgelist);\n    }\n  };\n  GeometryGraph.prototype.computeEdgeIntersections = function computeEdgeIntersections (g, li, includeProper) {\n    var si = new SegmentIntersector$2(li, includeProper, true);\n    si.setBoundaryNodes(this.getBoundaryNodes(), g.getBoundaryNodes());\n    var esi = this.createEdgeSetIntersector();\n    esi.computeIntersections(this._edges, g._edges, si);\n    return si\n  };\n  GeometryGraph.prototype.getGeometry = function getGeometry () {\n    return this._parentGeom\n  };\n  GeometryGraph.prototype.getBoundaryNodeRule = function getBoundaryNodeRule () {\n    return this._boundaryNodeRule\n  };\n  GeometryGraph.prototype.hasTooFewPoints = function hasTooFewPoints () {\n    return this._hasTooFewPoints\n  };\n  GeometryGraph.prototype.addPoint = function addPoint () {\n    if (arguments[0] instanceof Point) {\n      var p = arguments[0];\n      var coord = p.getCoordinate();\n      this.insertPoint(this._argIndex, coord, Location.INTERIOR);\n    } else if (arguments[0] instanceof Coordinate) {\n      var pt = arguments[0];\n      this.insertPoint(this._argIndex, pt, Location.INTERIOR);\n    }\n  };\n  GeometryGraph.prototype.addPolygon = function addPolygon (p) {\n    var this$1 = this;\n\n    this.addPolygonRing(p.getExteriorRing(), Location.EXTERIOR, Location.INTERIOR);\n    for (var i = 0; i < p.getNumInteriorRing(); i++) {\n      var hole = p.getInteriorRingN(i);\n      this$1.addPolygonRing(hole, Location.INTERIOR, Location.EXTERIOR);\n    }\n  };\n  GeometryGraph.prototype.addEdge = function addEdge (e) {\n    this.insertEdge(e);\n    var coord = e.getCoordinates();\n    this.insertPoint(this._argIndex, coord[0], Location.BOUNDARY);\n    this.insertPoint(this._argIndex, coord[coord.length - 1], Location.BOUNDARY);\n  };\n  GeometryGraph.prototype.addLineString = function addLineString (line) {\n    var coord = CoordinateArrays.removeRepeatedPoints(line.getCoordinates());\n    if (coord.length < 2) {\n      this._hasTooFewPoints = true;\n      this._invalidPoint = coord[0];\n      return null\n    }\n    var e = new Edge(coord, new Label(this._argIndex, Location.INTERIOR));\n    this._lineEdgeMap.put(line, e);\n    this.insertEdge(e);\n    Assert.isTrue(coord.length >= 2, 'found LineString with single point');\n    this.insertBoundaryPoint(this._argIndex, coord[0]);\n    this.insertBoundaryPoint(this._argIndex, coord[coord.length - 1]);\n  };\n  GeometryGraph.prototype.getInvalidPoint = function getInvalidPoint () {\n    return this._invalidPoint\n  };\n  GeometryGraph.prototype.getBoundaryPoints = function getBoundaryPoints () {\n    var coll = this.getBoundaryNodes();\n    var pts = new Array(coll.size()).fill(null);\n    var i = 0;\n    for (var it = coll.iterator(); it.hasNext();) {\n      var node = it.next();\n      pts[i++] = node.getCoordinate().copy();\n    }\n    return pts\n  };\n  GeometryGraph.prototype.getBoundaryNodes = function getBoundaryNodes () {\n    if (this._boundaryNodes === null) { this._boundaryNodes = this._nodes.getBoundaryNodes(this._argIndex); }\n    return this._boundaryNodes\n  };\n  GeometryGraph.prototype.addSelfIntersectionNode = function addSelfIntersectionNode (argIndex, coord, loc) {\n    if (this.isBoundaryNode(argIndex, coord)) { return null }\n    if (loc === Location.BOUNDARY && this._useBoundaryDeterminationRule) { this.insertBoundaryPoint(argIndex, coord); } else { this.insertPoint(argIndex, coord, loc); }\n  };\n  GeometryGraph.prototype.addPolygonRing = function addPolygonRing (lr, cwLeft, cwRight) {\n    if (lr.isEmpty()) { return null }\n    var coord = CoordinateArrays.removeRepeatedPoints(lr.getCoordinates());\n    if (coord.length < 4) {\n      this._hasTooFewPoints = true;\n      this._invalidPoint = coord[0];\n      return null\n    }\n    var left = cwLeft;\n    var right = cwRight;\n    if (CGAlgorithms.isCCW(coord)) {\n      left = cwRight;\n      right = cwLeft;\n    }\n    var e = new Edge(coord, new Label(this._argIndex, Location.BOUNDARY, left, right));\n    this._lineEdgeMap.put(lr, e);\n    this.insertEdge(e);\n    this.insertPoint(this._argIndex, coord[0], Location.BOUNDARY);\n  };\n  GeometryGraph.prototype.insertPoint = function insertPoint (argIndex, coord, onLocation) {\n    var n = this._nodes.addNode(coord);\n    var lbl = n.getLabel();\n    if (lbl === null) {\n      n._label = new Label(argIndex, onLocation);\n    } else { lbl.setLocation(argIndex, onLocation); }\n  };\n  GeometryGraph.prototype.createEdgeSetIntersector = function createEdgeSetIntersector () {\n    return new SimpleMCSweepLineIntersector()\n  };\n  GeometryGraph.prototype.addSelfIntersectionNodes = function addSelfIntersectionNodes (argIndex) {\n    var this$1 = this;\n\n    for (var i = this._edges.iterator(); i.hasNext();) {\n      var e = i.next();\n      var eLoc = e.getLabel().getLocation(argIndex);\n      for (var eiIt = e.eiList.iterator(); eiIt.hasNext();) {\n        var ei = eiIt.next();\n        this$1.addSelfIntersectionNode(argIndex, ei.coord, eLoc);\n      }\n    }\n  };\n  GeometryGraph.prototype.add = function add () {\n    if (arguments.length === 1) {\n      var g = arguments[0];\n      if (g.isEmpty()) { return null }\n      if (g instanceof MultiPolygon) { this._useBoundaryDeterminationRule = false; }\n      if (g instanceof Polygon) { this.addPolygon(g); }\n      else if (g instanceof LineString) { this.addLineString(g); }\n      else if (g instanceof Point) { this.addPoint(g); }\n      else if (g instanceof MultiPoint) { this.addCollection(g); }\n      else if (g instanceof MultiLineString) { this.addCollection(g); }\n      else if (g instanceof MultiPolygon) { this.addCollection(g); }\n      else if (g instanceof GeometryCollection) { this.addCollection(g); }\n      else { throw new Error(g.getClass().getName()) }\n    } else { return PlanarGraph$$1.prototype.add.apply(this, arguments) }\n  };\n  GeometryGraph.prototype.addCollection = function addCollection (gc) {\n    var this$1 = this;\n\n    for (var i = 0; i < gc.getNumGeometries(); i++) {\n      var g = gc.getGeometryN(i);\n      this$1.add(g);\n    }\n  };\n  GeometryGraph.prototype.locate = function locate (pt) {\n    if (hasInterface(this._parentGeom, Polygonal) && this._parentGeom.getNumGeometries() > 50) {\n      if (this._areaPtLocator === null) {\n        this._areaPtLocator = new IndexedPointInAreaLocator(this._parentGeom);\n      }\n      return this._areaPtLocator.locate(pt)\n    }\n    return this._ptLocator.locate(pt, this._parentGeom)\n  };\n  GeometryGraph.prototype.findEdge = function findEdge () {\n    if (arguments.length === 1) {\n      var line = arguments[0];\n      return this._lineEdgeMap.get(line)\n    } else { return PlanarGraph$$1.prototype.findEdge.apply(this, arguments) }\n  };\n  GeometryGraph.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  GeometryGraph.prototype.getClass = function getClass () {\n    return GeometryGraph\n  };\n  GeometryGraph.determineBoundary = function determineBoundary (boundaryNodeRule, boundaryCount) {\n    return boundaryNodeRule.isInBoundary(boundaryCount) ? Location.BOUNDARY : Location.INTERIOR\n  };\n\n  return GeometryGraph;\n}(PlanarGraph));\n\nvar GeometryGraphOp = function GeometryGraphOp () {\n  this._li = new RobustLineIntersector();\n  this._resultPrecisionModel = null;\n  this._arg = null;\n  if (arguments.length === 1) {\n    var g0 = arguments[0];\n    this.setComputationPrecision(g0.getPrecisionModel());\n    this._arg = new Array(1).fill(null);\n    this._arg[0] = new GeometryGraph(0, g0);\n  } else if (arguments.length === 2) {\n    var g0$1 = arguments[0];\n    var g1 = arguments[1];\n    var boundaryNodeRule = BoundaryNodeRule.OGC_SFS_BOUNDARY_RULE;\n    if (g0$1.getPrecisionModel().compareTo(g1.getPrecisionModel()) >= 0) { this.setComputationPrecision(g0$1.getPrecisionModel()); } else { this.setComputationPrecision(g1.getPrecisionModel()); }\n    this._arg = new Array(2).fill(null);\n    this._arg[0] = new GeometryGraph(0, g0$1, boundaryNodeRule);\n    this._arg[1] = new GeometryGraph(1, g1, boundaryNodeRule);\n  } else if (arguments.length === 3) {\n    var g0$2 = arguments[0];\n    var g1$1 = arguments[1];\n    var boundaryNodeRule$1 = arguments[2];\n    if (g0$2.getPrecisionModel().compareTo(g1$1.getPrecisionModel()) >= 0) { this.setComputationPrecision(g0$2.getPrecisionModel()); } else { this.setComputationPrecision(g1$1.getPrecisionModel()); }\n    this._arg = new Array(2).fill(null);\n    this._arg[0] = new GeometryGraph(0, g0$2, boundaryNodeRule$1);\n    this._arg[1] = new GeometryGraph(1, g1$1, boundaryNodeRule$1);\n  }\n};\nGeometryGraphOp.prototype.getArgGeometry = function getArgGeometry (i) {\n  return this._arg[i].getGeometry()\n};\nGeometryGraphOp.prototype.setComputationPrecision = function setComputationPrecision (pm) {\n  this._resultPrecisionModel = pm;\n  this._li.setPrecisionModel(this._resultPrecisionModel);\n};\nGeometryGraphOp.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nGeometryGraphOp.prototype.getClass = function getClass () {\n  return GeometryGraphOp\n};\n\n// operation.geometrygraph\n\nvar GeometryMapper = function GeometryMapper () {};\n\nGeometryMapper.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nGeometryMapper.prototype.getClass = function getClass () {\n  return GeometryMapper\n};\nGeometryMapper.map = function map () {\n  if (arguments[0] instanceof Geometry && hasInterface(arguments[1], GeometryMapper.MapOp)) {\n    var geom = arguments[0];\n    var op = arguments[1];\n    var mapped = new ArrayList();\n    for (var i = 0; i < geom.getNumGeometries(); i++) {\n      var g = op.map(geom.getGeometryN(i));\n      if (g !== null) { mapped.add(g); }\n    }\n    return geom.getFactory().buildGeometry(mapped)\n  } else if (hasInterface(arguments[0], Collection) && hasInterface(arguments[1], GeometryMapper.MapOp)) {\n    var geoms = arguments[0];\n    var op$1 = arguments[1];\n    var mapped$1 = new ArrayList();\n    for (var i$1 = geoms.iterator(); i$1.hasNext();) {\n      var g$1 = i$1.next();\n      var gr = op$1.map(g$1);\n      if (gr !== null) { mapped$1.add(gr); }\n    }\n    return mapped$1\n  }\n};\nGeometryMapper.MapOp = function MapOp () {};\n\nvar OverlayOp = (function (GeometryGraphOp) {\n  function OverlayOp () {\n    var g0 = arguments[0];\n    var g1 = arguments[1];\n    GeometryGraphOp.call(this, g0, g1);\n    this._ptLocator = new PointLocator();\n    this._geomFact = null;\n    this._resultGeom = null;\n    this._graph = null;\n    this._edgeList = new EdgeList();\n    this._resultPolyList = new ArrayList();\n    this._resultLineList = new ArrayList();\n    this._resultPointList = new ArrayList();\n    this._graph = new PlanarGraph(new OverlayNodeFactory());\n    this._geomFact = g0.getFactory();\n  }\n\n  if ( GeometryGraphOp ) OverlayOp.__proto__ = GeometryGraphOp;\n  OverlayOp.prototype = Object.create( GeometryGraphOp && GeometryGraphOp.prototype );\n  OverlayOp.prototype.constructor = OverlayOp;\n  OverlayOp.prototype.insertUniqueEdge = function insertUniqueEdge (e) {\n    var existingEdge = this._edgeList.findEqualEdge(e);\n    if (existingEdge !== null) {\n      var existingLabel = existingEdge.getLabel();\n      var labelToMerge = e.getLabel();\n      if (!existingEdge.isPointwiseEqual(e)) {\n        labelToMerge = new Label(e.getLabel());\n        labelToMerge.flip();\n      }\n      var depth = existingEdge.getDepth();\n      if (depth.isNull()) {\n        depth.add(existingLabel);\n      }\n      depth.add(labelToMerge);\n      existingLabel.merge(labelToMerge);\n    } else {\n      this._edgeList.add(e);\n    }\n  };\n  OverlayOp.prototype.getGraph = function getGraph () {\n    return this._graph\n  };\n  OverlayOp.prototype.cancelDuplicateResultEdges = function cancelDuplicateResultEdges () {\n    for (var it = this._graph.getEdgeEnds().iterator(); it.hasNext();) {\n      var de = it.next();\n      var sym = de.getSym();\n      if (de.isInResult() && sym.isInResult()) {\n        de.setInResult(false);\n        sym.setInResult(false);\n      }\n    }\n  };\n  OverlayOp.prototype.isCoveredByLA = function isCoveredByLA (coord) {\n    if (this.isCovered(coord, this._resultLineList)) { return true }\n    if (this.isCovered(coord, this._resultPolyList)) { return true }\n    return false\n  };\n  OverlayOp.prototype.computeGeometry = function computeGeometry (resultPointList, resultLineList, resultPolyList, opcode) {\n    var geomList = new ArrayList();\n    geomList.addAll(resultPointList);\n    geomList.addAll(resultLineList);\n    geomList.addAll(resultPolyList);\n    if (geomList.isEmpty()) { return OverlayOp.createEmptyResult(opcode, this._arg[0].getGeometry(), this._arg[1].getGeometry(), this._geomFact) }\n    return this._geomFact.buildGeometry(geomList)\n  };\n  OverlayOp.prototype.mergeSymLabels = function mergeSymLabels () {\n    for (var nodeit = this._graph.getNodes().iterator(); nodeit.hasNext();) {\n      var node = nodeit.next();\n      node.getEdges().mergeSymLabels();\n    }\n  };\n  OverlayOp.prototype.isCovered = function isCovered (coord, geomList) {\n    var this$1 = this;\n\n    for (var it = geomList.iterator(); it.hasNext();) {\n      var geom = it.next();\n      var loc = this$1._ptLocator.locate(coord, geom);\n      if (loc !== Location.EXTERIOR) { return true }\n    }\n    return false\n  };\n  OverlayOp.prototype.replaceCollapsedEdges = function replaceCollapsedEdges () {\n    var newEdges = new ArrayList();\n    for (var it = this._edgeList.iterator(); it.hasNext();) {\n      var e = it.next();\n      if (e.isCollapsed()) {\n        it.remove();\n        newEdges.add(e.getCollapsedEdge());\n      }\n    }\n    this._edgeList.addAll(newEdges);\n  };\n  OverlayOp.prototype.updateNodeLabelling = function updateNodeLabelling () {\n    for (var nodeit = this._graph.getNodes().iterator(); nodeit.hasNext();) {\n      var node = nodeit.next();\n      var lbl = node.getEdges().getLabel();\n      node.getLabel().merge(lbl);\n    }\n  };\n  OverlayOp.prototype.getResultGeometry = function getResultGeometry (overlayOpCode) {\n    this.computeOverlay(overlayOpCode);\n    return this._resultGeom\n  };\n  OverlayOp.prototype.insertUniqueEdges = function insertUniqueEdges (edges) {\n    var this$1 = this;\n\n    for (var i = edges.iterator(); i.hasNext();) {\n      var e = i.next();\n      this$1.insertUniqueEdge(e);\n    }\n  };\n  OverlayOp.prototype.computeOverlay = function computeOverlay (opCode) {\n    this.copyPoints(0);\n    this.copyPoints(1);\n    this._arg[0].computeSelfNodes(this._li, false);\n    this._arg[1].computeSelfNodes(this._li, false);\n    this._arg[0].computeEdgeIntersections(this._arg[1], this._li, true);\n    var baseSplitEdges = new ArrayList();\n    this._arg[0].computeSplitEdges(baseSplitEdges);\n    this._arg[1].computeSplitEdges(baseSplitEdges);\n    // const splitEdges = baseSplitEdges\n    this.insertUniqueEdges(baseSplitEdges);\n    this.computeLabelsFromDepths();\n    this.replaceCollapsedEdges();\n    EdgeNodingValidator.checkValid(this._edgeList.getEdges());\n    this._graph.addEdges(this._edgeList.getEdges());\n    this.computeLabelling();\n    this.labelIncompleteNodes();\n    this.findResultAreaEdges(opCode);\n    this.cancelDuplicateResultEdges();\n    var polyBuilder = new PolygonBuilder(this._geomFact);\n    polyBuilder.add(this._graph);\n    this._resultPolyList = polyBuilder.getPolygons();\n    var lineBuilder = new LineBuilder(this, this._geomFact, this._ptLocator);\n    this._resultLineList = lineBuilder.build(opCode);\n    var pointBuilder = new PointBuilder(this, this._geomFact, this._ptLocator);\n    this._resultPointList = pointBuilder.build(opCode);\n    this._resultGeom = this.computeGeometry(this._resultPointList, this._resultLineList, this._resultPolyList, opCode);\n  };\n  OverlayOp.prototype.labelIncompleteNode = function labelIncompleteNode (n, targetIndex) {\n    var loc = this._ptLocator.locate(n.getCoordinate(), this._arg[targetIndex].getGeometry());\n    n.getLabel().setLocation(targetIndex, loc);\n  };\n  OverlayOp.prototype.copyPoints = function copyPoints (argIndex) {\n    var this$1 = this;\n\n    for (var i = this._arg[argIndex].getNodeIterator(); i.hasNext();) {\n      var graphNode = i.next();\n      var newNode = this$1._graph.addNode(graphNode.getCoordinate());\n      newNode.setLabel(argIndex, graphNode.getLabel().getLocation(argIndex));\n    }\n  };\n  OverlayOp.prototype.findResultAreaEdges = function findResultAreaEdges (opCode) {\n    for (var it = this._graph.getEdgeEnds().iterator(); it.hasNext();) {\n      var de = it.next();\n      var label = de.getLabel();\n      if (label.isArea() && !de.isInteriorAreaEdge() && OverlayOp.isResultOfOp(label.getLocation(0, Position.RIGHT), label.getLocation(1, Position.RIGHT), opCode)) {\n        de.setInResult(true);\n      }\n    }\n  };\n  OverlayOp.prototype.computeLabelsFromDepths = function computeLabelsFromDepths () {\n    for (var it = this._edgeList.iterator(); it.hasNext();) {\n      var e = it.next();\n      var lbl = e.getLabel();\n      var depth = e.getDepth();\n      if (!depth.isNull()) {\n        depth.normalize();\n        for (var i = 0; i < 2; i++) {\n          if (!lbl.isNull(i) && lbl.isArea() && !depth.isNull(i)) {\n            if (depth.getDelta(i) === 0) {\n              lbl.toLine(i);\n            } else {\n              Assert.isTrue(!depth.isNull(i, Position.LEFT), 'depth of LEFT side has not been initialized');\n              lbl.setLocation(i, Position.LEFT, depth.getLocation(i, Position.LEFT));\n              Assert.isTrue(!depth.isNull(i, Position.RIGHT), 'depth of RIGHT side has not been initialized');\n              lbl.setLocation(i, Position.RIGHT, depth.getLocation(i, Position.RIGHT));\n            }\n          }\n        }\n      }\n    }\n  };\n  OverlayOp.prototype.computeLabelling = function computeLabelling () {\n    var this$1 = this;\n\n    for (var nodeit = this._graph.getNodes().iterator(); nodeit.hasNext();) {\n      var node = nodeit.next();\n      node.getEdges().computeLabelling(this$1._arg);\n    }\n    this.mergeSymLabels();\n    this.updateNodeLabelling();\n  };\n  OverlayOp.prototype.labelIncompleteNodes = function labelIncompleteNodes () {\n    var this$1 = this;\n\n    // let nodeCount = 0\n    for (var ni = this._graph.getNodes().iterator(); ni.hasNext();) {\n      var n = ni.next();\n      var label = n.getLabel();\n      if (n.isIsolated()) {\n        // nodeCount++\n        if (label.isNull(0)) { this$1.labelIncompleteNode(n, 0); } else { this$1.labelIncompleteNode(n, 1); }\n      }\n      n.getEdges().updateLabelling(label);\n    }\n  };\n  OverlayOp.prototype.isCoveredByA = function isCoveredByA (coord) {\n    if (this.isCovered(coord, this._resultPolyList)) { return true }\n    return false\n  };\n  OverlayOp.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  OverlayOp.prototype.getClass = function getClass () {\n    return OverlayOp\n  };\n\n  return OverlayOp;\n}(GeometryGraphOp));\n\nOverlayOp.overlayOp = function (geom0, geom1, opCode) {\n  var gov = new OverlayOp(geom0, geom1);\n  var geomOv = gov.getResultGeometry(opCode);\n  return geomOv\n};\nOverlayOp.intersection = function (g, other) {\n  if (g.isEmpty() || other.isEmpty()) { return OverlayOp.createEmptyResult(OverlayOp.INTERSECTION, g, other, g.getFactory()) }\n  if (g.isGeometryCollection()) {\n    var g2 = other;\n    return GeometryCollectionMapper.map(g, {\n      interfaces_: function () {\n        return [GeometryMapper.MapOp]\n      },\n      map: function (g) {\n        return g.intersection(g2)\n      }\n    })\n  }\n  g.checkNotGeometryCollection(g);\n  g.checkNotGeometryCollection(other);\n  return SnapIfNeededOverlayOp.overlayOp(g, other, OverlayOp.INTERSECTION)\n};\nOverlayOp.symDifference = function (g, other) {\n  if (g.isEmpty() || other.isEmpty()) {\n    if (g.isEmpty() && other.isEmpty()) { return OverlayOp.createEmptyResult(OverlayOp.SYMDIFFERENCE, g, other, g.getFactory()) }\n    if (g.isEmpty()) { return other.copy() }\n    if (other.isEmpty()) { return g.copy() }\n  }\n  g.checkNotGeometryCollection(g);\n  g.checkNotGeometryCollection(other);\n  return SnapIfNeededOverlayOp.overlayOp(g, other, OverlayOp.SYMDIFFERENCE)\n};\nOverlayOp.resultDimension = function (opCode, g0, g1) {\n  var dim0 = g0.getDimension();\n  var dim1 = g1.getDimension();\n  var resultDimension = -1;\n  switch (opCode) {\n    case OverlayOp.INTERSECTION:\n      resultDimension = Math.min(dim0, dim1);\n      break\n    case OverlayOp.UNION:\n      resultDimension = Math.max(dim0, dim1);\n      break\n    case OverlayOp.DIFFERENCE:\n      resultDimension = dim0;\n      break\n    case OverlayOp.SYMDIFFERENCE:\n      resultDimension = Math.max(dim0, dim1);\n      break\n    default:\n  }\n  return resultDimension\n};\nOverlayOp.createEmptyResult = function (overlayOpCode, a, b, geomFact) {\n  var result = null;\n  switch (OverlayOp.resultDimension(overlayOpCode, a, b)) {\n    case -1:\n      result = geomFact.createGeometryCollection(new Array(0).fill(null));\n      break\n    case 0:\n      result = geomFact.createPoint();\n      break\n    case 1:\n      result = geomFact.createLineString();\n      break\n    case 2:\n      result = geomFact.createPolygon();\n      break\n    default:\n  }\n  return result\n};\nOverlayOp.difference = function (g, other) {\n  if (g.isEmpty()) { return OverlayOp.createEmptyResult(OverlayOp.DIFFERENCE, g, other, g.getFactory()) }\n  if (other.isEmpty()) { return g.copy() }\n  g.checkNotGeometryCollection(g);\n  g.checkNotGeometryCollection(other);\n  return SnapIfNeededOverlayOp.overlayOp(g, other, OverlayOp.DIFFERENCE)\n};\nOverlayOp.isResultOfOp = function () {\n  if (arguments.length === 2) {\n    var label = arguments[0];\n    var opCode = arguments[1];\n    var loc0 = label.getLocation(0);\n    var loc1 = label.getLocation(1);\n    return OverlayOp.isResultOfOp(loc0, loc1, opCode)\n  } else if (arguments.length === 3) {\n    var loc0$1 = arguments[0];\n    var loc1$1 = arguments[1];\n    var overlayOpCode = arguments[2];\n    if (loc0$1 === Location.BOUNDARY) { loc0$1 = Location.INTERIOR; }\n    if (loc1$1 === Location.BOUNDARY) { loc1$1 = Location.INTERIOR; }\n    switch (overlayOpCode) {\n      case OverlayOp.INTERSECTION:\n        return loc0$1 === Location.INTERIOR && loc1$1 === Location.INTERIOR\n      case OverlayOp.UNION:\n        return loc0$1 === Location.INTERIOR || loc1$1 === Location.INTERIOR\n      case OverlayOp.DIFFERENCE:\n        return loc0$1 === Location.INTERIOR && loc1$1 !== Location.INTERIOR\n      case OverlayOp.SYMDIFFERENCE:\n        return (loc0$1 === Location.INTERIOR && loc1$1 !== Location.INTERIOR) || (loc0$1 !== Location.INTERIOR && loc1$1 === Location.INTERIOR)\n      default:\n    }\n    return false\n  }\n};\nOverlayOp.INTERSECTION = 1;\nOverlayOp.UNION = 2;\nOverlayOp.DIFFERENCE = 3;\nOverlayOp.SYMDIFFERENCE = 4;\n\nvar FuzzyPointLocator = function FuzzyPointLocator () {\n  this._g = null;\n  this._boundaryDistanceTolerance = null;\n  this._linework = null;\n  this._ptLocator = new PointLocator();\n  this._seg = new LineSegment();\n  var g = arguments[0];\n  var boundaryDistanceTolerance = arguments[1];\n  this._g = g;\n  this._boundaryDistanceTolerance = boundaryDistanceTolerance;\n  this._linework = this.extractLinework(g);\n};\nFuzzyPointLocator.prototype.isWithinToleranceOfBoundary = function isWithinToleranceOfBoundary (pt) {\n    var this$1 = this;\n\n  for (var i = 0; i < this._linework.getNumGeometries(); i++) {\n    var line = this$1._linework.getGeometryN(i);\n    var seq = line.getCoordinateSequence();\n    for (var j = 0; j < seq.size() - 1; j++) {\n      seq.getCoordinate(j, this$1._seg.p0);\n      seq.getCoordinate(j + 1, this$1._seg.p1);\n      var dist = this$1._seg.distance(pt);\n      if (dist <= this$1._boundaryDistanceTolerance) { return true }\n    }\n  }\n  return false\n};\nFuzzyPointLocator.prototype.getLocation = function getLocation (pt) {\n  if (this.isWithinToleranceOfBoundary(pt)) { return Location.BOUNDARY }\n  return this._ptLocator.locate(pt, this._g)\n};\nFuzzyPointLocator.prototype.extractLinework = function extractLinework (g) {\n  var extracter = new PolygonalLineworkExtracter();\n  g.apply(extracter);\n  var linework = extracter.getLinework();\n  var lines = GeometryFactory.toLineStringArray(linework);\n  return g.getFactory().createMultiLineString(lines)\n};\nFuzzyPointLocator.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nFuzzyPointLocator.prototype.getClass = function getClass () {\n  return FuzzyPointLocator\n};\n\nvar PolygonalLineworkExtracter = function PolygonalLineworkExtracter () {\n  this._linework = null;\n  this._linework = new ArrayList();\n};\nPolygonalLineworkExtracter.prototype.getLinework = function getLinework () {\n  return this._linework\n};\nPolygonalLineworkExtracter.prototype.filter = function filter (g) {\n    var this$1 = this;\n\n  if (g instanceof Polygon) {\n    var poly = g;\n    this._linework.add(poly.getExteriorRing());\n    for (var i = 0; i < poly.getNumInteriorRing(); i++) {\n      this$1._linework.add(poly.getInteriorRingN(i));\n    }\n  }\n};\nPolygonalLineworkExtracter.prototype.interfaces_ = function interfaces_ () {\n  return [GeometryFilter]\n};\nPolygonalLineworkExtracter.prototype.getClass = function getClass () {\n  return PolygonalLineworkExtracter\n};\n\nvar OffsetPointGenerator = function OffsetPointGenerator () {\n  this._g = null;\n  this._doLeft = true;\n  this._doRight = true;\n  var g = arguments[0];\n  this._g = g;\n};\nOffsetPointGenerator.prototype.extractPoints = function extractPoints (line, offsetDistance, offsetPts) {\n    var this$1 = this;\n\n  var pts = line.getCoordinates();\n  for (var i = 0; i < pts.length - 1; i++) {\n    this$1.computeOffsetPoints(pts[i], pts[i + 1], offsetDistance, offsetPts);\n  }\n};\nOffsetPointGenerator.prototype.setSidesToGenerate = function setSidesToGenerate (doLeft, doRight) {\n  this._doLeft = doLeft;\n  this._doRight = doRight;\n};\nOffsetPointGenerator.prototype.getPoints = function getPoints (offsetDistance) {\n    var this$1 = this;\n\n  var offsetPts = new ArrayList();\n  var lines = LinearComponentExtracter.getLines(this._g);\n  for (var i = lines.iterator(); i.hasNext();) {\n    var line = i.next();\n    this$1.extractPoints(line, offsetDistance, offsetPts);\n  }\n  return offsetPts\n};\nOffsetPointGenerator.prototype.computeOffsetPoints = function computeOffsetPoints (p0, p1, offsetDistance, offsetPts) {\n  var dx = p1.x - p0.x;\n  var dy = p1.y - p0.y;\n  var len = Math.sqrt(dx * dx + dy * dy);\n  var ux = offsetDistance * dx / len;\n  var uy = offsetDistance * dy / len;\n  var midX = (p1.x + p0.x) / 2;\n  var midY = (p1.y + p0.y) / 2;\n  if (this._doLeft) {\n    var offsetLeft = new Coordinate(midX - uy, midY + ux);\n    offsetPts.add(offsetLeft);\n  }\n  if (this._doRight) {\n    var offsetRight = new Coordinate(midX + uy, midY - ux);\n    offsetPts.add(offsetRight);\n  }\n};\nOffsetPointGenerator.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nOffsetPointGenerator.prototype.getClass = function getClass () {\n  return OffsetPointGenerator\n};\n\nvar OverlayResultValidator = function OverlayResultValidator () {\n  this._geom = null;\n  this._locFinder = null;\n  this._location = new Array(3).fill(null);\n  this._invalidLocation = null;\n  this._boundaryDistanceTolerance = OverlayResultValidator.TOLERANCE;\n  this._testCoords = new ArrayList();\n  var a = arguments[0];\n  var b = arguments[1];\n  var result = arguments[2];\n  this._boundaryDistanceTolerance = OverlayResultValidator.computeBoundaryDistanceTolerance(a, b);\n  this._geom = [a, b, result];\n  this._locFinder = [new FuzzyPointLocator(this._geom[0], this._boundaryDistanceTolerance), new FuzzyPointLocator(this._geom[1], this._boundaryDistanceTolerance), new FuzzyPointLocator(this._geom[2], this._boundaryDistanceTolerance)];\n};\n\nvar staticAccessors$46 = { TOLERANCE: { configurable: true } };\nOverlayResultValidator.prototype.reportResult = function reportResult (overlayOp, location, expectedInterior) {\n  System.out.println('Overlay result invalid - A:' + Location.toLocationSymbol(location[0]) + ' B:' + Location.toLocationSymbol(location[1]) + ' expected:' + (expectedInterior ? 'i' : 'e') + ' actual:' + Location.toLocationSymbol(location[2]));\n};\nOverlayResultValidator.prototype.isValid = function isValid (overlayOp) {\n  this.addTestPts(this._geom[0]);\n  this.addTestPts(this._geom[1]);\n  var isValid = this.checkValid(overlayOp);\n  return isValid\n};\nOverlayResultValidator.prototype.checkValid = function checkValid () {\n    var this$1 = this;\n\n  if (arguments.length === 1) {\n    var overlayOp = arguments[0];\n    for (var i = 0; i < this._testCoords.size(); i++) {\n      var pt = this$1._testCoords.get(i);\n      if (!this$1.checkValid(overlayOp, pt)) {\n        this$1._invalidLocation = pt;\n        return false\n      }\n    }\n    return true\n  } else if (arguments.length === 2) {\n    var overlayOp$1 = arguments[0];\n    var pt$1 = arguments[1];\n    this._location[0] = this._locFinder[0].getLocation(pt$1);\n    this._location[1] = this._locFinder[1].getLocation(pt$1);\n    this._location[2] = this._locFinder[2].getLocation(pt$1);\n    if (OverlayResultValidator.hasLocation(this._location, Location.BOUNDARY)) { return true }\n    return this.isValidResult(overlayOp$1, this._location)\n  }\n};\nOverlayResultValidator.prototype.addTestPts = function addTestPts (g) {\n  var ptGen = new OffsetPointGenerator(g);\n  this._testCoords.addAll(ptGen.getPoints(5 * this._boundaryDistanceTolerance));\n};\nOverlayResultValidator.prototype.isValidResult = function isValidResult (overlayOp, location) {\n  var expectedInterior = OverlayOp.isResultOfOp(location[0], location[1], overlayOp);\n  var resultInInterior = location[2] === Location.INTERIOR;\n  var isValid = !(expectedInterior ^ resultInInterior);\n  if (!isValid) { this.reportResult(overlayOp, location, expectedInterior); }\n  return isValid\n};\nOverlayResultValidator.prototype.getInvalidLocation = function getInvalidLocation () {\n  return this._invalidLocation\n};\nOverlayResultValidator.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nOverlayResultValidator.prototype.getClass = function getClass () {\n  return OverlayResultValidator\n};\nOverlayResultValidator.hasLocation = function hasLocation (location, loc) {\n  for (var i = 0; i < 3; i++) {\n    if (location[i] === loc) { return true }\n  }\n  return false\n};\nOverlayResultValidator.computeBoundaryDistanceTolerance = function computeBoundaryDistanceTolerance (g0, g1) {\n  return Math.min(GeometrySnapper.computeSizeBasedSnapTolerance(g0), GeometrySnapper.computeSizeBasedSnapTolerance(g1))\n};\nOverlayResultValidator.isValid = function isValid (a, b, overlayOp, result) {\n  var validator = new OverlayResultValidator(a, b, result);\n  return validator.isValid(overlayOp)\n};\nstaticAccessors$46.TOLERANCE.get = function () { return 0.000001 };\n\nObject.defineProperties( OverlayResultValidator, staticAccessors$46 );\n\n// operation.overlay\n\nvar GeometryCombiner = function GeometryCombiner (geoms) {\n  this._geomFactory = null;\n  this._skipEmpty = false;\n  this._inputGeoms = null;\n  this._geomFactory = GeometryCombiner.extractFactory(geoms);\n  this._inputGeoms = geoms;\n};\nGeometryCombiner.prototype.extractElements = function extractElements (geom, elems) {\n    var this$1 = this;\n\n  if (geom === null) { return null }\n  for (var i = 0; i < geom.getNumGeometries(); i++) {\n    var elemGeom = geom.getGeometryN(i);\n    if (this$1._skipEmpty && elemGeom.isEmpty()) { continue }\n    elems.add(elemGeom);\n  }\n};\nGeometryCombiner.prototype.combine = function combine () {\n    var this$1 = this;\n\n  var elems = new ArrayList();\n  for (var i = this._inputGeoms.iterator(); i.hasNext();) {\n    var g = i.next();\n    this$1.extractElements(g, elems);\n  }\n  if (elems.size() === 0) {\n    if (this._geomFactory !== null) {\n      return this._geomFactory.createGeometryCollection(null)\n    }\n    return null\n  }\n  return this._geomFactory.buildGeometry(elems)\n};\nGeometryCombiner.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nGeometryCombiner.prototype.getClass = function getClass () {\n  return GeometryCombiner\n};\nGeometryCombiner.combine = function combine () {\n  if (arguments.length === 1) {\n    var geoms = arguments[0];\n    var combiner = new GeometryCombiner(geoms);\n    return combiner.combine()\n  } else if (arguments.length === 2) {\n    var g0 = arguments[0];\n    var g1 = arguments[1];\n    var combiner$1 = new GeometryCombiner(GeometryCombiner.createList(g0, g1));\n    return combiner$1.combine()\n  } else if (arguments.length === 3) {\n    var g0$1 = arguments[0];\n    var g1$1 = arguments[1];\n    var g2 = arguments[2];\n    var combiner$2 = new GeometryCombiner(GeometryCombiner.createList(g0$1, g1$1, g2));\n    return combiner$2.combine()\n  }\n};\nGeometryCombiner.extractFactory = function extractFactory (geoms) {\n  if (geoms.isEmpty()) { return null }\n  return geoms.iterator().next().getFactory()\n};\nGeometryCombiner.createList = function createList () {\n  if (arguments.length === 2) {\n    var obj0 = arguments[0];\n    var obj1 = arguments[1];\n    var list = new ArrayList();\n    list.add(obj0);\n    list.add(obj1);\n    return list\n  } else if (arguments.length === 3) {\n    var obj0$1 = arguments[0];\n    var obj1$1 = arguments[1];\n    var obj2 = arguments[2];\n    var list$1 = new ArrayList();\n    list$1.add(obj0$1);\n    list$1.add(obj1$1);\n    list$1.add(obj2);\n    return list$1\n  }\n};\n\nvar CascadedPolygonUnion = function CascadedPolygonUnion () {\n  this._inputPolys = null;\n  this._geomFactory = null;\n  var polys = arguments[0];\n  this._inputPolys = polys;\n  if (this._inputPolys === null) { this._inputPolys = new ArrayList(); }\n};\n\nvar staticAccessors$47 = { STRTREE_NODE_CAPACITY: { configurable: true } };\nCascadedPolygonUnion.prototype.reduceToGeometries = function reduceToGeometries (geomTree) {\n    var this$1 = this;\n\n  var geoms = new ArrayList();\n  for (var i = geomTree.iterator(); i.hasNext();) {\n    var o = i.next();\n    var geom = null;\n    if (hasInterface(o, List)) {\n      geom = this$1.unionTree(o);\n    } else if (o instanceof Geometry) {\n      geom = o;\n    }\n    geoms.add(geom);\n  }\n  return geoms\n};\nCascadedPolygonUnion.prototype.extractByEnvelope = function extractByEnvelope (env, geom, disjointGeoms) {\n  var intersectingGeoms = new ArrayList();\n  for (var i = 0; i < geom.getNumGeometries(); i++) {\n    var elem = geom.getGeometryN(i);\n    if (elem.getEnvelopeInternal().intersects(env)) { intersectingGeoms.add(elem); } else { disjointGeoms.add(elem); }\n  }\n  return this._geomFactory.buildGeometry(intersectingGeoms)\n};\nCascadedPolygonUnion.prototype.unionOptimized = function unionOptimized (g0, g1) {\n  var g0Env = g0.getEnvelopeInternal();\n  var g1Env = g1.getEnvelopeInternal();\n  if (!g0Env.intersects(g1Env)) {\n    var combo = GeometryCombiner.combine(g0, g1);\n    return combo\n  }\n  if (g0.getNumGeometries() <= 1 && g1.getNumGeometries() <= 1) { return this.unionActual(g0, g1) }\n  var commonEnv = g0Env.intersection(g1Env);\n  return this.unionUsingEnvelopeIntersection(g0, g1, commonEnv)\n};\nCascadedPolygonUnion.prototype.union = function union () {\n  if (this._inputPolys === null) { throw new Error('union() method cannot be called twice') }\n  if (this._inputPolys.isEmpty()) { return null }\n  this._geomFactory = this._inputPolys.iterator().next().getFactory();\n  var index = new STRtree(CascadedPolygonUnion.STRTREE_NODE_CAPACITY);\n  for (var i = this._inputPolys.iterator(); i.hasNext();) {\n    var item = i.next();\n    index.insert(item.getEnvelopeInternal(), item);\n  }\n  this._inputPolys = null;\n  var itemTree = index.itemsTree();\n  var unionAll = this.unionTree(itemTree);\n  return unionAll\n};\nCascadedPolygonUnion.prototype.binaryUnion = function binaryUnion () {\n  if (arguments.length === 1) {\n    var geoms = arguments[0];\n    return this.binaryUnion(geoms, 0, geoms.size())\n  } else if (arguments.length === 3) {\n    var geoms$1 = arguments[0];\n    var start = arguments[1];\n    var end = arguments[2];\n    if (end - start <= 1) {\n      var g0 = CascadedPolygonUnion.getGeometry(geoms$1, start);\n      return this.unionSafe(g0, null)\n    } else if (end - start === 2) {\n      return this.unionSafe(CascadedPolygonUnion.getGeometry(geoms$1, start), CascadedPolygonUnion.getGeometry(geoms$1, start + 1))\n    } else {\n      var mid = Math.trunc((end + start) / 2);\n      var g0$1 = this.binaryUnion(geoms$1, start, mid);\n      var g1 = this.binaryUnion(geoms$1, mid, end);\n      return this.unionSafe(g0$1, g1)\n    }\n  }\n};\nCascadedPolygonUnion.prototype.repeatedUnion = function repeatedUnion (geoms) {\n  var union = null;\n  for (var i = geoms.iterator(); i.hasNext();) {\n    var g = i.next();\n    if (union === null) { union = g.copy(); } else { union = union.union(g); }\n  }\n  return union\n};\nCascadedPolygonUnion.prototype.unionSafe = function unionSafe (g0, g1) {\n  if (g0 === null && g1 === null) { return null }\n  if (g0 === null) { return g1.copy() }\n  if (g1 === null) { return g0.copy() }\n  return this.unionOptimized(g0, g1)\n};\nCascadedPolygonUnion.prototype.unionActual = function unionActual (g0, g1) {\n  return CascadedPolygonUnion.restrictToPolygons(g0.union(g1))\n};\nCascadedPolygonUnion.prototype.unionTree = function unionTree (geomTree) {\n  var geoms = this.reduceToGeometries(geomTree);\n  var union = this.binaryUnion(geoms);\n  return union\n};\nCascadedPolygonUnion.prototype.unionUsingEnvelopeIntersection = function unionUsingEnvelopeIntersection (g0, g1, common) {\n  var disjointPolys = new ArrayList();\n  var g0Int = this.extractByEnvelope(common, g0, disjointPolys);\n  var g1Int = this.extractByEnvelope(common, g1, disjointPolys);\n  var union = this.unionActual(g0Int, g1Int);\n  disjointPolys.add(union);\n  var overallUnion = GeometryCombiner.combine(disjointPolys);\n  return overallUnion\n};\nCascadedPolygonUnion.prototype.bufferUnion = function bufferUnion () {\n  if (arguments.length === 1) {\n    var geoms = arguments[0];\n    var factory = geoms.get(0).getFactory();\n    var gColl = factory.buildGeometry(geoms);\n    var unionAll = gColl.buffer(0.0);\n    return unionAll\n  } else if (arguments.length === 2) {\n    var g0 = arguments[0];\n    var g1 = arguments[1];\n    var factory$1 = g0.getFactory();\n    var gColl$1 = factory$1.createGeometryCollection([g0, g1]);\n    var unionAll$1 = gColl$1.buffer(0.0);\n    return unionAll$1\n  }\n};\nCascadedPolygonUnion.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nCascadedPolygonUnion.prototype.getClass = function getClass () {\n  return CascadedPolygonUnion\n};\nCascadedPolygonUnion.restrictToPolygons = function restrictToPolygons (g) {\n  if (hasInterface(g, Polygonal)) {\n    return g\n  }\n  var polygons = PolygonExtracter.getPolygons(g);\n  if (polygons.size() === 1) { return polygons.get(0) }\n  return g.getFactory().createMultiPolygon(GeometryFactory.toPolygonArray(polygons))\n};\nCascadedPolygonUnion.getGeometry = function getGeometry (list, index) {\n  if (index >= list.size()) { return null }\n  return list.get(index)\n};\nCascadedPolygonUnion.union = function union (polys) {\n  var op = new CascadedPolygonUnion(polys);\n  return op.union()\n};\nstaticAccessors$47.STRTREE_NODE_CAPACITY.get = function () { return 4 };\n\nObject.defineProperties( CascadedPolygonUnion, staticAccessors$47 );\n\nvar UnionOp = function UnionOp () {};\n\nUnionOp.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nUnionOp.prototype.getClass = function getClass () {\n  return UnionOp\n};\nUnionOp.union = function union (g, other) {\n  if (g.isEmpty() || other.isEmpty()) {\n    if (g.isEmpty() && other.isEmpty()) { return OverlayOp.createEmptyResult(OverlayOp.UNION, g, other, g.getFactory()) }\n    if (g.isEmpty()) { return other.copy() }\n    if (other.isEmpty()) { return g.copy() }\n  }\n  g.checkNotGeometryCollection(g);\n  g.checkNotGeometryCollection(other);\n  return SnapIfNeededOverlayOp.overlayOp(g, other, OverlayOp.UNION)\n};\n\n// operation.union\n\n// operation\n\n/**\n * Polyfill for IE support\n */\n\nexport { GeoJSONReader, GeoJSONWriter, OverlayOp, UnionOp, BufferOp };\n","import { GeoJSONReader, GeoJSONWriter, UnionOp } from 'turf-jsts';\n\n/**\n * Takes two or more {@link Polygon|polygons} and returns a combined polygon. If the input polygons are not contiguous, this function returns a {@link MultiPolygon} feature.\n *\n * @name union\n * @param {...Feature<Polygon>} A polygon to combine\n * @returns {Feature<(Polygon|MultiPolygon)>} a combined {@link Polygon} or {@link MultiPolygon} feature\n * @example\n * var poly1 = turf.polygon([[\n *     [-82.574787, 35.594087],\n *     [-82.574787, 35.615581],\n *     [-82.545261, 35.615581],\n *     [-82.545261, 35.594087],\n *     [-82.574787, 35.594087]\n * ]], {\"fill\": \"#0f0\"});\n * var poly2 = turf.polygon([[\n *     [-82.560024, 35.585153],\n *     [-82.560024, 35.602602],\n *     [-82.52964, 35.602602],\n *     [-82.52964, 35.585153],\n *     [-82.560024, 35.585153]\n * ]], {\"fill\": \"#00f\"});\n *\n * var union = turf.union(poly1, poly2);\n *\n * //addToMap\n * var addToMap = [poly1, poly2, union];\n */\nfunction union() {\n    var reader = new GeoJSONReader();\n    var result = reader.read(JSON.stringify(arguments[0].geometry));\n\n    for (var i = 1; i < arguments.length; i++) {\n        result = UnionOp.union(result, reader.read(JSON.stringify(arguments[i].geometry)));\n    }\n\n    var writer = new GeoJSONWriter();\n    result = writer.write(result);\n\n    return {\n        type: 'Feature',\n        geometry: result,\n        properties: arguments[0].properties\n    };\n}\n\nexport default union;\n","/**\n * Earth Radius used with the Harvesine formula and approximates using a spherical (non-ellipsoid) Earth.\n */\nvar earthRadius = 6371008.8;\n\n/**\n * Unit of measurement factors using a spherical (non-ellipsoid) earth radius.\n */\nvar factors = {\n    meters: earthRadius,\n    metres: earthRadius,\n    millimeters: earthRadius * 1000,\n    millimetres: earthRadius * 1000,\n    centimeters: earthRadius * 100,\n    centimetres: earthRadius * 100,\n    kilometers: earthRadius / 1000,\n    kilometres: earthRadius / 1000,\n    miles: earthRadius / 1609.344,\n    nauticalmiles: earthRadius / 1852,\n    inches: earthRadius * 39.370,\n    yards: earthRadius / 1.0936,\n    feet: earthRadius * 3.28084,\n    radians: 1,\n    degrees: earthRadius / 111325,\n};\n\n/**\n * Units of measurement factors based on 1 meter.\n */\nvar unitsFactors = {\n    meters: 1,\n    metres: 1,\n    millimeters: 1000,\n    millimetres: 1000,\n    centimeters: 100,\n    centimetres: 100,\n    kilometers: 1 / 1000,\n    kilometres: 1 / 1000,\n    miles: 1 / 1609.344,\n    nauticalmiles: 1 / 1852,\n    inches: 39.370,\n    yards: 1 / 1.0936,\n    feet: 3.28084,\n    radians: 1 / earthRadius,\n    degrees: 1 / 111325,\n};\n\n/**\n * Area of measurement factors based on 1 square meter.\n */\nvar areaFactors = {\n    meters: 1,\n    metres: 1,\n    millimeters: 1000000,\n    millimetres: 1000000,\n    centimeters: 10000,\n    centimetres: 10000,\n    kilometers: 0.000001,\n    kilometres: 0.000001,\n    acres: 0.000247105,\n    miles: 3.86e-7,\n    yards: 1.195990046,\n    feet: 10.763910417,\n    inches: 1550.003100006\n};\n\n/**\n * Wraps a GeoJSON {@link Geometry} in a GeoJSON {@link Feature}.\n *\n * @name feature\n * @param {Geometry} geometry input geometry\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature} a GeoJSON Feature\n * @example\n * var geometry = {\n *   \"type\": \"Point\",\n *   \"coordinates\": [110, 50]\n * };\n *\n * var feature = turf.feature(geometry);\n *\n * //=feature\n */\nfunction feature(geometry, properties, options) {\n    // Optional Parameters\n    options = options || {};\n    if (!isObject(options)) throw new Error('options is invalid');\n    var bbox = options.bbox;\n    var id = options.id;\n\n    // Validation\n    if (geometry === undefined) throw new Error('geometry is required');\n    if (properties && properties.constructor !== Object) throw new Error('properties must be an Object');\n    if (bbox) validateBBox(bbox);\n    if (id) validateId(id);\n\n    // Main\n    var feat = {type: 'Feature'};\n    if (id) feat.id = id;\n    if (bbox) feat.bbox = bbox;\n    feat.properties = properties || {};\n    feat.geometry = geometry;\n    return feat;\n}\n\n/**\n * Creates a GeoJSON {@link Geometry} from a Geometry string type & coordinates.\n * For GeometryCollection type use `helpers.geometryCollection`\n *\n * @name geometry\n * @param {string} type Geometry Type\n * @param {Array<number>} coordinates Coordinates\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Geometry\n * @returns {Geometry} a GeoJSON Geometry\n * @example\n * var type = 'Point';\n * var coordinates = [110, 50];\n *\n * var geometry = turf.geometry(type, coordinates);\n *\n * //=geometry\n */\nfunction geometry(type, coordinates, options) {\n    // Optional Parameters\n    options = options || {};\n    if (!isObject(options)) throw new Error('options is invalid');\n    var bbox = options.bbox;\n\n    // Validation\n    if (!type) throw new Error('type is required');\n    if (!coordinates) throw new Error('coordinates is required');\n    if (!Array.isArray(coordinates)) throw new Error('coordinates must be an Array');\n    if (bbox) validateBBox(bbox);\n\n    // Main\n    var geom;\n    switch (type) {\n    case 'Point': geom = point(coordinates).geometry; break;\n    case 'LineString': geom = lineString(coordinates).geometry; break;\n    case 'Polygon': geom = polygon(coordinates).geometry; break;\n    case 'MultiPoint': geom = multiPoint(coordinates).geometry; break;\n    case 'MultiLineString': geom = multiLineString(coordinates).geometry; break;\n    case 'MultiPolygon': geom = multiPolygon(coordinates).geometry; break;\n    default: throw new Error(type + ' is invalid');\n    }\n    if (bbox) geom.bbox = bbox;\n    return geom;\n}\n\n/**\n * Creates a {@link Point} {@link Feature} from a Position.\n *\n * @name point\n * @param {Array<number>} coordinates longitude, latitude position (each in decimal degrees)\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<Point>} a Point feature\n * @example\n * var point = turf.point([-75.343, 39.984]);\n *\n * //=point\n */\nfunction point(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n    if (!Array.isArray(coordinates)) throw new Error('coordinates must be an Array');\n    if (coordinates.length < 2) throw new Error('coordinates must be at least 2 numbers long');\n    if (!isNumber(coordinates[0]) || !isNumber(coordinates[1])) throw new Error('coordinates must contain numbers');\n\n    return feature({\n        type: 'Point',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link Point} {@link FeatureCollection} from an Array of Point coordinates.\n *\n * @name points\n * @param {Array<Array<number>>} coordinates an array of Points\n * @param {Object} [properties={}] Translate these properties to each Feature\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the FeatureCollection\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<Point>} Point Feature\n * @example\n * var points = turf.points([\n *   [-75, 39],\n *   [-80, 45],\n *   [-78, 50]\n * ]);\n *\n * //=points\n */\nfunction points(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n    if (!Array.isArray(coordinates)) throw new Error('coordinates must be an Array');\n\n    return featureCollection(coordinates.map(function (coords) {\n        return point(coords, properties);\n    }), options);\n}\n\n/**\n * Creates a {@link Polygon} {@link Feature} from an Array of LinearRings.\n *\n * @name polygon\n * @param {Array<Array<Array<number>>>} coordinates an array of LinearRings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<Polygon>} Polygon Feature\n * @example\n * var polygon = turf.polygon([[[-5, 52], [-4, 56], [-2, 51], [-7, 54], [-5, 52]]], { name: 'poly1' });\n *\n * //=polygon\n */\nfunction polygon(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n\n    for (var i = 0; i < coordinates.length; i++) {\n        var ring = coordinates[i];\n        if (ring.length < 4) {\n            throw new Error('Each LinearRing of a Polygon must have 4 or more Positions.');\n        }\n        for (var j = 0; j < ring[ring.length - 1].length; j++) {\n            // Check if first point of Polygon contains two numbers\n            if (i === 0 && j === 0 && !isNumber(ring[0][0]) || !isNumber(ring[0][1])) throw new Error('coordinates must contain numbers');\n            if (ring[ring.length - 1][j] !== ring[0][j]) {\n                throw new Error('First and last Position are not equivalent.');\n            }\n        }\n    }\n\n    return feature({\n        type: 'Polygon',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link Polygon} {@link FeatureCollection} from an Array of Polygon coordinates.\n *\n * @name polygons\n * @param {Array<Array<Array<Array<number>>>>} coordinates an array of Polygon coordinates\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<Polygon>} Polygon FeatureCollection\n * @example\n * var polygons = turf.polygons([\n *   [[[-5, 52], [-4, 56], [-2, 51], [-7, 54], [-5, 52]]],\n *   [[[-15, 42], [-14, 46], [-12, 41], [-17, 44], [-15, 42]]],\n * ]);\n *\n * //=polygons\n */\nfunction polygons(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n    if (!Array.isArray(coordinates)) throw new Error('coordinates must be an Array');\n\n    return featureCollection(coordinates.map(function (coords) {\n        return polygon(coords, properties);\n    }), options);\n}\n\n/**\n * Creates a {@link LineString} {@link Feature} from an Array of Positions.\n *\n * @name lineString\n * @param {Array<Array<number>>} coordinates an array of Positions\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<LineString>} LineString Feature\n * @example\n * var linestring1 = turf.lineString([[-24, 63], [-23, 60], [-25, 65], [-20, 69]], {name: 'line 1'});\n * var linestring2 = turf.lineString([[-14, 43], [-13, 40], [-15, 45], [-10, 49]], {name: 'line 2'});\n *\n * //=linestring1\n * //=linestring2\n */\nfunction lineString(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n    if (coordinates.length < 2) throw new Error('coordinates must be an array of two or more positions');\n    // Check if first point of LineString contains two numbers\n    if (!isNumber(coordinates[0][1]) || !isNumber(coordinates[0][1])) throw new Error('coordinates must contain numbers');\n\n    return feature({\n        type: 'LineString',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link LineString} {@link FeatureCollection} from an Array of LineString coordinates.\n *\n * @name lineStrings\n * @param {Array<Array<number>>} coordinates an array of LinearRings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the FeatureCollection\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<LineString>} LineString FeatureCollection\n * @example\n * var linestrings = turf.lineStrings([\n *   [[-24, 63], [-23, 60], [-25, 65], [-20, 69]],\n *   [[-14, 43], [-13, 40], [-15, 45], [-10, 49]]\n * ]);\n *\n * //=linestrings\n */\nfunction lineStrings(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n    if (!Array.isArray(coordinates)) throw new Error('coordinates must be an Array');\n\n    return featureCollection(coordinates.map(function (coords) {\n        return lineString(coords, properties);\n    }), options);\n}\n\n/**\n * Takes one or more {@link Feature|Features} and creates a {@link FeatureCollection}.\n *\n * @name featureCollection\n * @param {Feature[]} features input features\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {FeatureCollection} FeatureCollection of Features\n * @example\n * var locationA = turf.point([-75.343, 39.984], {name: 'Location A'});\n * var locationB = turf.point([-75.833, 39.284], {name: 'Location B'});\n * var locationC = turf.point([-75.534, 39.123], {name: 'Location C'});\n *\n * var collection = turf.featureCollection([\n *   locationA,\n *   locationB,\n *   locationC\n * ]);\n *\n * //=collection\n */\nfunction featureCollection(features, options) {\n    // Optional Parameters\n    options = options || {};\n    if (!isObject(options)) throw new Error('options is invalid');\n    var bbox = options.bbox;\n    var id = options.id;\n\n    // Validation\n    if (!features) throw new Error('No features passed');\n    if (!Array.isArray(features)) throw new Error('features must be an Array');\n    if (bbox) validateBBox(bbox);\n    if (id) validateId(id);\n\n    // Main\n    var fc = {type: 'FeatureCollection'};\n    if (id) fc.id = id;\n    if (bbox) fc.bbox = bbox;\n    fc.features = features;\n    return fc;\n}\n\n/**\n * Creates a {@link Feature<MultiLineString>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiLineString\n * @param {Array<Array<Array<number>>>} coordinates an array of LineStrings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiLineString>} a MultiLineString feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiLine = turf.multiLineString([[[0,0],[10,10]]]);\n *\n * //=multiLine\n */\nfunction multiLineString(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n\n    return feature({\n        type: 'MultiLineString',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link Feature<MultiPoint>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiPoint\n * @param {Array<Array<number>>} coordinates an array of Positions\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiPoint>} a MultiPoint feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiPt = turf.multiPoint([[0,0],[10,10]]);\n *\n * //=multiPt\n */\nfunction multiPoint(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n\n    return feature({\n        type: 'MultiPoint',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link Feature<MultiPolygon>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiPolygon\n * @param {Array<Array<Array<Array<number>>>>} coordinates an array of Polygons\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiPolygon>} a multipolygon feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiPoly = turf.multiPolygon([[[[0,0],[0,10],[10,10],[10,0],[0,0]]]]);\n *\n * //=multiPoly\n *\n */\nfunction multiPolygon(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n\n    return feature({\n        type: 'MultiPolygon',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link Feature<GeometryCollection>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name geometryCollection\n * @param {Array<Geometry>} geometries an array of GeoJSON Geometries\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<GeometryCollection>} a GeoJSON GeometryCollection Feature\n * @example\n * var pt = {\n *     \"type\": \"Point\",\n *       \"coordinates\": [100, 0]\n *     };\n * var line = {\n *     \"type\": \"LineString\",\n *     \"coordinates\": [ [101, 0], [102, 1] ]\n *   };\n * var collection = turf.geometryCollection([pt, line]);\n *\n * //=collection\n */\nfunction geometryCollection(geometries, properties, options) {\n    if (!geometries) throw new Error('geometries is required');\n    if (!Array.isArray(geometries)) throw new Error('geometries must be an Array');\n\n    return feature({\n        type: 'GeometryCollection',\n        geometries: geometries\n    }, properties, options);\n}\n\n/**\n * Round number to precision\n *\n * @param {number} num Number\n * @param {number} [precision=0] Precision\n * @returns {number} rounded number\n * @example\n * turf.round(120.4321)\n * //=120\n *\n * turf.round(120.4321, 2)\n * //=120.43\n */\nfunction round(num, precision) {\n    if (num === undefined || num === null || isNaN(num)) throw new Error('num is required');\n    if (precision && !(precision >= 0)) throw new Error('precision must be a positive number');\n    var multiplier = Math.pow(10, precision || 0);\n    return Math.round(num * multiplier) / multiplier;\n}\n\n/**\n * Convert a distance measurement (assuming a spherical Earth) from radians to a more friendly unit.\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @name radiansToLength\n * @param {number} radians in radians across the sphere\n * @param {string} [units='kilometers'] can be degrees, radians, miles, or kilometers inches, yards, metres, meters, kilometres, kilometers.\n * @returns {number} distance\n */\nfunction radiansToLength(radians, units) {\n    if (radians === undefined || radians === null) throw new Error('radians is required');\n\n    if (units && typeof units !== 'string') throw new Error('units must be a string');\n    var factor = factors[units || 'kilometers'];\n    if (!factor) throw new Error(units + ' units is invalid');\n    return radians * factor;\n}\n\n/**\n * Convert a distance measurement (assuming a spherical Earth) from a real-world unit into radians\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @name lengthToRadians\n * @param {number} distance in real units\n * @param {string} [units='kilometers'] can be degrees, radians, miles, or kilometers inches, yards, metres, meters, kilometres, kilometers.\n * @returns {number} radians\n */\nfunction lengthToRadians(distance, units) {\n    if (distance === undefined || distance === null) throw new Error('distance is required');\n\n    if (units && typeof units !== 'string') throw new Error('units must be a string');\n    var factor = factors[units || 'kilometers'];\n    if (!factor) throw new Error(units + ' units is invalid');\n    return distance / factor;\n}\n\n/**\n * Convert a distance measurement (assuming a spherical Earth) from a real-world unit into degrees\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, centimeters, kilometres, feet\n *\n * @name lengthToDegrees\n * @param {number} distance in real units\n * @param {string} [units='kilometers'] can be degrees, radians, miles, or kilometers inches, yards, metres, meters, kilometres, kilometers.\n * @returns {number} degrees\n */\nfunction lengthToDegrees(distance, units) {\n    return radiansToDegrees(lengthToRadians(distance, units));\n}\n\n/**\n * Converts any bearing angle from the north line direction (positive clockwise)\n * and returns an angle between 0-360 degrees (positive clockwise), 0 being the north line\n *\n * @name bearingToAzimuth\n * @param {number} bearing angle, between -180 and +180 degrees\n * @returns {number} angle between 0 and 360 degrees\n */\nfunction bearingToAzimuth(bearing) {\n    if (bearing === null || bearing === undefined) throw new Error('bearing is required');\n\n    var angle = bearing % 360;\n    if (angle < 0) angle += 360;\n    return angle;\n}\n\n/**\n * Converts an angle in radians to degrees\n *\n * @name radiansToDegrees\n * @param {number} radians angle in radians\n * @returns {number} degrees between 0 and 360 degrees\n */\nfunction radiansToDegrees(radians) {\n    if (radians === null || radians === undefined) throw new Error('radians is required');\n\n    var degrees = radians % (2 * Math.PI);\n    return degrees * 180 / Math.PI;\n}\n\n/**\n * Converts an angle in degrees to radians\n *\n * @name degreesToRadians\n * @param {number} degrees angle between 0 and 360 degrees\n * @returns {number} angle in radians\n */\nfunction degreesToRadians(degrees) {\n    if (degrees === null || degrees === undefined) throw new Error('degrees is required');\n\n    var radians = degrees % 360;\n    return radians * Math.PI / 180;\n}\n\n/**\n * Converts a length to the requested unit.\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @param {number} length to be converted\n * @param {string} originalUnit of the length\n * @param {string} [finalUnit='kilometers'] returned unit\n * @returns {number} the converted length\n */\nfunction convertLength(length, originalUnit, finalUnit) {\n    if (length === null || length === undefined) throw new Error('length is required');\n    if (!(length >= 0)) throw new Error('length must be a positive number');\n\n    return radiansToLength(lengthToRadians(length, originalUnit), finalUnit || 'kilometers');\n}\n\n/**\n * Converts a area to the requested unit.\n * Valid units: kilometers, kilometres, meters, metres, centimetres, millimeters, acres, miles, yards, feet, inches\n * @param {number} area to be converted\n * @param {string} [originalUnit='meters'] of the distance\n * @param {string} [finalUnit='kilometers'] returned unit\n * @returns {number} the converted distance\n */\nfunction convertArea(area, originalUnit, finalUnit) {\n    if (area === null || area === undefined) throw new Error('area is required');\n    if (!(area >= 0)) throw new Error('area must be a positive number');\n\n    var startFactor = areaFactors[originalUnit || 'meters'];\n    if (!startFactor) throw new Error('invalid original units');\n\n    var finalFactor = areaFactors[finalUnit || 'kilometers'];\n    if (!finalFactor) throw new Error('invalid final units');\n\n    return (area / startFactor) * finalFactor;\n}\n\n/**\n * isNumber\n *\n * @param {*} num Number to validate\n * @returns {boolean} true/false\n * @example\n * turf.isNumber(123)\n * //=true\n * turf.isNumber('foo')\n * //=false\n */\nfunction isNumber(num) {\n    return !isNaN(num) && num !== null && !Array.isArray(num);\n}\n\n/**\n * isObject\n *\n * @param {*} input variable to validate\n * @returns {boolean} true/false\n * @example\n * turf.isObject({elevation: 10})\n * //=true\n * turf.isObject('foo')\n * //=false\n */\nfunction isObject(input) {\n    return (!!input) && (input.constructor === Object);\n}\n\n/**\n * Validate BBox\n *\n * @private\n * @param {Array<number>} bbox BBox to validate\n * @returns {void}\n * @throws Error if BBox is not valid\n * @example\n * validateBBox([-180, -40, 110, 50])\n * //=OK\n * validateBBox([-180, -40])\n * //=Error\n * validateBBox('Foo')\n * //=Error\n * validateBBox(5)\n * //=Error\n * validateBBox(null)\n * //=Error\n * validateBBox(undefined)\n * //=Error\n */\nfunction validateBBox(bbox) {\n    if (!bbox) throw new Error('bbox is required');\n    if (!Array.isArray(bbox)) throw new Error('bbox must be an Array');\n    if (bbox.length !== 4 && bbox.length !== 6) throw new Error('bbox must be an Array of 4 or 6 numbers');\n    bbox.forEach(function (num) {\n        if (!isNumber(num)) throw new Error('bbox must only contain numbers');\n    });\n}\n\n/**\n * Validate Id\n *\n * @private\n * @param {string|number} id Id to validate\n * @returns {void}\n * @throws Error if Id is not valid\n * @example\n * validateId([-180, -40, 110, 50])\n * //=Error\n * validateId([-180, -40])\n * //=Error\n * validateId('Foo')\n * //=OK\n * validateId(5)\n * //=OK\n * validateId(null)\n * //=Error\n * validateId(undefined)\n * //=Error\n */\nfunction validateId(id) {\n    if (!id) throw new Error('id is required');\n    if (['string', 'number'].indexOf(typeof id) === -1) throw new Error('id must be a number or a string');\n}\n\n// Deprecated methods\nfunction radians2degrees() {\n    throw new Error('method has been renamed to `radiansToDegrees`');\n}\n\nfunction degrees2radians() {\n    throw new Error('method has been renamed to `degreesToRadians`');\n}\n\nfunction distanceToDegrees() {\n    throw new Error('method has been renamed to `lengthToDegrees`');\n}\n\nfunction distanceToRadians() {\n    throw new Error('method has been renamed to `lengthToRadians`');\n}\n\nfunction radiansToDistance() {\n    throw new Error('method has been renamed to `radiansToLength`');\n}\n\nfunction bearingToAngle() {\n    throw new Error('method has been renamed to `bearingToAzimuth`');\n}\n\nfunction convertDistance() {\n    throw new Error('method has been renamed to `convertLength`');\n}\n\nexport { earthRadius, factors, unitsFactors, areaFactors, feature, geometry, point, points, polygon, polygons, lineString, lineStrings, featureCollection, multiLineString, multiPoint, multiPolygon, geometryCollection, round, radiansToLength, lengthToRadians, lengthToDegrees, bearingToAzimuth, radiansToDegrees, degreesToRadians, convertLength, convertArea, isNumber, isObject, validateBBox, validateId, radians2degrees, degrees2radians, distanceToDegrees, distanceToRadians, radiansToDistance, bearingToAngle, convertDistance };\n","import { feature, isObject, lineString, point } from '@turf/helpers';\n\n/**\n * Callback for coordEach\n *\n * @callback coordEachCallback\n * @param {Array<number>} currentCoord The current coordinate being processed.\n * @param {number} coordIndex The current index of the coordinate being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n * @param {number} geometryIndex The current index of the Geometry being processed.\n */\n\n/**\n * Iterate over coordinates in any GeoJSON object, similar to Array.forEach()\n *\n * @name coordEach\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (currentCoord, coordIndex, featureIndex, multiFeatureIndex)\n * @param {boolean} [excludeWrapCoord=false] whether or not to include the final coordinate of LinearRings that wraps the ring in its iteration.\n * @returns {void}\n * @example\n * var features = turf.featureCollection([\n *   turf.point([26, 37], {\"foo\": \"bar\"}),\n *   turf.point([36, 53], {\"hello\": \"world\"})\n * ]);\n *\n * turf.coordEach(features, function (currentCoord, coordIndex, featureIndex, multiFeatureIndex, geometryIndex) {\n *   //=currentCoord\n *   //=coordIndex\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   //=geometryIndex\n * });\n */\nfunction coordEach(geojson, callback, excludeWrapCoord) {\n    // Handles null Geometry -- Skips this GeoJSON\n    if (geojson === null) return;\n    var j, k, l, geometry, stopG, coords,\n        geometryMaybeCollection,\n        wrapShrink = 0,\n        coordIndex = 0,\n        isGeometryCollection,\n        type = geojson.type,\n        isFeatureCollection = type === 'FeatureCollection',\n        isFeature = type === 'Feature',\n        stop = isFeatureCollection ? geojson.features.length : 1;\n\n    // This logic may look a little weird. The reason why it is that way\n    // is because it's trying to be fast. GeoJSON supports multiple kinds\n    // of objects at its root: FeatureCollection, Features, Geometries.\n    // This function has the responsibility of handling all of them, and that\n    // means that some of the `for` loops you see below actually just don't apply\n    // to certain inputs. For instance, if you give this just a\n    // Point geometry, then both loops are short-circuited and all we do\n    // is gradually rename the input until it's called 'geometry'.\n    //\n    // This also aims to allocate as few resources as possible: just a\n    // few numbers and booleans, rather than any temporary arrays as would\n    // be required with the normalization approach.\n    for (var featureIndex = 0; featureIndex < stop; featureIndex++) {\n        geometryMaybeCollection = (isFeatureCollection ? geojson.features[featureIndex].geometry :\n            (isFeature ? geojson.geometry : geojson));\n        isGeometryCollection = (geometryMaybeCollection) ? geometryMaybeCollection.type === 'GeometryCollection' : false;\n        stopG = isGeometryCollection ? geometryMaybeCollection.geometries.length : 1;\n\n        for (var geomIndex = 0; geomIndex < stopG; geomIndex++) {\n            var multiFeatureIndex = 0;\n            var geometryIndex = 0;\n            geometry = isGeometryCollection ?\n                geometryMaybeCollection.geometries[geomIndex] : geometryMaybeCollection;\n\n            // Handles null Geometry -- Skips this geometry\n            if (geometry === null) continue;\n            coords = geometry.coordinates;\n            var geomType = geometry.type;\n\n            wrapShrink = (excludeWrapCoord && (geomType === 'Polygon' || geomType === 'MultiPolygon')) ? 1 : 0;\n\n            switch (geomType) {\n            case null:\n                break;\n            case 'Point':\n                if (callback(coords, coordIndex, featureIndex, multiFeatureIndex, geometryIndex) === false) return false;\n                coordIndex++;\n                multiFeatureIndex++;\n                break;\n            case 'LineString':\n            case 'MultiPoint':\n                for (j = 0; j < coords.length; j++) {\n                    if (callback(coords[j], coordIndex, featureIndex, multiFeatureIndex, geometryIndex) === false) return false;\n                    coordIndex++;\n                    if (geomType === 'MultiPoint') multiFeatureIndex++;\n                }\n                if (geomType === 'LineString') multiFeatureIndex++;\n                break;\n            case 'Polygon':\n            case 'MultiLineString':\n                for (j = 0; j < coords.length; j++) {\n                    for (k = 0; k < coords[j].length - wrapShrink; k++) {\n                        if (callback(coords[j][k], coordIndex, featureIndex, multiFeatureIndex, geometryIndex) === false) return false;\n                        coordIndex++;\n                    }\n                    if (geomType === 'MultiLineString') multiFeatureIndex++;\n                    if (geomType === 'Polygon') geometryIndex++;\n                }\n                if (geomType === 'Polygon') multiFeatureIndex++;\n                break;\n            case 'MultiPolygon':\n                for (j = 0; j < coords.length; j++) {\n                    if (geomType === 'MultiPolygon') geometryIndex = 0;\n                    for (k = 0; k < coords[j].length; k++) {\n                        for (l = 0; l < coords[j][k].length - wrapShrink; l++) {\n                            if (callback(coords[j][k][l], coordIndex, featureIndex, multiFeatureIndex, geometryIndex) === false) return false;\n                            coordIndex++;\n                        }\n                        geometryIndex++;\n                    }\n                    multiFeatureIndex++;\n                }\n                break;\n            case 'GeometryCollection':\n                for (j = 0; j < geometry.geometries.length; j++)\n                    if (coordEach(geometry.geometries[j], callback, excludeWrapCoord) === false) return false;\n                break;\n            default:\n                throw new Error('Unknown Geometry Type');\n            }\n        }\n    }\n}\n\n/**\n * Callback for coordReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback coordReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Array<number>} currentCoord The current coordinate being processed.\n * @param {number} coordIndex The current index of the coordinate being processed.\n * Starts at index 0, if an initialValue is provided, and at index 1 otherwise.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n * @param {number} geometryIndex The current index of the Geometry being processed.\n */\n\n/**\n * Reduce coordinates in any GeoJSON object, similar to Array.reduce()\n *\n * @name coordReduce\n * @param {FeatureCollection|Geometry|Feature} geojson any GeoJSON object\n * @param {Function} callback a method that takes (previousValue, currentCoord, coordIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @param {boolean} [excludeWrapCoord=false] whether or not to include the final coordinate of LinearRings that wraps the ring in its iteration.\n * @returns {*} The value that results from the reduction.\n * @example\n * var features = turf.featureCollection([\n *   turf.point([26, 37], {\"foo\": \"bar\"}),\n *   turf.point([36, 53], {\"hello\": \"world\"})\n * ]);\n *\n * turf.coordReduce(features, function (previousValue, currentCoord, coordIndex, featureIndex, multiFeatureIndex, geometryIndex) {\n *   //=previousValue\n *   //=currentCoord\n *   //=coordIndex\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   //=geometryIndex\n *   return currentCoord;\n * });\n */\nfunction coordReduce(geojson, callback, initialValue, excludeWrapCoord) {\n    var previousValue = initialValue;\n    coordEach(geojson, function (currentCoord, coordIndex, featureIndex, multiFeatureIndex, geometryIndex) {\n        if (coordIndex === 0 && initialValue === undefined) previousValue = currentCoord;\n        else previousValue = callback(previousValue, currentCoord, coordIndex, featureIndex, multiFeatureIndex, geometryIndex);\n    }, excludeWrapCoord);\n    return previousValue;\n}\n\n/**\n * Callback for propEach\n *\n * @callback propEachCallback\n * @param {Object} currentProperties The current Properties being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n */\n\n/**\n * Iterate over properties in any GeoJSON object, similar to Array.forEach()\n *\n * @name propEach\n * @param {FeatureCollection|Feature} geojson any GeoJSON object\n * @param {Function} callback a method that takes (currentProperties, featureIndex)\n * @returns {void}\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * turf.propEach(features, function (currentProperties, featureIndex) {\n *   //=currentProperties\n *   //=featureIndex\n * });\n */\nfunction propEach(geojson, callback) {\n    var i;\n    switch (geojson.type) {\n    case 'FeatureCollection':\n        for (i = 0; i < geojson.features.length; i++) {\n            if (callback(geojson.features[i].properties, i) === false) break;\n        }\n        break;\n    case 'Feature':\n        callback(geojson.properties, 0);\n        break;\n    }\n}\n\n\n/**\n * Callback for propReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback propReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {*} currentProperties The current Properties being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n */\n\n/**\n * Reduce properties in any GeoJSON object into a single value,\n * similar to how Array.reduce works. However, in this case we lazily run\n * the reduction, so an array of all properties is unnecessary.\n *\n * @name propReduce\n * @param {FeatureCollection|Feature} geojson any GeoJSON object\n * @param {Function} callback a method that takes (previousValue, currentProperties, featureIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {*} The value that results from the reduction.\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * turf.propReduce(features, function (previousValue, currentProperties, featureIndex) {\n *   //=previousValue\n *   //=currentProperties\n *   //=featureIndex\n *   return currentProperties\n * });\n */\nfunction propReduce(geojson, callback, initialValue) {\n    var previousValue = initialValue;\n    propEach(geojson, function (currentProperties, featureIndex) {\n        if (featureIndex === 0 && initialValue === undefined) previousValue = currentProperties;\n        else previousValue = callback(previousValue, currentProperties, featureIndex);\n    });\n    return previousValue;\n}\n\n/**\n * Callback for featureEach\n *\n * @callback featureEachCallback\n * @param {Feature<any>} currentFeature The current Feature being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n */\n\n/**\n * Iterate over features in any GeoJSON object, similar to\n * Array.forEach.\n *\n * @name featureEach\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (currentFeature, featureIndex)\n * @returns {void}\n * @example\n * var features = turf.featureCollection([\n *   turf.point([26, 37], {foo: 'bar'}),\n *   turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * turf.featureEach(features, function (currentFeature, featureIndex) {\n *   //=currentFeature\n *   //=featureIndex\n * });\n */\nfunction featureEach(geojson, callback) {\n    if (geojson.type === 'Feature') {\n        callback(geojson, 0);\n    } else if (geojson.type === 'FeatureCollection') {\n        for (var i = 0; i < geojson.features.length; i++) {\n            if (callback(geojson.features[i], i) === false) break;\n        }\n    }\n}\n\n/**\n * Callback for featureReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback featureReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Feature} currentFeature The current Feature being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n */\n\n/**\n * Reduce features in any GeoJSON object, similar to Array.reduce().\n *\n * @name featureReduce\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (previousValue, currentFeature, featureIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {*} The value that results from the reduction.\n * @example\n * var features = turf.featureCollection([\n *   turf.point([26, 37], {\"foo\": \"bar\"}),\n *   turf.point([36, 53], {\"hello\": \"world\"})\n * ]);\n *\n * turf.featureReduce(features, function (previousValue, currentFeature, featureIndex) {\n *   //=previousValue\n *   //=currentFeature\n *   //=featureIndex\n *   return currentFeature\n * });\n */\nfunction featureReduce(geojson, callback, initialValue) {\n    var previousValue = initialValue;\n    featureEach(geojson, function (currentFeature, featureIndex) {\n        if (featureIndex === 0 && initialValue === undefined) previousValue = currentFeature;\n        else previousValue = callback(previousValue, currentFeature, featureIndex);\n    });\n    return previousValue;\n}\n\n/**\n * Get all coordinates from any GeoJSON object.\n *\n * @name coordAll\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @returns {Array<Array<number>>} coordinate position array\n * @example\n * var features = turf.featureCollection([\n *   turf.point([26, 37], {foo: 'bar'}),\n *   turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * var coords = turf.coordAll(features);\n * //= [[26, 37], [36, 53]]\n */\nfunction coordAll(geojson) {\n    var coords = [];\n    coordEach(geojson, function (coord) {\n        coords.push(coord);\n    });\n    return coords;\n}\n\n/**\n * Callback for geomEach\n *\n * @callback geomEachCallback\n * @param {Geometry} currentGeometry The current Geometry being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {Object} featureProperties The current Feature Properties being processed.\n * @param {Array<number>} featureBBox The current Feature BBox being processed.\n * @param {number|string} featureId The current Feature Id being processed.\n */\n\n/**\n * Iterate over each geometry in any GeoJSON object, similar to Array.forEach()\n *\n * @name geomEach\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (currentGeometry, featureIndex, featureProperties, featureBBox, featureId)\n * @returns {void}\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * turf.geomEach(features, function (currentGeometry, featureIndex, featureProperties, featureBBox, featureId) {\n *   //=currentGeometry\n *   //=featureIndex\n *   //=featureProperties\n *   //=featureBBox\n *   //=featureId\n * });\n */\nfunction geomEach(geojson, callback) {\n    var i, j, g, geometry, stopG,\n        geometryMaybeCollection,\n        isGeometryCollection,\n        featureProperties,\n        featureBBox,\n        featureId,\n        featureIndex = 0,\n        isFeatureCollection = geojson.type === 'FeatureCollection',\n        isFeature = geojson.type === 'Feature',\n        stop = isFeatureCollection ? geojson.features.length : 1;\n\n    // This logic may look a little weird. The reason why it is that way\n    // is because it's trying to be fast. GeoJSON supports multiple kinds\n    // of objects at its root: FeatureCollection, Features, Geometries.\n    // This function has the responsibility of handling all of them, and that\n    // means that some of the `for` loops you see below actually just don't apply\n    // to certain inputs. For instance, if you give this just a\n    // Point geometry, then both loops are short-circuited and all we do\n    // is gradually rename the input until it's called 'geometry'.\n    //\n    // This also aims to allocate as few resources as possible: just a\n    // few numbers and booleans, rather than any temporary arrays as would\n    // be required with the normalization approach.\n    for (i = 0; i < stop; i++) {\n\n        geometryMaybeCollection = (isFeatureCollection ? geojson.features[i].geometry :\n            (isFeature ? geojson.geometry : geojson));\n        featureProperties = (isFeatureCollection ? geojson.features[i].properties :\n            (isFeature ? geojson.properties : {}));\n        featureBBox = (isFeatureCollection ? geojson.features[i].bbox :\n            (isFeature ? geojson.bbox : undefined));\n        featureId = (isFeatureCollection ? geojson.features[i].id :\n            (isFeature ? geojson.id : undefined));\n        isGeometryCollection = (geometryMaybeCollection) ? geometryMaybeCollection.type === 'GeometryCollection' : false;\n        stopG = isGeometryCollection ? geometryMaybeCollection.geometries.length : 1;\n\n        for (g = 0; g < stopG; g++) {\n            geometry = isGeometryCollection ?\n                geometryMaybeCollection.geometries[g] : geometryMaybeCollection;\n\n            // Handle null Geometry\n            if (geometry === null) {\n                if (callback(null, featureIndex, featureProperties, featureBBox, featureId) === false) return false;\n                continue;\n            }\n            switch (geometry.type) {\n            case 'Point':\n            case 'LineString':\n            case 'MultiPoint':\n            case 'Polygon':\n            case 'MultiLineString':\n            case 'MultiPolygon': {\n                if (callback(geometry, featureIndex, featureProperties, featureBBox, featureId) === false) return false;\n                break;\n            }\n            case 'GeometryCollection': {\n                for (j = 0; j < geometry.geometries.length; j++) {\n                    if (callback(geometry.geometries[j], featureIndex, featureProperties, featureBBox, featureId) === false) return false;\n                }\n                break;\n            }\n            default:\n                throw new Error('Unknown Geometry Type');\n            }\n        }\n        // Only increase `featureIndex` per each feature\n        featureIndex++;\n    }\n}\n\n/**\n * Callback for geomReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback geomReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Geometry} currentGeometry The current Geometry being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {Object} featureProperties The current Feature Properties being processed.\n * @param {Array<number>} featureBBox The current Feature BBox being processed.\n * @param {number|string} featureId The current Feature Id being processed.\n */\n\n/**\n * Reduce geometry in any GeoJSON object, similar to Array.reduce().\n *\n * @name geomReduce\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (previousValue, currentGeometry, featureIndex, featureProperties, featureBBox, featureId)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {*} The value that results from the reduction.\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * turf.geomReduce(features, function (previousValue, currentGeometry, featureIndex, featureProperties, featureBBox, featureId) {\n *   //=previousValue\n *   //=currentGeometry\n *   //=featureIndex\n *   //=featureProperties\n *   //=featureBBox\n *   //=featureId\n *   return currentGeometry\n * });\n */\nfunction geomReduce(geojson, callback, initialValue) {\n    var previousValue = initialValue;\n    geomEach(geojson, function (currentGeometry, featureIndex, featureProperties, featureBBox, featureId) {\n        if (featureIndex === 0 && initialValue === undefined) previousValue = currentGeometry;\n        else previousValue = callback(previousValue, currentGeometry, featureIndex, featureProperties, featureBBox, featureId);\n    });\n    return previousValue;\n}\n\n/**\n * Callback for flattenEach\n *\n * @callback flattenEachCallback\n * @param {Feature} currentFeature The current flattened feature being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n */\n\n/**\n * Iterate over flattened features in any GeoJSON object, similar to\n * Array.forEach.\n *\n * @name flattenEach\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (currentFeature, featureIndex, multiFeatureIndex)\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.multiPoint([[40, 30], [36, 53]], {hello: 'world'})\n * ]);\n *\n * turf.flattenEach(features, function (currentFeature, featureIndex, multiFeatureIndex) {\n *   //=currentFeature\n *   //=featureIndex\n *   //=multiFeatureIndex\n * });\n */\nfunction flattenEach(geojson, callback) {\n    geomEach(geojson, function (geometry, featureIndex, properties, bbox, id) {\n        // Callback for single geometry\n        var type = (geometry === null) ? null : geometry.type;\n        switch (type) {\n        case null:\n        case 'Point':\n        case 'LineString':\n        case 'Polygon':\n            if (callback(feature(geometry, properties, {bbox: bbox, id: id}), featureIndex, 0) === false) return false;\n            return;\n        }\n\n        var geomType;\n\n        // Callback for multi-geometry\n        switch (type) {\n        case 'MultiPoint':\n            geomType = 'Point';\n            break;\n        case 'MultiLineString':\n            geomType = 'LineString';\n            break;\n        case 'MultiPolygon':\n            geomType = 'Polygon';\n            break;\n        }\n\n        for (var multiFeatureIndex = 0; multiFeatureIndex < geometry.coordinates.length; multiFeatureIndex++) {\n            var coordinate = geometry.coordinates[multiFeatureIndex];\n            var geom = {\n                type: geomType,\n                coordinates: coordinate\n            };\n            if (callback(feature(geom, properties), featureIndex, multiFeatureIndex) === false) return false;\n        }\n    });\n}\n\n/**\n * Callback for flattenReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback flattenReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Feature} currentFeature The current Feature being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n */\n\n/**\n * Reduce flattened features in any GeoJSON object, similar to Array.reduce().\n *\n * @name flattenReduce\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (previousValue, currentFeature, featureIndex, multiFeatureIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {*} The value that results from the reduction.\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.multiPoint([[40, 30], [36, 53]], {hello: 'world'})\n * ]);\n *\n * turf.flattenReduce(features, function (previousValue, currentFeature, featureIndex, multiFeatureIndex) {\n *   //=previousValue\n *   //=currentFeature\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   return currentFeature\n * });\n */\nfunction flattenReduce(geojson, callback, initialValue) {\n    var previousValue = initialValue;\n    flattenEach(geojson, function (currentFeature, featureIndex, multiFeatureIndex) {\n        if (featureIndex === 0 && multiFeatureIndex === 0 && initialValue === undefined) previousValue = currentFeature;\n        else previousValue = callback(previousValue, currentFeature, featureIndex, multiFeatureIndex);\n    });\n    return previousValue;\n}\n\n/**\n * Callback for segmentEach\n *\n * @callback segmentEachCallback\n * @param {Feature<LineString>} currentSegment The current Segment being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n * @param {number} geometryIndex The current index of the Geometry being processed.\n * @param {number} segmentIndex The current index of the Segment being processed.\n * @returns {void}\n */\n\n/**\n * Iterate over 2-vertex line segment in any GeoJSON object, similar to Array.forEach()\n * (Multi)Point geometries do not contain segments therefore they are ignored during this operation.\n *\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON\n * @param {Function} callback a method that takes (currentSegment, featureIndex, multiFeatureIndex, geometryIndex, segmentIndex)\n * @returns {void}\n * @example\n * var polygon = turf.polygon([[[-50, 5], [-40, -10], [-50, -10], [-40, 5], [-50, 5]]]);\n *\n * // Iterate over GeoJSON by 2-vertex segments\n * turf.segmentEach(polygon, function (currentSegment, featureIndex, multiFeatureIndex, geometryIndex, segmentIndex) {\n *   //=currentSegment\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   //=geometryIndex\n *   //=segmentIndex\n * });\n *\n * // Calculate the total number of segments\n * var total = 0;\n * turf.segmentEach(polygon, function () {\n *     total++;\n * });\n */\nfunction segmentEach(geojson, callback) {\n    flattenEach(geojson, function (feature$$1, featureIndex, multiFeatureIndex) {\n        var segmentIndex = 0;\n\n        // Exclude null Geometries\n        if (!feature$$1.geometry) return;\n        // (Multi)Point geometries do not contain segments therefore they are ignored during this operation.\n        var type = feature$$1.geometry.type;\n        if (type === 'Point' || type === 'MultiPoint') return;\n\n        // Generate 2-vertex line segments\n        var previousCoords;\n        if (coordEach(feature$$1, function (currentCoord, coordIndex, featureIndexCoord, mutliPartIndexCoord, geometryIndex) {\n            // Simulating a meta.coordReduce() since `reduce` operations cannot be stopped by returning `false`\n            if (previousCoords === undefined) {\n                previousCoords = currentCoord;\n                return;\n            }\n            var currentSegment = lineString([previousCoords, currentCoord], feature$$1.properties);\n            if (callback(currentSegment, featureIndex, multiFeatureIndex, geometryIndex, segmentIndex) === false) return false;\n            segmentIndex++;\n            previousCoords = currentCoord;\n        }) === false) return false;\n    });\n}\n\n/**\n * Callback for segmentReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback segmentReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Feature<LineString>} currentSegment The current Segment being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n * @param {number} geometryIndex The current index of the Geometry being processed.\n * @param {number} segmentIndex The current index of the Segment being processed.\n */\n\n/**\n * Reduce 2-vertex line segment in any GeoJSON object, similar to Array.reduce()\n * (Multi)Point geometries do not contain segments therefore they are ignored during this operation.\n *\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON\n * @param {Function} callback a method that takes (previousValue, currentSegment, currentIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {void}\n * @example\n * var polygon = turf.polygon([[[-50, 5], [-40, -10], [-50, -10], [-40, 5], [-50, 5]]]);\n *\n * // Iterate over GeoJSON by 2-vertex segments\n * turf.segmentReduce(polygon, function (previousSegment, currentSegment, featureIndex, multiFeatureIndex, geometryIndex, segmentIndex) {\n *   //= previousSegment\n *   //= currentSegment\n *   //= featureIndex\n *   //= multiFeatureIndex\n *   //= geometryIndex\n *   //= segmentInex\n *   return currentSegment\n * });\n *\n * // Calculate the total number of segments\n * var initialValue = 0\n * var total = turf.segmentReduce(polygon, function (previousValue) {\n *     previousValue++;\n *     return previousValue;\n * }, initialValue);\n */\nfunction segmentReduce(geojson, callback, initialValue) {\n    var previousValue = initialValue;\n    var started = false;\n    segmentEach(geojson, function (currentSegment, featureIndex, multiFeatureIndex, geometryIndex, segmentIndex) {\n        if (started === false && initialValue === undefined) previousValue = currentSegment;\n        else previousValue = callback(previousValue, currentSegment, featureIndex, multiFeatureIndex, geometryIndex, segmentIndex);\n        started = true;\n    });\n    return previousValue;\n}\n\n/**\n * Callback for lineEach\n *\n * @callback lineEachCallback\n * @param {Feature<LineString>} currentLine The current LineString|LinearRing being processed\n * @param {number} featureIndex The current index of the Feature being processed\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed\n * @param {number} geometryIndex The current index of the Geometry being processed\n */\n\n/**\n * Iterate over line or ring coordinates in LineString, Polygon, MultiLineString, MultiPolygon Features or Geometries,\n * similar to Array.forEach.\n *\n * @name lineEach\n * @param {Geometry|Feature<LineString|Polygon|MultiLineString|MultiPolygon>} geojson object\n * @param {Function} callback a method that takes (currentLine, featureIndex, multiFeatureIndex, geometryIndex)\n * @example\n * var multiLine = turf.multiLineString([\n *   [[26, 37], [35, 45]],\n *   [[36, 53], [38, 50], [41, 55]]\n * ]);\n *\n * turf.lineEach(multiLine, function (currentLine, featureIndex, multiFeatureIndex, geometryIndex) {\n *   //=currentLine\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   //=geometryIndex\n * });\n */\nfunction lineEach(geojson, callback) {\n    // validation\n    if (!geojson) throw new Error('geojson is required');\n\n    flattenEach(geojson, function (feature$$1, featureIndex, multiFeatureIndex) {\n        if (feature$$1.geometry === null) return;\n        var type = feature$$1.geometry.type;\n        var coords = feature$$1.geometry.coordinates;\n        switch (type) {\n        case 'LineString':\n            if (callback(feature$$1, featureIndex, multiFeatureIndex, 0, 0) === false) return false;\n            break;\n        case 'Polygon':\n            for (var geometryIndex = 0; geometryIndex < coords.length; geometryIndex++) {\n                if (callback(lineString(coords[geometryIndex], feature$$1.properties), featureIndex, multiFeatureIndex, geometryIndex) === false) return false;\n            }\n            break;\n        }\n    });\n}\n\n/**\n * Callback for lineReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback lineReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Feature<LineString>} currentLine The current LineString|LinearRing being processed.\n * @param {number} featureIndex The current index of the Feature being processed\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed\n * @param {number} geometryIndex The current index of the Geometry being processed\n */\n\n/**\n * Reduce features in any GeoJSON object, similar to Array.reduce().\n *\n * @name lineReduce\n * @param {Geometry|Feature<LineString|Polygon|MultiLineString|MultiPolygon>} geojson object\n * @param {Function} callback a method that takes (previousValue, currentLine, featureIndex, multiFeatureIndex, geometryIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {*} The value that results from the reduction.\n * @example\n * var multiPoly = turf.multiPolygon([\n *   turf.polygon([[[12,48],[2,41],[24,38],[12,48]], [[9,44],[13,41],[13,45],[9,44]]]),\n *   turf.polygon([[[5, 5], [0, 0], [2, 2], [4, 4], [5, 5]]])\n * ]);\n *\n * turf.lineReduce(multiPoly, function (previousValue, currentLine, featureIndex, multiFeatureIndex, geometryIndex) {\n *   //=previousValue\n *   //=currentLine\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   //=geometryIndex\n *   return currentLine\n * });\n */\nfunction lineReduce(geojson, callback, initialValue) {\n    var previousValue = initialValue;\n    lineEach(geojson, function (currentLine, featureIndex, multiFeatureIndex, geometryIndex) {\n        if (featureIndex === 0 && initialValue === undefined) previousValue = currentLine;\n        else previousValue = callback(previousValue, currentLine, featureIndex, multiFeatureIndex, geometryIndex);\n    });\n    return previousValue;\n}\n\n/**\n * Finds a particular 2-vertex LineString Segment from a GeoJSON using `@turf/meta` indexes.\n *\n * Negative indexes are permitted.\n * Point & MultiPoint will always return null.\n *\n * @param {FeatureCollection|Feature|Geometry} geojson Any GeoJSON Feature or Geometry\n * @param {Object} [options={}] Optional parameters\n * @param {number} [options.featureIndex=0] Feature Index\n * @param {number} [options.multiFeatureIndex=0] Multi-Feature Index\n * @param {number} [options.geometryIndex=0] Geometry Index\n * @param {number} [options.segmentIndex=0] Segment Index\n * @param {Object} [options.properties={}] Translate Properties to output LineString\n * @param {BBox} [options.bbox={}] Translate BBox to output LineString\n * @param {number|string} [options.id={}] Translate Id to output LineString\n * @returns {Feature<LineString>} 2-vertex GeoJSON Feature LineString\n * @example\n * var multiLine = turf.multiLineString([\n *     [[10, 10], [50, 30], [30, 40]],\n *     [[-10, -10], [-50, -30], [-30, -40]]\n * ]);\n *\n * // First Segment (defaults are 0)\n * turf.findSegment(multiLine);\n * // => Feature<LineString<[[10, 10], [50, 30]]>>\n *\n * // First Segment of 2nd Multi Feature\n * turf.findSegment(multiLine, {multiFeatureIndex: 1});\n * // => Feature<LineString<[[-10, -10], [-50, -30]]>>\n *\n * // Last Segment of Last Multi Feature\n * turf.findSegment(multiLine, {multiFeatureIndex: -1, segmentIndex: -1});\n * // => Feature<LineString<[[-50, -30], [-30, -40]]>>\n */\nfunction findSegment(geojson, options) {\n    // Optional Parameters\n    options = options || {};\n    if (!isObject(options)) throw new Error('options is invalid');\n    var featureIndex = options.featureIndex || 0;\n    var multiFeatureIndex = options.multiFeatureIndex || 0;\n    var geometryIndex = options.geometryIndex || 0;\n    var segmentIndex = options.segmentIndex || 0;\n\n    // Find FeatureIndex\n    var properties = options.properties;\n    var geometry;\n\n    switch (geojson.type) {\n    case 'FeatureCollection':\n        if (featureIndex < 0) featureIndex = geojson.features.length + featureIndex;\n        properties = properties || geojson.features[featureIndex].properties;\n        geometry = geojson.features[featureIndex].geometry;\n        break;\n    case 'Feature':\n        properties = properties || geojson.properties;\n        geometry = geojson.geometry;\n        break;\n    case 'Point':\n    case 'MultiPoint':\n        return null;\n    case 'LineString':\n    case 'Polygon':\n    case 'MultiLineString':\n    case 'MultiPolygon':\n        geometry = geojson;\n        break;\n    default:\n        throw new Error('geojson is invalid');\n    }\n\n    // Find SegmentIndex\n    if (geometry === null) return null;\n    var coords = geometry.coordinates;\n    switch (geometry.type) {\n    case 'Point':\n    case 'MultiPoint':\n        return null;\n    case 'LineString':\n        if (segmentIndex < 0) segmentIndex = coords.length + segmentIndex - 1;\n        return lineString([coords[segmentIndex], coords[segmentIndex + 1]], properties, options);\n    case 'Polygon':\n        if (geometryIndex < 0) geometryIndex = coords.length + geometryIndex;\n        if (segmentIndex < 0) segmentIndex = coords[geometryIndex].length + segmentIndex - 1;\n        return lineString([coords[geometryIndex][segmentIndex], coords[geometryIndex][segmentIndex + 1]], properties, options);\n    case 'MultiLineString':\n        if (multiFeatureIndex < 0) multiFeatureIndex = coords.length + multiFeatureIndex;\n        if (segmentIndex < 0) segmentIndex = coords[multiFeatureIndex].length + segmentIndex - 1;\n        return lineString([coords[multiFeatureIndex][segmentIndex], coords[multiFeatureIndex][segmentIndex + 1]], properties, options);\n    case 'MultiPolygon':\n        if (multiFeatureIndex < 0) multiFeatureIndex = coords.length + multiFeatureIndex;\n        if (geometryIndex < 0) geometryIndex = coords[multiFeatureIndex].length + geometryIndex;\n        if (segmentIndex < 0) segmentIndex = coords[multiFeatureIndex][geometryIndex].length - segmentIndex - 1;\n        return lineString([coords[multiFeatureIndex][geometryIndex][segmentIndex], coords[multiFeatureIndex][geometryIndex][segmentIndex + 1]], properties, options);\n    }\n    throw new Error('geojson is invalid');\n}\n\n/**\n * Finds a particular Point from a GeoJSON using `@turf/meta` indexes.\n *\n * Negative indexes are permitted.\n *\n * @param {FeatureCollection|Feature|Geometry} geojson Any GeoJSON Feature or Geometry\n * @param {Object} [options={}] Optional parameters\n * @param {number} [options.featureIndex=0] Feature Index\n * @param {number} [options.multiFeatureIndex=0] Multi-Feature Index\n * @param {number} [options.geometryIndex=0] Geometry Index\n * @param {number} [options.coordIndex=0] Coord Index\n * @param {Object} [options.properties={}] Translate Properties to output Point\n * @param {BBox} [options.bbox={}] Translate BBox to output Point\n * @param {number|string} [options.id={}] Translate Id to output Point\n * @returns {Feature<Point>} 2-vertex GeoJSON Feature Point\n * @example\n * var multiLine = turf.multiLineString([\n *     [[10, 10], [50, 30], [30, 40]],\n *     [[-10, -10], [-50, -30], [-30, -40]]\n * ]);\n *\n * // First Segment (defaults are 0)\n * turf.findPoint(multiLine);\n * // => Feature<Point<[10, 10]>>\n *\n * // First Segment of the 2nd Multi-Feature\n * turf.findPoint(multiLine, {multiFeatureIndex: 1});\n * // => Feature<Point<[-10, -10]>>\n *\n * // Last Segment of last Multi-Feature\n * turf.findPoint(multiLine, {multiFeatureIndex: -1, coordIndex: -1});\n * // => Feature<Point<[-30, -40]>>\n */\nfunction findPoint(geojson, options) {\n    // Optional Parameters\n    options = options || {};\n    if (!isObject(options)) throw new Error('options is invalid');\n    var featureIndex = options.featureIndex || 0;\n    var multiFeatureIndex = options.multiFeatureIndex || 0;\n    var geometryIndex = options.geometryIndex || 0;\n    var coordIndex = options.coordIndex || 0;\n\n    // Find FeatureIndex\n    var properties = options.properties;\n    var geometry;\n\n    switch (geojson.type) {\n    case 'FeatureCollection':\n        if (featureIndex < 0) featureIndex = geojson.features.length + featureIndex;\n        properties = properties || geojson.features[featureIndex].properties;\n        geometry = geojson.features[featureIndex].geometry;\n        break;\n    case 'Feature':\n        properties = properties || geojson.properties;\n        geometry = geojson.geometry;\n        break;\n    case 'Point':\n    case 'MultiPoint':\n        return null;\n    case 'LineString':\n    case 'Polygon':\n    case 'MultiLineString':\n    case 'MultiPolygon':\n        geometry = geojson;\n        break;\n    default:\n        throw new Error('geojson is invalid');\n    }\n\n    // Find Coord Index\n    if (geometry === null) return null;\n    var coords = geometry.coordinates;\n    switch (geometry.type) {\n    case 'Point':\n        return point(coords, properties, options);\n    case 'MultiPoint':\n        if (multiFeatureIndex < 0) multiFeatureIndex = coords.length + multiFeatureIndex;\n        return point(coords[multiFeatureIndex], properties, options);\n    case 'LineString':\n        if (coordIndex < 0) coordIndex = coords.length + coordIndex;\n        return point(coords[coordIndex], properties, options);\n    case 'Polygon':\n        if (geometryIndex < 0) geometryIndex = coords.length + geometryIndex;\n        if (coordIndex < 0) coordIndex = coords[geometryIndex].length + coordIndex;\n        return point(coords[geometryIndex][coordIndex], properties, options);\n    case 'MultiLineString':\n        if (multiFeatureIndex < 0) multiFeatureIndex = coords.length + multiFeatureIndex;\n        if (coordIndex < 0) coordIndex = coords[multiFeatureIndex].length + coordIndex;\n        return point(coords[multiFeatureIndex][coordIndex], properties, options);\n    case 'MultiPolygon':\n        if (multiFeatureIndex < 0) multiFeatureIndex = coords.length + multiFeatureIndex;\n        if (geometryIndex < 0) geometryIndex = coords[multiFeatureIndex].length + geometryIndex;\n        if (coordIndex < 0) coordIndex = coords[multiFeatureIndex][geometryIndex].length - coordIndex;\n        return point(coords[multiFeatureIndex][geometryIndex][coordIndex], properties, options);\n    }\n    throw new Error('geojson is invalid');\n}\n\nexport { coordEach, coordReduce, propEach, propReduce, featureEach, featureReduce, coordAll, geomEach, geomReduce, flattenEach, flattenReduce, segmentEach, segmentReduce, lineEach, lineReduce, findSegment, findPoint };\n","import { coordEach } from '@turf/meta';\nimport { isObject } from '@turf/helpers';\n\n/**\n * Takes a GeoJSON Feature or FeatureCollection and truncates the precision of the geometry.\n *\n * @name truncate\n * @param {GeoJSON} geojson any GeoJSON Feature, FeatureCollection, Geometry or GeometryCollection.\n * @param {Object} [options={}] Optional parameters\n * @param {number} [options.precision=6] coordinate decimal precision\n * @param {number} [options.coordinates=3] maximum number of coordinates (primarly used to remove z coordinates)\n * @param {boolean} [options.mutate=false] allows GeoJSON input to be mutated (significant performance increase if true)\n * @returns {GeoJSON} layer with truncated geometry\n * @example\n * var point = turf.point([\n *     70.46923055566859,\n *     58.11088890802906,\n *     1508\n * ]);\n * var options = {precision: 3, coordinates: 2};\n * var truncated = turf.truncate(point, options);\n * //=truncated.geometry.coordinates => [70.469, 58.111]\n *\n * //addToMap\n * var addToMap = [truncated];\n */\nfunction truncate(geojson, options) {\n    // Optional parameters\n    options = options || {};\n    if (!isObject(options)) throw new Error('options is invalid');\n    var precision = options.precision;\n    var coordinates = options.coordinates;\n    var mutate = options.mutate;\n\n    // default params\n    precision = (precision === undefined || precision === null || isNaN(precision)) ? 6 : precision;\n    coordinates = (coordinates === undefined || coordinates === null || isNaN(coordinates)) ? 3 : coordinates;\n\n    // validation\n    if (!geojson) throw new Error('<geojson> is required');\n    if (typeof precision !== 'number') throw new Error('<precision> must be a number');\n    if (typeof coordinates !== 'number') throw new Error('<coordinates> must be a number');\n\n    // prevent input mutation\n    if (mutate === false || mutate === undefined) geojson = JSON.parse(JSON.stringify(geojson));\n\n    var factor = Math.pow(10, precision);\n\n    // Truncate Coordinates\n    coordEach(geojson, function (coords) {\n        truncateCoords(coords, factor, coordinates);\n    });\n    return geojson;\n}\n\n/**\n * Truncate Coordinates - Mutates coordinates in place\n *\n * @private\n * @param {Array<any>} coords Geometry Coordinates\n * @param {number} factor rounding factor for coordinate decimal precision\n * @param {number} coordinates maximum number of coordinates (primarly used to remove z coordinates)\n * @returns {Array<any>} mutated coordinates\n */\nfunction truncateCoords(coords, factor, coordinates) {\n    // Remove extra coordinates (usually elevation coordinates and more)\n    if (coords.length > coordinates) coords.splice(coordinates, coords.length);\n\n    // Truncate coordinate decimals\n    for (var i = 0; i < coords.length; i++) {\n        coords[i] = Math.round(coords[i] * factor) / factor;\n    }\n    return coords;\n}\n\nexport default truncate;\n","import { isNumber } from '@turf/helpers';\n\n/**\n * Unwrap a coordinate from a Point Feature, Geometry or a single coordinate.\n *\n * @name getCoord\n * @param {Array<number>|Geometry<Point>|Feature<Point>} coord GeoJSON Point or an Array of numbers\n * @returns {Array<number>} coordinates\n * @example\n * var pt = turf.point([10, 10]);\n *\n * var coord = turf.getCoord(pt);\n * //= [10, 10]\n */\nfunction getCoord(coord) {\n    if (!coord) throw new Error('coord is required');\n    if (coord.type === 'Feature' && coord.geometry !== null && coord.geometry.type === 'Point') return coord.geometry.coordinates;\n    if (coord.type === 'Point') return coord.coordinates;\n    if (Array.isArray(coord) && coord.length >= 2 && coord[0].length === undefined && coord[1].length === undefined) return coord;\n\n    throw new Error('coord must be GeoJSON Point or an Array of numbers');\n}\n\n/**\n * Unwrap coordinates from a Feature, Geometry Object or an Array\n *\n * @name getCoords\n * @param {Array<any>|Geometry|Feature} coords Feature, Geometry Object or an Array\n * @returns {Array<any>} coordinates\n * @example\n * var poly = turf.polygon([[[119.32, -8.7], [119.55, -8.69], [119.51, -8.54], [119.32, -8.7]]]);\n *\n * var coords = turf.getCoords(poly);\n * //= [[[119.32, -8.7], [119.55, -8.69], [119.51, -8.54], [119.32, -8.7]]]\n */\nfunction getCoords(coords) {\n    if (!coords) throw new Error('coords is required');\n\n    // Feature\n    if (coords.type === 'Feature' && coords.geometry !== null) return coords.geometry.coordinates;\n\n    // Geometry\n    if (coords.coordinates) return coords.coordinates;\n\n    // Array of numbers\n    if (Array.isArray(coords)) return coords;\n\n    throw new Error('coords must be GeoJSON Feature, Geometry Object or an Array');\n}\n\n/**\n * Checks if coordinates contains a number\n *\n * @name containsNumber\n * @param {Array<any>} coordinates GeoJSON Coordinates\n * @returns {boolean} true if Array contains a number\n */\nfunction containsNumber(coordinates) {\n    if (coordinates.length > 1 && isNumber(coordinates[0]) && isNumber(coordinates[1])) {\n        return true;\n    }\n\n    if (Array.isArray(coordinates[0]) && coordinates[0].length) {\n        return containsNumber(coordinates[0]);\n    }\n    throw new Error('coordinates must only contain numbers');\n}\n\n/**\n * Enforce expectations about types of GeoJSON objects for Turf.\n *\n * @name geojsonType\n * @param {GeoJSON} value any GeoJSON object\n * @param {string} type expected GeoJSON type\n * @param {string} name name of calling function\n * @throws {Error} if value is not the expected type.\n */\nfunction geojsonType(value, type, name) {\n    if (!type || !name) throw new Error('type and name required');\n\n    if (!value || value.type !== type) {\n        throw new Error('Invalid input to ' + name + ': must be a ' + type + ', given ' + value.type);\n    }\n}\n\n/**\n * Enforce expectations about types of {@link Feature} inputs for Turf.\n * Internally this uses {@link geojsonType} to judge geometry types.\n *\n * @name featureOf\n * @param {Feature} feature a feature with an expected geometry type\n * @param {string} type expected GeoJSON type\n * @param {string} name name of calling function\n * @throws {Error} error if value is not the expected type.\n */\nfunction featureOf(feature, type, name) {\n    if (!feature) throw new Error('No feature passed');\n    if (!name) throw new Error('.featureOf() requires a name');\n    if (!feature || feature.type !== 'Feature' || !feature.geometry) {\n        throw new Error('Invalid input to ' + name + ', Feature with geometry required');\n    }\n    if (!feature.geometry || feature.geometry.type !== type) {\n        throw new Error('Invalid input to ' + name + ': must be a ' + type + ', given ' + feature.geometry.type);\n    }\n}\n\n/**\n * Enforce expectations about types of {@link FeatureCollection} inputs for Turf.\n * Internally this uses {@link geojsonType} to judge geometry types.\n *\n * @name collectionOf\n * @param {FeatureCollection} featureCollection a FeatureCollection for which features will be judged\n * @param {string} type expected GeoJSON type\n * @param {string} name name of calling function\n * @throws {Error} if value is not the expected type.\n */\nfunction collectionOf(featureCollection, type, name) {\n    if (!featureCollection) throw new Error('No featureCollection passed');\n    if (!name) throw new Error('.collectionOf() requires a name');\n    if (!featureCollection || featureCollection.type !== 'FeatureCollection') {\n        throw new Error('Invalid input to ' + name + ', FeatureCollection required');\n    }\n    for (var i = 0; i < featureCollection.features.length; i++) {\n        var feature = featureCollection.features[i];\n        if (!feature || feature.type !== 'Feature' || !feature.geometry) {\n            throw new Error('Invalid input to ' + name + ', Feature with geometry required');\n        }\n        if (!feature.geometry || feature.geometry.type !== type) {\n            throw new Error('Invalid input to ' + name + ': must be a ' + type + ', given ' + feature.geometry.type);\n        }\n    }\n}\n\n/**\n * Get Geometry from Feature or Geometry Object\n *\n * @param {Feature|Geometry} geojson GeoJSON Feature or Geometry Object\n * @returns {Geometry|null} GeoJSON Geometry Object\n * @throws {Error} if geojson is not a Feature or Geometry Object\n * @example\n * var point = {\n *   \"type\": \"Feature\",\n *   \"properties\": {},\n *   \"geometry\": {\n *     \"type\": \"Point\",\n *     \"coordinates\": [110, 40]\n *   }\n * }\n * var geom = turf.getGeom(point)\n * //={\"type\": \"Point\", \"coordinates\": [110, 40]}\n */\nfunction getGeom(geojson) {\n    if (!geojson) throw new Error('geojson is required');\n    if (geojson.geometry !== undefined) return geojson.geometry;\n    if (geojson.coordinates || geojson.geometries) return geojson;\n    throw new Error('geojson must be a valid Feature or Geometry Object');\n}\n\n/**\n * Get Geometry Type from Feature or Geometry Object\n *\n * @throws {Error} **DEPRECATED** in v5.0.0 in favor of getType\n */\nfunction getGeomType() {\n    throw new Error('invariant.getGeomType has been deprecated in v5.0 in favor of invariant.getType');\n}\n\n/**\n * Get GeoJSON object's type, Geometry type is prioritize.\n *\n * @param {GeoJSON} geojson GeoJSON object\n * @param {string} [name=\"geojson\"] name of the variable to display in error message\n * @returns {string} GeoJSON type\n * @example\n * var point = {\n *   \"type\": \"Feature\",\n *   \"properties\": {},\n *   \"geometry\": {\n *     \"type\": \"Point\",\n *     \"coordinates\": [110, 40]\n *   }\n * }\n * var geom = turf.getType(point)\n * //=\"Point\"\n */\nfunction getType(geojson, name) {\n    if (!geojson) throw new Error((name || 'geojson') + ' is required');\n    // GeoJSON Feature & GeometryCollection\n    if (geojson.geometry && geojson.geometry.type) return geojson.geometry.type;\n    // GeoJSON Geometry & FeatureCollection\n    if (geojson.type) return geojson.type;\n    throw new Error((name || 'geojson') + ' is invalid');\n}\n\nexport { getCoord, getCoords, containsNumber, geojsonType, featureOf, collectionOf, getGeom, getGeomType, getType };\n","import { feature } from '@turf/helpers';\nimport { getCoords, getType } from '@turf/invariant';\n\n/**\n * Removes redundant coordinates from any GeoJSON Geometry.\n *\n * @name cleanCoords\n * @param {Geometry|Feature} geojson Feature or Geometry\n * @param {Object} [options={}] Optional parameters\n * @param {boolean} [options.mutate=false] allows GeoJSON input to be mutated\n * @returns {Geometry|Feature} the cleaned input Feature/Geometry\n * @example\n * var line = turf.lineString([[0, 0], [0, 2], [0, 5], [0, 8], [0, 8], [0, 10]]);\n * var multiPoint = turf.multiPoint([[0, 0], [0, 0], [2, 2]]);\n *\n * turf.cleanCoords(line).geometry.coordinates;\n * //= [[0, 0], [0, 10]]\n *\n * turf.cleanCoords(multiPoint).geometry.coordinates;\n * //= [[0, 0], [2, 2]]\n */\nfunction cleanCoords(geojson, options) {\n    // Backwards compatible with v4.0\n    var mutate = (typeof options === 'object') ? options.mutate : options;\n    if (!geojson) throw new Error('geojson is required');\n    var type = getType(geojson);\n\n    // Store new \"clean\" points in this Array\n    var newCoords = [];\n\n    switch (type) {\n    case 'LineString':\n        newCoords = cleanLine(geojson);\n        break;\n    case 'MultiLineString':\n    case 'Polygon':\n        getCoords(geojson).forEach(function (line) {\n            newCoords.push(cleanLine(line));\n        });\n        break;\n    case 'MultiPolygon':\n        getCoords(geojson).forEach(function (polygons) {\n            var polyPoints = [];\n            polygons.forEach(function (ring) {\n                polyPoints.push(cleanLine(ring));\n            });\n            newCoords.push(polyPoints);\n        });\n        break;\n    case 'Point':\n        return geojson;\n    case 'MultiPoint':\n        var existing = {};\n        getCoords(geojson).forEach(function (coord) {\n            var key = coord.join('-');\n            if (!existing.hasOwnProperty(key)) {\n                newCoords.push(coord);\n                existing[key] = true;\n            }\n        });\n        break;\n    default:\n        throw new Error(type + ' geometry not supported');\n    }\n\n    // Support input mutation\n    if (geojson.coordinates) {\n        if (mutate === true) {\n            geojson.coordinates = newCoords;\n            return geojson;\n        }\n        return {type: type, coordinates: newCoords};\n    } else {\n        if (mutate === true) {\n            geojson.geometry.coordinates = newCoords;\n            return geojson;\n        }\n        return feature({type: type, coordinates: newCoords}, geojson.properties, geojson.bbox, geojson.id);\n    }\n}\n\n/**\n * Clean Coords\n *\n * @private\n * @param {Array<number>|LineString} line Line\n * @returns {Array<number>} Cleaned coordinates\n */\nfunction cleanLine(line) {\n    var points = getCoords(line);\n    // handle \"clean\" segment\n    if (points.length === 2 && !equals(points[0], points[1])) return points;\n\n    var prevPoint, point, nextPoint;\n    var newPoints = [];\n    var secondToLast = points.length - 1;\n\n    newPoints.push(points[0]);\n    for (var i = 1; i < secondToLast; i++) {\n        prevPoint = points[i - 1];\n        point = points[i];\n        nextPoint = points[i + 1];\n\n        if (!isPointOnLineSegment(prevPoint, nextPoint, point)) {\n            newPoints.push(point);\n        }\n    }\n    newPoints.push(nextPoint);\n    return newPoints;\n}\n\n/**\n * Compares two points and returns if they are equals\n *\n * @private\n * @param {Position} pt1 point\n * @param {Position} pt2 point\n * @returns {boolean} true if they are equals\n */\nfunction equals(pt1, pt2) {\n    return pt1[0] === pt2[0] && pt1[1] === pt2[1];\n}\n\n/**\n * Returns if `point` is on the segment between `start` and `end`.\n * Borrowed from `@turf/boolean-point-on-line` to speed up the evaluation (instead of using the module as dependency)\n *\n * @private\n * @param {Position} start coord pair of start of line\n * @param {Position} end coord pair of end of line\n * @param {Position} point coord pair of point to check\n * @returns {boolean} true/false\n */\nfunction isPointOnLineSegment(start, end, point) {\n    var x = point[0], y = point[1];\n    var startX = start[0], startY = start[1];\n    var endX = end[0], endY = end[1];\n\n    var dxc = x - startX;\n    var dyc = y - startY;\n    var dxl = endX - startX;\n    var dyl = endY - startY;\n    var cross = dxc * dyl - dyc * dxl;\n\n    if (cross !== 0) return false;\n    else if (Math.abs(dxl) >= Math.abs(dyl)) return dxl > 0 ? startX <= x && x <= endX : endX <= x && x <= startX;\n    else return dyl > 0 ? startY <= y && y <= endY : endY <= y && y <= startY;\n}\n\nexport default cleanCoords;\n","import { GeoJSONReader, GeoJSONWriter, OverlayOp } from 'turf-jsts';\nimport truncate from '@turf/truncate';\nimport { getGeom } from '@turf/invariant';\nimport { feature } from '@turf/helpers';\nimport cleanCoords from '@turf/clean-coords';\n\n// depend on jsts for now http://bjornharrtell.github.io/jsts/\n/**\n * Takes two {@link Polygon|polygons} and finds their intersection. If they share a border, returns the border; if they don't intersect, returns undefined.\n *\n * @name intersect\n * @param {Feature<Polygon>} poly1 the first polygon\n * @param {Feature<Polygon>} poly2 the second polygon\n * @returns {Feature|null} returns a feature representing the point(s) they share (in case of a {@link Point}  or {@link MultiPoint}), the borders they share (in case of a {@link LineString} or a {@link MultiLineString}), the area they share (in case of {@link Polygon} or {@link MultiPolygon}). If they do not share any point, returns `null`.\n * @example\n * var poly1 = turf.polygon([[\n *   [-122.801742, 45.48565],\n *   [-122.801742, 45.60491],\n *   [-122.584762, 45.60491],\n *   [-122.584762, 45.48565],\n *   [-122.801742, 45.48565]\n * ]]);\n *\n * var poly2 = turf.polygon([[\n *   [-122.520217, 45.535693],\n *   [-122.64038, 45.553967],\n *   [-122.720031, 45.526554],\n *   [-122.669906, 45.507309],\n *   [-122.723464, 45.446643],\n *   [-122.532577, 45.408574],\n *   [-122.487258, 45.477466],\n *   [-122.520217, 45.535693]\n * ]]);\n *\n * var intersection = turf.intersect(poly1, poly2);\n *\n * //addToMap\n * var addToMap = [poly1, poly2, intersection];\n */\nfunction intersect(poly1, poly2) {\n    var geom1 = getGeom(poly1);\n    var geom2 = getGeom(poly2);\n\n    // Return null if geometry is too narrow in coordinate precision\n    // fixes topology errors with JSTS\n    // https://github.com/Turfjs/turf/issues/463\n    // https://github.com/Turfjs/turf/pull/1004\n    if (cleanCoords(truncate(geom2, {precision: 4})).coordinates[0].length < 4) return null;\n    if (cleanCoords(truncate(geom1, {precision: 4})).coordinates[0].length < 4) return null;\n\n    var reader = new GeoJSONReader();\n    var a = reader.read(truncate(geom1));\n    var b = reader.read(truncate(geom2));\n    var intersection = OverlayOp.intersection(a, b);\n\n    // https://github.com/Turfjs/turf/issues/951\n    if (intersection.isEmpty()) return null;\n\n    var writer = new GeoJSONWriter();\n    var geom = writer.write(intersection);\n    return feature(geom);\n}\n\nexport default intersect;\n","import { geomReduce } from '@turf/meta';\n\n/**\n * Takes one or more features and returns their area in square meters.\n *\n * @name area\n * @param {GeoJSON} geojson input GeoJSON feature(s)\n * @returns {number} area in square meters\n * @example\n * var polygon = turf.polygon([[[125, -15], [113, -22], [154, -27], [144, -15], [125, -15]]]);\n *\n * var area = turf.area(polygon);\n *\n * //addToMap\n * var addToMap = [polygon]\n * polygon.properties.area = area\n */\nfunction area(geojson) {\n    return geomReduce(geojson, function (value, geom) {\n        return value + calculateArea(geom);\n    }, 0);\n}\n\nvar RADIUS = 6378137;\n// var FLATTENING_DENOM = 298.257223563;\n// var FLATTENING = 1 / FLATTENING_DENOM;\n// var POLAR_RADIUS = RADIUS * (1 - FLATTENING);\n\n/**\n * Calculate Area\n *\n * @private\n * @param {GeoJSON} geojson GeoJSON\n * @returns {number} area\n */\nfunction calculateArea(geojson) {\n    var area = 0, i;\n    switch (geojson.type) {\n    case 'Polygon':\n        return polygonArea(geojson.coordinates);\n    case 'MultiPolygon':\n        for (i = 0; i < geojson.coordinates.length; i++) {\n            area += polygonArea(geojson.coordinates[i]);\n        }\n        return area;\n    case 'Point':\n    case 'MultiPoint':\n    case 'LineString':\n    case 'MultiLineString':\n        return 0;\n    case 'GeometryCollection':\n        for (i = 0; i < geojson.geometries.length; i++) {\n            area += calculateArea(geojson.geometries[i]);\n        }\n        return area;\n    }\n}\n\nfunction polygonArea(coords) {\n    var area = 0;\n    if (coords && coords.length > 0) {\n        area += Math.abs(ringArea(coords[0]));\n        for (var i = 1; i < coords.length; i++) {\n            area -= Math.abs(ringArea(coords[i]));\n        }\n    }\n    return area;\n}\n\n/**\n * @private\n * Calculate the approximate area of the polygon were it projected onto the earth.\n * Note that this area will be positive if ring is oriented clockwise, otherwise it will be negative.\n *\n * Reference:\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007 http://trs-new.jpl.nasa.gov/dspace/handle/2014/40409\n *\n * @param {Array<Array<number>>} coords Ring Coordinates\n * @returns {number} The approximate signed geodesic area of the polygon in square meters.\n */\nfunction ringArea(coords) {\n    var p1;\n    var p2;\n    var p3;\n    var lowerIndex;\n    var middleIndex;\n    var upperIndex;\n    var i;\n    var area = 0;\n    var coordsLength = coords.length;\n\n    if (coordsLength > 2) {\n        for (i = 0; i < coordsLength; i++) {\n            if (i === coordsLength - 2) { // i = N-2\n                lowerIndex = coordsLength - 2;\n                middleIndex = coordsLength - 1;\n                upperIndex = 0;\n            } else if (i === coordsLength - 1) { // i = N-1\n                lowerIndex = coordsLength - 1;\n                middleIndex = 0;\n                upperIndex = 1;\n            } else { // i = 0 to N-3\n                lowerIndex = i;\n                middleIndex = i + 1;\n                upperIndex = i + 2;\n            }\n            p1 = coords[lowerIndex];\n            p2 = coords[middleIndex];\n            p3 = coords[upperIndex];\n            area += (rad(p3[0]) - rad(p1[0])) * Math.sin(rad(p2[1]));\n        }\n\n        area = area * RADIUS * RADIUS / 2;\n    }\n\n    return area;\n}\n\nfunction rad(_) {\n    return _ * Math.PI / 180;\n}\n\nexport default area;\n","import { GeoJSONReader, GeoJSONWriter, OverlayOp } from 'turf-jsts';\nimport area from '@turf/area';\nimport { feature } from '@turf/helpers';\nimport { getGeom } from '@turf/invariant';\nimport { flattenEach } from '@turf/meta';\n\n/**\n * Finds the difference between two {@link Polygon|polygons} by clipping the second polygon from the first.\n *\n * @name difference\n * @param {Feature<Polygon|MultiPolygon>} polygon1 input Polygon feature\n * @param {Feature<Polygon|MultiPolygon>} polygon2 Polygon feature to difference from polygon1\n * @returns {Feature<Polygon|MultiPolygon>|null} a Polygon or MultiPolygon feature showing the area of `polygon1` excluding the area of `polygon2` (if empty returns `null`)\n * @example\n * var polygon1 = turf.polygon([[\n *   [128, -26],\n *   [141, -26],\n *   [141, -21],\n *   [128, -21],\n *   [128, -26]\n * ]], {\n *   \"fill\": \"#F00\",\n *   \"fill-opacity\": 0.1\n * });\n * var polygon2 = turf.polygon([[\n *   [126, -28],\n *   [140, -28],\n *   [140, -20],\n *   [126, -20],\n *   [126, -28]\n * ]], {\n *   \"fill\": \"#00F\",\n *   \"fill-opacity\": 0.1\n * });\n *\n * var difference = turf.difference(polygon1, polygon2);\n *\n * //addToMap\n * var addToMap = [polygon1, polygon2, difference];\n */\nfunction difference(polygon1, polygon2) {\n    var geom1 = getGeom(polygon1);\n    var geom2 = getGeom(polygon2);\n    var properties = polygon1.properties || {};\n\n    // Issue #721 - JSTS can't handle empty polygons\n    geom1 = removeEmptyPolygon(geom1);\n    geom2 = removeEmptyPolygon(geom2);\n    if (!geom1) return null;\n    if (!geom2) return feature(geom1, properties);\n\n    // JSTS difference operation\n    var reader = new GeoJSONReader();\n    var a = reader.read(geom1);\n    var b = reader.read(geom2);\n    var differenced = OverlayOp.difference(a, b);\n    if (differenced.isEmpty()) return null;\n    var writer = new GeoJSONWriter();\n    var geom = writer.write(differenced);\n\n    return feature(geom, properties);\n}\n\n/**\n * Detect Empty Polygon\n *\n * @private\n * @param {Geometry<Polygon|MultiPolygon>} geom Geometry Object\n * @returns {Geometry<Polygon|MultiPolygon>|null} removed any polygons with no areas\n */\nfunction removeEmptyPolygon(geom) {\n    switch (geom.type) {\n    case 'Polygon':\n        if (area(geom) > 1) return geom;\n        return null;\n    case 'MultiPolygon':\n        var coordinates = [];\n        flattenEach(geom, function (feature$$1) {\n            if (area(feature$$1) > 1) coordinates.push(feature$$1.geometry.coordinates);\n        });\n        if (coordinates.length) return {type: 'MultiPolygon', coordinates: coordinates};\n    }\n}\n\nexport default difference;\n","import Vue from 'vue'\nimport App from './App.vue'\n\nnew Vue({\n  el: '#app',\n  render: h => h(App)\n})\n"],"names":["Node","_createClass","key","data","_classCallCheck","this","left","right","DEFAULT_COMPARE","a","b","splay","i","t","comparator","l","r","y","N","cmp","insert","tree","node","_size","remove","x","split","v","Tree","arguments","length","undefined","_comparator","_root","value","add","current","compare","visitor","ctx","Q","done","push","pop","call","low","high","fn","keys","forEach","_ref","values","_ref2","minNode","maxNode","index","d","root","successor","predecessor","head","next","p","toList","presort","size","sort","pivot","j","tmp","loadRecursive","parent","start","end","middle","Math","floor","mergedList","l1","l2","p1","p2","mergeLists","createList","sortedListToBST","list","get","printNode","n","out","printRow","prefix","isTail","concat","indent","join","newKey","newData","_split2","merge","instance","Constructor","TypeError","_defineProperties","target","props","descriptor","enumerable","configurable","writable","Object","defineProperty","arg","input","hint","_typeof","prim","Symbol","toPrimitive","res","String","Number","_toPrimitive","protoProps","staticProps","prototype","epsilon","EPSILON","pow","EPSILON_SQ","touch","m","touchPoints","aPt","bPt","mx","my","aYMiss","crossProduct","dotProduct","compareVectorAngles","basePt","endPt1","endPt2","v1","v2","kross","sqrt","cosineOfAngle","pShared","pBase","pAngle","vBase","vAngle","closestPoint","ptA1","ptA2","ptB","nearPt","farPt","vA","vB","dist","horizontalIntersection","pt","verticalIntersection","PtRounder","reset","xRounder","CoordRounder","yRounder","round","SplayTree","coord","prevNode","prev","nextNode","rounder","pointsAsObjects","geom","output","Array","isArray","Error","iMax","jMax","k","kMax","forceMultiPoly","unshift","splice","cleanMultiPoly","multipoly","poly","exteriorRing","cleanRing","interiorRing","ring","ringLengthBeforeTheClean","firstPt","lastPt","prevPt","nextPt","isPointUncessary","SweepEvent","point","isLeft","events","other","otherEvents","evt","checkForConsuming","numEvents","evt1","segment","consumedBy","evt2","otherSE","consume","ringOut","isInResult","baseEvent","_this","cache","Map","fillCache","linkedEvent","nextEvent","set","sine","cosine","has","_cache$get","asine","acosine","_cache$get2","bsine","bcosine","ptCmp","comparePoints","link","Segment","segmentId","leftSE","rightSE","ringsIn","id","_cache","newRightSE","y1","y2","ll","ur","isAnEndpoint","interPt","bbox","touchesBbox","cPt1","avgPt1","bboxOverlap","b1","b2","lowerX","upperX","getBboxOverlap","touchesOtherLSE","touches","touchesThisLSE","touchesOtherRSE","touchesThisRSE","pt1","pt2","ve","d1","d2","intersection","vector","newEvents","alreadyLinked","newLeftSE","oldRightSE","replaceRightSE","slice","consumer","consumee","_tmp","prevInResult","ringsAfter","rings","ringsBefore","indexOf","multiPolysAfter","polysAfter","polysExclude","isExterior","mps","_i","_iMax","mp","multiPoly","mpsBefore","multiPolysBefore","mpsAfter","operation","type","least","most","numMultiPolys","abs","isJustSubject","isSubject","alx","blx","arx","brx","aly","bly","ary","bry","aCmpBLeft","comparePoint","bCmpARight","bCmpALeft","aCmpBRight","_bCmpARight","_aCmpBRight","leftPt","rightPt","cmpPts","RingIn","geomRing","segments","prevPoint","fromRing","sweepEvents","PolyIn","geomPoly","interiorRings","getSweepEvents","ringSweepEvents","MultiPolyIn","geomMultiPoly","polys","polySweepEvents","RingOut","points","_pt","_nextPt","shift","step","isExteriorRing","iStart","iEnd","orderedPoints","_isExteriorRing","enclosing","enclosingRing","_enclosingRing","_calcEnclosingRing","leftMostEvt","prevSeg","prevPrevSeg","allSegments","ringsOut","prevEvent","event","startingPoint","intersectionLEs","availableLEs","getAvailableLinkedEvents","indexLE","getLeftmostComparator","intersectionLE","ringEvents","reverse","PolyOut","getGeom","ringGeom","MultiPolyOut","_composePolys","polyGeom","addInterior","SweepLine","queue","find","nextSeg","prevMySplitter","prevInter","getIntersection","newEventsFromSplit","_splitSafely","nextMySplitter","nextInter","_newEventsFromSplit","mySplitter","cmpSplitters","_newEventsFromSplit2","_i2","_iMax2","inter","_newEventsFromSplit3","_i3","_iMax3","_newEventsFromSplit4","_i4","_iMax4","seg","Operation","moreGeoms","geoms","multipolys","markAsSubject","sweepLine","prevQueueSize","process","_evt","factory","_len","_key","run","_len2","_key2","_len3","_key3","subjectGeom","_len4","clippingGeoms","_key4","noDuplicates","_compare","_noDuplicates","rotateRight","rotateLeft","gp","ggp","u","z","comp","replace","s","sMax","returnValue","callback","load","NORMAL","NON_CONTRIBUTING","SAME_TRANSITION","DIFFERENT_TRANSITION","INTERSECTION","UNION","DIFFERENCE","XOR","computeFields","inOut","otherInOut","isVertical","inResult","otherEvent","edgeType","resultInOut","p0","isBelow","copy","equals","signedArea","compareEvents","e1","e2","specialCases","divideSegment","se","console","warn","contourId","possibleIntersection","se1","se2","a1","a2","noEndpointTouch","va","vb","toPoint","e","sqrKross","sqrLenA","sa","sb","smin","min","smax","max","nintersections","leftCoincide","rightCoincide","compareSegments","le1","le2","isAbove","nextPos","pos","resultEvents","processed","origIndex","newPos","connectEdges","sortedEvents","len","sorted","orderEvents","result","contour","ringId","initial","TinyQueue","defaultCompare","_down","item","_up","top","peek","halfLength","best","processPolygon","contourOrHole","depth","s1","s2","EMPTY","boolean","subject","clipping","trivial","trivialOperation","sbbox","Infinity","cbbox","eventQueue","polygonSet","ii","jj","Queue","fillQueue","compareBBoxes","begin","rightbound","prevprev","subdivideSegments","arrayLike","relativeStart","parseInt","relativeEnd","isFinite","isInteger","val","parseFloat","isNaN","trunc","ceil","NumberUtil","interfaces_","getClass","equalsWithTolerance","x1","x2","tolerance","IllegalArgumentException","message","name","stack","__proto__","create","constructor","Double","staticAccessors$1","MAX_VALUE","doubleToLongBits","longBitsToDouble","isInfinite","defineProperties","Comparable","Clonable","Comparator","Serializable","Coordinate","NULL_ORDINATE","c","staticAccessors","DimensionalComparator","serialVersionUID","X","Y","Z","setOrdinate","ordinateIndex","equals2D","getOrdinate","equals3D","equalInZ","compareTo","o","clone","toString","distance3D","dx","dy","dz","distance","hashCode","setCoordinate","f","NaN","dimensionsToTest","_dimensionsToTest","dimensionsToTest$1","o1","o2","c1","c2","compX","compY","CoordinateSequenceFactory","Location","staticAccessors$4","INTERIOR","BOUNDARY","EXTERIOR","NONE","toLocationSymbol","locationValue","hasInterface","MathUtil","staticAccessors$5","LOG_10","log10","ln","log","v3","v4","clamp","x$1","min$1","max$1","wrap","v1$1","v2$1","v3$1","average","StringBuffer","str","append","setCharAt","substr","Integer","intValue","Character","isWhitespace","toUpperCase","DD","_hi","_lo","init","dd","parse","hi","lo","staticAccessors$7","PI","TWO_PI","PI_2","E","EPS","SPLIT","MAX_PRINT_DIGITS","TEN","ONE","SCI_NOT_EXPONENT_CHAR","SCI_NOT_ZERO","le","extractSignificantDigits","insertDecimalPoint","magnitude","mag","scale","divide","gt","lt","multiply","decimalPointPos","buf","numDigits","digit","rebiasBy10","digitChar","subtract","valueOf","selfAdd","continueExtractingDigits","remMag","sqr","doubleValue","negate","y$1","isZero","selfSubtract","getSpecialNumberString","selfDivide","tc","ty","C","U","yhi","ylo","hc","hy","dump","createNaN","ge","exp","selfMultiply","reciprocal","fhi","flo","rint","setValue","value$1","isNegative","ax","axdd","H","h","S","H$1","T","S$1","f$1","s$1","e$1","zhi","zlo","tx","hx","selfSqr","toStandardNotation","toSciNotation","specialStr","fill","sigDigits","num","charAt","stringOfChar","numZeroes","digits","expStr","trailingDigits","substring","digitsWithDecimal","isPositive","signum","strlen","signCh","numBeforeDec","ch","isDigit","ex","val2","numDecPlaces","scale$1","xAbs","xLog10","xMag","CGAlgorithmsDD","staticAccessors$6","DP_SAFE_EPSILON","orientationIndex","q","orientationIndexFilter","dx1","dy1","dx2","dy2","signOfDet2x2","q1","q2","denom1","denom2","denom","numx1","numx2","fracP","numy1","numy2","fracQ","pa","pb","pc","detsum","detleft","detright","det","errbound","CoordinateSequence","staticAccessors$8","M","getCoordinate","getCoordinateCopy","getDimension","getX","expandEnvelope","env","getY","toCoordinateArray","Exception","NotRepresentableException","Exception$$1","System","arraycopy","src","srcPos","dest","destPos","getProperty","line.separator","HCoordinate","w","_x","_y","p1$1","p2$1","_x$1","_y$1","_w","p1$2","p2$2","px","py","pw","qx","qy","qw","xInt","yInt","Envelope","_minx","_maxx","_miny","_maxy","staticAccessors$9","getArea","getWidth","getHeight","otherEnvelope","isNull","getMaxX","getMaxY","getMinX","getMinY","intersects","intMinX","intMinY","intMaxX","intMaxY","covers","expandToInclude","minExtent","translate","transX","transY","setToNull","maxExtent","expandBy","deltaX","deltaY","contains","centre","minq","maxq","minp","maxp","regExes","typeStr","emptyTypeStr","spaces","parenComma","doubleParenComma","trimParens","WKTParser","geometryFactory","GeometryFactory","read","wkt","geometry","matches","exec","search","toLowerCase","parse$1","apply","write","extractGeometry","getGeometryType","extract$1","wktType","isEmpty","coordinate","coordinate$1","point$1","_coordinates","multipoint","multipoint$1","array","_geometries","linestring","linestring$1","_points","linearring","linearring$1","multilinestring","multilinestring$1","polygon","polygon$1","_shell","_holes","multipolygon","multipolygon$1","geometrycollection","collection","createPoint","coords","trim","createMultiPoint","components","createLineString","createLinearRing","line","createMultiLineString","lines","createPolygon","shell","holes","createMultiPolygon","polygons","createGeometryCollection","wktArray","WKTWriter","parser","toLineString","RuntimeException","AssertionFailedException","RuntimeException$$1","Assert","shouldNeverReachHere","isTrue","assertion","expectedValue","actualValue","LineIntersector","_result","_inputLines","map","_intPt","_intLineIndex","_isProper","_pa","_pb","_precisionModel","staticAccessors$10","DONT_INTERSECT","DO_INTERSECT","COLLINEAR","NO_INTERSECTION","POINT_INTERSECTION","COLLINEAR_INTERSECTION","getIndexAlongSegment","segmentIndex","intIndex","computeIntLineIndex","getTopologySummary","catBuf","isEndPoint","isCollinear","computeIntersection","p3","p4","computeIntersect","getIntersectionNum","getEdgeDistance","isProper","hasIntersection","setPrecisionModel","precisionModel","isInteriorIntersection","inputLineIndex","computeEdgeDistance","getEndpoint","ptIndex","isIntersection","getIntersectionAlongSegment","pdx","pdy","nonRobustComputeEdgeDistance","RobustLineIntersector","LineIntersector$$1","isInSegmentEnvelopes","intPt","env0","env1","CGAlgorithms","normalizeToMinimum","n1","n2","n3","n4","normPt","smallestInAbsValue","safeHCoordinateIntersection","nearestEndpoint","intersectionWithNormalization","makePrecise","x3","x4","xabs","checkDD","intPtDD","isIn","println","normalizeToEnvCentre","computeCollinearIntersection","p1q1p2","p1q2p2","q1p1q2","q1p2q2","n00","n01","n10","n11","minX0","minY0","maxX0","maxY0","minX1","minY1","maxX1","maxY1","intMidX","intMidY","Pq1","Pq2","Qp1","Qp2","nearestPt","minDist","distancePointLine","RobustDeterminant","sign","swap","RayCrossingCounter","_p","_crossingCount","_isPointOnSegment","countSegment","minx","maxx","xIntSign","isPointInPolygon","getLocation","isOnSegment","locatePointInRing","counter","p$1","ring$1","counter$1","i$1","staticAccessors$3","CLOCKWISE","RIGHT","COUNTERCLOCKWISE","LEFT","STRAIGHT","sum","x0","x0$1","sum$1","distanceLineLine","A","B","D","noIntersection","rNumb","isPointInRing","computeLength","pts","y0","isCCW","nPts","hiPt","hiIndex","iPrev","iNext","disc","computeOrientation","distancePointLinePerpendicular","len2","minDistance","isOnLine","lineIntersector","GeometryComponentFilter","filter","Geometry","_envelope","_factory","_SRID","_userData","getSRID","staticAccessors$11","SORTINDEX_POINT","SORTINDEX_MULTIPOINT","SORTINDEX_LINESTRING","SORTINDEX_LINEARRING","SORTINDEX_MULTILINESTRING","SORTINDEX_POLYGON","SORTINDEX_MULTIPOLYGON","SORTINDEX_GEOMETRYCOLLECTION","geometryChangedFilter","isGeometryCollection","getSortIndex","getFactory","getGeometryN","isRectangle","g$1","equalsTopo","g","equalsExact","geometryChanged","geometryChangedAction","equalsNorm","norm","getLength","getNumGeometries","compareToSameClass","other$1","getUserData","getEnvelope","toGeometry","getEnvelopeInternal","checkNotGeometryCollection","equal","normalize","getPrecisionModel","computeEnvelopeInternal","setSRID","SRID","setUserData","userData","iterator","hasNext","aElement","bElement","comparison","isGeometryCollectionOrDerived","hasNonEmptyElements","geometries","hasNullElements","CoordinateFilter","BoundaryNodeRule","staticAccessors$12","Mod2BoundaryNodeRule","EndPointBoundaryNodeRule","MultiValentEndPointBoundaryNodeRule","MonoValentEndPointBoundaryNodeRule","MOD2_BOUNDARY_RULE","ENDPOINT_BOUNDARY_RULE","MULTIVALENT_ENDPOINT_BOUNDARY_RULE","MONOVALENT_ENDPOINT_BOUNDARY_RULE","OGC_SFS_BOUNDARY_RULE","isInBoundary","boundaryCount","Collection","IndexOutOfBoundsException","addAll","toArray","Iterator","List","Collection$$1","NoSuchElementException","ArrayList","List$$1","array_","ensureCapacity","clear","element","oldElement","Iterator_","found","Iterator$$1","arrayList","arrayList_","position_","CoordinateList","ArrayList$$1","coord$1","allowRepeated","coordArrayType","coll","isChanged","coord$2","obj","allowRepeated$2","coord$3","allowRepeated$3","i$2","i$3","coord$4","coord$5","allowRepeated$5","inc","closeRing","CoordinateArrays","staticAccessors$13","ForwardComparator","BidirectionalComparator","isRing","ptNotInList","testPts","testPt","scroll","coordinates","firstCoordinate","newCoordinates","coord1","coord2","coord1$1","coord2$1","coordinateComparator","coordList","hasRepeatedPoints","removeRepeatedPoints","last","mid","removeNull","nonNull","newCoord","copyDeep","srcStart","destStart","isEqualReversed","pts1","pts2","envelope","atLeastNCoordinatesOrNothing","increasingDirection","minCoordinate","minCoord","extract","npts","extractPts","iPts","forwardComp","OLDcompare","dir1","dir2","i1","i2","comparePt","Map$1","put","entrySet","SortedMap","OperationNotSupported","Set","HashSet","Set$$1","Iterator_$1","hashSet","hashSet_","BLACK","colorOf","color","parentOf","setColor","leftOf","rightOf","TreeMap","root_","size_","getValue","getKey","oldValue","fixAfterInsertion","getFirstEntry","Lineal","SortedSet","TreeSet","Iterator_$2","treeSet","treeSet_","Arrays","asList","Dimension","staticAccessors$14","P","L","FALSE","TRUE","DONTCARE","SYM_FALSE","SYM_TRUE","SYM_DONTCARE","SYM_P","SYM_L","SYM_A","toDimensionSymbol","dimensionValue","toDimensionValue","dimensionSymbol","GeometryFilter","CoordinateSequenceFilter","seq","isDone","isGeometryChanged","GeometryCollection","Geometry$$1","getCoordinates","getNumPoints","childCoordinates","area","isEquivalentClass","otherCollection","getBoundaryDimension","dimension","numPoints","revGeoms","theseElements","otherElements","o$1","gc","thisGeom","otherGeom","holeComp","filter$1","filter$2","filter$3","getBoundary","MultiLineString","GeometryCollection$$1","isClosed","nLines","revLines","BoundaryOp","lineStrings","_geom","_geomFact","_bnRule","_endpointMap","bnRule","geom$1","bnRule$1","boundaryMultiLineString","mLine","getEmptyMultiPoint","bdyPts","computeBoundaryCoordinates","createMultiPointFromCoords","LineString","boundaryLineString","getStartPoint","getEndPoint","addEndpoint","getCoordinateN","it","entry","valence","count","Counter","PrintStream","StringReader","DecimalFormat","ByteArrayOutputStream","IOException","LineNumberReader","StringUtil","staticAccessors$15","NEWLINE","SIMPLE_ORDINATE_FORMAT","chars","getStackTrace","os","ps","printStackTrace","t$1","stackTrace","lineNumberReader","readLine","separator","separatorlen","tokenList","tmpString","token","format","CoordinateSequences","copyCoord","minDim","dim","isEqual","cs1","cs2","cs1Size","extend","fact","newseq","cs","ensureValidRing","createClosedRing","isSimple","otherLineString","getPointN","line$1","ls","getCoordinateSequence","getCoordinateSequenceFactory","isCoordinate","Puntal","Point","Polygonal","Polygon","shellCoordinates","getNumInteriorRing","prevX","prevY","otherPolygon","thisShell","otherPolygonShell","clockwise","uniqueCoordinates","convexHull","getExteriorRing","otherShell","thisShell$1","otherShell$1","shellComp","nHole1","nHole2","thisHole","getInteriorRingN","otherHole","MultiPoint","isValid","LinearRing","LineString$$1","validateConstruction","MINIMUM_VALID_SIZE","MultiPolygon","allRings","allRingsArray","GeometryEditor","_isUserDataCopied","staticAccessors$16","NoOpGeometryOperation","CoordinateOperation","CoordinateSequenceOperation","setCopyUserData","isUserDataCopied","edit","editInternal","editGeometryCollection","editPolygon","getName","collectionForType","newPolygon","hole","GeometryEditorOperation","editCoordinates","CoordinateArraySequence","_dimension","coordSeq","size$1","dimension$1","staticAccessors$18","cloneCoordinates","strBuf","CoordinateArraySequenceFactory","staticAccessors$17","instanceObject","readResolve","HashMap","MapInterface","map_","entries","PrecisionModel","_modelType","_scale","FLOATING","Type","modelType","FIXED","setScale","pm","staticAccessors$19","maximumPreciseValue","otherPrecisionModel","getMaximumSignificantDigits","otherSigDigits","getScale","isFloating","FLOATING_SINGLE","getType","description","maxSigDigits","mostPrecise","pm1","pm2","_name","nameToTypeMap","staticAccessors$1$1","_coordinateSequenceFactory","getDefaultCoordinateSequenceFactory","staticAccessors$2","buildGeometry","geomList","geomClass","isHeterogeneous","hasGeometryCollection","partClass","toGeometryArray","geom0","toPolygonArray","toLineStringArray","toPointArray","coordinates$1","shell$1","createGeometry","ptSeq","toMultiPolygonArray","multiPolygons","multiPolygonArray","geometryArray","toMultiLineStringArray","multiLineStrings","multiLineStringArray","lineStringArray","toMultiPointArray","multiPoints","multiPointArray","toLinearRingArray","linearRings","linearRingArray","pointArray","polygonArray","createPointFromInternalCoord","exemplar","geometryTypes","GeoJSONParser","json","JSON","Feature","feature","FeatureCollection","featureCollection","features","sub","linearRing","geoJson","shellGeoJson","holeGeoJson","GeoJSONReader","reducePrecision","GeoJSONWriter","Position","staticAccessors$20","ON","EmptyStackException","Stack","opposite","position","empty","RightmostEdgeFinder","_minIndex","_minCoord","_minDe","_orientedDe","getRightmostSide","de","side","getRightmostSideOfSegment","checkForRightmostCoordinate","findRightmostEdgeAtVertex","getEdge","pPrev","pNext","orientation","usePrev","findRightmostEdgeAtNode","star","getNode","getEdges","getRightmostEdge","isForward","getSym","findEdge","dirEdgeList","TopologyException","msg","msgWithCoord","LinkedList","addLast","removeFirst","BufferSubgraph","_finder","_dirEdgeList","_nodes","_rightMostCoord","_env","clearVisitedEdges","setVisited","getRightmostCoordinate","computeNodeDepth","startEdge","isVisited","computeDepths","de$1","copySymDepths","computeDepth","outsideDepth","setEdgeDepths","addReachable","findResultEdges","getDepth","isInteriorAreaEdge","setInResult","nodesVisited","nodeQueue","startNode","sym","adjNode","graph","edgeEnv","nodeStack","setDepth","symNode","getNodes","getDirectedEdges","TopologyLocation","location","on","gl","on$1","setAllLocations","locValue","setAllLocationsIfNull","isLine","newLoc","getLocations","flip","temp","setLocations","posIndex","isArea","isAnyNull","setLocation","locIndex","locValue$1","isEqualOnSide","allPositionsEqual","loc","Label","elt","onLoc","lbl","geomIndex","onLoc$1","onLoc$2","leftLoc","rightLoc","geomIndex$1","onLoc$3","leftLoc$1","rightLoc$1","getGeometryCount","location$1","toLine","toLineLabel","label","lineLabel","EdgeRing","_startDe","_maxNodeDegree","_edges","_pts","_label","_ring","_isHole","_geometryFactory","computePoints","computeRing","isIsolated","isFirstEdge","getEdgeRing","getLabel","mergeLabel","addPoints","setEdgeRing","getNext","getLinearRing","computeMaxNodeDegree","degree","getOutgoingDegree","edge","edgePts","startIndex","startIndex$1","isHole","containsPoint","addHole","isShell","getMaxNodeDegree","getShell","deLabel","deLabel$1","setShell","toPolygon","holeLR","MinimalEdgeRing","EdgeRing$$1","er","setMinEdgeRing","getNextMin","MaximalEdgeRing","buildMinimalRings","minEdgeRings","getMinEdgeRing","minEr","linkDirectedEdgesForMinimalEdgeRings","linkMinimalDirectedEdges","GraphComponent","_isInResult","_isCovered","_isCoveredSet","_isVisited","isCovered","isCoveredSet","setLabel","setCovered","updateIM","im","computeIM","GraphComponent$$1","_coord","edges","isIncidentEdgeInResult","print","computeMergedLocation","label2","eltIndex","nLoc","argIndex","onLocation","setNode","setLabelBoundary","NodeMap","nodeMap","nodeFact","addNode","createNode","node$1","getBoundaryNodes","bdyNodes","Quadrant","staticAccessors$21","NE","NW","SW","SE","isNorthern","quad","isOpposite","quad1","quad2","commonHalfPlane","isInHalfPlane","halfPlane","quadrant","EdgeEnd","_edge","_node","_p0","_p1","_dx","_dy","_quadrant","edge$1","edge$2","p0$1","label$1","compareDirection","getDy","angle","atan2","className","lastDotPos","lastIndexOf","getDirectedCoordinate","getDx","getQuadrant","computeLabel","boundaryNodeRule","DirectedEdge","EdgeEnd$$1","_isForward","_sym","_next","_nextMin","_edgeRing","_minEdgeRing","_depth","computeDirectedLabel","depthVal","setNextMin","nextMin","getDepthDelta","minEdgeRing","isLineEdge","isExteriorIfArea0","isExteriorIfArea1","edgeRing","depthDelta","printEdge","printReverse","setSym","setVisitedEdge","directionFactor","oppositePos","oppositeDepth","setNext","depthFactor","currLocation","nextLocation","NodeFactory","PlanarGraph","_edgeEndList","printEdges","eiList","getNodeIterator","linkResultDirectedEdges","nodeit","debugPrintln","isBoundaryNode","linkAllDirectedEdges","matchInSameDirection","ep0","ep1","getEdgeEnds","debugPrint","getEdgeIterator","findEdgeInSameDirection","eCoord","insertEdge","findEdgeEnd","ee","addEdges","edgesToAdd","de1","de2","nodes","PolygonBuilder","_shellList","sortShellsAndHoles","edgeRings","shellList","freeHoleList","computePolygons","resultPolyList","placeFreeHoles","findEdgeRingContaining","buildMinimalEdgeRings","maxEdgeRings","findShell","placePolygonHoles","buildMaximalEdgeRings","dirEdges","getPolygons","testEr","testRing","testEnv","minShell","minEnv","tryShell","tryRing","tryEnv","isContained","shellCount","Boundable","getBounds","ItemBoundable","_bounds","_item","bounds","getItem","PriorityQueue","_items","poll","minItem","reorder","child","ItemVisitor","visitItem","SpatialIndex","itemEnv","query","AbstractNode","_childBoundables","_level","level","staticAccessors$22","getLevel","getChildBoundables","addChildBoundable","childBoundable","computeBounds","Collections","reverseOrder","alen","singletonList","BoundablePair","_boundable1","_boundable2","_distance","_itemDistance","boundable1","boundable2","itemDistance","expandToQueue","priQ","isComp1","isComposite","isComp2","expand","isLeaves","nd","bndComposite","bndOther","bp","getDistance","getBoundable","AbstractSTRtree","_built","_itemBoundables","_nodeCapacity","nodeCapacity","DEFAULT_NODE_CAPACITY","nodeCapacity$1","staticAccessors$23","IntersectsOp","getNodeCapacity","lastNode","build","removeItem","childToRemove","itemsTree","valuesTree","valuesTreeForNode","valuesTreeForChild","boundablesAtLevel","boundables","level$1","boundables$1","boundable","searchBounds","getIntersectsOp","searchBounds$1","searchBounds$2","visitor$1","childBoundables","searchBounds$3","matches$1","childBoundables$1","childBoundable$1","createHigherLevels","getRoot","item$1","childToPrune","boundablesOfALevel","parentBoundables","createParentBoundables","maxChildDepth","childDepth","newLevel","sortedChildBoundables","getComparator","compareDoubles","ItemDistance","item1","item2","STRtree","AbstractSTRtree$$1","STRtreeNode","xComparator","yComparator","intersectsOp","createParentBoundablesFromVerticalSlices","verticalSlices","createParentBoundablesFromVerticalSlice","sliceCount","sliceCapacity","slices","boundablesAddedToSlice","searchEnv","searchEnv$1","minLeafCount","nearestNeighbour","itemDist","initBndPair","POSITIVE_INFINITY","itemDist$1","bp$1","initBndPair$1","distanceLowerBound","minPair","bndPair","currentDistance","itemDist$2","bnd","bp$2","centreX","avg","centreY","aBounds","bBounds","AbstractNode$$1","SegmentPointComparator","relativeSign","octant","xSign","ySign","compareValue","compareSign0","compareSign1","SegmentNode","_segString","_segmentOctant","_isInterior","segString","segmentOctant","maxSegmentIndex","isInterior","SegmentNodeList","_nodeMap","getSplitCoordinates","addEndpoints","eiPrev","ei","addEdgeCoordinates","addCollapsedNodes","collapsedVertexIndexes","findCollapsesFromInsertedNodes","findCollapsesFromExistingVertices","vertexIndex","ei0","ei1","lastSegStartPt","useIntPt1","addSplitEdges","edgeList","newEdge","createSplitEdge","findCollapseIndex","collapsedVertexIndex","numVerticesBetween","maxSegIndex","ipt","NodedSegmentString","getData","eiNew","getSegmentOctant","checkSplitEdgesCorrectness","splitEdges","pt0","splitnPts","ptn","Octant","adx","ady","dx$1","dy$1","SegmentString","setData","NodableSegmentString","addIntersection","_nodeList","_data","safeOctant","intPt$1","addIntersectionNode","li","segmentIndex$1","getNodeList","normalizedSegmentIndex","nextSegIndex","addIntersections","getNodedSubstrings","segStrings","resultEdgelist","segStrings$1","resultEdgelist$1","LineSegment","staticAccessors$24","minX","orient0","orient1","geomFactory","project","projectionFactor","pf0","pf1","newp0","newp1","distancePerpendicular","minY","midPoint","closestPoints","closestPt","close00","close01","close10","close11","factor","maxX","comp0","lineIntersection","maxY","pointAlongOffset","segmentLengthFraction","offsetDistance","segx","segy","ux","uy","setCoordinates","segmentFraction","inputPt","segFrac","isHorizontal","pointAlong","bits0","hash0","bits1","MonotoneChainOverlapAction","tempEnv1","tempEnv2","_overlapSeg1","_overlapSeg2","overlap","mc1","start1","mc2","start2","getLineSegment","MonotoneChain","_start","_end","_context","_id","context","computeSelect","start0","end0","mcs","select","computeOverlaps","mc","mco","computeOverlapsInternal","setId","getEndIndex","getStartIndex","getContext","getId","end1","p00","p01","p10","p11","mid0","mid1","MonotoneChainBuilder","getChainStartIndices","startIndexList","findChainEnd","toIntArray","safeStart","chainQuad","getChains","pts$1","mcList","Noder","computeNodes","SinglePassNoder","_segInt","segInt","setSegmentIntersector","MCIndexNoder","SinglePassNoder$$1","si","_monoChains","_index","_idCounter","_nodedSegStrings","_nOverlaps","SegmentOverlapAction","getMonotoneChains","getIndex","segStr","inputSegStrings","intersectChains","overlapAction","queryChain","testChain","MonotoneChainOverlapAction$$1","_si","ss1","ss2","processIntersections","BufferParameters","_quadrantSegments","DEFAULT_QUADRANT_SEGMENTS","_endCapStyle","CAP_ROUND","_joinStyle","JOIN_ROUND","_mitreLimit","DEFAULT_MITRE_LIMIT","_isSingleSided","_simplifyFactor","DEFAULT_SIMPLIFY_FACTOR","quadrantSegments","setQuadrantSegments","quadrantSegments$1","endCapStyle","setEndCapStyle","quadrantSegments$2","endCapStyle$1","joinStyle","mitreLimit","setJoinStyle","setMitreLimit","staticAccessors$25","CAP_FLAT","CAP_SQUARE","JOIN_MITRE","JOIN_BEVEL","getEndCapStyle","isSingleSided","quadSegs","getJoinStyle","setSimplifyFactor","simplifyFactor","getSimplifyFactor","getQuadrantSegments","getMitreLimit","setSingleSided","bufferDistanceError","alpha","cos","BufferInputLineSimplifier","inputLine","_distanceTol","_isDeleted","_angleOrientation","_inputLine","staticAccessors$26","INIT","DELETE","KEEP","NUM_PTS_TO_CHECK","isDeletable","i0","distanceTol","isConcave","isShallow","isShallowSampled","deleteShallowConcavities","midIndex","findNextNonDeletedIndex","lastIndex","isMiddleVertexDeleted","isShallowConcavity","simplify","collapseLine","OffsetSegmentString","_ptList","_minimimVertexDistance","staticAccessors$28","COORDINATE_ARRAY_TYPE","addPt","bufPt","isRedundant","revere","addPts","startPt","setMinimumVertexDistance","minimimVertexDistance","Angle","staticAccessors$29","PI_TIMES_2","PI_OVER_2","PI_OVER_4","toDegrees","radians","isAcute","dx0","dy0","isObtuse","interiorAngle","anglePrev","angleNext","normalizePositive","angleBetween","tip1","tail","tip2","diff","ang1","ang2","delAngle","toRadians","angleDegrees","getTurn","crossproduct","sin","angleBetweenOriented","angDel","OffsetSegmentGenerator","_maxCurveSegmentError","_filletAngleQuantum","_closingSegLengthFactor","_segList","_bufParams","_li","_s0","_s1","_s2","_seg0","_seg1","_offset0","_offset1","_side","_hasNarrowConcaveAngle","bufParams","MAX_CLOSING_SEG_LEN_FACTOR","staticAccessors$27","OFFSET_SEGMENT_SEPARATION_FACTOR","INSIDE_TURN_VERTEX_SNAP_DISTANCE_FACTOR","CURVE_VERTEX_SNAP_DISTANCE_FACTOR","addNextSegment","addStartPoint","computeOffsetSegment","outsideTurn","addCollinear","addOutsideTurn","addInsideTurn","addLineEndCap","offsetL","offsetR","addFilletArc","squareCapSideOffset","squareCapLOffset","squareCapROffset","addMitreJoin","offset0","offset1","isMitreWithinLimit","addLimitedMitreJoin","addFilletCorner","direction","radius","startAngle","endAngle","addBevelJoin","createSquare","addSegments","addFirstSegment","addLastSegment","initSideSegments","ang0","angDiffHalf","midAng","mitreMidAng","mitreDist","bevelHalfLen","bevelMidX","bevelMidY","bevelMidPt","mitreMidLine","bevelEndLeft","bevelEndRight","offset","sideSign","totalAngle","nSegs","currAngleInc","currAngle","createCircle","hasNarrowConcaveAngle","OffsetCurveBuilder","getOffsetCurve","inputPts","isRightSide","posDistance","segGen","getSegGen","computePointCurve","computeOffsetCurve","curvePts","computeSingleSidedBufferCurve","distTol","simplifyTolerance","simp2","simp1","computeRingBufferCurve","simp","computeLineBufferCurve","getLineCurve","getBufferParameters","bufDistance","getRingCurve","copyCoordinates","SubgraphDepthLocater","_subgraphs","_seg","_cga","subgraphs","staticAccessors$30","DepthSegment","findStabbedSegments","stabbingRayLeftPt","stabbedSegments","bsg","stabbingRayLeftPt$1","dirEdge","stabbedSegments$1","ds","stabbingRayLeftPt$2","stabbedSegments$2","_leftDepth","_upwardSeg","orientIndex","compareX","seg0","seg1","compare0","Triangle","interpolateZ","longestSideLength","circumcentre","area3D","centroid","inCentre","m00","m01","m10","m11","v0","lenAB","lenBC","lenCA","maxLen","cx","cy","ay","bx","by","numx","numy","perpendicularBisector","angleBisector","len0","frac","uz","vx","vy","vz","crossx","crossy","crossz","absSq","len1","circum","inCentreX","inCentreY","OffsetCurveSetBuilder","_inputGeom","_curveBuilder","_curveList","inputGeom","curveBuilder","addPoint","curve","addCurve","addPolygon","offsetSide","shellCoord","isErodedCompletely","addPolygonRing","holeCoord","isTriangleErodedCompletely","triangleCoord","bufferDistance","tri","addLineString","getCurves","cwLeftLoc","cwRightLoc","addCollection","ringCoord","envMinDimension","PointOnGeometryLocator","locate","GeometryCollectionIterator","_parent","_atStart","_max","_subcollectionIterator","isAtomic","SimplePointInAreaLocator","containsPointInPolygon","geomi","g2","EdgeEndStar","_edgeMap","_edgeList","_ptInAreaLocation","getNextCW","iNextCW","propagateSideLabels","startLoc","currLoc","it$1","isAreaLabelsConsistent","geomGraph","computeEdgeEndLabels","getBoundaryNodeRule","checkAreaLabelsConsistent","lastEdgeIndex","findIndex","eSearch","getGeometry","computeLabelling","hasDimensionalCollapseEdge","geomi$1","getDegree","insertEdgeEnd","DirectedEdgeStar","EdgeEndStar$$1","_resultAreaEdgeList","_SCANNING_FOR_INCOMING","_LINKING_TO_OUTGOING","getResultAreaEdges","firstOut","incoming","state","nextOut","nextIn","de0","deLast","quad0","updateLabelling","nodeLabel","prevOut","firstIn","edgeIndex","startDepth","targetLastDepth","nextDepth","endIndex","currDepth","nextDe","mergeSymLabels","degree$1","findCoveredLineEdges","nextOut$1","nextIn$1","eLabel","eLoc","OverlayNodeFactory","NodeFactory$$1","OrientedCoordinateArray","_orientation","oca","compareOriented","orientation1","orientation2","limit1","limit2","compPt","done1","done2","EdgeList","_ocaMap","edgeColl","findEdgeIndex","findEqualEdge","SegmentIntersector","e0","segIndex0","segIndex1","IntersectionAdder","_hasIntersection","_hasProper","_hasProperInterior","_hasInterior","_properIntersectionPoint","_isSelfIntersection","numIntersections","numInteriorIntersections","numProperIntersections","numTests","isTrivialIntersection","isAdjacentSegments","getProperIntersectionPoint","hasProperInteriorIntersection","getLineIntersector","hasProperIntersection","hasInteriorIntersection","EdgeIntersection","getSegmentIndex","EdgeIntersectionList","Edge","MonotoneChainIndexer","MonotoneChainEdge","env2","mcb","chainIndex","computeIntersectsForChain","chainIndex0","mce","chainIndex1","mce$1","getStartIndexes","computeIntersects","Depth","NULL_VALUE","staticAccessors$31","depthValue","minDepth","newValue","getDelta","depthAtLocation","_mce","_isIsolated","_depthDelta","getCollapsedEdge","newPts","setIsolated","setName","isEqualForward","isEqualReverse","iRev","isCollapsed","getMaximumSegmentIndex","getMonotoneChainEdge","isPointwiseEqual","setDepthDelta","getEdgeIntersectionList","setAtLeastIfValid","BufferBuilder","_workingPrecisionModel","_workingNoder","_graph","setWorkingPrecisionModel","insertUniqueEdge","existingEdge","existingLabel","labelToMerge","mergeDelta","newDelta","buildSubgraphs","subgraphList","polyBuilder","processedGraphs","subgraph","createSubgraphs","createEmptyResultGeometry","getNoder","noder","buffer","bufferSegStrList","computeNodedEdges","oldLabel","setNoder","lLoc","rLoc","convertSegStrings","ss","ScaledNoder","_noder","_scaleFactor","_offsetX","_offsetY","_isScaled","scaleFactor","isIntegerPrecision","noder$1","scaleFactor$1","offsetX","offsetY","rescale","nodedSegmentStrings","roundPts","splitSS","intSegStrings","NodingValidator","_segStrings","staticAccessors$33","checkEndPtVertexIntersections","checkInteriorIntersections","ss0","ss0$1","ss1$1","pts0","checkValid","checkCollapses","checkCollapse","HotPixel","_originalPt","_ptScaled","_p0Scaled","_p1Scaled","_corner","_safeEnv","initCorners","staticAccessors$34","SAFE_ENV_EXPANSION_FACTOR","intersectsScaled","segMinx","segMaxx","segMiny","segMaxy","isOutsidePixelEnv","intersectsToleranceSquare","copyScaled","pScaled","getSafeEnvelope","safeTolerance","intersectsPixelClosure","intersectsLeft","intersectsBottom","addSnappedNode","segIndex","MonotoneChainSelectAction","selectedSegment","MCIndexPointSnapper","staticAccessors$35","HotPixelSnapAction","snap","hotPixel","hotPixel$1","parentEdge","hotPixelVertexIndex","pixelEnv","hotPixelSnapAction","isNodeAdded","MonotoneChainSelectAction$$1","_hotPixel","_parentEdge","_hotPixelVertexIndex","_isNodeAdded","InteriorIntersectionFinderAdder","_interiorIntersections","getInteriorIntersections","MCIndexSnapRounder","_pm","_pointSnapper","checkCorrectness","inputSegmentStrings","resultSegStrings","nv","snapRound","intersections","findInteriorIntersections","computeIntersectionSnaps","computeVertexSnaps","intFinderAdder","edge0","snapPts","snapPt","BufferOp","_argGeom","_resultGeometry","_saveException","staticAccessors$32","CAP_BUTT","MAX_PRECISION_DIGITS","bufferFixedPrecision","fixedPM","bufBuilder","bufferReducedPrecision","precDigits","precisionDigits","sizeBasedScaleFactor","precisionScaleFactor","computeGeometry","bufferOriginalPrecision","argPM","getResultGeometry","bufferOp","distance$1","bufOp","g$2","distance$2","params","g$3","distance$3","bufOp$2","maxPrecisionDigits","bufEnvMax","minUnitLog10","PointPairDistance","_isNull","setMinimum","ptDist","initialize","setMaximum","DistanceToPointFinder","computeDistance","tempSegment","pt$1","ptDist$1","pt$2","ptDist$2","pt$3","ptDist$3","closestPt$1","BufferCurveMaximumDistanceFinder","_maxPtDist","staticAccessors$36","MaxPointDistanceFilter","MaxMidpointDistanceFilter","computeMaxMidpointDistance","distFilter","getMaxPointDistance","computeMaxVertexDistance","findDistance","bufferCurve","getDistancePoints","_minPtDist","midPt","PolygonExtracter","comps","_comps","LinearComponentExtracter","_lines","_isForcedToLineString","lines$1","isForcedToLineString","setForceToLineString","getLines","forceToLineString","geom$2","lines$2","geoms$1","lines$3","forceToLineString$1","geom$3","lines$4","forceToLineString$2","PointLocator","_boundaryRule","_isIn","_numBoundaries","boundaryRule","locateInternal","shellLoc","locateInPolygonRing","holeLoc","p$2","updateLocationInfo","computeLocation","ml","mpoly","GeometryLocation","_component","_segIndex","component","INSIDE_AREA","component$1","staticAccessors$38","isInsideArea","getGeometryComponent","PointExtracter","getPoints","ConnectedElementLocationFilter","_locations","locations","DistanceOp","_terminateDistance","_ptLocator","_minDistanceLocation","_minDistance","g0","g1","g0$1","g1$1","terminateDistance","computeContainmentDistance","locPtPoly","polyGeomIndex","locPtPoly$1","locationsIndex","insideLocs","locs","polys$1","locPtPoly$2","ptLoc","locPtPoly$3","computeMinDistanceLinesPoints","locGeom","computeMinDistance","computeFacetDistance","lines0","lines1","computeMinDistanceLines","updateMinDistance","computeMinDistancePoints","nearestLocations","nearestPoints","coord0","segClosestPoint","line0","line1","locGeom$1","coord0$1","dist$1","points0","points1","isWithinDistance","PointPairDistance$2","DistanceToPoint","DiscreteHausdorffDistance","_g0","_g1","_ptDist","_densifyFrac","staticAccessors$39","MaxDensifiedByFractionDistanceFilter","setDensifyFraction","densifyFrac","compute","computeOrientedDistance","discreteGeom","MaxPointDistanceFilter$1","fracFilter","orientedDistance","_euclideanDist","_numSubSegs","fraction","delx","dely","BufferDistanceValidator","_minValidDistance","_maxValidDistance","_minDistanceFound","_maxDistanceFound","_isValid","_errMsg","_errorLocation","_errorIndicator","_input","_bufDistance","staticAccessors$37","VERBOSE","MAX_DISTANCE_DIFF_FRAC","checkMaximumDistance","bufCurve","maxDist","haus","distDelta","checkPositiveValid","checkNegativeValid","inputCurve","getPolygonLines","checkMinimumDistance","getErrorIndicator","distOp","getErrorLocation","lineExtracter","getErrorMessage","BufferResultValidator","_errorMsg","staticAccessors$40","MAX_ENV_DIFF_FRAC","checkPolygonal","checkExpectedEmpty","checkEnvelope","checkArea","checkDistance","padding","expectedEnv","bufEnv","report","distValid","inputArea","resultArea","checkName","isValidMsg","validator","BasicSegmentString","InteriorIntersectionFinder","_findAllIntersections","_isCheckEndSegmentsOnly","_interiorIntersection","_intSegments","_intersections","_intersectionCount","_keepIntersections","getInteriorIntersection","setCheckEndSegmentsOnly","isCheckEndSegmentsOnly","getIntersectionSegments","getIntersections","setFindAllIntersections","findAllIntersections","setKeepIntersections","keepIntersections","isEndSegment","createAllIntersectionsFinder","finder","createAnyIntersectionFinder","createIntersectionCounter","FastNodingValidator","execute","intSegs","computeIntersections","EdgeNodingValidator","_nv","toSegmentStrings","GeometryCollectionMapper","mapOp","_mapOp","mapped","op","LineBuilder","_op","_lineEdgesList","_resultLineList","ptLocator","collectLines","opCode","getGraph","collectLineEdge","collectBoundaryTouchEdge","labelIsolatedLine","targetIndex","getArgGeometry","buildLines","OverlayOp","isResultOfOp","isCoveredByA","labelIsolatedLines","edgesList","PointBuilder","_resultPointList","filterCoveredNodeToPoint","isCoveredByLA","extractNonCoveredResultNodes","GeometryTransformer","_pruneEmptyGeometry","_preserveGeometryCollectionType","_preserveCollections","_preserveType","transformPoint","transformCoordinates","transformPolygon","isAllValidLinearRings","transformLinearRing","createCoordinateSequence","getInputGeometry","transformMultiLineString","transGeomList","transformGeom","transformLineString","transformMultiPoint","transformMultiPolygon","transformGeometryCollection","transform","seqSize","LineStringSnapper","_snapTolerance","_srcPts","_allowSnappingToSourceVertices","_isClosed","srcLine","snapTolerance","srcPts","snapTolerance$1","snapVertices","srcCoords","srcPt","snapVert","findSnapForVertex","snapTo","snapSegments","distinctPtCount","findSegmentIndexToSnap","snapIndex","setAllowSnappingToSourceVertices","allowSnappingToSourceVertices","GeometrySnapper","srcGeom","_srcGeom","staticAccessors$41","SNAP_PRECISION_FACTOR","snapGeom","extractTargetCoordinates","SnapTransformer","snapToSelf","cleanResult","snappedGeom","computeSnapTolerance","ringPts","computeMinimumSegmentLength","ptSet","minSegLen","segLen","snapper0","snapper1","computeOverlaySnapTolerance","computeSizeBasedSnapTolerance","fixedSnapTol","GeometryTransformer$$1","isSelfSnap","_snapPts","_isSelfSnap","snapLine","snapper","CommonBits","_isFirst","_commonMantissaBitsCount","_commonBits","_commonSignExp","getCommon","numBits","signExpBits","numCommonMostSigMantissaBits","zeroLowerBits","bits","padStr","toBinaryString","bitStr","getBit","nBits","num1","num2","CommonBitsRemover","_commonCoord","_ccFilter","CommonCoordinateFilter","staticAccessors$42","Translater","addCommonBits","trans","removeCommonBits","invCoord","getCommonCoordinate","_commonBitsX","_commonBitsY","xp","yp","SnapOverlayOp","_cbr","selfSnap","remGeom","prepareResult","prepGeom","overlayOp","union","symDifference","SYMDIFFERENCE","difference","SnapIfNeededOverlayOp","isSuccess","savedException","MonotoneChain$2","SweepLineEvent","_xValue","_eventType","_insertEvent","_deleteEventIndex","_obj","insertEvent","INSERT","staticAccessors$43","isDelete","setDeleteEventIndex","deleteEventIndex","getObject","pe","getInsertEvent","isInsert","isSameLabel","ev","getDeleteEventIndex","EdgeSetIntersector","SegmentIntersector$2","_includeProper","_recordIsolated","_numIntersections","_bdyNodes","_isDone","_isDoneWhenProperInt","includeProper","recordIsolated","setIsDoneIfProperInt","isDoneWhenProperInt","isBoundaryPointInternal","isBoundaryPoint","setBoundaryNodes","bdyNodes0","bdyNodes1","SimpleMCSweepLineIntersector","EdgeSetIntersector$$1","nOverlaps","prepareEvents","processOverlaps","edges0","edges1","si$1","si$2","addEdge","edgeSet","ev0","mc0","ev1","edges$1","IntervalRTreeNode","_min","NEGATIVE_INFINITY","staticAccessors$45","NodeComparator","getMin","queryMin","queryMax","getMax","mid2","IntervalRTreeLeafNode","IntervalRTreeNode$$1","IntervalRTreeBranchNode","_node1","_node2","buildExtent","SortedPackedIntervalRTree","_leaves","buildTree","buildLevel","buildRoot","ArrayListVisitor","getItems","IndexedPointInAreaLocator","IntervalIndexedGeometry","staticAccessors$44","SegmentVisitor","rcc","_counter","addLine","GeometryGraph","PlanarGraph$$1","_parentGeom","_lineEdgeMap","_boundaryNodeRule","_useBoundaryDeterminationRule","_argIndex","_boundaryNodes","_hasTooFewPoints","_invalidPoint","_areaPtLocator","parentGeom","argIndex$1","parentGeom$1","boundaryNodeRule$1","insertBoundaryPoint","determineBoundary","computeSelfNodes","computeRingSelfNodes","li$1","computeRingSelfNodes$1","isDoneIfProperInt","esi","createEdgeSetIntersector","isRings","computeAllSegments","addSelfIntersectionNodes","computeSplitEdges","edgelist","computeEdgeIntersections","hasTooFewPoints","insertPoint","getInvalidPoint","getBoundaryPoints","addSelfIntersectionNode","lr","cwLeft","cwRight","eiIt","GeometryGraphOp","_resultPrecisionModel","_arg","setComputationPrecision","g0$2","GeometryMapper","MapOp","op$1","mapped$1","gr","_resultGeom","_resultPolyList","cancelDuplicateResultEdges","resultPointList","resultLineList","opcode","createEmptyResult","replaceCollapsedEdges","newEdges","updateNodeLabelling","overlayOpCode","computeOverlay","insertUniqueEdges","copyPoints","baseSplitEdges","computeLabelsFromDepths","labelIncompleteNodes","findResultAreaEdges","lineBuilder","pointBuilder","labelIncompleteNode","graphNode","ni","geom1","resultDimension","dim0","dim1","geomFact","loc0","loc1","loc0$1","loc1$1","FuzzyPointLocator","_g","_boundaryDistanceTolerance","_linework","boundaryDistanceTolerance","extractLinework","isWithinToleranceOfBoundary","extracter","PolygonalLineworkExtracter","linework","getLinework","OffsetPointGenerator","_doLeft","_doRight","extractPoints","offsetPts","computeOffsetPoints","setSidesToGenerate","doLeft","doRight","midX","midY","offsetLeft","offsetRight","OverlayResultValidator","_locFinder","_location","_invalidLocation","TOLERANCE","_testCoords","computeBoundaryDistanceTolerance","staticAccessors$46","reportResult","expectedInterior","addTestPts","overlayOp$1","hasLocation","isValidResult","ptGen","getInvalidLocation","GeometryCombiner","_geomFactory","_skipEmpty","_inputGeoms","extractFactory","extractElements","elems","elemGeom","combine","obj0","obj1","obj0$1","obj1$1","obj2","list$1","CascadedPolygonUnion","_inputPolys","staticAccessors$47","STRTREE_NODE_CAPACITY","reduceToGeometries","geomTree","unionTree","extractByEnvelope","disjointGeoms","intersectingGeoms","elem","unionOptimized","g0Env","g1Env","unionActual","commonEnv","unionUsingEnvelopeIntersection","itemTree","binaryUnion","unionSafe","repeatedUnion","restrictToPolygons","common","disjointPolys","g0Int","g1Int","bufferUnion","UnionOp","reader","stringify","properties","options","isObject","isNumber","validateBBox","validateId","feat","geomEach","geojson","stopG","geometryMaybeCollection","featureProperties","featureBBox","featureId","featureIndex","isFeatureCollection","isFeature","stop","truncate","precision","mutate","coordEach","excludeWrapCoord","wrapShrink","coordIndex","multiFeatureIndex","geometryIndex","geomType","truncateCoords","getCoords","cleanCoords","newCoords","cleanLine","polyPoints","existing","hasOwnProperty","nextPoint","newPoints","secondToLast","isPointOnLineSegment","startX","startY","endX","endY","dxl","dyl","intersect","poly1","poly2","geom2","initialValue","previousValue","currentGeometry","geomReduce","calculateArea","polygonArea","RADIUS","ringArea","lowerIndex","middleIndex","upperIndex","coordsLength","rad","_","polygon1","polygon2","removeEmptyPolygon","differenced","feature$$1","Vue","el","render","App"],"mappings":"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"}