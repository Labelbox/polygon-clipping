{"version":3,"file":"bundle.js","sources":["../../dist/polygon-clipping.esm.js","../../node_modules/martinez-polygon-clipping/node_modules/splaytree/index.js","../../node_modules/martinez-polygon-clipping/src/compute_fields.js","../../node_modules/martinez-polygon-clipping/src/operation.js","../../node_modules/martinez-polygon-clipping/src/edge_type.js","../../node_modules/martinez-polygon-clipping/src/sweep_event.js","../../node_modules/martinez-polygon-clipping/src/equals.js","../../node_modules/robust-predicates/esm/util.js","../../node_modules/robust-predicates/esm/orient2d.js","../../node_modules/martinez-polygon-clipping/src/signed_area.js","../../node_modules/martinez-polygon-clipping/src/compare_events.js","../../node_modules/martinez-polygon-clipping/src/divide_segment.js","../../node_modules/martinez-polygon-clipping/src/segment_intersection.js","../../node_modules/martinez-polygon-clipping/src/possible_intersection.js","../../node_modules/martinez-polygon-clipping/src/compare_segments.js","../../node_modules/martinez-polygon-clipping/src/contour.js","../../node_modules/martinez-polygon-clipping/src/connect_edges.js","../../node_modules/tinyqueue/index.js","../../node_modules/martinez-polygon-clipping/src/fill_queue.js","../../node_modules/martinez-polygon-clipping/src/index.js","../../node_modules/martinez-polygon-clipping/src/subdivide_segments.js","../../node_modules/martinez-polygon-clipping/index.js","../../node_modules/turf-jsts/jsts.mjs","../../node_modules/@turf/union/main.es.js","../../node_modules/@turf/helpers/main.es.js","../../node_modules/@turf/meta/main.es.js","../../node_modules/@turf/truncate/main.es.js","../../node_modules/@turf/invariant/main.es.js","../../node_modules/@turf/clean-coords/main.es.js","../../node_modules/@turf/intersect/main.es.js","../../node_modules/@turf/area/main.es.js","../../node_modules/@turf/difference/main.es.js","../../node_modules/vue-runtime-helpers/dist/normalize-component.mjs","../../node_modules/vue-runtime-helpers/dist/inject-style/browser.mjs","../src/App.vue","../src/main.js"],"sourcesContent":["import SplayTree from 'splaytree';\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\n/**\n * A bounding box has the format:\n *\n *  { ll: { x: xmin, y: ymin }, ur: { x: xmax, y: ymax } }\n *\n */\nvar isInBbox = function isInBbox(bbox, point) {\n  return bbox.ll.x <= point.x && point.x <= bbox.ur.x && bbox.ll.y <= point.y && point.y <= bbox.ur.y;\n};\n/* Returns either null, or a bbox (aka an ordered pair of points)\n * If there is only one point of overlap, a bbox with identical points\n * will be returned */\n\nvar getBboxOverlap = function getBboxOverlap(b1, b2) {\n  // check if the bboxes overlap at all\n  if (b2.ur.x < b1.ll.x || b1.ur.x < b2.ll.x || b2.ur.y < b1.ll.y || b1.ur.y < b2.ll.y) return null; // find the middle two X values\n\n  var lowerX = b1.ll.x < b2.ll.x ? b2.ll.x : b1.ll.x;\n  var upperX = b1.ur.x < b2.ur.x ? b1.ur.x : b2.ur.x; // find the middle two Y values\n\n  var lowerY = b1.ll.y < b2.ll.y ? b2.ll.y : b1.ll.y;\n  var upperY = b1.ur.y < b2.ur.y ? b1.ur.y : b2.ur.y; // put those middle values together to get the overlap\n\n  return {\n    ll: {\n      x: lowerX,\n      y: lowerY\n    },\n    ur: {\n      x: upperX,\n      y: upperY\n    }\n  };\n};\n\n/* Javascript doesn't do integer math. Everything is\n * floating point with percision Number.EPSILON.\n *\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/EPSILON\n */\nvar epsilon = Number.EPSILON; // IE Polyfill\n\nif (epsilon === undefined) epsilon = Math.pow(2, -52);\nvar EPSILON_SQ = epsilon * epsilon;\n/* FLP comparator */\n\nvar cmp = function cmp(a, b) {\n  // check if they're both 0\n  if (-epsilon < a && a < epsilon) {\n    if (-epsilon < b && b < epsilon) {\n      return 0;\n    }\n  } // check if they're flp equal\n\n\n  var ab = a - b;\n\n  if (ab * ab < EPSILON_SQ * a * b) {\n    return 0;\n  } // normal comparison\n\n\n  return a < b ? -1 : 1;\n};\n\n/**\n * This class rounds incoming values sufficiently so that\n * floating points problems are, for the most part, avoided.\n *\n * Incoming points are have their x & y values tested against\n * all previously seen x & y values. If either is 'too close'\n * to a previously seen value, it's value is 'snapped' to the\n * previously seen value.\n *\n * All points should be rounded by this class before being\n * stored in any data structures in the rest of this algorithm.\n */\n\nvar PtRounder = /*#__PURE__*/function () {\n  function PtRounder() {\n    _classCallCheck(this, PtRounder);\n\n    this.reset();\n  }\n\n  _createClass(PtRounder, [{\n    key: \"reset\",\n    value: function reset() {\n      this.xRounder = new CoordRounder();\n      this.yRounder = new CoordRounder();\n    }\n  }, {\n    key: \"round\",\n    value: function round(x, y) {\n      return {\n        x: this.xRounder.round(x),\n        y: this.yRounder.round(y)\n      };\n    }\n  }]);\n\n  return PtRounder;\n}();\n\nvar CoordRounder = /*#__PURE__*/function () {\n  function CoordRounder() {\n    _classCallCheck(this, CoordRounder);\n\n    this.tree = new SplayTree(); // preseed with 0 so we don't end up with values < Number.EPSILON\n\n    this.round(0);\n  } // Note: this can rounds input values backwards or forwards.\n  //       You might ask, why not restrict this to just rounding\n  //       forwards? Wouldn't that allow left endpoints to always\n  //       remain left endpoints during splitting (never change to\n  //       right). No - it wouldn't, because we snap intersections\n  //       to endpoints (to establish independence from the segment\n  //       angle for t-intersections).\n\n\n  _createClass(CoordRounder, [{\n    key: \"round\",\n    value: function round(coord) {\n      var node = this.tree.add(coord);\n      var prevNode = this.tree.prev(node);\n\n      if (prevNode !== null && cmp(node.key, prevNode.key) === 0) {\n        this.tree.remove(coord);\n        return prevNode.key;\n      }\n\n      var nextNode = this.tree.next(node);\n\n      if (nextNode !== null && cmp(node.key, nextNode.key) === 0) {\n        this.tree.remove(coord);\n        return nextNode.key;\n      }\n\n      return coord;\n    }\n  }]);\n\n  return CoordRounder;\n}(); // singleton available by import\n\n\nvar rounder = new PtRounder();\n\n/* Cross Product of two vectors with first point at origin */\n\nvar crossProduct = function crossProduct(a, b) {\n  return a.x * b.y - a.y * b.x;\n};\n/* Dot Product of two vectors with first point at origin */\n\nvar dotProduct = function dotProduct(a, b) {\n  return a.x * b.x + a.y * b.y;\n};\n/* Comparator for two vectors with same starting point */\n\nvar compareVectorAngles = function compareVectorAngles(basePt, endPt1, endPt2) {\n  var v1 = {\n    x: endPt1.x - basePt.x,\n    y: endPt1.y - basePt.y\n  };\n  var v2 = {\n    x: endPt2.x - basePt.x,\n    y: endPt2.y - basePt.y\n  };\n  var kross = crossProduct(v1, v2);\n  return cmp(kross, 0);\n};\nvar length = function length(v) {\n  return Math.sqrt(dotProduct(v, v));\n};\n/* Get the sine of the angle from pShared -> pAngle to pShaed -> pBase */\n\nvar sineOfAngle = function sineOfAngle(pShared, pBase, pAngle) {\n  var vBase = {\n    x: pBase.x - pShared.x,\n    y: pBase.y - pShared.y\n  };\n  var vAngle = {\n    x: pAngle.x - pShared.x,\n    y: pAngle.y - pShared.y\n  };\n  return crossProduct(vAngle, vBase) / length(vAngle) / length(vBase);\n};\n/* Get the cosine of the angle from pShared -> pAngle to pShaed -> pBase */\n\nvar cosineOfAngle = function cosineOfAngle(pShared, pBase, pAngle) {\n  var vBase = {\n    x: pBase.x - pShared.x,\n    y: pBase.y - pShared.y\n  };\n  var vAngle = {\n    x: pAngle.x - pShared.x,\n    y: pAngle.y - pShared.y\n  };\n  return dotProduct(vAngle, vBase) / length(vAngle) / length(vBase);\n};\n/* Get the x coordinate where the given line (defined by a point and vector)\n * crosses the horizontal line with the given y coordiante.\n * In the case of parrallel lines (including overlapping ones) returns null. */\n\nvar horizontalIntersection = function horizontalIntersection(pt, v, y) {\n  if (v.y === 0) return null;\n  return {\n    x: pt.x + v.x / v.y * (y - pt.y),\n    y: y\n  };\n};\n/* Get the y coordinate where the given line (defined by a point and vector)\n * crosses the vertical line with the given x coordiante.\n * In the case of parrallel lines (including overlapping ones) returns null. */\n\nvar verticalIntersection = function verticalIntersection(pt, v, x) {\n  if (v.x === 0) return null;\n  return {\n    x: x,\n    y: pt.y + v.y / v.x * (x - pt.x)\n  };\n};\n/* Get the intersection of two lines, each defined by a base point and a vector.\n * In the case of parrallel lines (including overlapping ones) returns null. */\n\nvar intersection = function intersection(pt1, v1, pt2, v2) {\n  // take some shortcuts for vertical and horizontal lines\n  // this also ensures we don't calculate an intersection and then discover\n  // it's actually outside the bounding box of the line\n  if (v1.x === 0) return verticalIntersection(pt2, v2, pt1.x);\n  if (v2.x === 0) return verticalIntersection(pt1, v1, pt2.x);\n  if (v1.y === 0) return horizontalIntersection(pt2, v2, pt1.y);\n  if (v2.y === 0) return horizontalIntersection(pt1, v1, pt2.y); // General case for non-overlapping segments.\n  // This algorithm is based on Schneider and Eberly.\n  // http://www.cimec.org.ar/~ncalvo/Schneider_Eberly.pdf - pg 244\n\n  var kross = crossProduct(v1, v2);\n  if (kross == 0) return null;\n  var ve = {\n    x: pt2.x - pt1.x,\n    y: pt2.y - pt1.y\n  };\n  var d1 = crossProduct(ve, v1) / kross;\n  var d2 = crossProduct(ve, v2) / kross; // take the average of the two calculations to minimize rounding error\n\n  var x1 = pt1.x + d2 * v1.x,\n      x2 = pt2.x + d1 * v2.x;\n  var y1 = pt1.y + d2 * v1.y,\n      y2 = pt2.y + d1 * v2.y;\n  var x = (x1 + x2) / 2;\n  var y = (y1 + y2) / 2;\n  return {\n    x: x,\n    y: y\n  };\n};\n\nvar SweepEvent = /*#__PURE__*/function () {\n  _createClass(SweepEvent, null, [{\n    key: \"compare\",\n    // for ordering sweep events in the sweep event queue\n    value: function compare(a, b) {\n      // favor event with a point that the sweep line hits first\n      var ptCmp = SweepEvent.comparePoints(a.point, b.point);\n      if (ptCmp !== 0) return ptCmp; // the points are the same, so link them if needed\n\n      if (a.point !== b.point) a.link(b); // favor right events over left\n\n      if (a.isLeft !== b.isLeft) return a.isLeft ? 1 : -1; // we have two matching left or right endpoints\n      // ordering of this case is the same as for their segments\n\n      return Segment.compare(a.segment, b.segment);\n    } // for ordering points in sweep line order\n\n  }, {\n    key: \"comparePoints\",\n    value: function comparePoints(aPt, bPt) {\n      if (aPt.x < bPt.x) return -1;\n      if (aPt.x > bPt.x) return 1;\n      if (aPt.y < bPt.y) return -1;\n      if (aPt.y > bPt.y) return 1;\n      return 0;\n    } // Warning: 'point' input will be modified and re-used (for performance)\n\n  }]);\n\n  function SweepEvent(point, isLeft) {\n    _classCallCheck(this, SweepEvent);\n\n    if (point.events === undefined) point.events = [this];else point.events.push(this);\n    this.point = point;\n    this.isLeft = isLeft; // this.segment, this.otherSE set by factory\n  }\n\n  _createClass(SweepEvent, [{\n    key: \"link\",\n    value: function link(other) {\n      if (other.point === this.point) {\n        throw new Error('Tried to link already linked events');\n      }\n\n      var otherEvents = other.point.events;\n\n      for (var i = 0, iMax = otherEvents.length; i < iMax; i++) {\n        var evt = otherEvents[i];\n        this.point.events.push(evt);\n        evt.point = this.point;\n      }\n\n      this.checkForConsuming();\n    }\n    /* Do a pass over our linked events and check to see if any pair\n     * of segments match, and should be consumed. */\n\n  }, {\n    key: \"checkForConsuming\",\n    value: function checkForConsuming() {\n      // FIXME: The loops in this method run O(n^2) => no good.\n      //        Maintain little ordered sweep event trees?\n      //        Can we maintaining an ordering that avoids the need\n      //        for the re-sorting with getLeftmostComparator in geom-out?\n      // Compare each pair of events to see if other events also match\n      var numEvents = this.point.events.length;\n\n      for (var i = 0; i < numEvents; i++) {\n        var evt1 = this.point.events[i];\n        if (evt1.segment.consumedBy !== undefined) continue;\n\n        for (var j = i + 1; j < numEvents; j++) {\n          var evt2 = this.point.events[j];\n          if (evt2.consumedBy !== undefined) continue;\n          if (evt1.otherSE.point.events !== evt2.otherSE.point.events) continue;\n          evt1.segment.consume(evt2.segment);\n        }\n      }\n    }\n  }, {\n    key: \"getAvailableLinkedEvents\",\n    value: function getAvailableLinkedEvents() {\n      // point.events is always of length 2 or greater\n      var events = [];\n\n      for (var i = 0, iMax = this.point.events.length; i < iMax; i++) {\n        var evt = this.point.events[i];\n\n        if (evt !== this && !evt.segment.ringOut && evt.segment.isInResult()) {\n          events.push(evt);\n        }\n      }\n\n      return events;\n    }\n    /**\n     * Returns a comparator function for sorting linked events that will\n     * favor the event that will give us the smallest left-side angle.\n     * All ring construction starts as low as possible heading to the right,\n     * so by always turning left as sharp as possible we'll get polygons\n     * without uncessary loops & holes.\n     *\n     * The comparator function has a compute cache such that it avoids\n     * re-computing already-computed values.\n     */\n\n  }, {\n    key: \"getLeftmostComparator\",\n    value: function getLeftmostComparator(baseEvent) {\n      var _this = this;\n\n      var cache = new Map();\n\n      var fillCache = function fillCache(linkedEvent) {\n        var nextEvent = linkedEvent.otherSE;\n        cache.set(linkedEvent, {\n          sine: sineOfAngle(_this.point, baseEvent.point, nextEvent.point),\n          cosine: cosineOfAngle(_this.point, baseEvent.point, nextEvent.point)\n        });\n      };\n\n      return function (a, b) {\n        if (!cache.has(a)) fillCache(a);\n        if (!cache.has(b)) fillCache(b);\n\n        var _cache$get = cache.get(a),\n            asine = _cache$get.sine,\n            acosine = _cache$get.cosine;\n\n        var _cache$get2 = cache.get(b),\n            bsine = _cache$get2.sine,\n            bcosine = _cache$get2.cosine; // both on or above x-axis\n\n\n        if (asine >= 0 && bsine >= 0) {\n          if (acosine < bcosine) return 1;\n          if (acosine > bcosine) return -1;\n          return 0;\n        } // both below x-axis\n\n\n        if (asine < 0 && bsine < 0) {\n          if (acosine < bcosine) return -1;\n          if (acosine > bcosine) return 1;\n          return 0;\n        } // one above x-axis, one below\n\n\n        if (bsine < asine) return -1;\n        if (bsine > asine) return 1;\n        return 0;\n      };\n    }\n  }]);\n\n  return SweepEvent;\n}();\n\n// segments and sweep events when all else is identical\n\nvar segmentId = 0;\n\nvar Segment = /*#__PURE__*/function () {\n  _createClass(Segment, null, [{\n    key: \"compare\",\n\n    /* This compare() function is for ordering segments in the sweep\n     * line tree, and does so according to the following criteria:\n     *\n     * Consider the vertical line that lies an infinestimal step to the\n     * right of the right-more of the two left endpoints of the input\n     * segments. Imagine slowly moving a point up from negative infinity\n     * in the increasing y direction. Which of the two segments will that\n     * point intersect first? That segment comes 'before' the other one.\n     *\n     * If neither segment would be intersected by such a line, (if one\n     * or more of the segments are vertical) then the line to be considered\n     * is directly on the right-more of the two left inputs.\n     */\n    value: function compare(a, b) {\n      var alx = a.leftSE.point.x;\n      var blx = b.leftSE.point.x;\n      var arx = a.rightSE.point.x;\n      var brx = b.rightSE.point.x; // check if they're even in the same vertical plane\n\n      if (brx < alx) return 1;\n      if (arx < blx) return -1;\n      var aly = a.leftSE.point.y;\n      var bly = b.leftSE.point.y;\n      var ary = a.rightSE.point.y;\n      var bry = b.rightSE.point.y; // is left endpoint of segment B the right-more?\n\n      if (alx < blx) {\n        // are the two segments in the same horizontal plane?\n        if (bly < aly && bly < ary) return 1;\n        if (bly > aly && bly > ary) return -1; // is the B left endpoint colinear to segment A?\n\n        var aCmpBLeft = a.comparePoint(b.leftSE.point);\n        if (aCmpBLeft < 0) return 1;\n        if (aCmpBLeft > 0) return -1; // is the A right endpoint colinear to segment B ?\n\n        var bCmpARight = b.comparePoint(a.rightSE.point);\n        if (bCmpARight !== 0) return bCmpARight; // colinear segments, consider the one with left-more\n        // left endpoint to be first (arbitrary?)\n\n        return -1;\n      } // is left endpoint of segment A the right-more?\n\n\n      if (alx > blx) {\n        if (aly < bly && aly < bry) return -1;\n        if (aly > bly && aly > bry) return 1; // is the A left endpoint colinear to segment B?\n\n        var bCmpALeft = b.comparePoint(a.leftSE.point);\n        if (bCmpALeft !== 0) return bCmpALeft; // is the B right endpoint colinear to segment A?\n\n        var aCmpBRight = a.comparePoint(b.rightSE.point);\n        if (aCmpBRight < 0) return 1;\n        if (aCmpBRight > 0) return -1; // colinear segments, consider the one with left-more\n        // left endpoint to be first (arbitrary?)\n\n        return 1;\n      } // if we get here, the two left endpoints are in the same\n      // vertical plane, ie alx === blx\n      // consider the lower left-endpoint to come first\n\n\n      if (aly < bly) return -1;\n      if (aly > bly) return 1; // left endpoints are identical\n      // check for colinearity by using the left-more right endpoint\n      // is the A right endpoint more left-more?\n\n      if (arx < brx) {\n        var _bCmpARight = b.comparePoint(a.rightSE.point);\n\n        if (_bCmpARight !== 0) return _bCmpARight;\n      } // is the B right endpoint more left-more?\n\n\n      if (arx > brx) {\n        var _aCmpBRight = a.comparePoint(b.rightSE.point);\n\n        if (_aCmpBRight < 0) return 1;\n        if (_aCmpBRight > 0) return -1;\n      }\n\n      if (arx !== brx) {\n        // are these two [almost] vertical segments with opposite orientation?\n        // if so, the one with the lower right endpoint comes first\n        var ay = ary - aly;\n        var ax = arx - alx;\n        var by = bry - bly;\n        var bx = brx - blx;\n        if (ay > ax && by < bx) return 1;\n        if (ay < ax && by > bx) return -1;\n      } // we have colinear segments with matching orientation\n      // consider the one with more left-more right endpoint to be first\n\n\n      if (arx > brx) return 1;\n      if (arx < brx) return -1; // if we get here, two two right endpoints are in the same\n      // vertical plane, ie arx === brx\n      // consider the lower right-endpoint to come first\n\n      if (ary < bry) return -1;\n      if (ary > bry) return 1; // right endpoints identical as well, so the segments are idential\n      // fall back on creation order as consistent tie-breaker\n\n      if (a.id < b.id) return -1;\n      if (a.id > b.id) return 1; // identical segment, ie a === b\n\n      return 0;\n    }\n    /* Warning: a reference to ringWindings input will be stored,\n     *  and possibly will be later modified */\n\n  }]);\n\n  function Segment(leftSE, rightSE, rings, windings) {\n    _classCallCheck(this, Segment);\n\n    this.id = ++segmentId;\n    this.leftSE = leftSE;\n    leftSE.segment = this;\n    leftSE.otherSE = rightSE;\n    this.rightSE = rightSE;\n    rightSE.segment = this;\n    rightSE.otherSE = leftSE;\n    this.rings = rings;\n    this.windings = windings; // left unset for performance, set later in algorithm\n    // this.ringOut, this.consumedBy, this.prev\n  }\n\n  _createClass(Segment, [{\n    key: \"replaceRightSE\",\n\n    /* When a segment is split, the rightSE is replaced with a new sweep event */\n    value: function replaceRightSE(newRightSE) {\n      this.rightSE = newRightSE;\n      this.rightSE.segment = this;\n      this.rightSE.otherSE = this.leftSE;\n      this.leftSE.otherSE = this.rightSE;\n    }\n  }, {\n    key: \"bbox\",\n    value: function bbox() {\n      var y1 = this.leftSE.point.y;\n      var y2 = this.rightSE.point.y;\n      return {\n        ll: {\n          x: this.leftSE.point.x,\n          y: y1 < y2 ? y1 : y2\n        },\n        ur: {\n          x: this.rightSE.point.x,\n          y: y1 > y2 ? y1 : y2\n        }\n      };\n    }\n    /* A vector from the left point to the right */\n\n  }, {\n    key: \"vector\",\n    value: function vector() {\n      return {\n        x: this.rightSE.point.x - this.leftSE.point.x,\n        y: this.rightSE.point.y - this.leftSE.point.y\n      };\n    }\n  }, {\n    key: \"isAnEndpoint\",\n    value: function isAnEndpoint(pt) {\n      return pt.x === this.leftSE.point.x && pt.y === this.leftSE.point.y || pt.x === this.rightSE.point.x && pt.y === this.rightSE.point.y;\n    }\n    /* Compare this segment with a point.\n     *\n     * A point P is considered to be colinear to a segment if there\n     * exists a distance D such that if we travel along the segment\n     * from one * endpoint towards the other a distance D, we find\n     * ourselves at point P.\n     *\n     * Return value indicates:\n     *\n     *   1: point lies above the segment (to the left of vertical)\n     *   0: point is colinear to segment\n     *  -1: point lies below the segment (to the right of vertical)\n     */\n\n  }, {\n    key: \"comparePoint\",\n    value: function comparePoint(point) {\n      if (this.isAnEndpoint(point)) return 0;\n      var lPt = this.leftSE.point;\n      var rPt = this.rightSE.point;\n      var v = this.vector(); // Exactly vertical segments.\n\n      if (lPt.x === rPt.x) {\n        if (point.x === lPt.x) return 0;\n        return point.x < lPt.x ? 1 : -1;\n      } // Nearly vertical segments with an intersection.\n      // Check to see where a point on the line with matching Y coordinate is.\n\n\n      var yDist = (point.y - lPt.y) / v.y;\n      var xFromYDist = lPt.x + yDist * v.x;\n      if (point.x === xFromYDist) return 0; // General case.\n      // Check to see where a point on the line with matching X coordinate is.\n\n      var xDist = (point.x - lPt.x) / v.x;\n      var yFromXDist = lPt.y + xDist * v.y;\n      if (point.y === yFromXDist) return 0;\n      return point.y < yFromXDist ? -1 : 1;\n    }\n    /**\n     * Given another segment, returns the first non-trivial intersection\n     * between the two segments (in terms of sweep line ordering), if it exists.\n     *\n     * A 'non-trivial' intersection is one that will cause one or both of the\n     * segments to be split(). As such, 'trivial' vs. 'non-trivial' intersection:\n     *\n     *   * endpoint of segA with endpoint of segB --> trivial\n     *   * endpoint of segA with point along segB --> non-trivial\n     *   * endpoint of segB with point along segA --> non-trivial\n     *   * point along segA with point along segB --> non-trivial\n     *\n     * If no non-trivial intersection exists, return null\n     * Else, return null.\n     */\n\n  }, {\n    key: \"getIntersection\",\n    value: function getIntersection(other) {\n      // If bboxes don't overlap, there can't be any intersections\n      var tBbox = this.bbox();\n      var oBbox = other.bbox();\n      var bboxOverlap = getBboxOverlap(tBbox, oBbox);\n      if (bboxOverlap === null) return null; // We first check to see if the endpoints can be considered intersections.\n      // This will 'snap' intersections to endpoints if possible, and will\n      // handle cases of colinearity.\n\n      var tlp = this.leftSE.point;\n      var trp = this.rightSE.point;\n      var olp = other.leftSE.point;\n      var orp = other.rightSE.point; // does each endpoint touch the other segment?\n      // note that we restrict the 'touching' definition to only allow segments\n      // to touch endpoints that lie forward from where we are in the sweep line pass\n\n      var touchesOtherLSE = isInBbox(tBbox, olp) && this.comparePoint(olp) === 0;\n      var touchesThisLSE = isInBbox(oBbox, tlp) && other.comparePoint(tlp) === 0;\n      var touchesOtherRSE = isInBbox(tBbox, orp) && this.comparePoint(orp) === 0;\n      var touchesThisRSE = isInBbox(oBbox, trp) && other.comparePoint(trp) === 0; // do left endpoints match?\n\n      if (touchesThisLSE && touchesOtherLSE) {\n        // these two cases are for colinear segments with matching left\n        // endpoints, and one segment being longer than the other\n        if (touchesThisRSE && !touchesOtherRSE) return trp;\n        if (!touchesThisRSE && touchesOtherRSE) return orp; // either the two segments match exactly (two trival intersections)\n        // or just on their left endpoint (one trivial intersection\n\n        return null;\n      } // does this left endpoint matches (other doesn't)\n\n\n      if (touchesThisLSE) {\n        // check for segments that just intersect on opposing endpoints\n        if (touchesOtherRSE) {\n          if (tlp.x === orp.x && tlp.y === orp.y) return null;\n        } // t-intersection on left endpoint\n\n\n        return tlp;\n      } // does other left endpoint matches (this doesn't)\n\n\n      if (touchesOtherLSE) {\n        // check for segments that just intersect on opposing endpoints\n        if (touchesThisRSE) {\n          if (trp.x === olp.x && trp.y === olp.y) return null;\n        } // t-intersection on left endpoint\n\n\n        return olp;\n      } // trivial intersection on right endpoints\n\n\n      if (touchesThisRSE && touchesOtherRSE) return null; // t-intersections on just one right endpoint\n\n      if (touchesThisRSE) return trp;\n      if (touchesOtherRSE) return orp; // None of our endpoints intersect. Look for a general intersection between\n      // infinite lines laid over the segments\n\n      var pt = intersection(tlp, this.vector(), olp, other.vector()); // are the segments parrallel? Note that if they were colinear with overlap,\n      // they would have an endpoint intersection and that case was already handled above\n\n      if (pt === null) return null; // is the intersection found between the lines not on the segments?\n\n      if (!isInBbox(bboxOverlap, pt)) return null; // round the the computed point if needed\n\n      return rounder.round(pt.x, pt.y);\n    }\n    /**\n     * Split the given segment into multiple segments on the given points.\n     *  * Each existing segment will retain its leftSE and a new rightSE will be\n     *    generated for it.\n     *  * A new segment will be generated which will adopt the original segment's\n     *    rightSE, and a new leftSE will be generated for it.\n     *  * If there are more than two points given to split on, new segments\n     *    in the middle will be generated with new leftSE and rightSE's.\n     *  * An array of the newly generated SweepEvents will be returned.\n     *\n     * Warning: input array of points is modified\n     */\n\n  }, {\n    key: \"split\",\n    value: function split(point) {\n      var newEvents = [];\n      var alreadyLinked = point.events !== undefined;\n      var newLeftSE = new SweepEvent(point, true);\n      var newRightSE = new SweepEvent(point, false);\n      var oldRightSE = this.rightSE;\n      this.replaceRightSE(newRightSE);\n      newEvents.push(newRightSE);\n      newEvents.push(newLeftSE);\n      var newSeg = new Segment(newLeftSE, oldRightSE, this.rings.slice(), this.windings.slice()); // when splitting a nearly vertical downward-facing segment,\n      // sometimes one of the resulting new segments is vertical, in which\n      // case its left and right events may need to be swapped\n\n      if (SweepEvent.comparePoints(newSeg.leftSE.point, newSeg.rightSE.point) > 0) {\n        newSeg.swapEvents();\n      }\n\n      if (SweepEvent.comparePoints(this.leftSE.point, this.rightSE.point) > 0) {\n        this.swapEvents();\n      } // in the point we just used to create new sweep events with was already\n      // linked to other events, we need to check if either of the affected\n      // segments should be consumed\n\n\n      if (alreadyLinked) {\n        newLeftSE.checkForConsuming();\n        newRightSE.checkForConsuming();\n      }\n\n      return newEvents;\n    }\n    /* Swap which event is left and right */\n\n  }, {\n    key: \"swapEvents\",\n    value: function swapEvents() {\n      var tmpEvt = this.rightSE;\n      this.rightSE = this.leftSE;\n      this.leftSE = tmpEvt;\n      this.leftSE.isLeft = true;\n      this.rightSE.isLeft = false;\n\n      for (var i = 0, iMax = this.windings.length; i < iMax; i++) {\n        this.windings[i] *= -1;\n      }\n    }\n    /* Consume another segment. We take their rings under our wing\n     * and mark them as consumed. Use for perfectly overlapping segments */\n\n  }, {\n    key: \"consume\",\n    value: function consume(other) {\n      var consumer = this;\n      var consumee = other;\n\n      while (consumer.consumedBy) {\n        consumer = consumer.consumedBy;\n      }\n\n      while (consumee.consumedBy) {\n        consumee = consumee.consumedBy;\n      }\n\n      var cmp = Segment.compare(consumer, consumee);\n      if (cmp === 0) return; // already consumed\n      // the winner of the consumption is the earlier segment\n      // according to sweep line ordering\n\n      if (cmp > 0) {\n        var tmp = consumer;\n        consumer = consumee;\n        consumee = tmp;\n      } // make sure a segment doesn't consume it's prev\n\n\n      if (consumer.prev === consumee) {\n        var _tmp = consumer;\n        consumer = consumee;\n        consumee = _tmp;\n      }\n\n      for (var i = 0, iMax = consumee.rings.length; i < iMax; i++) {\n        var ring = consumee.rings[i];\n        var winding = consumee.windings[i];\n        var index = consumer.rings.indexOf(ring);\n\n        if (index === -1) {\n          consumer.rings.push(ring);\n          consumer.windings.push(winding);\n        } else consumer.windings[index] += winding;\n      }\n\n      consumee.rings = null;\n      consumee.windings = null;\n      consumee.consumedBy = consumer; // mark sweep events consumed as to maintain ordering in sweep event queue\n\n      consumee.leftSE.consumedBy = consumer.leftSE;\n      consumee.rightSE.consumedBy = consumer.rightSE;\n    }\n    /* The first segment previous segment chain that is in the result */\n\n  }, {\n    key: \"prevInResult\",\n    value: function prevInResult() {\n      if (this._prevInResult !== undefined) return this._prevInResult;\n      if (!this.prev) this._prevInResult = null;else if (this.prev.isInResult()) this._prevInResult = this.prev;else this._prevInResult = this.prev.prevInResult();\n      return this._prevInResult;\n    }\n  }, {\n    key: \"beforeState\",\n    value: function beforeState() {\n      if (this._beforeState !== undefined) return this._beforeState;\n      if (!this.prev) this._beforeState = {\n        rings: [],\n        windings: [],\n        multiPolys: []\n      };else {\n        var seg = this.prev.consumedBy || this.prev;\n        this._beforeState = seg.afterState();\n      }\n      return this._beforeState;\n    }\n  }, {\n    key: \"afterState\",\n    value: function afterState() {\n      if (this._afterState !== undefined) return this._afterState;\n      var beforeState = this.beforeState();\n      this._afterState = {\n        rings: beforeState.rings.slice(0),\n        windings: beforeState.windings.slice(0),\n        multiPolys: []\n      };\n      var ringsAfter = this._afterState.rings;\n      var windingsAfter = this._afterState.windings;\n      var mpsAfter = this._afterState.multiPolys; // calculate ringsAfter, windingsAfter\n\n      for (var i = 0, iMax = this.rings.length; i < iMax; i++) {\n        var ring = this.rings[i];\n        var winding = this.windings[i];\n        var index = ringsAfter.indexOf(ring);\n\n        if (index === -1) {\n          ringsAfter.push(ring);\n          windingsAfter.push(winding);\n        } else windingsAfter[index] += winding;\n      } // calcualte polysAfter\n\n\n      var polysAfter = [];\n      var polysExclude = [];\n\n      for (var _i = 0, _iMax = ringsAfter.length; _i < _iMax; _i++) {\n        if (windingsAfter[_i] === 0) continue; // non-zero rule\n\n        var _ring = ringsAfter[_i];\n        var poly = _ring.poly;\n        if (polysExclude.indexOf(poly) !== -1) continue;\n        if (_ring.isExterior) polysAfter.push(poly);else {\n          if (polysExclude.indexOf(poly) === -1) polysExclude.push(poly);\n\n          var _index = polysAfter.indexOf(_ring.poly);\n\n          if (_index !== -1) polysAfter.splice(_index, 1);\n        }\n      } // calculate multiPolysAfter\n\n\n      for (var _i2 = 0, _iMax2 = polysAfter.length; _i2 < _iMax2; _i2++) {\n        var mp = polysAfter[_i2].multiPoly;\n        if (mpsAfter.indexOf(mp) === -1) mpsAfter.push(mp);\n      }\n\n      return this._afterState;\n    }\n    /* Is this segment part of the final result? */\n\n  }, {\n    key: \"isInResult\",\n    value: function isInResult() {\n      // if we've been consumed, we're not in the result\n      if (this.consumedBy) return false;\n      if (this._isInResult !== undefined) return this._isInResult;\n      var mpsBefore = this.beforeState().multiPolys;\n      var mpsAfter = this.afterState().multiPolys;\n\n      switch (operation.type) {\n        case 'union':\n          {\n            // UNION - included iff:\n            //  * On one side of us there is 0 poly interiors AND\n            //  * On the other side there is 1 or more.\n            var noBefores = mpsBefore.length === 0;\n            var noAfters = mpsAfter.length === 0;\n            this._isInResult = noBefores !== noAfters;\n            break;\n          }\n\n        case 'intersection':\n          {\n            // INTERSECTION - included iff:\n            //  * on one side of us all multipolys are rep. with poly interiors AND\n            //  * on the other side of us, not all multipolys are repsented\n            //    with poly interiors\n            var least;\n            var most;\n\n            if (mpsBefore.length < mpsAfter.length) {\n              least = mpsBefore.length;\n              most = mpsAfter.length;\n            } else {\n              least = mpsAfter.length;\n              most = mpsBefore.length;\n            }\n\n            this._isInResult = most === operation.numMultiPolys && least < most;\n            break;\n          }\n\n        case 'xor':\n          {\n            // XOR - included iff:\n            //  * the difference between the number of multipolys represented\n            //    with poly interiors on our two sides is an odd number\n            var diff = Math.abs(mpsBefore.length - mpsAfter.length);\n            this._isInResult = diff % 2 === 1;\n            break;\n          }\n\n        case 'difference':\n          {\n            // DIFFERENCE included iff:\n            //  * on exactly one side, we have just the subject\n            var isJustSubject = function isJustSubject(mps) {\n              return mps.length === 1 && mps[0].isSubject;\n            };\n\n            this._isInResult = isJustSubject(mpsBefore) !== isJustSubject(mpsAfter);\n            break;\n          }\n\n        default:\n          throw new Error(\"Unrecognized operation type found \".concat(operation.type));\n      }\n\n      return this._isInResult;\n    }\n  }], [{\n    key: \"fromRing\",\n    value: function fromRing(pt1, pt2, ring) {\n      var leftPt, rightPt, winding; // ordering the two points according to sweep line ordering\n\n      var cmpPts = SweepEvent.comparePoints(pt1, pt2);\n\n      if (cmpPts < 0) {\n        leftPt = pt1;\n        rightPt = pt2;\n        winding = 1;\n      } else if (cmpPts > 0) {\n        leftPt = pt2;\n        rightPt = pt1;\n        winding = -1;\n      } else throw new Error(\"Tried to create degenerate segment at [\".concat(pt1.x, \", \").concat(pt1.y, \"]\"));\n\n      var leftSE = new SweepEvent(leftPt, true);\n      var rightSE = new SweepEvent(rightPt, false);\n      return new Segment(leftSE, rightSE, [ring], [winding]);\n    }\n  }]);\n\n  return Segment;\n}();\n\nvar RingIn = /*#__PURE__*/function () {\n  function RingIn(geomRing, poly, isExterior) {\n    _classCallCheck(this, RingIn);\n\n    if (!Array.isArray(geomRing) || geomRing.length === 0) {\n      throw new Error('Input geometry is not a valid Polygon or MultiPolygon');\n    }\n\n    this.poly = poly;\n    this.isExterior = isExterior;\n    this.segments = [];\n\n    if (typeof geomRing[0][0] !== 'number' || typeof geomRing[0][1] !== 'number') {\n      throw new Error('Input geometry is not a valid Polygon or MultiPolygon');\n    }\n\n    var firstPoint = rounder.round(geomRing[0][0], geomRing[0][1]);\n    this.bbox = {\n      ll: {\n        x: firstPoint.x,\n        y: firstPoint.y\n      },\n      ur: {\n        x: firstPoint.x,\n        y: firstPoint.y\n      }\n    };\n    var prevPoint = firstPoint;\n\n    for (var i = 1, iMax = geomRing.length; i < iMax; i++) {\n      if (typeof geomRing[i][0] !== 'number' || typeof geomRing[i][1] !== 'number') {\n        throw new Error('Input geometry is not a valid Polygon or MultiPolygon');\n      }\n\n      var point = rounder.round(geomRing[i][0], geomRing[i][1]); // skip repeated points\n\n      if (point.x === prevPoint.x && point.y === prevPoint.y) continue;\n      this.segments.push(Segment.fromRing(prevPoint, point, this));\n      if (point.x < this.bbox.ll.x) this.bbox.ll.x = point.x;\n      if (point.y < this.bbox.ll.y) this.bbox.ll.y = point.y;\n      if (point.x > this.bbox.ur.x) this.bbox.ur.x = point.x;\n      if (point.y > this.bbox.ur.y) this.bbox.ur.y = point.y;\n      prevPoint = point;\n    } // add segment from last to first if last is not the same as first\n\n\n    if (firstPoint.x !== prevPoint.x || firstPoint.y !== prevPoint.y) {\n      this.segments.push(Segment.fromRing(prevPoint, firstPoint, this));\n    }\n  }\n\n  _createClass(RingIn, [{\n    key: \"getSweepEvents\",\n    value: function getSweepEvents() {\n      var sweepEvents = [];\n\n      for (var i = 0, iMax = this.segments.length; i < iMax; i++) {\n        var segment = this.segments[i];\n        sweepEvents.push(segment.leftSE);\n        sweepEvents.push(segment.rightSE);\n      }\n\n      return sweepEvents;\n    }\n  }]);\n\n  return RingIn;\n}();\nvar PolyIn = /*#__PURE__*/function () {\n  function PolyIn(geomPoly, multiPoly) {\n    _classCallCheck(this, PolyIn);\n\n    if (!Array.isArray(geomPoly)) {\n      throw new Error('Input geometry is not a valid Polygon or MultiPolygon');\n    }\n\n    this.exteriorRing = new RingIn(geomPoly[0], this, true); // copy by value\n\n    this.bbox = {\n      ll: {\n        x: this.exteriorRing.bbox.ll.x,\n        y: this.exteriorRing.bbox.ll.y\n      },\n      ur: {\n        x: this.exteriorRing.bbox.ur.x,\n        y: this.exteriorRing.bbox.ur.y\n      }\n    };\n    this.interiorRings = [];\n\n    for (var i = 1, iMax = geomPoly.length; i < iMax; i++) {\n      var ring = new RingIn(geomPoly[i], this, false);\n      if (ring.bbox.ll.x < this.bbox.ll.x) this.bbox.ll.x = ring.bbox.ll.x;\n      if (ring.bbox.ll.y < this.bbox.ll.y) this.bbox.ll.y = ring.bbox.ll.y;\n      if (ring.bbox.ur.x > this.bbox.ur.x) this.bbox.ur.x = ring.bbox.ur.x;\n      if (ring.bbox.ur.y > this.bbox.ur.y) this.bbox.ur.y = ring.bbox.ur.y;\n      this.interiorRings.push(ring);\n    }\n\n    this.multiPoly = multiPoly;\n  }\n\n  _createClass(PolyIn, [{\n    key: \"getSweepEvents\",\n    value: function getSweepEvents() {\n      var sweepEvents = this.exteriorRing.getSweepEvents();\n\n      for (var i = 0, iMax = this.interiorRings.length; i < iMax; i++) {\n        var ringSweepEvents = this.interiorRings[i].getSweepEvents();\n\n        for (var j = 0, jMax = ringSweepEvents.length; j < jMax; j++) {\n          sweepEvents.push(ringSweepEvents[j]);\n        }\n      }\n\n      return sweepEvents;\n    }\n  }]);\n\n  return PolyIn;\n}();\nvar MultiPolyIn = /*#__PURE__*/function () {\n  function MultiPolyIn(geom, isSubject) {\n    _classCallCheck(this, MultiPolyIn);\n\n    if (!Array.isArray(geom)) {\n      throw new Error('Input geometry is not a valid Polygon or MultiPolygon');\n    }\n\n    try {\n      // if the input looks like a polygon, convert it to a multipolygon\n      if (typeof geom[0][0][0] === 'number') geom = [geom];\n    } catch (ex) {// The input is either malformed or has empty arrays.\n      // In either case, it will be handled later on.\n    }\n\n    this.polys = [];\n    this.bbox = {\n      ll: {\n        x: Number.POSITIVE_INFINITY,\n        y: Number.POSITIVE_INFINITY\n      },\n      ur: {\n        x: Number.NEGATIVE_INFINITY,\n        y: Number.NEGATIVE_INFINITY\n      }\n    };\n\n    for (var i = 0, iMax = geom.length; i < iMax; i++) {\n      var poly = new PolyIn(geom[i], this);\n      if (poly.bbox.ll.x < this.bbox.ll.x) this.bbox.ll.x = poly.bbox.ll.x;\n      if (poly.bbox.ll.y < this.bbox.ll.y) this.bbox.ll.y = poly.bbox.ll.y;\n      if (poly.bbox.ur.x > this.bbox.ur.x) this.bbox.ur.x = poly.bbox.ur.x;\n      if (poly.bbox.ur.y > this.bbox.ur.y) this.bbox.ur.y = poly.bbox.ur.y;\n      this.polys.push(poly);\n    }\n\n    this.isSubject = isSubject;\n  }\n\n  _createClass(MultiPolyIn, [{\n    key: \"getSweepEvents\",\n    value: function getSweepEvents() {\n      var sweepEvents = [];\n\n      for (var i = 0, iMax = this.polys.length; i < iMax; i++) {\n        var polySweepEvents = this.polys[i].getSweepEvents();\n\n        for (var j = 0, jMax = polySweepEvents.length; j < jMax; j++) {\n          sweepEvents.push(polySweepEvents[j]);\n        }\n      }\n\n      return sweepEvents;\n    }\n  }]);\n\n  return MultiPolyIn;\n}();\n\nvar RingOut = /*#__PURE__*/function () {\n  _createClass(RingOut, null, [{\n    key: \"factory\",\n\n    /* Given the segments from the sweep line pass, compute & return a series\n     * of closed rings from all the segments marked to be part of the result */\n    value: function factory(allSegments) {\n      var ringsOut = [];\n\n      for (var i = 0, iMax = allSegments.length; i < iMax; i++) {\n        var segment = allSegments[i];\n        if (!segment.isInResult() || segment.ringOut) continue;\n        var prevEvent = null;\n        var event = segment.leftSE;\n        var nextEvent = segment.rightSE;\n        var events = [event];\n        var startingPoint = event.point;\n        var intersectionLEs = [];\n        /* Walk the chain of linked events to form a closed ring */\n\n        while (true) {\n          prevEvent = event;\n          event = nextEvent;\n          events.push(event);\n          /* Is the ring complete? */\n\n          if (event.point === startingPoint) break;\n\n          while (true) {\n            var availableLEs = event.getAvailableLinkedEvents();\n            /* Did we hit a dead end? This shouldn't happen. Indicates some earlier\n             * part of the algorithm malfunctioned... please file a bug report. */\n\n            if (availableLEs.length === 0) {\n              var firstPt = events[0].point;\n              var lastPt = events[events.length - 1].point;\n              throw new Error(\"Unable to complete output ring starting at [\".concat(firstPt.x, \",\") + \" \".concat(firstPt.y, \"]. Last matching segment found ends at\") + \" [\".concat(lastPt.x, \", \").concat(lastPt.y, \"].\"));\n            }\n            /* Only one way to go, so cotinue on the path */\n\n\n            if (availableLEs.length === 1) {\n              nextEvent = availableLEs[0].otherSE;\n              break;\n            }\n            /* We must have an intersection. Check for a completed loop */\n\n\n            var indexLE = null;\n\n            for (var j = 0, jMax = intersectionLEs.length; j < jMax; j++) {\n              if (intersectionLEs[j].point === event.point) {\n                indexLE = j;\n                break;\n              }\n            }\n            /* Found a completed loop. Cut that off and make a ring */\n\n\n            if (indexLE !== null) {\n              var intersectionLE = intersectionLEs.splice(indexLE)[0];\n              var ringEvents = events.splice(intersectionLE.index);\n              ringEvents.unshift(ringEvents[0].otherSE);\n              ringsOut.push(new RingOut(ringEvents.reverse()));\n              continue;\n            }\n            /* register the intersection */\n\n\n            intersectionLEs.push({\n              index: events.length,\n              point: event.point\n            });\n            /* Choose the left-most option to continue the walk */\n\n            var comparator = event.getLeftmostComparator(prevEvent);\n            nextEvent = availableLEs.sort(comparator)[0].otherSE;\n            break;\n          }\n        }\n\n        ringsOut.push(new RingOut(events));\n      }\n\n      return ringsOut;\n    }\n  }]);\n\n  function RingOut(events) {\n    _classCallCheck(this, RingOut);\n\n    this.events = events;\n\n    for (var i = 0, iMax = events.length; i < iMax; i++) {\n      events[i].segment.ringOut = this;\n    }\n\n    this.poly = null;\n  }\n\n  _createClass(RingOut, [{\n    key: \"getGeom\",\n    value: function getGeom() {\n      // Remove superfluous points (ie extra points along a straight line),\n      var prevPt = this.events[0].point;\n      var points = [prevPt];\n\n      for (var i = 1, iMax = this.events.length - 1; i < iMax; i++) {\n        var _pt = this.events[i].point;\n        var _nextPt = this.events[i + 1].point;\n        if (compareVectorAngles(_pt, prevPt, _nextPt) === 0) continue;\n        points.push(_pt);\n        prevPt = _pt;\n      } // ring was all (within rounding error of angle calc) colinear points\n\n\n      if (points.length === 1) return null; // check if the starting point is necessary\n\n      var pt = points[0];\n      var nextPt = points[1];\n      if (compareVectorAngles(pt, prevPt, nextPt) === 0) points.shift();\n      points.push(points[0]);\n      var step = this.isExteriorRing() ? 1 : -1;\n      var iStart = this.isExteriorRing() ? 0 : points.length - 1;\n      var iEnd = this.isExteriorRing() ? points.length : -1;\n      var orderedPoints = [];\n\n      for (var _i = iStart; _i != iEnd; _i += step) {\n        orderedPoints.push([points[_i].x, points[_i].y]);\n      }\n\n      return orderedPoints;\n    }\n  }, {\n    key: \"isExteriorRing\",\n    value: function isExteriorRing() {\n      if (this._isExteriorRing === undefined) {\n        var enclosing = this.enclosingRing();\n        this._isExteriorRing = enclosing ? !enclosing.isExteriorRing() : true;\n      }\n\n      return this._isExteriorRing;\n    }\n  }, {\n    key: \"enclosingRing\",\n    value: function enclosingRing() {\n      if (this._enclosingRing === undefined) {\n        this._enclosingRing = this._calcEnclosingRing();\n      }\n\n      return this._enclosingRing;\n    }\n    /* Returns the ring that encloses this one, if any */\n\n  }, {\n    key: \"_calcEnclosingRing\",\n    value: function _calcEnclosingRing() {\n      // start with the ealier sweep line event so that the prevSeg\n      // chain doesn't lead us inside of a loop of ours\n      var leftMostEvt = this.events[0];\n\n      for (var i = 1, iMax = this.events.length; i < iMax; i++) {\n        var evt = this.events[i];\n        if (SweepEvent.compare(leftMostEvt, evt) > 0) leftMostEvt = evt;\n      }\n\n      var prevSeg = leftMostEvt.segment.prevInResult();\n      var prevPrevSeg = prevSeg ? prevSeg.prevInResult() : null;\n\n      while (true) {\n        // no segment found, thus no ring can enclose us\n        if (!prevSeg) return null; // no segments below prev segment found, thus the ring of the prev\n        // segment must loop back around and enclose us\n\n        if (!prevPrevSeg) return prevSeg.ringOut; // if the two segments are of different rings, the ring of the prev\n        // segment must either loop around us or the ring of the prev prev\n        // seg, which would make us and the ring of the prev peers\n\n        if (prevPrevSeg.ringOut !== prevSeg.ringOut) {\n          if (prevPrevSeg.ringOut.enclosingRing() !== prevSeg.ringOut) {\n            return prevSeg.ringOut;\n          } else return prevSeg.ringOut.enclosingRing();\n        } // two segments are from the same ring, so this was a penisula\n        // of that ring. iterate downward, keep searching\n\n\n        prevSeg = prevPrevSeg.prevInResult();\n        prevPrevSeg = prevSeg ? prevSeg.prevInResult() : null;\n      }\n    }\n  }]);\n\n  return RingOut;\n}();\nvar PolyOut = /*#__PURE__*/function () {\n  function PolyOut(exteriorRing) {\n    _classCallCheck(this, PolyOut);\n\n    this.exteriorRing = exteriorRing;\n    exteriorRing.poly = this;\n    this.interiorRings = [];\n  }\n\n  _createClass(PolyOut, [{\n    key: \"addInterior\",\n    value: function addInterior(ring) {\n      this.interiorRings.push(ring);\n      ring.poly = this;\n    }\n  }, {\n    key: \"getGeom\",\n    value: function getGeom() {\n      var geom = [this.exteriorRing.getGeom()]; // exterior ring was all (within rounding error of angle calc) colinear points\n\n      if (geom[0] === null) return null;\n\n      for (var i = 0, iMax = this.interiorRings.length; i < iMax; i++) {\n        var ringGeom = this.interiorRings[i].getGeom(); // interior ring was all (within rounding error of angle calc) colinear points\n\n        if (ringGeom === null) continue;\n        geom.push(ringGeom);\n      }\n\n      return geom;\n    }\n  }]);\n\n  return PolyOut;\n}();\nvar MultiPolyOut = /*#__PURE__*/function () {\n  function MultiPolyOut(rings) {\n    _classCallCheck(this, MultiPolyOut);\n\n    this.rings = rings;\n    this.polys = this._composePolys(rings);\n  }\n\n  _createClass(MultiPolyOut, [{\n    key: \"getGeom\",\n    value: function getGeom() {\n      var geom = [];\n\n      for (var i = 0, iMax = this.polys.length; i < iMax; i++) {\n        var polyGeom = this.polys[i].getGeom(); // exterior ring was all (within rounding error of angle calc) colinear points\n\n        if (polyGeom === null) continue;\n        geom.push(polyGeom);\n      }\n\n      return geom;\n    }\n  }, {\n    key: \"_composePolys\",\n    value: function _composePolys(rings) {\n      var polys = [];\n\n      for (var i = 0, iMax = rings.length; i < iMax; i++) {\n        var ring = rings[i];\n        if (ring.poly) continue;\n        if (ring.isExteriorRing()) polys.push(new PolyOut(ring));else {\n          var enclosingRing = ring.enclosingRing();\n          if (!enclosingRing.poly) polys.push(new PolyOut(enclosingRing));\n          enclosingRing.poly.addInterior(ring);\n        }\n      }\n\n      return polys;\n    }\n  }]);\n\n  return MultiPolyOut;\n}();\n\n/**\n * NOTE:  We must be careful not to change any segments while\n *        they are in the SplayTree. AFAIK, there's no way to tell\n *        the tree to rebalance itself - thus before splitting\n *        a segment that's in the tree, we remove it from the tree,\n *        do the split, then re-insert it. (Even though splitting a\n *        segment *shouldn't* change its correct position in the\n *        sweep line tree, the reality is because of rounding errors,\n *        it sometimes does.)\n */\n\nvar SweepLine = /*#__PURE__*/function () {\n  function SweepLine(queue) {\n    var comparator = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : Segment.compare;\n\n    _classCallCheck(this, SweepLine);\n\n    this.queue = queue;\n    this.tree = new SplayTree(comparator);\n    this.segments = [];\n  }\n\n  _createClass(SweepLine, [{\n    key: \"process\",\n    value: function process(event) {\n      var segment = event.segment;\n      var newEvents = []; // if we've already been consumed by another segment,\n      // clean up our body parts and get out\n\n      if (event.consumedBy) {\n        if (event.isLeft) this.queue.remove(event.otherSE);else this.tree.remove(segment);\n        return newEvents;\n      }\n\n      var node = event.isLeft ? this.tree.insert(segment) : this.tree.find(segment);\n      if (!node) throw new Error(\"Unable to find segment #\".concat(segment.id, \" \") + \"[\".concat(segment.leftSE.point.x, \", \").concat(segment.leftSE.point.y, \"] -> \") + \"[\".concat(segment.rightSE.point.x, \", \").concat(segment.rightSE.point.y, \"] \") + 'in SweepLine tree. Please submit a bug report.');\n      var prevNode = node;\n      var nextNode = node;\n      var prevSeg = undefined;\n      var nextSeg = undefined; // skip consumed segments still in tree\n\n      while (prevSeg === undefined) {\n        prevNode = this.tree.prev(prevNode);\n        if (prevNode === null) prevSeg = null;else if (prevNode.key.consumedBy === undefined) prevSeg = prevNode.key;\n      } // skip consumed segments still in tree\n\n\n      while (nextSeg === undefined) {\n        nextNode = this.tree.next(nextNode);\n        if (nextNode === null) nextSeg = null;else if (nextNode.key.consumedBy === undefined) nextSeg = nextNode.key;\n      }\n\n      if (event.isLeft) {\n        // Check for intersections against the previous segment in the sweep line\n        var prevMySplitter = null;\n\n        if (prevSeg) {\n          var prevInter = prevSeg.getIntersection(segment);\n\n          if (prevInter !== null) {\n            if (!segment.isAnEndpoint(prevInter)) prevMySplitter = prevInter;\n\n            if (!prevSeg.isAnEndpoint(prevInter)) {\n              var newEventsFromSplit = this._splitSafely(prevSeg, prevInter);\n\n              for (var i = 0, iMax = newEventsFromSplit.length; i < iMax; i++) {\n                newEvents.push(newEventsFromSplit[i]);\n              }\n            }\n          }\n        } // Check for intersections against the next segment in the sweep line\n\n\n        var nextMySplitter = null;\n\n        if (nextSeg) {\n          var nextInter = nextSeg.getIntersection(segment);\n\n          if (nextInter !== null) {\n            if (!segment.isAnEndpoint(nextInter)) nextMySplitter = nextInter;\n\n            if (!nextSeg.isAnEndpoint(nextInter)) {\n              var _newEventsFromSplit = this._splitSafely(nextSeg, nextInter);\n\n              for (var _i = 0, _iMax = _newEventsFromSplit.length; _i < _iMax; _i++) {\n                newEvents.push(_newEventsFromSplit[_i]);\n              }\n            }\n          }\n        } // For simplicity, even if we find more than one intersection we only\n        // spilt on the 'earliest' (sweep-line style) of the intersections.\n        // The other intersection will be handled in a future process().\n\n\n        if (prevMySplitter !== null || nextMySplitter !== null) {\n          var mySplitter = null;\n          if (prevMySplitter === null) mySplitter = nextMySplitter;else if (nextMySplitter === null) mySplitter = prevMySplitter;else {\n            var cmpSplitters = SweepEvent.comparePoints(prevMySplitter, nextMySplitter);\n            mySplitter = cmpSplitters <= 0 ? prevMySplitter : nextMySplitter;\n          } // Rounding errors can cause changes in ordering,\n          // so remove afected segments and right sweep events before splitting\n\n          this.queue.remove(segment.rightSE);\n          newEvents.push(segment.rightSE);\n\n          var _newEventsFromSplit2 = segment.split(mySplitter);\n\n          for (var _i2 = 0, _iMax2 = _newEventsFromSplit2.length; _i2 < _iMax2; _i2++) {\n            newEvents.push(_newEventsFromSplit2[_i2]);\n          }\n        }\n\n        if (newEvents.length > 0) {\n          // We found some intersections, so re-do the current event to\n          // make sure sweep line ordering is totally consistent for later\n          // use with the segment 'prev' pointers\n          this.tree.remove(segment);\n          newEvents.push(event);\n        } else {\n          // done with left event\n          this.segments.push(segment);\n          segment.prev = prevSeg;\n        }\n      } else {\n        // event.isRight\n        // since we're about to be removed from the sweep line, check for\n        // intersections between our previous and next segments\n        if (prevSeg && nextSeg) {\n          var inter = prevSeg.getIntersection(nextSeg);\n\n          if (inter !== null) {\n            if (!prevSeg.isAnEndpoint(inter)) {\n              var _newEventsFromSplit3 = this._splitSafely(prevSeg, inter);\n\n              for (var _i3 = 0, _iMax3 = _newEventsFromSplit3.length; _i3 < _iMax3; _i3++) {\n                newEvents.push(_newEventsFromSplit3[_i3]);\n              }\n            }\n\n            if (!nextSeg.isAnEndpoint(inter)) {\n              var _newEventsFromSplit4 = this._splitSafely(nextSeg, inter);\n\n              for (var _i4 = 0, _iMax4 = _newEventsFromSplit4.length; _i4 < _iMax4; _i4++) {\n                newEvents.push(_newEventsFromSplit4[_i4]);\n              }\n            }\n          }\n        }\n\n        this.tree.remove(segment);\n      }\n\n      return newEvents;\n    }\n    /* Safely split a segment that is currently in the datastructures\n     * IE - a segment other than the one that is currently being processed. */\n\n  }, {\n    key: \"_splitSafely\",\n    value: function _splitSafely(seg, pt) {\n      // Rounding errors can cause changes in ordering,\n      // so remove afected segments and right sweep events before splitting\n      // removeNode() doesn't work, so have re-find the seg\n      // https://github.com/w8r/splay-tree/pull/5\n      this.tree.remove(seg);\n      var rightSE = seg.rightSE;\n      this.queue.remove(rightSE);\n      var newEvents = seg.split(pt);\n      newEvents.push(rightSE); // splitting can trigger consumption\n\n      if (seg.consumedBy === undefined) this.tree.insert(seg);\n      return newEvents;\n    }\n  }]);\n\n  return SweepLine;\n}();\n\nvar POLYGON_CLIPPING_MAX_QUEUE_SIZE = typeof process !== 'undefined' && process.env.POLYGON_CLIPPING_MAX_QUEUE_SIZE || 1000000;\nvar POLYGON_CLIPPING_MAX_SWEEPLINE_SEGMENTS = typeof process !== 'undefined' && process.env.POLYGON_CLIPPING_MAX_SWEEPLINE_SEGMENTS || 1000000;\nvar Operation = /*#__PURE__*/function () {\n  function Operation() {\n    _classCallCheck(this, Operation);\n  }\n\n  _createClass(Operation, [{\n    key: \"run\",\n    value: function run(type, geom, moreGeoms) {\n      operation.type = type;\n      rounder.reset();\n      /* Convert inputs to MultiPoly objects */\n\n      var multipolys = [new MultiPolyIn(geom, true)];\n\n      for (var i = 0, iMax = moreGeoms.length; i < iMax; i++) {\n        multipolys.push(new MultiPolyIn(moreGeoms[i], false));\n      }\n\n      operation.numMultiPolys = multipolys.length;\n      /* BBox optimization for difference operation\n       * If the bbox of a multipolygon that's part of the clipping doesn't\n       * intersect the bbox of the subject at all, we can just drop that\n       * multiploygon. */\n\n      if (operation.type === 'difference') {\n        // in place removal\n        var subject = multipolys[0];\n        var _i = 1;\n\n        while (_i < multipolys.length) {\n          if (getBboxOverlap(multipolys[_i].bbox, subject.bbox) !== null) _i++;else multipolys.splice(_i, 1);\n        }\n      }\n      /* BBox optimization for intersection operation\n       * If we can find any pair of multipolygons whose bbox does not overlap,\n       * then the result will be empty. */\n\n\n      if (operation.type === 'intersection') {\n        // TODO: this is O(n^2) in number of polygons. By sorting the bboxes,\n        //       it could be optimized to O(n * ln(n))\n        for (var _i2 = 0, _iMax = multipolys.length; _i2 < _iMax; _i2++) {\n          var mpA = multipolys[_i2];\n\n          for (var j = _i2 + 1, jMax = multipolys.length; j < jMax; j++) {\n            if (getBboxOverlap(mpA.bbox, multipolys[j].bbox) === null) return [];\n          }\n        }\n      }\n      /* Put segment endpoints in a priority queue */\n\n\n      var queue = new SplayTree(SweepEvent.compare);\n\n      for (var _i3 = 0, _iMax2 = multipolys.length; _i3 < _iMax2; _i3++) {\n        var sweepEvents = multipolys[_i3].getSweepEvents();\n\n        for (var _j = 0, _jMax = sweepEvents.length; _j < _jMax; _j++) {\n          queue.insert(sweepEvents[_j]);\n\n          if (queue.size > POLYGON_CLIPPING_MAX_QUEUE_SIZE) {\n            // prevents an infinite loop, an otherwise common manifestation of bugs\n            throw new Error('Infinite loop when putting segment endpoints in a priority queue ' + '(queue size too big). Please file a bug report.');\n          }\n        }\n      }\n      /* Pass the sweep line over those endpoints */\n\n\n      var sweepLine = new SweepLine(queue);\n      var prevQueueSize = queue.size;\n      var node = queue.pop();\n\n      while (node) {\n        var evt = node.key;\n\n        if (queue.size === prevQueueSize) {\n          // prevents an infinite loop, an otherwise common manifestation of bugs\n          var seg = evt.segment;\n          throw new Error(\"Unable to pop() \".concat(evt.isLeft ? 'left' : 'right', \" SweepEvent \") + \"[\".concat(evt.point.x, \", \").concat(evt.point.y, \"] from segment #\").concat(seg.id, \" \") + \"[\".concat(seg.leftSE.point.x, \", \").concat(seg.leftSE.point.y, \"] -> \") + \"[\".concat(seg.rightSE.point.x, \", \").concat(seg.rightSE.point.y, \"] from queue. \") + 'Please file a bug report.');\n        }\n\n        if (queue.size > POLYGON_CLIPPING_MAX_QUEUE_SIZE) {\n          // prevents an infinite loop, an otherwise common manifestation of bugs\n          throw new Error('Infinite loop when passing sweep line over endpoints ' + '(queue size too big). Please file a bug report.');\n        }\n\n        if (sweepLine.segments.length > POLYGON_CLIPPING_MAX_SWEEPLINE_SEGMENTS) {\n          // prevents an infinite loop, an otherwise common manifestation of bugs\n          throw new Error('Infinite loop when passing sweep line over endpoints ' + '(too many sweep line segments). Please file a bug report.');\n        }\n\n        var newEvents = sweepLine.process(evt);\n\n        for (var _i4 = 0, _iMax3 = newEvents.length; _i4 < _iMax3; _i4++) {\n          var _evt = newEvents[_i4];\n          if (_evt.consumedBy === undefined) queue.insert(_evt);\n        }\n\n        prevQueueSize = queue.size;\n        node = queue.pop();\n      } // free some memory we don't need anymore\n\n\n      rounder.reset();\n      /* Collect and compile segments we're keeping into a multipolygon */\n\n      var ringsOut = RingOut.factory(sweepLine.segments);\n      var result = new MultiPolyOut(ringsOut);\n      return result.getGeom();\n    }\n  }]);\n\n  return Operation;\n}(); // singleton available by import\n\nvar operation = new Operation();\n\nvar union = function union(geom) {\n  for (var _len = arguments.length, moreGeoms = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    moreGeoms[_key - 1] = arguments[_key];\n  }\n\n  return operation.run('union', geom, moreGeoms);\n};\n\nvar intersection$1 = function intersection(geom) {\n  for (var _len2 = arguments.length, moreGeoms = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n    moreGeoms[_key2 - 1] = arguments[_key2];\n  }\n\n  return operation.run('intersection', geom, moreGeoms);\n};\n\nvar xor = function xor(geom) {\n  for (var _len3 = arguments.length, moreGeoms = new Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {\n    moreGeoms[_key3 - 1] = arguments[_key3];\n  }\n\n  return operation.run('xor', geom, moreGeoms);\n};\n\nvar difference = function difference(subjectGeom) {\n  for (var _len4 = arguments.length, clippingGeoms = new Array(_len4 > 1 ? _len4 - 1 : 0), _key4 = 1; _key4 < _len4; _key4++) {\n    clippingGeoms[_key4 - 1] = arguments[_key4];\n  }\n\n  return operation.run('difference', subjectGeom, clippingGeoms);\n};\n\nvar index = {\n  union: union,\n  intersection: intersection$1,\n  xor: xor,\n  difference: difference\n};\n\nexport default index;\n","function DEFAULT_COMPARE (a, b) { return a > b ? 1 : a < b ? -1 : 0; }\n\nexport default class SplayTree {\n\n  constructor(compare = DEFAULT_COMPARE, noDuplicates = false) {\n    this._compare = compare;\n    this._root = null;\n    this._size = 0;\n    this._noDuplicates = !!noDuplicates;\n  }\n\n\n  rotateLeft(x) {\n    var y = x.right;\n    if (y) {\n      x.right = y.left;\n      if (y.left) y.left.parent = x;\n      y.parent = x.parent;\n    }\n\n    if (!x.parent)                this._root = y;\n    else if (x === x.parent.left) x.parent.left = y;\n    else                          x.parent.right = y;\n    if (y) y.left = x;\n    x.parent = y;\n  }\n\n\n  rotateRight(x) {\n    var y = x.left;\n    if (y) {\n      x.left = y.right;\n      if (y.right) y.right.parent = x;\n      y.parent = x.parent;\n    }\n\n    if (!x.parent)               this._root = y;\n    else if(x === x.parent.left) x.parent.left = y;\n    else                         x.parent.right = y;\n    if (y) y.right = x;\n    x.parent = y;\n  }\n\n\n  _splay(x) {\n    while (x.parent) {\n      var p = x.parent;\n      if (!p.parent) {\n        if (p.left === x) this.rotateRight(p);\n        else              this.rotateLeft(p);\n      } else if (p.left === x && p.parent.left === p) {\n        this.rotateRight(p.parent);\n        this.rotateRight(p);\n      } else if (p.right === x && p.parent.right === p) {\n        this.rotateLeft(p.parent);\n        this.rotateLeft(p);\n      } else if (p.left === x && p.parent.right === p) {\n        this.rotateRight(p);\n        this.rotateLeft(p);\n      } else {\n        this.rotateLeft(p);\n        this.rotateRight(p);\n      }\n    }\n  }\n\n\n  splay(x) {\n    var p, gp, ggp, l, r;\n\n    while (x.parent) {\n      p = x.parent;\n      gp = p.parent;\n\n      if (gp && gp.parent) {\n        ggp = gp.parent;\n        if (ggp.left === gp) ggp.left  = x;\n        else                 ggp.right = x;\n        x.parent = ggp;\n      } else {\n        x.parent = null;\n        this._root = x;\n      }\n\n      l = x.left; r = x.right;\n\n      if (x === p.left) { // left\n        if (gp) {\n          if (gp.left === p) {\n            /* zig-zig */\n            if (p.right) {\n              gp.left = p.right;\n              gp.left.parent = gp;\n            } else gp.left = null;\n\n            p.right   = gp;\n            gp.parent = p;\n          } else {\n            /* zig-zag */\n            if (l) {\n              gp.right = l;\n              l.parent = gp;\n            } else gp.right = null;\n\n            x.left    = gp;\n            gp.parent = x;\n          }\n        }\n        if (r) {\n          p.left = r;\n          r.parent = p;\n        } else p.left = null;\n\n        x.right  = p;\n        p.parent = x;\n      } else { // right\n        if (gp) {\n          if (gp.right === p) {\n            /* zig-zig */\n            if (p.left) {\n              gp.right = p.left;\n              gp.right.parent = gp;\n            } else gp.right = null;\n\n            p.left = gp;\n            gp.parent = p;\n          } else {\n            /* zig-zag */\n            if (r) {\n              gp.left = r;\n              r.parent = gp;\n            } else gp.left = null;\n\n            x.right   = gp;\n            gp.parent = x;\n          }\n        }\n        if (l) {\n          p.right = l;\n          l.parent = p;\n        } else p.right = null;\n\n        x.left   = p;\n        p.parent = x;\n      }\n    }\n  }\n\n\n  replace(u, v) {\n    if (!u.parent) this._root = v;\n    else if (u === u.parent.left) u.parent.left = v;\n    else u.parent.right = v;\n    if (v) v.parent = u.parent;\n  }\n\n\n  minNode(u = this._root) {\n    if (u) while (u.left) u = u.left;\n    return u;\n  }\n\n\n  maxNode(u = this._root) {\n    if (u) while (u.right) u = u.right;\n    return u;\n  }\n\n\n  insert(key, data) {\n    var z = this._root;\n    var p = null;\n    var comp = this._compare;\n    var cmp;\n\n    if (this._noDuplicates) {\n      while (z) {\n        p = z;\n        cmp = comp(z.key, key);\n        if (cmp === 0) return;\n        else if (comp(z.key, key) < 0) z = z.right;\n        else z = z.left;\n      }\n    } else {\n      while (z) {\n        p = z;\n        if (comp(z.key, key) < 0) z = z.right;\n        else z = z.left;\n      }\n    }\n\n    z = { key, data, left: null, right: null, parent: p };\n\n    if (!p)                          this._root = z;\n    else if (comp(p.key, z.key) < 0) p.right = z;\n    else                             p.left  = z;\n\n    this.splay(z);\n    this._size++;\n    return z;\n  }\n\n\n  find (key) {\n    var z    = this._root;\n    var comp = this._compare;\n    while (z) {\n      var cmp = comp(z.key, key);\n      if      (cmp < 0) z = z.right;\n      else if (cmp > 0) z = z.left;\n      else              return z;\n    }\n    return null;\n  }\n\n  /**\n   * Whether the tree contains a node with the given key\n   * @param  {Key} key\n   * @return {boolean} true/false\n   */\n  contains (key) {\n    var node       = this._root;\n    var comparator = this._compare;\n    while (node)  {\n      var cmp = comparator(key, node.key);\n      if      (cmp === 0) return true;\n      else if (cmp < 0)   node = node.left;\n      else                node = node.right;\n    }\n\n    return false;\n  }\n\n\n  remove (key) {\n    var z = this.find(key);\n\n    if (!z) return false;\n\n    this.splay(z);\n\n    if (!z.left) this.replace(z, z.right);\n    else if (!z.right) this.replace(z, z.left);\n    else {\n      var y = this.minNode(z.right);\n      if (y.parent !== z) {\n        this.replace(y, y.right);\n        y.right = z.right;\n        y.right.parent = y;\n      }\n      this.replace(z, y);\n      y.left = z.left;\n      y.left.parent = y;\n    }\n\n    this._size--;\n    return true;\n  }\n\n\n  removeNode(z) {\n    if (!z) return false;\n\n    this.splay(z);\n\n    if (!z.left) this.replace(z, z.right);\n    else if (!z.right) this.replace(z, z.left);\n    else {\n      var y = this.minNode(z.right);\n      if (y.parent !== z) {\n        this.replace(y, y.right);\n        y.right = z.right;\n        y.right.parent = y;\n      }\n      this.replace(z, y);\n      y.left = z.left;\n      y.left.parent = y;\n    }\n\n    this._size--;\n    return true;\n  }\n\n\n  erase (key) {\n    var z = this.find(key);\n    if (!z) return;\n\n    this.splay(z);\n\n    var s = z.left;\n    var t = z.right;\n\n    var sMax = null;\n    if (s) {\n      s.parent = null;\n      sMax = this.maxNode(s);\n      this.splay(sMax);\n      this._root = sMax;\n    }\n    if (t) {\n      if (s) sMax.right = t;\n      else   this._root = t;\n      t.parent = sMax;\n    }\n\n    this._size--;\n  }\n\n  /**\n   * Removes and returns the node with smallest key\n   * @return {?Node}\n   */\n  pop () {\n    var node = this._root, returnValue = null;\n    if (node) {\n      while (node.left) node = node.left;\n      returnValue = { key: node.key, data: node.data };\n      this.remove(node.key);\n    }\n    return returnValue;\n  }\n\n\n  /* eslint-disable class-methods-use-this */\n\n  /**\n   * Successor node\n   * @param  {Node} node\n   * @return {?Node}\n   */\n  next (node) {\n    var successor = node;\n    if (successor) {\n      if (successor.right) {\n        successor = successor.right;\n        while (successor && successor.left) successor = successor.left;\n      } else {\n        successor = node.parent;\n        while (successor && successor.right === node) {\n          node = successor; successor = successor.parent;\n        }\n      }\n    }\n    return successor;\n  }\n\n\n  /**\n   * Predecessor node\n   * @param  {Node} node\n   * @return {?Node}\n   */\n  prev (node) {\n    var predecessor = node;\n    if (predecessor) {\n      if (predecessor.left) {\n        predecessor = predecessor.left;\n        while (predecessor && predecessor.right) predecessor = predecessor.right;\n      } else {\n        predecessor = node.parent;\n        while (predecessor && predecessor.left === node) {\n          node = predecessor;\n          predecessor = predecessor.parent;\n        }\n      }\n    }\n    return predecessor;\n  }\n  /* eslint-enable class-methods-use-this */\n\n\n  /**\n   * @param  {forEachCallback} callback\n   * @return {SplayTree}\n   */\n  forEach(callback) {\n    var current = this._root;\n    var s = [], done = false, i = 0;\n\n    while (!done) {\n      // Reach the left most Node of the current Node\n      if (current) {\n        // Place pointer to a tree node on the stack\n        // before traversing the node's left subtree\n        s.push(current);\n        current = current.left;\n      } else {\n        // BackTrack from the empty subtree and visit the Node\n        // at the top of the stack; however, if the stack is\n        // empty you are done\n        if (s.length > 0) {\n          current = s.pop();\n          callback(current, i++);\n\n          // We have visited the node and its left\n          // subtree. Now, it's right subtree's turn\n          current = current.right;\n        } else done = true;\n      }\n    }\n    return this;\n  }\n\n\n  /**\n   * Walk key range from `low` to `high`. Stops if `fn` returns a value.\n   * @param  {Key}      low\n   * @param  {Key}      high\n   * @param  {Function} fn\n   * @param  {*?}       ctx\n   * @return {SplayTree}\n   */\n  range(low, high, fn, ctx) {\n    const Q = [];\n    const compare = this._compare;\n    let node = this._root, cmp;\n\n    while (Q.length !== 0 || node) {\n      if (node) {\n        Q.push(node);\n        node = node.left;\n      } else {\n        node = Q.pop();\n        cmp = compare(node.key, high);\n        if (cmp > 0) {\n          break;\n        } else if (compare(node.key, low) >= 0) {\n          if (fn.call(ctx, node)) return this; // stop if smth is returned\n        }\n        node = node.right;\n      }\n    }\n    return this;\n  }\n\n  /**\n   * Returns all keys in order\n   * @return {Array<Key>}\n   */\n  keys () {\n    var current = this._root;\n    var s = [], r = [], done = false;\n\n    while (!done) {\n      if (current) {\n        s.push(current);\n        current = current.left;\n      } else {\n        if (s.length > 0) {\n          current = s.pop();\n          r.push(current.key);\n          current = current.right;\n        } else done = true;\n      }\n    }\n    return r;\n  }\n\n\n  /**\n   * Returns `data` fields of all nodes in order.\n   * @return {Array<Value>}\n   */\n  values () {\n    var current = this._root;\n    var s = [], r = [], done = false;\n\n    while (!done) {\n      if (current) {\n        s.push(current);\n        current = current.left;\n      } else {\n        if (s.length > 0) {\n          current = s.pop();\n          r.push(current.data);\n          current = current.right;\n        } else done = true;\n      }\n    }\n    return r;\n  }\n\n\n  /**\n   * Returns node at given index\n   * @param  {number} index\n   * @return {?Node}\n   */\n  at (index) {\n    // removed after a consideration, more misleading than useful\n    // index = index % this.size;\n    // if (index < 0) index = this.size - index;\n\n    var current = this._root;\n    var s = [], done = false, i = 0;\n\n    while (!done) {\n      if (current) {\n        s.push(current);\n        current = current.left;\n      } else {\n        if (s.length > 0) {\n          current = s.pop();\n          if (i === index) return current;\n          i++;\n          current = current.right;\n        } else done = true;\n      }\n    }\n    return null;\n  }\n\n  /**\n   * Bulk-load items. Both array have to be same size\n   * @param  {Array<Key>}    keys\n   * @param  {Array<Value>}  [values]\n   * @param  {Boolean}       [presort=false] Pre-sort keys and values, using\n   *                                         tree's comparator. Sorting is done\n   *                                         in-place\n   * @return {AVLTree}\n   */\n  load(keys = [], values = [], presort = false) {\n    if (this._size !== 0) throw new Error('bulk-load: tree is not empty');\n    const size = keys.length;\n    if (presort) sort(keys, values, 0, size - 1, this._compare);\n    this._root = loadRecursive(null, keys, values, 0, size);\n    this._size = size;\n    return this;\n  }\n\n\n  min() {\n    var node = this.minNode(this._root);\n    if (node) return node.key;\n    else      return null;\n  }\n\n\n  max() {\n    var node = this.maxNode(this._root);\n    if (node) return node.key;\n    else      return null;\n  }\n\n  isEmpty() { return this._root === null; }\n  get size() { return this._size; }\n\n\n  /**\n   * Create a tree and load it with items\n   * @param  {Array<Key>}          keys\n   * @param  {Array<Value>?}        [values]\n\n   * @param  {Function?}            [comparator]\n   * @param  {Boolean?}             [presort=false] Pre-sort keys and values, using\n   *                                               tree's comparator. Sorting is done\n   *                                               in-place\n   * @param  {Boolean?}             [noDuplicates=false]   Allow duplicates\n   * @return {SplayTree}\n   */\n  static createTree(keys, values, comparator, presort, noDuplicates) {\n    return new SplayTree(comparator, noDuplicates).load(keys, values, presort);\n  }\n}\n\n\nfunction loadRecursive (parent, keys, values, start, end) {\n  const size = end - start;\n  if (size > 0) {\n    const middle = start + Math.floor(size / 2);\n    const key    = keys[middle];\n    const data   = values[middle];\n    const node   = { key, data, parent };\n    node.left    = loadRecursive(node, keys, values, start, middle);\n    node.right   = loadRecursive(node, keys, values, middle + 1, end);\n    return node;\n  }\n  return null;\n}\n\n\nfunction sort(keys, values, left, right, compare) {\n  if (left >= right) return;\n\n  const pivot = keys[(left + right) >> 1];\n  let i = left - 1;\n  let j = right + 1;\n\n  while (true) {\n    do i++; while (compare(keys[i], pivot) < 0);\n    do j--; while (compare(keys[j], pivot) > 0);\n    if (i >= j) break;\n\n    let tmp = keys[i];\n    keys[i] = keys[j];\n    keys[j] = tmp;\n\n    tmp = values[i];\n    values[i] = values[j];\n    values[j] = tmp;\n  }\n\n  sort(keys, values,  left,     j, compare);\n  sort(keys, values, j + 1, right, compare);\n}\n","import {\n  NORMAL,\n  SAME_TRANSITION,\n  DIFFERENT_TRANSITION,\n  NON_CONTRIBUTING\n} from './edge_type';\nimport {\n  INTERSECTION,\n  UNION,\n  DIFFERENCE,\n  XOR\n} from './operation';\n\n/**\n * @param  {SweepEvent} event\n * @param  {SweepEvent} prev\n * @param  {Operation} operation\n */\nexport default function computeFields (event, prev, operation) {\n  // compute inOut and otherInOut fields\n  if (prev === null) {\n    event.inOut      = false;\n    event.otherInOut = true;\n\n  // previous line segment in sweepline belongs to the same polygon\n  } else {\n    if (event.isSubject === prev.isSubject) {\n      event.inOut      = !prev.inOut;\n      event.otherInOut = prev.otherInOut;\n\n    // previous line segment in sweepline belongs to the clipping polygon\n    } else {\n      event.inOut      = !prev.otherInOut;\n      event.otherInOut = prev.isVertical() ? !prev.inOut : prev.inOut;\n    }\n\n    // compute prevInResult field\n    if (prev) {\n      event.prevInResult = (!inResult(prev, operation) || prev.isVertical())\n        ? prev.prevInResult : prev;\n    }\n  }\n\n  // check if the line segment belongs to the Boolean operation\n  let isInResult = inResult(event, operation);\n  if (isInResult) {\n    event.resultTransition = determineResultTransition(event, operation);\n  } else {\n    event.resultTransition = 0;\n  }\n}\n\n\n/* eslint-disable indent */\nfunction inResult(event, operation) {\n  switch (event.type) {\n    case NORMAL:\n      switch (operation) {\n        case INTERSECTION:\n          return !event.otherInOut;\n        case UNION:\n          return event.otherInOut;\n        case DIFFERENCE:\n          // return (event.isSubject && !event.otherInOut) ||\n          //         (!event.isSubject && event.otherInOut);\n          return (event.isSubject && event.otherInOut) ||\n                  (!event.isSubject && !event.otherInOut);\n        case XOR:\n          return true;\n      }\n      break;\n    case SAME_TRANSITION:\n      return operation === INTERSECTION || operation === UNION;\n    case DIFFERENT_TRANSITION:\n      return operation === DIFFERENCE;\n    case NON_CONTRIBUTING:\n      return false;\n  }\n  return false;\n}\n/* eslint-enable indent */\n\n\nfunction determineResultTransition(event, operation) {\n  let thisIn = !event.inOut;\n  let thatIn = !event.otherInOut;\n\n  let isIn;\n  switch (operation) {\n    case INTERSECTION:\n      isIn = thisIn && thatIn; break;\n    case UNION:\n      isIn = thisIn || thatIn; break;\n    case XOR:\n      isIn = thisIn ^ thatIn; break;\n    case DIFFERENCE:\n      if (event.isSubject) {\n        isIn = thisIn && !thatIn;\n      } else {\n        isIn = thatIn && !thisIn;\n      }\n      break;\n  }\n  return isIn ? +1 : -1;\n}\n","export const INTERSECTION = 0;\nexport const UNION        = 1;\nexport const DIFFERENCE   = 2;\nexport const XOR          = 3;\n","export const NORMAL               = 0;\nexport const NON_CONTRIBUTING     = 1;\nexport const SAME_TRANSITION      = 2;\nexport const DIFFERENT_TRANSITION = 3;\n","import { NORMAL } from './edge_type';\n\n\nexport default class SweepEvent {\n\n\n  /**\n   * Sweepline event\n   *\n   * @class {SweepEvent}\n   * @param {Array.<Number>}  point\n   * @param {Boolean}         left\n   * @param {SweepEvent=}     otherEvent\n   * @param {Boolean}         isSubject\n   * @param {Number}          edgeType\n   */\n  constructor (point, left, otherEvent, isSubject, edgeType) {\n\n    /**\n     * Is left endpoint?\n     * @type {Boolean}\n     */\n    this.left = left;\n\n    /**\n     * @type {Array.<Number>}\n     */\n    this.point = point;\n\n    /**\n     * Other edge reference\n     * @type {SweepEvent}\n     */\n    this.otherEvent = otherEvent;\n\n    /**\n     * Belongs to source or clipping polygon\n     * @type {Boolean}\n     */\n    this.isSubject = isSubject;\n\n    /**\n     * Edge contribution type\n     * @type {Number}\n     */\n    this.type = edgeType || NORMAL;\n\n\n    /**\n     * In-out transition for the sweepline crossing polygon\n     * @type {Boolean}\n     */\n    this.inOut = false;\n\n\n    /**\n     * @type {Boolean}\n     */\n    this.otherInOut = false;\n\n    /**\n     * Previous event in result?\n     * @type {SweepEvent}\n     */\n    this.prevInResult = null;\n\n    /**\n     * Type of result transition (0 = not in result, +1 = out-in, -1, in-out)\n     * @type {Number}\n     */\n    this.resultTransition = 0;\n\n    // connection step\n\n    /**\n     * @type {Number}\n     */\n    this.otherPos = -1;\n\n    /**\n     * @type {Number}\n     */\n    this.outputContourId = -1;\n\n    this.isExteriorRing = true;   // TODO: Looks unused, remove?\n  }\n\n\n  /**\n   * @param  {Array.<Number>}  p\n   * @return {Boolean}\n   */\n  isBelow (p) {\n    const p0 = this.point, p1 = this.otherEvent.point;\n    return this.left\n      ? (p0[0] - p[0]) * (p1[1] - p[1]) - (p1[0] - p[0]) * (p0[1] - p[1]) > 0\n      // signedArea(this.point, this.otherEvent.point, p) > 0 :\n      : (p1[0] - p[0]) * (p0[1] - p[1]) - (p0[0] - p[0]) * (p1[1] - p[1]) > 0;\n      //signedArea(this.otherEvent.point, this.point, p) > 0;\n  }\n\n\n  /**\n   * @param  {Array.<Number>}  p\n   * @return {Boolean}\n   */\n  isAbove (p) {\n    return !this.isBelow(p);\n  }\n\n\n  /**\n   * @return {Boolean}\n   */\n  isVertical () {\n    return this.point[0] === this.otherEvent.point[0];\n  }\n\n\n  /**\n   * Does event belong to result?\n   * @return {Boolean}\n   */\n  get inResult() {\n    return this.resultTransition !== 0;\n  }\n\n\n  clone () {\n    const copy = new SweepEvent(\n      this.point, this.left, this.otherEvent, this.isSubject, this.type);\n\n    copy.contourId        = this.contourId;\n    copy.resultTransition = this.resultTransition;\n    copy.prevInResult     = this.prevInResult;\n    copy.isExteriorRing   = this.isExteriorRing;\n    copy.inOut            = this.inOut;\n    copy.otherInOut       = this.otherInOut;\n\n    return copy;\n  }\n}\n","export default function equals(p1, p2) {\n  if (p1[0] === p2[0]) {\n    if (p1[1] === p2[1]) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n  return false;\n}\n\n// const EPSILON = 1e-9;\n// const abs = Math.abs;\n// TODO https://github.com/w8r/martinez/issues/6#issuecomment-262847164\n// Precision problem.\n//\n// module.exports = function equals(p1, p2) {\n//   return abs(p1[0] - p2[0]) <= EPSILON && abs(p1[1] - p2[1]) <= EPSILON;\n// };\n","export const epsilon = 1.1102230246251565e-16;\nexport const splitter = 134217729;\nexport const resulterrbound = (3 + 8 * epsilon) * epsilon;\n\n// fast_expansion_sum_zeroelim routine from oritinal code\nexport function sum(elen, e, flen, f, h) {\n    let Q, Qnew, hh, bvirt;\n    let enow = e[0];\n    let fnow = f[0];\n    let eindex = 0;\n    let findex = 0;\n    if ((fnow > enow) === (fnow > -enow)) {\n        Q = enow;\n        enow = e[++eindex];\n    } else {\n        Q = fnow;\n        fnow = f[++findex];\n    }\n    let hindex = 0;\n    if (eindex < elen && findex < flen) {\n        if ((fnow > enow) === (fnow > -enow)) {\n            Qnew = enow + Q;\n            hh = Q - (Qnew - enow);\n            enow = e[++eindex];\n        } else {\n            Qnew = fnow + Q;\n            hh = Q - (Qnew - fnow);\n            fnow = f[++findex];\n        }\n        Q = Qnew;\n        if (hh !== 0) {\n            h[hindex++] = hh;\n        }\n        while (eindex < elen && findex < flen) {\n            if ((fnow > enow) === (fnow > -enow)) {\n                Qnew = Q + enow;\n                bvirt = Qnew - Q;\n                hh = Q - (Qnew - bvirt) + (enow - bvirt);\n                enow = e[++eindex];\n            } else {\n                Qnew = Q + fnow;\n                bvirt = Qnew - Q;\n                hh = Q - (Qnew - bvirt) + (fnow - bvirt);\n                fnow = f[++findex];\n            }\n            Q = Qnew;\n            if (hh !== 0) {\n                h[hindex++] = hh;\n            }\n        }\n    }\n    while (eindex < elen) {\n        Qnew = Q + enow;\n        bvirt = Qnew - Q;\n        hh = Q - (Qnew - bvirt) + (enow - bvirt);\n        enow = e[++eindex];\n        Q = Qnew;\n        if (hh !== 0) {\n            h[hindex++] = hh;\n        }\n    }\n    while (findex < flen) {\n        Qnew = Q + fnow;\n        bvirt = Qnew - Q;\n        hh = Q - (Qnew - bvirt) + (fnow - bvirt);\n        fnow = f[++findex];\n        Q = Qnew;\n        if (hh !== 0) {\n            h[hindex++] = hh;\n        }\n    }\n    if (Q !== 0 || hindex === 0) {\n        h[hindex++] = Q;\n    }\n    return hindex;\n}\n\nexport function sum_three(alen, a, blen, b, clen, c, tmp, out) {\n    return sum(sum(alen, a, blen, b, tmp), tmp, clen, c, out);\n}\n\n// scale_expansion_zeroelim routine from oritinal code\nexport function scale(elen, e, b, h) {\n    let Q, sum, hh, product1, product0;\n    let bvirt, c, ahi, alo, bhi, blo;\n\n    c = splitter * b;\n    bhi = c - (c - b);\n    blo = b - bhi;\n    let enow = e[0];\n    Q = enow * b;\n    c = splitter * enow;\n    ahi = c - (c - enow);\n    alo = enow - ahi;\n    hh = alo * blo - (Q - ahi * bhi - alo * bhi - ahi * blo);\n    let hindex = 0;\n    if (hh !== 0) {\n        h[hindex++] = hh;\n    }\n    for (let i = 1; i < elen; i++) {\n        enow = e[i];\n        product1 = enow * b;\n        c = splitter * enow;\n        ahi = c - (c - enow);\n        alo = enow - ahi;\n        product0 = alo * blo - (product1 - ahi * bhi - alo * bhi - ahi * blo);\n        sum = Q + product0;\n        bvirt = sum - Q;\n        hh = Q - (sum - bvirt) + (product0 - bvirt);\n        if (hh !== 0) {\n            h[hindex++] = hh;\n        }\n        Q = product1 + sum;\n        hh = sum - (Q - product1);\n        if (hh !== 0) {\n            h[hindex++] = hh;\n        }\n    }\n    if (Q !== 0 || hindex === 0) {\n        h[hindex++] = Q;\n    }\n    return hindex;\n}\n\nexport function negate(elen, e) {\n    for (let i = 0; i < elen; i++) e[i] = -e[i];\n    return elen;\n}\n\nexport function estimate(elen, e) {\n    let Q = e[0];\n    for (let i = 1; i < elen; i++) Q += e[i];\n    return Q;\n}\n\nexport function vec(n) {\n    return new Float64Array(n);\n}\n","import {epsilon, splitter, resulterrbound, estimate, vec, sum} from './util.js';\n\nconst ccwerrboundA = (3 + 16 * epsilon) * epsilon;\nconst ccwerrboundB = (2 + 12 * epsilon) * epsilon;\nconst ccwerrboundC = (9 + 64 * epsilon) * epsilon * epsilon;\n\nconst B = vec(4);\nconst C1 = vec(8);\nconst C2 = vec(12);\nconst D = vec(16);\nconst u = vec(4);\n\nfunction orient2dadapt(ax, ay, bx, by, cx, cy, detsum) {\n    let acxtail, acytail, bcxtail, bcytail;\n    let bvirt, c, ahi, alo, bhi, blo, _i, _j, _0, s1, s0, t1, t0, u3;\n\n    const acx = ax - cx;\n    const bcx = bx - cx;\n    const acy = ay - cy;\n    const bcy = by - cy;\n\n    s1 = acx * bcy;\n    c = splitter * acx;\n    ahi = c - (c - acx);\n    alo = acx - ahi;\n    c = splitter * bcy;\n    bhi = c - (c - bcy);\n    blo = bcy - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = acy * bcx;\n    c = splitter * acy;\n    ahi = c - (c - acy);\n    alo = acy - ahi;\n    c = splitter * bcx;\n    bhi = c - (c - bcx);\n    blo = bcx - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    B[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    B[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    B[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    B[3] = u3;\n\n    let det = estimate(4, B);\n    let errbound = ccwerrboundB * detsum;\n    if (det >= errbound || -det >= errbound) {\n        return det;\n    }\n\n    bvirt = ax - acx;\n    acxtail = ax - (acx + bvirt) + (bvirt - cx);\n    bvirt = bx - bcx;\n    bcxtail = bx - (bcx + bvirt) + (bvirt - cx);\n    bvirt = ay - acy;\n    acytail = ay - (acy + bvirt) + (bvirt - cy);\n    bvirt = by - bcy;\n    bcytail = by - (bcy + bvirt) + (bvirt - cy);\n\n    if (acxtail === 0 && acytail === 0 && bcxtail === 0 && bcytail === 0) {\n        return det;\n    }\n\n    errbound = ccwerrboundC * detsum + resulterrbound * Math.abs(det);\n    det += (acx * bcytail + bcy * acxtail) - (acy * bcxtail + bcx * acytail);\n    if (det >= errbound || -det >= errbound) return det;\n\n    s1 = acxtail * bcy;\n    c = splitter * acxtail;\n    ahi = c - (c - acxtail);\n    alo = acxtail - ahi;\n    c = splitter * bcy;\n    bhi = c - (c - bcy);\n    blo = bcy - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = acytail * bcx;\n    c = splitter * acytail;\n    ahi = c - (c - acytail);\n    alo = acytail - ahi;\n    c = splitter * bcx;\n    bhi = c - (c - bcx);\n    blo = bcx - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    u[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    u[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    u[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    u[3] = u3;\n    const C1len = sum(4, B, 4, u, C1);\n\n    s1 = acx * bcytail;\n    c = splitter * acx;\n    ahi = c - (c - acx);\n    alo = acx - ahi;\n    c = splitter * bcytail;\n    bhi = c - (c - bcytail);\n    blo = bcytail - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = acy * bcxtail;\n    c = splitter * acy;\n    ahi = c - (c - acy);\n    alo = acy - ahi;\n    c = splitter * bcxtail;\n    bhi = c - (c - bcxtail);\n    blo = bcxtail - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    u[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    u[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    u[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    u[3] = u3;\n    const C2len = sum(C1len, C1, 4, u, C2);\n\n    s1 = acxtail * bcytail;\n    c = splitter * acxtail;\n    ahi = c - (c - acxtail);\n    alo = acxtail - ahi;\n    c = splitter * bcytail;\n    bhi = c - (c - bcytail);\n    blo = bcytail - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = acytail * bcxtail;\n    c = splitter * acytail;\n    ahi = c - (c - acytail);\n    alo = acytail - ahi;\n    c = splitter * bcxtail;\n    bhi = c - (c - bcxtail);\n    blo = bcxtail - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    u[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    u[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    u[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    u[3] = u3;\n    const Dlen = sum(C2len, C2, 4, u, D);\n\n    return D[Dlen - 1];\n}\n\nexport function orient2d(ax, ay, bx, by, cx, cy) {\n    const detleft = (ay - cy) * (bx - cx);\n    const detright = (ax - cx) * (by - cy);\n    const det = detleft - detright;\n\n    if (detleft === 0 || detright === 0 || (detleft > 0) !== (detright > 0)) return det;\n\n    const detsum = Math.abs(detleft + detright);\n    if (Math.abs(det) >= ccwerrboundA * detsum) return det;\n\n    return -orient2dadapt(ax, ay, bx, by, cx, cy, detsum);\n}\n\nexport function orient2dfast(ax, ay, bx, by, cx, cy) {\n    return (ay - cy) * (bx - cx) - (ax - cx) * (by - cy);\n}\n","import {orient2d} from 'robust-predicates';\n\n/**\n * Signed area of the triangle (p0, p1, p2)\n * @param  {Array.<Number>} p0\n * @param  {Array.<Number>} p1\n * @param  {Array.<Number>} p2\n * @return {Number}\n */\nexport default function signedArea(p0, p1, p2) {\n  const res = orient2d(p0[0], p0[1], p1[0], p1[1], p2[0], p2[1]);\n  if (res > 0) return -1;\n  if (res < 0) return 1;\n  return 0;\n}\n","import signedArea from './signed_area';\n\n/**\n * @param  {SweepEvent} e1\n * @param  {SweepEvent} e2\n * @return {Number}\n */\nexport default function compareEvents(e1, e2) {\n  const p1 = e1.point;\n  const p2 = e2.point;\n\n  // Different x-coordinate\n  if (p1[0] > p2[0]) return 1;\n  if (p1[0] < p2[0]) return -1;\n\n  // Different points, but same x-coordinate\n  // Event with lower y-coordinate is processed first\n  if (p1[1] !== p2[1]) return p1[1] > p2[1] ? 1 : -1;\n\n  return specialCases(e1, e2, p1, p2);\n}\n\n\n/* eslint-disable no-unused-vars */\nfunction specialCases(e1, e2, p1, p2) {\n  // Same coordinates, but one is a left endpoint and the other is\n  // a right endpoint. The right endpoint is processed first\n  if (e1.left !== e2.left)\n    return e1.left ? 1 : -1;\n\n  // const p2 = e1.otherEvent.point, p3 = e2.otherEvent.point;\n  // const sa = (p1[0] - p3[0]) * (p2[1] - p3[1]) - (p2[0] - p3[0]) * (p1[1] - p3[1])\n  // Same coordinates, both events\n  // are left endpoints or right endpoints.\n  // not collinear\n  if (signedArea(p1, e1.otherEvent.point, e2.otherEvent.point) !== 0) {\n    // the event associate to the bottom segment is processed first\n    return (!e1.isBelow(e2.otherEvent.point)) ? 1 : -1;\n  }\n\n  return (!e1.isSubject && e2.isSubject) ? 1 : -1;\n}\n/* eslint-enable no-unused-vars */\n","import SweepEvent    from './sweep_event';\nimport equals        from './equals';\nimport compareEvents from './compare_events';\n\n/**\n * @param  {SweepEvent} se\n * @param  {Array.<Number>} p\n * @param  {Queue} queue\n * @return {Queue}\n */\nexport default function divideSegment(se, p, queue)  {\n  const r = new SweepEvent(p, false, se,            se.isSubject);\n  const l = new SweepEvent(p, true,  se.otherEvent, se.isSubject);\n\n  /* eslint-disable no-console */\n  if (equals(se.point, se.otherEvent.point)) {\n    console.warn('what is that, a collapsed segment?', se);\n  }\n  /* eslint-enable no-console */\n\n  r.contourId = l.contourId = se.contourId;\n\n  // avoid a rounding error. The left event would be processed after the right event\n  if (compareEvents(l, se.otherEvent) > 0) {\n    se.otherEvent.left = true;\n    l.left = false;\n  }\n\n  // avoid a rounding error. The left event would be processed after the right event\n  // if (compareEvents(se, r) > 0) {}\n\n  se.otherEvent.otherEvent = l;\n  se.otherEvent = r;\n\n  queue.push(l);\n  queue.push(r);\n\n  return queue;\n}\n","//const EPS = 1e-9;\n\n/**\n * Finds the magnitude of the cross product of two vectors (if we pretend\n * they're in three dimensions)\n *\n * @param {Object} a First vector\n * @param {Object} b Second vector\n * @private\n * @returns {Number} The magnitude of the cross product\n */\nfunction crossProduct(a, b) {\n  return (a[0] * b[1]) - (a[1] * b[0]);\n}\n\n/**\n * Finds the dot product of two vectors.\n *\n * @param {Object} a First vector\n * @param {Object} b Second vector\n * @private\n * @returns {Number} The dot product\n */\nfunction dotProduct(a, b) {\n  return (a[0] * b[0]) + (a[1] * b[1]);\n}\n\n/**\n * Finds the intersection (if any) between two line segments a and b, given the\n * line segments' end points a1, a2 and b1, b2.\n *\n * This algorithm is based on Schneider and Eberly.\n * http://www.cimec.org.ar/~ncalvo/Schneider_Eberly.pdf\n * Page 244.\n *\n * @param {Array.<Number>} a1 point of first line\n * @param {Array.<Number>} a2 point of first line\n * @param {Array.<Number>} b1 point of second line\n * @param {Array.<Number>} b2 point of second line\n * @param {Boolean=}       noEndpointTouch whether to skip single touchpoints\n *                                         (meaning connected segments) as\n *                                         intersections\n * @returns {Array.<Array.<Number>>|Null} If the lines intersect, the point of\n * intersection. If they overlap, the two end points of the overlapping segment.\n * Otherwise, null.\n */\nexport default function (a1, a2, b1, b2, noEndpointTouch) {\n  // The algorithm expects our lines in the form P + sd, where P is a point,\n  // s is on the interval [0, 1], and d is a vector.\n  // We are passed two points. P can be the first point of each pair. The\n  // vector, then, could be thought of as the distance (in x and y components)\n  // from the first point to the second point.\n  // So first, let's make our vectors:\n  const va = [a2[0] - a1[0], a2[1] - a1[1]];\n  const vb = [b2[0] - b1[0], b2[1] - b1[1]];\n  // We also define a function to convert back to regular point form:\n\n  /* eslint-disable arrow-body-style */\n\n  function toPoint(p, s, d) {\n    return [\n      p[0] + s * d[0],\n      p[1] + s * d[1]\n    ];\n  }\n\n  /* eslint-enable arrow-body-style */\n\n  // The rest is pretty much a straight port of the algorithm.\n  const e = [b1[0] - a1[0], b1[1] - a1[1]];\n  let kross    = crossProduct(va, vb);\n  let sqrKross = kross * kross;\n  const sqrLenA  = dotProduct(va, va);\n  //const sqrLenB  = dotProduct(vb, vb);\n\n  // Check for line intersection. This works because of the properties of the\n  // cross product -- specifically, two vectors are parallel if and only if the\n  // cross product is the 0 vector. The full calculation involves relative error\n  // to account for possible very small line segments. See Schneider & Eberly\n  // for details.\n  if (sqrKross > 0/* EPS * sqrLenB * sqLenA */) {\n    // If they're not parallel, then (because these are line segments) they\n    // still might not actually intersect. This code checks that the\n    // intersection point of the lines is actually on both line segments.\n    const s = crossProduct(e, vb) / kross;\n    if (s < 0 || s > 1) {\n      // not on line segment a\n      return null;\n    }\n    const t = crossProduct(e, va) / kross;\n    if (t < 0 || t > 1) {\n      // not on line segment b\n      return null;\n    }\n    if (s === 0 || s === 1) {\n      // on an endpoint of line segment a\n      return noEndpointTouch ? null : [toPoint(a1, s, va)];\n    }\n    if (t === 0 || t === 1) {\n      // on an endpoint of line segment b\n      return noEndpointTouch ? null : [toPoint(b1, t, vb)];\n    }\n    return [toPoint(a1, s, va)];\n  }\n\n  // If we've reached this point, then the lines are either parallel or the\n  // same, but the segments could overlap partially or fully, or not at all.\n  // So we need to find the overlap, if any. To do that, we can use e, which is\n  // the (vector) difference between the two initial points. If this is parallel\n  // with the line itself, then the two lines are the same line, and there will\n  // be overlap.\n  //const sqrLenE = dotProduct(e, e);\n  kross = crossProduct(e, va);\n  sqrKross = kross * kross;\n\n  if (sqrKross > 0 /* EPS * sqLenB * sqLenE */) {\n  // Lines are just parallel, not the same. No overlap.\n    return null;\n  }\n\n  const sa = dotProduct(va, e) / sqrLenA;\n  const sb = sa + dotProduct(va, vb) / sqrLenA;\n  const smin = Math.min(sa, sb);\n  const smax = Math.max(sa, sb);\n\n  // this is, essentially, the FindIntersection acting on floats from\n  // Schneider & Eberly, just inlined into this function.\n  if (smin <= 1 && smax >= 0) {\n\n    // overlap on an end point\n    if (smin === 1) {\n      return noEndpointTouch ? null : [toPoint(a1, smin > 0 ? smin : 0, va)];\n    }\n\n    if (smax === 0) {\n      return noEndpointTouch ? null : [toPoint(a1, smax < 1 ? smax : 1, va)];\n    }\n\n    if (noEndpointTouch && smin === 0 && smax === 1) return null;\n\n    // There's overlap on a segment -- two points of intersection. Return both.\n    return [\n      toPoint(a1, smin > 0 ? smin : 0, va),\n      toPoint(a1, smax < 1 ? smax : 1, va)\n    ];\n  }\n\n  return null;\n}\n","import divideSegment from './divide_segment';\nimport intersection  from './segment_intersection';\nimport equals        from './equals';\nimport compareEvents from './compare_events';\nimport {\n  NON_CONTRIBUTING,\n  SAME_TRANSITION,\n  DIFFERENT_TRANSITION\n} from './edge_type';\n\n/**\n * @param  {SweepEvent} se1\n * @param  {SweepEvent} se2\n * @param  {Queue}      queue\n * @return {Number}\n */\nexport default function possibleIntersection (se1, se2, queue) {\n  // that disallows self-intersecting polygons,\n  // did cost us half a day, so I'll leave it\n  // out of respect\n  // if (se1.isSubject === se2.isSubject) return;\n  const inter = intersection(\n    se1.point, se1.otherEvent.point,\n    se2.point, se2.otherEvent.point\n  );\n\n  const nintersections = inter ? inter.length : 0;\n  if (nintersections === 0) return 0; // no intersection\n\n  // the line segments intersect at an endpoint of both line segments\n  if ((nintersections === 1) &&\n      (equals(se1.point, se2.point) ||\n       equals(se1.otherEvent.point, se2.otherEvent.point))) {\n    return 0;\n  }\n\n  if (nintersections === 2 && se1.isSubject === se2.isSubject) {\n    // if(se1.contourId === se2.contourId){\n    // console.warn('Edges of the same polygon overlap',\n    //   se1.point, se1.otherEvent.point, se2.point, se2.otherEvent.point);\n    // }\n    //throw new Error('Edges of the same polygon overlap');\n    return 0;\n  }\n\n  // The line segments associated to se1 and se2 intersect\n  if (nintersections === 1) {\n\n    // if the intersection point is not an endpoint of se1\n    if (!equals(se1.point, inter[0]) && !equals(se1.otherEvent.point, inter[0])) {\n      divideSegment(se1, inter[0], queue);\n    }\n\n    // if the intersection point is not an endpoint of se2\n    if (!equals(se2.point, inter[0]) && !equals(se2.otherEvent.point, inter[0])) {\n      divideSegment(se2, inter[0], queue);\n    }\n    return 1;\n  }\n\n  // The line segments associated to se1 and se2 overlap\n  const events        = [];\n  let leftCoincide  = false;\n  let rightCoincide = false;\n\n  if (equals(se1.point, se2.point)) {\n    leftCoincide = true; // linked\n  } else if (compareEvents(se1, se2) === 1) {\n    events.push(se2, se1);\n  } else {\n    events.push(se1, se2);\n  }\n\n  if (equals(se1.otherEvent.point, se2.otherEvent.point)) {\n    rightCoincide = true;\n  } else if (compareEvents(se1.otherEvent, se2.otherEvent) === 1) {\n    events.push(se2.otherEvent, se1.otherEvent);\n  } else {\n    events.push(se1.otherEvent, se2.otherEvent);\n  }\n\n  if ((leftCoincide && rightCoincide) || leftCoincide) {\n    // both line segments are equal or share the left endpoint\n    se2.type = NON_CONTRIBUTING;\n    se1.type = (se2.inOut === se1.inOut)\n      ? SAME_TRANSITION : DIFFERENT_TRANSITION;\n\n    if (leftCoincide && !rightCoincide) {\n      // honestly no idea, but changing events selection from [2, 1]\n      // to [0, 1] fixes the overlapping self-intersecting polygons issue\n      divideSegment(events[1].otherEvent, events[0].point, queue);\n    }\n    return 2;\n  }\n\n  // the line segments share the right endpoint\n  if (rightCoincide) {\n    divideSegment(events[0], events[1].point, queue);\n    return 3;\n  }\n\n  // no line segment includes totally the other one\n  if (events[0] !== events[3].otherEvent) {\n    divideSegment(events[0], events[1].point, queue);\n    divideSegment(events[1], events[2].point, queue);\n    return 3;\n  }\n\n  // one line segment includes the other one\n  divideSegment(events[0], events[1].point, queue);\n  divideSegment(events[3].otherEvent, events[2].point, queue);\n\n  return 3;\n}\n","import signedArea    from './signed_area';\nimport compareEvents from './compare_events';\nimport equals        from './equals';\n\n\n/**\n * @param  {SweepEvent} le1\n * @param  {SweepEvent} le2\n * @return {Number}\n */\nexport default function compareSegments(le1, le2) {\n  if (le1 === le2) return 0;\n\n  // Segments are not collinear\n  if (signedArea(le1.point, le1.otherEvent.point, le2.point) !== 0 ||\n    signedArea(le1.point, le1.otherEvent.point, le2.otherEvent.point) !== 0) {\n\n    // If they share their left endpoint use the right endpoint to sort\n    if (equals(le1.point, le2.point)) return le1.isBelow(le2.otherEvent.point) ? -1 : 1;\n\n    // Different left endpoint: use the left endpoint to sort\n    if (le1.point[0] === le2.point[0]) return le1.point[1] < le2.point[1] ? -1 : 1;\n\n    // has the line segment associated to e1 been inserted\n    // into S after the line segment associated to e2 ?\n    if (compareEvents(le1, le2) === 1) return le2.isAbove(le1.point) ? -1 : 1;\n\n    // The line segment associated to e2 has been inserted\n    // into S after the line segment associated to e1\n    return le1.isBelow(le2.point) ? -1 : 1;\n  }\n\n  if (le1.isSubject === le2.isSubject) { // same polygon\n    let p1 = le1.point, p2 = le2.point;\n    if (p1[0] === p2[0] && p1[1] === p2[1]/*equals(le1.point, le2.point)*/) {\n      p1 = le1.otherEvent.point; p2 = le2.otherEvent.point;\n      if (p1[0] === p2[0] && p1[1] === p2[1]) return 0;\n      else return le1.contourId > le2.contourId ? 1 : -1;\n    }\n  } else { // Segments are collinear, but belong to separate polygons\n    return le1.isSubject ? -1 : 1;\n  }\n\n  return compareEvents(le1, le2) === 1 ? 1 : -1;\n}\n","export default class Contour {\n\n  /**\n   * Contour\n   *\n   * @class {Contour}\n   */\n  constructor() {\n    this.points = [];\n    this.holeIds = [];\n    this.holeOf = null;\n    this.depth = null;\n  }\n\n  isExterior() {\n    return this.holeOf == null;\n  }\n\n}\n","import compareEvents from './compare_events';\nimport Contour from './contour';\n\n/**\n * @param  {Array.<SweepEvent>} sortedEvents\n * @return {Array.<SweepEvent>}\n */\nfunction orderEvents(sortedEvents) {\n  let event, i, len, tmp;\n  const resultEvents = [];\n  for (i = 0, len = sortedEvents.length; i < len; i++) {\n    event = sortedEvents[i];\n    if ((event.left && event.inResult) ||\n      (!event.left && event.otherEvent.inResult)) {\n      resultEvents.push(event);\n    }\n  }\n  // Due to overlapping edges the resultEvents array can be not wholly sorted\n  let sorted = false;\n  while (!sorted) {\n    sorted = true;\n    for (i = 0, len = resultEvents.length; i < len; i++) {\n      if ((i + 1) < len &&\n        compareEvents(resultEvents[i], resultEvents[i + 1]) === 1) {\n        tmp = resultEvents[i];\n        resultEvents[i] = resultEvents[i + 1];\n        resultEvents[i + 1] = tmp;\n        sorted = false;\n      }\n    }\n  }\n\n\n  for (i = 0, len = resultEvents.length; i < len; i++) {\n    event = resultEvents[i];\n    event.otherPos = i;\n  }\n\n  // imagine, the right event is found in the beginning of the queue,\n  // when his left counterpart is not marked yet\n  for (i = 0, len = resultEvents.length; i < len; i++) {\n    event = resultEvents[i];\n    if (!event.left) {\n      tmp = event.otherPos;\n      event.otherPos = event.otherEvent.otherPos;\n      event.otherEvent.otherPos = tmp;\n    }\n  }\n\n  return resultEvents;\n}\n\n\n/**\n * @param  {Number} pos\n * @param  {Array.<SweepEvent>} resultEvents\n * @param  {Object>}    processed\n * @return {Number}\n */\nfunction nextPos(pos, resultEvents, processed, origPos) {\n  let newPos = pos + 1,\n      p = resultEvents[pos].point,\n      p1;\n  const length = resultEvents.length;\n\n  if (newPos < length)\n    p1 = resultEvents[newPos].point;\n\n  while (newPos < length && p1[0] === p[0] && p1[1] === p[1]) {\n    if (!processed[newPos]) {\n      return newPos;\n    } else   {\n      newPos++;\n    }\n    p1 = resultEvents[newPos].point;\n  }\n\n  newPos = pos - 1;\n\n  while (processed[newPos] && newPos > origPos) {\n    newPos--;\n  }\n\n  return newPos;\n}\n\n\nfunction initializeContourFromContext(event, contours, contourId) {\n  const contour = new Contour();\n  if (event.prevInResult != null) {\n    const prevInResult = event.prevInResult;\n    // Note that it is valid to query the \"previous in result\" for its output contour id,\n    // because we must have already processed it (i.e., assigned an output contour id)\n    // in an earlier iteration, otherwise it wouldn't be possible that it is \"previous in\n    // result\".\n    const lowerContourId = prevInResult.outputContourId;\n    const lowerResultTransition = prevInResult.resultTransition;\n    if (lowerResultTransition > 0) {\n      // We are inside. Now we have to check if the thing below us is another hole or\n      // an exterior contour.\n      const lowerContour = contours[lowerContourId];\n      if (lowerContour.holeOf != null) {\n        // The lower contour is a hole => Connect the new contour as a hole to its parent,\n        // and use same depth.\n        const parentContourId = lowerContour.holeOf;\n        contours[parentContourId].holeIds.push(contourId);\n        contour.holeOf = parentContourId;\n        contour.depth = contours[lowerContourId].depth;\n      } else {\n        // The lower contour is an exterior contour => Connect the new contour as a hole,\n        // and increment depth.\n        contours[lowerContourId].holeIds.push(contourId);\n        contour.holeOf = lowerContourId;\n        contour.depth = contours[lowerContourId].depth + 1;\n      }\n    } else {\n      // We are outside => this contour is an exterior contour of same depth.\n      contour.holeOf = null;\n      contour.depth = contours[lowerContourId].depth;\n    }\n  } else {\n    // There is no lower/previous contour => this contour is an exterior contour of depth 0.\n    contour.holeOf = null;\n    contour.depth = 0;\n  }\n  return contour;\n}\n\n/**\n * @param  {Array.<SweepEvent>} sortedEvents\n * @return {Array.<*>} polygons\n */\nexport default function connectEdges(sortedEvents) {\n  let i, len;\n  const resultEvents = orderEvents(sortedEvents);\n\n  // \"false\"-filled array\n  const processed = {};\n  const contours = [];\n\n  for (i = 0, len = resultEvents.length; i < len; i++) {\n\n    if (processed[i]) {\n      continue;\n    }\n\n    const contourId = contours.length;\n    const contour = initializeContourFromContext(resultEvents[i], contours, contourId);\n\n    // Helper function that combines marking an event as processed with assigning its output contour ID\n    const markAsProcessed = (pos) => {\n      processed[pos] = true;\n      resultEvents[pos].outputContourId = contourId;\n    };\n\n    let pos = i;\n    let origPos = i;\n\n    const initial = resultEvents[i].point;\n    contour.points.push(initial);\n\n    /* eslint no-constant-condition: \"off\" */\n    while (true) {\n      markAsProcessed(pos);\n\n      pos = resultEvents[pos].otherPos;\n\n      markAsProcessed(pos);\n      contour.points.push(resultEvents[pos].point);\n\n      pos = nextPos(pos, resultEvents, processed, origPos);\n\n      if (pos == origPos) {\n        break;\n      }\n    }\n\n    contours.push(contour);\n  }\n\n  return contours;\n}\n","'use strict';\n\nmodule.exports = TinyQueue;\nmodule.exports.default = TinyQueue;\n\nfunction TinyQueue(data, compare) {\n    if (!(this instanceof TinyQueue)) return new TinyQueue(data, compare);\n\n    this.data = data || [];\n    this.length = this.data.length;\n    this.compare = compare || defaultCompare;\n\n    if (this.length > 0) {\n        for (var i = (this.length >> 1) - 1; i >= 0; i--) this._down(i);\n    }\n}\n\nfunction defaultCompare(a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n}\n\nTinyQueue.prototype = {\n\n    push: function (item) {\n        this.data.push(item);\n        this.length++;\n        this._up(this.length - 1);\n    },\n\n    pop: function () {\n        if (this.length === 0) return undefined;\n\n        var top = this.data[0];\n        this.length--;\n\n        if (this.length > 0) {\n            this.data[0] = this.data[this.length];\n            this._down(0);\n        }\n        this.data.pop();\n\n        return top;\n    },\n\n    peek: function () {\n        return this.data[0];\n    },\n\n    _up: function (pos) {\n        var data = this.data;\n        var compare = this.compare;\n        var item = data[pos];\n\n        while (pos > 0) {\n            var parent = (pos - 1) >> 1;\n            var current = data[parent];\n            if (compare(item, current) >= 0) break;\n            data[pos] = current;\n            pos = parent;\n        }\n\n        data[pos] = item;\n    },\n\n    _down: function (pos) {\n        var data = this.data;\n        var compare = this.compare;\n        var halfLength = this.length >> 1;\n        var item = data[pos];\n\n        while (pos < halfLength) {\n            var left = (pos << 1) + 1;\n            var right = left + 1;\n            var best = data[left];\n\n            if (right < this.length && compare(data[right], best) < 0) {\n                left = right;\n                best = data[right];\n            }\n            if (compare(best, item) >= 0) break;\n\n            data[pos] = best;\n            pos = left;\n        }\n\n        data[pos] = item;\n    }\n};\n","import Queue           from 'tinyqueue';\nimport SweepEvent      from './sweep_event';\nimport compareEvents   from './compare_events';\nimport { DIFFERENCE }  from './operation';\n\nconst max = Math.max;\nconst min = Math.min;\n\nlet contourId = 0;\n\n\nfunction processPolygon(contourOrHole, isSubject, depth, Q, bbox, isExteriorRing) {\n  let i, len, s1, s2, e1, e2;\n  for (i = 0, len = contourOrHole.length - 1; i < len; i++) {\n    s1 = contourOrHole[i];\n    s2 = contourOrHole[i + 1];\n    e1 = new SweepEvent(s1, false, undefined, isSubject);\n    e2 = new SweepEvent(s2, false, e1,        isSubject);\n    e1.otherEvent = e2;\n\n    if (s1[0] === s2[0] && s1[1] === s2[1]) {\n      continue; // skip collapsed edges, or it breaks\n    }\n\n    e1.contourId = e2.contourId = depth;\n    if (!isExteriorRing) {\n      e1.isExteriorRing = false;\n      e2.isExteriorRing = false;\n    }\n    if (compareEvents(e1, e2) > 0) {\n      e2.left = true;\n    } else {\n      e1.left = true;\n    }\n\n    const x = s1[0], y = s1[1];\n    bbox[0] = min(bbox[0], x);\n    bbox[1] = min(bbox[1], y);\n    bbox[2] = max(bbox[2], x);\n    bbox[3] = max(bbox[3], y);\n\n    // Pushing it so the queue is sorted from left to right,\n    // with object on the left having the highest priority.\n    Q.push(e1);\n    Q.push(e2);\n  }\n}\n\n\nexport default function fillQueue(subject, clipping, sbbox, cbbox, operation) {\n  const eventQueue = new Queue(null, compareEvents);\n  let polygonSet, isExteriorRing, i, ii, j, jj; //, k, kk;\n\n  for (i = 0, ii = subject.length; i < ii; i++) {\n    polygonSet = subject[i];\n    for (j = 0, jj = polygonSet.length; j < jj; j++) {\n      isExteriorRing = j === 0;\n      if (isExteriorRing) contourId++;\n      processPolygon(polygonSet[j], true, contourId, eventQueue, sbbox, isExteriorRing);\n    }\n  }\n\n  for (i = 0, ii = clipping.length; i < ii; i++) {\n    polygonSet = clipping[i];\n    for (j = 0, jj = polygonSet.length; j < jj; j++) {\n      isExteriorRing = j === 0;\n      if (operation === DIFFERENCE) isExteriorRing = false;\n      if (isExteriorRing) contourId++;\n      processPolygon(polygonSet[j], false, contourId, eventQueue, cbbox, isExteriorRing);\n    }\n  }\n\n  return eventQueue;\n}\n","import subdivideSegments from './subdivide_segments';\nimport connectEdges      from './connect_edges';\nimport fillQueue         from './fill_queue';\nimport {\n  INTERSECTION,\n  DIFFERENCE,\n  UNION,\n  XOR\n}        from './operation';\n\nconst EMPTY = [];\n\n\nfunction trivialOperation(subject, clipping, operation) {\n  let result = null;\n  if (subject.length * clipping.length === 0) {\n    if        (operation === INTERSECTION) {\n      result = EMPTY;\n    } else if (operation === DIFFERENCE) {\n      result = subject;\n    } else if (operation === UNION ||\n               operation === XOR) {\n      result = (subject.length === 0) ? clipping : subject;\n    }\n  }\n  return result;\n}\n\n\nfunction compareBBoxes(subject, clipping, sbbox, cbbox, operation) {\n  let result = null;\n  if (sbbox[0] > cbbox[2] ||\n      cbbox[0] > sbbox[2] ||\n      sbbox[1] > cbbox[3] ||\n      cbbox[1] > sbbox[3]) {\n    if        (operation === INTERSECTION) {\n      result = EMPTY;\n    } else if (operation === DIFFERENCE) {\n      result = subject;\n    } else if (operation === UNION ||\n               operation === XOR) {\n      result = subject.concat(clipping);\n    }\n  }\n  return result;\n}\n\n\nexport default function boolean(subject, clipping, operation) {\n  if (typeof subject[0][0][0] === 'number') {\n    subject = [subject];\n  }\n  if (typeof clipping[0][0][0] === 'number') {\n    clipping = [clipping];\n  }\n  let trivial = trivialOperation(subject, clipping, operation);\n  if (trivial) {\n    return trivial === EMPTY ? null : trivial;\n  }\n  const sbbox = [Infinity, Infinity, -Infinity, -Infinity];\n  const cbbox = [Infinity, Infinity, -Infinity, -Infinity];\n\n  // console.time('fill queue');\n  const eventQueue = fillQueue(subject, clipping, sbbox, cbbox, operation);\n  //console.timeEnd('fill queue');\n\n  trivial = compareBBoxes(subject, clipping, sbbox, cbbox, operation);\n  if (trivial) {\n    return trivial === EMPTY ? null : trivial;\n  }\n  // console.time('subdivide edges');\n  const sortedEvents = subdivideSegments(eventQueue, subject, clipping, sbbox, cbbox, operation);\n  //console.timeEnd('subdivide edges');\n\n  // console.time('connect vertices');\n  const contours = connectEdges(sortedEvents, operation);\n  //console.timeEnd('connect vertices');\n\n  // Convert contours to polygons\n  const polygons = [];\n  for (let i = 0; i < contours.length; i++) {\n    let contour = contours[i];\n    if (contour.isExterior()) {\n      // The exterior ring goes first\n      let rings = [contour.points];\n      // Followed by holes if any\n      for (let j = 0; j < contour.holeIds.length; j++) {\n        let holeId = contour.holeIds[j];\n        rings.push(contours[holeId].points);\n      }\n      polygons.push(rings);\n    }\n  }\n\n  return polygons;\n}\n","import Tree                 from 'splaytree';\nimport computeFields        from './compute_fields';\nimport possibleIntersection from './possible_intersection';\nimport compareSegments      from './compare_segments';\nimport {\n  INTERSECTION,\n  DIFFERENCE\n} from './operation';\n\n\nexport default function subdivide(eventQueue, subject, clipping, sbbox, cbbox, operation) {\n  const sweepLine = new Tree(compareSegments);\n  const sortedEvents = [];\n\n  const rightbound = Math.min(sbbox[2], cbbox[2]);\n\n  let prev, next, begin;\n\n  while (eventQueue.length !== 0) {\n    let event = eventQueue.pop();\n    sortedEvents.push(event);\n\n    // optimization by bboxes for intersection and difference goes here\n    if ((operation === INTERSECTION && event.point[0] > rightbound) ||\n        (operation === DIFFERENCE   && event.point[0] > sbbox[2])) {\n      break;\n    }\n\n    if (event.left) {\n      next  = prev = sweepLine.insert(event);\n      begin = sweepLine.minNode();\n\n      if (prev !== begin) prev = sweepLine.prev(prev);\n      else                prev = null;\n\n      next = sweepLine.next(next);\n\n      const prevEvent = prev ? prev.key : null;\n      let prevprevEvent;\n      computeFields(event, prevEvent, operation);\n      if (next) {\n        if (possibleIntersection(event, next.key, eventQueue) === 2) {\n          computeFields(event, prevEvent, operation);\n          computeFields(event, next.key, operation);\n        }\n      }\n\n      if (prev) {\n        if (possibleIntersection(prev.key, event, eventQueue) === 2) {\n          let prevprev = prev;\n          if (prevprev !== begin) prevprev = sweepLine.prev(prevprev);\n          else                    prevprev = null;\n\n          prevprevEvent = prevprev ? prevprev.key : null;\n          computeFields(prevEvent, prevprevEvent, operation);\n          computeFields(event,     prevEvent,     operation);\n        }\n      }\n    } else {\n      event = event.otherEvent;\n      next = prev = sweepLine.find(event);\n\n      if (prev && next) {\n\n        if (prev !== begin) prev = sweepLine.prev(prev);\n        else                prev = null;\n\n        next = sweepLine.next(next);\n        sweepLine.remove(event);\n\n        if (next && prev) {\n          possibleIntersection(prev.key, next.key, eventQueue);\n        }\n      }\n    }\n  }\n  return sortedEvents;\n}\n","import boolean from './src/';\nimport {\n  INTERSECTION,\n  DIFFERENCE,\n  UNION,\n  XOR\n} from './src/operation';\n\nexport function union (subject, clipping) {\n  return boolean(subject, clipping, UNION);\n}\n\nexport function diff (subject, clipping) {\n  return boolean(subject, clipping, DIFFERENCE);\n}\n\nexport function xor (subject, clipping) {\n  return boolean(subject, clipping, XOR);\n}\n\nexport function intersection (subject, clipping) {\n  return boolean(subject, clipping, INTERSECTION);\n}\n\n/**\n * @enum {Number}\n */\nexport const operations = { UNION, DIFFERENCE, INTERSECTION, XOR };\n","/* Polyfill service v3.13.0\n * For detailed credits and licence information see http://github.com/financial-times/polyfill-service\n *\n * - Array.prototype.fill, License: CC0 */\n\nif (!('fill' in Array.prototype)) {\n  Object.defineProperty(Array.prototype, 'fill', {\n    configurable: true,\n    value: function fill (value) {\n      if (this === undefined || this === null) {\n        throw new TypeError(this + ' is not an object')\n      }\n\n      var arrayLike = Object(this);\n\n      var length = Math.max(Math.min(arrayLike.length, 9007199254740991), 0) || 0;\n\n      var relativeStart = 1 in arguments ? parseInt(Number(arguments[1]), 10) || 0 : 0;\n\n      relativeStart = relativeStart < 0 ? Math.max(length + relativeStart, 0) : Math.min(relativeStart, length);\n\n      var relativeEnd = 2 in arguments && arguments[2] !== undefined ? parseInt(Number(arguments[2]), 10) || 0 : length;\n\n      relativeEnd = relativeEnd < 0 ? Math.max(length + arguments[2], 0) : Math.min(relativeEnd, length);\n\n      while (relativeStart < relativeEnd) {\n        arrayLike[relativeStart] = value;\n\n        ++relativeStart;\n      }\n\n      return arrayLike\n    },\n    writable: true\n  });\n}\n\n/**\n * Polyfill for IE support\n */\nNumber.isFinite = Number.isFinite || function (value) {\n  return typeof value === 'number' && isFinite(value)\n};\n\nNumber.isInteger = Number.isInteger || function (val) {\n  return typeof val === 'number' &&\n  isFinite(val) &&\n  Math.floor(val) === val\n};\n\nNumber.parseFloat = Number.parseFloat || parseFloat;\n\nNumber.isNaN = Number.isNaN || function (value) {\n  return value !== value // eslint-disable-line\n};\n\n/**\n * Polyfill for IE support\n */\nMath.trunc = Math.trunc || function (x) {\n  return x < 0 ? Math.ceil(x) : Math.floor(x)\n};\n\nvar NumberUtil = function NumberUtil () {};\n\nNumberUtil.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nNumberUtil.prototype.getClass = function getClass () {\n  return NumberUtil\n};\nNumberUtil.prototype.equalsWithTolerance = function equalsWithTolerance (x1, x2, tolerance) {\n  return Math.abs(x1 - x2) <= tolerance\n};\n\nvar IllegalArgumentException = (function (Error) {\n\tfunction IllegalArgumentException (message) {\n\t\tError.call(this, message);\n\t\tthis.name = 'IllegalArgumentException';\n\t\tthis.message = message;\n\t\tthis.stack = (new Error()).stack;\n\t}\n\n\tif ( Error ) IllegalArgumentException.__proto__ = Error;\n\tIllegalArgumentException.prototype = Object.create( Error && Error.prototype );\n\tIllegalArgumentException.prototype.constructor = IllegalArgumentException;\n\n\treturn IllegalArgumentException;\n}(Error));\n\nvar Double = function Double () {};\n\nvar staticAccessors$1 = { MAX_VALUE: { configurable: true } };\n\nDouble.isNaN = function isNaN (n) { return Number.isNaN(n) };\nDouble.doubleToLongBits = function doubleToLongBits (n) { return n };\nDouble.longBitsToDouble = function longBitsToDouble (n) { return n };\nDouble.isInfinite = function isInfinite (n) { return !Number.isFinite(n) };\nstaticAccessors$1.MAX_VALUE.get = function () { return Number.MAX_VALUE };\n\nObject.defineProperties( Double, staticAccessors$1 );\n\nvar Comparable = function Comparable () {};\n\nvar Clonable = function Clonable () {};\n\nvar Comparator = function Comparator () {};\n\nfunction Serializable () {}\n\n// import Assert from '../util/Assert'\n\nvar Coordinate = function Coordinate () {\n  this.x = null;\n  this.y = null;\n  this.z = null;\n  if (arguments.length === 0) {\n    this.x = 0.0;\n    this.y = 0.0;\n    this.z = Coordinate.NULL_ORDINATE;\n  } else if (arguments.length === 1) {\n    var c = arguments[0];\n    this.x = c.x;\n    this.y = c.y;\n    this.z = c.z;\n  } else if (arguments.length === 2) {\n    this.x = arguments[0];\n    this.y = arguments[1];\n    this.z = Coordinate.NULL_ORDINATE;\n  } else if (arguments.length === 3) {\n    this.x = arguments[0];\n    this.y = arguments[1];\n    this.z = arguments[2];\n  }\n};\n\nvar staticAccessors = { DimensionalComparator: { configurable: true },serialVersionUID: { configurable: true },NULL_ORDINATE: { configurable: true },X: { configurable: true },Y: { configurable: true },Z: { configurable: true } };\nCoordinate.prototype.setOrdinate = function setOrdinate (ordinateIndex, value) {\n  switch (ordinateIndex) {\n    case Coordinate.X:\n      this.x = value;\n      break\n    case Coordinate.Y:\n      this.y = value;\n      break\n    case Coordinate.Z:\n      this.z = value;\n      break\n    default:\n      throw new IllegalArgumentException('Invalid ordinate index: ' + ordinateIndex)\n  }\n};\nCoordinate.prototype.equals2D = function equals2D () {\n  if (arguments.length === 1) {\n    var other = arguments[0];\n    if (this.x !== other.x) {\n      return false\n    }\n    if (this.y !== other.y) {\n      return false\n    }\n    return true\n  } else if (arguments.length === 2) {\n    var c = arguments[0];\n    var tolerance = arguments[1];\n    if (!NumberUtil.equalsWithTolerance(this.x, c.x, tolerance)) {\n      return false\n    }\n    if (!NumberUtil.equalsWithTolerance(this.y, c.y, tolerance)) {\n      return false\n    }\n    return true\n  }\n};\nCoordinate.prototype.getOrdinate = function getOrdinate (ordinateIndex) {\n  switch (ordinateIndex) {\n    case Coordinate.X:\n      return this.x\n    case Coordinate.Y:\n      return this.y\n    case Coordinate.Z:\n      return this.z\n    default:\n  }\n  throw new IllegalArgumentException('Invalid ordinate index: ' + ordinateIndex)\n};\nCoordinate.prototype.equals3D = function equals3D (other) {\n  return this.x === other.x &&\n         this.y === other.y &&\n         ((this.z === other.z || Double.isNaN(this.z)) &&\n         Double.isNaN(other.z))\n};\nCoordinate.prototype.equals = function equals (other) {\n  if (!(other instanceof Coordinate)) {\n    return false\n  }\n  return this.equals2D(other)\n};\nCoordinate.prototype.equalInZ = function equalInZ (c, tolerance) {\n  return NumberUtil.equalsWithTolerance(this.z, c.z, tolerance)\n};\nCoordinate.prototype.compareTo = function compareTo (o) {\n  var other = o;\n  if (this.x < other.x) { return -1 }\n  if (this.x > other.x) { return 1 }\n  if (this.y < other.y) { return -1 }\n  if (this.y > other.y) { return 1 }\n  return 0\n};\nCoordinate.prototype.clone = function clone () {\n  // try {\n  // var coord = null\n  // return coord\n  // } catch (e) {\n  // if (e instanceof CloneNotSupportedException) {\n  //   Assert.shouldNeverReachHere(\"this shouldn't happen because this class is Cloneable\")\n  //   return null\n  // } else throw e\n  // } finally {}\n};\nCoordinate.prototype.copy = function copy () {\n  return new Coordinate(this)\n};\nCoordinate.prototype.toString = function toString () {\n  return '(' + this.x + ', ' + this.y + ', ' + this.z + ')'\n};\nCoordinate.prototype.distance3D = function distance3D (c) {\n  var dx = this.x - c.x;\n  var dy = this.y - c.y;\n  var dz = this.z - c.z;\n  return Math.sqrt(dx * dx + dy * dy + dz * dz)\n};\nCoordinate.prototype.distance = function distance (c) {\n  var dx = this.x - c.x;\n  var dy = this.y - c.y;\n  return Math.sqrt(dx * dx + dy * dy)\n};\nCoordinate.prototype.hashCode = function hashCode () {\n  var result = 17;\n  result = 37 * result + Coordinate.hashCode(this.x);\n  result = 37 * result + Coordinate.hashCode(this.y);\n  return result\n};\nCoordinate.prototype.setCoordinate = function setCoordinate (other) {\n  this.x = other.x;\n  this.y = other.y;\n  this.z = other.z;\n};\nCoordinate.prototype.interfaces_ = function interfaces_ () {\n  return [Comparable, Clonable, Serializable]\n};\nCoordinate.prototype.getClass = function getClass () {\n  return Coordinate\n};\nCoordinate.hashCode = function hashCode () {\n  if (arguments.length === 1) {\n    var x = arguments[0];\n    var f = Double.doubleToLongBits(x);\n    return Math.trunc((f ^ f) >>> 32)\n  }\n};\nstaticAccessors.DimensionalComparator.get = function () { return DimensionalComparator };\nstaticAccessors.serialVersionUID.get = function () { return 6683108902428366910 };\nstaticAccessors.NULL_ORDINATE.get = function () { return Double.NaN };\nstaticAccessors.X.get = function () { return 0 };\nstaticAccessors.Y.get = function () { return 1 };\nstaticAccessors.Z.get = function () { return 2 };\n\nObject.defineProperties( Coordinate, staticAccessors );\n\nvar DimensionalComparator = function DimensionalComparator (dimensionsToTest) {\n  this._dimensionsToTest = 2;\n  if (arguments.length === 0) {} else if (arguments.length === 1) {\n    var dimensionsToTest$1 = arguments[0];\n    if (dimensionsToTest$1 !== 2 && dimensionsToTest$1 !== 3) { throw new IllegalArgumentException('only 2 or 3 dimensions may be specified') }\n    this._dimensionsToTest = dimensionsToTest$1;\n  }\n};\nDimensionalComparator.prototype.compare = function compare (o1, o2) {\n  var c1 = o1;\n  var c2 = o2;\n  var compX = DimensionalComparator.compare(c1.x, c2.x);\n  if (compX !== 0) { return compX }\n  var compY = DimensionalComparator.compare(c1.y, c2.y);\n  if (compY !== 0) { return compY }\n  if (this._dimensionsToTest <= 2) { return 0 }\n  var compZ = DimensionalComparator.compare(c1.z, c2.z);\n  return compZ\n};\nDimensionalComparator.prototype.interfaces_ = function interfaces_ () {\n  return [Comparator]\n};\nDimensionalComparator.prototype.getClass = function getClass () {\n  return DimensionalComparator\n};\nDimensionalComparator.compare = function compare (a, b) {\n  if (a < b) { return -1 }\n  if (a > b) { return 1 }\n  if (Double.isNaN(a)) {\n    if (Double.isNaN(b)) { return 0 }\n    return -1\n  }\n  if (Double.isNaN(b)) { return 1 }\n  return 0\n};\n\n// import hasInterface from '../../../../hasInterface'\n// import CoordinateSequence from './CoordinateSequence'\n\nvar CoordinateSequenceFactory = function CoordinateSequenceFactory () {};\n\nCoordinateSequenceFactory.prototype.create = function create () {\n  // if (arguments.length === 1) {\n  // if (arguments[0] instanceof Array) {\n  //   let coordinates = arguments[0]\n  // } else if (hasInterface(arguments[0], CoordinateSequence)) {\n  //   let coordSeq = arguments[0]\n  // }\n  // } else if (arguments.length === 2) {\n  // let size = arguments[0]\n  // let dimension = arguments[1]\n  // }\n};\nCoordinateSequenceFactory.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nCoordinateSequenceFactory.prototype.getClass = function getClass () {\n  return CoordinateSequenceFactory\n};\n\nvar Location = function Location () {};\n\nvar staticAccessors$4 = { INTERIOR: { configurable: true },BOUNDARY: { configurable: true },EXTERIOR: { configurable: true },NONE: { configurable: true } };\n\nLocation.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nLocation.prototype.getClass = function getClass () {\n  return Location\n};\nLocation.toLocationSymbol = function toLocationSymbol (locationValue) {\n  switch (locationValue) {\n    case Location.EXTERIOR:\n      return 'e'\n    case Location.BOUNDARY:\n      return 'b'\n    case Location.INTERIOR:\n      return 'i'\n    case Location.NONE:\n      return '-'\n    default:\n  }\n  throw new IllegalArgumentException('Unknown location value: ' + locationValue)\n};\nstaticAccessors$4.INTERIOR.get = function () { return 0 };\nstaticAccessors$4.BOUNDARY.get = function () { return 1 };\nstaticAccessors$4.EXTERIOR.get = function () { return 2 };\nstaticAccessors$4.NONE.get = function () { return -1 };\n\nObject.defineProperties( Location, staticAccessors$4 );\n\nvar hasInterface = function (o, i) {\n  return o.interfaces_ && o.interfaces_().indexOf(i) > -1\n};\n\nvar MathUtil = function MathUtil () {};\n\nvar staticAccessors$5 = { LOG_10: { configurable: true } };\n\nMathUtil.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nMathUtil.prototype.getClass = function getClass () {\n  return MathUtil\n};\nMathUtil.log10 = function log10 (x) {\n  var ln = Math.log(x);\n  if (Double.isInfinite(ln)) { return ln }\n  if (Double.isNaN(ln)) { return ln }\n  return ln / MathUtil.LOG_10\n};\nMathUtil.min = function min (v1, v2, v3, v4) {\n  var min = v1;\n  if (v2 < min) { min = v2; }\n  if (v3 < min) { min = v3; }\n  if (v4 < min) { min = v4; }\n  return min\n};\nMathUtil.clamp = function clamp () {\n  if (typeof arguments[2] === 'number' && (typeof arguments[0] === 'number' && typeof arguments[1] === 'number')) {\n    var x = arguments[0];\n    var min = arguments[1];\n    var max = arguments[2];\n    if (x < min) { return min }\n    if (x > max) { return max }\n    return x\n  } else if (Number.isInteger(arguments[2]) && (Number.isInteger(arguments[0]) && Number.isInteger(arguments[1]))) {\n    var x$1 = arguments[0];\n    var min$1 = arguments[1];\n    var max$1 = arguments[2];\n    if (x$1 < min$1) { return min$1 }\n    if (x$1 > max$1) { return max$1 }\n    return x$1\n  }\n};\nMathUtil.wrap = function wrap (index, max) {\n  if (index < 0) {\n    return max - -index % max\n  }\n  return index % max\n};\nMathUtil.max = function max () {\n  if (arguments.length === 3) {\n    var v1 = arguments[0];\n    var v2 = arguments[1];\n    var v3 = arguments[2];\n    var max = v1;\n    if (v2 > max) { max = v2; }\n    if (v3 > max) { max = v3; }\n    return max\n  } else if (arguments.length === 4) {\n    var v1$1 = arguments[0];\n    var v2$1 = arguments[1];\n    var v3$1 = arguments[2];\n    var v4 = arguments[3];\n    var max$1 = v1$1;\n    if (v2$1 > max$1) { max$1 = v2$1; }\n    if (v3$1 > max$1) { max$1 = v3$1; }\n    if (v4 > max$1) { max$1 = v4; }\n    return max$1\n  }\n};\nMathUtil.average = function average (x1, x2) {\n  return (x1 + x2) / 2.0\n};\nstaticAccessors$5.LOG_10.get = function () { return Math.log(10) };\n\nObject.defineProperties( MathUtil, staticAccessors$5 );\n\nvar StringBuffer = function StringBuffer (str) {\n  this.str = str;\n};\nStringBuffer.prototype.append = function append (e) {\n  this.str += e;\n};\n\nStringBuffer.prototype.setCharAt = function setCharAt (i, c) {\n  this.str = this.str.substr(0, i) + c + this.str.substr(i + 1);\n};\n\nStringBuffer.prototype.toString = function toString (e) {\n  return this.str\n};\n\nvar Integer = function Integer (value) {\n  this.value = value;\n};\nInteger.prototype.intValue = function intValue () {\n  return this.value\n};\nInteger.prototype.compareTo = function compareTo (o) {\n  if (this.value < o) { return -1 }\n  if (this.value > o) { return 1 }\n  return 0\n};\nInteger.isNaN = function isNaN (n) { return Number.isNaN(n) };\n\nvar Character = function Character () {};\n\nCharacter.isWhitespace = function isWhitespace (c) { return ((c <= 32 && c >= 0) || c === 127) };\nCharacter.toUpperCase = function toUpperCase (c) { return c.toUpperCase() };\n\nvar DD = function DD () {\n  this._hi = 0.0;\n  this._lo = 0.0;\n  if (arguments.length === 0) {\n    this.init(0.0);\n  } else if (arguments.length === 1) {\n    if (typeof arguments[0] === 'number') {\n      var x = arguments[0];\n      this.init(x);\n    } else if (arguments[0] instanceof DD) {\n      var dd = arguments[0];\n      this.init(dd);\n    } else if (typeof arguments[0] === 'string') {\n      var str = arguments[0];\n      DD.call(this, DD.parse(str));\n    }\n  } else if (arguments.length === 2) {\n    var hi = arguments[0];\n    var lo = arguments[1];\n    this.init(hi, lo);\n  }\n};\n\nvar staticAccessors$7 = { PI: { configurable: true },TWO_PI: { configurable: true },PI_2: { configurable: true },E: { configurable: true },NaN: { configurable: true },EPS: { configurable: true },SPLIT: { configurable: true },MAX_PRINT_DIGITS: { configurable: true },TEN: { configurable: true },ONE: { configurable: true },SCI_NOT_EXPONENT_CHAR: { configurable: true },SCI_NOT_ZERO: { configurable: true } };\nDD.prototype.le = function le (y) {\n  return (this._hi < y._hi || this._hi === y._hi) && this._lo <= y._lo\n};\nDD.prototype.extractSignificantDigits = function extractSignificantDigits (insertDecimalPoint, magnitude) {\n  var y = this.abs();\n  var mag = DD.magnitude(y._hi);\n  var scale = DD.TEN.pow(mag);\n  y = y.divide(scale);\n  if (y.gt(DD.TEN)) {\n    y = y.divide(DD.TEN);\n    mag += 1;\n  } else if (y.lt(DD.ONE)) {\n    y = y.multiply(DD.TEN);\n    mag -= 1;\n  }\n  var decimalPointPos = mag + 1;\n  var buf = new StringBuffer();\n  var numDigits = DD.MAX_PRINT_DIGITS - 1;\n  for (var i = 0; i <= numDigits; i++) {\n    if (insertDecimalPoint && i === decimalPointPos) {\n      buf.append('.');\n    }\n    var digit = Math.trunc(y._hi);\n    if (digit < 0) {\n      break\n    }\n    var rebiasBy10 = false;\n    var digitChar = 0;\n    if (digit > 9) {\n      rebiasBy10 = true;\n      digitChar = '9';\n    } else {\n      digitChar = '0' + digit;\n    }\n    buf.append(digitChar);\n    y = y.subtract(DD.valueOf(digit)).multiply(DD.TEN);\n    if (rebiasBy10) { y.selfAdd(DD.TEN); }\n    var continueExtractingDigits = true;\n    var remMag = DD.magnitude(y._hi);\n    if (remMag < 0 && Math.abs(remMag) >= numDigits - i) { continueExtractingDigits = false; }\n    if (!continueExtractingDigits) { break }\n  }\n  magnitude[0] = mag;\n  return buf.toString()\n};\nDD.prototype.sqr = function sqr () {\n  return this.multiply(this)\n};\nDD.prototype.doubleValue = function doubleValue () {\n  return this._hi + this._lo\n};\nDD.prototype.subtract = function subtract () {\n  if (arguments[0] instanceof DD) {\n    var y = arguments[0];\n    return this.add(y.negate())\n  } else if (typeof arguments[0] === 'number') {\n    var y$1 = arguments[0];\n    return this.add(-y$1)\n  }\n};\nDD.prototype.equals = function equals () {\n  if (arguments.length === 1) {\n    var y = arguments[0];\n    return this._hi === y._hi && this._lo === y._lo\n  }\n};\nDD.prototype.isZero = function isZero () {\n  return this._hi === 0.0 && this._lo === 0.0\n};\nDD.prototype.selfSubtract = function selfSubtract () {\n  if (arguments[0] instanceof DD) {\n    var y = arguments[0];\n    if (this.isNaN()) { return this }\n    return this.selfAdd(-y._hi, -y._lo)\n  } else if (typeof arguments[0] === 'number') {\n    var y$1 = arguments[0];\n    if (this.isNaN()) { return this }\n    return this.selfAdd(-y$1, 0.0)\n  }\n};\nDD.prototype.getSpecialNumberString = function getSpecialNumberString () {\n  if (this.isZero()) { return '0.0' }\n  if (this.isNaN()) { return 'NaN ' }\n  return null\n};\nDD.prototype.min = function min (x) {\n  if (this.le(x)) {\n    return this\n  } else {\n    return x\n  }\n};\nDD.prototype.selfDivide = function selfDivide () {\n  if (arguments.length === 1) {\n    if (arguments[0] instanceof DD) {\n      var y = arguments[0];\n      return this.selfDivide(y._hi, y._lo)\n    } else if (typeof arguments[0] === 'number') {\n      var y$1 = arguments[0];\n      return this.selfDivide(y$1, 0.0)\n    }\n  } else if (arguments.length === 2) {\n    var yhi = arguments[0];\n    var ylo = arguments[1];\n    var hc = null;\n    var tc = null;\n    var hy = null;\n    var ty = null;\n    var C = null;\n    var c = null;\n    var U = null;\n    var u = null;\n    C = this._hi / yhi;\n    c = DD.SPLIT * C;\n    hc = c - C;\n    u = DD.SPLIT * yhi;\n    hc = c - hc;\n    tc = C - hc;\n    hy = u - yhi;\n    U = C * yhi;\n    hy = u - hy;\n    ty = yhi - hy;\n    u = hc * hy - U + hc * ty + tc * hy + tc * ty;\n    c = (this._hi - U - u + this._lo - C * ylo) / yhi;\n    u = C + c;\n    this._hi = u;\n    this._lo = C - u + c;\n    return this\n  }\n};\nDD.prototype.dump = function dump () {\n  return 'DD<' + this._hi + ', ' + this._lo + '>'\n};\nDD.prototype.divide = function divide () {\n  if (arguments[0] instanceof DD) {\n    var y = arguments[0];\n    var hc = null;\n    var tc = null;\n    var hy = null;\n    var ty = null;\n    var C = null;\n    var c = null;\n    var U = null;\n    var u = null;\n    C = this._hi / y._hi;\n    c = DD.SPLIT * C;\n    hc = c - C;\n    u = DD.SPLIT * y._hi;\n    hc = c - hc;\n    tc = C - hc;\n    hy = u - y._hi;\n    U = C * y._hi;\n    hy = u - hy;\n    ty = y._hi - hy;\n    u = hc * hy - U + hc * ty + tc * hy + tc * ty;\n    c = (this._hi - U - u + this._lo - C * y._lo) / y._hi;\n    u = C + c;\n    var zhi = u;\n    var zlo = C - u + c;\n    return new DD(zhi, zlo)\n  } else if (typeof arguments[0] === 'number') {\n    var y$1 = arguments[0];\n    if (Double.isNaN(y$1)) { return DD.createNaN() }\n    return DD.copy(this).selfDivide(y$1, 0.0)\n  }\n};\nDD.prototype.ge = function ge (y) {\n  return (this._hi > y._hi || this._hi === y._hi) && this._lo >= y._lo\n};\nDD.prototype.pow = function pow (exp) {\n  if (exp === 0.0) { return DD.valueOf(1.0) }\n  var r = new DD(this);\n  var s = DD.valueOf(1.0);\n  var n = Math.abs(exp);\n  if (n > 1) {\n    while (n > 0) {\n      if (n % 2 === 1) {\n        s.selfMultiply(r);\n      }\n      n /= 2;\n      if (n > 0) { r = r.sqr(); }\n    }\n  } else {\n    s = r;\n  }\n  if (exp < 0) { return s.reciprocal() }\n  return s\n};\nDD.prototype.ceil = function ceil () {\n  if (this.isNaN()) { return DD.NaN }\n  var fhi = Math.ceil(this._hi);\n  var flo = 0.0;\n  if (fhi === this._hi) {\n    flo = Math.ceil(this._lo);\n  }\n  return new DD(fhi, flo)\n};\nDD.prototype.compareTo = function compareTo (o) {\n  var other = o;\n  if (this._hi < other._hi) { return -1 }\n  if (this._hi > other._hi) { return 1 }\n  if (this._lo < other._lo) { return -1 }\n  if (this._lo > other._lo) { return 1 }\n  return 0\n};\nDD.prototype.rint = function rint () {\n  if (this.isNaN()) { return this }\n  var plus5 = this.add(0.5);\n  return plus5.floor()\n};\nDD.prototype.setValue = function setValue () {\n  if (arguments[0] instanceof DD) {\n    var value = arguments[0];\n    this.init(value);\n    return this\n  } else if (typeof arguments[0] === 'number') {\n    var value$1 = arguments[0];\n    this.init(value$1);\n    return this\n  }\n};\nDD.prototype.max = function max (x) {\n  if (this.ge(x)) {\n    return this\n  } else {\n    return x\n  }\n};\nDD.prototype.sqrt = function sqrt () {\n  if (this.isZero()) { return DD.valueOf(0.0) }\n  if (this.isNegative()) {\n    return DD.NaN\n  }\n  var x = 1.0 / Math.sqrt(this._hi);\n  var ax = this._hi * x;\n  var axdd = DD.valueOf(ax);\n  var diffSq = this.subtract(axdd.sqr());\n  var d2 = diffSq._hi * (x * 0.5);\n  return axdd.add(d2)\n};\nDD.prototype.selfAdd = function selfAdd () {\n  if (arguments.length === 1) {\n    if (arguments[0] instanceof DD) {\n      var y = arguments[0];\n      return this.selfAdd(y._hi, y._lo)\n    } else if (typeof arguments[0] === 'number') {\n      var y$1 = arguments[0];\n      var H = null;\n      var h = null;\n      var S = null;\n      var s = null;\n      var e = null;\n      var f = null;\n      S = this._hi + y$1;\n      e = S - this._hi;\n      s = S - e;\n      s = y$1 - e + (this._hi - s);\n      f = s + this._lo;\n      H = S + f;\n      h = f + (S - H);\n      this._hi = H + h;\n      this._lo = h + (H - this._hi);\n      return this\n    }\n  } else if (arguments.length === 2) {\n    var yhi = arguments[0];\n    var ylo = arguments[1];\n    var H$1 = null;\n    var h$1 = null;\n    var T = null;\n    var t = null;\n    var S$1 = null;\n    var s$1 = null;\n    var e$1 = null;\n    var f$1 = null;\n    S$1 = this._hi + yhi;\n    T = this._lo + ylo;\n    e$1 = S$1 - this._hi;\n    f$1 = T - this._lo;\n    s$1 = S$1 - e$1;\n    t = T - f$1;\n    s$1 = yhi - e$1 + (this._hi - s$1);\n    t = ylo - f$1 + (this._lo - t);\n    e$1 = s$1 + T;\n    H$1 = S$1 + e$1;\n    h$1 = e$1 + (S$1 - H$1);\n    e$1 = t + h$1;\n    var zhi = H$1 + e$1;\n    var zlo = e$1 + (H$1 - zhi);\n    this._hi = zhi;\n    this._lo = zlo;\n    return this\n  }\n};\nDD.prototype.selfMultiply = function selfMultiply () {\n  if (arguments.length === 1) {\n    if (arguments[0] instanceof DD) {\n      var y = arguments[0];\n      return this.selfMultiply(y._hi, y._lo)\n    } else if (typeof arguments[0] === 'number') {\n      var y$1 = arguments[0];\n      return this.selfMultiply(y$1, 0.0)\n    }\n  } else if (arguments.length === 2) {\n    var yhi = arguments[0];\n    var ylo = arguments[1];\n    var hx = null;\n    var tx = null;\n    var hy = null;\n    var ty = null;\n    var C = null;\n    var c = null;\n    C = DD.SPLIT * this._hi;\n    hx = C - this._hi;\n    c = DD.SPLIT * yhi;\n    hx = C - hx;\n    tx = this._hi - hx;\n    hy = c - yhi;\n    C = this._hi * yhi;\n    hy = c - hy;\n    ty = yhi - hy;\n    c = hx * hy - C + hx * ty + tx * hy + tx * ty + (this._hi * ylo + this._lo * yhi);\n    var zhi = C + c;\n    hx = C - zhi;\n    var zlo = c + hx;\n    this._hi = zhi;\n    this._lo = zlo;\n    return this\n  }\n};\nDD.prototype.selfSqr = function selfSqr () {\n  return this.selfMultiply(this)\n};\nDD.prototype.floor = function floor () {\n  if (this.isNaN()) { return DD.NaN }\n  var fhi = Math.floor(this._hi);\n  var flo = 0.0;\n  if (fhi === this._hi) {\n    flo = Math.floor(this._lo);\n  }\n  return new DD(fhi, flo)\n};\nDD.prototype.negate = function negate () {\n  if (this.isNaN()) { return this }\n  return new DD(-this._hi, -this._lo)\n};\nDD.prototype.clone = function clone () {\n  // try {\n  // return null\n  // } catch (ex) {\n  // if (ex instanceof CloneNotSupportedException) {\n  //   return null\n  // } else throw ex\n  // } finally {}\n};\nDD.prototype.multiply = function multiply () {\n  if (arguments[0] instanceof DD) {\n    var y = arguments[0];\n    if (y.isNaN()) { return DD.createNaN() }\n    return DD.copy(this).selfMultiply(y)\n  } else if (typeof arguments[0] === 'number') {\n    var y$1 = arguments[0];\n    if (Double.isNaN(y$1)) { return DD.createNaN() }\n    return DD.copy(this).selfMultiply(y$1, 0.0)\n  }\n};\nDD.prototype.isNaN = function isNaN () {\n  return Double.isNaN(this._hi)\n};\nDD.prototype.intValue = function intValue () {\n  return Math.trunc(this._hi)\n};\nDD.prototype.toString = function toString () {\n  var mag = DD.magnitude(this._hi);\n  if (mag >= -3 && mag <= 20) { return this.toStandardNotation() }\n  return this.toSciNotation()\n};\nDD.prototype.toStandardNotation = function toStandardNotation () {\n  var specialStr = this.getSpecialNumberString();\n  if (specialStr !== null) { return specialStr }\n  var magnitude = new Array(1).fill(null);\n  var sigDigits = this.extractSignificantDigits(true, magnitude);\n  var decimalPointPos = magnitude[0] + 1;\n  var num = sigDigits;\n  if (sigDigits.charAt(0) === '.') {\n    num = '0' + sigDigits;\n  } else if (decimalPointPos < 0) {\n    num = '0.' + DD.stringOfChar('0', -decimalPointPos) + sigDigits;\n  } else if (sigDigits.indexOf('.') === -1) {\n    var numZeroes = decimalPointPos - sigDigits.length;\n    var zeroes = DD.stringOfChar('0', numZeroes);\n    num = sigDigits + zeroes + '.0';\n  }\n  if (this.isNegative()) { return '-' + num }\n  return num\n};\nDD.prototype.reciprocal = function reciprocal () {\n  var hc = null;\n  var tc = null;\n  var hy = null;\n  var ty = null;\n  var C = null;\n  var c = null;\n  var U = null;\n  var u = null;\n  C = 1.0 / this._hi;\n  c = DD.SPLIT * C;\n  hc = c - C;\n  u = DD.SPLIT * this._hi;\n  hc = c - hc;\n  tc = C - hc;\n  hy = u - this._hi;\n  U = C * this._hi;\n  hy = u - hy;\n  ty = this._hi - hy;\n  u = hc * hy - U + hc * ty + tc * hy + tc * ty;\n  c = (1.0 - U - u - C * this._lo) / this._hi;\n  var zhi = C + c;\n  var zlo = C - zhi + c;\n  return new DD(zhi, zlo)\n};\nDD.prototype.toSciNotation = function toSciNotation () {\n  if (this.isZero()) { return DD.SCI_NOT_ZERO }\n  var specialStr = this.getSpecialNumberString();\n  if (specialStr !== null) { return specialStr }\n  var magnitude = new Array(1).fill(null);\n  var digits = this.extractSignificantDigits(false, magnitude);\n  var expStr = DD.SCI_NOT_EXPONENT_CHAR + magnitude[0];\n  if (digits.charAt(0) === '0') {\n    throw new Error('Found leading zero: ' + digits)\n  }\n  var trailingDigits = '';\n  if (digits.length > 1) { trailingDigits = digits.substring(1); }\n  var digitsWithDecimal = digits.charAt(0) + '.' + trailingDigits;\n  if (this.isNegative()) { return '-' + digitsWithDecimal + expStr }\n  return digitsWithDecimal + expStr\n};\nDD.prototype.abs = function abs () {\n  if (this.isNaN()) { return DD.NaN }\n  if (this.isNegative()) { return this.negate() }\n  return new DD(this)\n};\nDD.prototype.isPositive = function isPositive () {\n  return (this._hi > 0.0 || this._hi === 0.0) && this._lo > 0.0\n};\nDD.prototype.lt = function lt (y) {\n  return (this._hi < y._hi || this._hi === y._hi) && this._lo < y._lo\n};\nDD.prototype.add = function add () {\n  if (arguments[0] instanceof DD) {\n    var y = arguments[0];\n    return DD.copy(this).selfAdd(y)\n  } else if (typeof arguments[0] === 'number') {\n    var y$1 = arguments[0];\n    return DD.copy(this).selfAdd(y$1)\n  }\n};\nDD.prototype.init = function init () {\n  if (arguments.length === 1) {\n    if (typeof arguments[0] === 'number') {\n      var x = arguments[0];\n      this._hi = x;\n      this._lo = 0.0;\n    } else if (arguments[0] instanceof DD) {\n      var dd = arguments[0];\n      this._hi = dd._hi;\n      this._lo = dd._lo;\n    }\n  } else if (arguments.length === 2) {\n    var hi = arguments[0];\n    var lo = arguments[1];\n    this._hi = hi;\n    this._lo = lo;\n  }\n};\nDD.prototype.gt = function gt (y) {\n  return (this._hi > y._hi || this._hi === y._hi) && this._lo > y._lo\n};\nDD.prototype.isNegative = function isNegative () {\n  return (this._hi < 0.0 || this._hi === 0.0) && this._lo < 0.0\n};\nDD.prototype.trunc = function trunc () {\n  if (this.isNaN()) { return DD.NaN }\n  if (this.isPositive()) { return this.floor(); } else { return this.ceil() }\n};\nDD.prototype.signum = function signum () {\n  if (this._hi > 0) { return 1 }\n  if (this._hi < 0) { return -1 }\n  if (this._lo > 0) { return 1 }\n  if (this._lo < 0) { return -1 }\n  return 0\n};\nDD.prototype.interfaces_ = function interfaces_ () {\n  return [Serializable, Comparable, Clonable]\n};\nDD.prototype.getClass = function getClass () {\n  return DD\n};\nDD.sqr = function sqr (x) {\n  return DD.valueOf(x).selfMultiply(x)\n};\nDD.valueOf = function valueOf () {\n  if (typeof arguments[0] === 'string') {\n    var str = arguments[0];\n    return DD.parse(str)\n  } else if (typeof arguments[0] === 'number') {\n    var x = arguments[0];\n    return new DD(x)\n  }\n};\nDD.sqrt = function sqrt (x) {\n  return DD.valueOf(x).sqrt()\n};\nDD.parse = function parse (str) {\n  var i = 0;\n  var strlen = str.length;\n  while (Character.isWhitespace(str.charAt(i))) { i++; }\n  var isNegative = false;\n  if (i < strlen) {\n    var signCh = str.charAt(i);\n    if (signCh === '-' || signCh === '+') {\n      i++;\n      if (signCh === '-') { isNegative = true; }\n    }\n  }\n  var val = new DD();\n  var numDigits = 0;\n  var numBeforeDec = 0;\n  var exp = 0;\n  while (true) {\n    if (i >= strlen) { break }\n    var ch = str.charAt(i);\n    i++;\n    if (Character.isDigit(ch)) {\n      var d = ch - '0';\n      val.selfMultiply(DD.TEN);\n      val.selfAdd(d);\n      numDigits++;\n      continue\n    }\n    if (ch === '.') {\n      numBeforeDec = numDigits;\n      continue\n    }\n    if (ch === 'e' || ch === 'E') {\n      var expStr = str.substring(i);\n      try {\n        exp = Integer.parseInt(expStr);\n      } catch (ex) {\n        if (ex instanceof Error) {\n          throw new Error('Invalid exponent ' + expStr + ' in string ' + str)\n        } else { throw ex }\n      } finally {}\n      break\n    }\n    throw new Error(\"Unexpected character '\" + ch + \"' at position \" + i + ' in string ' + str)\n  }\n  var val2 = val;\n  var numDecPlaces = numDigits - numBeforeDec - exp;\n  if (numDecPlaces === 0) {\n    val2 = val;\n  } else if (numDecPlaces > 0) {\n    var scale = DD.TEN.pow(numDecPlaces);\n    val2 = val.divide(scale);\n  } else if (numDecPlaces < 0) {\n    var scale$1 = DD.TEN.pow(-numDecPlaces);\n    val2 = val.multiply(scale$1);\n  }\n  if (isNegative) {\n    return val2.negate()\n  }\n  return val2\n};\nDD.createNaN = function createNaN () {\n  return new DD(Double.NaN, Double.NaN)\n};\nDD.copy = function copy (dd) {\n  return new DD(dd)\n};\nDD.magnitude = function magnitude (x) {\n  var xAbs = Math.abs(x);\n  var xLog10 = Math.log(xAbs) / Math.log(10);\n  var xMag = Math.trunc(Math.floor(xLog10));\n  var xApprox = Math.pow(10, xMag);\n  if (xApprox * 10 <= xAbs) { xMag += 1; }\n  return xMag\n};\nDD.stringOfChar = function stringOfChar (ch, len) {\n  var buf = new StringBuffer();\n  for (var i = 0; i < len; i++) {\n    buf.append(ch);\n  }\n  return buf.toString()\n};\nstaticAccessors$7.PI.get = function () { return new DD(3.141592653589793116e+00, 1.224646799147353207e-16) };\nstaticAccessors$7.TWO_PI.get = function () { return new DD(6.283185307179586232e+00, 2.449293598294706414e-16) };\nstaticAccessors$7.PI_2.get = function () { return new DD(1.570796326794896558e+00, 6.123233995736766036e-17) };\nstaticAccessors$7.E.get = function () { return new DD(2.718281828459045091e+00, 1.445646891729250158e-16) };\nstaticAccessors$7.NaN.get = function () { return new DD(Double.NaN, Double.NaN) };\nstaticAccessors$7.EPS.get = function () { return 1.23259516440783e-32 };\nstaticAccessors$7.SPLIT.get = function () { return 134217729.0 };\nstaticAccessors$7.MAX_PRINT_DIGITS.get = function () { return 32 };\nstaticAccessors$7.TEN.get = function () { return DD.valueOf(10.0) };\nstaticAccessors$7.ONE.get = function () { return DD.valueOf(1.0) };\nstaticAccessors$7.SCI_NOT_EXPONENT_CHAR.get = function () { return 'E' };\nstaticAccessors$7.SCI_NOT_ZERO.get = function () { return '0.0E0' };\n\nObject.defineProperties( DD, staticAccessors$7 );\n\nvar CGAlgorithmsDD = function CGAlgorithmsDD () {};\n\nvar staticAccessors$6 = { DP_SAFE_EPSILON: { configurable: true } };\n\nCGAlgorithmsDD.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nCGAlgorithmsDD.prototype.getClass = function getClass () {\n  return CGAlgorithmsDD\n};\nCGAlgorithmsDD.orientationIndex = function orientationIndex (p1, p2, q) {\n  var index = CGAlgorithmsDD.orientationIndexFilter(p1, p2, q);\n  if (index <= 1) { return index }\n  var dx1 = DD.valueOf(p2.x).selfAdd(-p1.x);\n  var dy1 = DD.valueOf(p2.y).selfAdd(-p1.y);\n  var dx2 = DD.valueOf(q.x).selfAdd(-p2.x);\n  var dy2 = DD.valueOf(q.y).selfAdd(-p2.y);\n  return dx1.selfMultiply(dy2).selfSubtract(dy1.selfMultiply(dx2)).signum()\n};\nCGAlgorithmsDD.signOfDet2x2 = function signOfDet2x2 (x1, y1, x2, y2) {\n  var det = x1.multiply(y2).selfSubtract(y1.multiply(x2));\n  return det.signum()\n};\nCGAlgorithmsDD.intersection = function intersection (p1, p2, q1, q2) {\n  var denom1 = DD.valueOf(q2.y).selfSubtract(q1.y).selfMultiply(DD.valueOf(p2.x).selfSubtract(p1.x));\n  var denom2 = DD.valueOf(q2.x).selfSubtract(q1.x).selfMultiply(DD.valueOf(p2.y).selfSubtract(p1.y));\n  var denom = denom1.subtract(denom2);\n  var numx1 = DD.valueOf(q2.x).selfSubtract(q1.x).selfMultiply(DD.valueOf(p1.y).selfSubtract(q1.y));\n  var numx2 = DD.valueOf(q2.y).selfSubtract(q1.y).selfMultiply(DD.valueOf(p1.x).selfSubtract(q1.x));\n  var numx = numx1.subtract(numx2);\n  var fracP = numx.selfDivide(denom).doubleValue();\n  var x = DD.valueOf(p1.x).selfAdd(DD.valueOf(p2.x).selfSubtract(p1.x).selfMultiply(fracP)).doubleValue();\n  var numy1 = DD.valueOf(p2.x).selfSubtract(p1.x).selfMultiply(DD.valueOf(p1.y).selfSubtract(q1.y));\n  var numy2 = DD.valueOf(p2.y).selfSubtract(p1.y).selfMultiply(DD.valueOf(p1.x).selfSubtract(q1.x));\n  var numy = numy1.subtract(numy2);\n  var fracQ = numy.selfDivide(denom).doubleValue();\n  var y = DD.valueOf(q1.y).selfAdd(DD.valueOf(q2.y).selfSubtract(q1.y).selfMultiply(fracQ)).doubleValue();\n  return new Coordinate(x, y)\n};\nCGAlgorithmsDD.orientationIndexFilter = function orientationIndexFilter (pa, pb, pc) {\n  var detsum = null;\n  var detleft = (pa.x - pc.x) * (pb.y - pc.y);\n  var detright = (pa.y - pc.y) * (pb.x - pc.x);\n  var det = detleft - detright;\n  if (detleft > 0.0) {\n    if (detright <= 0.0) {\n      return CGAlgorithmsDD.signum(det)\n    } else {\n      detsum = detleft + detright;\n    }\n  } else if (detleft < 0.0) {\n    if (detright >= 0.0) {\n      return CGAlgorithmsDD.signum(det)\n    } else {\n      detsum = -detleft - detright;\n    }\n  } else {\n    return CGAlgorithmsDD.signum(det)\n  }\n  var errbound = CGAlgorithmsDD.DP_SAFE_EPSILON * detsum;\n  if (det >= errbound || -det >= errbound) {\n    return CGAlgorithmsDD.signum(det)\n  }\n  return 2\n};\nCGAlgorithmsDD.signum = function signum (x) {\n  if (x > 0) { return 1 }\n  if (x < 0) { return -1 }\n  return 0\n};\nstaticAccessors$6.DP_SAFE_EPSILON.get = function () { return 1e-15 };\n\nObject.defineProperties( CGAlgorithmsDD, staticAccessors$6 );\n\nvar CoordinateSequence = function CoordinateSequence () {};\n\nvar staticAccessors$8 = { X: { configurable: true },Y: { configurable: true },Z: { configurable: true },M: { configurable: true } };\n\nstaticAccessors$8.X.get = function () { return 0 };\nstaticAccessors$8.Y.get = function () { return 1 };\nstaticAccessors$8.Z.get = function () { return 2 };\nstaticAccessors$8.M.get = function () { return 3 };\nCoordinateSequence.prototype.setOrdinate = function setOrdinate (index, ordinateIndex, value) {};\nCoordinateSequence.prototype.size = function size () {};\nCoordinateSequence.prototype.getOrdinate = function getOrdinate (index, ordinateIndex) {};\nCoordinateSequence.prototype.getCoordinate = function getCoordinate () {};\nCoordinateSequence.prototype.getCoordinateCopy = function getCoordinateCopy (i) {};\nCoordinateSequence.prototype.getDimension = function getDimension () {};\nCoordinateSequence.prototype.getX = function getX (index) {};\nCoordinateSequence.prototype.clone = function clone () {};\nCoordinateSequence.prototype.expandEnvelope = function expandEnvelope (env) {};\nCoordinateSequence.prototype.copy = function copy () {};\nCoordinateSequence.prototype.getY = function getY (index) {};\nCoordinateSequence.prototype.toCoordinateArray = function toCoordinateArray () {};\nCoordinateSequence.prototype.interfaces_ = function interfaces_ () {\n  return [Clonable]\n};\nCoordinateSequence.prototype.getClass = function getClass () {\n  return CoordinateSequence\n};\n\nObject.defineProperties( CoordinateSequence, staticAccessors$8 );\n\nvar Exception = function Exception () {};\n\nvar NotRepresentableException = (function (Exception$$1) {\n  function NotRepresentableException () {\n    Exception$$1.call(this, 'Projective point not representable on the Cartesian plane.');\n  }\n\n  if ( Exception$$1 ) NotRepresentableException.__proto__ = Exception$$1;\n  NotRepresentableException.prototype = Object.create( Exception$$1 && Exception$$1.prototype );\n  NotRepresentableException.prototype.constructor = NotRepresentableException;\n  NotRepresentableException.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  NotRepresentableException.prototype.getClass = function getClass () {\n    return NotRepresentableException\n  };\n\n  return NotRepresentableException;\n}(Exception));\n\nvar System = function System () {};\n\nSystem.arraycopy = function arraycopy (src, srcPos, dest, destPos, len) {\n  var c = 0;\n  for (var i = srcPos; i < srcPos + len; i++) {\n    dest[destPos + c] = src[i];\n    c++;\n  }\n};\n\nSystem.getProperty = function getProperty (name) {\n  return {\n    'line.separator': '\\n'\n  }[name]\n};\n\nvar HCoordinate = function HCoordinate () {\n  this.x = null;\n  this.y = null;\n  this.w = null;\n  if (arguments.length === 0) {\n    this.x = 0.0;\n    this.y = 0.0;\n    this.w = 1.0;\n  } else if (arguments.length === 1) {\n    var p = arguments[0];\n    this.x = p.x;\n    this.y = p.y;\n    this.w = 1.0;\n  } else if (arguments.length === 2) {\n    if (typeof arguments[0] === 'number' && typeof arguments[1] === 'number') {\n      var _x = arguments[0];\n      var _y = arguments[1];\n      this.x = _x;\n      this.y = _y;\n      this.w = 1.0;\n    } else if (arguments[0] instanceof HCoordinate && arguments[1] instanceof HCoordinate) {\n      var p1 = arguments[0];\n      var p2 = arguments[1];\n      this.x = p1.y * p2.w - p2.y * p1.w;\n      this.y = p2.x * p1.w - p1.x * p2.w;\n      this.w = p1.x * p2.y - p2.x * p1.y;\n    } else if (arguments[0] instanceof Coordinate && arguments[1] instanceof Coordinate) {\n      var p1$1 = arguments[0];\n      var p2$1 = arguments[1];\n      this.x = p1$1.y - p2$1.y;\n      this.y = p2$1.x - p1$1.x;\n      this.w = p1$1.x * p2$1.y - p2$1.x * p1$1.y;\n    }\n  } else if (arguments.length === 3) {\n    var _x$1 = arguments[0];\n    var _y$1 = arguments[1];\n    var _w = arguments[2];\n    this.x = _x$1;\n    this.y = _y$1;\n    this.w = _w;\n  } else if (arguments.length === 4) {\n    var p1$2 = arguments[0];\n    var p2$2 = arguments[1];\n    var q1 = arguments[2];\n    var q2 = arguments[3];\n    var px = p1$2.y - p2$2.y;\n    var py = p2$2.x - p1$2.x;\n    var pw = p1$2.x * p2$2.y - p2$2.x * p1$2.y;\n    var qx = q1.y - q2.y;\n    var qy = q2.x - q1.x;\n    var qw = q1.x * q2.y - q2.x * q1.y;\n    this.x = py * qw - qy * pw;\n    this.y = qx * pw - px * qw;\n    this.w = px * qy - qx * py;\n  }\n};\nHCoordinate.prototype.getY = function getY () {\n  var a = this.y / this.w;\n  if (Double.isNaN(a) || Double.isInfinite(a)) {\n    throw new NotRepresentableException()\n  }\n  return a\n};\nHCoordinate.prototype.getX = function getX () {\n  var a = this.x / this.w;\n  if (Double.isNaN(a) || Double.isInfinite(a)) {\n    throw new NotRepresentableException()\n  }\n  return a\n};\nHCoordinate.prototype.getCoordinate = function getCoordinate () {\n  var p = new Coordinate();\n  p.x = this.getX();\n  p.y = this.getY();\n  return p\n};\nHCoordinate.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nHCoordinate.prototype.getClass = function getClass () {\n  return HCoordinate\n};\nHCoordinate.intersection = function intersection (p1, p2, q1, q2) {\n  var px = p1.y - p2.y;\n  var py = p2.x - p1.x;\n  var pw = p1.x * p2.y - p2.x * p1.y;\n  var qx = q1.y - q2.y;\n  var qy = q2.x - q1.x;\n  var qw = q1.x * q2.y - q2.x * q1.y;\n  var x = py * qw - qy * pw;\n  var y = qx * pw - px * qw;\n  var w = px * qy - qx * py;\n  var xInt = x / w;\n  var yInt = y / w;\n  if (Double.isNaN(xInt) || (Double.isInfinite(xInt) || Double.isNaN(yInt)) || Double.isInfinite(yInt)) {\n    throw new NotRepresentableException()\n  }\n  return new Coordinate(xInt, yInt)\n};\n\nvar Envelope = function Envelope () {\n  this._minx = null;\n  this._maxx = null;\n  this._miny = null;\n  this._maxy = null;\n  if (arguments.length === 0) {\n    this.init();\n  } else if (arguments.length === 1) {\n    if (arguments[0] instanceof Coordinate) {\n      var p = arguments[0];\n      this.init(p.x, p.x, p.y, p.y);\n    } else if (arguments[0] instanceof Envelope) {\n      var env = arguments[0];\n      this.init(env);\n    }\n  } else if (arguments.length === 2) {\n    var p1 = arguments[0];\n    var p2 = arguments[1];\n    this.init(p1.x, p2.x, p1.y, p2.y);\n  } else if (arguments.length === 4) {\n    var x1 = arguments[0];\n    var x2 = arguments[1];\n    var y1 = arguments[2];\n    var y2 = arguments[3];\n    this.init(x1, x2, y1, y2);\n  }\n};\n\nvar staticAccessors$9 = { serialVersionUID: { configurable: true } };\nEnvelope.prototype.getArea = function getArea () {\n  return this.getWidth() * this.getHeight()\n};\nEnvelope.prototype.equals = function equals (other) {\n  if (!(other instanceof Envelope)) {\n    return false\n  }\n  var otherEnvelope = other;\n  if (this.isNull()) {\n    return otherEnvelope.isNull()\n  }\n  return this._maxx === otherEnvelope.getMaxX() && this._maxy === otherEnvelope.getMaxY() && this._minx === otherEnvelope.getMinX() && this._miny === otherEnvelope.getMinY()\n};\nEnvelope.prototype.intersection = function intersection (env) {\n  if (this.isNull() || env.isNull() || !this.intersects(env)) { return new Envelope() }\n  var intMinX = this._minx > env._minx ? this._minx : env._minx;\n  var intMinY = this._miny > env._miny ? this._miny : env._miny;\n  var intMaxX = this._maxx < env._maxx ? this._maxx : env._maxx;\n  var intMaxY = this._maxy < env._maxy ? this._maxy : env._maxy;\n  return new Envelope(intMinX, intMaxX, intMinY, intMaxY)\n};\nEnvelope.prototype.isNull = function isNull () {\n  return this._maxx < this._minx\n};\nEnvelope.prototype.getMaxX = function getMaxX () {\n  return this._maxx\n};\nEnvelope.prototype.covers = function covers () {\n  if (arguments.length === 1) {\n    if (arguments[0] instanceof Coordinate) {\n      var p = arguments[0];\n      return this.covers(p.x, p.y)\n    } else if (arguments[0] instanceof Envelope) {\n      var other = arguments[0];\n      if (this.isNull() || other.isNull()) {\n        return false\n      }\n      return other.getMinX() >= this._minx && other.getMaxX() <= this._maxx && other.getMinY() >= this._miny && other.getMaxY() <= this._maxy\n    }\n  } else if (arguments.length === 2) {\n    var x = arguments[0];\n    var y = arguments[1];\n    if (this.isNull()) { return false }\n    return x >= this._minx && x <= this._maxx && y >= this._miny && y <= this._maxy\n  }\n};\nEnvelope.prototype.intersects = function intersects () {\n  if (arguments.length === 1) {\n    if (arguments[0] instanceof Envelope) {\n      var other = arguments[0];\n      if (this.isNull() || other.isNull()) {\n        return false\n      }\n      return !(other._minx > this._maxx || other._maxx < this._minx || other._miny > this._maxy || other._maxy < this._miny)\n    } else if (arguments[0] instanceof Coordinate) {\n      var p = arguments[0];\n      return this.intersects(p.x, p.y)\n    }\n  } else if (arguments.length === 2) {\n    var x = arguments[0];\n    var y = arguments[1];\n    if (this.isNull()) { return false }\n    return !(x > this._maxx || x < this._minx || y > this._maxy || y < this._miny)\n  }\n};\nEnvelope.prototype.getMinY = function getMinY () {\n  return this._miny\n};\nEnvelope.prototype.getMinX = function getMinX () {\n  return this._minx\n};\nEnvelope.prototype.expandToInclude = function expandToInclude () {\n  if (arguments.length === 1) {\n    if (arguments[0] instanceof Coordinate) {\n      var p = arguments[0];\n      this.expandToInclude(p.x, p.y);\n    } else if (arguments[0] instanceof Envelope) {\n      var other = arguments[0];\n      if (other.isNull()) {\n        return null\n      }\n      if (this.isNull()) {\n        this._minx = other.getMinX();\n        this._maxx = other.getMaxX();\n        this._miny = other.getMinY();\n        this._maxy = other.getMaxY();\n      } else {\n        if (other._minx < this._minx) {\n          this._minx = other._minx;\n        }\n        if (other._maxx > this._maxx) {\n          this._maxx = other._maxx;\n        }\n        if (other._miny < this._miny) {\n          this._miny = other._miny;\n        }\n        if (other._maxy > this._maxy) {\n          this._maxy = other._maxy;\n        }\n      }\n    }\n  } else if (arguments.length === 2) {\n    var x = arguments[0];\n    var y = arguments[1];\n    if (this.isNull()) {\n      this._minx = x;\n      this._maxx = x;\n      this._miny = y;\n      this._maxy = y;\n    } else {\n      if (x < this._minx) {\n        this._minx = x;\n      }\n      if (x > this._maxx) {\n        this._maxx = x;\n      }\n      if (y < this._miny) {\n        this._miny = y;\n      }\n      if (y > this._maxy) {\n        this._maxy = y;\n      }\n    }\n  }\n};\nEnvelope.prototype.minExtent = function minExtent () {\n  if (this.isNull()) { return 0.0 }\n  var w = this.getWidth();\n  var h = this.getHeight();\n  if (w < h) { return w }\n  return h\n};\nEnvelope.prototype.getWidth = function getWidth () {\n  if (this.isNull()) {\n    return 0\n  }\n  return this._maxx - this._minx\n};\nEnvelope.prototype.compareTo = function compareTo (o) {\n  var env = o;\n  if (this.isNull()) {\n    if (env.isNull()) { return 0 }\n    return -1\n  } else {\n    if (env.isNull()) { return 1 }\n  }\n  if (this._minx < env._minx) { return -1 }\n  if (this._minx > env._minx) { return 1 }\n  if (this._miny < env._miny) { return -1 }\n  if (this._miny > env._miny) { return 1 }\n  if (this._maxx < env._maxx) { return -1 }\n  if (this._maxx > env._maxx) { return 1 }\n  if (this._maxy < env._maxy) { return -1 }\n  if (this._maxy > env._maxy) { return 1 }\n  return 0\n};\nEnvelope.prototype.translate = function translate (transX, transY) {\n  if (this.isNull()) {\n    return null\n  }\n  this.init(this.getMinX() + transX, this.getMaxX() + transX, this.getMinY() + transY, this.getMaxY() + transY);\n};\nEnvelope.prototype.toString = function toString () {\n  return 'Env[' + this._minx + ' : ' + this._maxx + ', ' + this._miny + ' : ' + this._maxy + ']'\n};\nEnvelope.prototype.setToNull = function setToNull () {\n  this._minx = 0;\n  this._maxx = -1;\n  this._miny = 0;\n  this._maxy = -1;\n};\nEnvelope.prototype.getHeight = function getHeight () {\n  if (this.isNull()) {\n    return 0\n  }\n  return this._maxy - this._miny\n};\nEnvelope.prototype.maxExtent = function maxExtent () {\n  if (this.isNull()) { return 0.0 }\n  var w = this.getWidth();\n  var h = this.getHeight();\n  if (w > h) { return w }\n  return h\n};\nEnvelope.prototype.expandBy = function expandBy () {\n  if (arguments.length === 1) {\n    var distance = arguments[0];\n    this.expandBy(distance, distance);\n  } else if (arguments.length === 2) {\n    var deltaX = arguments[0];\n    var deltaY = arguments[1];\n    if (this.isNull()) { return null }\n    this._minx -= deltaX;\n    this._maxx += deltaX;\n    this._miny -= deltaY;\n    this._maxy += deltaY;\n    if (this._minx > this._maxx || this._miny > this._maxy) { this.setToNull(); }\n  }\n};\nEnvelope.prototype.contains = function contains () {\n  if (arguments.length === 1) {\n    if (arguments[0] instanceof Envelope) {\n      var other = arguments[0];\n      return this.covers(other)\n    } else if (arguments[0] instanceof Coordinate) {\n      var p = arguments[0];\n      return this.covers(p)\n    }\n  } else if (arguments.length === 2) {\n    var x = arguments[0];\n    var y = arguments[1];\n    return this.covers(x, y)\n  }\n};\nEnvelope.prototype.centre = function centre () {\n  if (this.isNull()) { return null }\n  return new Coordinate((this.getMinX() + this.getMaxX()) / 2.0, (this.getMinY() + this.getMaxY()) / 2.0)\n};\nEnvelope.prototype.init = function init () {\n  if (arguments.length === 0) {\n    this.setToNull();\n  } else if (arguments.length === 1) {\n    if (arguments[0] instanceof Coordinate) {\n      var p = arguments[0];\n      this.init(p.x, p.x, p.y, p.y);\n    } else if (arguments[0] instanceof Envelope) {\n      var env = arguments[0];\n      this._minx = env._minx;\n      this._maxx = env._maxx;\n      this._miny = env._miny;\n      this._maxy = env._maxy;\n    }\n  } else if (arguments.length === 2) {\n    var p1 = arguments[0];\n    var p2 = arguments[1];\n    this.init(p1.x, p2.x, p1.y, p2.y);\n  } else if (arguments.length === 4) {\n    var x1 = arguments[0];\n    var x2 = arguments[1];\n    var y1 = arguments[2];\n    var y2 = arguments[3];\n    if (x1 < x2) {\n      this._minx = x1;\n      this._maxx = x2;\n    } else {\n      this._minx = x2;\n      this._maxx = x1;\n    }\n    if (y1 < y2) {\n      this._miny = y1;\n      this._maxy = y2;\n    } else {\n      this._miny = y2;\n      this._maxy = y1;\n    }\n  }\n};\nEnvelope.prototype.getMaxY = function getMaxY () {\n  return this._maxy\n};\nEnvelope.prototype.distance = function distance (env) {\n  if (this.intersects(env)) { return 0 }\n  var dx = 0.0;\n  if (this._maxx < env._minx) { dx = env._minx - this._maxx; } else if (this._minx > env._maxx) { dx = this._minx - env._maxx; }\n  var dy = 0.0;\n  if (this._maxy < env._miny) { dy = env._miny - this._maxy; } else if (this._miny > env._maxy) { dy = this._miny - env._maxy; }\n  if (dx === 0.0) { return dy }\n  if (dy === 0.0) { return dx }\n  return Math.sqrt(dx * dx + dy * dy)\n};\nEnvelope.prototype.hashCode = function hashCode () {\n  var result = 17;\n  result = 37 * result + Coordinate.hashCode(this._minx);\n  result = 37 * result + Coordinate.hashCode(this._maxx);\n  result = 37 * result + Coordinate.hashCode(this._miny);\n  result = 37 * result + Coordinate.hashCode(this._maxy);\n  return result\n};\nEnvelope.prototype.interfaces_ = function interfaces_ () {\n  return [Comparable, Serializable]\n};\nEnvelope.prototype.getClass = function getClass () {\n  return Envelope\n};\nEnvelope.intersects = function intersects () {\n  if (arguments.length === 3) {\n    var p1 = arguments[0];\n    var p2 = arguments[1];\n    var q = arguments[2];\n    if (q.x >= (p1.x < p2.x ? p1.x : p2.x) && q.x <= (p1.x > p2.x ? p1.x : p2.x) && (q.y >= (p1.y < p2.y ? p1.y : p2.y) && q.y <= (p1.y > p2.y ? p1.y : p2.y))) {\n      return true\n    }\n    return false\n  } else if (arguments.length === 4) {\n    var p1$1 = arguments[0];\n    var p2$1 = arguments[1];\n    var q1 = arguments[2];\n    var q2 = arguments[3];\n    var minq = Math.min(q1.x, q2.x);\n    var maxq = Math.max(q1.x, q2.x);\n    var minp = Math.min(p1$1.x, p2$1.x);\n    var maxp = Math.max(p1$1.x, p2$1.x);\n    if (minp > maxq) { return false }\n    if (maxp < minq) { return false }\n    minq = Math.min(q1.y, q2.y);\n    maxq = Math.max(q1.y, q2.y);\n    minp = Math.min(p1$1.y, p2$1.y);\n    maxp = Math.max(p1$1.y, p2$1.y);\n    if (minp > maxq) { return false }\n    if (maxp < minq) { return false }\n    return true\n  }\n};\nstaticAccessors$9.serialVersionUID.get = function () { return 5873921885273102420 };\n\nObject.defineProperties( Envelope, staticAccessors$9 );\n\nvar regExes = {\n  'typeStr': /^\\s*(\\w+)\\s*\\(\\s*(.*)\\s*\\)\\s*$/,\n  'emptyTypeStr': /^\\s*(\\w+)\\s*EMPTY\\s*$/,\n  'spaces': /\\s+/,\n  'parenComma': /\\)\\s*,\\s*\\(/,\n  'doubleParenComma': /\\)\\s*\\)\\s*,\\s*\\(\\s*\\(/, // can't use {2} here\n  'trimParens': /^\\s*\\(?(.*?)\\)?\\s*$/\n};\n\n/**\n * Class for reading and writing Well-Known Text.\n *\n * NOTE: Adapted from OpenLayers 2.11 implementation.\n */\n\n/** Create a new parser for WKT\n *\n * @param {GeometryFactory} geometryFactory\n * @return An instance of WKTParser.\n * @constructor\n * @private\n */\nvar WKTParser = function WKTParser (geometryFactory) {\n  this.geometryFactory = geometryFactory || new GeometryFactory();\n};\n/**\n * Deserialize a WKT string and return a geometry. Supports WKT for POINT,\n * MULTIPOINT, LINESTRING, LINEARRING, MULTILINESTRING, POLYGON, MULTIPOLYGON,\n * and GEOMETRYCOLLECTION.\n *\n * @param {String} wkt A WKT string.\n * @return {Geometry} A geometry instance.\n * @private\n */\nWKTParser.prototype.read = function read (wkt) {\n  var geometry, type, str;\n  wkt = wkt.replace(/[\\n\\r]/g, ' ');\n  var matches = regExes.typeStr.exec(wkt);\n  if (wkt.search('EMPTY') !== -1) {\n    matches = regExes.emptyTypeStr.exec(wkt);\n    matches[2] = undefined;\n  }\n  if (matches) {\n    type = matches[1].toLowerCase();\n    str = matches[2];\n    if (parse$1[type]) {\n      geometry = parse$1[type].apply(this, [str]);\n    }\n  }\n\n  if (geometry === undefined) { throw new Error('Could not parse WKT ' + wkt) }\n\n  return geometry\n};\n\n/**\n * Serialize a geometry into a WKT string.\n *\n * @param {Geometry} geometry A feature or array of features.\n * @return {String} The WKT string representation of the input geometries.\n * @private\n */\nWKTParser.prototype.write = function write (geometry) {\n  return this.extractGeometry(geometry)\n};\n\n/**\n * Entry point to construct the WKT for a single Geometry object.\n *\n * @param {Geometry} geometry\n * @return {String} A WKT string of representing the geometry.\n * @private\n */\nWKTParser.prototype.extractGeometry = function extractGeometry (geometry) {\n  var type = geometry.getGeometryType().toLowerCase();\n  if (!extract$1[type]) {\n    return null\n  }\n  var wktType = type.toUpperCase();\n  var data;\n  if (geometry.isEmpty()) {\n    data = wktType + ' EMPTY';\n  } else {\n    data = wktType + '(' + extract$1[type].apply(this, [geometry]) + ')';\n  }\n  return data\n};\n\n/**\n * Object with properties corresponding to the geometry types. Property values\n * are functions that do the actual data extraction.\n * @private\n */\nvar extract$1 = {\n  coordinate: function coordinate (coordinate$1) {\n    return coordinate$1.x + ' ' + coordinate$1.y\n  },\n\n  /**\n   * Return a space delimited string of point coordinates.\n   *\n   * @param {Point}\n   *          point\n   * @return {String} A string of coordinates representing the point.\n   */\n  point: function point (point$1) {\n    return extract$1.coordinate.call(this, point$1._coordinates._coordinates[0])\n  },\n\n  /**\n   * Return a comma delimited string of point coordinates from a multipoint.\n   *\n   * @param {MultiPoint}\n   *          multipoint\n   * @return {String} A string of point coordinate strings representing the\n   *         multipoint.\n   */\n  multipoint: function multipoint (multipoint$1) {\n    var this$1 = this;\n\n    var array = [];\n    for (var i = 0, len = multipoint$1._geometries.length; i < len; ++i) {\n      array.push('(' + extract$1.point.apply(this$1, [multipoint$1._geometries[i]]) + ')');\n    }\n    return array.join(',')\n  },\n\n  /**\n   * Return a comma delimited string of point coordinates from a line.\n   *\n   * @param {LineString} linestring\n   * @return {String} A string of point coordinate strings representing the linestring.\n   */\n  linestring: function linestring (linestring$1) {\n    var this$1 = this;\n\n    var array = [];\n    for (var i = 0, len = linestring$1._points._coordinates.length; i < len; ++i) {\n      array.push(extract$1.coordinate.apply(this$1, [linestring$1._points._coordinates[i]]));\n    }\n    return array.join(',')\n  },\n\n  linearring: function linearring (linearring$1) {\n    var this$1 = this;\n\n    var array = [];\n    for (var i = 0, len = linearring$1._points._coordinates.length; i < len; ++i) {\n      array.push(extract$1.coordinate.apply(this$1, [linearring$1._points._coordinates[i]]));\n    }\n    return array.join(',')\n  },\n\n  /**\n   * Return a comma delimited string of linestring strings from a\n   * multilinestring.\n   *\n   * @param {MultiLineString} multilinestring\n   * @return {String} A string of of linestring strings representing the multilinestring.\n   */\n  multilinestring: function multilinestring (multilinestring$1) {\n    var this$1 = this;\n\n    var array = [];\n    for (var i = 0, len = multilinestring$1._geometries.length; i < len; ++i) {\n      array.push('(' +\n        extract$1.linestring.apply(this$1, [multilinestring$1._geometries[i]]) +\n        ')');\n    }\n    return array.join(',')\n  },\n\n  /**\n   * Return a comma delimited string of linear ring arrays from a polygon.\n   *\n   * @param {Polygon} polygon\n   * @return {String} An array of linear ring arrays representing the polygon.\n   */\n  polygon: function polygon (polygon$1) {\n    var this$1 = this;\n\n    var array = [];\n    array.push('(' + extract$1.linestring.apply(this, [polygon$1._shell]) + ')');\n    for (var i = 0, len = polygon$1._holes.length; i < len; ++i) {\n      array.push('(' + extract$1.linestring.apply(this$1, [polygon$1._holes[i]]) + ')');\n    }\n    return array.join(',')\n  },\n\n  /**\n   * Return an array of polygon arrays from a multipolygon.\n   *\n   * @param {MultiPolygon} multipolygon\n   * @return {String} An array of polygon arrays representing the multipolygon.\n   */\n  multipolygon: function multipolygon (multipolygon$1) {\n    var this$1 = this;\n\n    var array = [];\n    for (var i = 0, len = multipolygon$1._geometries.length; i < len; ++i) {\n      array.push('(' + extract$1.polygon.apply(this$1, [multipolygon$1._geometries[i]]) + ')');\n    }\n    return array.join(',')\n  },\n\n  /**\n   * Return the WKT portion between 'GEOMETRYCOLLECTION(' and ')' for an\n   * geometrycollection.\n   *\n   * @param {GeometryCollection} collection\n   * @return {String} internal WKT representation of the collection.\n   */\n  geometrycollection: function geometrycollection (collection) {\n    var this$1 = this;\n\n    var array = [];\n    for (var i = 0, len = collection._geometries.length; i < len; ++i) {\n      array.push(this$1.extractGeometry(collection._geometries[i]));\n    }\n    return array.join(',')\n  }\n};\n\n/**\n * Object with properties corresponding to the geometry types. Property values\n * are functions that do the actual parsing.\n * @private\n */\nvar parse$1 = {\n  /**\n   * Return point geometry given a point WKT fragment.\n   *\n   * @param {String} str A WKT fragment representing the point.\n   * @return {Point} A point geometry.\n   * @private\n   */\n  point: function point (str) {\n    if (str === undefined) {\n      return this.geometryFactory.createPoint()\n    }\n\n    var coords = str.trim().split(regExes.spaces);\n    return this.geometryFactory.createPoint(new Coordinate(Number.parseFloat(coords[0]),\n      Number.parseFloat(coords[1])))\n  },\n\n  /**\n   * Return a multipoint geometry given a multipoint WKT fragment.\n   *\n   * @param {String} str A WKT fragment representing the multipoint.\n   * @return {Point} A multipoint feature.\n   * @private\n   */\n  multipoint: function multipoint (str) {\n    var this$1 = this;\n\n    if (str === undefined) {\n      return this.geometryFactory.createMultiPoint()\n    }\n\n    var point;\n    var points = str.trim().split(',');\n    var components = [];\n    for (var i = 0, len = points.length; i < len; ++i) {\n      point = points[i].replace(regExes.trimParens, '$1');\n      components.push(parse$1.point.apply(this$1, [point]));\n    }\n    return this.geometryFactory.createMultiPoint(components)\n  },\n\n  /**\n   * Return a linestring geometry given a linestring WKT fragment.\n   *\n   * @param {String} str A WKT fragment representing the linestring.\n   * @return {LineString} A linestring geometry.\n   * @private\n   */\n  linestring: function linestring (str) {\n    if (str === undefined) {\n      return this.geometryFactory.createLineString()\n    }\n\n    var points = str.trim().split(',');\n    var components = [];\n    var coords;\n    for (var i = 0, len = points.length; i < len; ++i) {\n      coords = points[i].trim().split(regExes.spaces);\n      components.push(new Coordinate(Number.parseFloat(coords[0]), Number.parseFloat(coords[1])));\n    }\n    return this.geometryFactory.createLineString(components)\n  },\n\n  /**\n   * Return a linearring geometry given a linearring WKT fragment.\n   *\n   * @param {String} str A WKT fragment representing the linearring.\n   * @return {LinearRing} A linearring geometry.\n   * @private\n   */\n  linearring: function linearring (str) {\n    if (str === undefined) {\n      return this.geometryFactory.createLinearRing()\n    }\n\n    var points = str.trim().split(',');\n    var components = [];\n    var coords;\n    for (var i = 0, len = points.length; i < len; ++i) {\n      coords = points[i].trim().split(regExes.spaces);\n      components.push(new Coordinate(Number.parseFloat(coords[0]), Number.parseFloat(coords[1])));\n    }\n    return this.geometryFactory.createLinearRing(components)\n  },\n\n  /**\n   * Return a multilinestring geometry given a multilinestring WKT fragment.\n   *\n   * @param {String} str A WKT fragment representing the multilinestring.\n   * @return {MultiLineString} A multilinestring geometry.\n   * @private\n   */\n  multilinestring: function multilinestring (str) {\n    var this$1 = this;\n\n    if (str === undefined) {\n      return this.geometryFactory.createMultiLineString()\n    }\n\n    var line;\n    var lines = str.trim().split(regExes.parenComma);\n    var components = [];\n    for (var i = 0, len = lines.length; i < len; ++i) {\n      line = lines[i].replace(regExes.trimParens, '$1');\n      components.push(parse$1.linestring.apply(this$1, [line]));\n    }\n    return this.geometryFactory.createMultiLineString(components)\n  },\n\n  /**\n   * Return a polygon geometry given a polygon WKT fragment.\n   *\n   * @param {String} str A WKT fragment representing the polygon.\n   * @return {Polygon} A polygon geometry.\n   * @private\n   */\n  polygon: function polygon (str) {\n    var this$1 = this;\n\n    if (str === undefined) {\n      return this.geometryFactory.createPolygon()\n    }\n\n    var ring, linestring, linearring;\n    var rings = str.trim().split(regExes.parenComma);\n    var shell;\n    var holes = [];\n    for (var i = 0, len = rings.length; i < len; ++i) {\n      ring = rings[i].replace(regExes.trimParens, '$1');\n      linestring = parse$1.linestring.apply(this$1, [ring]);\n      linearring = this$1.geometryFactory.createLinearRing(linestring._points);\n      if (i === 0) {\n        shell = linearring;\n      } else {\n        holes.push(linearring);\n      }\n    }\n    return this.geometryFactory.createPolygon(shell, holes)\n  },\n\n  /**\n   * Return a multipolygon geometry given a multipolygon WKT fragment.\n   *\n   * @param {String} str A WKT fragment representing the multipolygon.\n   * @return {MultiPolygon} A multipolygon geometry.\n   * @private\n   */\n  multipolygon: function multipolygon (str) {\n    var this$1 = this;\n\n    if (str === undefined) {\n      return this.geometryFactory.createMultiPolygon()\n    }\n\n    var polygon;\n    var polygons = str.trim().split(regExes.doubleParenComma);\n    var components = [];\n    for (var i = 0, len = polygons.length; i < len; ++i) {\n      polygon = polygons[i].replace(regExes.trimParens, '$1');\n      components.push(parse$1.polygon.apply(this$1, [polygon]));\n    }\n    return this.geometryFactory.createMultiPolygon(components)\n  },\n\n  /**\n   * Return a geometrycollection given a geometrycollection WKT fragment.\n   *\n   * @param {String} str A WKT fragment representing the geometrycollection.\n   * @return {GeometryCollection}\n   * @private\n   */\n  geometrycollection: function geometrycollection (str) {\n    var this$1 = this;\n\n    if (str === undefined) {\n      return this.geometryFactory.createGeometryCollection()\n    }\n\n    // separate components of the collection with |\n    str = str.replace(/,\\s*([A-Za-z])/g, '|$1');\n    var wktArray = str.trim().split('|');\n    var components = [];\n    for (var i = 0, len = wktArray.length; i < len; ++i) {\n      components.push(this$1.read(wktArray[i]));\n    }\n    return this.geometryFactory.createGeometryCollection(components)\n  }\n};\n\n/**\n * Writes the Well-Known Text representation of a {@link Geometry}. The\n * Well-Known Text format is defined in the <A\n * HREF=\"http://www.opengis.org/techno/specs.htm\"> OGC Simple Features\n * Specification for SQL</A>.\n * <p>\n * The <code>WKTWriter</code> outputs coordinates rounded to the precision\n * model. Only the maximum number of decimal places necessary to represent the\n * ordinates to the required precision will be output.\n * <p>\n * The SFS WKT spec does not define a special tag for {@link LinearRing}s.\n * Under the spec, rings are output as <code>LINESTRING</code>s.\n */\n\n/**\n * @param {GeometryFactory} geometryFactory\n * @constructor\n */\nvar WKTWriter = function WKTWriter (geometryFactory) {\n  this.parser = new WKTParser(geometryFactory);\n};\n\n/**\n * Converts a <code>Geometry</code> to its Well-known Text representation.\n *\n * @param {Geometry} geometry a <code>Geometry</code> to process.\n * @return {string} a <Geometry Tagged Text> string (see the OpenGIS Simple\n *       Features Specification).\n * @memberof WKTWriter\n */\nWKTWriter.prototype.write = function write (geometry) {\n  return this.parser.write(geometry)\n};\n/**\n * Generates the WKT for a <tt>LINESTRING</tt> specified by two\n * {@link Coordinate}s.\n *\n * @param p0 the first coordinate.\n * @param p1 the second coordinate.\n *\n * @return the WKT.\n * @private\n */\nWKTWriter.toLineString = function toLineString (p0, p1) {\n  if (arguments.length !== 2) {\n    throw new Error('Not implemented')\n  }\n  return 'LINESTRING ( ' + p0.x + ' ' + p0.y + ', ' + p1.x + ' ' + p1.y + ' )'\n};\n\nvar RuntimeException = (function (Error) {\n  function RuntimeException (message) {\n    Error.call(this, message);\n    this.name = 'RuntimeException';\n    this.message = message;\n    this.stack = (new Error()).stack;\n  }\n\n  if ( Error ) RuntimeException.__proto__ = Error;\n  RuntimeException.prototype = Object.create( Error && Error.prototype );\n  RuntimeException.prototype.constructor = RuntimeException;\n\n  return RuntimeException;\n}(Error));\n\nvar AssertionFailedException = (function (RuntimeException$$1) {\n  function AssertionFailedException () {\n    RuntimeException$$1.call(this);\n    if (arguments.length === 0) {\n      RuntimeException$$1.call(this);\n    } else if (arguments.length === 1) {\n      var message = arguments[0];\n      RuntimeException$$1.call(this, message);\n    }\n  }\n\n  if ( RuntimeException$$1 ) AssertionFailedException.__proto__ = RuntimeException$$1;\n  AssertionFailedException.prototype = Object.create( RuntimeException$$1 && RuntimeException$$1.prototype );\n  AssertionFailedException.prototype.constructor = AssertionFailedException;\n  AssertionFailedException.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  AssertionFailedException.prototype.getClass = function getClass () {\n    return AssertionFailedException\n  };\n\n  return AssertionFailedException;\n}(RuntimeException));\n\nvar Assert = function Assert () {};\n\nAssert.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nAssert.prototype.getClass = function getClass () {\n  return Assert\n};\nAssert.shouldNeverReachHere = function shouldNeverReachHere () {\n  if (arguments.length === 0) {\n    Assert.shouldNeverReachHere(null);\n  } else if (arguments.length === 1) {\n    var message = arguments[0];\n    throw new AssertionFailedException('Should never reach here' + (message !== null ? ': ' + message : ''))\n  }\n};\nAssert.isTrue = function isTrue () {\n  var assertion;\n  var message;\n  if (arguments.length === 1) {\n    assertion = arguments[0];\n    Assert.isTrue(assertion, null);\n  } else if (arguments.length === 2) {\n    assertion = arguments[0];\n    message = arguments[1];\n    if (!assertion) {\n      if (message === null) {\n        throw new AssertionFailedException()\n      } else {\n        throw new AssertionFailedException(message)\n      }\n    }\n  }\n};\nAssert.equals = function equals () {\n  var expectedValue;\n  var actualValue;\n  var message;\n  if (arguments.length === 2) {\n    expectedValue = arguments[0];\n    actualValue = arguments[1];\n    Assert.equals(expectedValue, actualValue, null);\n  } else if (arguments.length === 3) {\n    expectedValue = arguments[0];\n    actualValue = arguments[1];\n    message = arguments[2];\n    if (!actualValue.equals(expectedValue)) {\n      throw new AssertionFailedException('Expected ' + expectedValue + ' but encountered ' + actualValue + (message !== null ? ': ' + message : ''))\n    }\n  }\n};\n\nvar LineIntersector = function LineIntersector () {\n  this._result = null;\n  this._inputLines = Array(2).fill().map(function () { return Array(2); });\n  this._intPt = new Array(2).fill(null);\n  this._intLineIndex = null;\n  this._isProper = null;\n  this._pa = null;\n  this._pb = null;\n  this._precisionModel = null;\n  this._intPt[0] = new Coordinate();\n  this._intPt[1] = new Coordinate();\n  this._pa = this._intPt[0];\n  this._pb = this._intPt[1];\n  this._result = 0;\n};\n\nvar staticAccessors$10 = { DONT_INTERSECT: { configurable: true },DO_INTERSECT: { configurable: true },COLLINEAR: { configurable: true },NO_INTERSECTION: { configurable: true },POINT_INTERSECTION: { configurable: true },COLLINEAR_INTERSECTION: { configurable: true } };\nLineIntersector.prototype.getIndexAlongSegment = function getIndexAlongSegment (segmentIndex, intIndex) {\n  this.computeIntLineIndex();\n  return this._intLineIndex[segmentIndex][intIndex]\n};\nLineIntersector.prototype.getTopologySummary = function getTopologySummary () {\n  var catBuf = new StringBuffer();\n  if (this.isEndPoint()) { catBuf.append(' endpoint'); }\n  if (this._isProper) { catBuf.append(' proper'); }\n  if (this.isCollinear()) { catBuf.append(' collinear'); }\n  return catBuf.toString()\n};\nLineIntersector.prototype.computeIntersection = function computeIntersection (p1, p2, p3, p4) {\n  this._inputLines[0][0] = p1;\n  this._inputLines[0][1] = p2;\n  this._inputLines[1][0] = p3;\n  this._inputLines[1][1] = p4;\n  this._result = this.computeIntersect(p1, p2, p3, p4);\n};\nLineIntersector.prototype.getIntersectionNum = function getIntersectionNum () {\n  return this._result\n};\nLineIntersector.prototype.computeIntLineIndex = function computeIntLineIndex () {\n  if (arguments.length === 0) {\n    if (this._intLineIndex === null) {\n      this._intLineIndex = Array(2).fill().map(function () { return Array(2); });\n      this.computeIntLineIndex(0);\n      this.computeIntLineIndex(1);\n    }\n  } else if (arguments.length === 1) {\n    var segmentIndex = arguments[0];\n    var dist0 = this.getEdgeDistance(segmentIndex, 0);\n    var dist1 = this.getEdgeDistance(segmentIndex, 1);\n    if (dist0 > dist1) {\n      this._intLineIndex[segmentIndex][0] = 0;\n      this._intLineIndex[segmentIndex][1] = 1;\n    } else {\n      this._intLineIndex[segmentIndex][0] = 1;\n      this._intLineIndex[segmentIndex][1] = 0;\n    }\n  }\n};\nLineIntersector.prototype.isProper = function isProper () {\n  return this.hasIntersection() && this._isProper\n};\nLineIntersector.prototype.setPrecisionModel = function setPrecisionModel (precisionModel) {\n  this._precisionModel = precisionModel;\n};\nLineIntersector.prototype.isInteriorIntersection = function isInteriorIntersection () {\n    var this$1 = this;\n\n  if (arguments.length === 0) {\n    if (this.isInteriorIntersection(0)) { return true }\n    if (this.isInteriorIntersection(1)) { return true }\n    return false\n  } else if (arguments.length === 1) {\n    var inputLineIndex = arguments[0];\n    for (var i = 0; i < this._result; i++) {\n      if (!(this$1._intPt[i].equals2D(this$1._inputLines[inputLineIndex][0]) || this$1._intPt[i].equals2D(this$1._inputLines[inputLineIndex][1]))) {\n        return true\n      }\n    }\n    return false\n  }\n};\nLineIntersector.prototype.getIntersection = function getIntersection (intIndex) {\n  return this._intPt[intIndex]\n};\nLineIntersector.prototype.isEndPoint = function isEndPoint () {\n  return this.hasIntersection() && !this._isProper\n};\nLineIntersector.prototype.hasIntersection = function hasIntersection () {\n  return this._result !== LineIntersector.NO_INTERSECTION\n};\nLineIntersector.prototype.getEdgeDistance = function getEdgeDistance (segmentIndex, intIndex) {\n  var dist = LineIntersector.computeEdgeDistance(this._intPt[intIndex], this._inputLines[segmentIndex][0], this._inputLines[segmentIndex][1]);\n  return dist\n};\nLineIntersector.prototype.isCollinear = function isCollinear () {\n  return this._result === LineIntersector.COLLINEAR_INTERSECTION\n};\nLineIntersector.prototype.toString = function toString () {\n  return WKTWriter.toLineString(this._inputLines[0][0], this._inputLines[0][1]) + ' - ' + WKTWriter.toLineString(this._inputLines[1][0], this._inputLines[1][1]) + this.getTopologySummary()\n};\nLineIntersector.prototype.getEndpoint = function getEndpoint (segmentIndex, ptIndex) {\n  return this._inputLines[segmentIndex][ptIndex]\n};\nLineIntersector.prototype.isIntersection = function isIntersection (pt) {\n    var this$1 = this;\n\n  for (var i = 0; i < this._result; i++) {\n    if (this$1._intPt[i].equals2D(pt)) {\n      return true\n    }\n  }\n  return false\n};\nLineIntersector.prototype.getIntersectionAlongSegment = function getIntersectionAlongSegment (segmentIndex, intIndex) {\n  this.computeIntLineIndex();\n  return this._intPt[this._intLineIndex[segmentIndex][intIndex]]\n};\nLineIntersector.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nLineIntersector.prototype.getClass = function getClass () {\n  return LineIntersector\n};\nLineIntersector.computeEdgeDistance = function computeEdgeDistance (p, p0, p1) {\n  var dx = Math.abs(p1.x - p0.x);\n  var dy = Math.abs(p1.y - p0.y);\n  var dist = -1.0;\n  if (p.equals(p0)) {\n    dist = 0.0;\n  } else if (p.equals(p1)) {\n    if (dx > dy) { dist = dx; } else { dist = dy; }\n  } else {\n    var pdx = Math.abs(p.x - p0.x);\n    var pdy = Math.abs(p.y - p0.y);\n    if (dx > dy) { dist = pdx; } else { dist = pdy; }\n    if (dist === 0.0 && !p.equals(p0)) {\n      dist = Math.max(pdx, pdy);\n    }\n  }\n  Assert.isTrue(!(dist === 0.0 && !p.equals(p0)), 'Bad distance calculation');\n  return dist\n};\nLineIntersector.nonRobustComputeEdgeDistance = function nonRobustComputeEdgeDistance (p, p1, p2) {\n  var dx = p.x - p1.x;\n  var dy = p.y - p1.y;\n  var dist = Math.sqrt(dx * dx + dy * dy);\n  Assert.isTrue(!(dist === 0.0 && !p.equals(p1)), 'Invalid distance calculation');\n  return dist\n};\nstaticAccessors$10.DONT_INTERSECT.get = function () { return 0 };\nstaticAccessors$10.DO_INTERSECT.get = function () { return 1 };\nstaticAccessors$10.COLLINEAR.get = function () { return 2 };\nstaticAccessors$10.NO_INTERSECTION.get = function () { return 0 };\nstaticAccessors$10.POINT_INTERSECTION.get = function () { return 1 };\nstaticAccessors$10.COLLINEAR_INTERSECTION.get = function () { return 2 };\n\nObject.defineProperties( LineIntersector, staticAccessors$10 );\n\nvar RobustLineIntersector = (function (LineIntersector$$1) {\n  function RobustLineIntersector () {\n    LineIntersector$$1.apply(this, arguments);\n  }\n\n  if ( LineIntersector$$1 ) RobustLineIntersector.__proto__ = LineIntersector$$1;\n  RobustLineIntersector.prototype = Object.create( LineIntersector$$1 && LineIntersector$$1.prototype );\n  RobustLineIntersector.prototype.constructor = RobustLineIntersector;\n\n  RobustLineIntersector.prototype.isInSegmentEnvelopes = function isInSegmentEnvelopes (intPt) {\n    var env0 = new Envelope(this._inputLines[0][0], this._inputLines[0][1]);\n    var env1 = new Envelope(this._inputLines[1][0], this._inputLines[1][1]);\n    return env0.contains(intPt) && env1.contains(intPt)\n  };\n  RobustLineIntersector.prototype.computeIntersection = function computeIntersection () {\n    if (arguments.length === 3) {\n      var p = arguments[0];\n      var p1 = arguments[1];\n      var p2 = arguments[2];\n      this._isProper = false;\n      if (Envelope.intersects(p1, p2, p)) {\n        if (CGAlgorithms.orientationIndex(p1, p2, p) === 0 && CGAlgorithms.orientationIndex(p2, p1, p) === 0) {\n          this._isProper = true;\n          if (p.equals(p1) || p.equals(p2)) {\n            this._isProper = false;\n          }\n          this._result = LineIntersector$$1.POINT_INTERSECTION;\n          return null\n        }\n      }\n      this._result = LineIntersector$$1.NO_INTERSECTION;\n    } else { return LineIntersector$$1.prototype.computeIntersection.apply(this, arguments) }\n  };\n  RobustLineIntersector.prototype.normalizeToMinimum = function normalizeToMinimum (n1, n2, n3, n4, normPt) {\n    normPt.x = this.smallestInAbsValue(n1.x, n2.x, n3.x, n4.x);\n    normPt.y = this.smallestInAbsValue(n1.y, n2.y, n3.y, n4.y);\n    n1.x -= normPt.x;\n    n1.y -= normPt.y;\n    n2.x -= normPt.x;\n    n2.y -= normPt.y;\n    n3.x -= normPt.x;\n    n3.y -= normPt.y;\n    n4.x -= normPt.x;\n    n4.y -= normPt.y;\n  };\n  RobustLineIntersector.prototype.safeHCoordinateIntersection = function safeHCoordinateIntersection (p1, p2, q1, q2) {\n    var intPt = null;\n    try {\n      intPt = HCoordinate.intersection(p1, p2, q1, q2);\n    } catch (e) {\n      if (e instanceof NotRepresentableException) {\n        intPt = RobustLineIntersector.nearestEndpoint(p1, p2, q1, q2);\n      } else { throw e }\n    } finally {}\n    return intPt\n  };\n  RobustLineIntersector.prototype.intersection = function intersection (p1, p2, q1, q2) {\n    var intPt = this.intersectionWithNormalization(p1, p2, q1, q2);\n    if (!this.isInSegmentEnvelopes(intPt)) {\n      intPt = new Coordinate(RobustLineIntersector.nearestEndpoint(p1, p2, q1, q2));\n    }\n    if (this._precisionModel !== null) {\n      this._precisionModel.makePrecise(intPt);\n    }\n    return intPt\n  };\n  RobustLineIntersector.prototype.smallestInAbsValue = function smallestInAbsValue (x1, x2, x3, x4) {\n    var x = x1;\n    var xabs = Math.abs(x);\n    if (Math.abs(x2) < xabs) {\n      x = x2;\n      xabs = Math.abs(x2);\n    }\n    if (Math.abs(x3) < xabs) {\n      x = x3;\n      xabs = Math.abs(x3);\n    }\n    if (Math.abs(x4) < xabs) {\n      x = x4;\n    }\n    return x\n  };\n  RobustLineIntersector.prototype.checkDD = function checkDD (p1, p2, q1, q2, intPt) {\n    var intPtDD = CGAlgorithmsDD.intersection(p1, p2, q1, q2);\n    var isIn = this.isInSegmentEnvelopes(intPtDD);\n    System.out.println('DD in env = ' + isIn + '  --------------------- ' + intPtDD);\n    if (intPt.distance(intPtDD) > 0.0001) {\n      System.out.println('Distance = ' + intPt.distance(intPtDD));\n    }\n  };\n  RobustLineIntersector.prototype.intersectionWithNormalization = function intersectionWithNormalization (p1, p2, q1, q2) {\n    var n1 = new Coordinate(p1);\n    var n2 = new Coordinate(p2);\n    var n3 = new Coordinate(q1);\n    var n4 = new Coordinate(q2);\n    var normPt = new Coordinate();\n    this.normalizeToEnvCentre(n1, n2, n3, n4, normPt);\n    var intPt = this.safeHCoordinateIntersection(n1, n2, n3, n4);\n    intPt.x += normPt.x;\n    intPt.y += normPt.y;\n    return intPt\n  };\n  RobustLineIntersector.prototype.computeCollinearIntersection = function computeCollinearIntersection (p1, p2, q1, q2) {\n    var p1q1p2 = Envelope.intersects(p1, p2, q1);\n    var p1q2p2 = Envelope.intersects(p1, p2, q2);\n    var q1p1q2 = Envelope.intersects(q1, q2, p1);\n    var q1p2q2 = Envelope.intersects(q1, q2, p2);\n    if (p1q1p2 && p1q2p2) {\n      this._intPt[0] = q1;\n      this._intPt[1] = q2;\n      return LineIntersector$$1.COLLINEAR_INTERSECTION\n    }\n    if (q1p1q2 && q1p2q2) {\n      this._intPt[0] = p1;\n      this._intPt[1] = p2;\n      return LineIntersector$$1.COLLINEAR_INTERSECTION\n    }\n    if (p1q1p2 && q1p1q2) {\n      this._intPt[0] = q1;\n      this._intPt[1] = p1;\n      return q1.equals(p1) && !p1q2p2 && !q1p2q2 ? LineIntersector$$1.POINT_INTERSECTION : LineIntersector$$1.COLLINEAR_INTERSECTION\n    }\n    if (p1q1p2 && q1p2q2) {\n      this._intPt[0] = q1;\n      this._intPt[1] = p2;\n      return q1.equals(p2) && !p1q2p2 && !q1p1q2 ? LineIntersector$$1.POINT_INTERSECTION : LineIntersector$$1.COLLINEAR_INTERSECTION\n    }\n    if (p1q2p2 && q1p1q2) {\n      this._intPt[0] = q2;\n      this._intPt[1] = p1;\n      return q2.equals(p1) && !p1q1p2 && !q1p2q2 ? LineIntersector$$1.POINT_INTERSECTION : LineIntersector$$1.COLLINEAR_INTERSECTION\n    }\n    if (p1q2p2 && q1p2q2) {\n      this._intPt[0] = q2;\n      this._intPt[1] = p2;\n      return q2.equals(p2) && !p1q1p2 && !q1p1q2 ? LineIntersector$$1.POINT_INTERSECTION : LineIntersector$$1.COLLINEAR_INTERSECTION\n    }\n    return LineIntersector$$1.NO_INTERSECTION\n  };\n  RobustLineIntersector.prototype.normalizeToEnvCentre = function normalizeToEnvCentre (n00, n01, n10, n11, normPt) {\n    var minX0 = n00.x < n01.x ? n00.x : n01.x;\n    var minY0 = n00.y < n01.y ? n00.y : n01.y;\n    var maxX0 = n00.x > n01.x ? n00.x : n01.x;\n    var maxY0 = n00.y > n01.y ? n00.y : n01.y;\n    var minX1 = n10.x < n11.x ? n10.x : n11.x;\n    var minY1 = n10.y < n11.y ? n10.y : n11.y;\n    var maxX1 = n10.x > n11.x ? n10.x : n11.x;\n    var maxY1 = n10.y > n11.y ? n10.y : n11.y;\n    var intMinX = minX0 > minX1 ? minX0 : minX1;\n    var intMaxX = maxX0 < maxX1 ? maxX0 : maxX1;\n    var intMinY = minY0 > minY1 ? minY0 : minY1;\n    var intMaxY = maxY0 < maxY1 ? maxY0 : maxY1;\n    var intMidX = (intMinX + intMaxX) / 2.0;\n    var intMidY = (intMinY + intMaxY) / 2.0;\n    normPt.x = intMidX;\n    normPt.y = intMidY;\n    n00.x -= normPt.x;\n    n00.y -= normPt.y;\n    n01.x -= normPt.x;\n    n01.y -= normPt.y;\n    n10.x -= normPt.x;\n    n10.y -= normPt.y;\n    n11.x -= normPt.x;\n    n11.y -= normPt.y;\n  };\n  RobustLineIntersector.prototype.computeIntersect = function computeIntersect (p1, p2, q1, q2) {\n    this._isProper = false;\n    if (!Envelope.intersects(p1, p2, q1, q2)) { return LineIntersector$$1.NO_INTERSECTION }\n    var Pq1 = CGAlgorithms.orientationIndex(p1, p2, q1);\n    var Pq2 = CGAlgorithms.orientationIndex(p1, p2, q2);\n    if ((Pq1 > 0 && Pq2 > 0) || (Pq1 < 0 && Pq2 < 0)) {\n      return LineIntersector$$1.NO_INTERSECTION\n    }\n    var Qp1 = CGAlgorithms.orientationIndex(q1, q2, p1);\n    var Qp2 = CGAlgorithms.orientationIndex(q1, q2, p2);\n    if ((Qp1 > 0 && Qp2 > 0) || (Qp1 < 0 && Qp2 < 0)) {\n      return LineIntersector$$1.NO_INTERSECTION\n    }\n    var collinear = Pq1 === 0 && Pq2 === 0 && Qp1 === 0 && Qp2 === 0;\n    if (collinear) {\n      return this.computeCollinearIntersection(p1, p2, q1, q2)\n    }\n    if (Pq1 === 0 || Pq2 === 0 || Qp1 === 0 || Qp2 === 0) {\n      this._isProper = false;\n      if (p1.equals2D(q1) || p1.equals2D(q2)) {\n        this._intPt[0] = p1;\n      } else if (p2.equals2D(q1) || p2.equals2D(q2)) {\n        this._intPt[0] = p2;\n      } else if (Pq1 === 0) {\n        this._intPt[0] = new Coordinate(q1);\n      } else if (Pq2 === 0) {\n        this._intPt[0] = new Coordinate(q2);\n      } else if (Qp1 === 0) {\n        this._intPt[0] = new Coordinate(p1);\n      } else if (Qp2 === 0) {\n        this._intPt[0] = new Coordinate(p2);\n      }\n    } else {\n      this._isProper = true;\n      this._intPt[0] = this.intersection(p1, p2, q1, q2);\n    }\n    return LineIntersector$$1.POINT_INTERSECTION\n  };\n  RobustLineIntersector.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  RobustLineIntersector.prototype.getClass = function getClass () {\n    return RobustLineIntersector\n  };\n  RobustLineIntersector.nearestEndpoint = function nearestEndpoint (p1, p2, q1, q2) {\n    var nearestPt = p1;\n    var minDist = CGAlgorithms.distancePointLine(p1, q1, q2);\n    var dist = CGAlgorithms.distancePointLine(p2, q1, q2);\n    if (dist < minDist) {\n      minDist = dist;\n      nearestPt = p2;\n    }\n    dist = CGAlgorithms.distancePointLine(q1, p1, p2);\n    if (dist < minDist) {\n      minDist = dist;\n      nearestPt = q1;\n    }\n    dist = CGAlgorithms.distancePointLine(q2, p1, p2);\n    if (dist < minDist) {\n      minDist = dist;\n      nearestPt = q2;\n    }\n    return nearestPt\n  };\n\n  return RobustLineIntersector;\n}(LineIntersector));\n\nvar RobustDeterminant = function RobustDeterminant () {};\n\nRobustDeterminant.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nRobustDeterminant.prototype.getClass = function getClass () {\n  return RobustDeterminant\n};\nRobustDeterminant.orientationIndex = function orientationIndex (p1, p2, q) {\n  var dx1 = p2.x - p1.x;\n  var dy1 = p2.y - p1.y;\n  var dx2 = q.x - p2.x;\n  var dy2 = q.y - p2.y;\n  return RobustDeterminant.signOfDet2x2(dx1, dy1, dx2, dy2)\n};\nRobustDeterminant.signOfDet2x2 = function signOfDet2x2 (x1, y1, x2, y2) {\n  var sign = null;\n  var swap = null;\n  var k = null;\n  sign = 1;\n  if (x1 === 0.0 || y2 === 0.0) {\n    if (y1 === 0.0 || x2 === 0.0) {\n      return 0\n    } else if (y1 > 0) {\n      if (x2 > 0) {\n        return -sign\n      } else {\n        return sign\n      }\n    } else {\n      if (x2 > 0) {\n        return sign\n      } else {\n        return -sign\n      }\n    }\n  }\n  if (y1 === 0.0 || x2 === 0.0) {\n    if (y2 > 0) {\n      if (x1 > 0) {\n        return sign\n      } else {\n        return -sign\n      }\n    } else {\n      if (x1 > 0) {\n        return -sign\n      } else {\n        return sign\n      }\n    }\n  }\n  if (y1 > 0.0) {\n    if (y2 > 0.0) {\n      if (y1 <= y2) {\n        \n      } else {\n        sign = -sign;\n        swap = x1;\n        x1 = x2;\n        x2 = swap;\n        swap = y1;\n        y1 = y2;\n        y2 = swap;\n      }\n    } else {\n      if (y1 <= -y2) {\n        sign = -sign;\n        x2 = -x2;\n        y2 = -y2;\n      } else {\n        swap = x1;\n        x1 = -x2;\n        x2 = swap;\n        swap = y1;\n        y1 = -y2;\n        y2 = swap;\n      }\n    }\n  } else {\n    if (y2 > 0.0) {\n      if (-y1 <= y2) {\n        sign = -sign;\n        x1 = -x1;\n        y1 = -y1;\n      } else {\n        swap = -x1;\n        x1 = x2;\n        x2 = swap;\n        swap = -y1;\n        y1 = y2;\n        y2 = swap;\n      }\n    } else {\n      if (y1 >= y2) {\n        x1 = -x1;\n        y1 = -y1;\n        x2 = -x2;\n        y2 = -y2;\n      } else {\n        sign = -sign;\n        swap = -x1;\n        x1 = -x2;\n        x2 = swap;\n        swap = -y1;\n        y1 = -y2;\n        y2 = swap;\n      }\n    }\n  }\n  if (x1 > 0.0) {\n    if (x2 > 0.0) {\n      if (x1 <= x2) {\n        \n      } else {\n        return sign\n      }\n    } else {\n      return sign\n    }\n  } else {\n    if (x2 > 0.0) {\n      return -sign\n    } else {\n      if (x1 >= x2) {\n        sign = -sign;\n        x1 = -x1;\n        x2 = -x2;\n      } else {\n        return -sign\n      }\n    }\n  }\n  while (true) {\n    k = Math.floor(x2 / x1);\n    x2 = x2 - k * x1;\n    y2 = y2 - k * y1;\n    if (y2 < 0.0) {\n      return -sign\n    }\n    if (y2 > y1) {\n      return sign\n    }\n    if (x1 > x2 + x2) {\n      if (y1 < y2 + y2) {\n        return sign\n      }\n    } else {\n      if (y1 > y2 + y2) {\n        return -sign\n      } else {\n        x2 = x1 - x2;\n        y2 = y1 - y2;\n        sign = -sign;\n      }\n    }\n    if (y2 === 0.0) {\n      if (x2 === 0.0) {\n        return 0\n      } else {\n        return -sign\n      }\n    }\n    if (x2 === 0.0) {\n      return sign\n    }\n    k = Math.floor(x1 / x2);\n    x1 = x1 - k * x2;\n    y1 = y1 - k * y2;\n    if (y1 < 0.0) {\n      return sign\n    }\n    if (y1 > y2) {\n      return -sign\n    }\n    if (x2 > x1 + x1) {\n      if (y2 < y1 + y1) {\n        return -sign\n      }\n    } else {\n      if (y2 > y1 + y1) {\n        return sign\n      } else {\n        x1 = x2 - x1;\n        y1 = y2 - y1;\n        sign = -sign;\n      }\n    }\n    if (y1 === 0.0) {\n      if (x1 === 0.0) {\n        return 0\n      } else {\n        return sign\n      }\n    }\n    if (x1 === 0.0) {\n      return -sign\n    }\n  }\n};\n\nvar RayCrossingCounter = function RayCrossingCounter () {\n  this._p = null;\n  this._crossingCount = 0;\n  this._isPointOnSegment = false;\n  var p = arguments[0];\n  this._p = p;\n};\nRayCrossingCounter.prototype.countSegment = function countSegment (p1, p2) {\n  if (p1.x < this._p.x && p2.x < this._p.x) { return null }\n  if (this._p.x === p2.x && this._p.y === p2.y) {\n    this._isPointOnSegment = true;\n    return null\n  }\n  if (p1.y === this._p.y && p2.y === this._p.y) {\n    var minx = p1.x;\n    var maxx = p2.x;\n    if (minx > maxx) {\n      minx = p2.x;\n      maxx = p1.x;\n    }\n    if (this._p.x >= minx && this._p.x <= maxx) {\n      this._isPointOnSegment = true;\n    }\n    return null\n  }\n  if ((p1.y > this._p.y && p2.y <= this._p.y) || (p2.y > this._p.y && p1.y <= this._p.y)) {\n    var x1 = p1.x - this._p.x;\n    var y1 = p1.y - this._p.y;\n    var x2 = p2.x - this._p.x;\n    var y2 = p2.y - this._p.y;\n    var xIntSign = RobustDeterminant.signOfDet2x2(x1, y1, x2, y2);\n    if (xIntSign === 0.0) {\n      this._isPointOnSegment = true;\n      return null\n    }\n    if (y2 < y1) { xIntSign = -xIntSign; }\n    if (xIntSign > 0.0) {\n      this._crossingCount++;\n    }\n  }\n};\nRayCrossingCounter.prototype.isPointInPolygon = function isPointInPolygon () {\n  return this.getLocation() !== Location.EXTERIOR\n};\nRayCrossingCounter.prototype.getLocation = function getLocation () {\n  if (this._isPointOnSegment) { return Location.BOUNDARY }\n  if (this._crossingCount % 2 === 1) {\n    return Location.INTERIOR\n  }\n  return Location.EXTERIOR\n};\nRayCrossingCounter.prototype.isOnSegment = function isOnSegment () {\n  return this._isPointOnSegment\n};\nRayCrossingCounter.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nRayCrossingCounter.prototype.getClass = function getClass () {\n  return RayCrossingCounter\n};\nRayCrossingCounter.locatePointInRing = function locatePointInRing () {\n  if (arguments[0] instanceof Coordinate && hasInterface(arguments[1], CoordinateSequence)) {\n    var p = arguments[0];\n    var ring = arguments[1];\n    var counter = new RayCrossingCounter(p);\n    var p1 = new Coordinate();\n    var p2 = new Coordinate();\n    for (var i = 1; i < ring.size(); i++) {\n      ring.getCoordinate(i, p1);\n      ring.getCoordinate(i - 1, p2);\n      counter.countSegment(p1, p2);\n      if (counter.isOnSegment()) { return counter.getLocation() }\n    }\n    return counter.getLocation()\n  } else if (arguments[0] instanceof Coordinate && arguments[1] instanceof Array) {\n    var p$1 = arguments[0];\n    var ring$1 = arguments[1];\n    var counter$1 = new RayCrossingCounter(p$1);\n    for (var i$1 = 1; i$1 < ring$1.length; i$1++) {\n      var p1$1 = ring$1[i$1];\n      var p2$1 = ring$1[i$1 - 1];\n      counter$1.countSegment(p1$1, p2$1);\n      if (counter$1.isOnSegment()) { return counter$1.getLocation() }\n    }\n    return counter$1.getLocation()\n  }\n};\n\nvar CGAlgorithms = function CGAlgorithms () {};\n\nvar staticAccessors$3 = { CLOCKWISE: { configurable: true },RIGHT: { configurable: true },COUNTERCLOCKWISE: { configurable: true },LEFT: { configurable: true },COLLINEAR: { configurable: true },STRAIGHT: { configurable: true } };\n\nCGAlgorithms.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nCGAlgorithms.prototype.getClass = function getClass () {\n  return CGAlgorithms\n};\nCGAlgorithms.orientationIndex = function orientationIndex (p1, p2, q) {\n  return CGAlgorithmsDD.orientationIndex(p1, p2, q)\n};\nCGAlgorithms.signedArea = function signedArea () {\n  if (arguments[0] instanceof Array) {\n    var ring = arguments[0];\n    if (ring.length < 3) { return 0.0 }\n    var sum = 0.0;\n    var x0 = ring[0].x;\n    for (var i = 1; i < ring.length - 1; i++) {\n      var x = ring[i].x - x0;\n      var y1 = ring[i + 1].y;\n      var y2 = ring[i - 1].y;\n      sum += x * (y2 - y1);\n    }\n    return sum / 2.0\n  } else if (hasInterface(arguments[0], CoordinateSequence)) {\n    var ring$1 = arguments[0];\n    var n = ring$1.size();\n    if (n < 3) { return 0.0 }\n    var p0 = new Coordinate();\n    var p1 = new Coordinate();\n    var p2 = new Coordinate();\n    ring$1.getCoordinate(0, p1);\n    ring$1.getCoordinate(1, p2);\n    var x0$1 = p1.x;\n    p2.x -= x0$1;\n    var sum$1 = 0.0;\n    for (var i$1 = 1; i$1 < n - 1; i$1++) {\n      p0.y = p1.y;\n      p1.x = p2.x;\n      p1.y = p2.y;\n      ring$1.getCoordinate(i$1 + 1, p2);\n      p2.x -= x0$1;\n      sum$1 += p1.x * (p0.y - p2.y);\n    }\n    return sum$1 / 2.0\n  }\n};\nCGAlgorithms.distanceLineLine = function distanceLineLine (A, B, C, D) {\n  if (A.equals(B)) { return CGAlgorithms.distancePointLine(A, C, D) }\n  if (C.equals(D)) { return CGAlgorithms.distancePointLine(D, A, B) }\n  var noIntersection = false;\n  if (!Envelope.intersects(A, B, C, D)) {\n    noIntersection = true;\n  } else {\n    var denom = (B.x - A.x) * (D.y - C.y) - (B.y - A.y) * (D.x - C.x);\n    if (denom === 0) {\n      noIntersection = true;\n    } else {\n      var rNumb = (A.y - C.y) * (D.x - C.x) - (A.x - C.x) * (D.y - C.y);\n      var sNum = (A.y - C.y) * (B.x - A.x) - (A.x - C.x) * (B.y - A.y);\n      var s = sNum / denom;\n      var r = rNumb / denom;\n      if (r < 0 || r > 1 || s < 0 || s > 1) {\n        noIntersection = true;\n      }\n    }\n  }\n  if (noIntersection) {\n    return MathUtil.min(CGAlgorithms.distancePointLine(A, C, D), CGAlgorithms.distancePointLine(B, C, D), CGAlgorithms.distancePointLine(C, A, B), CGAlgorithms.distancePointLine(D, A, B))\n  }\n  return 0.0\n};\nCGAlgorithms.isPointInRing = function isPointInRing (p, ring) {\n  return CGAlgorithms.locatePointInRing(p, ring) !== Location.EXTERIOR\n};\nCGAlgorithms.computeLength = function computeLength (pts) {\n  var n = pts.size();\n  if (n <= 1) { return 0.0 }\n  var len = 0.0;\n  var p = new Coordinate();\n  pts.getCoordinate(0, p);\n  var x0 = p.x;\n  var y0 = p.y;\n  for (var i = 1; i < n; i++) {\n    pts.getCoordinate(i, p);\n    var x1 = p.x;\n    var y1 = p.y;\n    var dx = x1 - x0;\n    var dy = y1 - y0;\n    len += Math.sqrt(dx * dx + dy * dy);\n    x0 = x1;\n    y0 = y1;\n  }\n  return len\n};\nCGAlgorithms.isCCW = function isCCW (ring) {\n  var nPts = ring.length - 1;\n  if (nPts < 3) { throw new IllegalArgumentException('Ring has fewer than 4 points, so orientation cannot be determined') }\n  var hiPt = ring[0];\n  var hiIndex = 0;\n  for (var i = 1; i <= nPts; i++) {\n    var p = ring[i];\n    if (p.y > hiPt.y) {\n      hiPt = p;\n      hiIndex = i;\n    }\n  }\n  var iPrev = hiIndex;\n  do {\n    iPrev = iPrev - 1;\n    if (iPrev < 0) { iPrev = nPts; }\n  } while (ring[iPrev].equals2D(hiPt) && iPrev !== hiIndex)\n  var iNext = hiIndex;\n  do {\n    iNext = (iNext + 1) % nPts;\n  } while (ring[iNext].equals2D(hiPt) && iNext !== hiIndex)\n  var prev = ring[iPrev];\n  var next = ring[iNext];\n  if (prev.equals2D(hiPt) || next.equals2D(hiPt) || prev.equals2D(next)) { return false }\n  var disc = CGAlgorithms.computeOrientation(prev, hiPt, next);\n  var isCCW = false;\n  if (disc === 0) {\n    isCCW = prev.x > next.x;\n  } else {\n    isCCW = disc > 0;\n  }\n  return isCCW\n};\nCGAlgorithms.locatePointInRing = function locatePointInRing (p, ring) {\n  return RayCrossingCounter.locatePointInRing(p, ring)\n};\nCGAlgorithms.distancePointLinePerpendicular = function distancePointLinePerpendicular (p, A, B) {\n  var len2 = (B.x - A.x) * (B.x - A.x) + (B.y - A.y) * (B.y - A.y);\n  var s = ((A.y - p.y) * (B.x - A.x) - (A.x - p.x) * (B.y - A.y)) / len2;\n  return Math.abs(s) * Math.sqrt(len2)\n};\nCGAlgorithms.computeOrientation = function computeOrientation (p1, p2, q) {\n  return CGAlgorithms.orientationIndex(p1, p2, q)\n};\nCGAlgorithms.distancePointLine = function distancePointLine () {\n  if (arguments.length === 2) {\n    var p = arguments[0];\n    var line = arguments[1];\n    if (line.length === 0) { throw new IllegalArgumentException('Line array must contain at least one vertex') }\n    var minDistance = p.distance(line[0]);\n    for (var i = 0; i < line.length - 1; i++) {\n      var dist = CGAlgorithms.distancePointLine(p, line[i], line[i + 1]);\n      if (dist < minDistance) {\n        minDistance = dist;\n      }\n    }\n    return minDistance\n  } else if (arguments.length === 3) {\n    var p$1 = arguments[0];\n    var A = arguments[1];\n    var B = arguments[2];\n    if (A.x === B.x && A.y === B.y) { return p$1.distance(A) }\n    var len2 = (B.x - A.x) * (B.x - A.x) + (B.y - A.y) * (B.y - A.y);\n    var r = ((p$1.x - A.x) * (B.x - A.x) + (p$1.y - A.y) * (B.y - A.y)) / len2;\n    if (r <= 0.0) { return p$1.distance(A) }\n    if (r >= 1.0) { return p$1.distance(B) }\n    var s = ((A.y - p$1.y) * (B.x - A.x) - (A.x - p$1.x) * (B.y - A.y)) / len2;\n    return Math.abs(s) * Math.sqrt(len2)\n  }\n};\nCGAlgorithms.isOnLine = function isOnLine (p, pt) {\n  var lineIntersector = new RobustLineIntersector();\n  for (var i = 1; i < pt.length; i++) {\n    var p0 = pt[i - 1];\n    var p1 = pt[i];\n    lineIntersector.computeIntersection(p, p0, p1);\n    if (lineIntersector.hasIntersection()) {\n      return true\n    }\n  }\n  return false\n};\nstaticAccessors$3.CLOCKWISE.get = function () { return -1 };\nstaticAccessors$3.RIGHT.get = function () { return CGAlgorithms.CLOCKWISE };\nstaticAccessors$3.COUNTERCLOCKWISE.get = function () { return 1 };\nstaticAccessors$3.LEFT.get = function () { return CGAlgorithms.COUNTERCLOCKWISE };\nstaticAccessors$3.COLLINEAR.get = function () { return 0 };\nstaticAccessors$3.STRAIGHT.get = function () { return CGAlgorithms.COLLINEAR };\n\nObject.defineProperties( CGAlgorithms, staticAccessors$3 );\n\nvar GeometryComponentFilter = function GeometryComponentFilter () {};\n\nGeometryComponentFilter.prototype.filter = function filter (geom) {};\nGeometryComponentFilter.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nGeometryComponentFilter.prototype.getClass = function getClass () {\n  return GeometryComponentFilter\n};\n\nvar Geometry = function Geometry () {\n  var factory = arguments[0];\n\n  this._envelope = null;\n  this._factory = null;\n  this._SRID = null;\n  this._userData = null;\n  this._factory = factory;\n  this._SRID = factory.getSRID();\n};\n\nvar staticAccessors$11 = { serialVersionUID: { configurable: true },SORTINDEX_POINT: { configurable: true },SORTINDEX_MULTIPOINT: { configurable: true },SORTINDEX_LINESTRING: { configurable: true },SORTINDEX_LINEARRING: { configurable: true },SORTINDEX_MULTILINESTRING: { configurable: true },SORTINDEX_POLYGON: { configurable: true },SORTINDEX_MULTIPOLYGON: { configurable: true },SORTINDEX_GEOMETRYCOLLECTION: { configurable: true },geometryChangedFilter: { configurable: true } };\nGeometry.prototype.isGeometryCollection = function isGeometryCollection () {\n  return this.getSortIndex() === Geometry.SORTINDEX_GEOMETRYCOLLECTION\n};\nGeometry.prototype.getFactory = function getFactory () {\n  return this._factory\n};\nGeometry.prototype.getGeometryN = function getGeometryN (n) {\n  return this\n};\nGeometry.prototype.getArea = function getArea () {\n  return 0.0\n};\nGeometry.prototype.isRectangle = function isRectangle () {\n  return false\n};\nGeometry.prototype.equals = function equals () {\n  if (arguments[0] instanceof Geometry) {\n    var g$1 = arguments[0];\n    if (g$1 === null) { return false }\n    return this.equalsTopo(g$1)\n  } else if (arguments[0] instanceof Object) {\n    var o = arguments[0];\n    if (!(o instanceof Geometry)) { return false }\n    var g = o;\n    return this.equalsExact(g)\n  }\n};\nGeometry.prototype.equalsExact = function equalsExact (other) {\n  return this === other || this.equalsExact(other, 0)\n};\nGeometry.prototype.geometryChanged = function geometryChanged () {\n  this.apply(Geometry.geometryChangedFilter);\n};\nGeometry.prototype.geometryChangedAction = function geometryChangedAction () {\n  this._envelope = null;\n};\nGeometry.prototype.equalsNorm = function equalsNorm (g) {\n  if (g === null) { return false }\n  return this.norm().equalsExact(g.norm())\n};\nGeometry.prototype.getLength = function getLength () {\n  return 0.0\n};\nGeometry.prototype.getNumGeometries = function getNumGeometries () {\n  return 1\n};\nGeometry.prototype.compareTo = function compareTo () {\n  if (arguments.length === 1) {\n    var o = arguments[0];\n    var other = o;\n    if (this.getSortIndex() !== other.getSortIndex()) {\n      return this.getSortIndex() - other.getSortIndex()\n    }\n    if (this.isEmpty() && other.isEmpty()) {\n      return 0\n    }\n    if (this.isEmpty()) {\n      return -1\n    }\n    if (other.isEmpty()) {\n      return 1\n    }\n    return this.compareToSameClass(o)\n  } else if (arguments.length === 2) {\n    var other$1 = arguments[0];\n    var comp = arguments[1];\n    if (this.getSortIndex() !== other$1.getSortIndex()) {\n      return this.getSortIndex() - other$1.getSortIndex()\n    }\n    if (this.isEmpty() && other$1.isEmpty()) {\n      return 0\n    }\n    if (this.isEmpty()) {\n      return -1\n    }\n    if (other$1.isEmpty()) {\n      return 1\n    }\n    return this.compareToSameClass(other$1, comp)\n  }\n};\nGeometry.prototype.getUserData = function getUserData () {\n  return this._userData\n};\nGeometry.prototype.getSRID = function getSRID () {\n  return this._SRID\n};\nGeometry.prototype.getEnvelope = function getEnvelope () {\n  return this.getFactory().toGeometry(this.getEnvelopeInternal())\n};\nGeometry.prototype.checkNotGeometryCollection = function checkNotGeometryCollection (g) {\n  if (g.getSortIndex() === Geometry.SORTINDEX_GEOMETRYCOLLECTION) {\n    throw new IllegalArgumentException('This method does not support GeometryCollection arguments')\n  }\n};\nGeometry.prototype.equal = function equal (a, b, tolerance) {\n  if (tolerance === 0) {\n    return a.equals(b)\n  }\n  return a.distance(b) <= tolerance\n};\nGeometry.prototype.norm = function norm () {\n  var copy = this.copy();\n  copy.normalize();\n  return copy\n};\nGeometry.prototype.getPrecisionModel = function getPrecisionModel () {\n  return this._factory.getPrecisionModel()\n};\nGeometry.prototype.getEnvelopeInternal = function getEnvelopeInternal () {\n  if (this._envelope === null) {\n    this._envelope = this.computeEnvelopeInternal();\n  }\n  return new Envelope(this._envelope)\n};\nGeometry.prototype.setSRID = function setSRID (SRID) {\n  this._SRID = SRID;\n};\nGeometry.prototype.setUserData = function setUserData (userData) {\n  this._userData = userData;\n};\nGeometry.prototype.compare = function compare (a, b) {\n  var i = a.iterator();\n  var j = b.iterator();\n  while (i.hasNext() && j.hasNext()) {\n    var aElement = i.next();\n    var bElement = j.next();\n    var comparison = aElement.compareTo(bElement);\n    if (comparison !== 0) {\n      return comparison\n    }\n  }\n  if (i.hasNext()) {\n    return 1\n  }\n  if (j.hasNext()) {\n    return -1\n  }\n  return 0\n};\nGeometry.prototype.hashCode = function hashCode () {\n  return this.getEnvelopeInternal().hashCode()\n};\nGeometry.prototype.isGeometryCollectionOrDerived = function isGeometryCollectionOrDerived () {\n  if (this.getSortIndex() === Geometry.SORTINDEX_GEOMETRYCOLLECTION || this.getSortIndex() === Geometry.SORTINDEX_MULTIPOINT || this.getSortIndex() === Geometry.SORTINDEX_MULTILINESTRING || this.getSortIndex() === Geometry.SORTINDEX_MULTIPOLYGON) {\n    return true\n  }\n  return false\n};\nGeometry.prototype.interfaces_ = function interfaces_ () {\n  return [Clonable, Comparable, Serializable]\n};\nGeometry.prototype.getClass = function getClass () {\n  return Geometry\n};\nGeometry.hasNonEmptyElements = function hasNonEmptyElements (geometries) {\n  for (var i = 0; i < geometries.length; i++) {\n    if (!geometries[i].isEmpty()) {\n      return true\n    }\n  }\n  return false\n};\nGeometry.hasNullElements = function hasNullElements (array) {\n  for (var i = 0; i < array.length; i++) {\n    if (array[i] === null) {\n      return true\n    }\n  }\n  return false\n};\nstaticAccessors$11.serialVersionUID.get = function () { return 8763622679187376702 };\nstaticAccessors$11.SORTINDEX_POINT.get = function () { return 0 };\nstaticAccessors$11.SORTINDEX_MULTIPOINT.get = function () { return 1 };\nstaticAccessors$11.SORTINDEX_LINESTRING.get = function () { return 2 };\nstaticAccessors$11.SORTINDEX_LINEARRING.get = function () { return 3 };\nstaticAccessors$11.SORTINDEX_MULTILINESTRING.get = function () { return 4 };\nstaticAccessors$11.SORTINDEX_POLYGON.get = function () { return 5 };\nstaticAccessors$11.SORTINDEX_MULTIPOLYGON.get = function () { return 6 };\nstaticAccessors$11.SORTINDEX_GEOMETRYCOLLECTION.get = function () { return 7 };\nstaticAccessors$11.geometryChangedFilter.get = function () { return geometryChangedFilter };\n\nObject.defineProperties( Geometry, staticAccessors$11 );\n\nvar geometryChangedFilter = function geometryChangedFilter () {};\n\ngeometryChangedFilter.interfaces_ = function interfaces_ () {\n  return [GeometryComponentFilter]\n};\ngeometryChangedFilter.filter = function filter (geom) {\n  geom.geometryChangedAction();\n};\n\nvar CoordinateFilter = function CoordinateFilter () {};\n\nCoordinateFilter.prototype.filter = function filter (coord) {};\nCoordinateFilter.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nCoordinateFilter.prototype.getClass = function getClass () {\n  return CoordinateFilter\n};\n\nvar BoundaryNodeRule = function BoundaryNodeRule () {};\n\nvar staticAccessors$12 = { Mod2BoundaryNodeRule: { configurable: true },EndPointBoundaryNodeRule: { configurable: true },MultiValentEndPointBoundaryNodeRule: { configurable: true },MonoValentEndPointBoundaryNodeRule: { configurable: true },MOD2_BOUNDARY_RULE: { configurable: true },ENDPOINT_BOUNDARY_RULE: { configurable: true },MULTIVALENT_ENDPOINT_BOUNDARY_RULE: { configurable: true },MONOVALENT_ENDPOINT_BOUNDARY_RULE: { configurable: true },OGC_SFS_BOUNDARY_RULE: { configurable: true } };\n\nBoundaryNodeRule.prototype.isInBoundary = function isInBoundary (boundaryCount) {};\nBoundaryNodeRule.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nBoundaryNodeRule.prototype.getClass = function getClass () {\n  return BoundaryNodeRule\n};\nstaticAccessors$12.Mod2BoundaryNodeRule.get = function () { return Mod2BoundaryNodeRule };\nstaticAccessors$12.EndPointBoundaryNodeRule.get = function () { return EndPointBoundaryNodeRule };\nstaticAccessors$12.MultiValentEndPointBoundaryNodeRule.get = function () { return MultiValentEndPointBoundaryNodeRule };\nstaticAccessors$12.MonoValentEndPointBoundaryNodeRule.get = function () { return MonoValentEndPointBoundaryNodeRule };\nstaticAccessors$12.MOD2_BOUNDARY_RULE.get = function () { return new Mod2BoundaryNodeRule() };\nstaticAccessors$12.ENDPOINT_BOUNDARY_RULE.get = function () { return new EndPointBoundaryNodeRule() };\nstaticAccessors$12.MULTIVALENT_ENDPOINT_BOUNDARY_RULE.get = function () { return new MultiValentEndPointBoundaryNodeRule() };\nstaticAccessors$12.MONOVALENT_ENDPOINT_BOUNDARY_RULE.get = function () { return new MonoValentEndPointBoundaryNodeRule() };\nstaticAccessors$12.OGC_SFS_BOUNDARY_RULE.get = function () { return BoundaryNodeRule.MOD2_BOUNDARY_RULE };\n\nObject.defineProperties( BoundaryNodeRule, staticAccessors$12 );\n\nvar Mod2BoundaryNodeRule = function Mod2BoundaryNodeRule () {};\n\nMod2BoundaryNodeRule.prototype.isInBoundary = function isInBoundary (boundaryCount) {\n  return boundaryCount % 2 === 1\n};\nMod2BoundaryNodeRule.prototype.interfaces_ = function interfaces_ () {\n  return [BoundaryNodeRule]\n};\nMod2BoundaryNodeRule.prototype.getClass = function getClass () {\n  return Mod2BoundaryNodeRule\n};\n\nvar EndPointBoundaryNodeRule = function EndPointBoundaryNodeRule () {};\n\nEndPointBoundaryNodeRule.prototype.isInBoundary = function isInBoundary (boundaryCount) {\n  return boundaryCount > 0\n};\nEndPointBoundaryNodeRule.prototype.interfaces_ = function interfaces_ () {\n  return [BoundaryNodeRule]\n};\nEndPointBoundaryNodeRule.prototype.getClass = function getClass () {\n  return EndPointBoundaryNodeRule\n};\n\nvar MultiValentEndPointBoundaryNodeRule = function MultiValentEndPointBoundaryNodeRule () {};\n\nMultiValentEndPointBoundaryNodeRule.prototype.isInBoundary = function isInBoundary (boundaryCount) {\n  return boundaryCount > 1\n};\nMultiValentEndPointBoundaryNodeRule.prototype.interfaces_ = function interfaces_ () {\n  return [BoundaryNodeRule]\n};\nMultiValentEndPointBoundaryNodeRule.prototype.getClass = function getClass () {\n  return MultiValentEndPointBoundaryNodeRule\n};\n\nvar MonoValentEndPointBoundaryNodeRule = function MonoValentEndPointBoundaryNodeRule () {};\n\nMonoValentEndPointBoundaryNodeRule.prototype.isInBoundary = function isInBoundary (boundaryCount) {\n  return boundaryCount === 1\n};\nMonoValentEndPointBoundaryNodeRule.prototype.interfaces_ = function interfaces_ () {\n  return [BoundaryNodeRule]\n};\nMonoValentEndPointBoundaryNodeRule.prototype.getClass = function getClass () {\n  return MonoValentEndPointBoundaryNodeRule\n};\n\n// import Iterator from './Iterator'\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/Collection.html\n *\n * @constructor\n * @private\n */\nvar Collection = function Collection () {};\n\nCollection.prototype.add = function add () {};\n\n/**\n * Appends all of the elements in the specified collection to the end of this\n * list, in the order that they are returned by the specified collection's\n * iterator (optional operation).\n * @param {javascript.util.Collection} c\n * @return {boolean}\n */\nCollection.prototype.addAll = function addAll () {};\n\n/**\n * Returns true if this collection contains no elements.\n * @return {boolean}\n */\nCollection.prototype.isEmpty = function isEmpty () {};\n\n/**\n * Returns an iterator over the elements in this collection.\n * @return {javascript.util.Iterator}\n */\nCollection.prototype.iterator = function iterator () {};\n\n/**\n * Returns an iterator over the elements in this collection.\n * @return {number}\n */\nCollection.prototype.size = function size () {};\n\n/**\n * Returns an array containing all of the elements in this collection.\n * @return {Array}\n */\nCollection.prototype.toArray = function toArray () {};\n\n/**\n * Removes a single instance of the specified element from this collection if it\n * is present. (optional)\n * @param {Object} e\n * @return {boolean}\n */\nCollection.prototype.remove = function remove () {};\n\n/**\n * @param {string=} message Optional message\n * @extends {Error}\n * @constructor\n * @private\n */\nfunction IndexOutOfBoundsException (message) {\n  this.message = message || '';\n}\nIndexOutOfBoundsException.prototype = new Error();\n\n/**\n * @type {string}\n */\nIndexOutOfBoundsException.prototype.name = 'IndexOutOfBoundsException';\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/Iterator.html\n * @constructor\n * @private\n */\nvar Iterator = function Iterator () {};\n\nIterator.prototype.hasNext = function hasNext () {};\n\n/**\n * Returns the next element in the iteration.\n * @return {Object}\n */\nIterator.prototype.next = function next () {};\n\n/**\n * Removes from the underlying collection the last element returned by the\n * iterator (optional operation).\n */\nIterator.prototype.remove = function remove () {};\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/List.html\n *\n * @extends {javascript.util.Collection}\n * @constructor\n * @private\n */\nvar List = (function (Collection$$1) {\n  function List () {\n    Collection$$1.apply(this, arguments);\n  }\n\n  if ( Collection$$1 ) List.__proto__ = Collection$$1;\n  List.prototype = Object.create( Collection$$1 && Collection$$1.prototype );\n  List.prototype.constructor = List;\n\n  List.prototype.get = function get () { };\n\n  /**\n   * Replaces the element at the specified position in this list with the\n   * specified element (optional operation).\n   * @param {number} index\n   * @param {Object} e\n   * @return {Object}\n   */\n  List.prototype.set = function set () { };\n\n  /**\n   * Returns true if this collection contains no elements.\n   * @return {boolean}\n   */\n  List.prototype.isEmpty = function isEmpty () { };\n\n  return List;\n}(Collection));\n\n/**\n * @param {string=} message Optional message\n * @extends {Error}\n * @constructor\n * @private\n */\nfunction NoSuchElementException (message) {\n  this.message = message || '';\n}\nNoSuchElementException.prototype = new Error();\n\n/**\n * @type {string}\n */\nNoSuchElementException.prototype.name = 'NoSuchElementException';\n\n// import OperationNotSupported from './OperationNotSupported'\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/ArrayList.html\n *\n * @extends List\n * @private\n */\nvar ArrayList = (function (List$$1) {\n  function ArrayList () {\n    List$$1.call(this);\n    this.array_ = [];\n\n    if (arguments[0] instanceof Collection) {\n      this.addAll(arguments[0]);\n    }\n  }\n\n  if ( List$$1 ) ArrayList.__proto__ = List$$1;\n  ArrayList.prototype = Object.create( List$$1 && List$$1.prototype );\n  ArrayList.prototype.constructor = ArrayList;\n\n  ArrayList.prototype.ensureCapacity = function ensureCapacity () {};\n  ArrayList.prototype.interfaces_ = function interfaces_ () { return [List$$1, Collection] };\n\n  /**\n   * @override\n   */\n  ArrayList.prototype.add = function add (e) {\n    if (arguments.length === 1) {\n      this.array_.push(e);\n    } else {\n      this.array_.splice(arguments[0], arguments[1]);\n    }\n    return true\n  };\n\n  ArrayList.prototype.clear = function clear () {\n    this.array_ = [];\n  };\n\n  /**\n   * @override\n   */\n  ArrayList.prototype.addAll = function addAll (c) {\n    var this$1 = this;\n\n    for (var i = c.iterator(); i.hasNext();) {\n      this$1.add(i.next());\n    }\n    return true\n  };\n\n  /**\n   * @override\n   */\n  ArrayList.prototype.set = function set (index, element) {\n    var oldElement = this.array_[index];\n    this.array_[index] = element;\n    return oldElement\n  };\n\n  /**\n   * @override\n   */\n  ArrayList.prototype.iterator = function iterator () {\n    return new Iterator_(this)\n  };\n\n  /**\n   * @override\n   */\n  ArrayList.prototype.get = function get (index) {\n    if (index < 0 || index >= this.size()) {\n      throw new IndexOutOfBoundsException()\n    }\n\n    return this.array_[index]\n  };\n\n  /**\n   * @override\n   */\n  ArrayList.prototype.isEmpty = function isEmpty () {\n    return this.array_.length === 0\n  };\n\n  /**\n   * @override\n   */\n  ArrayList.prototype.size = function size () {\n    return this.array_.length\n  };\n\n  /**\n   * @override\n   */\n  ArrayList.prototype.toArray = function toArray () {\n    var this$1 = this;\n\n    var array = [];\n\n    for (var i = 0, len = this.array_.length; i < len; i++) {\n      array.push(this$1.array_[i]);\n    }\n\n    return array\n  };\n\n  /**\n   * @override\n   */\n  ArrayList.prototype.remove = function remove (o) {\n    var this$1 = this;\n\n    var found = false;\n\n    for (var i = 0, len = this.array_.length; i < len; i++) {\n      if (this$1.array_[i] === o) {\n        this$1.array_.splice(i, 1);\n        found = true;\n        break\n      }\n    }\n\n    return found\n  };\n\n  return ArrayList;\n}(List));\n\n/**\n * @extends {Iterator}\n * @param {ArrayList} arrayList\n * @constructor\n * @private\n */\nvar Iterator_ = (function (Iterator$$1) {\n  function Iterator_ (arrayList) {\n    Iterator$$1.call(this);\n    /**\n     * @type {ArrayList}\n     * @private\n    */\n    this.arrayList_ = arrayList;\n    /**\n     * @type {number}\n     * @private\n    */\n    this.position_ = 0;\n  }\n\n  if ( Iterator$$1 ) Iterator_.__proto__ = Iterator$$1;\n  Iterator_.prototype = Object.create( Iterator$$1 && Iterator$$1.prototype );\n  Iterator_.prototype.constructor = Iterator_;\n\n  /**\n   * @override\n   */\n  Iterator_.prototype.next = function next () {\n    if (this.position_ === this.arrayList_.size()) {\n      throw new NoSuchElementException()\n    }\n    return this.arrayList_.get(this.position_++)\n  };\n\n  /**\n   * @override\n   */\n  Iterator_.prototype.hasNext = function hasNext () {\n    if (this.position_ < this.arrayList_.size()) {\n      return true\n    } else {\n      return false\n    }\n  };\n\n  /**\n   * TODO: should be in ListIterator\n   * @override\n   */\n  Iterator_.prototype.set = function set (element) {\n    return this.arrayList_.set(this.position_ - 1, element)\n  };\n\n  /**\n   * @override\n   */\n  Iterator_.prototype.remove = function remove () {\n    this.arrayList_.remove(this.arrayList_.get(this.position_));\n  };\n\n  return Iterator_;\n}(Iterator));\n\nvar CoordinateList = (function (ArrayList$$1) {\n  function CoordinateList () {\n    ArrayList$$1.call(this);\n    if (arguments.length === 0) {\n    } else if (arguments.length === 1) {\n      var coord = arguments[0];\n      this.ensureCapacity(coord.length);\n      this.add(coord, true);\n    } else if (arguments.length === 2) {\n      var coord$1 = arguments[0];\n      var allowRepeated = arguments[1];\n      this.ensureCapacity(coord$1.length);\n      this.add(coord$1, allowRepeated);\n    }\n  }\n\n  if ( ArrayList$$1 ) CoordinateList.__proto__ = ArrayList$$1;\n  CoordinateList.prototype = Object.create( ArrayList$$1 && ArrayList$$1.prototype );\n  CoordinateList.prototype.constructor = CoordinateList;\n\n  var staticAccessors = { coordArrayType: { configurable: true } };\n  staticAccessors.coordArrayType.get = function () { return new Array(0).fill(null) };\n  CoordinateList.prototype.getCoordinate = function getCoordinate (i) {\n    return this.get(i)\n  };\n  CoordinateList.prototype.addAll = function addAll () {\n    var this$1 = this;\n\n    if (arguments.length === 2) {\n      var coll = arguments[0];\n      var allowRepeated = arguments[1];\n      var isChanged = false;\n      for (var i = coll.iterator(); i.hasNext();) {\n        this$1.add(i.next(), allowRepeated);\n        isChanged = true;\n      }\n      return isChanged\n    } else { return ArrayList$$1.prototype.addAll.apply(this, arguments) }\n  };\n  CoordinateList.prototype.clone = function clone () {\n    var this$1 = this;\n\n    var clone = ArrayList$$1.prototype.clone.call(this);\n    for (var i = 0; i < this.size(); i++) {\n      clone.add(i, this$1.get(i).copy());\n    }\n    return clone\n  };\n  CoordinateList.prototype.toCoordinateArray = function toCoordinateArray () {\n    return this.toArray(CoordinateList.coordArrayType)\n  };\n  CoordinateList.prototype.add = function add () {\n    var this$1 = this;\n\n    if (arguments.length === 1) {\n      var coord = arguments[0];\n      ArrayList$$1.prototype.add.call(this, coord);\n    } else if (arguments.length === 2) {\n      if (arguments[0] instanceof Array && typeof arguments[1] === 'boolean') {\n        var coord$1 = arguments[0];\n        var allowRepeated = arguments[1];\n        this.add(coord$1, allowRepeated, true);\n        return true\n      } else if (arguments[0] instanceof Coordinate && typeof arguments[1] === 'boolean') {\n        var coord$2 = arguments[0];\n        var allowRepeated$1 = arguments[1];\n        if (!allowRepeated$1) {\n          if (this.size() >= 1) {\n            var last = this.get(this.size() - 1);\n            if (last.equals2D(coord$2)) { return null }\n          }\n        }\n        ArrayList$$1.prototype.add.call(this, coord$2);\n      } else if (arguments[0] instanceof Object && typeof arguments[1] === 'boolean') {\n        var obj = arguments[0];\n        var allowRepeated$2 = arguments[1];\n        this.add(obj, allowRepeated$2);\n        return true\n      }\n    } else if (arguments.length === 3) {\n      if (typeof arguments[2] === 'boolean' && (arguments[0] instanceof Array && typeof arguments[1] === 'boolean')) {\n        var coord$3 = arguments[0];\n        var allowRepeated$3 = arguments[1];\n        var direction = arguments[2];\n        if (direction) {\n          for (var i$1 = 0; i$1 < coord$3.length; i$1++) {\n            this$1.add(coord$3[i$1], allowRepeated$3);\n          }\n        } else {\n          for (var i$2 = coord$3.length - 1; i$2 >= 0; i$2--) {\n            this$1.add(coord$3[i$2], allowRepeated$3);\n          }\n        }\n        return true\n      } else if (typeof arguments[2] === 'boolean' && (Number.isInteger(arguments[0]) && arguments[1] instanceof Coordinate)) {\n        var i$3 = arguments[0];\n        var coord$4 = arguments[1];\n        var allowRepeated$4 = arguments[2];\n        if (!allowRepeated$4) {\n          var size = this.size();\n          if (size > 0) {\n            if (i$3 > 0) {\n              var prev = this.get(i$3 - 1);\n              if (prev.equals2D(coord$4)) { return null }\n            }\n            if (i$3 < size) {\n              var next = this.get(i$3);\n              if (next.equals2D(coord$4)) { return null }\n            }\n          }\n        }\n        ArrayList$$1.prototype.add.call(this, i$3, coord$4);\n      }\n    } else if (arguments.length === 4) {\n      var coord$5 = arguments[0];\n      var allowRepeated$5 = arguments[1];\n      var start = arguments[2];\n      var end = arguments[3];\n      var inc = 1;\n      if (start > end) { inc = -1; }\n      for (var i = start; i !== end; i += inc) {\n        this$1.add(coord$5[i], allowRepeated$5);\n      }\n      return true\n    }\n  };\n  CoordinateList.prototype.closeRing = function closeRing () {\n    if (this.size() > 0) { this.add(new Coordinate(this.get(0)), false); }\n  };\n  CoordinateList.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  CoordinateList.prototype.getClass = function getClass () {\n    return CoordinateList\n  };\n\n  Object.defineProperties( CoordinateList, staticAccessors );\n\n  return CoordinateList;\n}(ArrayList));\n\nvar CoordinateArrays = function CoordinateArrays () {};\n\nvar staticAccessors$13 = { ForwardComparator: { configurable: true },BidirectionalComparator: { configurable: true },coordArrayType: { configurable: true } };\n\nstaticAccessors$13.ForwardComparator.get = function () { return ForwardComparator };\nstaticAccessors$13.BidirectionalComparator.get = function () { return BidirectionalComparator };\nstaticAccessors$13.coordArrayType.get = function () { return new Array(0).fill(null) };\n\nCoordinateArrays.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nCoordinateArrays.prototype.getClass = function getClass () {\n  return CoordinateArrays\n};\nCoordinateArrays.isRing = function isRing (pts) {\n  if (pts.length < 4) { return false }\n  if (!pts[0].equals2D(pts[pts.length - 1])) { return false }\n  return true\n};\nCoordinateArrays.ptNotInList = function ptNotInList (testPts, pts) {\n  for (var i = 0; i < testPts.length; i++) {\n    var testPt = testPts[i];\n    if (CoordinateArrays.indexOf(testPt, pts) < 0) { return testPt }\n  }\n  return null\n};\nCoordinateArrays.scroll = function scroll (coordinates, firstCoordinate) {\n  var i = CoordinateArrays.indexOf(firstCoordinate, coordinates);\n  if (i < 0) { return null }\n  var newCoordinates = new Array(coordinates.length).fill(null);\n  System.arraycopy(coordinates, i, newCoordinates, 0, coordinates.length - i);\n  System.arraycopy(coordinates, 0, newCoordinates, coordinates.length - i, i);\n  System.arraycopy(newCoordinates, 0, coordinates, 0, coordinates.length);\n};\nCoordinateArrays.equals = function equals () {\n  if (arguments.length === 2) {\n    var coord1 = arguments[0];\n    var coord2 = arguments[1];\n    if (coord1 === coord2) { return true }\n    if (coord1 === null || coord2 === null) { return false }\n    if (coord1.length !== coord2.length) { return false }\n    for (var i = 0; i < coord1.length; i++) {\n      if (!coord1[i].equals(coord2[i])) { return false }\n    }\n    return true\n  } else if (arguments.length === 3) {\n    var coord1$1 = arguments[0];\n    var coord2$1 = arguments[1];\n    var coordinateComparator = arguments[2];\n    if (coord1$1 === coord2$1) { return true }\n    if (coord1$1 === null || coord2$1 === null) { return false }\n    if (coord1$1.length !== coord2$1.length) { return false }\n    for (var i$1 = 0; i$1 < coord1$1.length; i$1++) {\n      if (coordinateComparator.compare(coord1$1[i$1], coord2$1[i$1]) !== 0) { return false }\n    }\n    return true\n  }\n};\nCoordinateArrays.intersection = function intersection (coordinates, env) {\n  var coordList = new CoordinateList();\n  for (var i = 0; i < coordinates.length; i++) {\n    if (env.intersects(coordinates[i])) { coordList.add(coordinates[i], true); }\n  }\n  return coordList.toCoordinateArray()\n};\nCoordinateArrays.hasRepeatedPoints = function hasRepeatedPoints (coord) {\n  for (var i = 1; i < coord.length; i++) {\n    if (coord[i - 1].equals(coord[i])) {\n      return true\n    }\n  }\n  return false\n};\nCoordinateArrays.removeRepeatedPoints = function removeRepeatedPoints (coord) {\n  if (!CoordinateArrays.hasRepeatedPoints(coord)) { return coord }\n  var coordList = new CoordinateList(coord, false);\n  return coordList.toCoordinateArray()\n};\nCoordinateArrays.reverse = function reverse (coord) {\n  var last = coord.length - 1;\n  var mid = Math.trunc(last / 2);\n  for (var i = 0; i <= mid; i++) {\n    var tmp = coord[i];\n    coord[i] = coord[last - i];\n    coord[last - i] = tmp;\n  }\n};\nCoordinateArrays.removeNull = function removeNull (coord) {\n  var nonNull = 0;\n  for (var i = 0; i < coord.length; i++) {\n    if (coord[i] !== null) { nonNull++; }\n  }\n  var newCoord = new Array(nonNull).fill(null);\n  if (nonNull === 0) { return newCoord }\n  var j = 0;\n  for (var i$1 = 0; i$1 < coord.length; i$1++) {\n    if (coord[i$1] !== null) { newCoord[j++] = coord[i$1]; }\n  }\n  return newCoord\n};\nCoordinateArrays.copyDeep = function copyDeep () {\n  if (arguments.length === 1) {\n    var coordinates = arguments[0];\n    var copy = new Array(coordinates.length).fill(null);\n    for (var i = 0; i < coordinates.length; i++) {\n      copy[i] = new Coordinate(coordinates[i]);\n    }\n    return copy\n  } else if (arguments.length === 5) {\n    var src = arguments[0];\n    var srcStart = arguments[1];\n    var dest = arguments[2];\n    var destStart = arguments[3];\n    var length = arguments[4];\n    for (var i$1 = 0; i$1 < length; i$1++) {\n      dest[destStart + i$1] = new Coordinate(src[srcStart + i$1]);\n    }\n  }\n};\nCoordinateArrays.isEqualReversed = function isEqualReversed (pts1, pts2) {\n  for (var i = 0; i < pts1.length; i++) {\n    var p1 = pts1[i];\n    var p2 = pts2[pts1.length - i - 1];\n    if (p1.compareTo(p2) !== 0) { return false }\n  }\n  return true\n};\nCoordinateArrays.envelope = function envelope (coordinates) {\n  var env = new Envelope();\n  for (var i = 0; i < coordinates.length; i++) {\n    env.expandToInclude(coordinates[i]);\n  }\n  return env\n};\nCoordinateArrays.toCoordinateArray = function toCoordinateArray (coordList) {\n  return coordList.toArray(CoordinateArrays.coordArrayType)\n};\nCoordinateArrays.atLeastNCoordinatesOrNothing = function atLeastNCoordinatesOrNothing (n, c) {\n  return c.length >= n ? c : []\n};\nCoordinateArrays.indexOf = function indexOf (coordinate, coordinates) {\n  for (var i = 0; i < coordinates.length; i++) {\n    if (coordinate.equals(coordinates[i])) {\n      return i\n    }\n  }\n  return -1\n};\nCoordinateArrays.increasingDirection = function increasingDirection (pts) {\n  for (var i = 0; i < Math.trunc(pts.length / 2); i++) {\n    var j = pts.length - 1 - i;\n    var comp = pts[i].compareTo(pts[j]);\n    if (comp !== 0) { return comp }\n  }\n  return 1\n};\nCoordinateArrays.compare = function compare (pts1, pts2) {\n  var i = 0;\n  while (i < pts1.length && i < pts2.length) {\n    var compare = pts1[i].compareTo(pts2[i]);\n    if (compare !== 0) { return compare }\n    i++;\n  }\n  if (i < pts2.length) { return -1 }\n  if (i < pts1.length) { return 1 }\n  return 0\n};\nCoordinateArrays.minCoordinate = function minCoordinate (coordinates) {\n  var minCoord = null;\n  for (var i = 0; i < coordinates.length; i++) {\n    if (minCoord === null || minCoord.compareTo(coordinates[i]) > 0) {\n      minCoord = coordinates[i];\n    }\n  }\n  return minCoord\n};\nCoordinateArrays.extract = function extract (pts, start, end) {\n  start = MathUtil.clamp(start, 0, pts.length);\n  end = MathUtil.clamp(end, -1, pts.length);\n  var npts = end - start + 1;\n  if (end < 0) { npts = 0; }\n  if (start >= pts.length) { npts = 0; }\n  if (end < start) { npts = 0; }\n  var extractPts = new Array(npts).fill(null);\n  if (npts === 0) { return extractPts }\n  var iPts = 0;\n  for (var i = start; i <= end; i++) {\n    extractPts[iPts++] = pts[i];\n  }\n  return extractPts\n};\n\nObject.defineProperties( CoordinateArrays, staticAccessors$13 );\n\nvar ForwardComparator = function ForwardComparator () {};\n\nForwardComparator.prototype.compare = function compare (o1, o2) {\n  var pts1 = o1;\n  var pts2 = o2;\n  return CoordinateArrays.compare(pts1, pts2)\n};\nForwardComparator.prototype.interfaces_ = function interfaces_ () {\n  return [Comparator]\n};\nForwardComparator.prototype.getClass = function getClass () {\n  return ForwardComparator\n};\n\nvar BidirectionalComparator = function BidirectionalComparator () {};\n\nBidirectionalComparator.prototype.compare = function compare (o1, o2) {\n  var pts1 = o1;\n  var pts2 = o2;\n  if (pts1.length < pts2.length) { return -1 }\n  if (pts1.length > pts2.length) { return 1 }\n  if (pts1.length === 0) { return 0 }\n  var forwardComp = CoordinateArrays.compare(pts1, pts2);\n  var isEqualRev = CoordinateArrays.isEqualReversed(pts1, pts2);\n  if (isEqualRev) { return 0 }\n  return forwardComp\n};\nBidirectionalComparator.prototype.OLDcompare = function OLDcompare (o1, o2) {\n  var pts1 = o1;\n  var pts2 = o2;\n  if (pts1.length < pts2.length) { return -1 }\n  if (pts1.length > pts2.length) { return 1 }\n  if (pts1.length === 0) { return 0 }\n  var dir1 = CoordinateArrays.increasingDirection(pts1);\n  var dir2 = CoordinateArrays.increasingDirection(pts2);\n  var i1 = dir1 > 0 ? 0 : pts1.length - 1;\n  var i2 = dir2 > 0 ? 0 : pts1.length - 1;\n  for (var i = 0; i < pts1.length; i++) {\n    var comparePt = pts1[i1].compareTo(pts2[i2]);\n    if (comparePt !== 0) { return comparePt }\n    i1 += dir1;\n    i2 += dir2;\n  }\n  return 0\n};\nBidirectionalComparator.prototype.interfaces_ = function interfaces_ () {\n  return [Comparator]\n};\nBidirectionalComparator.prototype.getClass = function getClass () {\n  return BidirectionalComparator\n};\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/Map.html\n *\n * @constructor\n * @private\n */\nvar Map$1 = function Map () {};\n\nMap$1.prototype.get = function get () {};\n/**\n * Associates the specified value with the specified key in this map (optional\n * operation).\n * @param {Object} key\n * @param {Object} value\n * @return {Object}\n */\nMap$1.prototype.put = function put () {};\n\n/**\n * Returns the number of key-value mappings in this map.\n * @return {number}\n */\nMap$1.prototype.size = function size () {};\n\n/**\n * Returns a Collection view of the values contained in this map.\n * @return {javascript.util.Collection}\n */\nMap$1.prototype.values = function values () {};\n\n/**\n * Returns a {@link Set} view of the mappings contained in this map.\n * The set is backed by the map, so changes to the map are\n * reflected in the set, and vice-versa.If the map is modified\n * while an iteration over the set is in progress (except through\n * the iterator's own <tt>remove</tt> operation, or through the\n * <tt>setValue</tt> operation on a map entry returned by the\n * iterator) the results of the iteration are undefined.The set\n * supports element removal, which removes the corresponding\n * mapping from the map, via the <tt>Iterator.remove</tt>,\n * <tt>Set.remove</tt>, <tt>removeAll</tt>, <tt>retainAll</tt> and\n * <tt>clear</tt> operations.It does not support the\n * <tt>add</tt> or <tt>addAll</tt> operations.\n *\n * @return {Set} a set view of the mappings contained in this map\n */\nMap$1.prototype.entrySet = function entrySet () {};\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/SortedMap.html\n *\n * @extends {Map}\n * @constructor\n * @private\n */\nvar SortedMap = (function (Map) {\n\tfunction SortedMap () {\n\t\tMap.apply(this, arguments);\n\t}if ( Map ) SortedMap.__proto__ = Map;\n\tSortedMap.prototype = Object.create( Map && Map.prototype );\n\tSortedMap.prototype.constructor = SortedMap;\n\n\t\n\n\treturn SortedMap;\n}(Map$1));\n\n/**\n * @param {string=} message Optional message\n * @extends {Error}\n * @constructor\n * @private\n */\nfunction OperationNotSupported (message) {\n  this.message = message || '';\n}\nOperationNotSupported.prototype = new Error();\n\n/**\n * @type {string}\n */\nOperationNotSupported.prototype.name = 'OperationNotSupported';\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/Set.html\n *\n * @extends {Collection}\n * @constructor\n * @private\n */\nfunction Set() {}\nSet.prototype = new Collection();\n\n\n/**\n * Returns true if this set contains the specified element. More formally,\n * returns true if and only if this set contains an element e such that (o==null ?\n * e==null : o.equals(e)).\n * @param {Object} e\n * @return {boolean}\n */\nSet.prototype.contains = function() {};\n\n/**\n * @see http://docs.oracle.com/javase/6/docs/api/java/util/HashSet.html\n *\n * @extends {javascript.util.Set}\n * @constructor\n * @private\n */\nvar HashSet = (function (Set$$1) {\n  function HashSet () {\n    Set$$1.call(this);\n    this.array_ = [];\n\n    if (arguments[0] instanceof Collection) {\n      this.addAll(arguments[0]);\n    }\n  }\n\n  if ( Set$$1 ) HashSet.__proto__ = Set$$1;\n  HashSet.prototype = Object.create( Set$$1 && Set$$1.prototype );\n  HashSet.prototype.constructor = HashSet;\n\n  /**\n   * @override\n   */\n  HashSet.prototype.contains = function contains (o) {\n    var this$1 = this;\n\n    for (var i = 0, len = this.array_.length; i < len; i++) {\n      var e = this$1.array_[i];\n      if (e === o) {\n        return true\n      }\n    }\n    return false\n  };\n\n  /**\n   * @override\n   */\n  HashSet.prototype.add = function add (o) {\n    if (this.contains(o)) {\n      return false\n    }\n\n    this.array_.push(o);\n\n    return true\n  };\n\n  /**\n   * @override\n   */\n  HashSet.prototype.addAll = function addAll (c) {\n    var this$1 = this;\n\n    for (var i = c.iterator(); i.hasNext();) {\n      this$1.add(i.next());\n    }\n    return true\n  };\n\n  /**\n   * @override\n   */\n  HashSet.prototype.remove = function remove (o) {\n    // throw new javascript.util.OperationNotSupported()\n    throw new Error()\n  };\n\n  /**\n   * @override\n   */\n  HashSet.prototype.size = function size () {\n    return this.array_.length\n  };\n\n  /**\n   * @override\n   */\n  HashSet.prototype.isEmpty = function isEmpty () {\n    return this.array_.length === 0\n  };\n\n  /**\n   * @override\n   */\n  HashSet.prototype.toArray = function toArray () {\n    var this$1 = this;\n\n    var array = [];\n\n    for (var i = 0, len = this.array_.length; i < len; i++) {\n      array.push(this$1.array_[i]);\n    }\n\n    return array\n  };\n\n  /**\n   * @override\n   */\n  HashSet.prototype.iterator = function iterator () {\n    return new Iterator_$1(this)\n  };\n\n  return HashSet;\n}(Set));\n\n/**\n   * @extends {Iterator}\n   * @param {HashSet} hashSet\n   * @constructor\n   * @private\n   */\nvar Iterator_$1 = (function (Iterator$$1) {\n  function Iterator_ (hashSet) {\n    Iterator$$1.call(this);\n    /**\n     * @type {HashSet}\n     * @private\n     */\n    this.hashSet_ = hashSet;\n    /**\n     * @type {number}\n     * @private\n     */\n    this.position_ = 0;\n  }\n\n  if ( Iterator$$1 ) Iterator_.__proto__ = Iterator$$1;\n  Iterator_.prototype = Object.create( Iterator$$1 && Iterator$$1.prototype );\n  Iterator_.prototype.constructor = Iterator_;\n\n  /**\n   * @override\n   */\n  Iterator_.prototype.next = function next () {\n    if (this.position_ === this.hashSet_.size()) {\n      throw new NoSuchElementException()\n    }\n    return this.hashSet_.array_[this.position_++]\n  };\n\n  /**\n   * @override\n   */\n  Iterator_.prototype.hasNext = function hasNext () {\n    if (this.position_ < this.hashSet_.size()) {\n      return true\n    } else {\n      return false\n    }\n  };\n\n  /**\n   * @override\n   */\n  Iterator_.prototype.remove = function remove () {\n    throw new OperationNotSupported()\n  };\n\n  return Iterator_;\n}(Iterator));\n\nvar BLACK = 0;\nvar RED = 1;\nfunction colorOf (p) { return (p === null ? BLACK : p.color) }\nfunction parentOf (p) { return (p === null ? null : p.parent) }\nfunction setColor (p, c) { if (p !== null) { p.color = c; } }\nfunction leftOf (p) { return (p === null ? null : p.left) }\nfunction rightOf (p) { return (p === null ? null : p.right) }\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/TreeMap.html\n *\n * @extends {SortedMap}\n * @constructor\n * @private\n */\nfunction TreeMap () {\n  /**\n   * @type {Object}\n   * @private\n   */\n  this.root_ = null;\n  /**\n   * @type {number}\n   * @private\n  */\n  this.size_ = 0;\n}\nTreeMap.prototype = new SortedMap();\n\n/**\n * @override\n */\nTreeMap.prototype.get = function (key) {\n  var p = this.root_;\n  while (p !== null) {\n    var cmp = key['compareTo'](p.key);\n    if (cmp < 0) { p = p.left; }\n    else if (cmp > 0) { p = p.right; }\n    else { return p.value }\n  }\n  return null\n};\n\n/**\n * @override\n */\nTreeMap.prototype.put = function (key, value) {\n  if (this.root_ === null) {\n    this.root_ = {\n      key: key,\n      value: value,\n      left: null,\n      right: null,\n      parent: null,\n      color: BLACK,\n      getValue: function getValue () { return this.value },\n      getKey: function getKey () { return this.key }\n    };\n    this.size_ = 1;\n    return null\n  }\n  var t = this.root_;\n  var parent;\n  var cmp;\n  do {\n    parent = t;\n    cmp = key['compareTo'](t.key);\n    if (cmp < 0) {\n      t = t.left;\n    } else if (cmp > 0) {\n      t = t.right;\n    } else {\n      var oldValue = t.value;\n      t.value = value;\n      return oldValue\n    }\n  } while (t !== null)\n  var e = {\n    key: key,\n    left: null,\n    right: null,\n    value: value,\n    parent: parent,\n    color: BLACK,\n    getValue: function getValue () { return this.value },\n    getKey: function getKey () { return this.key }\n  };\n  if (cmp < 0) {\n    parent.left = e;\n  } else {\n    parent.right = e;\n  }\n  this.fixAfterInsertion(e);\n  this.size_++;\n  return null\n};\n\n/**\n * @param {Object} x\n */\nTreeMap.prototype.fixAfterInsertion = function (x) {\n  var this$1 = this;\n\n  x.color = RED;\n  while (x != null && x !== this.root_ && x.parent.color === RED) {\n    if (parentOf(x) === leftOf(parentOf(parentOf(x)))) {\n      var y = rightOf(parentOf(parentOf(x)));\n      if (colorOf(y) === RED) {\n        setColor(parentOf(x), BLACK);\n        setColor(y, BLACK);\n        setColor(parentOf(parentOf(x)), RED);\n        x = parentOf(parentOf(x));\n      } else {\n        if (x === rightOf(parentOf(x))) {\n          x = parentOf(x);\n          this$1.rotateLeft(x);\n        }\n        setColor(parentOf(x), BLACK);\n        setColor(parentOf(parentOf(x)), RED);\n        this$1.rotateRight(parentOf(parentOf(x)));\n      }\n    } else {\n      var y$1 = leftOf(parentOf(parentOf(x)));\n      if (colorOf(y$1) === RED) {\n        setColor(parentOf(x), BLACK);\n        setColor(y$1, BLACK);\n        setColor(parentOf(parentOf(x)), RED);\n        x = parentOf(parentOf(x));\n      } else {\n        if (x === leftOf(parentOf(x))) {\n          x = parentOf(x);\n          this$1.rotateRight(x);\n        }\n        setColor(parentOf(x), BLACK);\n        setColor(parentOf(parentOf(x)), RED);\n        this$1.rotateLeft(parentOf(parentOf(x)));\n      }\n    }\n  }\n  this.root_.color = BLACK;\n};\n\n/**\n * @override\n */\nTreeMap.prototype.values = function () {\n  var arrayList = new ArrayList();\n  var p = this.getFirstEntry();\n  if (p !== null) {\n    arrayList.add(p.value);\n    while ((p = TreeMap.successor(p)) !== null) {\n      arrayList.add(p.value);\n    }\n  }\n  return arrayList\n};\n\n/**\n * @override\n */\nTreeMap.prototype.entrySet = function () {\n  var hashSet = new HashSet();\n  var p = this.getFirstEntry();\n  if (p !== null) {\n    hashSet.add(p);\n    while ((p = TreeMap.successor(p)) !== null) {\n      hashSet.add(p);\n    }\n  }\n  return hashSet\n};\n\n/**\n * @param {Object} p\n */\nTreeMap.prototype.rotateLeft = function (p) {\n  if (p != null) {\n    var r = p.right;\n    p.right = r.left;\n    if (r.left != null) { r.left.parent = p; }\n    r.parent = p.parent;\n    if (p.parent === null) { this.root_ = r; } else if (p.parent.left === p) { p.parent.left = r; } else { p.parent.right = r; }\n    r.left = p;\n    p.parent = r;\n  }\n};\n\n/**\n * @param {Object} p\n */\nTreeMap.prototype.rotateRight = function (p) {\n  if (p != null) {\n    var l = p.left;\n    p.left = l.right;\n    if (l.right != null) { l.right.parent = p; }\n    l.parent = p.parent;\n    if (p.parent === null) { this.root_ = l; } else if (p.parent.right === p) { p.parent.right = l; } else { p.parent.left = l; }\n    l.right = p;\n    p.parent = l;\n  }\n};\n\n/**\n * @return {Object}\n */\nTreeMap.prototype.getFirstEntry = function () {\n  var p = this.root_;\n  if (p != null) {\n    while (p.left != null) {\n      p = p.left;\n    }\n  }\n  return p\n};\n\n/**\n * @param {Object} t\n * @return {Object}\n * @private\n */\nTreeMap.successor = function (t) {\n  if (t === null) { return null } else if (t.right !== null) {\n    var p = t.right;\n    while (p.left !== null) {\n      p = p.left;\n    }\n    return p\n  } else {\n    var p$1 = t.parent;\n    var ch = t;\n    while (p$1 !== null && ch === p$1.right) {\n      ch = p$1;\n      p$1 = p$1.parent;\n    }\n    return p$1\n  }\n};\n\n/**\n * @override\n */\nTreeMap.prototype.size = function () {\n  return this.size_\n};\n\nvar Lineal = function Lineal () {};\n\nLineal.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nLineal.prototype.getClass = function getClass () {\n  return Lineal\n};\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/SortedSet.html\n *\n * @extends {Set}\n * @constructor\n * @private\n */\nfunction SortedSet () {}\nSortedSet.prototype = new Set();\n\n// import Iterator from './Iterator'\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/TreeSet.html\n *\n * @extends {SortedSet}\n * @constructor\n * @private\n */\nfunction TreeSet () {\n  /**\n   * @type {Array}\n   * @private\n  */\n  this.array_ = [];\n\n  if (arguments[0] instanceof Collection) {\n    this.addAll(arguments[0]);\n  }\n}\nTreeSet.prototype = new SortedSet();\n\n/**\n * @override\n */\nTreeSet.prototype.contains = function (o) {\n  var this$1 = this;\n\n  for (var i = 0, len = this.array_.length; i < len; i++) {\n    var e = this$1.array_[i];\n    if (e['compareTo'](o) === 0) {\n      return true\n    }\n  }\n  return false\n};\n\n/**\n * @override\n */\nTreeSet.prototype.add = function (o) {\n  var this$1 = this;\n\n  if (this.contains(o)) {\n    return false\n  }\n\n  for (var i = 0, len = this.array_.length; i < len; i++) {\n    var e = this$1.array_[i];\n    if (e['compareTo'](o) === 1) {\n      this$1.array_.splice(i, 0, o);\n      return true\n    }\n  }\n\n  this.array_.push(o);\n\n  return true\n};\n\n/**\n * @override\n */\nTreeSet.prototype.addAll = function (c) {\n  var this$1 = this;\n\n  for (var i = c.iterator(); i.hasNext();) {\n    this$1.add(i.next());\n  }\n  return true\n};\n\n/**\n * @override\n */\nTreeSet.prototype.remove = function (e) {\n  throw new OperationNotSupported()\n};\n\n/**\n * @override\n */\nTreeSet.prototype.size = function () {\n  return this.array_.length\n};\n\n/**\n * @override\n */\nTreeSet.prototype.isEmpty = function () {\n  return this.array_.length === 0\n};\n\n/**\n * @override\n */\nTreeSet.prototype.toArray = function () {\n  var this$1 = this;\n\n  var array = [];\n\n  for (var i = 0, len = this.array_.length; i < len; i++) {\n    array.push(this$1.array_[i]);\n  }\n\n  return array\n};\n\n/**\n * @override\n */\nTreeSet.prototype.iterator = function () {\n  return new Iterator_$2(this)\n};\n\n/**\n * @extends {javascript.util.Iterator}\n * @param {javascript.util.TreeSet} treeSet\n * @constructor\n * @private\n */\nvar Iterator_$2 = function (treeSet) {\n  /**\n   * @type {javascript.util.TreeSet}\n   * @private\n   */\n  this.treeSet_ = treeSet;\n  /**\n   * @type {number}\n   * @private\n   */\n  this.position_ = 0;\n};\n\n/**\n * @override\n */\nIterator_$2.prototype.next = function () {\n  if (this.position_ === this.treeSet_.size()) {\n    throw new NoSuchElementException()\n  }\n  return this.treeSet_.array_[this.position_++]\n};\n\n/**\n * @override\n */\nIterator_$2.prototype.hasNext = function () {\n  if (this.position_ < this.treeSet_.size()) {\n    return true\n  } else {\n    return false\n  }\n};\n\n/**\n * @override\n */\nIterator_$2.prototype.remove = function () {\n  throw new OperationNotSupported()\n};\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/Arrays.html\n *\n * @constructor\n * @private\n */\nvar Arrays = function Arrays () {};\n\nArrays.sort = function sort () {\n  var a = arguments[0];\n  var i;\n  var t;\n  var comparator;\n  var compare;\n  if (arguments.length === 1) {\n    compare = function (a, b) {\n      return a.compareTo(b)\n    };\n    a.sort(compare);\n  } else if (arguments.length === 2) {\n    comparator = arguments[1];\n    compare = function (a, b) {\n      return comparator['compare'](a, b)\n    };\n    a.sort(compare);\n  } else if (arguments.length === 3) {\n    t = a.slice(arguments[1], arguments[2]);\n    t.sort();\n    var r = a.slice(0, arguments[1]).concat(t, a.slice(arguments[2], a.length));\n    a.splice(0, a.length);\n    for (i = 0; i < r.length; i++) {\n      a.push(r[i]);\n    }\n  } else if (arguments.length === 4) {\n    t = a.slice(arguments[1], arguments[2]);\n    comparator = arguments[3];\n    compare = function (a, b) {\n      return comparator['compare'](a, b)\n    };\n    t.sort(compare);\n    r = a.slice(0, arguments[1]).concat(t, a.slice(arguments[2], a.length));\n    a.splice(0, a.length);\n    for (i = 0; i < r.length; i++) {\n      a.push(r[i]);\n    }\n  }\n};\n/**\n * @param {Array} array\n * @return {ArrayList}\n */\nArrays.asList = function asList (array) {\n  var arrayList = new ArrayList();\n  for (var i = 0, len = array.length; i < len; i++) {\n    arrayList.add(array[i]);\n  }\n  return arrayList\n};\n\nvar Dimension = function Dimension () {};\n\nvar staticAccessors$14 = { P: { configurable: true },L: { configurable: true },A: { configurable: true },FALSE: { configurable: true },TRUE: { configurable: true },DONTCARE: { configurable: true },SYM_FALSE: { configurable: true },SYM_TRUE: { configurable: true },SYM_DONTCARE: { configurable: true },SYM_P: { configurable: true },SYM_L: { configurable: true },SYM_A: { configurable: true } };\n\nstaticAccessors$14.P.get = function () { return 0 };\nstaticAccessors$14.L.get = function () { return 1 };\nstaticAccessors$14.A.get = function () { return 2 };\nstaticAccessors$14.FALSE.get = function () { return -1 };\nstaticAccessors$14.TRUE.get = function () { return -2 };\nstaticAccessors$14.DONTCARE.get = function () { return -3 };\nstaticAccessors$14.SYM_FALSE.get = function () { return 'F' };\nstaticAccessors$14.SYM_TRUE.get = function () { return 'T' };\nstaticAccessors$14.SYM_DONTCARE.get = function () { return '*' };\nstaticAccessors$14.SYM_P.get = function () { return '0' };\nstaticAccessors$14.SYM_L.get = function () { return '1' };\nstaticAccessors$14.SYM_A.get = function () { return '2' };\n\nDimension.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nDimension.prototype.getClass = function getClass () {\n  return Dimension\n};\nDimension.toDimensionSymbol = function toDimensionSymbol (dimensionValue) {\n  switch (dimensionValue) {\n    case Dimension.FALSE:\n      return Dimension.SYM_FALSE\n    case Dimension.TRUE:\n      return Dimension.SYM_TRUE\n    case Dimension.DONTCARE:\n      return Dimension.SYM_DONTCARE\n    case Dimension.P:\n      return Dimension.SYM_P\n    case Dimension.L:\n      return Dimension.SYM_L\n    case Dimension.A:\n      return Dimension.SYM_A\n    default:\n  }\n  throw new IllegalArgumentException('Unknown dimension value: ' + dimensionValue)\n};\nDimension.toDimensionValue = function toDimensionValue (dimensionSymbol) {\n  switch (Character.toUpperCase(dimensionSymbol)) {\n    case Dimension.SYM_FALSE:\n      return Dimension.FALSE\n    case Dimension.SYM_TRUE:\n      return Dimension.TRUE\n    case Dimension.SYM_DONTCARE:\n      return Dimension.DONTCARE\n    case Dimension.SYM_P:\n      return Dimension.P\n    case Dimension.SYM_L:\n      return Dimension.L\n    case Dimension.SYM_A:\n      return Dimension.A\n    default:\n  }\n  throw new IllegalArgumentException('Unknown dimension symbol: ' + dimensionSymbol)\n};\n\nObject.defineProperties( Dimension, staticAccessors$14 );\n\nvar GeometryFilter = function GeometryFilter () {};\n\nGeometryFilter.prototype.filter = function filter (geom) {};\nGeometryFilter.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nGeometryFilter.prototype.getClass = function getClass () {\n  return GeometryFilter\n};\n\nvar CoordinateSequenceFilter = function CoordinateSequenceFilter () {};\n\nCoordinateSequenceFilter.prototype.filter = function filter (seq, i) {};\nCoordinateSequenceFilter.prototype.isDone = function isDone () {};\nCoordinateSequenceFilter.prototype.isGeometryChanged = function isGeometryChanged () {};\nCoordinateSequenceFilter.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nCoordinateSequenceFilter.prototype.getClass = function getClass () {\n  return CoordinateSequenceFilter\n};\n\nvar GeometryCollection = (function (Geometry$$1) {\n  function GeometryCollection (geometries, factory) {\n    Geometry$$1.call(this, factory);\n    this._geometries = geometries || [];\n\n    if (Geometry$$1.hasNullElements(this._geometries)) {\n      throw new IllegalArgumentException('geometries must not contain null elements')\n    }\n  }\n\n  if ( Geometry$$1 ) GeometryCollection.__proto__ = Geometry$$1;\n  GeometryCollection.prototype = Object.create( Geometry$$1 && Geometry$$1.prototype );\n  GeometryCollection.prototype.constructor = GeometryCollection;\n\n  var staticAccessors = { serialVersionUID: { configurable: true } };\n  GeometryCollection.prototype.computeEnvelopeInternal = function computeEnvelopeInternal () {\n    var this$1 = this;\n\n    var envelope = new Envelope();\n    for (var i = 0; i < this._geometries.length; i++) {\n      envelope.expandToInclude(this$1._geometries[i].getEnvelopeInternal());\n    }\n    return envelope\n  };\n  GeometryCollection.prototype.getGeometryN = function getGeometryN (n) {\n    return this._geometries[n]\n  };\n  GeometryCollection.prototype.getSortIndex = function getSortIndex () {\n    return Geometry$$1.SORTINDEX_GEOMETRYCOLLECTION\n  };\n  GeometryCollection.prototype.getCoordinates = function getCoordinates () {\n    var this$1 = this;\n\n    var coordinates = new Array(this.getNumPoints()).fill(null);\n    var k = -1;\n    for (var i = 0; i < this._geometries.length; i++) {\n      var childCoordinates = this$1._geometries[i].getCoordinates();\n      for (var j = 0; j < childCoordinates.length; j++) {\n        k++;\n        coordinates[k] = childCoordinates[j];\n      }\n    }\n    return coordinates\n  };\n  GeometryCollection.prototype.getArea = function getArea () {\n    var this$1 = this;\n\n    var area = 0.0;\n    for (var i = 0; i < this._geometries.length; i++) {\n      area += this$1._geometries[i].getArea();\n    }\n    return area\n  };\n  GeometryCollection.prototype.equalsExact = function equalsExact () {\n    var this$1 = this;\n\n    if (arguments.length === 2) {\n      var other = arguments[0];\n      var tolerance = arguments[1];\n      if (!this.isEquivalentClass(other)) {\n        return false\n      }\n      var otherCollection = other;\n      if (this._geometries.length !== otherCollection._geometries.length) {\n        return false\n      }\n      for (var i = 0; i < this._geometries.length; i++) {\n        if (!this$1._geometries[i].equalsExact(otherCollection._geometries[i], tolerance)) {\n          return false\n        }\n      }\n      return true\n    } else { return Geometry$$1.prototype.equalsExact.apply(this, arguments) }\n  };\n  GeometryCollection.prototype.normalize = function normalize () {\n    var this$1 = this;\n\n    for (var i = 0; i < this._geometries.length; i++) {\n      this$1._geometries[i].normalize();\n    }\n    Arrays.sort(this._geometries);\n  };\n  GeometryCollection.prototype.getCoordinate = function getCoordinate () {\n    if (this.isEmpty()) { return null }\n    return this._geometries[0].getCoordinate()\n  };\n  GeometryCollection.prototype.getBoundaryDimension = function getBoundaryDimension () {\n    var this$1 = this;\n\n    var dimension = Dimension.FALSE;\n    for (var i = 0; i < this._geometries.length; i++) {\n      dimension = Math.max(dimension, this$1._geometries[i].getBoundaryDimension());\n    }\n    return dimension\n  };\n  GeometryCollection.prototype.getDimension = function getDimension () {\n    var this$1 = this;\n\n    var dimension = Dimension.FALSE;\n    for (var i = 0; i < this._geometries.length; i++) {\n      dimension = Math.max(dimension, this$1._geometries[i].getDimension());\n    }\n    return dimension\n  };\n  GeometryCollection.prototype.getLength = function getLength () {\n    var this$1 = this;\n\n    var sum = 0.0;\n    for (var i = 0; i < this._geometries.length; i++) {\n      sum += this$1._geometries[i].getLength();\n    }\n    return sum\n  };\n  GeometryCollection.prototype.getNumPoints = function getNumPoints () {\n    var this$1 = this;\n\n    var numPoints = 0;\n    for (var i = 0; i < this._geometries.length; i++) {\n      numPoints += this$1._geometries[i].getNumPoints();\n    }\n    return numPoints\n  };\n  GeometryCollection.prototype.getNumGeometries = function getNumGeometries () {\n    return this._geometries.length\n  };\n  GeometryCollection.prototype.reverse = function reverse () {\n    var this$1 = this;\n\n    var n = this._geometries.length;\n    var revGeoms = new Array(n).fill(null);\n    for (var i = 0; i < this._geometries.length; i++) {\n      revGeoms[i] = this$1._geometries[i].reverse();\n    }\n    return this.getFactory().createGeometryCollection(revGeoms)\n  };\n  GeometryCollection.prototype.compareToSameClass = function compareToSameClass () {\n    var this$1 = this;\n\n    if (arguments.length === 1) {\n      var o = arguments[0];\n      var theseElements = new TreeSet(Arrays.asList(this._geometries));\n      var otherElements = new TreeSet(Arrays.asList(o._geometries));\n      return this.compare(theseElements, otherElements)\n    } else if (arguments.length === 2) {\n      var o$1 = arguments[0];\n      var comp = arguments[1];\n      var gc = o$1;\n      var n1 = this.getNumGeometries();\n      var n2 = gc.getNumGeometries();\n      var i = 0;\n      while (i < n1 && i < n2) {\n        var thisGeom = this$1.getGeometryN(i);\n        var otherGeom = gc.getGeometryN(i);\n        var holeComp = thisGeom.compareToSameClass(otherGeom, comp);\n        if (holeComp !== 0) { return holeComp }\n        i++;\n      }\n      if (i < n1) { return 1 }\n      if (i < n2) { return -1 }\n      return 0\n    }\n  };\n  GeometryCollection.prototype.apply = function apply () {\n    var this$1 = this;\n\n    if (hasInterface(arguments[0], CoordinateFilter)) {\n      var filter = arguments[0];\n      for (var i = 0; i < this._geometries.length; i++) {\n        this$1._geometries[i].apply(filter);\n      }\n    } else if (hasInterface(arguments[0], CoordinateSequenceFilter)) {\n      var filter$1 = arguments[0];\n      if (this._geometries.length === 0) { return null }\n      for (var i$1 = 0; i$1 < this._geometries.length; i$1++) {\n        this$1._geometries[i$1].apply(filter$1);\n        if (filter$1.isDone()) {\n          break\n        }\n      }\n      if (filter$1.isGeometryChanged()) { this.geometryChanged(); }\n    } else if (hasInterface(arguments[0], GeometryFilter)) {\n      var filter$2 = arguments[0];\n      filter$2.filter(this);\n      for (var i$2 = 0; i$2 < this._geometries.length; i$2++) {\n        this$1._geometries[i$2].apply(filter$2);\n      }\n    } else if (hasInterface(arguments[0], GeometryComponentFilter)) {\n      var filter$3 = arguments[0];\n      filter$3.filter(this);\n      for (var i$3 = 0; i$3 < this._geometries.length; i$3++) {\n        this$1._geometries[i$3].apply(filter$3);\n      }\n    }\n  };\n  GeometryCollection.prototype.getBoundary = function getBoundary () {\n    this.checkNotGeometryCollection(this);\n    Assert.shouldNeverReachHere();\n    return null\n  };\n  GeometryCollection.prototype.clone = function clone () {\n    var this$1 = this;\n\n    var gc = Geometry$$1.prototype.clone.call(this);\n    gc._geometries = new Array(this._geometries.length).fill(null);\n    for (var i = 0; i < this._geometries.length; i++) {\n      gc._geometries[i] = this$1._geometries[i].clone();\n    }\n    return gc\n  };\n  GeometryCollection.prototype.getGeometryType = function getGeometryType () {\n    return 'GeometryCollection'\n  };\n  GeometryCollection.prototype.copy = function copy () {\n    var this$1 = this;\n\n    var geometries = new Array(this._geometries.length).fill(null);\n    for (var i = 0; i < geometries.length; i++) {\n      geometries[i] = this$1._geometries[i].copy();\n    }\n    return new GeometryCollection(geometries, this._factory)\n  };\n  GeometryCollection.prototype.isEmpty = function isEmpty () {\n    var this$1 = this;\n\n    for (var i = 0; i < this._geometries.length; i++) {\n      if (!this$1._geometries[i].isEmpty()) {\n        return false\n      }\n    }\n    return true\n  };\n  GeometryCollection.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  GeometryCollection.prototype.getClass = function getClass () {\n    return GeometryCollection\n  };\n  staticAccessors.serialVersionUID.get = function () { return -5694727726395021467 };\n\n  Object.defineProperties( GeometryCollection, staticAccessors );\n\n  return GeometryCollection;\n}(Geometry));\n\nvar MultiLineString = (function (GeometryCollection$$1) {\n  function MultiLineString () {\n    GeometryCollection$$1.apply(this, arguments);\n  }\n\n  if ( GeometryCollection$$1 ) MultiLineString.__proto__ = GeometryCollection$$1;\n  MultiLineString.prototype = Object.create( GeometryCollection$$1 && GeometryCollection$$1.prototype );\n  MultiLineString.prototype.constructor = MultiLineString;\n\n  var staticAccessors = { serialVersionUID: { configurable: true } };\n\n  MultiLineString.prototype.getSortIndex = function getSortIndex () {\n    return Geometry.SORTINDEX_MULTILINESTRING\n  };\n  MultiLineString.prototype.equalsExact = function equalsExact () {\n    if (arguments.length === 2) {\n      var other = arguments[0];\n      var tolerance = arguments[1];\n      if (!this.isEquivalentClass(other)) {\n        return false\n      }\n      return GeometryCollection$$1.prototype.equalsExact.call(this, other, tolerance)\n    } else { return GeometryCollection$$1.prototype.equalsExact.apply(this, arguments) }\n  };\n  MultiLineString.prototype.getBoundaryDimension = function getBoundaryDimension () {\n    if (this.isClosed()) {\n      return Dimension.FALSE\n    }\n    return 0\n  };\n  MultiLineString.prototype.isClosed = function isClosed () {\n    var this$1 = this;\n\n    if (this.isEmpty()) {\n      return false\n    }\n    for (var i = 0; i < this._geometries.length; i++) {\n      if (!this$1._geometries[i].isClosed()) {\n        return false\n      }\n    }\n    return true\n  };\n  MultiLineString.prototype.getDimension = function getDimension () {\n    return 1\n  };\n  MultiLineString.prototype.reverse = function reverse () {\n    var this$1 = this;\n\n    var nLines = this._geometries.length;\n    var revLines = new Array(nLines).fill(null);\n    for (var i = 0; i < this._geometries.length; i++) {\n      revLines[nLines - 1 - i] = this$1._geometries[i].reverse();\n    }\n    return this.getFactory().createMultiLineString(revLines)\n  };\n  MultiLineString.prototype.getBoundary = function getBoundary () {\n    return new BoundaryOp(this).getBoundary()\n  };\n  MultiLineString.prototype.getGeometryType = function getGeometryType () {\n    return 'MultiLineString'\n  };\n  MultiLineString.prototype.copy = function copy () {\n    var this$1 = this;\n\n    var lineStrings = new Array(this._geometries.length).fill(null);\n    for (var i = 0; i < lineStrings.length; i++) {\n      lineStrings[i] = this$1._geometries[i].copy();\n    }\n    return new MultiLineString(lineStrings, this._factory)\n  };\n  MultiLineString.prototype.interfaces_ = function interfaces_ () {\n    return [Lineal]\n  };\n  MultiLineString.prototype.getClass = function getClass () {\n    return MultiLineString\n  };\n  staticAccessors.serialVersionUID.get = function () { return 8166665132445433741 };\n\n  Object.defineProperties( MultiLineString, staticAccessors );\n\n  return MultiLineString;\n}(GeometryCollection));\n\nvar BoundaryOp = function BoundaryOp () {\n  this._geom = null;\n  this._geomFact = null;\n  this._bnRule = null;\n  this._endpointMap = null;\n  if (arguments.length === 1) {\n    var geom = arguments[0];\n    var bnRule = BoundaryNodeRule.MOD2_BOUNDARY_RULE;\n    this._geom = geom;\n    this._geomFact = geom.getFactory();\n    this._bnRule = bnRule;\n  } else if (arguments.length === 2) {\n    var geom$1 = arguments[0];\n    var bnRule$1 = arguments[1];\n    this._geom = geom$1;\n    this._geomFact = geom$1.getFactory();\n    this._bnRule = bnRule$1;\n  }\n};\nBoundaryOp.prototype.boundaryMultiLineString = function boundaryMultiLineString (mLine) {\n  if (this._geom.isEmpty()) {\n    return this.getEmptyMultiPoint()\n  }\n  var bdyPts = this.computeBoundaryCoordinates(mLine);\n  if (bdyPts.length === 1) {\n    return this._geomFact.createPoint(bdyPts[0])\n  }\n  return this._geomFact.createMultiPointFromCoords(bdyPts)\n};\nBoundaryOp.prototype.getBoundary = function getBoundary () {\n  if (this._geom instanceof LineString) { return this.boundaryLineString(this._geom) }\n  if (this._geom instanceof MultiLineString) { return this.boundaryMultiLineString(this._geom) }\n  return this._geom.getBoundary()\n};\nBoundaryOp.prototype.boundaryLineString = function boundaryLineString (line) {\n  if (this._geom.isEmpty()) {\n    return this.getEmptyMultiPoint()\n  }\n  if (line.isClosed()) {\n    var closedEndpointOnBoundary = this._bnRule.isInBoundary(2);\n    if (closedEndpointOnBoundary) {\n      return line.getStartPoint()\n    } else {\n      return this._geomFact.createMultiPoint()\n    }\n  }\n  return this._geomFact.createMultiPoint([line.getStartPoint(), line.getEndPoint()])\n};\nBoundaryOp.prototype.getEmptyMultiPoint = function getEmptyMultiPoint () {\n  return this._geomFact.createMultiPoint()\n};\nBoundaryOp.prototype.computeBoundaryCoordinates = function computeBoundaryCoordinates (mLine) {\n    var this$1 = this;\n\n  var bdyPts = new ArrayList();\n  this._endpointMap = new TreeMap();\n  for (var i = 0; i < mLine.getNumGeometries(); i++) {\n    var line = mLine.getGeometryN(i);\n    if (line.getNumPoints() === 0) { continue }\n    this$1.addEndpoint(line.getCoordinateN(0));\n    this$1.addEndpoint(line.getCoordinateN(line.getNumPoints() - 1));\n  }\n  for (var it = this._endpointMap.entrySet().iterator(); it.hasNext();) {\n    var entry = it.next();\n    var counter = entry.getValue();\n    var valence = counter.count;\n    if (this$1._bnRule.isInBoundary(valence)) {\n      bdyPts.add(entry.getKey());\n    }\n  }\n  return CoordinateArrays.toCoordinateArray(bdyPts)\n};\nBoundaryOp.prototype.addEndpoint = function addEndpoint (pt) {\n  var counter = this._endpointMap.get(pt);\n  if (counter === null) {\n    counter = new Counter();\n    this._endpointMap.put(pt, counter);\n  }\n  counter.count++;\n};\nBoundaryOp.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nBoundaryOp.prototype.getClass = function getClass () {\n  return BoundaryOp\n};\nBoundaryOp.getBoundary = function getBoundary () {\n  if (arguments.length === 1) {\n    var g = arguments[0];\n    var bop = new BoundaryOp(g);\n    return bop.getBoundary()\n  } else if (arguments.length === 2) {\n    var g$1 = arguments[0];\n    var bnRule = arguments[1];\n    var bop$1 = new BoundaryOp(g$1, bnRule);\n    return bop$1.getBoundary()\n  }\n};\n\nvar Counter = function Counter () {\n  this.count = null;\n};\nCounter.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nCounter.prototype.getClass = function getClass () {\n  return Counter\n};\n\n// boundary\n\nfunction PrintStream () {}\n\nfunction StringReader () {}\n\nvar DecimalFormat = function DecimalFormat () {};\n\nfunction ByteArrayOutputStream () {}\n\nfunction IOException () {}\n\nfunction LineNumberReader () {}\n\nvar StringUtil = function StringUtil () {};\n\nvar staticAccessors$15 = { NEWLINE: { configurable: true },SIMPLE_ORDINATE_FORMAT: { configurable: true } };\n\nStringUtil.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nStringUtil.prototype.getClass = function getClass () {\n  return StringUtil\n};\nStringUtil.chars = function chars (c, n) {\n  var ch = new Array(n).fill(null);\n  for (var i = 0; i < n; i++) {\n    ch[i] = c;\n  }\n  return String(ch)\n};\nStringUtil.getStackTrace = function getStackTrace () {\n  if (arguments.length === 1) {\n    var t = arguments[0];\n    var os = new ByteArrayOutputStream();\n    var ps = new PrintStream(os);\n    t.printStackTrace(ps);\n    return os.toString()\n  } else if (arguments.length === 2) {\n    var t$1 = arguments[0];\n    var depth = arguments[1];\n    var stackTrace = '';\n    var stringReader = new StringReader(StringUtil.getStackTrace(t$1));\n    var lineNumberReader = new LineNumberReader(stringReader);\n    for (var i = 0; i < depth; i++) {\n      try {\n        stackTrace += lineNumberReader.readLine() + StringUtil.NEWLINE;\n      } catch (e) {\n        if (e instanceof IOException) {\n          Assert.shouldNeverReachHere();\n        } else { throw e }\n      } finally {}\n    }\n    return stackTrace\n  }\n};\nStringUtil.split = function split (s, separator) {\n  var separatorlen = separator.length;\n  var tokenList = new ArrayList();\n  var tmpString = '' + s;\n  var pos = tmpString.indexOf(separator);\n  while (pos >= 0) {\n    var token = tmpString.substring(0, pos);\n    tokenList.add(token);\n    tmpString = tmpString.substring(pos + separatorlen);\n    pos = tmpString.indexOf(separator);\n  }\n  if (tmpString.length > 0) { tokenList.add(tmpString); }\n  var res = new Array(tokenList.size()).fill(null);\n  for (var i = 0; i < res.length; i++) {\n    res[i] = tokenList.get(i);\n  }\n  return res\n};\nStringUtil.toString = function toString () {\n  if (arguments.length === 1) {\n    var d = arguments[0];\n    return StringUtil.SIMPLE_ORDINATE_FORMAT.format(d)\n  }\n};\nStringUtil.spaces = function spaces (n) {\n  return StringUtil.chars(' ', n)\n};\nstaticAccessors$15.NEWLINE.get = function () { return System.getProperty('line.separator') };\nstaticAccessors$15.SIMPLE_ORDINATE_FORMAT.get = function () { return new DecimalFormat('0.#') };\n\nObject.defineProperties( StringUtil, staticAccessors$15 );\n\nvar CoordinateSequences = function CoordinateSequences () {};\n\nCoordinateSequences.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nCoordinateSequences.prototype.getClass = function getClass () {\n  return CoordinateSequences\n};\nCoordinateSequences.copyCoord = function copyCoord (src, srcPos, dest, destPos) {\n  var minDim = Math.min(src.getDimension(), dest.getDimension());\n  for (var dim = 0; dim < minDim; dim++) {\n    dest.setOrdinate(destPos, dim, src.getOrdinate(srcPos, dim));\n  }\n};\nCoordinateSequences.isRing = function isRing (seq) {\n  var n = seq.size();\n  if (n === 0) { return true }\n  if (n <= 3) { return false }\n  return seq.getOrdinate(0, CoordinateSequence.X) === seq.getOrdinate(n - 1, CoordinateSequence.X) && seq.getOrdinate(0, CoordinateSequence.Y) === seq.getOrdinate(n - 1, CoordinateSequence.Y)\n};\nCoordinateSequences.isEqual = function isEqual (cs1, cs2) {\n  var cs1Size = cs1.size();\n  var cs2Size = cs2.size();\n  if (cs1Size !== cs2Size) { return false }\n  var dim = Math.min(cs1.getDimension(), cs2.getDimension());\n  for (var i = 0; i < cs1Size; i++) {\n    for (var d = 0; d < dim; d++) {\n      var v1 = cs1.getOrdinate(i, d);\n      var v2 = cs2.getOrdinate(i, d);\n      if (cs1.getOrdinate(i, d) === cs2.getOrdinate(i, d)) { continue }\n      if (Double.isNaN(v1) && Double.isNaN(v2)) { continue }\n      return false\n    }\n  }\n  return true\n};\nCoordinateSequences.extend = function extend (fact, seq, size) {\n  var newseq = fact.create(size, seq.getDimension());\n  var n = seq.size();\n  CoordinateSequences.copy(seq, 0, newseq, 0, n);\n  if (n > 0) {\n    for (var i = n; i < size; i++) { CoordinateSequences.copy(seq, n - 1, newseq, i, 1); }\n  }\n  return newseq\n};\nCoordinateSequences.reverse = function reverse (seq) {\n  var last = seq.size() - 1;\n  var mid = Math.trunc(last / 2);\n  for (var i = 0; i <= mid; i++) {\n    CoordinateSequences.swap(seq, i, last - i);\n  }\n};\nCoordinateSequences.swap = function swap (seq, i, j) {\n  if (i === j) { return null }\n  for (var dim = 0; dim < seq.getDimension(); dim++) {\n    var tmp = seq.getOrdinate(i, dim);\n    seq.setOrdinate(i, dim, seq.getOrdinate(j, dim));\n    seq.setOrdinate(j, dim, tmp);\n  }\n};\nCoordinateSequences.copy = function copy (src, srcPos, dest, destPos, length) {\n  for (var i = 0; i < length; i++) {\n    CoordinateSequences.copyCoord(src, srcPos + i, dest, destPos + i);\n  }\n};\nCoordinateSequences.toString = function toString () {\n  if (arguments.length === 1) {\n    var cs = arguments[0];\n    var size = cs.size();\n    if (size === 0) { return '()' }\n    var dim = cs.getDimension();\n    var buf = new StringBuffer();\n    buf.append('(');\n    for (var i = 0; i < size; i++) {\n      if (i > 0) { buf.append(' '); }\n      for (var d = 0; d < dim; d++) {\n        if (d > 0) { buf.append(','); }\n        buf.append(StringUtil.toString(cs.getOrdinate(i, d)));\n      }\n    }\n    buf.append(')');\n    return buf.toString()\n  }\n};\nCoordinateSequences.ensureValidRing = function ensureValidRing (fact, seq) {\n  var n = seq.size();\n  if (n === 0) { return seq }\n  if (n <= 3) { return CoordinateSequences.createClosedRing(fact, seq, 4) }\n  var isClosed = seq.getOrdinate(0, CoordinateSequence.X) === seq.getOrdinate(n - 1, CoordinateSequence.X) && seq.getOrdinate(0, CoordinateSequence.Y) === seq.getOrdinate(n - 1, CoordinateSequence.Y);\n  if (isClosed) { return seq }\n  return CoordinateSequences.createClosedRing(fact, seq, n + 1)\n};\nCoordinateSequences.createClosedRing = function createClosedRing (fact, seq, size) {\n  var newseq = fact.create(size, seq.getDimension());\n  var n = seq.size();\n  CoordinateSequences.copy(seq, 0, newseq, 0, n);\n  for (var i = n; i < size; i++) { CoordinateSequences.copy(seq, 0, newseq, i, 1); }\n  return newseq\n};\n\nvar LineString = (function (Geometry$$1) {\n  function LineString (points, factory) {\n    Geometry$$1.call(this, factory);\n    this._points = null;\n    this.init(points);\n  }\n\n  if ( Geometry$$1 ) LineString.__proto__ = Geometry$$1;\n  LineString.prototype = Object.create( Geometry$$1 && Geometry$$1.prototype );\n  LineString.prototype.constructor = LineString;\n\n  var staticAccessors = { serialVersionUID: { configurable: true } };\n  LineString.prototype.computeEnvelopeInternal = function computeEnvelopeInternal () {\n    if (this.isEmpty()) {\n      return new Envelope()\n    }\n    return this._points.expandEnvelope(new Envelope())\n  };\n  LineString.prototype.isRing = function isRing () {\n    return this.isClosed() && this.isSimple()\n  };\n  LineString.prototype.getSortIndex = function getSortIndex () {\n    return Geometry$$1.SORTINDEX_LINESTRING\n  };\n  LineString.prototype.getCoordinates = function getCoordinates () {\n    return this._points.toCoordinateArray()\n  };\n  LineString.prototype.equalsExact = function equalsExact () {\n    var this$1 = this;\n\n    if (arguments.length === 2) {\n      var other = arguments[0];\n      var tolerance = arguments[1];\n      if (!this.isEquivalentClass(other)) {\n        return false\n      }\n      var otherLineString = other;\n      if (this._points.size() !== otherLineString._points.size()) {\n        return false\n      }\n      for (var i = 0; i < this._points.size(); i++) {\n        if (!this$1.equal(this$1._points.getCoordinate(i), otherLineString._points.getCoordinate(i), tolerance)) {\n          return false\n        }\n      }\n      return true\n    } else { return Geometry$$1.prototype.equalsExact.apply(this, arguments) }\n  };\n  LineString.prototype.normalize = function normalize () {\n    var this$1 = this;\n\n    for (var i = 0; i < Math.trunc(this._points.size() / 2); i++) {\n      var j = this$1._points.size() - 1 - i;\n      if (!this$1._points.getCoordinate(i).equals(this$1._points.getCoordinate(j))) {\n        if (this$1._points.getCoordinate(i).compareTo(this$1._points.getCoordinate(j)) > 0) {\n          CoordinateSequences.reverse(this$1._points);\n        }\n        return null\n      }\n    }\n  };\n  LineString.prototype.getCoordinate = function getCoordinate () {\n    if (this.isEmpty()) { return null }\n    return this._points.getCoordinate(0)\n  };\n  LineString.prototype.getBoundaryDimension = function getBoundaryDimension () {\n    if (this.isClosed()) {\n      return Dimension.FALSE\n    }\n    return 0\n  };\n  LineString.prototype.isClosed = function isClosed () {\n    if (this.isEmpty()) {\n      return false\n    }\n    return this.getCoordinateN(0).equals2D(this.getCoordinateN(this.getNumPoints() - 1))\n  };\n  LineString.prototype.getEndPoint = function getEndPoint () {\n    if (this.isEmpty()) {\n      return null\n    }\n    return this.getPointN(this.getNumPoints() - 1)\n  };\n  LineString.prototype.getDimension = function getDimension () {\n    return 1\n  };\n  LineString.prototype.getLength = function getLength () {\n    return CGAlgorithms.computeLength(this._points)\n  };\n  LineString.prototype.getNumPoints = function getNumPoints () {\n    return this._points.size()\n  };\n  LineString.prototype.reverse = function reverse () {\n    var seq = this._points.copy();\n    CoordinateSequences.reverse(seq);\n    var revLine = this.getFactory().createLineString(seq);\n    return revLine\n  };\n  LineString.prototype.compareToSameClass = function compareToSameClass () {\n    var this$1 = this;\n\n    if (arguments.length === 1) {\n      var o = arguments[0];\n      var line = o;\n      var i = 0;\n      var j = 0;\n      while (i < this._points.size() && j < line._points.size()) {\n        var comparison = this$1._points.getCoordinate(i).compareTo(line._points.getCoordinate(j));\n        if (comparison !== 0) {\n          return comparison\n        }\n        i++;\n        j++;\n      }\n      if (i < this._points.size()) {\n        return 1\n      }\n      if (j < line._points.size()) {\n        return -1\n      }\n      return 0\n    } else if (arguments.length === 2) {\n      var o$1 = arguments[0];\n      var comp = arguments[1];\n      var line$1 = o$1;\n      return comp.compare(this._points, line$1._points)\n    }\n  };\n  LineString.prototype.apply = function apply () {\n    var this$1 = this;\n\n    if (hasInterface(arguments[0], CoordinateFilter)) {\n      var filter = arguments[0];\n      for (var i = 0; i < this._points.size(); i++) {\n        filter.filter(this$1._points.getCoordinate(i));\n      }\n    } else if (hasInterface(arguments[0], CoordinateSequenceFilter)) {\n      var filter$1 = arguments[0];\n      if (this._points.size() === 0) { return null }\n      for (var i$1 = 0; i$1 < this._points.size(); i$1++) {\n        filter$1.filter(this$1._points, i$1);\n        if (filter$1.isDone()) { break }\n      }\n      if (filter$1.isGeometryChanged()) { this.geometryChanged(); }\n    } else if (hasInterface(arguments[0], GeometryFilter)) {\n      var filter$2 = arguments[0];\n      filter$2.filter(this);\n    } else if (hasInterface(arguments[0], GeometryComponentFilter)) {\n      var filter$3 = arguments[0];\n      filter$3.filter(this);\n    }\n  };\n  LineString.prototype.getBoundary = function getBoundary () {\n    return new BoundaryOp(this).getBoundary()\n  };\n  LineString.prototype.isEquivalentClass = function isEquivalentClass (other) {\n    return other instanceof LineString\n  };\n  LineString.prototype.clone = function clone () {\n    var ls = Geometry$$1.prototype.clone.call(this);\n    ls._points = this._points.clone();\n    return ls\n  };\n  LineString.prototype.getCoordinateN = function getCoordinateN (n) {\n    return this._points.getCoordinate(n)\n  };\n  LineString.prototype.getGeometryType = function getGeometryType () {\n    return 'LineString'\n  };\n  LineString.prototype.copy = function copy () {\n    return new LineString(this._points.copy(), this._factory)\n  };\n  LineString.prototype.getCoordinateSequence = function getCoordinateSequence () {\n    return this._points\n  };\n  LineString.prototype.isEmpty = function isEmpty () {\n    return this._points.size() === 0\n  };\n  LineString.prototype.init = function init (points) {\n    if (points === null) {\n      points = this.getFactory().getCoordinateSequenceFactory().create([]);\n    }\n    if (points.size() === 1) {\n      throw new IllegalArgumentException('Invalid number of points in LineString (found ' + points.size() + ' - must be 0 or >= 2)')\n    }\n    this._points = points;\n  };\n  LineString.prototype.isCoordinate = function isCoordinate (pt) {\n    var this$1 = this;\n\n    for (var i = 0; i < this._points.size(); i++) {\n      if (this$1._points.getCoordinate(i).equals(pt)) {\n        return true\n      }\n    }\n    return false\n  };\n  LineString.prototype.getStartPoint = function getStartPoint () {\n    if (this.isEmpty()) {\n      return null\n    }\n    return this.getPointN(0)\n  };\n  LineString.prototype.getPointN = function getPointN (n) {\n    return this.getFactory().createPoint(this._points.getCoordinate(n))\n  };\n  LineString.prototype.interfaces_ = function interfaces_ () {\n    return [Lineal]\n  };\n  LineString.prototype.getClass = function getClass () {\n    return LineString\n  };\n  staticAccessors.serialVersionUID.get = function () { return 3110669828065365560 };\n\n  Object.defineProperties( LineString, staticAccessors );\n\n  return LineString;\n}(Geometry));\n\nvar Puntal = function Puntal () {};\n\nPuntal.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nPuntal.prototype.getClass = function getClass () {\n  return Puntal\n};\n\nvar Point = (function (Geometry$$1) {\n  function Point (coordinates, factory) {\n    Geometry$$1.call(this, factory);\n    this._coordinates = coordinates || null;\n    this.init(this._coordinates);\n  }\n\n  if ( Geometry$$1 ) Point.__proto__ = Geometry$$1;\n  Point.prototype = Object.create( Geometry$$1 && Geometry$$1.prototype );\n  Point.prototype.constructor = Point;\n\n  var staticAccessors = { serialVersionUID: { configurable: true } };\n  Point.prototype.computeEnvelopeInternal = function computeEnvelopeInternal () {\n    if (this.isEmpty()) {\n      return new Envelope()\n    }\n    var env = new Envelope();\n    env.expandToInclude(this._coordinates.getX(0), this._coordinates.getY(0));\n    return env\n  };\n  Point.prototype.getSortIndex = function getSortIndex () {\n    return Geometry$$1.SORTINDEX_POINT\n  };\n  Point.prototype.getCoordinates = function getCoordinates () {\n    return this.isEmpty() ? [] : [this.getCoordinate()]\n  };\n  Point.prototype.equalsExact = function equalsExact () {\n    if (arguments.length === 2) {\n      var other = arguments[0];\n      var tolerance = arguments[1];\n      if (!this.isEquivalentClass(other)) {\n        return false\n      }\n      if (this.isEmpty() && other.isEmpty()) {\n        return true\n      }\n      if (this.isEmpty() !== other.isEmpty()) {\n        return false\n      }\n      return this.equal(other.getCoordinate(), this.getCoordinate(), tolerance)\n    } else { return Geometry$$1.prototype.equalsExact.apply(this, arguments) }\n  };\n  Point.prototype.normalize = function normalize () {};\n  Point.prototype.getCoordinate = function getCoordinate () {\n    return this._coordinates.size() !== 0 ? this._coordinates.getCoordinate(0) : null\n  };\n  Point.prototype.getBoundaryDimension = function getBoundaryDimension () {\n    return Dimension.FALSE\n  };\n  Point.prototype.getDimension = function getDimension () {\n    return 0\n  };\n  Point.prototype.getNumPoints = function getNumPoints () {\n    return this.isEmpty() ? 0 : 1\n  };\n  Point.prototype.reverse = function reverse () {\n    return this.copy()\n  };\n  Point.prototype.getX = function getX () {\n    if (this.getCoordinate() === null) {\n      throw new Error('getX called on empty Point')\n    }\n    return this.getCoordinate().x\n  };\n  Point.prototype.compareToSameClass = function compareToSameClass () {\n    if (arguments.length === 1) {\n      var other = arguments[0];\n      var point$1 = other;\n      return this.getCoordinate().compareTo(point$1.getCoordinate())\n    } else if (arguments.length === 2) {\n      var other$1 = arguments[0];\n      var comp = arguments[1];\n      var point = other$1;\n      return comp.compare(this._coordinates, point._coordinates)\n    }\n  };\n  Point.prototype.apply = function apply () {\n    if (hasInterface(arguments[0], CoordinateFilter)) {\n      var filter = arguments[0];\n      if (this.isEmpty()) {\n        return null\n      }\n      filter.filter(this.getCoordinate());\n    } else if (hasInterface(arguments[0], CoordinateSequenceFilter)) {\n      var filter$1 = arguments[0];\n      if (this.isEmpty()) { return null }\n      filter$1.filter(this._coordinates, 0);\n      if (filter$1.isGeometryChanged()) { this.geometryChanged(); }\n    } else if (hasInterface(arguments[0], GeometryFilter)) {\n      var filter$2 = arguments[0];\n      filter$2.filter(this);\n    } else if (hasInterface(arguments[0], GeometryComponentFilter)) {\n      var filter$3 = arguments[0];\n      filter$3.filter(this);\n    }\n  };\n  Point.prototype.getBoundary = function getBoundary () {\n    return this.getFactory().createGeometryCollection(null)\n  };\n  Point.prototype.clone = function clone () {\n    var p = Geometry$$1.prototype.clone.call(this);\n    p._coordinates = this._coordinates.clone();\n    return p\n  };\n  Point.prototype.getGeometryType = function getGeometryType () {\n    return 'Point'\n  };\n  Point.prototype.copy = function copy () {\n    return new Point(this._coordinates.copy(), this._factory)\n  };\n  Point.prototype.getCoordinateSequence = function getCoordinateSequence () {\n    return this._coordinates\n  };\n  Point.prototype.getY = function getY () {\n    if (this.getCoordinate() === null) {\n      throw new Error('getY called on empty Point')\n    }\n    return this.getCoordinate().y\n  };\n  Point.prototype.isEmpty = function isEmpty () {\n    return this._coordinates.size() === 0\n  };\n  Point.prototype.init = function init (coordinates) {\n    if (coordinates === null) {\n      coordinates = this.getFactory().getCoordinateSequenceFactory().create([]);\n    }\n    Assert.isTrue(coordinates.size() <= 1);\n    this._coordinates = coordinates;\n  };\n  Point.prototype.isSimple = function isSimple () {\n    return true\n  };\n  Point.prototype.interfaces_ = function interfaces_ () {\n    return [Puntal]\n  };\n  Point.prototype.getClass = function getClass () {\n    return Point\n  };\n  staticAccessors.serialVersionUID.get = function () { return 4902022702746614570 };\n\n  Object.defineProperties( Point, staticAccessors );\n\n  return Point;\n}(Geometry));\n\nvar Polygonal = function Polygonal () {};\n\nPolygonal.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nPolygonal.prototype.getClass = function getClass () {\n  return Polygonal\n};\n\nvar Polygon = (function (Geometry$$1) {\n  function Polygon (shell, holes, factory) {\n    Geometry$$1.call(this, factory);\n    this._shell = null;\n    this._holes = null;\n    if (shell === null) {\n      shell = this.getFactory().createLinearRing();\n    }\n    if (holes === null) {\n      holes = [];\n    }\n    if (Geometry$$1.hasNullElements(holes)) {\n      throw new IllegalArgumentException('holes must not contain null elements')\n    }\n    if (shell.isEmpty() && Geometry$$1.hasNonEmptyElements(holes)) {\n      throw new IllegalArgumentException('shell is empty but holes are not')\n    }\n    this._shell = shell;\n    this._holes = holes;\n  }\n\n  if ( Geometry$$1 ) Polygon.__proto__ = Geometry$$1;\n  Polygon.prototype = Object.create( Geometry$$1 && Geometry$$1.prototype );\n  Polygon.prototype.constructor = Polygon;\n\n  var staticAccessors = { serialVersionUID: { configurable: true } };\n  Polygon.prototype.computeEnvelopeInternal = function computeEnvelopeInternal () {\n    return this._shell.getEnvelopeInternal()\n  };\n  Polygon.prototype.getSortIndex = function getSortIndex () {\n    return Geometry$$1.SORTINDEX_POLYGON\n  };\n  Polygon.prototype.getCoordinates = function getCoordinates () {\n    var this$1 = this;\n\n    if (this.isEmpty()) {\n      return []\n    }\n    var coordinates = new Array(this.getNumPoints()).fill(null);\n    var k = -1;\n    var shellCoordinates = this._shell.getCoordinates();\n    for (var x = 0; x < shellCoordinates.length; x++) {\n      k++;\n      coordinates[k] = shellCoordinates[x];\n    }\n    for (var i = 0; i < this._holes.length; i++) {\n      var childCoordinates = this$1._holes[i].getCoordinates();\n      for (var j = 0; j < childCoordinates.length; j++) {\n        k++;\n        coordinates[k] = childCoordinates[j];\n      }\n    }\n    return coordinates\n  };\n  Polygon.prototype.getArea = function getArea () {\n    var this$1 = this;\n\n    var area = 0.0;\n    area += Math.abs(CGAlgorithms.signedArea(this._shell.getCoordinateSequence()));\n    for (var i = 0; i < this._holes.length; i++) {\n      area -= Math.abs(CGAlgorithms.signedArea(this$1._holes[i].getCoordinateSequence()));\n    }\n    return area\n  };\n  Polygon.prototype.isRectangle = function isRectangle () {\n    if (this.getNumInteriorRing() !== 0) { return false }\n    if (this._shell === null) { return false }\n    if (this._shell.getNumPoints() !== 5) { return false }\n    var seq = this._shell.getCoordinateSequence();\n    var env = this.getEnvelopeInternal();\n    for (var i = 0; i < 5; i++) {\n      var x = seq.getX(i);\n      if (!(x === env.getMinX() || x === env.getMaxX())) { return false }\n      var y = seq.getY(i);\n      if (!(y === env.getMinY() || y === env.getMaxY())) { return false }\n    }\n    var prevX = seq.getX(0);\n    var prevY = seq.getY(0);\n    for (var i$1 = 1; i$1 <= 4; i$1++) {\n      var x$1 = seq.getX(i$1);\n      var y$1 = seq.getY(i$1);\n      var xChanged = x$1 !== prevX;\n      var yChanged = y$1 !== prevY;\n      if (xChanged === yChanged) { return false }\n      prevX = x$1;\n      prevY = y$1;\n    }\n    return true\n  };\n  Polygon.prototype.equalsExact = function equalsExact () {\n    var this$1 = this;\n\n    if (arguments.length === 2) {\n      var other = arguments[0];\n      var tolerance = arguments[1];\n      if (!this.isEquivalentClass(other)) {\n        return false\n      }\n      var otherPolygon = other;\n      var thisShell = this._shell;\n      var otherPolygonShell = otherPolygon._shell;\n      if (!thisShell.equalsExact(otherPolygonShell, tolerance)) {\n        return false\n      }\n      if (this._holes.length !== otherPolygon._holes.length) {\n        return false\n      }\n      for (var i = 0; i < this._holes.length; i++) {\n        if (!this$1._holes[i].equalsExact(otherPolygon._holes[i], tolerance)) {\n          return false\n        }\n      }\n      return true\n    } else { return Geometry$$1.prototype.equalsExact.apply(this, arguments) }\n  };\n  Polygon.prototype.normalize = function normalize () {\n    var this$1 = this;\n\n    if (arguments.length === 0) {\n      this.normalize(this._shell, true);\n      for (var i = 0; i < this._holes.length; i++) {\n        this$1.normalize(this$1._holes[i], false);\n      }\n      Arrays.sort(this._holes);\n    } else if (arguments.length === 2) {\n      var ring = arguments[0];\n      var clockwise = arguments[1];\n      if (ring.isEmpty()) {\n        return null\n      }\n      var uniqueCoordinates = new Array(ring.getCoordinates().length - 1).fill(null);\n      System.arraycopy(ring.getCoordinates(), 0, uniqueCoordinates, 0, uniqueCoordinates.length);\n      var minCoordinate = CoordinateArrays.minCoordinate(ring.getCoordinates());\n      CoordinateArrays.scroll(uniqueCoordinates, minCoordinate);\n      System.arraycopy(uniqueCoordinates, 0, ring.getCoordinates(), 0, uniqueCoordinates.length);\n      ring.getCoordinates()[uniqueCoordinates.length] = uniqueCoordinates[0];\n      if (CGAlgorithms.isCCW(ring.getCoordinates()) === clockwise) {\n        CoordinateArrays.reverse(ring.getCoordinates());\n      }\n    }\n  };\n  Polygon.prototype.getCoordinate = function getCoordinate () {\n    return this._shell.getCoordinate()\n  };\n  Polygon.prototype.getNumInteriorRing = function getNumInteriorRing () {\n    return this._holes.length\n  };\n  Polygon.prototype.getBoundaryDimension = function getBoundaryDimension () {\n    return 1\n  };\n  Polygon.prototype.getDimension = function getDimension () {\n    return 2\n  };\n  Polygon.prototype.getLength = function getLength () {\n    var this$1 = this;\n\n    var len = 0.0;\n    len += this._shell.getLength();\n    for (var i = 0; i < this._holes.length; i++) {\n      len += this$1._holes[i].getLength();\n    }\n    return len\n  };\n  Polygon.prototype.getNumPoints = function getNumPoints () {\n    var this$1 = this;\n\n    var numPoints = this._shell.getNumPoints();\n    for (var i = 0; i < this._holes.length; i++) {\n      numPoints += this$1._holes[i].getNumPoints();\n    }\n    return numPoints\n  };\n  Polygon.prototype.reverse = function reverse () {\n    var this$1 = this;\n\n    var poly = this.copy();\n    poly._shell = this._shell.copy().reverse();\n    poly._holes = new Array(this._holes.length).fill(null);\n    for (var i = 0; i < this._holes.length; i++) {\n      poly._holes[i] = this$1._holes[i].copy().reverse();\n    }\n    return poly\n  };\n  Polygon.prototype.convexHull = function convexHull () {\n    return this.getExteriorRing().convexHull()\n  };\n  Polygon.prototype.compareToSameClass = function compareToSameClass () {\n    var this$1 = this;\n\n    if (arguments.length === 1) {\n      var o = arguments[0];\n      var thisShell = this._shell;\n      var otherShell = o._shell;\n      return thisShell.compareToSameClass(otherShell)\n    } else if (arguments.length === 2) {\n      var o$1 = arguments[0];\n      var comp = arguments[1];\n      var poly = o$1;\n      var thisShell$1 = this._shell;\n      var otherShell$1 = poly._shell;\n      var shellComp = thisShell$1.compareToSameClass(otherShell$1, comp);\n      if (shellComp !== 0) { return shellComp }\n      var nHole1 = this.getNumInteriorRing();\n      var nHole2 = poly.getNumInteriorRing();\n      var i = 0;\n      while (i < nHole1 && i < nHole2) {\n        var thisHole = this$1.getInteriorRingN(i);\n        var otherHole = poly.getInteriorRingN(i);\n        var holeComp = thisHole.compareToSameClass(otherHole, comp);\n        if (holeComp !== 0) { return holeComp }\n        i++;\n      }\n      if (i < nHole1) { return 1 }\n      if (i < nHole2) { return -1 }\n      return 0\n    }\n  };\n  Polygon.prototype.apply = function apply (filter) {\n    var this$1 = this;\n\n    if (hasInterface(filter, CoordinateFilter)) {\n      this._shell.apply(filter);\n      for (var i$1 = 0; i$1 < this._holes.length; i$1++) {\n        this$1._holes[i$1].apply(filter);\n      }\n    } else if (hasInterface(filter, CoordinateSequenceFilter)) {\n      this._shell.apply(filter);\n      if (!filter.isDone()) {\n        for (var i$2 = 0; i$2 < this._holes.length; i$2++) {\n          this$1._holes[i$2].apply(filter);\n          if (filter.isDone()) { break }\n        }\n      }\n      if (filter.isGeometryChanged()) { this.geometryChanged(); }\n    } else if (hasInterface(filter, GeometryFilter)) {\n      filter.filter(this);\n    } else if (hasInterface(filter, GeometryComponentFilter)) {\n      filter.filter(this);\n      this._shell.apply(filter);\n      for (var i = 0; i < this._holes.length; i++) {\n        this$1._holes[i].apply(filter);\n      }\n    }\n  };\n  Polygon.prototype.getBoundary = function getBoundary () {\n    var this$1 = this;\n\n    if (this.isEmpty()) {\n      return this.getFactory().createMultiLineString()\n    }\n    var rings = new Array(this._holes.length + 1).fill(null);\n    rings[0] = this._shell;\n    for (var i = 0; i < this._holes.length; i++) {\n      rings[i + 1] = this$1._holes[i];\n    }\n    if (rings.length <= 1) { return this.getFactory().createLinearRing(rings[0].getCoordinateSequence()) }\n    return this.getFactory().createMultiLineString(rings)\n  };\n  Polygon.prototype.clone = function clone () {\n    var this$1 = this;\n\n    var poly = Geometry$$1.prototype.clone.call(this);\n    poly._shell = this._shell.clone();\n    poly._holes = new Array(this._holes.length).fill(null);\n    for (var i = 0; i < this._holes.length; i++) {\n      poly._holes[i] = this$1._holes[i].clone();\n    }\n    return poly\n  };\n  Polygon.prototype.getGeometryType = function getGeometryType () {\n    return 'Polygon'\n  };\n  Polygon.prototype.copy = function copy () {\n    var this$1 = this;\n\n    var shell = this._shell.copy();\n    var holes = new Array(this._holes.length).fill(null);\n    for (var i = 0; i < holes.length; i++) {\n      holes[i] = this$1._holes[i].copy();\n    }\n    return new Polygon(shell, holes, this._factory)\n  };\n  Polygon.prototype.getExteriorRing = function getExteriorRing () {\n    return this._shell\n  };\n  Polygon.prototype.isEmpty = function isEmpty () {\n    return this._shell.isEmpty()\n  };\n  Polygon.prototype.getInteriorRingN = function getInteriorRingN (n) {\n    return this._holes[n]\n  };\n  Polygon.prototype.interfaces_ = function interfaces_ () {\n    return [Polygonal]\n  };\n  Polygon.prototype.getClass = function getClass () {\n    return Polygon\n  };\n  staticAccessors.serialVersionUID.get = function () { return -3494792200821764533 };\n\n  Object.defineProperties( Polygon, staticAccessors );\n\n  return Polygon;\n}(Geometry));\n\nvar MultiPoint = (function (GeometryCollection$$1) {\n  function MultiPoint () {\n    GeometryCollection$$1.apply(this, arguments);\n  }\n\n  if ( GeometryCollection$$1 ) MultiPoint.__proto__ = GeometryCollection$$1;\n  MultiPoint.prototype = Object.create( GeometryCollection$$1 && GeometryCollection$$1.prototype );\n  MultiPoint.prototype.constructor = MultiPoint;\n\n  var staticAccessors = { serialVersionUID: { configurable: true } };\n\n  MultiPoint.prototype.getSortIndex = function getSortIndex () {\n    return Geometry.SORTINDEX_MULTIPOINT\n  };\n  MultiPoint.prototype.isValid = function isValid () {\n    return true\n  };\n  MultiPoint.prototype.equalsExact = function equalsExact () {\n    if (arguments.length === 2) {\n      var other = arguments[0];\n      var tolerance = arguments[1];\n      if (!this.isEquivalentClass(other)) {\n        return false\n      }\n      return GeometryCollection$$1.prototype.equalsExact.call(this, other, tolerance)\n    } else { return GeometryCollection$$1.prototype.equalsExact.apply(this, arguments) }\n  };\n  MultiPoint.prototype.getCoordinate = function getCoordinate () {\n    if (arguments.length === 1) {\n      var n = arguments[0];\n      return this._geometries[n].getCoordinate()\n    } else { return GeometryCollection$$1.prototype.getCoordinate.apply(this, arguments) }\n  };\n  MultiPoint.prototype.getBoundaryDimension = function getBoundaryDimension () {\n    return Dimension.FALSE\n  };\n  MultiPoint.prototype.getDimension = function getDimension () {\n    return 0\n  };\n  MultiPoint.prototype.getBoundary = function getBoundary () {\n    return this.getFactory().createGeometryCollection(null)\n  };\n  MultiPoint.prototype.getGeometryType = function getGeometryType () {\n    return 'MultiPoint'\n  };\n  MultiPoint.prototype.copy = function copy () {\n    var this$1 = this;\n\n    var points = new Array(this._geometries.length).fill(null);\n    for (var i = 0; i < points.length; i++) {\n      points[i] = this$1._geometries[i].copy();\n    }\n    return new MultiPoint(points, this._factory)\n  };\n  MultiPoint.prototype.interfaces_ = function interfaces_ () {\n    return [Puntal]\n  };\n  MultiPoint.prototype.getClass = function getClass () {\n    return MultiPoint\n  };\n  staticAccessors.serialVersionUID.get = function () { return -8048474874175355449 };\n\n  Object.defineProperties( MultiPoint, staticAccessors );\n\n  return MultiPoint;\n}(GeometryCollection));\n\nvar LinearRing = (function (LineString$$1) {\n  function LinearRing (points, factory) {\n    if (points instanceof Coordinate && factory instanceof GeometryFactory) {\n      points = factory.getCoordinateSequenceFactory().create(points);\n    }\n    LineString$$1.call(this, points, factory);\n    this.validateConstruction();\n  }\n\n  if ( LineString$$1 ) LinearRing.__proto__ = LineString$$1;\n  LinearRing.prototype = Object.create( LineString$$1 && LineString$$1.prototype );\n  LinearRing.prototype.constructor = LinearRing;\n\n  var staticAccessors = { MINIMUM_VALID_SIZE: { configurable: true },serialVersionUID: { configurable: true } };\n  LinearRing.prototype.getSortIndex = function getSortIndex () {\n    return Geometry.SORTINDEX_LINEARRING\n  };\n  LinearRing.prototype.getBoundaryDimension = function getBoundaryDimension () {\n    return Dimension.FALSE\n  };\n  LinearRing.prototype.isClosed = function isClosed () {\n    if (this.isEmpty()) {\n      return true\n    }\n    return LineString$$1.prototype.isClosed.call(this)\n  };\n  LinearRing.prototype.reverse = function reverse () {\n    var seq = this._points.copy();\n    CoordinateSequences.reverse(seq);\n    var rev = this.getFactory().createLinearRing(seq);\n    return rev\n  };\n  LinearRing.prototype.validateConstruction = function validateConstruction () {\n    if (!this.isEmpty() && !LineString$$1.prototype.isClosed.call(this)) {\n      throw new IllegalArgumentException('Points of LinearRing do not form a closed linestring')\n    }\n    if (this.getCoordinateSequence().size() >= 1 && this.getCoordinateSequence().size() < LinearRing.MINIMUM_VALID_SIZE) {\n      throw new IllegalArgumentException('Invalid number of points in LinearRing (found ' + this.getCoordinateSequence().size() + ' - must be 0 or >= 4)')\n    }\n  };\n  LinearRing.prototype.getGeometryType = function getGeometryType () {\n    return 'LinearRing'\n  };\n  LinearRing.prototype.copy = function copy () {\n    return new LinearRing(this._points.copy(), this._factory)\n  };\n  LinearRing.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  LinearRing.prototype.getClass = function getClass () {\n    return LinearRing\n  };\n  staticAccessors.MINIMUM_VALID_SIZE.get = function () { return 4 };\n  staticAccessors.serialVersionUID.get = function () { return -4261142084085851829 };\n\n  Object.defineProperties( LinearRing, staticAccessors );\n\n  return LinearRing;\n}(LineString));\n\nvar MultiPolygon = (function (GeometryCollection$$1) {\n  function MultiPolygon () {\n    GeometryCollection$$1.apply(this, arguments);\n  }\n\n  if ( GeometryCollection$$1 ) MultiPolygon.__proto__ = GeometryCollection$$1;\n  MultiPolygon.prototype = Object.create( GeometryCollection$$1 && GeometryCollection$$1.prototype );\n  MultiPolygon.prototype.constructor = MultiPolygon;\n\n  var staticAccessors = { serialVersionUID: { configurable: true } };\n\n  MultiPolygon.prototype.getSortIndex = function getSortIndex () {\n    return Geometry.SORTINDEX_MULTIPOLYGON\n  };\n  MultiPolygon.prototype.equalsExact = function equalsExact () {\n    if (arguments.length === 2) {\n      var other = arguments[0];\n      var tolerance = arguments[1];\n      if (!this.isEquivalentClass(other)) {\n        return false\n      }\n      return GeometryCollection$$1.prototype.equalsExact.call(this, other, tolerance)\n    } else { return GeometryCollection$$1.prototype.equalsExact.apply(this, arguments) }\n  };\n  MultiPolygon.prototype.getBoundaryDimension = function getBoundaryDimension () {\n    return 1\n  };\n  MultiPolygon.prototype.getDimension = function getDimension () {\n    return 2\n  };\n  MultiPolygon.prototype.reverse = function reverse () {\n    var this$1 = this;\n\n    var n = this._geometries.length;\n    var revGeoms = new Array(n).fill(null);\n    for (var i = 0; i < this._geometries.length; i++) {\n      revGeoms[i] = this$1._geometries[i].reverse();\n    }\n    return this.getFactory().createMultiPolygon(revGeoms)\n  };\n  MultiPolygon.prototype.getBoundary = function getBoundary () {\n    var this$1 = this;\n\n    if (this.isEmpty()) {\n      return this.getFactory().createMultiLineString()\n    }\n    var allRings = new ArrayList();\n    for (var i = 0; i < this._geometries.length; i++) {\n      var polygon = this$1._geometries[i];\n      var rings = polygon.getBoundary();\n      for (var j = 0; j < rings.getNumGeometries(); j++) {\n        allRings.add(rings.getGeometryN(j));\n      }\n    }\n    var allRingsArray = new Array(allRings.size()).fill(null);\n    return this.getFactory().createMultiLineString(allRings.toArray(allRingsArray))\n  };\n  MultiPolygon.prototype.getGeometryType = function getGeometryType () {\n    return 'MultiPolygon'\n  };\n  MultiPolygon.prototype.copy = function copy () {\n    var this$1 = this;\n\n    var polygons = new Array(this._geometries.length).fill(null);\n    for (var i = 0; i < polygons.length; i++) {\n      polygons[i] = this$1._geometries[i].copy();\n    }\n    return new MultiPolygon(polygons, this._factory)\n  };\n  MultiPolygon.prototype.interfaces_ = function interfaces_ () {\n    return [Polygonal]\n  };\n  MultiPolygon.prototype.getClass = function getClass () {\n    return MultiPolygon\n  };\n  staticAccessors.serialVersionUID.get = function () { return -551033529766975875 };\n\n  Object.defineProperties( MultiPolygon, staticAccessors );\n\n  return MultiPolygon;\n}(GeometryCollection));\n\nvar GeometryEditor = function GeometryEditor (factory) {\n  this._factory = factory || null;\n  this._isUserDataCopied = false;\n};\n\nvar staticAccessors$16 = { NoOpGeometryOperation: { configurable: true },CoordinateOperation: { configurable: true },CoordinateSequenceOperation: { configurable: true } };\nGeometryEditor.prototype.setCopyUserData = function setCopyUserData (isUserDataCopied) {\n  this._isUserDataCopied = isUserDataCopied;\n};\nGeometryEditor.prototype.edit = function edit (geometry, operation) {\n  if (geometry === null) { return null }\n  var result = this.editInternal(geometry, operation);\n  if (this._isUserDataCopied) {\n    result.setUserData(geometry.getUserData());\n  }\n  return result\n};\nGeometryEditor.prototype.editInternal = function editInternal (geometry, operation) {\n  if (this._factory === null) { this._factory = geometry.getFactory(); }\n  if (geometry instanceof GeometryCollection) {\n    return this.editGeometryCollection(geometry, operation)\n  }\n  if (geometry instanceof Polygon) {\n    return this.editPolygon(geometry, operation)\n  }\n  if (geometry instanceof Point) {\n    return operation.edit(geometry, this._factory)\n  }\n  if (geometry instanceof LineString) {\n    return operation.edit(geometry, this._factory)\n  }\n  Assert.shouldNeverReachHere('Unsupported Geometry class: ' + geometry.getClass().getName());\n  return null\n};\nGeometryEditor.prototype.editGeometryCollection = function editGeometryCollection (collection, operation) {\n    var this$1 = this;\n\n  var collectionForType = operation.edit(collection, this._factory);\n  var geometries = new ArrayList();\n  for (var i = 0; i < collectionForType.getNumGeometries(); i++) {\n    var geometry = this$1.edit(collectionForType.getGeometryN(i), operation);\n    if (geometry === null || geometry.isEmpty()) {\n      continue\n    }\n    geometries.add(geometry);\n  }\n  if (collectionForType.getClass() === MultiPoint) {\n    return this._factory.createMultiPoint(geometries.toArray([]))\n  }\n  if (collectionForType.getClass() === MultiLineString) {\n    return this._factory.createMultiLineString(geometries.toArray([]))\n  }\n  if (collectionForType.getClass() === MultiPolygon) {\n    return this._factory.createMultiPolygon(geometries.toArray([]))\n  }\n  return this._factory.createGeometryCollection(geometries.toArray([]))\n};\nGeometryEditor.prototype.editPolygon = function editPolygon (polygon, operation) {\n    var this$1 = this;\n\n  var newPolygon = operation.edit(polygon, this._factory);\n  if (newPolygon === null) { newPolygon = this._factory.createPolygon(null); }\n  if (newPolygon.isEmpty()) {\n    return newPolygon\n  }\n  var shell = this.edit(newPolygon.getExteriorRing(), operation);\n  if (shell === null || shell.isEmpty()) {\n    return this._factory.createPolygon()\n  }\n  var holes = new ArrayList();\n  for (var i = 0; i < newPolygon.getNumInteriorRing(); i++) {\n    var hole = this$1.edit(newPolygon.getInteriorRingN(i), operation);\n    if (hole === null || hole.isEmpty()) {\n      continue\n    }\n    holes.add(hole);\n  }\n  return this._factory.createPolygon(shell, holes.toArray([]))\n};\nGeometryEditor.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nGeometryEditor.prototype.getClass = function getClass () {\n  return GeometryEditor\n};\nGeometryEditor.GeometryEditorOperation = function GeometryEditorOperation () {};\nstaticAccessors$16.NoOpGeometryOperation.get = function () { return NoOpGeometryOperation };\nstaticAccessors$16.CoordinateOperation.get = function () { return CoordinateOperation };\nstaticAccessors$16.CoordinateSequenceOperation.get = function () { return CoordinateSequenceOperation };\n\nObject.defineProperties( GeometryEditor, staticAccessors$16 );\n\nvar NoOpGeometryOperation = function NoOpGeometryOperation () {};\n\nNoOpGeometryOperation.prototype.edit = function edit (geometry, factory) {\n  return geometry\n};\nNoOpGeometryOperation.prototype.interfaces_ = function interfaces_ () {\n  return [GeometryEditor.GeometryEditorOperation]\n};\nNoOpGeometryOperation.prototype.getClass = function getClass () {\n  return NoOpGeometryOperation\n};\n\nvar CoordinateOperation = function CoordinateOperation () {};\n\nCoordinateOperation.prototype.edit = function edit (geometry, factory) {\n  var coords = this.editCoordinates(geometry.getCoordinates(), geometry);\n  if (coords === null) { return geometry }\n  if (geometry instanceof LinearRing) {\n    return factory.createLinearRing(coords)\n  }\n  if (geometry instanceof LineString) {\n    return factory.createLineString(coords)\n  }\n  if (geometry instanceof Point) {\n    if (coords.length > 0) {\n      return factory.createPoint(coords[0])\n    } else {\n      return factory.createPoint()\n    }\n  }\n  return geometry\n};\nCoordinateOperation.prototype.interfaces_ = function interfaces_ () {\n  return [GeometryEditor.GeometryEditorOperation]\n};\nCoordinateOperation.prototype.getClass = function getClass () {\n  return CoordinateOperation\n};\n\nvar CoordinateSequenceOperation = function CoordinateSequenceOperation () {};\n\nCoordinateSequenceOperation.prototype.edit = function edit (geometry, factory) {\n  if (geometry instanceof LinearRing) {\n    return factory.createLinearRing(this.edit(geometry.getCoordinateSequence(), geometry))\n  }\n  if (geometry instanceof LineString) {\n    return factory.createLineString(this.edit(geometry.getCoordinateSequence(), geometry))\n  }\n  if (geometry instanceof Point) {\n    return factory.createPoint(this.edit(geometry.getCoordinateSequence(), geometry))\n  }\n  return geometry\n};\nCoordinateSequenceOperation.prototype.interfaces_ = function interfaces_ () {\n  return [GeometryEditor.GeometryEditorOperation]\n};\nCoordinateSequenceOperation.prototype.getClass = function getClass () {\n  return CoordinateSequenceOperation\n};\n\nvar CoordinateArraySequence = function CoordinateArraySequence () {\n  var this$1 = this;\n\n  this._dimension = 3;\n  this._coordinates = null;\n  if (arguments.length === 1) {\n    if (arguments[0] instanceof Array) {\n      this._coordinates = arguments[0];\n      this._dimension = 3;\n    } else if (Number.isInteger(arguments[0])) {\n      var size = arguments[0];\n      this._coordinates = new Array(size).fill(null);\n      for (var i = 0; i < size; i++) {\n        this$1._coordinates[i] = new Coordinate();\n      }\n    } else if (hasInterface(arguments[0], CoordinateSequence)) {\n      var coordSeq = arguments[0];\n      if (coordSeq === null) {\n        this._coordinates = new Array(0).fill(null);\n        return null\n      }\n      this._dimension = coordSeq.getDimension();\n      this._coordinates = new Array(coordSeq.size()).fill(null);\n      for (var i$1 = 0; i$1 < this._coordinates.length; i$1++) {\n        this$1._coordinates[i$1] = coordSeq.getCoordinateCopy(i$1);\n      }\n    }\n  } else if (arguments.length === 2) {\n    if (arguments[0] instanceof Array && Number.isInteger(arguments[1])) {\n      var coordinates = arguments[0];\n      var dimension = arguments[1];\n      this._coordinates = coordinates;\n      this._dimension = dimension;\n      if (coordinates === null) { this._coordinates = new Array(0).fill(null); }\n    } else if (Number.isInteger(arguments[0]) && Number.isInteger(arguments[1])) {\n      var size$1 = arguments[0];\n      var dimension$1 = arguments[1];\n      this._coordinates = new Array(size$1).fill(null);\n      this._dimension = dimension$1;\n      for (var i$2 = 0; i$2 < size$1; i$2++) {\n        this$1._coordinates[i$2] = new Coordinate();\n      }\n    }\n  }\n};\n\nvar staticAccessors$18 = { serialVersionUID: { configurable: true } };\nCoordinateArraySequence.prototype.setOrdinate = function setOrdinate (index, ordinateIndex, value) {\n  switch (ordinateIndex) {\n    case CoordinateSequence.X:\n      this._coordinates[index].x = value;\n      break\n    case CoordinateSequence.Y:\n      this._coordinates[index].y = value;\n      break\n    case CoordinateSequence.Z:\n      this._coordinates[index].z = value;\n      break\n    default:\n      throw new IllegalArgumentException('invalid ordinateIndex')\n  }\n};\nCoordinateArraySequence.prototype.size = function size () {\n  return this._coordinates.length\n};\nCoordinateArraySequence.prototype.getOrdinate = function getOrdinate (index, ordinateIndex) {\n  switch (ordinateIndex) {\n    case CoordinateSequence.X:\n      return this._coordinates[index].x\n    case CoordinateSequence.Y:\n      return this._coordinates[index].y\n    case CoordinateSequence.Z:\n      return this._coordinates[index].z\n    default:\n  }\n  return Double.NaN\n};\nCoordinateArraySequence.prototype.getCoordinate = function getCoordinate () {\n  if (arguments.length === 1) {\n    var i = arguments[0];\n    return this._coordinates[i]\n  } else if (arguments.length === 2) {\n    var index = arguments[0];\n    var coord = arguments[1];\n    coord.x = this._coordinates[index].x;\n    coord.y = this._coordinates[index].y;\n    coord.z = this._coordinates[index].z;\n  }\n};\nCoordinateArraySequence.prototype.getCoordinateCopy = function getCoordinateCopy (i) {\n  return new Coordinate(this._coordinates[i])\n};\nCoordinateArraySequence.prototype.getDimension = function getDimension () {\n  return this._dimension\n};\nCoordinateArraySequence.prototype.getX = function getX (index) {\n  return this._coordinates[index].x\n};\nCoordinateArraySequence.prototype.clone = function clone () {\n    var this$1 = this;\n\n  var cloneCoordinates = new Array(this.size()).fill(null);\n  for (var i = 0; i < this._coordinates.length; i++) {\n    cloneCoordinates[i] = this$1._coordinates[i].clone();\n  }\n  return new CoordinateArraySequence(cloneCoordinates, this._dimension)\n};\nCoordinateArraySequence.prototype.expandEnvelope = function expandEnvelope (env) {\n    var this$1 = this;\n\n  for (var i = 0; i < this._coordinates.length; i++) {\n    env.expandToInclude(this$1._coordinates[i]);\n  }\n  return env\n};\nCoordinateArraySequence.prototype.copy = function copy () {\n    var this$1 = this;\n\n  var cloneCoordinates = new Array(this.size()).fill(null);\n  for (var i = 0; i < this._coordinates.length; i++) {\n    cloneCoordinates[i] = this$1._coordinates[i].copy();\n  }\n  return new CoordinateArraySequence(cloneCoordinates, this._dimension)\n};\nCoordinateArraySequence.prototype.toString = function toString () {\n    var this$1 = this;\n\n  if (this._coordinates.length > 0) {\n    var strBuf = new StringBuffer(17 * this._coordinates.length);\n    strBuf.append('(');\n    strBuf.append(this._coordinates[0]);\n    for (var i = 1; i < this._coordinates.length; i++) {\n      strBuf.append(', ');\n      strBuf.append(this$1._coordinates[i]);\n    }\n    strBuf.append(')');\n    return strBuf.toString()\n  } else {\n    return '()'\n  }\n};\nCoordinateArraySequence.prototype.getY = function getY (index) {\n  return this._coordinates[index].y\n};\nCoordinateArraySequence.prototype.toCoordinateArray = function toCoordinateArray () {\n  return this._coordinates\n};\nCoordinateArraySequence.prototype.interfaces_ = function interfaces_ () {\n  return [CoordinateSequence, Serializable]\n};\nCoordinateArraySequence.prototype.getClass = function getClass () {\n  return CoordinateArraySequence\n};\nstaticAccessors$18.serialVersionUID.get = function () { return -915438501601840650 };\n\nObject.defineProperties( CoordinateArraySequence, staticAccessors$18 );\n\nvar CoordinateArraySequenceFactory = function CoordinateArraySequenceFactory () {};\n\nvar staticAccessors$17 = { serialVersionUID: { configurable: true },instanceObject: { configurable: true } };\n\nCoordinateArraySequenceFactory.prototype.readResolve = function readResolve () {\n  return CoordinateArraySequenceFactory.instance()\n};\nCoordinateArraySequenceFactory.prototype.create = function create () {\n  if (arguments.length === 1) {\n    if (arguments[0] instanceof Array) {\n      var coordinates = arguments[0];\n      return new CoordinateArraySequence(coordinates)\n    } else if (hasInterface(arguments[0], CoordinateSequence)) {\n      var coordSeq = arguments[0];\n      return new CoordinateArraySequence(coordSeq)\n    }\n  } else if (arguments.length === 2) {\n    var size = arguments[0];\n    var dimension = arguments[1];\n    if (dimension > 3) { dimension = 3; }\n    if (dimension < 2) { return new CoordinateArraySequence(size) }\n    return new CoordinateArraySequence(size, dimension)\n  }\n};\nCoordinateArraySequenceFactory.prototype.interfaces_ = function interfaces_ () {\n  return [CoordinateSequenceFactory, Serializable]\n};\nCoordinateArraySequenceFactory.prototype.getClass = function getClass () {\n  return CoordinateArraySequenceFactory\n};\nCoordinateArraySequenceFactory.instance = function instance () {\n  return CoordinateArraySequenceFactory.instanceObject\n};\n\nstaticAccessors$17.serialVersionUID.get = function () { return -4099577099607551657 };\nstaticAccessors$17.instanceObject.get = function () { return new CoordinateArraySequenceFactory() };\n\nObject.defineProperties( CoordinateArraySequenceFactory, staticAccessors$17 );\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/HashMap.html\n *\n * @extends {javascript.util.Map}\n * @constructor\n * @private\n */\nvar HashMap = (function (MapInterface) {\n  function HashMap () {\n    MapInterface.call(this);\n    this.map_ = new Map();\n  }\n\n  if ( MapInterface ) HashMap.__proto__ = MapInterface;\n  HashMap.prototype = Object.create( MapInterface && MapInterface.prototype );\n  HashMap.prototype.constructor = HashMap;\n  /**\n   * @override\n   */\n  HashMap.prototype.get = function get (key) {\n    return this.map_.get(key) || null\n  };\n\n  /**\n   * @override\n   */\n  HashMap.prototype.put = function put (key, value) {\n    this.map_.set(key, value);\n    return value\n  };\n\n  /**\n   * @override\n   */\n  HashMap.prototype.values = function values () {\n    var arrayList = new ArrayList();\n    var it = this.map_.values();\n    var o = it.next();\n    while (!o.done) {\n      arrayList.add(o.value);\n      o = it.next();\n    }\n    return arrayList\n  };\n\n  /**\n   * @override\n   */\n  HashMap.prototype.entrySet = function entrySet () {\n    var hashSet = new HashSet();\n    this.map_.entries().forEach(function (entry) { return hashSet.add(entry); });\n    return hashSet\n  };\n\n  /**\n   * @override\n   */\n  HashMap.prototype.size = function size () {\n    return this.map_.size()\n  };\n\n  return HashMap;\n}(Map$1));\n\nvar PrecisionModel = function PrecisionModel () {\n  this._modelType = null;\n  this._scale = null;\n  if (arguments.length === 0) {\n    this._modelType = PrecisionModel.FLOATING;\n  } else if (arguments.length === 1) {\n    if (arguments[0] instanceof Type) {\n      var modelType = arguments[0];\n      this._modelType = modelType;\n      if (modelType === PrecisionModel.FIXED) {\n        this.setScale(1.0);\n      }\n    } else if (typeof arguments[0] === 'number') {\n      var scale = arguments[0];\n      this._modelType = PrecisionModel.FIXED;\n      this.setScale(scale);\n    } else if (arguments[0] instanceof PrecisionModel) {\n      var pm = arguments[0];\n      this._modelType = pm._modelType;\n      this._scale = pm._scale;\n    }\n  }\n};\n\nvar staticAccessors$19 = { serialVersionUID: { configurable: true },maximumPreciseValue: { configurable: true } };\nPrecisionModel.prototype.equals = function equals (other) {\n  if (!(other instanceof PrecisionModel)) {\n    return false\n  }\n  var otherPrecisionModel = other;\n  return this._modelType === otherPrecisionModel._modelType && this._scale === otherPrecisionModel._scale\n};\nPrecisionModel.prototype.compareTo = function compareTo (o) {\n  var other = o;\n  var sigDigits = this.getMaximumSignificantDigits();\n  var otherSigDigits = other.getMaximumSignificantDigits();\n  return new Integer(sigDigits).compareTo(new Integer(otherSigDigits))\n};\nPrecisionModel.prototype.getScale = function getScale () {\n  return this._scale\n};\nPrecisionModel.prototype.isFloating = function isFloating () {\n  return this._modelType === PrecisionModel.FLOATING || this._modelType === PrecisionModel.FLOATING_SINGLE\n};\nPrecisionModel.prototype.getType = function getType () {\n  return this._modelType\n};\nPrecisionModel.prototype.toString = function toString () {\n  var description = 'UNKNOWN';\n  if (this._modelType === PrecisionModel.FLOATING) {\n    description = 'Floating';\n  } else if (this._modelType === PrecisionModel.FLOATING_SINGLE) {\n    description = 'Floating-Single';\n  } else if (this._modelType === PrecisionModel.FIXED) {\n    description = 'Fixed (Scale=' + this.getScale() + ')';\n  }\n  return description\n};\nPrecisionModel.prototype.makePrecise = function makePrecise () {\n  if (typeof arguments[0] === 'number') {\n    var val = arguments[0];\n    if (Double.isNaN(val)) { return val }\n    if (this._modelType === PrecisionModel.FLOATING_SINGLE) {\n      var floatSingleVal = val;\n      return floatSingleVal\n    }\n    if (this._modelType === PrecisionModel.FIXED) {\n      return Math.round(val * this._scale) / this._scale\n    }\n    return val\n  } else if (arguments[0] instanceof Coordinate) {\n    var coord = arguments[0];\n    if (this._modelType === PrecisionModel.FLOATING) { return null }\n    coord.x = this.makePrecise(coord.x);\n    coord.y = this.makePrecise(coord.y);\n  }\n};\nPrecisionModel.prototype.getMaximumSignificantDigits = function getMaximumSignificantDigits () {\n  var maxSigDigits = 16;\n  if (this._modelType === PrecisionModel.FLOATING) {\n    maxSigDigits = 16;\n  } else if (this._modelType === PrecisionModel.FLOATING_SINGLE) {\n    maxSigDigits = 6;\n  } else if (this._modelType === PrecisionModel.FIXED) {\n    maxSigDigits = 1 + Math.trunc(Math.ceil(Math.log(this.getScale()) / Math.log(10)));\n  }\n  return maxSigDigits\n};\nPrecisionModel.prototype.setScale = function setScale (scale) {\n  this._scale = Math.abs(scale);\n};\nPrecisionModel.prototype.interfaces_ = function interfaces_ () {\n  return [Serializable, Comparable]\n};\nPrecisionModel.prototype.getClass = function getClass () {\n  return PrecisionModel\n};\nPrecisionModel.mostPrecise = function mostPrecise (pm1, pm2) {\n  if (pm1.compareTo(pm2) >= 0) { return pm1 }\n  return pm2\n};\nstaticAccessors$19.serialVersionUID.get = function () { return 7777263578777803835 };\nstaticAccessors$19.maximumPreciseValue.get = function () { return 9007199254740992.0 };\n\nObject.defineProperties( PrecisionModel, staticAccessors$19 );\n\nvar Type = function Type (name) {\n  this._name = name || null;\n  Type.nameToTypeMap.put(name, this);\n};\n\nvar staticAccessors$1$1 = { serialVersionUID: { configurable: true },nameToTypeMap: { configurable: true } };\nType.prototype.readResolve = function readResolve () {\n  return Type.nameToTypeMap.get(this._name)\n};\nType.prototype.toString = function toString () {\n  return this._name\n};\nType.prototype.interfaces_ = function interfaces_ () {\n  return [Serializable]\n};\nType.prototype.getClass = function getClass () {\n  return Type\n};\nstaticAccessors$1$1.serialVersionUID.get = function () { return -5528602631731589822 };\nstaticAccessors$1$1.nameToTypeMap.get = function () { return new HashMap() };\n\nObject.defineProperties( Type, staticAccessors$1$1 );\n\nPrecisionModel.Type = Type;\nPrecisionModel.FIXED = new Type('FIXED');\nPrecisionModel.FLOATING = new Type('FLOATING');\nPrecisionModel.FLOATING_SINGLE = new Type('FLOATING SINGLE');\n\nvar GeometryFactory = function GeometryFactory () {\n  this._precisionModel = new PrecisionModel();\n  this._SRID = 0;\n  this._coordinateSequenceFactory = GeometryFactory.getDefaultCoordinateSequenceFactory();\n\n  if (arguments.length === 0) {\n  } else if (arguments.length === 1) {\n    if (hasInterface(arguments[0], CoordinateSequenceFactory)) {\n      this._coordinateSequenceFactory = arguments[0];\n    } else if (arguments[0] instanceof PrecisionModel) {\n      this._precisionModel = arguments[0];\n    }\n  } else if (arguments.length === 2) {\n    this._precisionModel = arguments[0];\n    this._SRID = arguments[1];\n  } else if (arguments.length === 3) {\n    this._precisionModel = arguments[0];\n    this._SRID = arguments[1];\n    this._coordinateSequenceFactory = arguments[2];\n  }\n};\n\nvar staticAccessors$2 = { serialVersionUID: { configurable: true } };\nGeometryFactory.prototype.toGeometry = function toGeometry (envelope) {\n  if (envelope.isNull()) {\n    return this.createPoint(null)\n  }\n  if (envelope.getMinX() === envelope.getMaxX() && envelope.getMinY() === envelope.getMaxY()) {\n    return this.createPoint(new Coordinate(envelope.getMinX(), envelope.getMinY()))\n  }\n  if (envelope.getMinX() === envelope.getMaxX() || envelope.getMinY() === envelope.getMaxY()) {\n    return this.createLineString([new Coordinate(envelope.getMinX(), envelope.getMinY()), new Coordinate(envelope.getMaxX(), envelope.getMaxY())])\n  }\n  return this.createPolygon(this.createLinearRing([new Coordinate(envelope.getMinX(), envelope.getMinY()), new Coordinate(envelope.getMinX(), envelope.getMaxY()), new Coordinate(envelope.getMaxX(), envelope.getMaxY()), new Coordinate(envelope.getMaxX(), envelope.getMinY()), new Coordinate(envelope.getMinX(), envelope.getMinY())]), null)\n};\nGeometryFactory.prototype.createLineString = function createLineString (coordinates) {\n  if (!coordinates) { return new LineString(this.getCoordinateSequenceFactory().create([]), this) }\n  else if (coordinates instanceof Array) { return new LineString(this.getCoordinateSequenceFactory().create(coordinates), this) }\n  else if (hasInterface(coordinates, CoordinateSequence)) { return new LineString(coordinates, this) }\n};\nGeometryFactory.prototype.createMultiLineString = function createMultiLineString () {\n  if (arguments.length === 0) {\n    return new MultiLineString(null, this)\n  } else if (arguments.length === 1) {\n    var lineStrings = arguments[0];\n    return new MultiLineString(lineStrings, this)\n  }\n};\nGeometryFactory.prototype.buildGeometry = function buildGeometry (geomList) {\n  var geomClass = null;\n  var isHeterogeneous = false;\n  var hasGeometryCollection = false;\n  for (var i = geomList.iterator(); i.hasNext();) {\n    var geom = i.next();\n    var partClass = geom.getClass();\n    if (geomClass === null) {\n      geomClass = partClass;\n    }\n    if (partClass !== geomClass) {\n      isHeterogeneous = true;\n    }\n    if (geom.isGeometryCollectionOrDerived()) { hasGeometryCollection = true; }\n  }\n  if (geomClass === null) {\n    return this.createGeometryCollection()\n  }\n  if (isHeterogeneous || hasGeometryCollection) {\n    return this.createGeometryCollection(GeometryFactory.toGeometryArray(geomList))\n  }\n  var geom0 = geomList.iterator().next();\n  var isCollection = geomList.size() > 1;\n  if (isCollection) {\n    if (geom0 instanceof Polygon) {\n      return this.createMultiPolygon(GeometryFactory.toPolygonArray(geomList))\n    } else if (geom0 instanceof LineString) {\n      return this.createMultiLineString(GeometryFactory.toLineStringArray(geomList))\n    } else if (geom0 instanceof Point) {\n      return this.createMultiPoint(GeometryFactory.toPointArray(geomList))\n    }\n    Assert.shouldNeverReachHere('Unhandled class: ' + geom0.getClass().getName());\n  }\n  return geom0\n};\nGeometryFactory.prototype.createMultiPointFromCoords = function createMultiPointFromCoords (coordinates) {\n  return this.createMultiPoint(coordinates !== null ? this.getCoordinateSequenceFactory().create(coordinates) : null)\n};\nGeometryFactory.prototype.createPoint = function createPoint () {\n  if (arguments.length === 0) {\n    return this.createPoint(this.getCoordinateSequenceFactory().create([]))\n  } else if (arguments.length === 1) {\n    if (arguments[0] instanceof Coordinate) {\n      var coordinate = arguments[0];\n      return this.createPoint(coordinate !== null ? this.getCoordinateSequenceFactory().create([coordinate]) : null)\n    } else if (hasInterface(arguments[0], CoordinateSequence)) {\n      var coordinates = arguments[0];\n      return new Point(coordinates, this)\n    }\n  }\n};\nGeometryFactory.prototype.getCoordinateSequenceFactory = function getCoordinateSequenceFactory () {\n  return this._coordinateSequenceFactory\n};\nGeometryFactory.prototype.createPolygon = function createPolygon () {\n  if (arguments.length === 0) {\n    return new Polygon(null, null, this)\n  } else if (arguments.length === 1) {\n    if (hasInterface(arguments[0], CoordinateSequence)) {\n      var coordinates = arguments[0];\n      return this.createPolygon(this.createLinearRing(coordinates))\n    } else if (arguments[0] instanceof Array) {\n      var coordinates$1 = arguments[0];\n      return this.createPolygon(this.createLinearRing(coordinates$1))\n    } else if (arguments[0] instanceof LinearRing) {\n      var shell = arguments[0];\n      return this.createPolygon(shell, null)\n    }\n  } else if (arguments.length === 2) {\n    var shell$1 = arguments[0];\n    var holes = arguments[1];\n    return new Polygon(shell$1, holes, this)\n  }\n};\nGeometryFactory.prototype.getSRID = function getSRID () {\n  return this._SRID\n};\nGeometryFactory.prototype.createGeometryCollection = function createGeometryCollection () {\n  if (arguments.length === 0) {\n    return new GeometryCollection(null, this)\n  } else if (arguments.length === 1) {\n    var geometries = arguments[0];\n    return new GeometryCollection(geometries, this)\n  }\n};\nGeometryFactory.prototype.createGeometry = function createGeometry (g) {\n  var editor = new GeometryEditor(this);\n  return editor.edit(g, {\n    edit: function () {\n      if (arguments.length === 2) {\n        var coordSeq = arguments[0];\n        // const geometry = arguments[1]\n        return this._coordinateSequenceFactory.create(coordSeq)\n      }\n    }\n  })\n};\nGeometryFactory.prototype.getPrecisionModel = function getPrecisionModel () {\n  return this._precisionModel\n};\nGeometryFactory.prototype.createLinearRing = function createLinearRing () {\n  if (arguments.length === 0) {\n    return this.createLinearRing(this.getCoordinateSequenceFactory().create([]))\n  } else if (arguments.length === 1) {\n    if (arguments[0] instanceof Array) {\n      var coordinates = arguments[0];\n      return this.createLinearRing(coordinates !== null ? this.getCoordinateSequenceFactory().create(coordinates) : null)\n    } else if (hasInterface(arguments[0], CoordinateSequence)) {\n      var coordinates$1 = arguments[0];\n      return new LinearRing(coordinates$1, this)\n    }\n  }\n};\nGeometryFactory.prototype.createMultiPolygon = function createMultiPolygon () {\n  if (arguments.length === 0) {\n    return new MultiPolygon(null, this)\n  } else if (arguments.length === 1) {\n    var polygons = arguments[0];\n    return new MultiPolygon(polygons, this)\n  }\n};\nGeometryFactory.prototype.createMultiPoint = function createMultiPoint () {\n    var this$1 = this;\n\n  if (arguments.length === 0) {\n    return new MultiPoint(null, this)\n  } else if (arguments.length === 1) {\n    if (arguments[0] instanceof Array) {\n      var point = arguments[0];\n      return new MultiPoint(point, this)\n    } else if (arguments[0] instanceof Array) {\n      var coordinates = arguments[0];\n      return this.createMultiPoint(coordinates !== null ? this.getCoordinateSequenceFactory().create(coordinates) : null)\n    } else if (hasInterface(arguments[0], CoordinateSequence)) {\n      var coordinates$1 = arguments[0];\n      if (coordinates$1 === null) {\n        return this.createMultiPoint(new Array(0).fill(null))\n      }\n      var points = new Array(coordinates$1.size()).fill(null);\n      for (var i = 0; i < coordinates$1.size(); i++) {\n        var ptSeq = this$1.getCoordinateSequenceFactory().create(1, coordinates$1.getDimension());\n        CoordinateSequences.copy(coordinates$1, i, ptSeq, 0, 1);\n        points[i] = this$1.createPoint(ptSeq);\n      }\n      return this.createMultiPoint(points)\n    }\n  }\n};\nGeometryFactory.prototype.interfaces_ = function interfaces_ () {\n  return [Serializable]\n};\nGeometryFactory.prototype.getClass = function getClass () {\n  return GeometryFactory\n};\nGeometryFactory.toMultiPolygonArray = function toMultiPolygonArray (multiPolygons) {\n  var multiPolygonArray = new Array(multiPolygons.size()).fill(null);\n  return multiPolygons.toArray(multiPolygonArray)\n};\nGeometryFactory.toGeometryArray = function toGeometryArray (geometries) {\n  if (geometries === null) { return null }\n  var geometryArray = new Array(geometries.size()).fill(null);\n  return geometries.toArray(geometryArray)\n};\nGeometryFactory.getDefaultCoordinateSequenceFactory = function getDefaultCoordinateSequenceFactory () {\n  return CoordinateArraySequenceFactory.instance()\n};\nGeometryFactory.toMultiLineStringArray = function toMultiLineStringArray (multiLineStrings) {\n  var multiLineStringArray = new Array(multiLineStrings.size()).fill(null);\n  return multiLineStrings.toArray(multiLineStringArray)\n};\nGeometryFactory.toLineStringArray = function toLineStringArray (lineStrings) {\n  var lineStringArray = new Array(lineStrings.size()).fill(null);\n  return lineStrings.toArray(lineStringArray)\n};\nGeometryFactory.toMultiPointArray = function toMultiPointArray (multiPoints) {\n  var multiPointArray = new Array(multiPoints.size()).fill(null);\n  return multiPoints.toArray(multiPointArray)\n};\nGeometryFactory.toLinearRingArray = function toLinearRingArray (linearRings) {\n  var linearRingArray = new Array(linearRings.size()).fill(null);\n  return linearRings.toArray(linearRingArray)\n};\nGeometryFactory.toPointArray = function toPointArray (points) {\n  var pointArray = new Array(points.size()).fill(null);\n  return points.toArray(pointArray)\n};\nGeometryFactory.toPolygonArray = function toPolygonArray (polygons) {\n  var polygonArray = new Array(polygons.size()).fill(null);\n  return polygons.toArray(polygonArray)\n};\nGeometryFactory.createPointFromInternalCoord = function createPointFromInternalCoord (coord, exemplar) {\n  exemplar.getPrecisionModel().makePrecise(coord);\n  return exemplar.getFactory().createPoint(coord)\n};\nstaticAccessors$2.serialVersionUID.get = function () { return -6820524753094095635 };\n\nObject.defineProperties( GeometryFactory, staticAccessors$2 );\n\nvar geometryTypes = ['Point', 'MultiPoint', 'LineString', 'MultiLineString', 'Polygon', 'MultiPolygon'];\n\n/**\n * Class for reading and writing Well-Known Text.Create a new parser for GeoJSON\n * NOTE: Adapted from OpenLayers 2.11 implementation.\n */\n\n/**\n * Create a new parser for GeoJSON\n *\n * @param {GeometryFactory} geometryFactory\n * @return An instance of GeoJsonParser.\n * @constructor\n * @private\n */\nvar GeoJSONParser = function GeoJSONParser (geometryFactory) {\n  this.geometryFactory = geometryFactory || new GeometryFactory();\n};\n/**\n * Deserialize a GeoJSON object and return the Geometry or Feature(Collection) with JSTS Geometries\n *\n * @param {}\n *        A GeoJSON object.\n * @return {} A Geometry instance or object representing a Feature(Collection) with Geometry instances.\n * @private\n */\nGeoJSONParser.prototype.read = function read (json) {\n  var obj;\n  if (typeof json === 'string') {\n    obj = JSON.parse(json);\n  } else {\n    obj = json;\n  }\n\n  var type = obj.type;\n\n  if (!parse[type]) {\n    throw new Error('Unknown GeoJSON type: ' + obj.type)\n  }\n\n  if (geometryTypes.indexOf(type) !== -1) {\n    return parse[type].apply(this, [obj.coordinates])\n  } else if (type === 'GeometryCollection') {\n    return parse[type].apply(this, [obj.geometries])\n  }\n\n  // feature or feature collection\n  return parse[type].apply(this, [obj])\n};\n\n/**\n * Serialize a Geometry object into GeoJSON\n *\n * @param {Geometry}\n *        geometry A Geometry or array of Geometries.\n * @return {Object} A GeoJSON object represting the input Geometry/Geometries.\n * @private\n */\nGeoJSONParser.prototype.write = function write (geometry) {\n  var type = geometry.getGeometryType();\n\n  if (!extract[type]) {\n    throw new Error('Geometry is not supported')\n  }\n\n  return extract[type].apply(this, [geometry])\n};\n\nvar parse = {\n  /**\n   * Parse a GeoJSON Feature object\n   *\n   * @param {Object}\n   *          obj Object to parse.\n   *\n   * @return {Object} Feature with geometry/bbox converted to JSTS Geometries.\n   */\n  Feature: function (obj) {\n    var feature = {};\n\n    // copy features\n    for (var key in obj) {\n      feature[key] = obj[key];\n    }\n\n    // parse geometry\n    if (obj.geometry) {\n      var type = obj.geometry.type;\n      if (!parse[type]) {\n        throw new Error('Unknown GeoJSON type: ' + obj.type)\n      }\n      feature.geometry = this.read(obj.geometry);\n    }\n\n    // bbox\n    if (obj.bbox) {\n      feature.bbox = parse.bbox.apply(this, [obj.bbox]);\n    }\n\n    return feature\n  },\n\n  /**\n   * Parse a GeoJSON FeatureCollection object\n   *\n   * @param {Object}\n   *          obj Object to parse.\n   *\n   * @return {Object} FeatureCollection with geometry/bbox converted to JSTS Geometries.\n   */\n  FeatureCollection: function (obj) {\n    var this$1 = this;\n\n    var featureCollection = {};\n\n    if (obj.features) {\n      featureCollection.features = [];\n\n      for (var i = 0; i < obj.features.length; ++i) {\n        featureCollection.features.push(this$1.read(obj.features[i]));\n      }\n    }\n\n    if (obj.bbox) {\n      featureCollection.bbox = this.parse.bbox.apply(this, [obj.bbox]);\n    }\n\n    return featureCollection\n  },\n\n  /**\n   * Convert the ordinates in an array to an array of Coordinates\n   *\n   * @param {Array}\n   *          array Array with {Number}s.\n   *\n   * @return {Array} Array with Coordinates.\n   */\n  coordinates: function (array) {\n    var coordinates = [];\n    for (var i = 0; i < array.length; ++i) {\n      var sub = array[i];\n      coordinates.push(new Coordinate(sub[0], sub[1]));\n    }\n    return coordinates\n  },\n\n  /**\n   * Convert the bbox to a LinearRing\n   *\n   * @param {Array}\n   *          array Array with [xMin, yMin, xMax, yMax].\n   *\n   * @return {Array} Array with Coordinates.\n   */\n  bbox: function (array) {\n    return this.geometryFactory.createLinearRing([\n      new Coordinate(array[0], array[1]),\n      new Coordinate(array[2], array[1]),\n      new Coordinate(array[2], array[3]),\n      new Coordinate(array[0], array[3]),\n      new Coordinate(array[0], array[1])\n    ])\n  },\n\n  /**\n   * Convert an Array with ordinates to a Point\n   *\n   * @param {Array}\n   *          array Array with ordinates.\n   *\n   * @return {Point} Point.\n   */\n  Point: function (array) {\n    var coordinate = new Coordinate(array[0], array[1]);\n    return this.geometryFactory.createPoint(coordinate)\n  },\n\n  /**\n   * Convert an Array with coordinates to a MultiPoint\n   *\n   * @param {Array}\n   *          array Array with coordinates.\n   *\n   * @return {MultiPoint} MultiPoint.\n   */\n  MultiPoint: function (array) {\n    var this$1 = this;\n\n    var points = [];\n    for (var i = 0; i < array.length; ++i) {\n      points.push(parse.Point.apply(this$1, [array[i]]));\n    }\n    return this.geometryFactory.createMultiPoint(points)\n  },\n\n  /**\n   * Convert an Array with coordinates to a LineString\n   *\n   * @param {Array}\n   *          array Array with coordinates.\n   *\n   * @return {LineString} LineString.\n   */\n  LineString: function (array) {\n    var coordinates = parse.coordinates.apply(this, [array]);\n    return this.geometryFactory.createLineString(coordinates)\n  },\n\n  /**\n   * Convert an Array with coordinates to a MultiLineString\n   *\n   * @param {Array}\n   *          array Array with coordinates.\n   *\n   * @return {MultiLineString} MultiLineString.\n   */\n  MultiLineString: function (array) {\n    var this$1 = this;\n\n    var lineStrings = [];\n    for (var i = 0; i < array.length; ++i) {\n      lineStrings.push(parse.LineString.apply(this$1, [array[i]]));\n    }\n    return this.geometryFactory.createMultiLineString(lineStrings)\n  },\n\n  /**\n   * Convert an Array to a Polygon\n   *\n   * @param {Array}\n   *          array Array with shell and holes.\n   *\n   * @return {Polygon} Polygon.\n   */\n  Polygon: function (array) {\n    var this$1 = this;\n\n    var shellCoordinates = parse.coordinates.apply(this, [array[0]]);\n    var shell = this.geometryFactory.createLinearRing(shellCoordinates);\n    var holes = [];\n    for (var i = 1; i < array.length; ++i) {\n      var hole = array[i];\n      var coordinates = parse.coordinates.apply(this$1, [hole]);\n      var linearRing = this$1.geometryFactory.createLinearRing(coordinates);\n      holes.push(linearRing);\n    }\n    return this.geometryFactory.createPolygon(shell, holes)\n  },\n\n  /**\n   * Convert an Array to a MultiPolygon\n   *\n   * @param {Array}\n   *          array Array of arrays with shell and rings.\n   *\n   * @return {MultiPolygon} MultiPolygon.\n   */\n  MultiPolygon: function (array) {\n    var this$1 = this;\n\n    var polygons = [];\n    for (var i = 0; i < array.length; ++i) {\n      var polygon = array[i];\n      polygons.push(parse.Polygon.apply(this$1, [polygon]));\n    }\n    return this.geometryFactory.createMultiPolygon(polygons)\n  },\n\n  /**\n   * Convert an Array to a GeometryCollection\n   *\n   * @param {Array}\n   *          array Array of GeoJSON geometries.\n   *\n   * @return {GeometryCollection} GeometryCollection.\n   */\n  GeometryCollection: function (array) {\n    var this$1 = this;\n\n    var geometries = [];\n    for (var i = 0; i < array.length; ++i) {\n      var geometry = array[i];\n      geometries.push(this$1.read(geometry));\n    }\n    return this.geometryFactory.createGeometryCollection(geometries)\n  }\n};\n\nvar extract = {\n  /**\n   * Convert a Coordinate to an Array\n   *\n   * @param {Coordinate}\n   *          coordinate Coordinate to convert.\n   *\n   * @return {Array} Array of ordinates.\n   */\n  coordinate: function (coordinate) {\n    return [coordinate.x, coordinate.y]\n  },\n\n  /**\n   * Convert a Point to a GeoJSON object\n   *\n   * @param {Point}\n   *          point Point to convert.\n   *\n   * @return {Array} Array of 2 ordinates (paired to a coordinate).\n   */\n  Point: function (point) {\n    var array = extract.coordinate.apply(this, [point.getCoordinate()]);\n    return {\n      type: 'Point',\n      coordinates: array\n    }\n  },\n\n  /**\n   * Convert a MultiPoint to a GeoJSON object\n   *\n   * @param {MultiPoint}\n   *          multipoint MultiPoint to convert.\n   *\n   * @return {Array} Array of coordinates.\n   */\n  MultiPoint: function (multipoint) {\n    var this$1 = this;\n\n    var array = [];\n    for (var i = 0; i < multipoint._geometries.length; ++i) {\n      var point = multipoint._geometries[i];\n      var geoJson = extract.Point.apply(this$1, [point]);\n      array.push(geoJson.coordinates);\n    }\n    return {\n      type: 'MultiPoint',\n      coordinates: array\n    }\n  },\n\n  /**\n   * Convert a LineString to a GeoJSON object\n   *\n   * @param {LineString}\n   *          linestring LineString to convert.\n   *\n   * @return {Array} Array of coordinates.\n   */\n  LineString: function (linestring) {\n    var this$1 = this;\n\n    var array = [];\n    var coordinates = linestring.getCoordinates();\n    for (var i = 0; i < coordinates.length; ++i) {\n      var coordinate = coordinates[i];\n      array.push(extract.coordinate.apply(this$1, [coordinate]));\n    }\n    return {\n      type: 'LineString',\n      coordinates: array\n    }\n  },\n\n  /**\n   * Convert a MultiLineString to a GeoJSON object\n   *\n   * @param {MultiLineString}\n   *          multilinestring MultiLineString to convert.\n   *\n   * @return {Array} Array of Array of coordinates.\n   */\n  MultiLineString: function (multilinestring) {\n    var this$1 = this;\n\n    var array = [];\n    for (var i = 0; i < multilinestring._geometries.length; ++i) {\n      var linestring = multilinestring._geometries[i];\n      var geoJson = extract.LineString.apply(this$1, [linestring]);\n      array.push(geoJson.coordinates);\n    }\n    return {\n      type: 'MultiLineString',\n      coordinates: array\n    }\n  },\n\n  /**\n   * Convert a Polygon to a GeoJSON object\n   *\n   * @param {Polygon}\n   *          polygon Polygon to convert.\n   *\n   * @return {Array} Array with shell, holes.\n   */\n  Polygon: function (polygon) {\n    var this$1 = this;\n\n    var array = [];\n    var shellGeoJson = extract.LineString.apply(this, [polygon._shell]);\n    array.push(shellGeoJson.coordinates);\n    for (var i = 0; i < polygon._holes.length; ++i) {\n      var hole = polygon._holes[i];\n      var holeGeoJson = extract.LineString.apply(this$1, [hole]);\n      array.push(holeGeoJson.coordinates);\n    }\n    return {\n      type: 'Polygon',\n      coordinates: array\n    }\n  },\n\n  /**\n   * Convert a MultiPolygon to a GeoJSON object\n   *\n   * @param {MultiPolygon}\n   *          multipolygon MultiPolygon to convert.\n   *\n   * @return {Array} Array of polygons.\n   */\n  MultiPolygon: function (multipolygon) {\n    var this$1 = this;\n\n    var array = [];\n    for (var i = 0; i < multipolygon._geometries.length; ++i) {\n      var polygon = multipolygon._geometries[i];\n      var geoJson = extract.Polygon.apply(this$1, [polygon]);\n      array.push(geoJson.coordinates);\n    }\n    return {\n      type: 'MultiPolygon',\n      coordinates: array\n    }\n  },\n\n  /**\n   * Convert a GeometryCollection to a GeoJSON object\n   *\n   * @param {GeometryCollection}\n   *          collection GeometryCollection to convert.\n   *\n   * @return {Array} Array of geometries.\n   */\n  GeometryCollection: function (collection) {\n    var this$1 = this;\n\n    var array = [];\n    for (var i = 0; i < collection._geometries.length; ++i) {\n      var geometry = collection._geometries[i];\n      var type = geometry.getGeometryType();\n      array.push(extract[type].apply(this$1, [geometry]));\n    }\n    return {\n      type: 'GeometryCollection',\n      geometries: array\n    }\n  }\n};\n\n/**\n * Converts a geometry in GeoJSON to a {@link Geometry}.\n */\n\n/**\n * A <code>GeoJSONReader</code> is parameterized by a <code>GeometryFactory</code>,\n * to allow it to create <code>Geometry</code> objects of the appropriate\n * implementation. In particular, the <code>GeometryFactory</code> determines\n * the <code>PrecisionModel</code> and <code>SRID</code> that is used.\n *\n * @param {GeometryFactory} geometryFactory\n * @constructor\n */\nvar GeoJSONReader = function GeoJSONReader (geometryFactory) {\n  this.geometryFactory = geometryFactory || new GeometryFactory();\n  this.precisionModel = this.geometryFactory.getPrecisionModel();\n  this.parser = new GeoJSONParser(this.geometryFactory);\n};\n/**\n * Reads a GeoJSON representation of a {@link Geometry}\n *\n * Will also parse GeoJSON Features/FeatureCollections as custom objects.\n *\n * @param {Object|String} geoJson a GeoJSON Object or String.\n * @return {Geometry|Object} a <code>Geometry or Feature/FeatureCollection representation.</code>\n * @memberof GeoJSONReader\n */\nGeoJSONReader.prototype.read = function read (geoJson) {\n  var geometry = this.parser.read(geoJson);\n\n  if (this.precisionModel.getType() === PrecisionModel.FIXED) {\n    this.reducePrecision(geometry);\n  }\n\n  return geometry\n};\n\n// NOTE: this is a hack\nGeoJSONReader.prototype.reducePrecision = function reducePrecision (geometry) {\n    var this$1 = this;\n\n  var i, len;\n\n  if (geometry.coordinate) {\n    this.precisionModel.makePrecise(geometry.coordinate);\n  } else if (geometry.points) {\n    for (i = 0, len = geometry.points.length; i < len; i++) {\n      this$1.precisionModel.makePrecise(geometry.points[i]);\n    }\n  } else if (geometry.geometries) {\n    for (i = 0, len = geometry.geometries.length; i < len; i++) {\n      this$1.reducePrecision(geometry.geometries[i]);\n    }\n  }\n};\n\n/**\n * @module GeoJSONWriter\n */\n\n/**\n * Writes the GeoJSON representation of a {@link Geometry}. The\n * The GeoJSON format is defined <A\n * HREF=\"http://geojson.org/geojson-spec.html\">here</A>.\n */\n\n/**\n * The <code>GeoJSONWriter</code> outputs coordinates rounded to the precision\n * model. Only the maximum number of decimal places necessary to represent the\n * ordinates to the required precision will be output.\n *\n * @param {GeometryFactory} geometryFactory\n * @constructor\n */\nvar GeoJSONWriter = function GeoJSONWriter () {\n  this.parser = new GeoJSONParser(this.geometryFactory);\n};\n/**\n * Converts a <code>Geometry</code> to its GeoJSON representation.\n *\n * @param {Geometry}\n *        geometry a <code>Geometry</code> to process.\n * @return {Object} The GeoJSON representation of the Geometry.\n * @memberof GeoJSONWriter\n */\nGeoJSONWriter.prototype.write = function write (geometry) {\n  return this.parser.write(geometry)\n};\n\n/* eslint-disable no-undef */\n\n// io\n\nvar Position = function Position () {};\n\nvar staticAccessors$20 = { ON: { configurable: true },LEFT: { configurable: true },RIGHT: { configurable: true } };\n\nPosition.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nPosition.prototype.getClass = function getClass () {\n  return Position\n};\nPosition.opposite = function opposite (position) {\n  if (position === Position.LEFT) { return Position.RIGHT }\n  if (position === Position.RIGHT) { return Position.LEFT }\n  return position\n};\nstaticAccessors$20.ON.get = function () { return 0 };\nstaticAccessors$20.LEFT.get = function () { return 1 };\nstaticAccessors$20.RIGHT.get = function () { return 2 };\n\nObject.defineProperties( Position, staticAccessors$20 );\n\n/**\n * @param {string=} message Optional message\n * @extends {Error}\n * @constructor\n * @private\n */\nfunction EmptyStackException (message) {\n  this.message = message || '';\n}\nEmptyStackException.prototype = new Error();\n\n/**\n * @type {string}\n */\nEmptyStackException.prototype.name = 'EmptyStackException';\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/Stack.html\n *\n * @extends {List}\n * @constructor\n * @private\n */\nfunction Stack () {\n  /**\n   * @type {Array}\n   * @private\n   */\n  this.array_ = [];\n}\nStack.prototype = new List();\n\n/**\n * @override\n */\nStack.prototype.add = function (e) {\n  this.array_.push(e);\n  return true\n};\n\n/**\n * @override\n */\nStack.prototype.get = function (index) {\n  if (index < 0 || index >= this.size()) {\n    throw new Error()\n  }\n\n  return this.array_[index]\n};\n\n/**\n * Pushes an item onto the top of this stack.\n * @param {Object} e\n * @return {Object}\n */\nStack.prototype.push = function (e) {\n  this.array_.push(e);\n  return e\n};\n\n/**\n * Pushes an item onto the top of this stack.\n * @param {Object} e\n * @return {Object}\n */\nStack.prototype.pop = function (e) {\n  if (this.array_.length === 0) {\n    throw new EmptyStackException()\n  }\n\n  return this.array_.pop()\n};\n\n/**\n * Looks at the object at the top of this stack without removing it from the\n * stack.\n * @return {Object}\n */\nStack.prototype.peek = function () {\n  if (this.array_.length === 0) {\n    throw new EmptyStackException()\n  }\n\n  return this.array_[this.array_.length - 1]\n};\n\n/**\n * Tests if this stack is empty.\n * @return {boolean} true if and only if this stack contains no items; false\n *         otherwise.\n */\nStack.prototype.empty = function () {\n  if (this.array_.length === 0) {\n    return true\n  } else {\n    return false\n  }\n};\n\n/**\n * @return {boolean}\n */\nStack.prototype.isEmpty = function () {\n  return this.empty()\n};\n\n/**\n * Returns the 1-based position where an object is on this stack. If the object\n * o occurs as an item in this stack, this method returns the distance from the\n * top of the stack of the occurrence nearest the top of the stack; the topmost\n * item on the stack is considered to be at distance 1. The equals method is\n * used to compare o to the items in this stack.\n *\n * NOTE: does not currently actually use equals. (=== is used)\n *\n * @param {Object} o\n * @return {number} the 1-based position from the top of the stack where the\n *         object is located; the return value -1 indicates that the object is\n *         not on the stack.\n */\nStack.prototype.search = function (o) {\n  return this.array_.indexOf(o)\n};\n\n/**\n * @return {number}\n * @export\n */\nStack.prototype.size = function () {\n  return this.array_.length\n};\n\n/**\n * @return {Array}\n */\nStack.prototype.toArray = function () {\n  var this$1 = this;\n\n  var array = [];\n\n  for (var i = 0, len = this.array_.length; i < len; i++) {\n    array.push(this$1.array_[i]);\n  }\n\n  return array\n};\n\nvar RightmostEdgeFinder = function RightmostEdgeFinder () {\n  this._minIndex = -1;\n  this._minCoord = null;\n  this._minDe = null;\n  this._orientedDe = null;\n};\nRightmostEdgeFinder.prototype.getCoordinate = function getCoordinate () {\n  return this._minCoord\n};\nRightmostEdgeFinder.prototype.getRightmostSide = function getRightmostSide (de, index) {\n  var side = this.getRightmostSideOfSegment(de, index);\n  if (side < 0) { side = this.getRightmostSideOfSegment(de, index - 1); }\n  if (side < 0) {\n    this._minCoord = null;\n    this.checkForRightmostCoordinate(de);\n  }\n  return side\n};\nRightmostEdgeFinder.prototype.findRightmostEdgeAtVertex = function findRightmostEdgeAtVertex () {\n  var pts = this._minDe.getEdge().getCoordinates();\n  Assert.isTrue(this._minIndex > 0 && this._minIndex < pts.length, 'rightmost point expected to be interior vertex of edge');\n  var pPrev = pts[this._minIndex - 1];\n  var pNext = pts[this._minIndex + 1];\n  var orientation = CGAlgorithms.computeOrientation(this._minCoord, pNext, pPrev);\n  var usePrev = false;\n  if (pPrev.y < this._minCoord.y && pNext.y < this._minCoord.y && orientation === CGAlgorithms.COUNTERCLOCKWISE) {\n    usePrev = true;\n  } else if (pPrev.y > this._minCoord.y && pNext.y > this._minCoord.y && orientation === CGAlgorithms.CLOCKWISE) {\n    usePrev = true;\n  }\n  if (usePrev) {\n    this._minIndex = this._minIndex - 1;\n  }\n};\nRightmostEdgeFinder.prototype.getRightmostSideOfSegment = function getRightmostSideOfSegment (de, i) {\n  var e = de.getEdge();\n  var coord = e.getCoordinates();\n  if (i < 0 || i + 1 >= coord.length) { return -1 }\n  if (coord[i].y === coord[i + 1].y) { return -1 }\n  var pos = Position.LEFT;\n  if (coord[i].y < coord[i + 1].y) { pos = Position.RIGHT; }\n  return pos\n};\nRightmostEdgeFinder.prototype.getEdge = function getEdge () {\n  return this._orientedDe\n};\nRightmostEdgeFinder.prototype.checkForRightmostCoordinate = function checkForRightmostCoordinate (de) {\n    var this$1 = this;\n\n  var coord = de.getEdge().getCoordinates();\n  for (var i = 0; i < coord.length - 1; i++) {\n    if (this$1._minCoord === null || coord[i].x > this$1._minCoord.x) {\n      this$1._minDe = de;\n      this$1._minIndex = i;\n      this$1._minCoord = coord[i];\n    }\n  }\n};\nRightmostEdgeFinder.prototype.findRightmostEdgeAtNode = function findRightmostEdgeAtNode () {\n  var node = this._minDe.getNode();\n  var star = node.getEdges();\n  this._minDe = star.getRightmostEdge();\n  if (!this._minDe.isForward()) {\n    this._minDe = this._minDe.getSym();\n    this._minIndex = this._minDe.getEdge().getCoordinates().length - 1;\n  }\n};\nRightmostEdgeFinder.prototype.findEdge = function findEdge (dirEdgeList) {\n    var this$1 = this;\n\n  for (var i = dirEdgeList.iterator(); i.hasNext();) {\n    var de = i.next();\n    if (!de.isForward()) { continue }\n    this$1.checkForRightmostCoordinate(de);\n  }\n  Assert.isTrue(this._minIndex !== 0 || this._minCoord.equals(this._minDe.getCoordinate()), 'inconsistency in rightmost processing');\n  if (this._minIndex === 0) {\n    this.findRightmostEdgeAtNode();\n  } else {\n    this.findRightmostEdgeAtVertex();\n  }\n  this._orientedDe = this._minDe;\n  var rightmostSide = this.getRightmostSide(this._minDe, this._minIndex);\n  if (rightmostSide === Position.LEFT) {\n    this._orientedDe = this._minDe.getSym();\n  }\n};\nRightmostEdgeFinder.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nRightmostEdgeFinder.prototype.getClass = function getClass () {\n  return RightmostEdgeFinder\n};\n\nvar TopologyException = (function (RuntimeException$$1) {\n  function TopologyException (msg, pt) {\n    RuntimeException$$1.call(this, TopologyException.msgWithCoord(msg, pt));\n    this.pt = pt ? new Coordinate(pt) : null;\n    this.name = 'TopologyException';\n  }\n\n  if ( RuntimeException$$1 ) TopologyException.__proto__ = RuntimeException$$1;\n  TopologyException.prototype = Object.create( RuntimeException$$1 && RuntimeException$$1.prototype );\n  TopologyException.prototype.constructor = TopologyException;\n  TopologyException.prototype.getCoordinate = function getCoordinate () {\n    return this.pt\n  };\n  TopologyException.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  TopologyException.prototype.getClass = function getClass () {\n    return TopologyException\n  };\n  TopologyException.msgWithCoord = function msgWithCoord (msg, pt) {\n    if (!pt) { return msg + ' [ ' + pt + ' ]' }\n    return msg\n  };\n\n  return TopologyException;\n}(RuntimeException));\n\nvar LinkedList = function LinkedList () {\n  this.array_ = [];\n};\nLinkedList.prototype.addLast = function addLast (e) {\n  this.array_.push(e);\n};\nLinkedList.prototype.removeFirst = function removeFirst () {\n  return this.array_.shift()\n};\nLinkedList.prototype.isEmpty = function isEmpty () {\n  return this.array_.length === 0\n};\n\nvar BufferSubgraph = function BufferSubgraph () {\n  this._finder = null;\n  this._dirEdgeList = new ArrayList();\n  this._nodes = new ArrayList();\n  this._rightMostCoord = null;\n  this._env = null;\n  this._finder = new RightmostEdgeFinder();\n};\nBufferSubgraph.prototype.clearVisitedEdges = function clearVisitedEdges () {\n  for (var it = this._dirEdgeList.iterator(); it.hasNext();) {\n    var de = it.next();\n    de.setVisited(false);\n  }\n};\nBufferSubgraph.prototype.getRightmostCoordinate = function getRightmostCoordinate () {\n  return this._rightMostCoord\n};\nBufferSubgraph.prototype.computeNodeDepth = function computeNodeDepth (n) {\n    var this$1 = this;\n\n  var startEdge = null;\n  for (var i = n.getEdges().iterator(); i.hasNext();) {\n    var de = i.next();\n    if (de.isVisited() || de.getSym().isVisited()) {\n      startEdge = de;\n      break\n    }\n  }\n  if (startEdge === null) { throw new TopologyException('unable to find edge to compute depths at ' + n.getCoordinate()) }\n  n.getEdges().computeDepths(startEdge);\n  for (var i$1 = n.getEdges().iterator(); i$1.hasNext();) {\n    var de$1 = i$1.next();\n    de$1.setVisited(true);\n    this$1.copySymDepths(de$1);\n  }\n};\nBufferSubgraph.prototype.computeDepth = function computeDepth (outsideDepth) {\n  this.clearVisitedEdges();\n  var de = this._finder.getEdge();\n  // const n = de.getNode()\n  // const label = de.getLabel()\n  de.setEdgeDepths(Position.RIGHT, outsideDepth);\n  this.copySymDepths(de);\n  this.computeDepths(de);\n};\nBufferSubgraph.prototype.create = function create (node) {\n  this.addReachable(node);\n  this._finder.findEdge(this._dirEdgeList);\n  this._rightMostCoord = this._finder.getCoordinate();\n};\nBufferSubgraph.prototype.findResultEdges = function findResultEdges () {\n  for (var it = this._dirEdgeList.iterator(); it.hasNext();) {\n    var de = it.next();\n    if (de.getDepth(Position.RIGHT) >= 1 && de.getDepth(Position.LEFT) <= 0 && !de.isInteriorAreaEdge()) {\n      de.setInResult(true);\n    }\n  }\n};\nBufferSubgraph.prototype.computeDepths = function computeDepths (startEdge) {\n    var this$1 = this;\n\n  var nodesVisited = new HashSet();\n  var nodeQueue = new LinkedList();\n  var startNode = startEdge.getNode();\n  nodeQueue.addLast(startNode);\n  nodesVisited.add(startNode);\n  startEdge.setVisited(true);\n  while (!nodeQueue.isEmpty()) {\n    var n = nodeQueue.removeFirst();\n    nodesVisited.add(n);\n    this$1.computeNodeDepth(n);\n    for (var i = n.getEdges().iterator(); i.hasNext();) {\n      var de = i.next();\n      var sym = de.getSym();\n      if (sym.isVisited()) { continue }\n      var adjNode = sym.getNode();\n      if (!nodesVisited.contains(adjNode)) {\n        nodeQueue.addLast(adjNode);\n        nodesVisited.add(adjNode);\n      }\n    }\n  }\n};\nBufferSubgraph.prototype.compareTo = function compareTo (o) {\n  var graph = o;\n  if (this._rightMostCoord.x < graph._rightMostCoord.x) {\n    return -1\n  }\n  if (this._rightMostCoord.x > graph._rightMostCoord.x) {\n    return 1\n  }\n  return 0\n};\nBufferSubgraph.prototype.getEnvelope = function getEnvelope () {\n  if (this._env === null) {\n    var edgeEnv = new Envelope();\n    for (var it = this._dirEdgeList.iterator(); it.hasNext();) {\n      var dirEdge = it.next();\n      var pts = dirEdge.getEdge().getCoordinates();\n      for (var i = 0; i < pts.length - 1; i++) {\n        edgeEnv.expandToInclude(pts[i]);\n      }\n    }\n    this._env = edgeEnv;\n  }\n  return this._env\n};\nBufferSubgraph.prototype.addReachable = function addReachable (startNode) {\n    var this$1 = this;\n\n  var nodeStack = new Stack();\n  nodeStack.add(startNode);\n  while (!nodeStack.empty()) {\n    var node = nodeStack.pop();\n    this$1.add(node, nodeStack);\n  }\n};\nBufferSubgraph.prototype.copySymDepths = function copySymDepths (de) {\n  var sym = de.getSym();\n  sym.setDepth(Position.LEFT, de.getDepth(Position.RIGHT));\n  sym.setDepth(Position.RIGHT, de.getDepth(Position.LEFT));\n};\nBufferSubgraph.prototype.add = function add (node, nodeStack) {\n    var this$1 = this;\n\n  node.setVisited(true);\n  this._nodes.add(node);\n  for (var i = node.getEdges().iterator(); i.hasNext();) {\n    var de = i.next();\n    this$1._dirEdgeList.add(de);\n    var sym = de.getSym();\n    var symNode = sym.getNode();\n    if (!symNode.isVisited()) { nodeStack.push(symNode); }\n  }\n};\nBufferSubgraph.prototype.getNodes = function getNodes () {\n  return this._nodes\n};\nBufferSubgraph.prototype.getDirectedEdges = function getDirectedEdges () {\n  return this._dirEdgeList\n};\nBufferSubgraph.prototype.interfaces_ = function interfaces_ () {\n  return [Comparable]\n};\nBufferSubgraph.prototype.getClass = function getClass () {\n  return BufferSubgraph\n};\n\nvar TopologyLocation = function TopologyLocation () {\n  var this$1 = this;\n\n  this.location = null;\n  if (arguments.length === 1) {\n    if (arguments[0] instanceof Array) {\n      var location = arguments[0];\n      this.init(location.length);\n    } else if (Number.isInteger(arguments[0])) {\n      var on = arguments[0];\n      this.init(1);\n      this.location[Position.ON] = on;\n    } else if (arguments[0] instanceof TopologyLocation) {\n      var gl = arguments[0];\n      this.init(gl.location.length);\n      if (gl !== null) {\n        for (var i = 0; i < this.location.length; i++) {\n          this$1.location[i] = gl.location[i];\n        }\n      }\n    }\n  } else if (arguments.length === 3) {\n    var on$1 = arguments[0];\n    var left = arguments[1];\n    var right = arguments[2];\n    this.init(3);\n    this.location[Position.ON] = on$1;\n    this.location[Position.LEFT] = left;\n    this.location[Position.RIGHT] = right;\n  }\n};\nTopologyLocation.prototype.setAllLocations = function setAllLocations (locValue) {\n    var this$1 = this;\n\n  for (var i = 0; i < this.location.length; i++) {\n    this$1.location[i] = locValue;\n  }\n};\nTopologyLocation.prototype.isNull = function isNull () {\n    var this$1 = this;\n\n  for (var i = 0; i < this.location.length; i++) {\n    if (this$1.location[i] !== Location.NONE) { return false }\n  }\n  return true\n};\nTopologyLocation.prototype.setAllLocationsIfNull = function setAllLocationsIfNull (locValue) {\n    var this$1 = this;\n\n  for (var i = 0; i < this.location.length; i++) {\n    if (this$1.location[i] === Location.NONE) { this$1.location[i] = locValue; }\n  }\n};\nTopologyLocation.prototype.isLine = function isLine () {\n  return this.location.length === 1\n};\nTopologyLocation.prototype.merge = function merge (gl) {\n    var this$1 = this;\n\n  if (gl.location.length > this.location.length) {\n    var newLoc = new Array(3).fill(null);\n    newLoc[Position.ON] = this.location[Position.ON];\n    newLoc[Position.LEFT] = Location.NONE;\n    newLoc[Position.RIGHT] = Location.NONE;\n    this.location = newLoc;\n  }\n  for (var i = 0; i < this.location.length; i++) {\n    if (this$1.location[i] === Location.NONE && i < gl.location.length) { this$1.location[i] = gl.location[i]; }\n  }\n};\nTopologyLocation.prototype.getLocations = function getLocations () {\n  return this.location\n};\nTopologyLocation.prototype.flip = function flip () {\n  if (this.location.length <= 1) { return null }\n  var temp = this.location[Position.LEFT];\n  this.location[Position.LEFT] = this.location[Position.RIGHT];\n  this.location[Position.RIGHT] = temp;\n};\nTopologyLocation.prototype.toString = function toString () {\n  var buf = new StringBuffer();\n  if (this.location.length > 1) { buf.append(Location.toLocationSymbol(this.location[Position.LEFT])); }\n  buf.append(Location.toLocationSymbol(this.location[Position.ON]));\n  if (this.location.length > 1) { buf.append(Location.toLocationSymbol(this.location[Position.RIGHT])); }\n  return buf.toString()\n};\nTopologyLocation.prototype.setLocations = function setLocations (on, left, right) {\n  this.location[Position.ON] = on;\n  this.location[Position.LEFT] = left;\n  this.location[Position.RIGHT] = right;\n};\nTopologyLocation.prototype.get = function get (posIndex) {\n  if (posIndex < this.location.length) { return this.location[posIndex] }\n  return Location.NONE\n};\nTopologyLocation.prototype.isArea = function isArea () {\n  return this.location.length > 1\n};\nTopologyLocation.prototype.isAnyNull = function isAnyNull () {\n    var this$1 = this;\n\n  for (var i = 0; i < this.location.length; i++) {\n    if (this$1.location[i] === Location.NONE) { return true }\n  }\n  return false\n};\nTopologyLocation.prototype.setLocation = function setLocation () {\n  if (arguments.length === 1) {\n    var locValue = arguments[0];\n    this.setLocation(Position.ON, locValue);\n  } else if (arguments.length === 2) {\n    var locIndex = arguments[0];\n    var locValue$1 = arguments[1];\n    this.location[locIndex] = locValue$1;\n  }\n};\nTopologyLocation.prototype.init = function init (size) {\n  this.location = new Array(size).fill(null);\n  this.setAllLocations(Location.NONE);\n};\nTopologyLocation.prototype.isEqualOnSide = function isEqualOnSide (le, locIndex) {\n  return this.location[locIndex] === le.location[locIndex]\n};\nTopologyLocation.prototype.allPositionsEqual = function allPositionsEqual (loc) {\n    var this$1 = this;\n\n  for (var i = 0; i < this.location.length; i++) {\n    if (this$1.location[i] !== loc) { return false }\n  }\n  return true\n};\nTopologyLocation.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nTopologyLocation.prototype.getClass = function getClass () {\n  return TopologyLocation\n};\n\nvar Label = function Label () {\n  this.elt = new Array(2).fill(null);\n  if (arguments.length === 1) {\n    if (Number.isInteger(arguments[0])) {\n      var onLoc = arguments[0];\n      this.elt[0] = new TopologyLocation(onLoc);\n      this.elt[1] = new TopologyLocation(onLoc);\n    } else if (arguments[0] instanceof Label) {\n      var lbl = arguments[0];\n      this.elt[0] = new TopologyLocation(lbl.elt[0]);\n      this.elt[1] = new TopologyLocation(lbl.elt[1]);\n    }\n  } else if (arguments.length === 2) {\n    var geomIndex = arguments[0];\n    var onLoc$1 = arguments[1];\n    this.elt[0] = new TopologyLocation(Location.NONE);\n    this.elt[1] = new TopologyLocation(Location.NONE);\n    this.elt[geomIndex].setLocation(onLoc$1);\n  } else if (arguments.length === 3) {\n    var onLoc$2 = arguments[0];\n    var leftLoc = arguments[1];\n    var rightLoc = arguments[2];\n    this.elt[0] = new TopologyLocation(onLoc$2, leftLoc, rightLoc);\n    this.elt[1] = new TopologyLocation(onLoc$2, leftLoc, rightLoc);\n  } else if (arguments.length === 4) {\n    var geomIndex$1 = arguments[0];\n    var onLoc$3 = arguments[1];\n    var leftLoc$1 = arguments[2];\n    var rightLoc$1 = arguments[3];\n    this.elt[0] = new TopologyLocation(Location.NONE, Location.NONE, Location.NONE);\n    this.elt[1] = new TopologyLocation(Location.NONE, Location.NONE, Location.NONE);\n    this.elt[geomIndex$1].setLocations(onLoc$3, leftLoc$1, rightLoc$1);\n  }\n};\nLabel.prototype.getGeometryCount = function getGeometryCount () {\n  var count = 0;\n  if (!this.elt[0].isNull()) { count++; }\n  if (!this.elt[1].isNull()) { count++; }\n  return count\n};\nLabel.prototype.setAllLocations = function setAllLocations (geomIndex, location) {\n  this.elt[geomIndex].setAllLocations(location);\n};\nLabel.prototype.isNull = function isNull (geomIndex) {\n  return this.elt[geomIndex].isNull()\n};\nLabel.prototype.setAllLocationsIfNull = function setAllLocationsIfNull () {\n  if (arguments.length === 1) {\n    var location = arguments[0];\n    this.setAllLocationsIfNull(0, location);\n    this.setAllLocationsIfNull(1, location);\n  } else if (arguments.length === 2) {\n    var geomIndex = arguments[0];\n    var location$1 = arguments[1];\n    this.elt[geomIndex].setAllLocationsIfNull(location$1);\n  }\n};\nLabel.prototype.isLine = function isLine (geomIndex) {\n  return this.elt[geomIndex].isLine()\n};\nLabel.prototype.merge = function merge (lbl) {\n    var this$1 = this;\n\n  for (var i = 0; i < 2; i++) {\n    if (this$1.elt[i] === null && lbl.elt[i] !== null) {\n      this$1.elt[i] = new TopologyLocation(lbl.elt[i]);\n    } else {\n      this$1.elt[i].merge(lbl.elt[i]);\n    }\n  }\n};\nLabel.prototype.flip = function flip () {\n  this.elt[0].flip();\n  this.elt[1].flip();\n};\nLabel.prototype.getLocation = function getLocation () {\n  if (arguments.length === 1) {\n    var geomIndex = arguments[0];\n    return this.elt[geomIndex].get(Position.ON)\n  } else if (arguments.length === 2) {\n    var geomIndex$1 = arguments[0];\n    var posIndex = arguments[1];\n    return this.elt[geomIndex$1].get(posIndex)\n  }\n};\nLabel.prototype.toString = function toString () {\n  var buf = new StringBuffer();\n  if (this.elt[0] !== null) {\n    buf.append('A:');\n    buf.append(this.elt[0].toString());\n  }\n  if (this.elt[1] !== null) {\n    buf.append(' B:');\n    buf.append(this.elt[1].toString());\n  }\n  return buf.toString()\n};\nLabel.prototype.isArea = function isArea () {\n  if (arguments.length === 0) {\n    return this.elt[0].isArea() || this.elt[1].isArea()\n  } else if (arguments.length === 1) {\n    var geomIndex = arguments[0];\n    return this.elt[geomIndex].isArea()\n  }\n};\nLabel.prototype.isAnyNull = function isAnyNull (geomIndex) {\n  return this.elt[geomIndex].isAnyNull()\n};\nLabel.prototype.setLocation = function setLocation () {\n  if (arguments.length === 2) {\n    var geomIndex = arguments[0];\n    var location = arguments[1];\n    this.elt[geomIndex].setLocation(Position.ON, location);\n  } else if (arguments.length === 3) {\n    var geomIndex$1 = arguments[0];\n    var posIndex = arguments[1];\n    var location$1 = arguments[2];\n    this.elt[geomIndex$1].setLocation(posIndex, location$1);\n  }\n};\nLabel.prototype.isEqualOnSide = function isEqualOnSide (lbl, side) {\n  return this.elt[0].isEqualOnSide(lbl.elt[0], side) && this.elt[1].isEqualOnSide(lbl.elt[1], side)\n};\nLabel.prototype.allPositionsEqual = function allPositionsEqual (geomIndex, loc) {\n  return this.elt[geomIndex].allPositionsEqual(loc)\n};\nLabel.prototype.toLine = function toLine (geomIndex) {\n  if (this.elt[geomIndex].isArea()) { this.elt[geomIndex] = new TopologyLocation(this.elt[geomIndex].location[0]); }\n};\nLabel.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nLabel.prototype.getClass = function getClass () {\n  return Label\n};\nLabel.toLineLabel = function toLineLabel (label) {\n  var lineLabel = new Label(Location.NONE);\n  for (var i = 0; i < 2; i++) {\n    lineLabel.setLocation(i, label.getLocation(i));\n  }\n  return lineLabel\n};\n\nvar EdgeRing = function EdgeRing () {\n  this._startDe = null;\n  this._maxNodeDegree = -1;\n  this._edges = new ArrayList();\n  this._pts = new ArrayList();\n  this._label = new Label(Location.NONE);\n  this._ring = null;\n  this._isHole = null;\n  this._shell = null;\n  this._holes = new ArrayList();\n  this._geometryFactory = null;\n  var start = arguments[0];\n  var geometryFactory = arguments[1];\n  this._geometryFactory = geometryFactory;\n  this.computePoints(start);\n  this.computeRing();\n};\nEdgeRing.prototype.computeRing = function computeRing () {\n    var this$1 = this;\n\n  if (this._ring !== null) { return null }\n  var coord = new Array(this._pts.size()).fill(null);\n  for (var i = 0; i < this._pts.size(); i++) {\n    coord[i] = this$1._pts.get(i);\n  }\n  this._ring = this._geometryFactory.createLinearRing(coord);\n  this._isHole = CGAlgorithms.isCCW(this._ring.getCoordinates());\n};\nEdgeRing.prototype.isIsolated = function isIsolated () {\n  return this._label.getGeometryCount() === 1\n};\nEdgeRing.prototype.computePoints = function computePoints (start) {\n    var this$1 = this;\n\n  this._startDe = start;\n  var de = start;\n  var isFirstEdge = true;\n  do {\n    if (de === null) { throw new TopologyException('Found null DirectedEdge') }\n    if (de.getEdgeRing() === this$1) { throw new TopologyException('Directed Edge visited twice during ring-building at ' + de.getCoordinate()) }\n    this$1._edges.add(de);\n    var label = de.getLabel();\n    Assert.isTrue(label.isArea());\n    this$1.mergeLabel(label);\n    this$1.addPoints(de.getEdge(), de.isForward(), isFirstEdge);\n    isFirstEdge = false;\n    this$1.setEdgeRing(de, this$1);\n    de = this$1.getNext(de);\n  } while (de !== this._startDe)\n};\nEdgeRing.prototype.getLinearRing = function getLinearRing () {\n  return this._ring\n};\nEdgeRing.prototype.getCoordinate = function getCoordinate (i) {\n  return this._pts.get(i)\n};\nEdgeRing.prototype.computeMaxNodeDegree = function computeMaxNodeDegree () {\n    var this$1 = this;\n\n  this._maxNodeDegree = 0;\n  var de = this._startDe;\n  do {\n    var node = de.getNode();\n    var degree = node.getEdges().getOutgoingDegree(this$1);\n    if (degree > this$1._maxNodeDegree) { this$1._maxNodeDegree = degree; }\n    de = this$1.getNext(de);\n  } while (de !== this._startDe)\n  this._maxNodeDegree *= 2;\n};\nEdgeRing.prototype.addPoints = function addPoints (edge, isForward, isFirstEdge) {\n    var this$1 = this;\n\n  var edgePts = edge.getCoordinates();\n  if (isForward) {\n    var startIndex = 1;\n    if (isFirstEdge) { startIndex = 0; }\n    for (var i = startIndex; i < edgePts.length; i++) {\n      this$1._pts.add(edgePts[i]);\n    }\n  } else {\n    var startIndex$1 = edgePts.length - 2;\n    if (isFirstEdge) { startIndex$1 = edgePts.length - 1; }\n    for (var i$1 = startIndex$1; i$1 >= 0; i$1--) {\n      this$1._pts.add(edgePts[i$1]);\n    }\n  }\n};\nEdgeRing.prototype.isHole = function isHole () {\n  return this._isHole\n};\nEdgeRing.prototype.setInResult = function setInResult () {\n  var de = this._startDe;\n  do {\n    de.getEdge().setInResult(true);\n    de = de.getNext();\n  } while (de !== this._startDe)\n};\nEdgeRing.prototype.containsPoint = function containsPoint (p) {\n  var shell = this.getLinearRing();\n  var env = shell.getEnvelopeInternal();\n  if (!env.contains(p)) { return false }\n  if (!CGAlgorithms.isPointInRing(p, shell.getCoordinates())) { return false }\n  for (var i = this._holes.iterator(); i.hasNext();) {\n    var hole = i.next();\n    if (hole.containsPoint(p)) { return false }\n  }\n  return true\n};\nEdgeRing.prototype.addHole = function addHole (ring) {\n  this._holes.add(ring);\n};\nEdgeRing.prototype.isShell = function isShell () {\n  return this._shell === null\n};\nEdgeRing.prototype.getLabel = function getLabel () {\n  return this._label\n};\nEdgeRing.prototype.getEdges = function getEdges () {\n  return this._edges\n};\nEdgeRing.prototype.getMaxNodeDegree = function getMaxNodeDegree () {\n  if (this._maxNodeDegree < 0) { this.computeMaxNodeDegree(); }\n  return this._maxNodeDegree\n};\nEdgeRing.prototype.getShell = function getShell () {\n  return this._shell\n};\nEdgeRing.prototype.mergeLabel = function mergeLabel () {\n  if (arguments.length === 1) {\n    var deLabel = arguments[0];\n    this.mergeLabel(deLabel, 0);\n    this.mergeLabel(deLabel, 1);\n  } else if (arguments.length === 2) {\n    var deLabel$1 = arguments[0];\n    var geomIndex = arguments[1];\n    var loc = deLabel$1.getLocation(geomIndex, Position.RIGHT);\n    if (loc === Location.NONE) { return null }\n    if (this._label.getLocation(geomIndex) === Location.NONE) {\n      this._label.setLocation(geomIndex, loc);\n      return null\n    }\n  }\n};\nEdgeRing.prototype.setShell = function setShell (shell) {\n  this._shell = shell;\n  if (shell !== null) { shell.addHole(this); }\n};\nEdgeRing.prototype.toPolygon = function toPolygon (geometryFactory) {\n    var this$1 = this;\n\n  var holeLR = new Array(this._holes.size()).fill(null);\n  for (var i = 0; i < this._holes.size(); i++) {\n    holeLR[i] = this$1._holes.get(i).getLinearRing();\n  }\n  var poly = geometryFactory.createPolygon(this.getLinearRing(), holeLR);\n  return poly\n};\nEdgeRing.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nEdgeRing.prototype.getClass = function getClass () {\n  return EdgeRing\n};\n\nvar MinimalEdgeRing = (function (EdgeRing$$1) {\n  function MinimalEdgeRing () {\n    var start = arguments[0];\n    var geometryFactory = arguments[1];\n    EdgeRing$$1.call(this, start, geometryFactory);\n  }\n\n  if ( EdgeRing$$1 ) MinimalEdgeRing.__proto__ = EdgeRing$$1;\n  MinimalEdgeRing.prototype = Object.create( EdgeRing$$1 && EdgeRing$$1.prototype );\n  MinimalEdgeRing.prototype.constructor = MinimalEdgeRing;\n  MinimalEdgeRing.prototype.setEdgeRing = function setEdgeRing (de, er) {\n    de.setMinEdgeRing(er);\n  };\n  MinimalEdgeRing.prototype.getNext = function getNext (de) {\n    return de.getNextMin()\n  };\n  MinimalEdgeRing.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  MinimalEdgeRing.prototype.getClass = function getClass () {\n    return MinimalEdgeRing\n  };\n\n  return MinimalEdgeRing;\n}(EdgeRing));\n\nvar MaximalEdgeRing = (function (EdgeRing$$1) {\n  function MaximalEdgeRing () {\n    var start = arguments[0];\n    var geometryFactory = arguments[1];\n    EdgeRing$$1.call(this, start, geometryFactory);\n  }\n\n  if ( EdgeRing$$1 ) MaximalEdgeRing.__proto__ = EdgeRing$$1;\n  MaximalEdgeRing.prototype = Object.create( EdgeRing$$1 && EdgeRing$$1.prototype );\n  MaximalEdgeRing.prototype.constructor = MaximalEdgeRing;\n  MaximalEdgeRing.prototype.buildMinimalRings = function buildMinimalRings () {\n    var this$1 = this;\n\n    var minEdgeRings = new ArrayList();\n    var de = this._startDe;\n    do {\n      if (de.getMinEdgeRing() === null) {\n        var minEr = new MinimalEdgeRing(de, this$1._geometryFactory);\n        minEdgeRings.add(minEr);\n      }\n      de = de.getNext();\n    } while (de !== this._startDe)\n    return minEdgeRings\n  };\n  MaximalEdgeRing.prototype.setEdgeRing = function setEdgeRing (de, er) {\n    de.setEdgeRing(er);\n  };\n  MaximalEdgeRing.prototype.linkDirectedEdgesForMinimalEdgeRings = function linkDirectedEdgesForMinimalEdgeRings () {\n    var this$1 = this;\n\n    var de = this._startDe;\n    do {\n      var node = de.getNode();\n      node.getEdges().linkMinimalDirectedEdges(this$1);\n      de = de.getNext();\n    } while (de !== this._startDe)\n  };\n  MaximalEdgeRing.prototype.getNext = function getNext (de) {\n    return de.getNext()\n  };\n  MaximalEdgeRing.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  MaximalEdgeRing.prototype.getClass = function getClass () {\n    return MaximalEdgeRing\n  };\n\n  return MaximalEdgeRing;\n}(EdgeRing));\n\nvar GraphComponent = function GraphComponent () {\n  this._label = null;\n  this._isInResult = false;\n  this._isCovered = false;\n  this._isCoveredSet = false;\n  this._isVisited = false;\n  if (arguments.length === 0) {} else if (arguments.length === 1) {\n    var label = arguments[0];\n    this._label = label;\n  }\n};\nGraphComponent.prototype.setVisited = function setVisited (isVisited) {\n  this._isVisited = isVisited;\n};\nGraphComponent.prototype.setInResult = function setInResult (isInResult) {\n  this._isInResult = isInResult;\n};\nGraphComponent.prototype.isCovered = function isCovered () {\n  return this._isCovered\n};\nGraphComponent.prototype.isCoveredSet = function isCoveredSet () {\n  return this._isCoveredSet\n};\nGraphComponent.prototype.setLabel = function setLabel (label) {\n  this._label = label;\n};\nGraphComponent.prototype.getLabel = function getLabel () {\n  return this._label\n};\nGraphComponent.prototype.setCovered = function setCovered (isCovered) {\n  this._isCovered = isCovered;\n  this._isCoveredSet = true;\n};\nGraphComponent.prototype.updateIM = function updateIM (im) {\n  Assert.isTrue(this._label.getGeometryCount() >= 2, 'found partial label');\n  this.computeIM(im);\n};\nGraphComponent.prototype.isInResult = function isInResult () {\n  return this._isInResult\n};\nGraphComponent.prototype.isVisited = function isVisited () {\n  return this._isVisited\n};\nGraphComponent.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nGraphComponent.prototype.getClass = function getClass () {\n  return GraphComponent\n};\n\nvar Node = (function (GraphComponent$$1) {\n  function Node () {\n    GraphComponent$$1.call(this);\n    this._coord = null;\n    this._edges = null;\n    var coord = arguments[0];\n    var edges = arguments[1];\n    this._coord = coord;\n    this._edges = edges;\n    this._label = new Label(0, Location.NONE);\n  }\n\n  if ( GraphComponent$$1 ) Node.__proto__ = GraphComponent$$1;\n  Node.prototype = Object.create( GraphComponent$$1 && GraphComponent$$1.prototype );\n  Node.prototype.constructor = Node;\n  Node.prototype.isIncidentEdgeInResult = function isIncidentEdgeInResult () {\n    for (var it = this.getEdges().getEdges().iterator(); it.hasNext();) {\n      var de = it.next();\n      if (de.getEdge().isInResult()) { return true }\n    }\n    return false\n  };\n  Node.prototype.isIsolated = function isIsolated () {\n    return this._label.getGeometryCount() === 1\n  };\n  Node.prototype.getCoordinate = function getCoordinate () {\n    return this._coord\n  };\n  Node.prototype.print = function print (out) {\n    out.println('node ' + this._coord + ' lbl: ' + this._label);\n  };\n  Node.prototype.computeIM = function computeIM (im) {};\n  Node.prototype.computeMergedLocation = function computeMergedLocation (label2, eltIndex) {\n    var loc = Location.NONE;\n    loc = this._label.getLocation(eltIndex);\n    if (!label2.isNull(eltIndex)) {\n      var nLoc = label2.getLocation(eltIndex);\n      if (loc !== Location.BOUNDARY) { loc = nLoc; }\n    }\n    return loc\n  };\n  Node.prototype.setLabel = function setLabel () {\n    if (arguments.length === 2) {\n      var argIndex = arguments[0];\n      var onLocation = arguments[1];\n      if (this._label === null) {\n        this._label = new Label(argIndex, onLocation);\n      } else { this._label.setLocation(argIndex, onLocation); }\n    } else { return GraphComponent$$1.prototype.setLabel.apply(this, arguments) }\n  };\n  Node.prototype.getEdges = function getEdges () {\n    return this._edges\n  };\n  Node.prototype.mergeLabel = function mergeLabel () {\n    var this$1 = this;\n\n    if (arguments[0] instanceof Node) {\n      var n = arguments[0];\n      this.mergeLabel(n._label);\n    } else if (arguments[0] instanceof Label) {\n      var label2 = arguments[0];\n      for (var i = 0; i < 2; i++) {\n        var loc = this$1.computeMergedLocation(label2, i);\n        var thisLoc = this$1._label.getLocation(i);\n        if (thisLoc === Location.NONE) { this$1._label.setLocation(i, loc); }\n      }\n    }\n  };\n  Node.prototype.add = function add (e) {\n    this._edges.insert(e);\n    e.setNode(this);\n  };\n  Node.prototype.setLabelBoundary = function setLabelBoundary (argIndex) {\n    if (this._label === null) { return null }\n    var loc = Location.NONE;\n    if (this._label !== null) { loc = this._label.getLocation(argIndex); }\n    var newLoc = null;\n    switch (loc) {\n      case Location.BOUNDARY:\n        newLoc = Location.INTERIOR;\n        break\n      case Location.INTERIOR:\n        newLoc = Location.BOUNDARY;\n        break\n      default:\n        newLoc = Location.BOUNDARY;\n        break\n    }\n    this._label.setLocation(argIndex, newLoc);\n  };\n  Node.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  Node.prototype.getClass = function getClass () {\n    return Node\n  };\n\n  return Node;\n}(GraphComponent));\n\nvar NodeMap = function NodeMap () {\n  this.nodeMap = new TreeMap();\n  this.nodeFact = null;\n  var nodeFact = arguments[0];\n  this.nodeFact = nodeFact;\n};\nNodeMap.prototype.find = function find (coord) {\n  return this.nodeMap.get(coord)\n};\nNodeMap.prototype.addNode = function addNode () {\n  if (arguments[0] instanceof Coordinate) {\n    var coord = arguments[0];\n    var node = this.nodeMap.get(coord);\n    if (node === null) {\n      node = this.nodeFact.createNode(coord);\n      this.nodeMap.put(coord, node);\n    }\n    return node\n  } else if (arguments[0] instanceof Node) {\n    var n = arguments[0];\n    var node$1 = this.nodeMap.get(n.getCoordinate());\n    if (node$1 === null) {\n      this.nodeMap.put(n.getCoordinate(), n);\n      return n\n    }\n    node$1.mergeLabel(n);\n    return node$1\n  }\n};\nNodeMap.prototype.print = function print (out) {\n  for (var it = this.iterator(); it.hasNext();) {\n    var n = it.next();\n    n.print(out);\n  }\n};\nNodeMap.prototype.iterator = function iterator () {\n  return this.nodeMap.values().iterator()\n};\nNodeMap.prototype.values = function values () {\n  return this.nodeMap.values()\n};\nNodeMap.prototype.getBoundaryNodes = function getBoundaryNodes (geomIndex) {\n  var bdyNodes = new ArrayList();\n  for (var i = this.iterator(); i.hasNext();) {\n    var node = i.next();\n    if (node.getLabel().getLocation(geomIndex) === Location.BOUNDARY) { bdyNodes.add(node); }\n  }\n  return bdyNodes\n};\nNodeMap.prototype.add = function add (e) {\n  var p = e.getCoordinate();\n  var n = this.addNode(p);\n  n.add(e);\n};\nNodeMap.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nNodeMap.prototype.getClass = function getClass () {\n  return NodeMap\n};\n\nvar Quadrant = function Quadrant () {};\n\nvar staticAccessors$21 = { NE: { configurable: true },NW: { configurable: true },SW: { configurable: true },SE: { configurable: true } };\n\nQuadrant.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nQuadrant.prototype.getClass = function getClass () {\n  return Quadrant\n};\nQuadrant.isNorthern = function isNorthern (quad) {\n  return quad === Quadrant.NE || quad === Quadrant.NW\n};\nQuadrant.isOpposite = function isOpposite (quad1, quad2) {\n  if (quad1 === quad2) { return false }\n  var diff = (quad1 - quad2 + 4) % 4;\n  if (diff === 2) { return true }\n  return false\n};\nQuadrant.commonHalfPlane = function commonHalfPlane (quad1, quad2) {\n  if (quad1 === quad2) { return quad1 }\n  var diff = (quad1 - quad2 + 4) % 4;\n  if (diff === 2) { return -1 }\n  var min = quad1 < quad2 ? quad1 : quad2;\n  var max = quad1 > quad2 ? quad1 : quad2;\n  if (min === 0 && max === 3) { return 3 }\n  return min\n};\nQuadrant.isInHalfPlane = function isInHalfPlane (quad, halfPlane) {\n  if (halfPlane === Quadrant.SE) {\n    return quad === Quadrant.SE || quad === Quadrant.SW\n  }\n  return quad === halfPlane || quad === halfPlane + 1\n};\nQuadrant.quadrant = function quadrant () {\n  if (typeof arguments[0] === 'number' && typeof arguments[1] === 'number') {\n    var dx = arguments[0];\n    var dy = arguments[1];\n    if (dx === 0.0 && dy === 0.0) { throw new IllegalArgumentException('Cannot compute the quadrant for point ( ' + dx + ', ' + dy + ' )') }\n    if (dx >= 0.0) {\n      if (dy >= 0.0) { return Quadrant.NE; } else { return Quadrant.SE }\n    } else {\n      if (dy >= 0.0) { return Quadrant.NW; } else { return Quadrant.SW }\n    }\n  } else if (arguments[0] instanceof Coordinate && arguments[1] instanceof Coordinate) {\n    var p0 = arguments[0];\n    var p1 = arguments[1];\n    if (p1.x === p0.x && p1.y === p0.y) { throw new IllegalArgumentException('Cannot compute the quadrant for two identical points ' + p0) }\n    if (p1.x >= p0.x) {\n      if (p1.y >= p0.y) { return Quadrant.NE; } else { return Quadrant.SE }\n    } else {\n      if (p1.y >= p0.y) { return Quadrant.NW; } else { return Quadrant.SW }\n    }\n  }\n};\nstaticAccessors$21.NE.get = function () { return 0 };\nstaticAccessors$21.NW.get = function () { return 1 };\nstaticAccessors$21.SW.get = function () { return 2 };\nstaticAccessors$21.SE.get = function () { return 3 };\n\nObject.defineProperties( Quadrant, staticAccessors$21 );\n\nvar EdgeEnd = function EdgeEnd () {\n  this._edge = null;\n  this._label = null;\n  this._node = null;\n  this._p0 = null;\n  this._p1 = null;\n  this._dx = null;\n  this._dy = null;\n  this._quadrant = null;\n  if (arguments.length === 1) {\n    var edge = arguments[0];\n    this._edge = edge;\n  } else if (arguments.length === 3) {\n    var edge$1 = arguments[0];\n    var p0 = arguments[1];\n    var p1 = arguments[2];\n    var label = null;\n    this._edge = edge$1;\n    this.init(p0, p1);\n    this._label = label;\n  } else if (arguments.length === 4) {\n    var edge$2 = arguments[0];\n    var p0$1 = arguments[1];\n    var p1$1 = arguments[2];\n    var label$1 = arguments[3];\n    this._edge = edge$2;\n    this.init(p0$1, p1$1);\n    this._label = label$1;\n  }\n};\nEdgeEnd.prototype.compareDirection = function compareDirection (e) {\n  if (this._dx === e._dx && this._dy === e._dy) { return 0 }\n  if (this._quadrant > e._quadrant) { return 1 }\n  if (this._quadrant < e._quadrant) { return -1 }\n  return CGAlgorithms.computeOrientation(e._p0, e._p1, this._p1)\n};\nEdgeEnd.prototype.getDy = function getDy () {\n  return this._dy\n};\nEdgeEnd.prototype.getCoordinate = function getCoordinate () {\n  return this._p0\n};\nEdgeEnd.prototype.setNode = function setNode (node) {\n  this._node = node;\n};\nEdgeEnd.prototype.print = function print (out) {\n  var angle = Math.atan2(this._dy, this._dx);\n  var className = this.getClass().getName();\n  var lastDotPos = className.lastIndexOf('.');\n  var name = className.substring(lastDotPos + 1);\n  out.print('  ' + name + ': ' + this._p0 + ' - ' + this._p1 + ' ' + this._quadrant + ':' + angle + '   ' + this._label);\n};\nEdgeEnd.prototype.compareTo = function compareTo (obj) {\n  var e = obj;\n  return this.compareDirection(e)\n};\nEdgeEnd.prototype.getDirectedCoordinate = function getDirectedCoordinate () {\n  return this._p1\n};\nEdgeEnd.prototype.getDx = function getDx () {\n  return this._dx\n};\nEdgeEnd.prototype.getLabel = function getLabel () {\n  return this._label\n};\nEdgeEnd.prototype.getEdge = function getEdge () {\n  return this._edge\n};\nEdgeEnd.prototype.getQuadrant = function getQuadrant () {\n  return this._quadrant\n};\nEdgeEnd.prototype.getNode = function getNode () {\n  return this._node\n};\nEdgeEnd.prototype.toString = function toString () {\n  var angle = Math.atan2(this._dy, this._dx);\n  var className = this.getClass().getName();\n  var lastDotPos = className.lastIndexOf('.');\n  var name = className.substring(lastDotPos + 1);\n  return '  ' + name + ': ' + this._p0 + ' - ' + this._p1 + ' ' + this._quadrant + ':' + angle + '   ' + this._label\n};\nEdgeEnd.prototype.computeLabel = function computeLabel (boundaryNodeRule) {};\nEdgeEnd.prototype.init = function init (p0, p1) {\n  this._p0 = p0;\n  this._p1 = p1;\n  this._dx = p1.x - p0.x;\n  this._dy = p1.y - p0.y;\n  this._quadrant = Quadrant.quadrant(this._dx, this._dy);\n  Assert.isTrue(!(this._dx === 0 && this._dy === 0), 'EdgeEnd with identical endpoints found');\n};\nEdgeEnd.prototype.interfaces_ = function interfaces_ () {\n  return [Comparable]\n};\nEdgeEnd.prototype.getClass = function getClass () {\n  return EdgeEnd\n};\n\nvar DirectedEdge = (function (EdgeEnd$$1) {\n  function DirectedEdge () {\n    var edge = arguments[0];\n    var isForward = arguments[1];\n    EdgeEnd$$1.call(this, edge);\n    this._isForward = null;\n    this._isInResult = false;\n    this._isVisited = false;\n    this._sym = null;\n    this._next = null;\n    this._nextMin = null;\n    this._edgeRing = null;\n    this._minEdgeRing = null;\n    this._depth = [0, -999, -999];\n    this._isForward = isForward;\n    if (isForward) {\n      this.init(edge.getCoordinate(0), edge.getCoordinate(1));\n    } else {\n      var n = edge.getNumPoints() - 1;\n      this.init(edge.getCoordinate(n), edge.getCoordinate(n - 1));\n    }\n    this.computeDirectedLabel();\n  }\n\n  if ( EdgeEnd$$1 ) DirectedEdge.__proto__ = EdgeEnd$$1;\n  DirectedEdge.prototype = Object.create( EdgeEnd$$1 && EdgeEnd$$1.prototype );\n  DirectedEdge.prototype.constructor = DirectedEdge;\n  DirectedEdge.prototype.getNextMin = function getNextMin () {\n    return this._nextMin\n  };\n  DirectedEdge.prototype.getDepth = function getDepth (position) {\n    return this._depth[position]\n  };\n  DirectedEdge.prototype.setVisited = function setVisited (isVisited) {\n    this._isVisited = isVisited;\n  };\n  DirectedEdge.prototype.computeDirectedLabel = function computeDirectedLabel () {\n    this._label = new Label(this._edge.getLabel());\n    if (!this._isForward) { this._label.flip(); }\n  };\n  DirectedEdge.prototype.getNext = function getNext () {\n    return this._next\n  };\n  DirectedEdge.prototype.setDepth = function setDepth (position, depthVal) {\n    if (this._depth[position] !== -999) {\n      if (this._depth[position] !== depthVal) { throw new TopologyException('assigned depths do not match', this.getCoordinate()) }\n    }\n    this._depth[position] = depthVal;\n  };\n  DirectedEdge.prototype.isInteriorAreaEdge = function isInteriorAreaEdge () {\n    var this$1 = this;\n\n    var isInteriorAreaEdge = true;\n    for (var i = 0; i < 2; i++) {\n      if (!(this$1._label.isArea(i) && this$1._label.getLocation(i, Position.LEFT) === Location.INTERIOR && this$1._label.getLocation(i, Position.RIGHT) === Location.INTERIOR)) {\n        isInteriorAreaEdge = false;\n      }\n    }\n    return isInteriorAreaEdge\n  };\n  DirectedEdge.prototype.setNextMin = function setNextMin (nextMin) {\n    this._nextMin = nextMin;\n  };\n  DirectedEdge.prototype.print = function print (out) {\n    EdgeEnd$$1.prototype.print.call(this, out);\n    out.print(' ' + this._depth[Position.LEFT] + '/' + this._depth[Position.RIGHT]);\n    out.print(' (' + this.getDepthDelta() + ')');\n    if (this._isInResult) { out.print(' inResult'); }\n  };\n  DirectedEdge.prototype.setMinEdgeRing = function setMinEdgeRing (minEdgeRing) {\n    this._minEdgeRing = minEdgeRing;\n  };\n  DirectedEdge.prototype.isLineEdge = function isLineEdge () {\n    var isLine = this._label.isLine(0) || this._label.isLine(1);\n    var isExteriorIfArea0 = !this._label.isArea(0) || this._label.allPositionsEqual(0, Location.EXTERIOR);\n    var isExteriorIfArea1 = !this._label.isArea(1) || this._label.allPositionsEqual(1, Location.EXTERIOR);\n    return isLine && isExteriorIfArea0 && isExteriorIfArea1\n  };\n  DirectedEdge.prototype.setEdgeRing = function setEdgeRing (edgeRing) {\n    this._edgeRing = edgeRing;\n  };\n  DirectedEdge.prototype.getMinEdgeRing = function getMinEdgeRing () {\n    return this._minEdgeRing\n  };\n  DirectedEdge.prototype.getDepthDelta = function getDepthDelta () {\n    var depthDelta = this._edge.getDepthDelta();\n    if (!this._isForward) { depthDelta = -depthDelta; }\n    return depthDelta\n  };\n  DirectedEdge.prototype.setInResult = function setInResult (isInResult) {\n    this._isInResult = isInResult;\n  };\n  DirectedEdge.prototype.getSym = function getSym () {\n    return this._sym\n  };\n  DirectedEdge.prototype.isForward = function isForward () {\n    return this._isForward\n  };\n  DirectedEdge.prototype.getEdge = function getEdge () {\n    return this._edge\n  };\n  DirectedEdge.prototype.printEdge = function printEdge (out) {\n    this.print(out);\n    out.print(' ');\n    if (this._isForward) { this._edge.print(out); } else { this._edge.printReverse(out); }\n  };\n  DirectedEdge.prototype.setSym = function setSym (de) {\n    this._sym = de;\n  };\n  DirectedEdge.prototype.setVisitedEdge = function setVisitedEdge (isVisited) {\n    this.setVisited(isVisited);\n    this._sym.setVisited(isVisited);\n  };\n  DirectedEdge.prototype.setEdgeDepths = function setEdgeDepths (position, depth) {\n    var depthDelta = this.getEdge().getDepthDelta();\n    if (!this._isForward) { depthDelta = -depthDelta; }\n    var directionFactor = 1;\n    if (position === Position.LEFT) { directionFactor = -1; }\n    var oppositePos = Position.opposite(position);\n    var delta = depthDelta * directionFactor;\n    var oppositeDepth = depth + delta;\n    this.setDepth(position, depth);\n    this.setDepth(oppositePos, oppositeDepth);\n  };\n  DirectedEdge.prototype.getEdgeRing = function getEdgeRing () {\n    return this._edgeRing\n  };\n  DirectedEdge.prototype.isInResult = function isInResult () {\n    return this._isInResult\n  };\n  DirectedEdge.prototype.setNext = function setNext (next) {\n    this._next = next;\n  };\n  DirectedEdge.prototype.isVisited = function isVisited () {\n    return this._isVisited\n  };\n  DirectedEdge.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  DirectedEdge.prototype.getClass = function getClass () {\n    return DirectedEdge\n  };\n  DirectedEdge.depthFactor = function depthFactor (currLocation, nextLocation) {\n    if (currLocation === Location.EXTERIOR && nextLocation === Location.INTERIOR) { return 1; } else if (currLocation === Location.INTERIOR && nextLocation === Location.EXTERIOR) { return -1 }\n    return 0\n  };\n\n  return DirectedEdge;\n}(EdgeEnd));\n\nvar NodeFactory = function NodeFactory () {};\n\nNodeFactory.prototype.createNode = function createNode (coord) {\n  return new Node(coord, null)\n};\nNodeFactory.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nNodeFactory.prototype.getClass = function getClass () {\n  return NodeFactory\n};\n\nvar PlanarGraph = function PlanarGraph () {\n  this._edges = new ArrayList();\n  this._nodes = null;\n  this._edgeEndList = new ArrayList();\n  if (arguments.length === 0) {\n    this._nodes = new NodeMap(new NodeFactory());\n  } else if (arguments.length === 1) {\n    var nodeFact = arguments[0];\n    this._nodes = new NodeMap(nodeFact);\n  }\n};\nPlanarGraph.prototype.printEdges = function printEdges (out) {\n    var this$1 = this;\n\n  out.println('Edges:');\n  for (var i = 0; i < this._edges.size(); i++) {\n    out.println('edge ' + i + ':');\n    var e = this$1._edges.get(i);\n    e.print(out);\n    e.eiList.print(out);\n  }\n};\nPlanarGraph.prototype.find = function find (coord) {\n  return this._nodes.find(coord)\n};\nPlanarGraph.prototype.addNode = function addNode () {\n  if (arguments[0] instanceof Node) {\n    var node = arguments[0];\n    return this._nodes.addNode(node)\n  } else if (arguments[0] instanceof Coordinate) {\n    var coord = arguments[0];\n    return this._nodes.addNode(coord)\n  }\n};\nPlanarGraph.prototype.getNodeIterator = function getNodeIterator () {\n  return this._nodes.iterator()\n};\nPlanarGraph.prototype.linkResultDirectedEdges = function linkResultDirectedEdges () {\n  for (var nodeit = this._nodes.iterator(); nodeit.hasNext();) {\n    var node = nodeit.next();\n    node.getEdges().linkResultDirectedEdges();\n  }\n};\nPlanarGraph.prototype.debugPrintln = function debugPrintln (o) {\n  System.out.println(o);\n};\nPlanarGraph.prototype.isBoundaryNode = function isBoundaryNode (geomIndex, coord) {\n  var node = this._nodes.find(coord);\n  if (node === null) { return false }\n  var label = node.getLabel();\n  if (label !== null && label.getLocation(geomIndex) === Location.BOUNDARY) { return true }\n  return false\n};\nPlanarGraph.prototype.linkAllDirectedEdges = function linkAllDirectedEdges () {\n  for (var nodeit = this._nodes.iterator(); nodeit.hasNext();) {\n    var node = nodeit.next();\n    node.getEdges().linkAllDirectedEdges();\n  }\n};\nPlanarGraph.prototype.matchInSameDirection = function matchInSameDirection (p0, p1, ep0, ep1) {\n  if (!p0.equals(ep0)) { return false }\n  if (CGAlgorithms.computeOrientation(p0, p1, ep1) === CGAlgorithms.COLLINEAR && Quadrant.quadrant(p0, p1) === Quadrant.quadrant(ep0, ep1)) { return true }\n  return false\n};\nPlanarGraph.prototype.getEdgeEnds = function getEdgeEnds () {\n  return this._edgeEndList\n};\nPlanarGraph.prototype.debugPrint = function debugPrint (o) {\n  System.out.print(o);\n};\nPlanarGraph.prototype.getEdgeIterator = function getEdgeIterator () {\n  return this._edges.iterator()\n};\nPlanarGraph.prototype.findEdgeInSameDirection = function findEdgeInSameDirection (p0, p1) {\n    var this$1 = this;\n\n  for (var i = 0; i < this._edges.size(); i++) {\n    var e = this$1._edges.get(i);\n    var eCoord = e.getCoordinates();\n    if (this$1.matchInSameDirection(p0, p1, eCoord[0], eCoord[1])) { return e }\n    if (this$1.matchInSameDirection(p0, p1, eCoord[eCoord.length - 1], eCoord[eCoord.length - 2])) { return e }\n  }\n  return null\n};\nPlanarGraph.prototype.insertEdge = function insertEdge (e) {\n  this._edges.add(e);\n};\nPlanarGraph.prototype.findEdgeEnd = function findEdgeEnd (e) {\n  for (var i = this.getEdgeEnds().iterator(); i.hasNext();) {\n    var ee = i.next();\n    if (ee.getEdge() === e) { return ee }\n  }\n  return null\n};\nPlanarGraph.prototype.addEdges = function addEdges (edgesToAdd) {\n    var this$1 = this;\n\n  for (var it = edgesToAdd.iterator(); it.hasNext();) {\n    var e = it.next();\n    this$1._edges.add(e);\n    var de1 = new DirectedEdge(e, true);\n    var de2 = new DirectedEdge(e, false);\n    de1.setSym(de2);\n    de2.setSym(de1);\n    this$1.add(de1);\n    this$1.add(de2);\n  }\n};\nPlanarGraph.prototype.add = function add (e) {\n  this._nodes.add(e);\n  this._edgeEndList.add(e);\n};\nPlanarGraph.prototype.getNodes = function getNodes () {\n  return this._nodes.values()\n};\nPlanarGraph.prototype.findEdge = function findEdge (p0, p1) {\n    var this$1 = this;\n\n  for (var i = 0; i < this._edges.size(); i++) {\n    var e = this$1._edges.get(i);\n    var eCoord = e.getCoordinates();\n    if (p0.equals(eCoord[0]) && p1.equals(eCoord[1])) { return e }\n  }\n  return null\n};\nPlanarGraph.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nPlanarGraph.prototype.getClass = function getClass () {\n  return PlanarGraph\n};\nPlanarGraph.linkResultDirectedEdges = function linkResultDirectedEdges (nodes) {\n  for (var nodeit = nodes.iterator(); nodeit.hasNext();) {\n    var node = nodeit.next();\n    node.getEdges().linkResultDirectedEdges();\n  }\n};\n\nvar PolygonBuilder = function PolygonBuilder () {\n  this._geometryFactory = null;\n  this._shellList = new ArrayList();\n  var geometryFactory = arguments[0];\n  this._geometryFactory = geometryFactory;\n};\nPolygonBuilder.prototype.sortShellsAndHoles = function sortShellsAndHoles (edgeRings, shellList, freeHoleList) {\n  for (var it = edgeRings.iterator(); it.hasNext();) {\n    var er = it.next();\n    if (er.isHole()) {\n      freeHoleList.add(er);\n    } else {\n      shellList.add(er);\n    }\n  }\n};\nPolygonBuilder.prototype.computePolygons = function computePolygons (shellList) {\n    var this$1 = this;\n\n  var resultPolyList = new ArrayList();\n  for (var it = shellList.iterator(); it.hasNext();) {\n    var er = it.next();\n    var poly = er.toPolygon(this$1._geometryFactory);\n    resultPolyList.add(poly);\n  }\n  return resultPolyList\n};\nPolygonBuilder.prototype.placeFreeHoles = function placeFreeHoles (shellList, freeHoleList) {\n    var this$1 = this;\n\n  for (var it = freeHoleList.iterator(); it.hasNext();) {\n    var hole = it.next();\n    if (hole.getShell() === null) {\n      var shell = this$1.findEdgeRingContaining(hole, shellList);\n      if (shell === null) { throw new TopologyException('unable to assign hole to a shell', hole.getCoordinate(0)) }\n      hole.setShell(shell);\n    }\n  }\n};\nPolygonBuilder.prototype.buildMinimalEdgeRings = function buildMinimalEdgeRings (maxEdgeRings, shellList, freeHoleList) {\n    var this$1 = this;\n\n  var edgeRings = new ArrayList();\n  for (var it = maxEdgeRings.iterator(); it.hasNext();) {\n    var er = it.next();\n    if (er.getMaxNodeDegree() > 2) {\n      er.linkDirectedEdgesForMinimalEdgeRings();\n      var minEdgeRings = er.buildMinimalRings();\n      var shell = this$1.findShell(minEdgeRings);\n      if (shell !== null) {\n        this$1.placePolygonHoles(shell, minEdgeRings);\n        shellList.add(shell);\n      } else {\n        freeHoleList.addAll(minEdgeRings);\n      }\n    } else {\n      edgeRings.add(er);\n    }\n  }\n  return edgeRings\n};\nPolygonBuilder.prototype.containsPoint = function containsPoint (p) {\n  for (var it = this._shellList.iterator(); it.hasNext();) {\n    var er = it.next();\n    if (er.containsPoint(p)) { return true }\n  }\n  return false\n};\nPolygonBuilder.prototype.buildMaximalEdgeRings = function buildMaximalEdgeRings (dirEdges) {\n    var this$1 = this;\n\n  var maxEdgeRings = new ArrayList();\n  for (var it = dirEdges.iterator(); it.hasNext();) {\n    var de = it.next();\n    if (de.isInResult() && de.getLabel().isArea()) {\n      if (de.getEdgeRing() === null) {\n        var er = new MaximalEdgeRing(de, this$1._geometryFactory);\n        maxEdgeRings.add(er);\n        er.setInResult();\n      }\n    }\n  }\n  return maxEdgeRings\n};\nPolygonBuilder.prototype.placePolygonHoles = function placePolygonHoles (shell, minEdgeRings) {\n  for (var it = minEdgeRings.iterator(); it.hasNext();) {\n    var er = it.next();\n    if (er.isHole()) {\n      er.setShell(shell);\n    }\n  }\n};\nPolygonBuilder.prototype.getPolygons = function getPolygons () {\n  var resultPolyList = this.computePolygons(this._shellList);\n  return resultPolyList\n};\nPolygonBuilder.prototype.findEdgeRingContaining = function findEdgeRingContaining (testEr, shellList) {\n  var testRing = testEr.getLinearRing();\n  var testEnv = testRing.getEnvelopeInternal();\n  var testPt = testRing.getCoordinateN(0);\n  var minShell = null;\n  var minEnv = null;\n  for (var it = shellList.iterator(); it.hasNext();) {\n    var tryShell = it.next();\n    var tryRing = tryShell.getLinearRing();\n    var tryEnv = tryRing.getEnvelopeInternal();\n    if (minShell !== null) { minEnv = minShell.getLinearRing().getEnvelopeInternal(); }\n    var isContained = false;\n    if (tryEnv.contains(testEnv) && CGAlgorithms.isPointInRing(testPt, tryRing.getCoordinates())) { isContained = true; }\n    if (isContained) {\n      if (minShell === null || minEnv.contains(tryEnv)) {\n        minShell = tryShell;\n      }\n    }\n  }\n  return minShell\n};\nPolygonBuilder.prototype.findShell = function findShell (minEdgeRings) {\n  var shellCount = 0;\n  var shell = null;\n  for (var it = minEdgeRings.iterator(); it.hasNext();) {\n    var er = it.next();\n    if (!er.isHole()) {\n      shell = er;\n      shellCount++;\n    }\n  }\n  Assert.isTrue(shellCount <= 1, 'found two shells in MinimalEdgeRing list');\n  return shell\n};\nPolygonBuilder.prototype.add = function add () {\n  if (arguments.length === 1) {\n    var graph = arguments[0];\n    this.add(graph.getEdgeEnds(), graph.getNodes());\n  } else if (arguments.length === 2) {\n    var dirEdges = arguments[0];\n    var nodes = arguments[1];\n    PlanarGraph.linkResultDirectedEdges(nodes);\n    var maxEdgeRings = this.buildMaximalEdgeRings(dirEdges);\n    var freeHoleList = new ArrayList();\n    var edgeRings = this.buildMinimalEdgeRings(maxEdgeRings, this._shellList, freeHoleList);\n    this.sortShellsAndHoles(edgeRings, this._shellList, freeHoleList);\n    this.placeFreeHoles(this._shellList, freeHoleList);\n  }\n};\nPolygonBuilder.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nPolygonBuilder.prototype.getClass = function getClass () {\n  return PolygonBuilder\n};\n\nvar Boundable = function Boundable () {};\n\nBoundable.prototype.getBounds = function getBounds () {};\nBoundable.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nBoundable.prototype.getClass = function getClass () {\n  return Boundable\n};\n\nvar ItemBoundable = function ItemBoundable () {\n  this._bounds = null;\n  this._item = null;\n  var bounds = arguments[0];\n  var item = arguments[1];\n  this._bounds = bounds;\n  this._item = item;\n};\nItemBoundable.prototype.getItem = function getItem () {\n  return this._item\n};\nItemBoundable.prototype.getBounds = function getBounds () {\n  return this._bounds\n};\nItemBoundable.prototype.interfaces_ = function interfaces_ () {\n  return [Boundable, Serializable]\n};\nItemBoundable.prototype.getClass = function getClass () {\n  return ItemBoundable\n};\n\nvar PriorityQueue = function PriorityQueue () {\n  this._size = null;\n  this._items = null;\n  this._size = 0;\n  this._items = new ArrayList();\n  this._items.add(null);\n};\nPriorityQueue.prototype.poll = function poll () {\n  if (this.isEmpty()) { return null }\n  var minItem = this._items.get(1);\n  this._items.set(1, this._items.get(this._size));\n  this._size -= 1;\n  this.reorder(1);\n  return minItem\n};\nPriorityQueue.prototype.size = function size () {\n  return this._size\n};\nPriorityQueue.prototype.reorder = function reorder (hole) {\n    var this$1 = this;\n\n  var child = null;\n  var tmp = this._items.get(hole);\n  for (; hole * 2 <= this._size; hole = child) {\n    child = hole * 2;\n    if (child !== this$1._size && this$1._items.get(child + 1).compareTo(this$1._items.get(child)) < 0) { child++; }\n    if (this$1._items.get(child).compareTo(tmp) < 0) { this$1._items.set(hole, this$1._items.get(child)); } else { break }\n  }\n  this._items.set(hole, tmp);\n};\nPriorityQueue.prototype.clear = function clear () {\n  this._size = 0;\n  this._items.clear();\n};\nPriorityQueue.prototype.isEmpty = function isEmpty () {\n  return this._size === 0\n};\nPriorityQueue.prototype.add = function add (x) {\n    var this$1 = this;\n\n  this._items.add(null);\n  this._size += 1;\n  var hole = this._size;\n  this._items.set(0, x);\n  for (; x.compareTo(this._items.get(Math.trunc(hole / 2))) < 0; hole /= 2) {\n    this$1._items.set(hole, this$1._items.get(Math.trunc(hole / 2)));\n  }\n  this._items.set(hole, x);\n};\nPriorityQueue.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nPriorityQueue.prototype.getClass = function getClass () {\n  return PriorityQueue\n};\n\nvar ItemVisitor = function ItemVisitor () {};\n\nItemVisitor.prototype.visitItem = function visitItem (item) {};\nItemVisitor.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nItemVisitor.prototype.getClass = function getClass () {\n  return ItemVisitor\n};\n\nvar SpatialIndex = function SpatialIndex () {};\n\nSpatialIndex.prototype.insert = function insert (itemEnv, item) {};\nSpatialIndex.prototype.remove = function remove (itemEnv, item) {};\nSpatialIndex.prototype.query = function query () {\n  // if (arguments.length === 1) {\n  // const searchEnv = arguments[0]\n  // } else if (arguments.length === 2) {\n  // const searchEnv = arguments[0]\n  // const visitor = arguments[1]\n  // }\n};\nSpatialIndex.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nSpatialIndex.prototype.getClass = function getClass () {\n  return SpatialIndex\n};\n\nvar AbstractNode = function AbstractNode () {\n  this._childBoundables = new ArrayList();\n  this._bounds = null;\n  this._level = null;\n  if (arguments.length === 0) {} else if (arguments.length === 1) {\n    var level = arguments[0];\n    this._level = level;\n  }\n};\n\nvar staticAccessors$22 = { serialVersionUID: { configurable: true } };\nAbstractNode.prototype.getLevel = function getLevel () {\n  return this._level\n};\nAbstractNode.prototype.size = function size () {\n  return this._childBoundables.size()\n};\nAbstractNode.prototype.getChildBoundables = function getChildBoundables () {\n  return this._childBoundables\n};\nAbstractNode.prototype.addChildBoundable = function addChildBoundable (childBoundable) {\n  Assert.isTrue(this._bounds === null);\n  this._childBoundables.add(childBoundable);\n};\nAbstractNode.prototype.isEmpty = function isEmpty () {\n  return this._childBoundables.isEmpty()\n};\nAbstractNode.prototype.getBounds = function getBounds () {\n  if (this._bounds === null) {\n    this._bounds = this.computeBounds();\n  }\n  return this._bounds\n};\nAbstractNode.prototype.interfaces_ = function interfaces_ () {\n  return [Boundable, Serializable]\n};\nAbstractNode.prototype.getClass = function getClass () {\n  return AbstractNode\n};\nstaticAccessors$22.serialVersionUID.get = function () { return 6493722185909573708 };\n\nObject.defineProperties( AbstractNode, staticAccessors$22 );\n\nvar Collections = function Collections () {};\n\nCollections.reverseOrder = function reverseOrder () {\n  return {\n    compare: function compare (a, b) {\n      return b.compareTo(a)\n    }\n  }\n};\nCollections.min = function min (l) {\n  Collections.sort(l);\n  return l.get(0)\n};\nCollections.sort = function sort (l, c) {\n  var a = l.toArray();\n  if (c) {\n    Arrays.sort(a, c);\n  } else {\n    Arrays.sort(a);\n  }\n  var i = l.iterator();\n  for (var pos = 0, alen = a.length; pos < alen; pos++) {\n    i.next();\n    i.set(a[pos]);\n  }\n};\nCollections.singletonList = function singletonList (o) {\n  var arrayList = new ArrayList();\n  arrayList.add(o);\n  return arrayList\n};\n\nvar BoundablePair = function BoundablePair () {\n  this._boundable1 = null;\n  this._boundable2 = null;\n  this._distance = null;\n  this._itemDistance = null;\n  var boundable1 = arguments[0];\n  var boundable2 = arguments[1];\n  var itemDistance = arguments[2];\n  this._boundable1 = boundable1;\n  this._boundable2 = boundable2;\n  this._itemDistance = itemDistance;\n  this._distance = this.distance();\n};\nBoundablePair.prototype.expandToQueue = function expandToQueue (priQ, minDistance) {\n  var isComp1 = BoundablePair.isComposite(this._boundable1);\n  var isComp2 = BoundablePair.isComposite(this._boundable2);\n  if (isComp1 && isComp2) {\n    if (BoundablePair.area(this._boundable1) > BoundablePair.area(this._boundable2)) {\n      this.expand(this._boundable1, this._boundable2, priQ, minDistance);\n      return null\n    } else {\n      this.expand(this._boundable2, this._boundable1, priQ, minDistance);\n      return null\n    }\n  } else if (isComp1) {\n    this.expand(this._boundable1, this._boundable2, priQ, minDistance);\n    return null\n  } else if (isComp2) {\n    this.expand(this._boundable2, this._boundable1, priQ, minDistance);\n    return null\n  }\n  throw new IllegalArgumentException('neither boundable is composite')\n};\nBoundablePair.prototype.isLeaves = function isLeaves () {\n  return !(BoundablePair.isComposite(this._boundable1) || BoundablePair.isComposite(this._boundable2))\n};\nBoundablePair.prototype.compareTo = function compareTo (o) {\n  var nd = o;\n  if (this._distance < nd._distance) { return -1 }\n  if (this._distance > nd._distance) { return 1 }\n  return 0\n};\nBoundablePair.prototype.expand = function expand (bndComposite, bndOther, priQ, minDistance) {\n    var this$1 = this;\n\n  var children = bndComposite.getChildBoundables();\n  for (var i = children.iterator(); i.hasNext();) {\n    var child = i.next();\n    var bp = new BoundablePair(child, bndOther, this$1._itemDistance);\n    if (bp.getDistance() < minDistance) {\n      priQ.add(bp);\n    }\n  }\n};\nBoundablePair.prototype.getBoundable = function getBoundable (i) {\n  if (i === 0) { return this._boundable1 }\n  return this._boundable2\n};\nBoundablePair.prototype.getDistance = function getDistance () {\n  return this._distance\n};\nBoundablePair.prototype.distance = function distance () {\n  if (this.isLeaves()) {\n    return this._itemDistance.distance(this._boundable1, this._boundable2)\n  }\n  return this._boundable1.getBounds().distance(this._boundable2.getBounds())\n};\nBoundablePair.prototype.interfaces_ = function interfaces_ () {\n  return [Comparable]\n};\nBoundablePair.prototype.getClass = function getClass () {\n  return BoundablePair\n};\nBoundablePair.area = function area (b) {\n  return b.getBounds().getArea()\n};\nBoundablePair.isComposite = function isComposite (item) {\n  return item instanceof AbstractNode\n};\n\nvar AbstractSTRtree = function AbstractSTRtree () {\n  this._root = null;\n  this._built = false;\n  this._itemBoundables = new ArrayList();\n  this._nodeCapacity = null;\n  if (arguments.length === 0) {\n    var nodeCapacity = AbstractSTRtree.DEFAULT_NODE_CAPACITY;\n    this._nodeCapacity = nodeCapacity;\n  } else if (arguments.length === 1) {\n    var nodeCapacity$1 = arguments[0];\n    Assert.isTrue(nodeCapacity$1 > 1, 'Node capacity must be greater than 1');\n    this._nodeCapacity = nodeCapacity$1;\n  }\n};\n\nvar staticAccessors$23 = { IntersectsOp: { configurable: true },serialVersionUID: { configurable: true },DEFAULT_NODE_CAPACITY: { configurable: true } };\nAbstractSTRtree.prototype.getNodeCapacity = function getNodeCapacity () {\n  return this._nodeCapacity\n};\nAbstractSTRtree.prototype.lastNode = function lastNode (nodes) {\n  return nodes.get(nodes.size() - 1)\n};\nAbstractSTRtree.prototype.size = function size () {\n    var this$1 = this;\n\n  if (arguments.length === 0) {\n    if (this.isEmpty()) {\n      return 0\n    }\n    this.build();\n    return this.size(this._root)\n  } else if (arguments.length === 1) {\n    var node = arguments[0];\n    var size = 0;\n    for (var i = node.getChildBoundables().iterator(); i.hasNext();) {\n      var childBoundable = i.next();\n      if (childBoundable instanceof AbstractNode) {\n        size += this$1.size(childBoundable);\n      } else if (childBoundable instanceof ItemBoundable) {\n        size += 1;\n      }\n    }\n    return size\n  }\n};\nAbstractSTRtree.prototype.removeItem = function removeItem (node, item) {\n  var childToRemove = null;\n  for (var i = node.getChildBoundables().iterator(); i.hasNext();) {\n    var childBoundable = i.next();\n    if (childBoundable instanceof ItemBoundable) {\n      if (childBoundable.getItem() === item) { childToRemove = childBoundable; }\n    }\n  }\n  if (childToRemove !== null) {\n    node.getChildBoundables().remove(childToRemove);\n    return true\n  }\n  return false\n};\nAbstractSTRtree.prototype.itemsTree = function itemsTree () {\n    var this$1 = this;\n\n  if (arguments.length === 0) {\n    this.build();\n    var valuesTree = this.itemsTree(this._root);\n    if (valuesTree === null) { return new ArrayList() }\n    return valuesTree\n  } else if (arguments.length === 1) {\n    var node = arguments[0];\n    var valuesTreeForNode = new ArrayList();\n    for (var i = node.getChildBoundables().iterator(); i.hasNext();) {\n      var childBoundable = i.next();\n      if (childBoundable instanceof AbstractNode) {\n        var valuesTreeForChild = this$1.itemsTree(childBoundable);\n        if (valuesTreeForChild !== null) { valuesTreeForNode.add(valuesTreeForChild); }\n      } else if (childBoundable instanceof ItemBoundable) {\n        valuesTreeForNode.add(childBoundable.getItem());\n      } else {\n        Assert.shouldNeverReachHere();\n      }\n    }\n    if (valuesTreeForNode.size() <= 0) { return null }\n    return valuesTreeForNode\n  }\n};\nAbstractSTRtree.prototype.insert = function insert (bounds, item) {\n  Assert.isTrue(!this._built, 'Cannot insert items into an STR packed R-tree after it has been built.');\n  this._itemBoundables.add(new ItemBoundable(bounds, item));\n};\nAbstractSTRtree.prototype.boundablesAtLevel = function boundablesAtLevel () {\n    var this$1 = this;\n\n  if (arguments.length === 1) {\n    var level = arguments[0];\n    var boundables = new ArrayList();\n    this.boundablesAtLevel(level, this._root, boundables);\n    return boundables\n  } else if (arguments.length === 3) {\n    var level$1 = arguments[0];\n    var top = arguments[1];\n    var boundables$1 = arguments[2];\n    Assert.isTrue(level$1 > -2);\n    if (top.getLevel() === level$1) {\n      boundables$1.add(top);\n      return null\n    }\n    for (var i = top.getChildBoundables().iterator(); i.hasNext();) {\n      var boundable = i.next();\n      if (boundable instanceof AbstractNode) {\n        this$1.boundablesAtLevel(level$1, boundable, boundables$1);\n      } else {\n        Assert.isTrue(boundable instanceof ItemBoundable);\n        if (level$1 === -1) {\n          boundables$1.add(boundable);\n        }\n      }\n    }\n    return null\n  }\n};\nAbstractSTRtree.prototype.query = function query () {\n    var this$1 = this;\n\n  if (arguments.length === 1) {\n    var searchBounds = arguments[0];\n    this.build();\n    var matches = new ArrayList();\n    if (this.isEmpty()) {\n      return matches\n    }\n    if (this.getIntersectsOp().intersects(this._root.getBounds(), searchBounds)) {\n      this.query(searchBounds, this._root, matches);\n    }\n    return matches\n  } else if (arguments.length === 2) {\n    var searchBounds$1 = arguments[0];\n    var visitor = arguments[1];\n    this.build();\n    if (this.isEmpty()) {\n      return null\n    }\n    if (this.getIntersectsOp().intersects(this._root.getBounds(), searchBounds$1)) {\n      this.query(searchBounds$1, this._root, visitor);\n    }\n  } else if (arguments.length === 3) {\n    if (hasInterface(arguments[2], ItemVisitor) && (arguments[0] instanceof Object && arguments[1] instanceof AbstractNode)) {\n      var searchBounds$2 = arguments[0];\n      var node = arguments[1];\n      var visitor$1 = arguments[2];\n      var childBoundables = node.getChildBoundables();\n      for (var i = 0; i < childBoundables.size(); i++) {\n        var childBoundable = childBoundables.get(i);\n        if (!this$1.getIntersectsOp().intersects(childBoundable.getBounds(), searchBounds$2)) {\n          continue\n        }\n        if (childBoundable instanceof AbstractNode) {\n          this$1.query(searchBounds$2, childBoundable, visitor$1);\n        } else if (childBoundable instanceof ItemBoundable) {\n          visitor$1.visitItem(childBoundable.getItem());\n        } else {\n          Assert.shouldNeverReachHere();\n        }\n      }\n    } else if (hasInterface(arguments[2], List) && (arguments[0] instanceof Object && arguments[1] instanceof AbstractNode)) {\n      var searchBounds$3 = arguments[0];\n      var node$1 = arguments[1];\n      var matches$1 = arguments[2];\n      var childBoundables$1 = node$1.getChildBoundables();\n      for (var i$1 = 0; i$1 < childBoundables$1.size(); i$1++) {\n        var childBoundable$1 = childBoundables$1.get(i$1);\n        if (!this$1.getIntersectsOp().intersects(childBoundable$1.getBounds(), searchBounds$3)) {\n          continue\n        }\n        if (childBoundable$1 instanceof AbstractNode) {\n          this$1.query(searchBounds$3, childBoundable$1, matches$1);\n        } else if (childBoundable$1 instanceof ItemBoundable) {\n          matches$1.add(childBoundable$1.getItem());\n        } else {\n          Assert.shouldNeverReachHere();\n        }\n      }\n    }\n  }\n};\nAbstractSTRtree.prototype.build = function build () {\n  if (this._built) { return null }\n  this._root = this._itemBoundables.isEmpty() ? this.createNode(0) : this.createHigherLevels(this._itemBoundables, -1);\n  this._itemBoundables = null;\n  this._built = true;\n};\nAbstractSTRtree.prototype.getRoot = function getRoot () {\n  this.build();\n  return this._root\n};\nAbstractSTRtree.prototype.remove = function remove () {\n    var this$1 = this;\n\n  if (arguments.length === 2) {\n    var searchBounds = arguments[0];\n    var item = arguments[1];\n    this.build();\n    if (this.getIntersectsOp().intersects(this._root.getBounds(), searchBounds)) {\n      return this.remove(searchBounds, this._root, item)\n    }\n    return false\n  } else if (arguments.length === 3) {\n    var searchBounds$1 = arguments[0];\n    var node = arguments[1];\n    var item$1 = arguments[2];\n    var found = this.removeItem(node, item$1);\n    if (found) { return true }\n    var childToPrune = null;\n    for (var i = node.getChildBoundables().iterator(); i.hasNext();) {\n      var childBoundable = i.next();\n      if (!this$1.getIntersectsOp().intersects(childBoundable.getBounds(), searchBounds$1)) {\n        continue\n      }\n      if (childBoundable instanceof AbstractNode) {\n        found = this$1.remove(searchBounds$1, childBoundable, item$1);\n        if (found) {\n          childToPrune = childBoundable;\n          break\n        }\n      }\n    }\n    if (childToPrune !== null) {\n      if (childToPrune.getChildBoundables().isEmpty()) {\n        node.getChildBoundables().remove(childToPrune);\n      }\n    }\n    return found\n  }\n};\nAbstractSTRtree.prototype.createHigherLevels = function createHigherLevels (boundablesOfALevel, level) {\n  Assert.isTrue(!boundablesOfALevel.isEmpty());\n  var parentBoundables = this.createParentBoundables(boundablesOfALevel, level + 1);\n  if (parentBoundables.size() === 1) {\n    return parentBoundables.get(0)\n  }\n  return this.createHigherLevels(parentBoundables, level + 1)\n};\nAbstractSTRtree.prototype.depth = function depth () {\n    var this$1 = this;\n\n  if (arguments.length === 0) {\n    if (this.isEmpty()) {\n      return 0\n    }\n    this.build();\n    return this.depth(this._root)\n  } else if (arguments.length === 1) {\n    var node = arguments[0];\n    var maxChildDepth = 0;\n    for (var i = node.getChildBoundables().iterator(); i.hasNext();) {\n      var childBoundable = i.next();\n      if (childBoundable instanceof AbstractNode) {\n        var childDepth = this$1.depth(childBoundable);\n        if (childDepth > maxChildDepth) { maxChildDepth = childDepth; }\n      }\n    }\n    return maxChildDepth + 1\n  }\n};\nAbstractSTRtree.prototype.createParentBoundables = function createParentBoundables (childBoundables, newLevel) {\n    var this$1 = this;\n\n  Assert.isTrue(!childBoundables.isEmpty());\n  var parentBoundables = new ArrayList();\n  parentBoundables.add(this.createNode(newLevel));\n  var sortedChildBoundables = new ArrayList(childBoundables);\n  Collections.sort(sortedChildBoundables, this.getComparator());\n  for (var i = sortedChildBoundables.iterator(); i.hasNext();) {\n    var childBoundable = i.next();\n    if (this$1.lastNode(parentBoundables).getChildBoundables().size() === this$1.getNodeCapacity()) {\n      parentBoundables.add(this$1.createNode(newLevel));\n    }\n    this$1.lastNode(parentBoundables).addChildBoundable(childBoundable);\n  }\n  return parentBoundables\n};\nAbstractSTRtree.prototype.isEmpty = function isEmpty () {\n  if (!this._built) { return this._itemBoundables.isEmpty() }\n  return this._root.isEmpty()\n};\nAbstractSTRtree.prototype.interfaces_ = function interfaces_ () {\n  return [Serializable]\n};\nAbstractSTRtree.prototype.getClass = function getClass () {\n  return AbstractSTRtree\n};\nAbstractSTRtree.compareDoubles = function compareDoubles (a, b) {\n  return a > b ? 1 : a < b ? -1 : 0\n};\nstaticAccessors$23.IntersectsOp.get = function () { return IntersectsOp };\nstaticAccessors$23.serialVersionUID.get = function () { return -3886435814360241337 };\nstaticAccessors$23.DEFAULT_NODE_CAPACITY.get = function () { return 10 };\n\nObject.defineProperties( AbstractSTRtree, staticAccessors$23 );\n\nvar IntersectsOp = function IntersectsOp () {};\n\nvar ItemDistance = function ItemDistance () {};\n\nItemDistance.prototype.distance = function distance (item1, item2) {};\nItemDistance.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nItemDistance.prototype.getClass = function getClass () {\n  return ItemDistance\n};\n\nvar STRtree = (function (AbstractSTRtree$$1) {\n  function STRtree (nodeCapacity) {\n    nodeCapacity = nodeCapacity || STRtree.DEFAULT_NODE_CAPACITY;\n    AbstractSTRtree$$1.call(this, nodeCapacity);\n  }\n\n  if ( AbstractSTRtree$$1 ) STRtree.__proto__ = AbstractSTRtree$$1;\n  STRtree.prototype = Object.create( AbstractSTRtree$$1 && AbstractSTRtree$$1.prototype );\n  STRtree.prototype.constructor = STRtree;\n\n  var staticAccessors = { STRtreeNode: { configurable: true },serialVersionUID: { configurable: true },xComparator: { configurable: true },yComparator: { configurable: true },intersectsOp: { configurable: true },DEFAULT_NODE_CAPACITY: { configurable: true } };\n  STRtree.prototype.createParentBoundablesFromVerticalSlices = function createParentBoundablesFromVerticalSlices (verticalSlices, newLevel) {\n    var this$1 = this;\n\n    Assert.isTrue(verticalSlices.length > 0);\n    var parentBoundables = new ArrayList();\n    for (var i = 0; i < verticalSlices.length; i++) {\n      parentBoundables.addAll(this$1.createParentBoundablesFromVerticalSlice(verticalSlices[i], newLevel));\n    }\n    return parentBoundables\n  };\n  STRtree.prototype.createNode = function createNode (level) {\n    return new STRtreeNode(level)\n  };\n  STRtree.prototype.size = function size () {\n    if (arguments.length === 0) {\n      return AbstractSTRtree$$1.prototype.size.call(this)\n    } else { return AbstractSTRtree$$1.prototype.size.apply(this, arguments) }\n  };\n  STRtree.prototype.insert = function insert () {\n    if (arguments.length === 2) {\n      var itemEnv = arguments[0];\n      var item = arguments[1];\n      if (itemEnv.isNull()) {\n        return null\n      }\n      AbstractSTRtree$$1.prototype.insert.call(this, itemEnv, item);\n    } else { return AbstractSTRtree$$1.prototype.insert.apply(this, arguments) }\n  };\n  STRtree.prototype.getIntersectsOp = function getIntersectsOp () {\n    return STRtree.intersectsOp\n  };\n  STRtree.prototype.verticalSlices = function verticalSlices (childBoundables, sliceCount) {\n    var sliceCapacity = Math.trunc(Math.ceil(childBoundables.size() / sliceCount));\n    var slices = new Array(sliceCount).fill(null);\n    var i = childBoundables.iterator();\n    for (var j = 0; j < sliceCount; j++) {\n      slices[j] = new ArrayList();\n      var boundablesAddedToSlice = 0;\n      while (i.hasNext() && boundablesAddedToSlice < sliceCapacity) {\n        var childBoundable = i.next();\n        slices[j].add(childBoundable);\n        boundablesAddedToSlice++;\n      }\n    }\n    return slices\n  };\n  STRtree.prototype.query = function query () {\n    if (arguments.length === 1) {\n      var searchEnv = arguments[0];\n      return AbstractSTRtree$$1.prototype.query.call(this, searchEnv)\n    } else if (arguments.length === 2) {\n      var searchEnv$1 = arguments[0];\n      var visitor = arguments[1];\n      AbstractSTRtree$$1.prototype.query.call(this, searchEnv$1, visitor);\n    } else if (arguments.length === 3) {\n      if (hasInterface(arguments[2], ItemVisitor) && (arguments[0] instanceof Object && arguments[1] instanceof AbstractNode)) {\n        var searchBounds = arguments[0];\n        var node = arguments[1];\n        var visitor$1 = arguments[2];\n        AbstractSTRtree$$1.prototype.query.call(this, searchBounds, node, visitor$1);\n      } else if (hasInterface(arguments[2], List) && (arguments[0] instanceof Object && arguments[1] instanceof AbstractNode)) {\n        var searchBounds$1 = arguments[0];\n        var node$1 = arguments[1];\n        var matches = arguments[2];\n        AbstractSTRtree$$1.prototype.query.call(this, searchBounds$1, node$1, matches);\n      }\n    }\n  };\n  STRtree.prototype.getComparator = function getComparator () {\n    return STRtree.yComparator\n  };\n  STRtree.prototype.createParentBoundablesFromVerticalSlice = function createParentBoundablesFromVerticalSlice (childBoundables, newLevel) {\n    return AbstractSTRtree$$1.prototype.createParentBoundables.call(this, childBoundables, newLevel)\n  };\n  STRtree.prototype.remove = function remove () {\n    if (arguments.length === 2) {\n      var itemEnv = arguments[0];\n      var item = arguments[1];\n      return AbstractSTRtree$$1.prototype.remove.call(this, itemEnv, item)\n    } else { return AbstractSTRtree$$1.prototype.remove.apply(this, arguments) }\n  };\n  STRtree.prototype.depth = function depth () {\n    if (arguments.length === 0) {\n      return AbstractSTRtree$$1.prototype.depth.call(this)\n    } else { return AbstractSTRtree$$1.prototype.depth.apply(this, arguments) }\n  };\n  STRtree.prototype.createParentBoundables = function createParentBoundables (childBoundables, newLevel) {\n    Assert.isTrue(!childBoundables.isEmpty());\n    var minLeafCount = Math.trunc(Math.ceil(childBoundables.size() / this.getNodeCapacity()));\n    var sortedChildBoundables = new ArrayList(childBoundables);\n    Collections.sort(sortedChildBoundables, STRtree.xComparator);\n    var verticalSlices = this.verticalSlices(sortedChildBoundables, Math.trunc(Math.ceil(Math.sqrt(minLeafCount))));\n    return this.createParentBoundablesFromVerticalSlices(verticalSlices, newLevel)\n  };\n  STRtree.prototype.nearestNeighbour = function nearestNeighbour () {\n    if (arguments.length === 1) {\n      if (hasInterface(arguments[0], ItemDistance)) {\n        var itemDist = arguments[0];\n        var bp = new BoundablePair(this.getRoot(), this.getRoot(), itemDist);\n        return this.nearestNeighbour(bp)\n      } else if (arguments[0] instanceof BoundablePair) {\n        var initBndPair = arguments[0];\n        return this.nearestNeighbour(initBndPair, Double.POSITIVE_INFINITY)\n      }\n    } else if (arguments.length === 2) {\n      if (arguments[0] instanceof STRtree && hasInterface(arguments[1], ItemDistance)) {\n        var tree = arguments[0];\n        var itemDist$1 = arguments[1];\n        var bp$1 = new BoundablePair(this.getRoot(), tree.getRoot(), itemDist$1);\n        return this.nearestNeighbour(bp$1)\n      } else if (arguments[0] instanceof BoundablePair && typeof arguments[1] === 'number') {\n        var initBndPair$1 = arguments[0];\n        var maxDistance = arguments[1];\n        var distanceLowerBound = maxDistance;\n        var minPair = null;\n        var priQ = new PriorityQueue();\n        priQ.add(initBndPair$1);\n        while (!priQ.isEmpty() && distanceLowerBound > 0.0) {\n          var bndPair = priQ.poll();\n          var currentDistance = bndPair.getDistance();\n          if (currentDistance >= distanceLowerBound) { break }\n          if (bndPair.isLeaves()) {\n            distanceLowerBound = currentDistance;\n            minPair = bndPair;\n          } else {\n            bndPair.expandToQueue(priQ, distanceLowerBound);\n          }\n        }\n        return [minPair.getBoundable(0).getItem(), minPair.getBoundable(1).getItem()]\n      }\n    } else if (arguments.length === 3) {\n      var env = arguments[0];\n      var item = arguments[1];\n      var itemDist$2 = arguments[2];\n      var bnd = new ItemBoundable(env, item);\n      var bp$2 = new BoundablePair(this.getRoot(), bnd, itemDist$2);\n      return this.nearestNeighbour(bp$2)[0]\n    }\n  };\n  STRtree.prototype.interfaces_ = function interfaces_ () {\n    return [SpatialIndex, Serializable]\n  };\n  STRtree.prototype.getClass = function getClass () {\n    return STRtree\n  };\n  STRtree.centreX = function centreX (e) {\n    return STRtree.avg(e.getMinX(), e.getMaxX())\n  };\n  STRtree.avg = function avg (a, b) {\n    return (a + b) / 2\n  };\n  STRtree.centreY = function centreY (e) {\n    return STRtree.avg(e.getMinY(), e.getMaxY())\n  };\n  staticAccessors.STRtreeNode.get = function () { return STRtreeNode };\n  staticAccessors.serialVersionUID.get = function () { return 259274702368956900 };\n  staticAccessors.xComparator.get = function () {\n    return {\n      interfaces_: function () {\n        return [Comparator]\n      },\n      compare: function (o1, o2) {\n        return AbstractSTRtree$$1.compareDoubles(STRtree.centreX(o1.getBounds()), STRtree.centreX(o2.getBounds()))\n      }\n    }\n  };\n  staticAccessors.yComparator.get = function () {\n    return {\n      interfaces_: function () {\n        return [Comparator]\n      },\n      compare: function (o1, o2) {\n        return AbstractSTRtree$$1.compareDoubles(STRtree.centreY(o1.getBounds()), STRtree.centreY(o2.getBounds()))\n      }\n    }\n  };\n  staticAccessors.intersectsOp.get = function () {\n    return {\n      interfaces_: function () {\n        return [AbstractSTRtree$$1.IntersectsOp]\n      },\n      intersects: function (aBounds, bBounds) {\n        return aBounds.intersects(bBounds)\n      }\n    }\n  };\n  staticAccessors.DEFAULT_NODE_CAPACITY.get = function () { return 10 };\n\n  Object.defineProperties( STRtree, staticAccessors );\n\n  return STRtree;\n}(AbstractSTRtree));\n\nvar STRtreeNode = (function (AbstractNode$$1) {\n  function STRtreeNode () {\n    var level = arguments[0];\n    AbstractNode$$1.call(this, level);\n  }\n\n  if ( AbstractNode$$1 ) STRtreeNode.__proto__ = AbstractNode$$1;\n  STRtreeNode.prototype = Object.create( AbstractNode$$1 && AbstractNode$$1.prototype );\n  STRtreeNode.prototype.constructor = STRtreeNode;\n  STRtreeNode.prototype.computeBounds = function computeBounds () {\n    var bounds = null;\n    for (var i = this.getChildBoundables().iterator(); i.hasNext();) {\n      var childBoundable = i.next();\n      if (bounds === null) {\n        bounds = new Envelope(childBoundable.getBounds());\n      } else {\n        bounds.expandToInclude(childBoundable.getBounds());\n      }\n    }\n    return bounds\n  };\n  STRtreeNode.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  STRtreeNode.prototype.getClass = function getClass () {\n    return STRtreeNode\n  };\n\n  return STRtreeNode;\n}(AbstractNode));\n\nvar SegmentPointComparator = function SegmentPointComparator () {};\n\nSegmentPointComparator.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nSegmentPointComparator.prototype.getClass = function getClass () {\n  return SegmentPointComparator\n};\nSegmentPointComparator.relativeSign = function relativeSign (x0, x1) {\n  if (x0 < x1) { return -1 }\n  if (x0 > x1) { return 1 }\n  return 0\n};\nSegmentPointComparator.compare = function compare (octant, p0, p1) {\n  if (p0.equals2D(p1)) { return 0 }\n  var xSign = SegmentPointComparator.relativeSign(p0.x, p1.x);\n  var ySign = SegmentPointComparator.relativeSign(p0.y, p1.y);\n  switch (octant) {\n    case 0:\n      return SegmentPointComparator.compareValue(xSign, ySign)\n    case 1:\n      return SegmentPointComparator.compareValue(ySign, xSign)\n    case 2:\n      return SegmentPointComparator.compareValue(ySign, -xSign)\n    case 3:\n      return SegmentPointComparator.compareValue(-xSign, ySign)\n    case 4:\n      return SegmentPointComparator.compareValue(-xSign, -ySign)\n    case 5:\n      return SegmentPointComparator.compareValue(-ySign, -xSign)\n    case 6:\n      return SegmentPointComparator.compareValue(-ySign, xSign)\n    case 7:\n      return SegmentPointComparator.compareValue(xSign, -ySign)\n    default:\n  }\n  Assert.shouldNeverReachHere('invalid octant value');\n  return 0\n};\nSegmentPointComparator.compareValue = function compareValue (compareSign0, compareSign1) {\n  if (compareSign0 < 0) { return -1 }\n  if (compareSign0 > 0) { return 1 }\n  if (compareSign1 < 0) { return -1 }\n  if (compareSign1 > 0) { return 1 }\n  return 0\n};\n\nvar SegmentNode = function SegmentNode () {\n  this._segString = null;\n  this.coord = null;\n  this.segmentIndex = null;\n  this._segmentOctant = null;\n  this._isInterior = null;\n  var segString = arguments[0];\n  var coord = arguments[1];\n  var segmentIndex = arguments[2];\n  var segmentOctant = arguments[3];\n  this._segString = segString;\n  this.coord = new Coordinate(coord);\n  this.segmentIndex = segmentIndex;\n  this._segmentOctant = segmentOctant;\n  this._isInterior = !coord.equals2D(segString.getCoordinate(segmentIndex));\n};\nSegmentNode.prototype.getCoordinate = function getCoordinate () {\n  return this.coord\n};\nSegmentNode.prototype.print = function print (out) {\n  out.print(this.coord);\n  out.print(' seg # = ' + this.segmentIndex);\n};\nSegmentNode.prototype.compareTo = function compareTo (obj) {\n  var other = obj;\n  if (this.segmentIndex < other.segmentIndex) { return -1 }\n  if (this.segmentIndex > other.segmentIndex) { return 1 }\n  if (this.coord.equals2D(other.coord)) { return 0 }\n  return SegmentPointComparator.compare(this._segmentOctant, this.coord, other.coord)\n};\nSegmentNode.prototype.isEndPoint = function isEndPoint (maxSegmentIndex) {\n  if (this.segmentIndex === 0 && !this._isInterior) { return true }\n  if (this.segmentIndex === maxSegmentIndex) { return true }\n  return false\n};\nSegmentNode.prototype.isInterior = function isInterior () {\n  return this._isInterior\n};\nSegmentNode.prototype.interfaces_ = function interfaces_ () {\n  return [Comparable]\n};\nSegmentNode.prototype.getClass = function getClass () {\n  return SegmentNode\n};\n\n// import Iterator from '../../../../java/util/Iterator'\nvar SegmentNodeList = function SegmentNodeList () {\n  this._nodeMap = new TreeMap();\n  this._edge = null;\n  var edge = arguments[0];\n  this._edge = edge;\n};\nSegmentNodeList.prototype.getSplitCoordinates = function getSplitCoordinates () {\n    var this$1 = this;\n\n  var coordList = new CoordinateList();\n  this.addEndpoints();\n  var it = this.iterator();\n  var eiPrev = it.next();\n  while (it.hasNext()) {\n    var ei = it.next();\n    this$1.addEdgeCoordinates(eiPrev, ei, coordList);\n    eiPrev = ei;\n  }\n  return coordList.toCoordinateArray()\n};\nSegmentNodeList.prototype.addCollapsedNodes = function addCollapsedNodes () {\n    var this$1 = this;\n\n  var collapsedVertexIndexes = new ArrayList();\n  this.findCollapsesFromInsertedNodes(collapsedVertexIndexes);\n  this.findCollapsesFromExistingVertices(collapsedVertexIndexes);\n  for (var it = collapsedVertexIndexes.iterator(); it.hasNext();) {\n    var vertexIndex = it.next().intValue();\n    this$1.add(this$1._edge.getCoordinate(vertexIndex), vertexIndex);\n  }\n};\nSegmentNodeList.prototype.print = function print (out) {\n  out.println('Intersections:');\n  for (var it = this.iterator(); it.hasNext();) {\n    var ei = it.next();\n    ei.print(out);\n  }\n};\nSegmentNodeList.prototype.findCollapsesFromExistingVertices = function findCollapsesFromExistingVertices (collapsedVertexIndexes) {\n    var this$1 = this;\n\n  for (var i = 0; i < this._edge.size() - 2; i++) {\n    var p0 = this$1._edge.getCoordinate(i);\n    // const p1 = this._edge.getCoordinate(i + 1)\n    var p2 = this$1._edge.getCoordinate(i + 2);\n    if (p0.equals2D(p2)) {\n      collapsedVertexIndexes.add(new Integer(i + 1));\n    }\n  }\n};\nSegmentNodeList.prototype.addEdgeCoordinates = function addEdgeCoordinates (ei0, ei1, coordList) {\n    var this$1 = this;\n\n  // let npts = ei1.segmentIndex - ei0.segmentIndex + 2\n  var lastSegStartPt = this._edge.getCoordinate(ei1.segmentIndex);\n  var useIntPt1 = ei1.isInterior() || !ei1.coord.equals2D(lastSegStartPt);\n  // if (!useIntPt1) {\n  // npts--\n  // }\n  // const ipt = 0\n  coordList.add(new Coordinate(ei0.coord), false);\n  for (var i = ei0.segmentIndex + 1; i <= ei1.segmentIndex; i++) {\n    coordList.add(this$1._edge.getCoordinate(i));\n  }\n  if (useIntPt1) {\n    coordList.add(new Coordinate(ei1.coord));\n  }\n};\nSegmentNodeList.prototype.iterator = function iterator () {\n  return this._nodeMap.values().iterator()\n};\nSegmentNodeList.prototype.addSplitEdges = function addSplitEdges (edgeList) {\n    var this$1 = this;\n\n  this.addEndpoints();\n  this.addCollapsedNodes();\n  var it = this.iterator();\n  var eiPrev = it.next();\n  while (it.hasNext()) {\n    var ei = it.next();\n    var newEdge = this$1.createSplitEdge(eiPrev, ei);\n    edgeList.add(newEdge);\n    eiPrev = ei;\n  }\n};\nSegmentNodeList.prototype.findCollapseIndex = function findCollapseIndex (ei0, ei1, collapsedVertexIndex) {\n  if (!ei0.coord.equals2D(ei1.coord)) { return false }\n  var numVerticesBetween = ei1.segmentIndex - ei0.segmentIndex;\n  if (!ei1.isInterior()) {\n    numVerticesBetween--;\n  }\n  if (numVerticesBetween === 1) {\n    collapsedVertexIndex[0] = ei0.segmentIndex + 1;\n    return true\n  }\n  return false\n};\nSegmentNodeList.prototype.findCollapsesFromInsertedNodes = function findCollapsesFromInsertedNodes (collapsedVertexIndexes) {\n    var this$1 = this;\n\n  var collapsedVertexIndex = new Array(1).fill(null);\n  var it = this.iterator();\n  var eiPrev = it.next();\n  while (it.hasNext()) {\n    var ei = it.next();\n    var isCollapsed = this$1.findCollapseIndex(eiPrev, ei, collapsedVertexIndex);\n    if (isCollapsed) { collapsedVertexIndexes.add(new Integer(collapsedVertexIndex[0])); }\n    eiPrev = ei;\n  }\n};\nSegmentNodeList.prototype.getEdge = function getEdge () {\n  return this._edge\n};\nSegmentNodeList.prototype.addEndpoints = function addEndpoints () {\n  var maxSegIndex = this._edge.size() - 1;\n  this.add(this._edge.getCoordinate(0), 0);\n  this.add(this._edge.getCoordinate(maxSegIndex), maxSegIndex);\n};\nSegmentNodeList.prototype.createSplitEdge = function createSplitEdge (ei0, ei1) {\n    var this$1 = this;\n\n  var npts = ei1.segmentIndex - ei0.segmentIndex + 2;\n  var lastSegStartPt = this._edge.getCoordinate(ei1.segmentIndex);\n  var useIntPt1 = ei1.isInterior() || !ei1.coord.equals2D(lastSegStartPt);\n  if (!useIntPt1) {\n    npts--;\n  }\n  var pts = new Array(npts).fill(null);\n  var ipt = 0;\n  pts[ipt++] = new Coordinate(ei0.coord);\n  for (var i = ei0.segmentIndex + 1; i <= ei1.segmentIndex; i++) {\n    pts[ipt++] = this$1._edge.getCoordinate(i);\n  }\n  if (useIntPt1) { pts[ipt] = new Coordinate(ei1.coord); }\n  return new NodedSegmentString(pts, this._edge.getData())\n};\nSegmentNodeList.prototype.add = function add (intPt, segmentIndex) {\n  var eiNew = new SegmentNode(this._edge, intPt, segmentIndex, this._edge.getSegmentOctant(segmentIndex));\n  var ei = this._nodeMap.get(eiNew);\n  if (ei !== null) {\n    Assert.isTrue(ei.coord.equals2D(intPt), 'Found equal nodes with different coordinates');\n    return ei\n  }\n  this._nodeMap.put(eiNew, eiNew);\n  return eiNew\n};\nSegmentNodeList.prototype.checkSplitEdgesCorrectness = function checkSplitEdgesCorrectness (splitEdges) {\n  var edgePts = this._edge.getCoordinates();\n  var split0 = splitEdges.get(0);\n  var pt0 = split0.getCoordinate(0);\n  if (!pt0.equals2D(edgePts[0])) { throw new RuntimeException('bad split edge start point at ' + pt0) }\n  var splitn = splitEdges.get(splitEdges.size() - 1);\n  var splitnPts = splitn.getCoordinates();\n  var ptn = splitnPts[splitnPts.length - 1];\n  if (!ptn.equals2D(edgePts[edgePts.length - 1])) { throw new RuntimeException('bad split edge end point at ' + ptn) }\n};\nSegmentNodeList.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nSegmentNodeList.prototype.getClass = function getClass () {\n  return SegmentNodeList\n};\n\n\n\n// class NodeVertexIterator {\n//   constructor () {\n//     this._nodeList = null\n//     this._edge = null\n//     this._nodeIt = null\n//     this._currNode = null\n//     this._nextNode = null\n//     this._currSegIndex = 0\n//     let nodeList = arguments[0]\n//     this._nodeList = nodeList\n//     this._edge = nodeList.getEdge()\n//     this._nodeIt = nodeList.iterator()\n//     this.readNextNode()\n//   }\n//   next () {\n//     if (this._currNode === null) {\n//       this._currNode = this._nextNode\n//       this._currSegIndex = this._currNode.segmentIndex\n//       this.readNextNode()\n//       return this._currNode\n//     }\n//     if (this._nextNode === null) return null\n//     if (this._nextNode.segmentIndex === this._currNode.segmentIndex) {\n//       this._currNode = this._nextNode\n//       this._currSegIndex = this._currNode.segmentIndex\n//       this.readNextNode()\n//       return this._currNode\n//     }\n//     if (this._nextNode.segmentIndex > this._currNode.segmentIndex) {}\n//     return null\n//   }\n//   remove () {\n//     // throw new UnsupportedOperationException(this.getClass().getName())\n//   }\n//   hasNext () {\n//     if (this._nextNode === null) return false\n//     return true\n//   }\n//   readNextNode () {\n//     if (this._nodeIt.hasNext()) this._nextNode = this._nodeIt.next(); else this._nextNode = null\n//   }\n//   interfaces_ () {\n//     return [Iterator]\n//   }\n//   getClass () {\n//     return NodeVertexIterator\n//   }\n// }\n\nvar Octant = function Octant () {};\n\nOctant.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nOctant.prototype.getClass = function getClass () {\n  return Octant\n};\nOctant.octant = function octant () {\n  if (typeof arguments[0] === 'number' && typeof arguments[1] === 'number') {\n    var dx = arguments[0];\n    var dy = arguments[1];\n    if (dx === 0.0 && dy === 0.0) { throw new IllegalArgumentException('Cannot compute the octant for point ( ' + dx + ', ' + dy + ' )') }\n    var adx = Math.abs(dx);\n    var ady = Math.abs(dy);\n    if (dx >= 0) {\n      if (dy >= 0) {\n        if (adx >= ady) { return 0; } else { return 1 }\n      } else {\n        if (adx >= ady) { return 7; } else { return 6 }\n      }\n    } else {\n      if (dy >= 0) {\n        if (adx >= ady) { return 3; } else { return 2 }\n      } else {\n        if (adx >= ady) { return 4; } else { return 5 }\n      }\n    }\n  } else if (arguments[0] instanceof Coordinate && arguments[1] instanceof Coordinate) {\n    var p0 = arguments[0];\n    var p1 = arguments[1];\n    var dx$1 = p1.x - p0.x;\n    var dy$1 = p1.y - p0.y;\n    if (dx$1 === 0.0 && dy$1 === 0.0) { throw new IllegalArgumentException('Cannot compute the octant for two identical points ' + p0) }\n    return Octant.octant(dx$1, dy$1)\n  }\n};\n\nvar SegmentString = function SegmentString () {};\n\nSegmentString.prototype.getCoordinates = function getCoordinates () {};\nSegmentString.prototype.size = function size () {};\nSegmentString.prototype.getCoordinate = function getCoordinate (i) {};\nSegmentString.prototype.isClosed = function isClosed () {};\nSegmentString.prototype.setData = function setData (data) {};\nSegmentString.prototype.getData = function getData () {};\nSegmentString.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nSegmentString.prototype.getClass = function getClass () {\n  return SegmentString\n};\n\nvar NodableSegmentString = function NodableSegmentString () {};\n\nNodableSegmentString.prototype.addIntersection = function addIntersection (intPt, segmentIndex) {};\nNodableSegmentString.prototype.interfaces_ = function interfaces_ () {\n  return [SegmentString]\n};\nNodableSegmentString.prototype.getClass = function getClass () {\n  return NodableSegmentString\n};\n\nvar NodedSegmentString = function NodedSegmentString () {\n  this._nodeList = new SegmentNodeList(this);\n  this._pts = null;\n  this._data = null;\n  var pts = arguments[0];\n  var data = arguments[1];\n  this._pts = pts;\n  this._data = data;\n};\nNodedSegmentString.prototype.getCoordinates = function getCoordinates () {\n  return this._pts\n};\nNodedSegmentString.prototype.size = function size () {\n  return this._pts.length\n};\nNodedSegmentString.prototype.getCoordinate = function getCoordinate (i) {\n  return this._pts[i]\n};\nNodedSegmentString.prototype.isClosed = function isClosed () {\n  return this._pts[0].equals(this._pts[this._pts.length - 1])\n};\nNodedSegmentString.prototype.getSegmentOctant = function getSegmentOctant (index) {\n  if (index === this._pts.length - 1) { return -1 }\n  return this.safeOctant(this.getCoordinate(index), this.getCoordinate(index + 1))\n};\nNodedSegmentString.prototype.setData = function setData (data) {\n  this._data = data;\n};\nNodedSegmentString.prototype.safeOctant = function safeOctant (p0, p1) {\n  if (p0.equals2D(p1)) { return 0 }\n  return Octant.octant(p0, p1)\n};\nNodedSegmentString.prototype.getData = function getData () {\n  return this._data\n};\nNodedSegmentString.prototype.addIntersection = function addIntersection () {\n  if (arguments.length === 2) {\n    var intPt$1 = arguments[0];\n    var segmentIndex = arguments[1];\n    this.addIntersectionNode(intPt$1, segmentIndex);\n  } else if (arguments.length === 4) {\n    var li = arguments[0];\n    var segmentIndex$1 = arguments[1];\n    // const geomIndex = arguments[2]\n    var intIndex = arguments[3];\n    var intPt = new Coordinate(li.getIntersection(intIndex));\n    this.addIntersection(intPt, segmentIndex$1);\n  }\n};\nNodedSegmentString.prototype.toString = function toString () {\n  return WKTWriter.toLineString(new CoordinateArraySequence(this._pts))\n};\nNodedSegmentString.prototype.getNodeList = function getNodeList () {\n  return this._nodeList\n};\nNodedSegmentString.prototype.addIntersectionNode = function addIntersectionNode (intPt, segmentIndex) {\n  var normalizedSegmentIndex = segmentIndex;\n  var nextSegIndex = normalizedSegmentIndex + 1;\n  if (nextSegIndex < this._pts.length) {\n    var nextPt = this._pts[nextSegIndex];\n    if (intPt.equals2D(nextPt)) {\n      normalizedSegmentIndex = nextSegIndex;\n    }\n  }\n  var ei = this._nodeList.add(intPt, normalizedSegmentIndex);\n  return ei\n};\nNodedSegmentString.prototype.addIntersections = function addIntersections (li, segmentIndex, geomIndex) {\n    var this$1 = this;\n\n  for (var i = 0; i < li.getIntersectionNum(); i++) {\n    this$1.addIntersection(li, segmentIndex, geomIndex, i);\n  }\n};\nNodedSegmentString.prototype.interfaces_ = function interfaces_ () {\n  return [NodableSegmentString]\n};\nNodedSegmentString.prototype.getClass = function getClass () {\n  return NodedSegmentString\n};\nNodedSegmentString.getNodedSubstrings = function getNodedSubstrings () {\n  if (arguments.length === 1) {\n    var segStrings = arguments[0];\n    var resultEdgelist = new ArrayList();\n    NodedSegmentString.getNodedSubstrings(segStrings, resultEdgelist);\n    return resultEdgelist\n  } else if (arguments.length === 2) {\n    var segStrings$1 = arguments[0];\n    var resultEdgelist$1 = arguments[1];\n    for (var i = segStrings$1.iterator(); i.hasNext();) {\n      var ss = i.next();\n      ss.getNodeList().addSplitEdges(resultEdgelist$1);\n    }\n  }\n};\n\nvar LineSegment = function LineSegment () {\n  this.p0 = null;\n  this.p1 = null;\n  if (arguments.length === 0) {\n    this.p0 = new Coordinate();\n    this.p1 = new Coordinate();\n  } else if (arguments.length === 1) {\n    var ls = arguments[0];\n    this.p0 = new Coordinate(ls.p0);\n    this.p1 = new Coordinate(ls.p1);\n  } else if (arguments.length === 2) {\n    this.p0 = arguments[0];\n    this.p1 = arguments[1];\n  } else if (arguments.length === 4) {\n    var x0 = arguments[0];\n    var y0 = arguments[1];\n    var x1 = arguments[2];\n    var y1 = arguments[3];\n    this.p0 = new Coordinate(x0, y0);\n    this.p1 = new Coordinate(x1, y1);\n  }\n};\n\nvar staticAccessors$24 = { serialVersionUID: { configurable: true } };\nLineSegment.prototype.minX = function minX () {\n  return Math.min(this.p0.x, this.p1.x)\n};\nLineSegment.prototype.orientationIndex = function orientationIndex () {\n  if (arguments[0] instanceof LineSegment) {\n    var seg = arguments[0];\n    var orient0 = CGAlgorithms.orientationIndex(this.p0, this.p1, seg.p0);\n    var orient1 = CGAlgorithms.orientationIndex(this.p0, this.p1, seg.p1);\n    if (orient0 >= 0 && orient1 >= 0) { return Math.max(orient0, orient1) }\n    if (orient0 <= 0 && orient1 <= 0) { return Math.max(orient0, orient1) }\n    return 0\n  } else if (arguments[0] instanceof Coordinate) {\n    var p = arguments[0];\n    return CGAlgorithms.orientationIndex(this.p0, this.p1, p)\n  }\n};\nLineSegment.prototype.toGeometry = function toGeometry (geomFactory) {\n  return geomFactory.createLineString([this.p0, this.p1])\n};\nLineSegment.prototype.isVertical = function isVertical () {\n  return this.p0.x === this.p1.x\n};\nLineSegment.prototype.equals = function equals (o) {\n  if (!(o instanceof LineSegment)) {\n    return false\n  }\n  var other = o;\n  return this.p0.equals(other.p0) && this.p1.equals(other.p1)\n};\nLineSegment.prototype.intersection = function intersection (line) {\n  var li = new RobustLineIntersector();\n  li.computeIntersection(this.p0, this.p1, line.p0, line.p1);\n  if (li.hasIntersection()) { return li.getIntersection(0) }\n  return null\n};\nLineSegment.prototype.project = function project () {\n  if (arguments[0] instanceof Coordinate) {\n    var p = arguments[0];\n    if (p.equals(this.p0) || p.equals(this.p1)) { return new Coordinate(p) }\n    var r = this.projectionFactor(p);\n    var coord = new Coordinate();\n    coord.x = this.p0.x + r * (this.p1.x - this.p0.x);\n    coord.y = this.p0.y + r * (this.p1.y - this.p0.y);\n    return coord\n  } else if (arguments[0] instanceof LineSegment) {\n    var seg = arguments[0];\n    var pf0 = this.projectionFactor(seg.p0);\n    var pf1 = this.projectionFactor(seg.p1);\n    if (pf0 >= 1.0 && pf1 >= 1.0) { return null }\n    if (pf0 <= 0.0 && pf1 <= 0.0) { return null }\n    var newp0 = this.project(seg.p0);\n    if (pf0 < 0.0) { newp0 = this.p0; }\n    if (pf0 > 1.0) { newp0 = this.p1; }\n    var newp1 = this.project(seg.p1);\n    if (pf1 < 0.0) { newp1 = this.p0; }\n    if (pf1 > 1.0) { newp1 = this.p1; }\n    return new LineSegment(newp0, newp1)\n  }\n};\nLineSegment.prototype.normalize = function normalize () {\n  if (this.p1.compareTo(this.p0) < 0) { this.reverse(); }\n};\nLineSegment.prototype.angle = function angle () {\n  return Math.atan2(this.p1.y - this.p0.y, this.p1.x - this.p0.x)\n};\nLineSegment.prototype.getCoordinate = function getCoordinate (i) {\n  if (i === 0) { return this.p0 }\n  return this.p1\n};\nLineSegment.prototype.distancePerpendicular = function distancePerpendicular (p) {\n  return CGAlgorithms.distancePointLinePerpendicular(p, this.p0, this.p1)\n};\nLineSegment.prototype.minY = function minY () {\n  return Math.min(this.p0.y, this.p1.y)\n};\nLineSegment.prototype.midPoint = function midPoint () {\n  return LineSegment.midPoint(this.p0, this.p1)\n};\nLineSegment.prototype.projectionFactor = function projectionFactor (p) {\n  if (p.equals(this.p0)) { return 0.0 }\n  if (p.equals(this.p1)) { return 1.0 }\n  var dx = this.p1.x - this.p0.x;\n  var dy = this.p1.y - this.p0.y;\n  var len = dx * dx + dy * dy;\n  if (len <= 0.0) { return Double.NaN }\n  var r = ((p.x - this.p0.x) * dx + (p.y - this.p0.y) * dy) / len;\n  return r\n};\nLineSegment.prototype.closestPoints = function closestPoints (line) {\n  var intPt = this.intersection(line);\n  if (intPt !== null) {\n    return [intPt, intPt]\n  }\n  var closestPt = new Array(2).fill(null);\n  var minDistance = Double.MAX_VALUE;\n  var dist = null;\n  var close00 = this.closestPoint(line.p0);\n  minDistance = close00.distance(line.p0);\n  closestPt[0] = close00;\n  closestPt[1] = line.p0;\n  var close01 = this.closestPoint(line.p1);\n  dist = close01.distance(line.p1);\n  if (dist < minDistance) {\n    minDistance = dist;\n    closestPt[0] = close01;\n    closestPt[1] = line.p1;\n  }\n  var close10 = line.closestPoint(this.p0);\n  dist = close10.distance(this.p0);\n  if (dist < minDistance) {\n    minDistance = dist;\n    closestPt[0] = this.p0;\n    closestPt[1] = close10;\n  }\n  var close11 = line.closestPoint(this.p1);\n  dist = close11.distance(this.p1);\n  if (dist < minDistance) {\n    minDistance = dist;\n    closestPt[0] = this.p1;\n    closestPt[1] = close11;\n  }\n  return closestPt\n};\nLineSegment.prototype.closestPoint = function closestPoint (p) {\n  var factor = this.projectionFactor(p);\n  if (factor > 0 && factor < 1) {\n    return this.project(p)\n  }\n  var dist0 = this.p0.distance(p);\n  var dist1 = this.p1.distance(p);\n  if (dist0 < dist1) { return this.p0 }\n  return this.p1\n};\nLineSegment.prototype.maxX = function maxX () {\n  return Math.max(this.p0.x, this.p1.x)\n};\nLineSegment.prototype.getLength = function getLength () {\n  return this.p0.distance(this.p1)\n};\nLineSegment.prototype.compareTo = function compareTo (o) {\n  var other = o;\n  var comp0 = this.p0.compareTo(other.p0);\n  if (comp0 !== 0) { return comp0 }\n  return this.p1.compareTo(other.p1)\n};\nLineSegment.prototype.reverse = function reverse () {\n  var temp = this.p0;\n  this.p0 = this.p1;\n  this.p1 = temp;\n};\nLineSegment.prototype.equalsTopo = function equalsTopo (other) {\n  return this.p0.equals(other.p0) &&\n        (this.p1.equals(other.p1) || this.p0.equals(other.p1)) &&\n         this.p1.equals(other.p0)\n};\nLineSegment.prototype.lineIntersection = function lineIntersection (line) {\n  try {\n    var intPt = HCoordinate.intersection(this.p0, this.p1, line.p0, line.p1);\n    return intPt\n  } catch (ex) {\n    if (ex instanceof NotRepresentableException) {} else { throw ex }\n  } finally {}\n  return null\n};\nLineSegment.prototype.maxY = function maxY () {\n  return Math.max(this.p0.y, this.p1.y)\n};\nLineSegment.prototype.pointAlongOffset = function pointAlongOffset (segmentLengthFraction, offsetDistance) {\n  var segx = this.p0.x + segmentLengthFraction * (this.p1.x - this.p0.x);\n  var segy = this.p0.y + segmentLengthFraction * (this.p1.y - this.p0.y);\n  var dx = this.p1.x - this.p0.x;\n  var dy = this.p1.y - this.p0.y;\n  var len = Math.sqrt(dx * dx + dy * dy);\n  var ux = 0.0;\n  var uy = 0.0;\n  if (offsetDistance !== 0.0) {\n    if (len <= 0.0) { throw new Error('Cannot compute offset from zero-length line segment') }\n    ux = offsetDistance * dx / len;\n    uy = offsetDistance * dy / len;\n  }\n  var offsetx = segx - uy;\n  var offsety = segy + ux;\n  var coord = new Coordinate(offsetx, offsety);\n  return coord\n};\nLineSegment.prototype.setCoordinates = function setCoordinates () {\n  if (arguments.length === 1) {\n    var ls = arguments[0];\n    this.setCoordinates(ls.p0, ls.p1);\n  } else if (arguments.length === 2) {\n    var p0 = arguments[0];\n    var p1 = arguments[1];\n    this.p0.x = p0.x;\n    this.p0.y = p0.y;\n    this.p1.x = p1.x;\n    this.p1.y = p1.y;\n  }\n};\nLineSegment.prototype.segmentFraction = function segmentFraction (inputPt) {\n  var segFrac = this.projectionFactor(inputPt);\n  if (segFrac < 0.0) { segFrac = 0.0; } else if (segFrac > 1.0 || Double.isNaN(segFrac)) { segFrac = 1.0; }\n  return segFrac\n};\nLineSegment.prototype.toString = function toString () {\n  return 'LINESTRING( ' + this.p0.x + ' ' + this.p0.y + ', ' + this.p1.x + ' ' + this.p1.y + ')'\n};\nLineSegment.prototype.isHorizontal = function isHorizontal () {\n  return this.p0.y === this.p1.y\n};\nLineSegment.prototype.distance = function distance () {\n  if (arguments[0] instanceof LineSegment) {\n    var ls = arguments[0];\n    return CGAlgorithms.distanceLineLine(this.p0, this.p1, ls.p0, ls.p1)\n  } else if (arguments[0] instanceof Coordinate) {\n    var p = arguments[0];\n    return CGAlgorithms.distancePointLine(p, this.p0, this.p1)\n  }\n};\nLineSegment.prototype.pointAlong = function pointAlong (segmentLengthFraction) {\n  var coord = new Coordinate();\n  coord.x = this.p0.x + segmentLengthFraction * (this.p1.x - this.p0.x);\n  coord.y = this.p0.y + segmentLengthFraction * (this.p1.y - this.p0.y);\n  return coord\n};\nLineSegment.prototype.hashCode = function hashCode () {\n  var bits0 = Double.doubleToLongBits(this.p0.x);\n  bits0 ^= Double.doubleToLongBits(this.p0.y) * 31;\n  var hash0 = Math.trunc(bits0) ^ Math.trunc(bits0 >> 32);\n  var bits1 = Double.doubleToLongBits(this.p1.x);\n  bits1 ^= Double.doubleToLongBits(this.p1.y) * 31;\n  var hash1 = Math.trunc(bits1) ^ Math.trunc(bits1 >> 32);\n  return hash0 ^ hash1\n};\nLineSegment.prototype.interfaces_ = function interfaces_ () {\n  return [Comparable, Serializable]\n};\nLineSegment.prototype.getClass = function getClass () {\n  return LineSegment\n};\nLineSegment.midPoint = function midPoint (p0, p1) {\n  return new Coordinate((p0.x + p1.x) / 2, (p0.y + p1.y) / 2)\n};\nstaticAccessors$24.serialVersionUID.get = function () { return 3252005833466256227 };\n\nObject.defineProperties( LineSegment, staticAccessors$24 );\n\nvar MonotoneChainOverlapAction = function MonotoneChainOverlapAction () {\n  this.tempEnv1 = new Envelope();\n  this.tempEnv2 = new Envelope();\n  this._overlapSeg1 = new LineSegment();\n  this._overlapSeg2 = new LineSegment();\n};\nMonotoneChainOverlapAction.prototype.overlap = function overlap () {\n  if (arguments.length === 2) {\n    // const seg1 = arguments[0]\n    // const seg2 = arguments[1]\n  } else if (arguments.length === 4) {\n    var mc1 = arguments[0];\n    var start1 = arguments[1];\n    var mc2 = arguments[2];\n    var start2 = arguments[3];\n    mc1.getLineSegment(start1, this._overlapSeg1);\n    mc2.getLineSegment(start2, this._overlapSeg2);\n    this.overlap(this._overlapSeg1, this._overlapSeg2);\n  }\n};\nMonotoneChainOverlapAction.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nMonotoneChainOverlapAction.prototype.getClass = function getClass () {\n  return MonotoneChainOverlapAction\n};\n\nvar MonotoneChain = function MonotoneChain () {\n  this._pts = null;\n  this._start = null;\n  this._end = null;\n  this._env = null;\n  this._context = null;\n  this._id = null;\n  var pts = arguments[0];\n  var start = arguments[1];\n  var end = arguments[2];\n  var context = arguments[3];\n  this._pts = pts;\n  this._start = start;\n  this._end = end;\n  this._context = context;\n};\nMonotoneChain.prototype.getLineSegment = function getLineSegment (index, ls) {\n  ls.p0 = this._pts[index];\n  ls.p1 = this._pts[index + 1];\n};\nMonotoneChain.prototype.computeSelect = function computeSelect (searchEnv, start0, end0, mcs) {\n  var p0 = this._pts[start0];\n  var p1 = this._pts[end0];\n  mcs.tempEnv1.init(p0, p1);\n  if (end0 - start0 === 1) {\n    mcs.select(this, start0);\n    return null\n  }\n  if (!searchEnv.intersects(mcs.tempEnv1)) { return null }\n  var mid = Math.trunc((start0 + end0) / 2);\n  if (start0 < mid) {\n    this.computeSelect(searchEnv, start0, mid, mcs);\n  }\n  if (mid < end0) {\n    this.computeSelect(searchEnv, mid, end0, mcs);\n  }\n};\nMonotoneChain.prototype.getCoordinates = function getCoordinates () {\n    var this$1 = this;\n\n  var coord = new Array(this._end - this._start + 1).fill(null);\n  var index = 0;\n  for (var i = this._start; i <= this._end; i++) {\n    coord[index++] = this$1._pts[i];\n  }\n  return coord\n};\nMonotoneChain.prototype.computeOverlaps = function computeOverlaps (mc, mco) {\n  this.computeOverlapsInternal(this._start, this._end, mc, mc._start, mc._end, mco);\n};\nMonotoneChain.prototype.setId = function setId (id) {\n  this._id = id;\n};\nMonotoneChain.prototype.select = function select (searchEnv, mcs) {\n  this.computeSelect(searchEnv, this._start, this._end, mcs);\n};\nMonotoneChain.prototype.getEnvelope = function getEnvelope () {\n  if (this._env === null) {\n    var p0 = this._pts[this._start];\n    var p1 = this._pts[this._end];\n    this._env = new Envelope(p0, p1);\n  }\n  return this._env\n};\nMonotoneChain.prototype.getEndIndex = function getEndIndex () {\n  return this._end\n};\nMonotoneChain.prototype.getStartIndex = function getStartIndex () {\n  return this._start\n};\nMonotoneChain.prototype.getContext = function getContext () {\n  return this._context\n};\nMonotoneChain.prototype.getId = function getId () {\n  return this._id\n};\nMonotoneChain.prototype.computeOverlapsInternal = function computeOverlapsInternal (start0, end0, mc, start1, end1, mco) {\n  var p00 = this._pts[start0];\n  var p01 = this._pts[end0];\n  var p10 = mc._pts[start1];\n  var p11 = mc._pts[end1];\n  if (end0 - start0 === 1 && end1 - start1 === 1) {\n    mco.overlap(this, start0, mc, start1);\n    return null\n  }\n  mco.tempEnv1.init(p00, p01);\n  mco.tempEnv2.init(p10, p11);\n  if (!mco.tempEnv1.intersects(mco.tempEnv2)) { return null }\n  var mid0 = Math.trunc((start0 + end0) / 2);\n  var mid1 = Math.trunc((start1 + end1) / 2);\n  if (start0 < mid0) {\n    if (start1 < mid1) { this.computeOverlapsInternal(start0, mid0, mc, start1, mid1, mco); }\n    if (mid1 < end1) { this.computeOverlapsInternal(start0, mid0, mc, mid1, end1, mco); }\n  }\n  if (mid0 < end0) {\n    if (start1 < mid1) { this.computeOverlapsInternal(mid0, end0, mc, start1, mid1, mco); }\n    if (mid1 < end1) { this.computeOverlapsInternal(mid0, end0, mc, mid1, end1, mco); }\n  }\n};\nMonotoneChain.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nMonotoneChain.prototype.getClass = function getClass () {\n  return MonotoneChain\n};\n\nvar MonotoneChainBuilder = function MonotoneChainBuilder () {};\n\nMonotoneChainBuilder.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nMonotoneChainBuilder.prototype.getClass = function getClass () {\n  return MonotoneChainBuilder\n};\nMonotoneChainBuilder.getChainStartIndices = function getChainStartIndices (pts) {\n  var start = 0;\n  var startIndexList = new ArrayList();\n  startIndexList.add(new Integer(start));\n  do {\n    var last = MonotoneChainBuilder.findChainEnd(pts, start);\n    startIndexList.add(new Integer(last));\n    start = last;\n  } while (start < pts.length - 1)\n  var startIndex = MonotoneChainBuilder.toIntArray(startIndexList);\n  return startIndex\n};\nMonotoneChainBuilder.findChainEnd = function findChainEnd (pts, start) {\n  var safeStart = start;\n  while (safeStart < pts.length - 1 && pts[safeStart].equals2D(pts[safeStart + 1])) {\n    safeStart++;\n  }\n  if (safeStart >= pts.length - 1) {\n    return pts.length - 1\n  }\n  var chainQuad = Quadrant.quadrant(pts[safeStart], pts[safeStart + 1]);\n  var last = start + 1;\n  while (last < pts.length) {\n    if (!pts[last - 1].equals2D(pts[last])) {\n      var quad = Quadrant.quadrant(pts[last - 1], pts[last]);\n      if (quad !== chainQuad) { break }\n    }\n    last++;\n  }\n  return last - 1\n};\nMonotoneChainBuilder.getChains = function getChains () {\n  if (arguments.length === 1) {\n    var pts = arguments[0];\n    return MonotoneChainBuilder.getChains(pts, null)\n  } else if (arguments.length === 2) {\n    var pts$1 = arguments[0];\n    var context = arguments[1];\n    var mcList = new ArrayList();\n    var startIndex = MonotoneChainBuilder.getChainStartIndices(pts$1);\n    for (var i = 0; i < startIndex.length - 1; i++) {\n      var mc = new MonotoneChain(pts$1, startIndex[i], startIndex[i + 1], context);\n      mcList.add(mc);\n    }\n    return mcList\n  }\n};\nMonotoneChainBuilder.toIntArray = function toIntArray (list) {\n  var array = new Array(list.size()).fill(null);\n  for (var i = 0; i < array.length; i++) {\n    array[i] = list.get(i).intValue();\n  }\n  return array\n};\n\nvar Noder = function Noder () {};\n\nNoder.prototype.computeNodes = function computeNodes (segStrings) {};\nNoder.prototype.getNodedSubstrings = function getNodedSubstrings () {};\nNoder.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nNoder.prototype.getClass = function getClass () {\n  return Noder\n};\n\nvar SinglePassNoder = function SinglePassNoder () {\n  this._segInt = null;\n  if (arguments.length === 0) {} else if (arguments.length === 1) {\n    var segInt = arguments[0];\n    this.setSegmentIntersector(segInt);\n  }\n};\nSinglePassNoder.prototype.setSegmentIntersector = function setSegmentIntersector (segInt) {\n  this._segInt = segInt;\n};\nSinglePassNoder.prototype.interfaces_ = function interfaces_ () {\n  return [Noder]\n};\nSinglePassNoder.prototype.getClass = function getClass () {\n  return SinglePassNoder\n};\n\nvar MCIndexNoder = (function (SinglePassNoder$$1) {\n  function MCIndexNoder (si) {\n    if (si) { SinglePassNoder$$1.call(this, si); }\n    else { SinglePassNoder$$1.call(this); }\n    this._monoChains = new ArrayList();\n    this._index = new STRtree();\n    this._idCounter = 0;\n    this._nodedSegStrings = null;\n    this._nOverlaps = 0;\n  }\n\n  if ( SinglePassNoder$$1 ) MCIndexNoder.__proto__ = SinglePassNoder$$1;\n  MCIndexNoder.prototype = Object.create( SinglePassNoder$$1 && SinglePassNoder$$1.prototype );\n  MCIndexNoder.prototype.constructor = MCIndexNoder;\n\n  var staticAccessors = { SegmentOverlapAction: { configurable: true } };\n  MCIndexNoder.prototype.getMonotoneChains = function getMonotoneChains () {\n    return this._monoChains\n  };\n  MCIndexNoder.prototype.getNodedSubstrings = function getNodedSubstrings () {\n    return NodedSegmentString.getNodedSubstrings(this._nodedSegStrings)\n  };\n  MCIndexNoder.prototype.getIndex = function getIndex () {\n    return this._index\n  };\n  MCIndexNoder.prototype.add = function add (segStr) {\n    var this$1 = this;\n\n    var segChains = MonotoneChainBuilder.getChains(segStr.getCoordinates(), segStr);\n    for (var i = segChains.iterator(); i.hasNext();) {\n      var mc = i.next();\n      mc.setId(this$1._idCounter++);\n      this$1._index.insert(mc.getEnvelope(), mc);\n      this$1._monoChains.add(mc);\n    }\n  };\n  MCIndexNoder.prototype.computeNodes = function computeNodes (inputSegStrings) {\n    var this$1 = this;\n\n    this._nodedSegStrings = inputSegStrings;\n    for (var i = inputSegStrings.iterator(); i.hasNext();) {\n      this$1.add(i.next());\n    }\n    this.intersectChains();\n  };\n  MCIndexNoder.prototype.intersectChains = function intersectChains () {\n    var this$1 = this;\n\n    var overlapAction = new SegmentOverlapAction(this._segInt);\n    for (var i = this._monoChains.iterator(); i.hasNext();) {\n      var queryChain = i.next();\n      var overlapChains = this$1._index.query(queryChain.getEnvelope());\n      for (var j = overlapChains.iterator(); j.hasNext();) {\n        var testChain = j.next();\n        if (testChain.getId() > queryChain.getId()) {\n          queryChain.computeOverlaps(testChain, overlapAction);\n          this$1._nOverlaps++;\n        }\n        if (this$1._segInt.isDone()) { return null }\n      }\n    }\n  };\n  MCIndexNoder.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  MCIndexNoder.prototype.getClass = function getClass () {\n    return MCIndexNoder\n  };\n  staticAccessors.SegmentOverlapAction.get = function () { return SegmentOverlapAction };\n\n  Object.defineProperties( MCIndexNoder, staticAccessors );\n\n  return MCIndexNoder;\n}(SinglePassNoder));\n\nvar SegmentOverlapAction = (function (MonotoneChainOverlapAction$$1) {\n  function SegmentOverlapAction () {\n    MonotoneChainOverlapAction$$1.call(this);\n    this._si = null;\n    var si = arguments[0];\n    this._si = si;\n  }\n\n  if ( MonotoneChainOverlapAction$$1 ) SegmentOverlapAction.__proto__ = MonotoneChainOverlapAction$$1;\n  SegmentOverlapAction.prototype = Object.create( MonotoneChainOverlapAction$$1 && MonotoneChainOverlapAction$$1.prototype );\n  SegmentOverlapAction.prototype.constructor = SegmentOverlapAction;\n  SegmentOverlapAction.prototype.overlap = function overlap () {\n    if (arguments.length === 4) {\n      var mc1 = arguments[0];\n      var start1 = arguments[1];\n      var mc2 = arguments[2];\n      var start2 = arguments[3];\n      var ss1 = mc1.getContext();\n      var ss2 = mc2.getContext();\n      this._si.processIntersections(ss1, start1, ss2, start2);\n    } else { return MonotoneChainOverlapAction$$1.prototype.overlap.apply(this, arguments) }\n  };\n  SegmentOverlapAction.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  SegmentOverlapAction.prototype.getClass = function getClass () {\n    return SegmentOverlapAction\n  };\n\n  return SegmentOverlapAction;\n}(MonotoneChainOverlapAction));\n\nvar BufferParameters = function BufferParameters () {\n  this._quadrantSegments = BufferParameters.DEFAULT_QUADRANT_SEGMENTS;\n  this._endCapStyle = BufferParameters.CAP_ROUND;\n  this._joinStyle = BufferParameters.JOIN_ROUND;\n  this._mitreLimit = BufferParameters.DEFAULT_MITRE_LIMIT;\n  this._isSingleSided = false;\n  this._simplifyFactor = BufferParameters.DEFAULT_SIMPLIFY_FACTOR;\n\n  if (arguments.length === 0) {} else if (arguments.length === 1) {\n    var quadrantSegments = arguments[0];\n    this.setQuadrantSegments(quadrantSegments);\n  } else if (arguments.length === 2) {\n    var quadrantSegments$1 = arguments[0];\n    var endCapStyle = arguments[1];\n    this.setQuadrantSegments(quadrantSegments$1);\n    this.setEndCapStyle(endCapStyle);\n  } else if (arguments.length === 4) {\n    var quadrantSegments$2 = arguments[0];\n    var endCapStyle$1 = arguments[1];\n    var joinStyle = arguments[2];\n    var mitreLimit = arguments[3];\n    this.setQuadrantSegments(quadrantSegments$2);\n    this.setEndCapStyle(endCapStyle$1);\n    this.setJoinStyle(joinStyle);\n    this.setMitreLimit(mitreLimit);\n  }\n};\n\nvar staticAccessors$25 = { CAP_ROUND: { configurable: true },CAP_FLAT: { configurable: true },CAP_SQUARE: { configurable: true },JOIN_ROUND: { configurable: true },JOIN_MITRE: { configurable: true },JOIN_BEVEL: { configurable: true },DEFAULT_QUADRANT_SEGMENTS: { configurable: true },DEFAULT_MITRE_LIMIT: { configurable: true },DEFAULT_SIMPLIFY_FACTOR: { configurable: true } };\nBufferParameters.prototype.getEndCapStyle = function getEndCapStyle () {\n  return this._endCapStyle\n};\nBufferParameters.prototype.isSingleSided = function isSingleSided () {\n  return this._isSingleSided\n};\nBufferParameters.prototype.setQuadrantSegments = function setQuadrantSegments (quadSegs) {\n  this._quadrantSegments = quadSegs;\n  if (this._quadrantSegments === 0) { this._joinStyle = BufferParameters.JOIN_BEVEL; }\n  if (this._quadrantSegments < 0) {\n    this._joinStyle = BufferParameters.JOIN_MITRE;\n    this._mitreLimit = Math.abs(this._quadrantSegments);\n  }\n  if (quadSegs <= 0) {\n    this._quadrantSegments = 1;\n  }\n  if (this._joinStyle !== BufferParameters.JOIN_ROUND) {\n    this._quadrantSegments = BufferParameters.DEFAULT_QUADRANT_SEGMENTS;\n  }\n};\nBufferParameters.prototype.getJoinStyle = function getJoinStyle () {\n  return this._joinStyle\n};\nBufferParameters.prototype.setJoinStyle = function setJoinStyle (joinStyle) {\n  this._joinStyle = joinStyle;\n};\nBufferParameters.prototype.setSimplifyFactor = function setSimplifyFactor (simplifyFactor) {\n  this._simplifyFactor = simplifyFactor < 0 ? 0 : simplifyFactor;\n};\nBufferParameters.prototype.getSimplifyFactor = function getSimplifyFactor () {\n  return this._simplifyFactor\n};\nBufferParameters.prototype.getQuadrantSegments = function getQuadrantSegments () {\n  return this._quadrantSegments\n};\nBufferParameters.prototype.setEndCapStyle = function setEndCapStyle (endCapStyle) {\n  this._endCapStyle = endCapStyle;\n};\nBufferParameters.prototype.getMitreLimit = function getMitreLimit () {\n  return this._mitreLimit\n};\nBufferParameters.prototype.setMitreLimit = function setMitreLimit (mitreLimit) {\n  this._mitreLimit = mitreLimit;\n};\nBufferParameters.prototype.setSingleSided = function setSingleSided (isSingleSided) {\n  this._isSingleSided = isSingleSided;\n};\nBufferParameters.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nBufferParameters.prototype.getClass = function getClass () {\n  return BufferParameters\n};\nBufferParameters.bufferDistanceError = function bufferDistanceError (quadSegs) {\n  var alpha = Math.PI / 2.0 / quadSegs;\n  return 1 - Math.cos(alpha / 2.0)\n};\nstaticAccessors$25.CAP_ROUND.get = function () { return 1 };\nstaticAccessors$25.CAP_FLAT.get = function () { return 2 };\nstaticAccessors$25.CAP_SQUARE.get = function () { return 3 };\nstaticAccessors$25.JOIN_ROUND.get = function () { return 1 };\nstaticAccessors$25.JOIN_MITRE.get = function () { return 2 };\nstaticAccessors$25.JOIN_BEVEL.get = function () { return 3 };\nstaticAccessors$25.DEFAULT_QUADRANT_SEGMENTS.get = function () { return 8 };\nstaticAccessors$25.DEFAULT_MITRE_LIMIT.get = function () { return 5.0 };\nstaticAccessors$25.DEFAULT_SIMPLIFY_FACTOR.get = function () { return 0.01 };\n\nObject.defineProperties( BufferParameters, staticAccessors$25 );\n\nvar BufferInputLineSimplifier = function BufferInputLineSimplifier (inputLine) {\n  this._distanceTol = null;\n  this._isDeleted = null;\n  this._angleOrientation = CGAlgorithms.COUNTERCLOCKWISE;\n  this._inputLine = inputLine || null;\n};\n\nvar staticAccessors$26 = { INIT: { configurable: true },DELETE: { configurable: true },KEEP: { configurable: true },NUM_PTS_TO_CHECK: { configurable: true } };\nBufferInputLineSimplifier.prototype.isDeletable = function isDeletable (i0, i1, i2, distanceTol) {\n  var p0 = this._inputLine[i0];\n  var p1 = this._inputLine[i1];\n  var p2 = this._inputLine[i2];\n  if (!this.isConcave(p0, p1, p2)) { return false }\n  if (!this.isShallow(p0, p1, p2, distanceTol)) { return false }\n  return this.isShallowSampled(p0, p1, i0, i2, distanceTol)\n};\nBufferInputLineSimplifier.prototype.deleteShallowConcavities = function deleteShallowConcavities () {\n    var this$1 = this;\n\n  var index = 1;\n  // const maxIndex = this._inputLine.length - 1\n  var midIndex = this.findNextNonDeletedIndex(index);\n  var lastIndex = this.findNextNonDeletedIndex(midIndex);\n  var isChanged = false;\n  while (lastIndex < this._inputLine.length) {\n    var isMiddleVertexDeleted = false;\n    if (this$1.isDeletable(index, midIndex, lastIndex, this$1._distanceTol)) {\n      this$1._isDeleted[midIndex] = BufferInputLineSimplifier.DELETE;\n      isMiddleVertexDeleted = true;\n      isChanged = true;\n    }\n    if (isMiddleVertexDeleted) { index = lastIndex; } else { index = midIndex; }\n    midIndex = this$1.findNextNonDeletedIndex(index);\n    lastIndex = this$1.findNextNonDeletedIndex(midIndex);\n  }\n  return isChanged\n};\nBufferInputLineSimplifier.prototype.isShallowConcavity = function isShallowConcavity (p0, p1, p2, distanceTol) {\n  var orientation = CGAlgorithms.computeOrientation(p0, p1, p2);\n  var isAngleToSimplify = orientation === this._angleOrientation;\n  if (!isAngleToSimplify) { return false }\n  var dist = CGAlgorithms.distancePointLine(p1, p0, p2);\n  return dist < distanceTol\n};\nBufferInputLineSimplifier.prototype.isShallowSampled = function isShallowSampled (p0, p2, i0, i2, distanceTol) {\n    var this$1 = this;\n\n  var inc = Math.trunc((i2 - i0) / BufferInputLineSimplifier.NUM_PTS_TO_CHECK);\n  if (inc <= 0) { inc = 1; }\n  for (var i = i0; i < i2; i += inc) {\n    if (!this$1.isShallow(p0, p2, this$1._inputLine[i], distanceTol)) { return false }\n  }\n  return true\n};\nBufferInputLineSimplifier.prototype.isConcave = function isConcave (p0, p1, p2) {\n  var orientation = CGAlgorithms.computeOrientation(p0, p1, p2);\n  var isConcave = orientation === this._angleOrientation;\n  return isConcave\n};\nBufferInputLineSimplifier.prototype.simplify = function simplify (distanceTol) {\n    var this$1 = this;\n\n  this._distanceTol = Math.abs(distanceTol);\n  if (distanceTol < 0) { this._angleOrientation = CGAlgorithms.CLOCKWISE; }\n  this._isDeleted = new Array(this._inputLine.length).fill(null);\n  var isChanged = false;\n  do {\n    isChanged = this$1.deleteShallowConcavities();\n  } while (isChanged)\n  return this.collapseLine()\n};\nBufferInputLineSimplifier.prototype.findNextNonDeletedIndex = function findNextNonDeletedIndex (index) {\n  var next = index + 1;\n  while (next < this._inputLine.length && this._isDeleted[next] === BufferInputLineSimplifier.DELETE) { next++; }\n  return next\n};\nBufferInputLineSimplifier.prototype.isShallow = function isShallow (p0, p1, p2, distanceTol) {\n  var dist = CGAlgorithms.distancePointLine(p1, p0, p2);\n  return dist < distanceTol\n};\nBufferInputLineSimplifier.prototype.collapseLine = function collapseLine () {\n    var this$1 = this;\n\n  var coordList = new CoordinateList();\n  for (var i = 0; i < this._inputLine.length; i++) {\n    if (this$1._isDeleted[i] !== BufferInputLineSimplifier.DELETE) { coordList.add(this$1._inputLine[i]); }\n  }\n  return coordList.toCoordinateArray()\n};\nBufferInputLineSimplifier.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nBufferInputLineSimplifier.prototype.getClass = function getClass () {\n  return BufferInputLineSimplifier\n};\nBufferInputLineSimplifier.simplify = function simplify (inputLine, distanceTol) {\n  var simp = new BufferInputLineSimplifier(inputLine);\n  return simp.simplify(distanceTol)\n};\nstaticAccessors$26.INIT.get = function () { return 0 };\nstaticAccessors$26.DELETE.get = function () { return 1 };\nstaticAccessors$26.KEEP.get = function () { return 1 };\nstaticAccessors$26.NUM_PTS_TO_CHECK.get = function () { return 10 };\n\nObject.defineProperties( BufferInputLineSimplifier, staticAccessors$26 );\n\nvar OffsetSegmentString = function OffsetSegmentString () {\n  this._ptList = null;\n  this._precisionModel = null;\n  this._minimimVertexDistance = 0.0;\n  this._ptList = new ArrayList();\n};\n\nvar staticAccessors$28 = { COORDINATE_ARRAY_TYPE: { configurable: true } };\nOffsetSegmentString.prototype.getCoordinates = function getCoordinates () {\n  var coord = this._ptList.toArray(OffsetSegmentString.COORDINATE_ARRAY_TYPE);\n  return coord\n};\nOffsetSegmentString.prototype.setPrecisionModel = function setPrecisionModel (precisionModel) {\n  this._precisionModel = precisionModel;\n};\nOffsetSegmentString.prototype.addPt = function addPt (pt) {\n  var bufPt = new Coordinate(pt);\n  this._precisionModel.makePrecise(bufPt);\n  if (this.isRedundant(bufPt)) { return null }\n  this._ptList.add(bufPt);\n};\nOffsetSegmentString.prototype.revere = function revere () {};\nOffsetSegmentString.prototype.addPts = function addPts (pt, isForward) {\n    var this$1 = this;\n\n  if (isForward) {\n    for (var i = 0; i < pt.length; i++) {\n      this$1.addPt(pt[i]);\n    }\n  } else {\n    for (var i$1 = pt.length - 1; i$1 >= 0; i$1--) {\n      this$1.addPt(pt[i$1]);\n    }\n  }\n};\nOffsetSegmentString.prototype.isRedundant = function isRedundant (pt) {\n  if (this._ptList.size() < 1) { return false }\n  var lastPt = this._ptList.get(this._ptList.size() - 1);\n  var ptDist = pt.distance(lastPt);\n  if (ptDist < this._minimimVertexDistance) { return true }\n  return false\n};\nOffsetSegmentString.prototype.toString = function toString () {\n  var fact = new GeometryFactory();\n  var line = fact.createLineString(this.getCoordinates());\n  return line.toString()\n};\nOffsetSegmentString.prototype.closeRing = function closeRing () {\n  if (this._ptList.size() < 1) { return null }\n  var startPt = new Coordinate(this._ptList.get(0));\n  var lastPt = this._ptList.get(this._ptList.size() - 1);\n  // const last2Pt = null\n  // if (this._ptList.size() >= 2) last2Pt = this._ptList.get(this._ptList.size() - 2)\n  if (startPt.equals(lastPt)) { return null }\n  this._ptList.add(startPt);\n};\nOffsetSegmentString.prototype.setMinimumVertexDistance = function setMinimumVertexDistance (minimimVertexDistance) {\n  this._minimimVertexDistance = minimimVertexDistance;\n};\nOffsetSegmentString.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nOffsetSegmentString.prototype.getClass = function getClass () {\n  return OffsetSegmentString\n};\nstaticAccessors$28.COORDINATE_ARRAY_TYPE.get = function () { return new Array(0).fill(null) };\n\nObject.defineProperties( OffsetSegmentString, staticAccessors$28 );\n\nvar Angle = function Angle () {};\n\nvar staticAccessors$29 = { PI_TIMES_2: { configurable: true },PI_OVER_2: { configurable: true },PI_OVER_4: { configurable: true },COUNTERCLOCKWISE: { configurable: true },CLOCKWISE: { configurable: true },NONE: { configurable: true } };\n\nAngle.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nAngle.prototype.getClass = function getClass () {\n  return Angle\n};\nAngle.toDegrees = function toDegrees (radians) {\n  return radians * 180 / Math.PI\n};\nAngle.normalize = function normalize (angle) {\n  while (angle > Math.PI) { angle -= Angle.PI_TIMES_2; }\n  while (angle <= -Math.PI) { angle += Angle.PI_TIMES_2; }\n  return angle\n};\nAngle.angle = function angle () {\n  if (arguments.length === 1) {\n    var p = arguments[0];\n    return Math.atan2(p.y, p.x)\n  } else if (arguments.length === 2) {\n    var p0 = arguments[0];\n    var p1 = arguments[1];\n    var dx = p1.x - p0.x;\n    var dy = p1.y - p0.y;\n    return Math.atan2(dy, dx)\n  }\n};\nAngle.isAcute = function isAcute (p0, p1, p2) {\n  var dx0 = p0.x - p1.x;\n  var dy0 = p0.y - p1.y;\n  var dx1 = p2.x - p1.x;\n  var dy1 = p2.y - p1.y;\n  var dotprod = dx0 * dx1 + dy0 * dy1;\n  return dotprod > 0\n};\nAngle.isObtuse = function isObtuse (p0, p1, p2) {\n  var dx0 = p0.x - p1.x;\n  var dy0 = p0.y - p1.y;\n  var dx1 = p2.x - p1.x;\n  var dy1 = p2.y - p1.y;\n  var dotprod = dx0 * dx1 + dy0 * dy1;\n  return dotprod < 0\n};\nAngle.interiorAngle = function interiorAngle (p0, p1, p2) {\n  var anglePrev = Angle.angle(p1, p0);\n  var angleNext = Angle.angle(p1, p2);\n  return Math.abs(angleNext - anglePrev)\n};\nAngle.normalizePositive = function normalizePositive (angle) {\n  if (angle < 0.0) {\n    while (angle < 0.0) { angle += Angle.PI_TIMES_2; }\n    if (angle >= Angle.PI_TIMES_2) { angle = 0.0; }\n  } else {\n    while (angle >= Angle.PI_TIMES_2) { angle -= Angle.PI_TIMES_2; }\n    if (angle < 0.0) { angle = 0.0; }\n  }\n  return angle\n};\nAngle.angleBetween = function angleBetween (tip1, tail, tip2) {\n  var a1 = Angle.angle(tail, tip1);\n  var a2 = Angle.angle(tail, tip2);\n  return Angle.diff(a1, a2)\n};\nAngle.diff = function diff (ang1, ang2) {\n  var delAngle = null;\n  if (ang1 < ang2) {\n    delAngle = ang2 - ang1;\n  } else {\n    delAngle = ang1 - ang2;\n  }\n  if (delAngle > Math.PI) {\n    delAngle = 2 * Math.PI - delAngle;\n  }\n  return delAngle\n};\nAngle.toRadians = function toRadians (angleDegrees) {\n  return angleDegrees * Math.PI / 180.0\n};\nAngle.getTurn = function getTurn (ang1, ang2) {\n  var crossproduct = Math.sin(ang2 - ang1);\n  if (crossproduct > 0) {\n    return Angle.COUNTERCLOCKWISE\n  }\n  if (crossproduct < 0) {\n    return Angle.CLOCKWISE\n  }\n  return Angle.NONE\n};\nAngle.angleBetweenOriented = function angleBetweenOriented (tip1, tail, tip2) {\n  var a1 = Angle.angle(tail, tip1);\n  var a2 = Angle.angle(tail, tip2);\n  var angDel = a2 - a1;\n  if (angDel <= -Math.PI) { return angDel + Angle.PI_TIMES_2 }\n  if (angDel > Math.PI) { return angDel - Angle.PI_TIMES_2 }\n  return angDel\n};\nstaticAccessors$29.PI_TIMES_2.get = function () { return 2.0 * Math.PI };\nstaticAccessors$29.PI_OVER_2.get = function () { return Math.PI / 2.0 };\nstaticAccessors$29.PI_OVER_4.get = function () { return Math.PI / 4.0 };\nstaticAccessors$29.COUNTERCLOCKWISE.get = function () { return CGAlgorithms.COUNTERCLOCKWISE };\nstaticAccessors$29.CLOCKWISE.get = function () { return CGAlgorithms.CLOCKWISE };\nstaticAccessors$29.NONE.get = function () { return CGAlgorithms.COLLINEAR };\n\nObject.defineProperties( Angle, staticAccessors$29 );\n\nvar OffsetSegmentGenerator = function OffsetSegmentGenerator () {\n  this._maxCurveSegmentError = 0.0;\n  this._filletAngleQuantum = null;\n  this._closingSegLengthFactor = 1;\n  this._segList = null;\n  this._distance = 0.0;\n  this._precisionModel = null;\n  this._bufParams = null;\n  this._li = null;\n  this._s0 = null;\n  this._s1 = null;\n  this._s2 = null;\n  this._seg0 = new LineSegment();\n  this._seg1 = new LineSegment();\n  this._offset0 = new LineSegment();\n  this._offset1 = new LineSegment();\n  this._side = 0;\n  this._hasNarrowConcaveAngle = false;\n  var precisionModel = arguments[0];\n  var bufParams = arguments[1];\n  var distance = arguments[2];\n  this._precisionModel = precisionModel;\n  this._bufParams = bufParams;\n  this._li = new RobustLineIntersector();\n  this._filletAngleQuantum = Math.PI / 2.0 / bufParams.getQuadrantSegments();\n  if (bufParams.getQuadrantSegments() >= 8 && bufParams.getJoinStyle() === BufferParameters.JOIN_ROUND) { this._closingSegLengthFactor = OffsetSegmentGenerator.MAX_CLOSING_SEG_LEN_FACTOR; }\n  this.init(distance);\n};\n\nvar staticAccessors$27 = { OFFSET_SEGMENT_SEPARATION_FACTOR: { configurable: true },INSIDE_TURN_VERTEX_SNAP_DISTANCE_FACTOR: { configurable: true },CURVE_VERTEX_SNAP_DISTANCE_FACTOR: { configurable: true },MAX_CLOSING_SEG_LEN_FACTOR: { configurable: true } };\nOffsetSegmentGenerator.prototype.addNextSegment = function addNextSegment (p, addStartPoint) {\n  this._s0 = this._s1;\n  this._s1 = this._s2;\n  this._s2 = p;\n  this._seg0.setCoordinates(this._s0, this._s1);\n  this.computeOffsetSegment(this._seg0, this._side, this._distance, this._offset0);\n  this._seg1.setCoordinates(this._s1, this._s2);\n  this.computeOffsetSegment(this._seg1, this._side, this._distance, this._offset1);\n  if (this._s1.equals(this._s2)) { return null }\n  var orientation = CGAlgorithms.computeOrientation(this._s0, this._s1, this._s2);\n  var outsideTurn = (orientation === CGAlgorithms.CLOCKWISE && this._side === Position.LEFT) || (orientation === CGAlgorithms.COUNTERCLOCKWISE && this._side === Position.RIGHT);\n  if (orientation === 0) {\n    this.addCollinear(addStartPoint);\n  } else if (outsideTurn) {\n    this.addOutsideTurn(orientation, addStartPoint);\n  } else {\n    this.addInsideTurn(orientation, addStartPoint);\n  }\n};\nOffsetSegmentGenerator.prototype.addLineEndCap = function addLineEndCap (p0, p1) {\n  var seg = new LineSegment(p0, p1);\n  var offsetL = new LineSegment();\n  this.computeOffsetSegment(seg, Position.LEFT, this._distance, offsetL);\n  var offsetR = new LineSegment();\n  this.computeOffsetSegment(seg, Position.RIGHT, this._distance, offsetR);\n  var dx = p1.x - p0.x;\n  var dy = p1.y - p0.y;\n  var angle = Math.atan2(dy, dx);\n  switch (this._bufParams.getEndCapStyle()) {\n    case BufferParameters.CAP_ROUND:\n      this._segList.addPt(offsetL.p1);\n      this.addFilletArc(p1, angle + Math.PI / 2, angle - Math.PI / 2, CGAlgorithms.CLOCKWISE, this._distance);\n      this._segList.addPt(offsetR.p1);\n      break\n    case BufferParameters.CAP_FLAT:\n      this._segList.addPt(offsetL.p1);\n      this._segList.addPt(offsetR.p1);\n      break\n    case BufferParameters.CAP_SQUARE:\n      var squareCapSideOffset = new Coordinate();\n      squareCapSideOffset.x = Math.abs(this._distance) * Math.cos(angle);\n      squareCapSideOffset.y = Math.abs(this._distance) * Math.sin(angle);\n      var squareCapLOffset = new Coordinate(offsetL.p1.x + squareCapSideOffset.x, offsetL.p1.y + squareCapSideOffset.y);\n      var squareCapROffset = new Coordinate(offsetR.p1.x + squareCapSideOffset.x, offsetR.p1.y + squareCapSideOffset.y);\n      this._segList.addPt(squareCapLOffset);\n      this._segList.addPt(squareCapROffset);\n      break\n    default:\n  }\n};\nOffsetSegmentGenerator.prototype.getCoordinates = function getCoordinates () {\n  var pts = this._segList.getCoordinates();\n  return pts\n};\nOffsetSegmentGenerator.prototype.addMitreJoin = function addMitreJoin (p, offset0, offset1, distance) {\n  var isMitreWithinLimit = true;\n  var intPt = null;\n  try {\n    intPt = HCoordinate.intersection(offset0.p0, offset0.p1, offset1.p0, offset1.p1);\n    var mitreRatio = distance <= 0.0 ? 1.0 : intPt.distance(p) / Math.abs(distance);\n    if (mitreRatio > this._bufParams.getMitreLimit()) { isMitreWithinLimit = false; }\n  } catch (ex) {\n    if (ex instanceof NotRepresentableException) {\n      intPt = new Coordinate(0, 0);\n      isMitreWithinLimit = false;\n    } else { throw ex }\n  } finally {}\n  if (isMitreWithinLimit) {\n    this._segList.addPt(intPt);\n  } else {\n    this.addLimitedMitreJoin(offset0, offset1, distance, this._bufParams.getMitreLimit());\n  }\n};\nOffsetSegmentGenerator.prototype.addFilletCorner = function addFilletCorner (p, p0, p1, direction, radius) {\n  var dx0 = p0.x - p.x;\n  var dy0 = p0.y - p.y;\n  var startAngle = Math.atan2(dy0, dx0);\n  var dx1 = p1.x - p.x;\n  var dy1 = p1.y - p.y;\n  var endAngle = Math.atan2(dy1, dx1);\n  if (direction === CGAlgorithms.CLOCKWISE) {\n    if (startAngle <= endAngle) { startAngle += 2.0 * Math.PI; }\n  } else {\n    if (startAngle >= endAngle) { startAngle -= 2.0 * Math.PI; }\n  }\n  this._segList.addPt(p0);\n  this.addFilletArc(p, startAngle, endAngle, direction, radius);\n  this._segList.addPt(p1);\n};\nOffsetSegmentGenerator.prototype.addOutsideTurn = function addOutsideTurn (orientation, addStartPoint) {\n  if (this._offset0.p1.distance(this._offset1.p0) < this._distance * OffsetSegmentGenerator.OFFSET_SEGMENT_SEPARATION_FACTOR) {\n    this._segList.addPt(this._offset0.p1);\n    return null\n  }\n  if (this._bufParams.getJoinStyle() === BufferParameters.JOIN_MITRE) {\n    this.addMitreJoin(this._s1, this._offset0, this._offset1, this._distance);\n  } else if (this._bufParams.getJoinStyle() === BufferParameters.JOIN_BEVEL) {\n    this.addBevelJoin(this._offset0, this._offset1);\n  } else {\n    if (addStartPoint) { this._segList.addPt(this._offset0.p1); }\n    this.addFilletCorner(this._s1, this._offset0.p1, this._offset1.p0, orientation, this._distance);\n    this._segList.addPt(this._offset1.p0);\n  }\n};\nOffsetSegmentGenerator.prototype.createSquare = function createSquare (p) {\n  this._segList.addPt(new Coordinate(p.x + this._distance, p.y + this._distance));\n  this._segList.addPt(new Coordinate(p.x + this._distance, p.y - this._distance));\n  this._segList.addPt(new Coordinate(p.x - this._distance, p.y - this._distance));\n  this._segList.addPt(new Coordinate(p.x - this._distance, p.y + this._distance));\n  this._segList.closeRing();\n};\nOffsetSegmentGenerator.prototype.addSegments = function addSegments (pt, isForward) {\n  this._segList.addPts(pt, isForward);\n};\nOffsetSegmentGenerator.prototype.addFirstSegment = function addFirstSegment () {\n  this._segList.addPt(this._offset1.p0);\n};\nOffsetSegmentGenerator.prototype.addLastSegment = function addLastSegment () {\n  this._segList.addPt(this._offset1.p1);\n};\nOffsetSegmentGenerator.prototype.initSideSegments = function initSideSegments (s1, s2, side) {\n  this._s1 = s1;\n  this._s2 = s2;\n  this._side = side;\n  this._seg1.setCoordinates(s1, s2);\n  this.computeOffsetSegment(this._seg1, side, this._distance, this._offset1);\n};\nOffsetSegmentGenerator.prototype.addLimitedMitreJoin = function addLimitedMitreJoin (offset0, offset1, distance, mitreLimit) {\n  var basePt = this._seg0.p1;\n  var ang0 = Angle.angle(basePt, this._seg0.p0);\n  // const ang1 = Angle.angle(basePt, this._seg1.p1)\n  var angDiff = Angle.angleBetweenOriented(this._seg0.p0, basePt, this._seg1.p1);\n  var angDiffHalf = angDiff / 2;\n  var midAng = Angle.normalize(ang0 + angDiffHalf);\n  var mitreMidAng = Angle.normalize(midAng + Math.PI);\n  var mitreDist = mitreLimit * distance;\n  var bevelDelta = mitreDist * Math.abs(Math.sin(angDiffHalf));\n  var bevelHalfLen = distance - bevelDelta;\n  var bevelMidX = basePt.x + mitreDist * Math.cos(mitreMidAng);\n  var bevelMidY = basePt.y + mitreDist * Math.sin(mitreMidAng);\n  var bevelMidPt = new Coordinate(bevelMidX, bevelMidY);\n  var mitreMidLine = new LineSegment(basePt, bevelMidPt);\n  var bevelEndLeft = mitreMidLine.pointAlongOffset(1.0, bevelHalfLen);\n  var bevelEndRight = mitreMidLine.pointAlongOffset(1.0, -bevelHalfLen);\n  if (this._side === Position.LEFT) {\n    this._segList.addPt(bevelEndLeft);\n    this._segList.addPt(bevelEndRight);\n  } else {\n    this._segList.addPt(bevelEndRight);\n    this._segList.addPt(bevelEndLeft);\n  }\n};\nOffsetSegmentGenerator.prototype.computeOffsetSegment = function computeOffsetSegment (seg, side, distance, offset) {\n  var sideSign = side === Position.LEFT ? 1 : -1;\n  var dx = seg.p1.x - seg.p0.x;\n  var dy = seg.p1.y - seg.p0.y;\n  var len = Math.sqrt(dx * dx + dy * dy);\n  var ux = sideSign * distance * dx / len;\n  var uy = sideSign * distance * dy / len;\n  offset.p0.x = seg.p0.x - uy;\n  offset.p0.y = seg.p0.y + ux;\n  offset.p1.x = seg.p1.x - uy;\n  offset.p1.y = seg.p1.y + ux;\n};\nOffsetSegmentGenerator.prototype.addFilletArc = function addFilletArc (p, startAngle, endAngle, direction, radius) {\n    var this$1 = this;\n\n  var directionFactor = direction === CGAlgorithms.CLOCKWISE ? -1 : 1;\n  var totalAngle = Math.abs(startAngle - endAngle);\n  var nSegs = Math.trunc(totalAngle / this._filletAngleQuantum + 0.5);\n  if (nSegs < 1) { return null }\n  var initAngle = 0.0;\n  var currAngleInc = totalAngle / nSegs;\n  var currAngle = initAngle;\n  var pt = new Coordinate();\n  while (currAngle < totalAngle) {\n    var angle = startAngle + directionFactor * currAngle;\n    pt.x = p.x + radius * Math.cos(angle);\n    pt.y = p.y + radius * Math.sin(angle);\n    this$1._segList.addPt(pt);\n    currAngle += currAngleInc;\n  }\n};\nOffsetSegmentGenerator.prototype.addInsideTurn = function addInsideTurn (orientation, addStartPoint) {\n  this._li.computeIntersection(this._offset0.p0, this._offset0.p1, this._offset1.p0, this._offset1.p1);\n  if (this._li.hasIntersection()) {\n    this._segList.addPt(this._li.getIntersection(0));\n  } else {\n    this._hasNarrowConcaveAngle = true;\n    if (this._offset0.p1.distance(this._offset1.p0) < this._distance * OffsetSegmentGenerator.INSIDE_TURN_VERTEX_SNAP_DISTANCE_FACTOR) {\n      this._segList.addPt(this._offset0.p1);\n    } else {\n      this._segList.addPt(this._offset0.p1);\n      if (this._closingSegLengthFactor > 0) {\n        var mid0 = new Coordinate((this._closingSegLengthFactor * this._offset0.p1.x + this._s1.x) / (this._closingSegLengthFactor + 1), (this._closingSegLengthFactor * this._offset0.p1.y + this._s1.y) / (this._closingSegLengthFactor + 1));\n        this._segList.addPt(mid0);\n        var mid1 = new Coordinate((this._closingSegLengthFactor * this._offset1.p0.x + this._s1.x) / (this._closingSegLengthFactor + 1), (this._closingSegLengthFactor * this._offset1.p0.y + this._s1.y) / (this._closingSegLengthFactor + 1));\n        this._segList.addPt(mid1);\n      } else {\n        this._segList.addPt(this._s1);\n      }\n      this._segList.addPt(this._offset1.p0);\n    }\n  }\n};\nOffsetSegmentGenerator.prototype.createCircle = function createCircle (p) {\n  var pt = new Coordinate(p.x + this._distance, p.y);\n  this._segList.addPt(pt);\n  this.addFilletArc(p, 0.0, 2.0 * Math.PI, -1, this._distance);\n  this._segList.closeRing();\n};\nOffsetSegmentGenerator.prototype.addBevelJoin = function addBevelJoin (offset0, offset1) {\n  this._segList.addPt(offset0.p1);\n  this._segList.addPt(offset1.p0);\n};\nOffsetSegmentGenerator.prototype.init = function init (distance) {\n  this._distance = distance;\n  this._maxCurveSegmentError = distance * (1 - Math.cos(this._filletAngleQuantum / 2.0));\n  this._segList = new OffsetSegmentString();\n  this._segList.setPrecisionModel(this._precisionModel);\n  this._segList.setMinimumVertexDistance(distance * OffsetSegmentGenerator.CURVE_VERTEX_SNAP_DISTANCE_FACTOR);\n};\nOffsetSegmentGenerator.prototype.addCollinear = function addCollinear (addStartPoint) {\n  this._li.computeIntersection(this._s0, this._s1, this._s1, this._s2);\n  var numInt = this._li.getIntersectionNum();\n  if (numInt >= 2) {\n    if (this._bufParams.getJoinStyle() === BufferParameters.JOIN_BEVEL || this._bufParams.getJoinStyle() === BufferParameters.JOIN_MITRE) {\n      if (addStartPoint) { this._segList.addPt(this._offset0.p1); }\n      this._segList.addPt(this._offset1.p0);\n    } else {\n      this.addFilletCorner(this._s1, this._offset0.p1, this._offset1.p0, CGAlgorithms.CLOCKWISE, this._distance);\n    }\n  }\n};\nOffsetSegmentGenerator.prototype.closeRing = function closeRing () {\n  this._segList.closeRing();\n};\nOffsetSegmentGenerator.prototype.hasNarrowConcaveAngle = function hasNarrowConcaveAngle () {\n  return this._hasNarrowConcaveAngle\n};\nOffsetSegmentGenerator.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nOffsetSegmentGenerator.prototype.getClass = function getClass () {\n  return OffsetSegmentGenerator\n};\nstaticAccessors$27.OFFSET_SEGMENT_SEPARATION_FACTOR.get = function () { return 1.0E-3 };\nstaticAccessors$27.INSIDE_TURN_VERTEX_SNAP_DISTANCE_FACTOR.get = function () { return 1.0E-3 };\nstaticAccessors$27.CURVE_VERTEX_SNAP_DISTANCE_FACTOR.get = function () { return 1.0E-6 };\nstaticAccessors$27.MAX_CLOSING_SEG_LEN_FACTOR.get = function () { return 80 };\n\nObject.defineProperties( OffsetSegmentGenerator, staticAccessors$27 );\n\nvar OffsetCurveBuilder = function OffsetCurveBuilder () {\n  this._distance = 0.0;\n  this._precisionModel = null;\n  this._bufParams = null;\n  var precisionModel = arguments[0];\n  var bufParams = arguments[1];\n  this._precisionModel = precisionModel;\n  this._bufParams = bufParams;\n};\nOffsetCurveBuilder.prototype.getOffsetCurve = function getOffsetCurve (inputPts, distance) {\n  this._distance = distance;\n  if (distance === 0.0) { return null }\n  var isRightSide = distance < 0.0;\n  var posDistance = Math.abs(distance);\n  var segGen = this.getSegGen(posDistance);\n  if (inputPts.length <= 1) {\n    this.computePointCurve(inputPts[0], segGen);\n  } else {\n    this.computeOffsetCurve(inputPts, isRightSide, segGen);\n  }\n  var curvePts = segGen.getCoordinates();\n  if (isRightSide) { CoordinateArrays.reverse(curvePts); }\n  return curvePts\n};\nOffsetCurveBuilder.prototype.computeSingleSidedBufferCurve = function computeSingleSidedBufferCurve (inputPts, isRightSide, segGen) {\n  var distTol = this.simplifyTolerance(this._distance);\n  if (isRightSide) {\n    segGen.addSegments(inputPts, true);\n    var simp2 = BufferInputLineSimplifier.simplify(inputPts, -distTol);\n    var n2 = simp2.length - 1;\n    segGen.initSideSegments(simp2[n2], simp2[n2 - 1], Position.LEFT);\n    segGen.addFirstSegment();\n    for (var i = n2 - 2; i >= 0; i--) {\n      segGen.addNextSegment(simp2[i], true);\n    }\n  } else {\n    segGen.addSegments(inputPts, false);\n    var simp1 = BufferInputLineSimplifier.simplify(inputPts, distTol);\n    var n1 = simp1.length - 1;\n    segGen.initSideSegments(simp1[0], simp1[1], Position.LEFT);\n    segGen.addFirstSegment();\n    for (var i$1 = 2; i$1 <= n1; i$1++) {\n      segGen.addNextSegment(simp1[i$1], true);\n    }\n  }\n  segGen.addLastSegment();\n  segGen.closeRing();\n};\nOffsetCurveBuilder.prototype.computeRingBufferCurve = function computeRingBufferCurve (inputPts, side, segGen) {\n  var distTol = this.simplifyTolerance(this._distance);\n  if (side === Position.RIGHT) { distTol = -distTol; }\n  var simp = BufferInputLineSimplifier.simplify(inputPts, distTol);\n  var n = simp.length - 1;\n  segGen.initSideSegments(simp[n - 1], simp[0], side);\n  for (var i = 1; i <= n; i++) {\n    var addStartPoint = i !== 1;\n    segGen.addNextSegment(simp[i], addStartPoint);\n  }\n  segGen.closeRing();\n};\nOffsetCurveBuilder.prototype.computeLineBufferCurve = function computeLineBufferCurve (inputPts, segGen) {\n  var distTol = this.simplifyTolerance(this._distance);\n  var simp1 = BufferInputLineSimplifier.simplify(inputPts, distTol);\n  var n1 = simp1.length - 1;\n  segGen.initSideSegments(simp1[0], simp1[1], Position.LEFT);\n  for (var i = 2; i <= n1; i++) {\n    segGen.addNextSegment(simp1[i], true);\n  }\n  segGen.addLastSegment();\n  segGen.addLineEndCap(simp1[n1 - 1], simp1[n1]);\n  var simp2 = BufferInputLineSimplifier.simplify(inputPts, -distTol);\n  var n2 = simp2.length - 1;\n  segGen.initSideSegments(simp2[n2], simp2[n2 - 1], Position.LEFT);\n  for (var i$1 = n2 - 2; i$1 >= 0; i$1--) {\n    segGen.addNextSegment(simp2[i$1], true);\n  }\n  segGen.addLastSegment();\n  segGen.addLineEndCap(simp2[1], simp2[0]);\n  segGen.closeRing();\n};\nOffsetCurveBuilder.prototype.computePointCurve = function computePointCurve (pt, segGen) {\n  switch (this._bufParams.getEndCapStyle()) {\n    case BufferParameters.CAP_ROUND:\n      segGen.createCircle(pt);\n      break\n    case BufferParameters.CAP_SQUARE:\n      segGen.createSquare(pt);\n      break\n    default:\n  }\n};\nOffsetCurveBuilder.prototype.getLineCurve = function getLineCurve (inputPts, distance) {\n  this._distance = distance;\n  if (distance < 0.0 && !this._bufParams.isSingleSided()) { return null }\n  if (distance === 0.0) { return null }\n  var posDistance = Math.abs(distance);\n  var segGen = this.getSegGen(posDistance);\n  if (inputPts.length <= 1) {\n    this.computePointCurve(inputPts[0], segGen);\n  } else {\n    if (this._bufParams.isSingleSided()) {\n      var isRightSide = distance < 0.0;\n      this.computeSingleSidedBufferCurve(inputPts, isRightSide, segGen);\n    } else { this.computeLineBufferCurve(inputPts, segGen); }\n  }\n  var lineCoord = segGen.getCoordinates();\n  return lineCoord\n};\nOffsetCurveBuilder.prototype.getBufferParameters = function getBufferParameters () {\n  return this._bufParams\n};\nOffsetCurveBuilder.prototype.simplifyTolerance = function simplifyTolerance (bufDistance) {\n  return bufDistance * this._bufParams.getSimplifyFactor()\n};\nOffsetCurveBuilder.prototype.getRingCurve = function getRingCurve (inputPts, side, distance) {\n  this._distance = distance;\n  if (inputPts.length <= 2) { return this.getLineCurve(inputPts, distance) }\n  if (distance === 0.0) {\n    return OffsetCurveBuilder.copyCoordinates(inputPts)\n  }\n  var segGen = this.getSegGen(distance);\n  this.computeRingBufferCurve(inputPts, side, segGen);\n  return segGen.getCoordinates()\n};\nOffsetCurveBuilder.prototype.computeOffsetCurve = function computeOffsetCurve (inputPts, isRightSide, segGen) {\n  var distTol = this.simplifyTolerance(this._distance);\n  if (isRightSide) {\n    var simp2 = BufferInputLineSimplifier.simplify(inputPts, -distTol);\n    var n2 = simp2.length - 1;\n    segGen.initSideSegments(simp2[n2], simp2[n2 - 1], Position.LEFT);\n    segGen.addFirstSegment();\n    for (var i = n2 - 2; i >= 0; i--) {\n      segGen.addNextSegment(simp2[i], true);\n    }\n  } else {\n    var simp1 = BufferInputLineSimplifier.simplify(inputPts, distTol);\n    var n1 = simp1.length - 1;\n    segGen.initSideSegments(simp1[0], simp1[1], Position.LEFT);\n    segGen.addFirstSegment();\n    for (var i$1 = 2; i$1 <= n1; i$1++) {\n      segGen.addNextSegment(simp1[i$1], true);\n    }\n  }\n  segGen.addLastSegment();\n};\nOffsetCurveBuilder.prototype.getSegGen = function getSegGen (distance) {\n  return new OffsetSegmentGenerator(this._precisionModel, this._bufParams, distance)\n};\nOffsetCurveBuilder.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nOffsetCurveBuilder.prototype.getClass = function getClass () {\n  return OffsetCurveBuilder\n};\nOffsetCurveBuilder.copyCoordinates = function copyCoordinates (pts) {\n  var copy = new Array(pts.length).fill(null);\n  for (var i = 0; i < copy.length; i++) {\n    copy[i] = new Coordinate(pts[i]);\n  }\n  return copy\n};\n\nvar SubgraphDepthLocater = function SubgraphDepthLocater () {\n  this._subgraphs = null;\n  this._seg = new LineSegment();\n  this._cga = new CGAlgorithms();\n  var subgraphs = arguments[0];\n  this._subgraphs = subgraphs;\n};\n\nvar staticAccessors$30 = { DepthSegment: { configurable: true } };\nSubgraphDepthLocater.prototype.findStabbedSegments = function findStabbedSegments () {\n    var this$1 = this;\n\n  if (arguments.length === 1) {\n    var stabbingRayLeftPt = arguments[0];\n    var stabbedSegments = new ArrayList();\n    for (var i = this._subgraphs.iterator(); i.hasNext();) {\n      var bsg = i.next();\n      var env = bsg.getEnvelope();\n      if (stabbingRayLeftPt.y < env.getMinY() || stabbingRayLeftPt.y > env.getMaxY()) { continue }\n      this$1.findStabbedSegments(stabbingRayLeftPt, bsg.getDirectedEdges(), stabbedSegments);\n    }\n    return stabbedSegments\n  } else if (arguments.length === 3) {\n    if (hasInterface(arguments[2], List) && (arguments[0] instanceof Coordinate && arguments[1] instanceof DirectedEdge)) {\n      var stabbingRayLeftPt$1 = arguments[0];\n      var dirEdge = arguments[1];\n      var stabbedSegments$1 = arguments[2];\n      var pts = dirEdge.getEdge().getCoordinates();\n      for (var i$1 = 0; i$1 < pts.length - 1; i$1++) {\n        this$1._seg.p0 = pts[i$1];\n        this$1._seg.p1 = pts[i$1 + 1];\n        if (this$1._seg.p0.y > this$1._seg.p1.y) { this$1._seg.reverse(); }\n        var maxx = Math.max(this$1._seg.p0.x, this$1._seg.p1.x);\n        if (maxx < stabbingRayLeftPt$1.x) { continue }\n        if (this$1._seg.isHorizontal()) { continue }\n        if (stabbingRayLeftPt$1.y < this$1._seg.p0.y || stabbingRayLeftPt$1.y > this$1._seg.p1.y) { continue }\n        if (CGAlgorithms.computeOrientation(this$1._seg.p0, this$1._seg.p1, stabbingRayLeftPt$1) === CGAlgorithms.RIGHT) { continue }\n        var depth = dirEdge.getDepth(Position.LEFT);\n        if (!this$1._seg.p0.equals(pts[i$1])) { depth = dirEdge.getDepth(Position.RIGHT); }\n        var ds = new DepthSegment(this$1._seg, depth);\n        stabbedSegments$1.add(ds);\n      }\n    } else if (hasInterface(arguments[2], List) && (arguments[0] instanceof Coordinate && hasInterface(arguments[1], List))) {\n      var stabbingRayLeftPt$2 = arguments[0];\n      var dirEdges = arguments[1];\n      var stabbedSegments$2 = arguments[2];\n      for (var i$2 = dirEdges.iterator(); i$2.hasNext();) {\n        var de = i$2.next();\n        if (!de.isForward()) { continue }\n        this$1.findStabbedSegments(stabbingRayLeftPt$2, de, stabbedSegments$2);\n      }\n    }\n  }\n};\nSubgraphDepthLocater.prototype.getDepth = function getDepth (p) {\n  var stabbedSegments = this.findStabbedSegments(p);\n  if (stabbedSegments.size() === 0) { return 0 }\n  var ds = Collections.min(stabbedSegments);\n  return ds._leftDepth\n};\nSubgraphDepthLocater.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nSubgraphDepthLocater.prototype.getClass = function getClass () {\n  return SubgraphDepthLocater\n};\nstaticAccessors$30.DepthSegment.get = function () { return DepthSegment };\n\nObject.defineProperties( SubgraphDepthLocater, staticAccessors$30 );\n\nvar DepthSegment = function DepthSegment () {\n  this._upwardSeg = null;\n  this._leftDepth = null;\n  var seg = arguments[0];\n  var depth = arguments[1];\n  this._upwardSeg = new LineSegment(seg);\n  this._leftDepth = depth;\n};\nDepthSegment.prototype.compareTo = function compareTo (obj) {\n  var other = obj;\n  if (this._upwardSeg.minX() >= other._upwardSeg.maxX()) { return 1 }\n  if (this._upwardSeg.maxX() <= other._upwardSeg.minX()) { return -1 }\n  var orientIndex = this._upwardSeg.orientationIndex(other._upwardSeg);\n  if (orientIndex !== 0) { return orientIndex }\n  orientIndex = -1 * other._upwardSeg.orientationIndex(this._upwardSeg);\n  if (orientIndex !== 0) { return orientIndex }\n  return this._upwardSeg.compareTo(other._upwardSeg)\n};\nDepthSegment.prototype.compareX = function compareX (seg0, seg1) {\n  var compare0 = seg0.p0.compareTo(seg1.p0);\n  if (compare0 !== 0) { return compare0 }\n  return seg0.p1.compareTo(seg1.p1)\n};\nDepthSegment.prototype.toString = function toString () {\n  return this._upwardSeg.toString()\n};\nDepthSegment.prototype.interfaces_ = function interfaces_ () {\n  return [Comparable]\n};\nDepthSegment.prototype.getClass = function getClass () {\n  return DepthSegment\n};\n\nvar Triangle = function Triangle (p0, p1, p2) {\n  this.p0 = p0 || null;\n  this.p1 = p1 || null;\n  this.p2 = p2 || null;\n};\nTriangle.prototype.area = function area () {\n  return Triangle.area(this.p0, this.p1, this.p2)\n};\nTriangle.prototype.signedArea = function signedArea () {\n  return Triangle.signedArea(this.p0, this.p1, this.p2)\n};\nTriangle.prototype.interpolateZ = function interpolateZ (p) {\n  if (p === null) { throw new IllegalArgumentException('Supplied point is null.') }\n  return Triangle.interpolateZ(p, this.p0, this.p1, this.p2)\n};\nTriangle.prototype.longestSideLength = function longestSideLength () {\n  return Triangle.longestSideLength(this.p0, this.p1, this.p2)\n};\nTriangle.prototype.isAcute = function isAcute () {\n  return Triangle.isAcute(this.p0, this.p1, this.p2)\n};\nTriangle.prototype.circumcentre = function circumcentre () {\n  return Triangle.circumcentre(this.p0, this.p1, this.p2)\n};\nTriangle.prototype.area3D = function area3D () {\n  return Triangle.area3D(this.p0, this.p1, this.p2)\n};\nTriangle.prototype.centroid = function centroid () {\n  return Triangle.centroid(this.p0, this.p1, this.p2)\n};\nTriangle.prototype.inCentre = function inCentre () {\n  return Triangle.inCentre(this.p0, this.p1, this.p2)\n};\nTriangle.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nTriangle.prototype.getClass = function getClass () {\n  return Triangle\n};\nTriangle.area = function area (a, b, c) {\n  return Math.abs(((c.x - a.x) * (b.y - a.y) - (b.x - a.x) * (c.y - a.y)) / 2)\n};\nTriangle.signedArea = function signedArea (a, b, c) {\n  return ((c.x - a.x) * (b.y - a.y) - (b.x - a.x) * (c.y - a.y)) / 2\n};\nTriangle.det = function det (m00, m01, m10, m11) {\n  return m00 * m11 - m01 * m10\n};\nTriangle.interpolateZ = function interpolateZ (p, v0, v1, v2) {\n  var x0 = v0.x;\n  var y0 = v0.y;\n  var a = v1.x - x0;\n  var b = v2.x - x0;\n  var c = v1.y - y0;\n  var d = v2.y - y0;\n  var det = a * d - b * c;\n  var dx = p.x - x0;\n  var dy = p.y - y0;\n  var t = (d * dx - b * dy) / det;\n  var u = (-c * dx + a * dy) / det;\n  var z = v0.z + t * (v1.z - v0.z) + u * (v2.z - v0.z);\n  return z\n};\nTriangle.longestSideLength = function longestSideLength (a, b, c) {\n  var lenAB = a.distance(b);\n  var lenBC = b.distance(c);\n  var lenCA = c.distance(a);\n  var maxLen = lenAB;\n  if (lenBC > maxLen) { maxLen = lenBC; }\n  if (lenCA > maxLen) { maxLen = lenCA; }\n  return maxLen\n};\nTriangle.isAcute = function isAcute (a, b, c) {\n  if (!Angle.isAcute(a, b, c)) { return false }\n  if (!Angle.isAcute(b, c, a)) { return false }\n  if (!Angle.isAcute(c, a, b)) { return false }\n  return true\n};\nTriangle.circumcentre = function circumcentre (a, b, c) {\n  var cx = c.x;\n  var cy = c.y;\n  var ax = a.x - cx;\n  var ay = a.y - cy;\n  var bx = b.x - cx;\n  var by = b.y - cy;\n  var denom = 2 * Triangle.det(ax, ay, bx, by);\n  var numx = Triangle.det(ay, ax * ax + ay * ay, by, bx * bx + by * by);\n  var numy = Triangle.det(ax, ax * ax + ay * ay, bx, bx * bx + by * by);\n  var ccx = cx - numx / denom;\n  var ccy = cy + numy / denom;\n  return new Coordinate(ccx, ccy)\n};\nTriangle.perpendicularBisector = function perpendicularBisector (a, b) {\n  var dx = b.x - a.x;\n  var dy = b.y - a.y;\n  var l1 = new HCoordinate(a.x + dx / 2.0, a.y + dy / 2.0, 1.0);\n  var l2 = new HCoordinate(a.x - dy + dx / 2.0, a.y + dx + dy / 2.0, 1.0);\n  return new HCoordinate(l1, l2)\n};\nTriangle.angleBisector = function angleBisector (a, b, c) {\n  var len0 = b.distance(a);\n  var len2 = b.distance(c);\n  var frac = len0 / (len0 + len2);\n  var dx = c.x - a.x;\n  var dy = c.y - a.y;\n  var splitPt = new Coordinate(a.x + frac * dx, a.y + frac * dy);\n  return splitPt\n};\nTriangle.area3D = function area3D (a, b, c) {\n  var ux = b.x - a.x;\n  var uy = b.y - a.y;\n  var uz = b.z - a.z;\n  var vx = c.x - a.x;\n  var vy = c.y - a.y;\n  var vz = c.z - a.z;\n  var crossx = uy * vz - uz * vy;\n  var crossy = uz * vx - ux * vz;\n  var crossz = ux * vy - uy * vx;\n  var absSq = crossx * crossx + crossy * crossy + crossz * crossz;\n  var area3D = Math.sqrt(absSq) / 2;\n  return area3D\n};\nTriangle.centroid = function centroid (a, b, c) {\n  var x = (a.x + b.x + c.x) / 3;\n  var y = (a.y + b.y + c.y) / 3;\n  return new Coordinate(x, y)\n};\nTriangle.inCentre = function inCentre (a, b, c) {\n  var len0 = b.distance(c);\n  var len1 = a.distance(c);\n  var len2 = a.distance(b);\n  var circum = len0 + len1 + len2;\n  var inCentreX = (len0 * a.x + len1 * b.x + len2 * c.x) / circum;\n  var inCentreY = (len0 * a.y + len1 * b.y + len2 * c.y) / circum;\n  return new Coordinate(inCentreX, inCentreY)\n};\n\nvar OffsetCurveSetBuilder = function OffsetCurveSetBuilder () {\n  this._inputGeom = null;\n  this._distance = null;\n  this._curveBuilder = null;\n  this._curveList = new ArrayList();\n  var inputGeom = arguments[0];\n  var distance = arguments[1];\n  var curveBuilder = arguments[2];\n  this._inputGeom = inputGeom;\n  this._distance = distance;\n  this._curveBuilder = curveBuilder;\n};\nOffsetCurveSetBuilder.prototype.addPoint = function addPoint (p) {\n  if (this._distance <= 0.0) { return null }\n  var coord = p.getCoordinates();\n  var curve = this._curveBuilder.getLineCurve(coord, this._distance);\n  this.addCurve(curve, Location.EXTERIOR, Location.INTERIOR);\n};\nOffsetCurveSetBuilder.prototype.addPolygon = function addPolygon (p) {\n    var this$1 = this;\n\n  var offsetDistance = this._distance;\n  var offsetSide = Position.LEFT;\n  if (this._distance < 0.0) {\n    offsetDistance = -this._distance;\n    offsetSide = Position.RIGHT;\n  }\n  var shell = p.getExteriorRing();\n  var shellCoord = CoordinateArrays.removeRepeatedPoints(shell.getCoordinates());\n  if (this._distance < 0.0 && this.isErodedCompletely(shell, this._distance)) { return null }\n  if (this._distance <= 0.0 && shellCoord.length < 3) { return null }\n  this.addPolygonRing(shellCoord, offsetDistance, offsetSide, Location.EXTERIOR, Location.INTERIOR);\n  for (var i = 0; i < p.getNumInteriorRing(); i++) {\n    var hole = p.getInteriorRingN(i);\n    var holeCoord = CoordinateArrays.removeRepeatedPoints(hole.getCoordinates());\n    if (this$1._distance > 0.0 && this$1.isErodedCompletely(hole, -this$1._distance)) { continue }\n    this$1.addPolygonRing(holeCoord, offsetDistance, Position.opposite(offsetSide), Location.INTERIOR, Location.EXTERIOR);\n  }\n};\nOffsetCurveSetBuilder.prototype.isTriangleErodedCompletely = function isTriangleErodedCompletely (triangleCoord, bufferDistance) {\n  var tri = new Triangle(triangleCoord[0], triangleCoord[1], triangleCoord[2]);\n  var inCentre = tri.inCentre();\n  var distToCentre = CGAlgorithms.distancePointLine(inCentre, tri.p0, tri.p1);\n  return distToCentre < Math.abs(bufferDistance)\n};\nOffsetCurveSetBuilder.prototype.addLineString = function addLineString (line) {\n  if (this._distance <= 0.0 && !this._curveBuilder.getBufferParameters().isSingleSided()) { return null }\n  var coord = CoordinateArrays.removeRepeatedPoints(line.getCoordinates());\n  var curve = this._curveBuilder.getLineCurve(coord, this._distance);\n  this.addCurve(curve, Location.EXTERIOR, Location.INTERIOR);\n};\nOffsetCurveSetBuilder.prototype.addCurve = function addCurve (coord, leftLoc, rightLoc) {\n  if (coord === null || coord.length < 2) { return null }\n  var e = new NodedSegmentString(coord, new Label(0, Location.BOUNDARY, leftLoc, rightLoc));\n  this._curveList.add(e);\n};\nOffsetCurveSetBuilder.prototype.getCurves = function getCurves () {\n  this.add(this._inputGeom);\n  return this._curveList\n};\nOffsetCurveSetBuilder.prototype.addPolygonRing = function addPolygonRing (coord, offsetDistance, side, cwLeftLoc, cwRightLoc) {\n  if (offsetDistance === 0.0 && coord.length < LinearRing.MINIMUM_VALID_SIZE) { return null }\n  var leftLoc = cwLeftLoc;\n  var rightLoc = cwRightLoc;\n  if (coord.length >= LinearRing.MINIMUM_VALID_SIZE && CGAlgorithms.isCCW(coord)) {\n    leftLoc = cwRightLoc;\n    rightLoc = cwLeftLoc;\n    side = Position.opposite(side);\n  }\n  var curve = this._curveBuilder.getRingCurve(coord, side, offsetDistance);\n  this.addCurve(curve, leftLoc, rightLoc);\n};\nOffsetCurveSetBuilder.prototype.add = function add (g) {\n  if (g.isEmpty()) { return null }\n  if (g instanceof Polygon) { this.addPolygon(g); }\n  else if (g instanceof LineString) { this.addLineString(g); }\n  else if (g instanceof Point) { this.addPoint(g); }\n  else if (g instanceof MultiPoint) { this.addCollection(g); }\n  else if (g instanceof MultiLineString) { this.addCollection(g); }\n  else if (g instanceof MultiPolygon) { this.addCollection(g); }\n  else if (g instanceof GeometryCollection) { this.addCollection(g); }\n  // else throw new UnsupportedOperationException(g.getClass().getName())\n};\nOffsetCurveSetBuilder.prototype.isErodedCompletely = function isErodedCompletely (ring, bufferDistance) {\n  var ringCoord = ring.getCoordinates();\n  // const minDiam = 0.0\n  if (ringCoord.length < 4) { return bufferDistance < 0 }\n  if (ringCoord.length === 4) { return this.isTriangleErodedCompletely(ringCoord, bufferDistance) }\n  var env = ring.getEnvelopeInternal();\n  var envMinDimension = Math.min(env.getHeight(), env.getWidth());\n  if (bufferDistance < 0.0 && 2 * Math.abs(bufferDistance) > envMinDimension) { return true }\n  return false\n};\nOffsetCurveSetBuilder.prototype.addCollection = function addCollection (gc) {\n    var this$1 = this;\n\n  for (var i = 0; i < gc.getNumGeometries(); i++) {\n    var g = gc.getGeometryN(i);\n    this$1.add(g);\n  }\n};\nOffsetCurveSetBuilder.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nOffsetCurveSetBuilder.prototype.getClass = function getClass () {\n  return OffsetCurveSetBuilder\n};\n\nvar PointOnGeometryLocator = function PointOnGeometryLocator () {};\n\nPointOnGeometryLocator.prototype.locate = function locate (p) {};\nPointOnGeometryLocator.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nPointOnGeometryLocator.prototype.getClass = function getClass () {\n  return PointOnGeometryLocator\n};\n\nvar GeometryCollectionIterator = function GeometryCollectionIterator () {\n  this._parent = null;\n  this._atStart = null;\n  this._max = null;\n  this._index = null;\n  this._subcollectionIterator = null;\n  var parent = arguments[0];\n  this._parent = parent;\n  this._atStart = true;\n  this._index = 0;\n  this._max = parent.getNumGeometries();\n};\nGeometryCollectionIterator.prototype.next = function next () {\n  if (this._atStart) {\n    this._atStart = false;\n    if (GeometryCollectionIterator.isAtomic(this._parent)) { this._index++; }\n    return this._parent\n  }\n  if (this._subcollectionIterator !== null) {\n    if (this._subcollectionIterator.hasNext()) {\n      return this._subcollectionIterator.next()\n    } else {\n      this._subcollectionIterator = null;\n    }\n  }\n  if (this._index >= this._max) {\n    throw new NoSuchElementException()\n  }\n  var obj = this._parent.getGeometryN(this._index++);\n  if (obj instanceof GeometryCollection) {\n    this._subcollectionIterator = new GeometryCollectionIterator(obj);\n    return this._subcollectionIterator.next()\n  }\n  return obj\n};\nGeometryCollectionIterator.prototype.remove = function remove () {\n  throw new Error(this.getClass().getName())\n};\nGeometryCollectionIterator.prototype.hasNext = function hasNext () {\n  if (this._atStart) {\n    return true\n  }\n  if (this._subcollectionIterator !== null) {\n    if (this._subcollectionIterator.hasNext()) {\n      return true\n    }\n    this._subcollectionIterator = null;\n  }\n  if (this._index >= this._max) {\n    return false\n  }\n  return true\n};\nGeometryCollectionIterator.prototype.interfaces_ = function interfaces_ () {\n  return [Iterator]\n};\nGeometryCollectionIterator.prototype.getClass = function getClass () {\n  return GeometryCollectionIterator\n};\nGeometryCollectionIterator.isAtomic = function isAtomic (geom) {\n  return !(geom instanceof GeometryCollection)\n};\n\nvar SimplePointInAreaLocator = function SimplePointInAreaLocator () {\n  this._geom = null;\n  var geom = arguments[0];\n  this._geom = geom;\n};\nSimplePointInAreaLocator.prototype.locate = function locate (p) {\n  return SimplePointInAreaLocator.locate(p, this._geom)\n};\nSimplePointInAreaLocator.prototype.interfaces_ = function interfaces_ () {\n  return [PointOnGeometryLocator]\n};\nSimplePointInAreaLocator.prototype.getClass = function getClass () {\n  return SimplePointInAreaLocator\n};\nSimplePointInAreaLocator.isPointInRing = function isPointInRing (p, ring) {\n  if (!ring.getEnvelopeInternal().intersects(p)) { return false }\n  return CGAlgorithms.isPointInRing(p, ring.getCoordinates())\n};\nSimplePointInAreaLocator.containsPointInPolygon = function containsPointInPolygon (p, poly) {\n  if (poly.isEmpty()) { return false }\n  var shell = poly.getExteriorRing();\n  if (!SimplePointInAreaLocator.isPointInRing(p, shell)) { return false }\n  for (var i = 0; i < poly.getNumInteriorRing(); i++) {\n    var hole = poly.getInteriorRingN(i);\n    if (SimplePointInAreaLocator.isPointInRing(p, hole)) { return false }\n  }\n  return true\n};\nSimplePointInAreaLocator.containsPoint = function containsPoint (p, geom) {\n  if (geom instanceof Polygon) {\n    return SimplePointInAreaLocator.containsPointInPolygon(p, geom)\n  } else if (geom instanceof GeometryCollection) {\n    var geomi = new GeometryCollectionIterator(geom);\n    while (geomi.hasNext()) {\n      var g2 = geomi.next();\n      if (g2 !== geom) { if (SimplePointInAreaLocator.containsPoint(p, g2)) { return true } }\n    }\n  }\n  return false\n};\nSimplePointInAreaLocator.locate = function locate (p, geom) {\n  if (geom.isEmpty()) { return Location.EXTERIOR }\n  if (SimplePointInAreaLocator.containsPoint(p, geom)) { return Location.INTERIOR }\n  return Location.EXTERIOR\n};\n\nvar EdgeEndStar = function EdgeEndStar () {\n  this._edgeMap = new TreeMap();\n  this._edgeList = null;\n  this._ptInAreaLocation = [Location.NONE, Location.NONE];\n};\nEdgeEndStar.prototype.getNextCW = function getNextCW (ee) {\n  this.getEdges();\n  var i = this._edgeList.indexOf(ee);\n  var iNextCW = i - 1;\n  if (i === 0) { iNextCW = this._edgeList.size() - 1; }\n  return this._edgeList.get(iNextCW)\n};\nEdgeEndStar.prototype.propagateSideLabels = function propagateSideLabels (geomIndex) {\n  var startLoc = Location.NONE;\n  for (var it = this.iterator(); it.hasNext();) {\n    var e = it.next();\n    var label = e.getLabel();\n    if (label.isArea(geomIndex) && label.getLocation(geomIndex, Position.LEFT) !== Location.NONE) { startLoc = label.getLocation(geomIndex, Position.LEFT); }\n  }\n  if (startLoc === Location.NONE) { return null }\n  var currLoc = startLoc;\n  for (var it$1 = this.iterator(); it$1.hasNext();) {\n    var e$1 = it$1.next();\n    var label$1 = e$1.getLabel();\n    if (label$1.getLocation(geomIndex, Position.ON) === Location.NONE) { label$1.setLocation(geomIndex, Position.ON, currLoc); }\n    if (label$1.isArea(geomIndex)) {\n      var leftLoc = label$1.getLocation(geomIndex, Position.LEFT);\n      var rightLoc = label$1.getLocation(geomIndex, Position.RIGHT);\n      if (rightLoc !== Location.NONE) {\n        if (rightLoc !== currLoc) { throw new TopologyException('side location conflict', e$1.getCoordinate()) }\n        if (leftLoc === Location.NONE) {\n          Assert.shouldNeverReachHere('found single null side (at ' + e$1.getCoordinate() + ')');\n        }\n        currLoc = leftLoc;\n      } else {\n        Assert.isTrue(label$1.getLocation(geomIndex, Position.LEFT) === Location.NONE, 'found single null side');\n        label$1.setLocation(geomIndex, Position.RIGHT, currLoc);\n        label$1.setLocation(geomIndex, Position.LEFT, currLoc);\n      }\n    }\n  }\n};\nEdgeEndStar.prototype.getCoordinate = function getCoordinate () {\n  var it = this.iterator();\n  if (!it.hasNext()) { return null }\n  var e = it.next();\n  return e.getCoordinate()\n};\nEdgeEndStar.prototype.print = function print (out) {\n  System.out.println('EdgeEndStar:   ' + this.getCoordinate());\n  for (var it = this.iterator(); it.hasNext();) {\n    var e = it.next();\n    e.print(out);\n  }\n};\nEdgeEndStar.prototype.isAreaLabelsConsistent = function isAreaLabelsConsistent (geomGraph) {\n  this.computeEdgeEndLabels(geomGraph.getBoundaryNodeRule());\n  return this.checkAreaLabelsConsistent(0)\n};\nEdgeEndStar.prototype.checkAreaLabelsConsistent = function checkAreaLabelsConsistent (geomIndex) {\n  var edges = this.getEdges();\n  if (edges.size() <= 0) { return true }\n  var lastEdgeIndex = edges.size() - 1;\n  var startLabel = edges.get(lastEdgeIndex).getLabel();\n  var startLoc = startLabel.getLocation(geomIndex, Position.LEFT);\n  Assert.isTrue(startLoc !== Location.NONE, 'Found unlabelled area edge');\n  var currLoc = startLoc;\n  for (var it = this.iterator(); it.hasNext();) {\n    var e = it.next();\n    var label = e.getLabel();\n    Assert.isTrue(label.isArea(geomIndex), 'Found non-area edge');\n    var leftLoc = label.getLocation(geomIndex, Position.LEFT);\n    var rightLoc = label.getLocation(geomIndex, Position.RIGHT);\n    if (leftLoc === rightLoc) {\n      return false\n    }\n    if (rightLoc !== currLoc) {\n      return false\n    }\n    currLoc = leftLoc;\n  }\n  return true\n};\nEdgeEndStar.prototype.findIndex = function findIndex (eSearch) {\n    var this$1 = this;\n\n  this.iterator();\n  for (var i = 0; i < this._edgeList.size(); i++) {\n    var e = this$1._edgeList.get(i);\n    if (e === eSearch) { return i }\n  }\n  return -1\n};\nEdgeEndStar.prototype.iterator = function iterator () {\n  return this.getEdges().iterator()\n};\nEdgeEndStar.prototype.getEdges = function getEdges () {\n  if (this._edgeList === null) {\n    this._edgeList = new ArrayList(this._edgeMap.values());\n  }\n  return this._edgeList\n};\nEdgeEndStar.prototype.getLocation = function getLocation (geomIndex, p, geom) {\n  if (this._ptInAreaLocation[geomIndex] === Location.NONE) {\n    this._ptInAreaLocation[geomIndex] = SimplePointInAreaLocator.locate(p, geom[geomIndex].getGeometry());\n  }\n  return this._ptInAreaLocation[geomIndex]\n};\nEdgeEndStar.prototype.toString = function toString () {\n  var buf = new StringBuffer();\n  buf.append('EdgeEndStar:   ' + this.getCoordinate());\n  buf.append('\\n');\n  for (var it = this.iterator(); it.hasNext();) {\n    var e = it.next();\n    buf.append(e);\n    buf.append('\\n');\n  }\n  return buf.toString()\n};\nEdgeEndStar.prototype.computeEdgeEndLabels = function computeEdgeEndLabels (boundaryNodeRule) {\n  for (var it = this.iterator(); it.hasNext();) {\n    var ee = it.next();\n    ee.computeLabel(boundaryNodeRule);\n  }\n};\nEdgeEndStar.prototype.computeLabelling = function computeLabelling (geomGraph) {\n    var this$1 = this;\n\n  this.computeEdgeEndLabels(geomGraph[0].getBoundaryNodeRule());\n  this.propagateSideLabels(0);\n  this.propagateSideLabels(1);\n  var hasDimensionalCollapseEdge = [false, false];\n  for (var it = this.iterator(); it.hasNext();) {\n    var e = it.next();\n    var label = e.getLabel();\n    for (var geomi = 0; geomi < 2; geomi++) {\n      if (label.isLine(geomi) && label.getLocation(geomi) === Location.BOUNDARY) { hasDimensionalCollapseEdge[geomi] = true; }\n    }\n  }\n  for (var it$1 = this.iterator(); it$1.hasNext();) {\n    var e$1 = it$1.next();\n    var label$1 = e$1.getLabel();\n    for (var geomi$1 = 0; geomi$1 < 2; geomi$1++) {\n      if (label$1.isAnyNull(geomi$1)) {\n        var loc = Location.NONE;\n        if (hasDimensionalCollapseEdge[geomi$1]) {\n          loc = Location.EXTERIOR;\n        } else {\n          var p = e$1.getCoordinate();\n          loc = this$1.getLocation(geomi$1, p, geomGraph);\n        }\n        label$1.setAllLocationsIfNull(geomi$1, loc);\n      }\n    }\n  }\n};\nEdgeEndStar.prototype.getDegree = function getDegree () {\n  return this._edgeMap.size()\n};\nEdgeEndStar.prototype.insertEdgeEnd = function insertEdgeEnd (e, obj) {\n  this._edgeMap.put(e, obj);\n  this._edgeList = null;\n};\nEdgeEndStar.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nEdgeEndStar.prototype.getClass = function getClass () {\n  return EdgeEndStar\n};\n\nvar DirectedEdgeStar = (function (EdgeEndStar$$1) {\n  function DirectedEdgeStar () {\n    EdgeEndStar$$1.call(this);\n    this._resultAreaEdgeList = null;\n    this._label = null;\n    this._SCANNING_FOR_INCOMING = 1;\n    this._LINKING_TO_OUTGOING = 2;\n  }\n\n  if ( EdgeEndStar$$1 ) DirectedEdgeStar.__proto__ = EdgeEndStar$$1;\n  DirectedEdgeStar.prototype = Object.create( EdgeEndStar$$1 && EdgeEndStar$$1.prototype );\n  DirectedEdgeStar.prototype.constructor = DirectedEdgeStar;\n  DirectedEdgeStar.prototype.linkResultDirectedEdges = function linkResultDirectedEdges () {\n    var this$1 = this;\n\n    this.getResultAreaEdges();\n    var firstOut = null;\n    var incoming = null;\n    var state = this._SCANNING_FOR_INCOMING;\n    for (var i = 0; i < this._resultAreaEdgeList.size(); i++) {\n      var nextOut = this$1._resultAreaEdgeList.get(i);\n      var nextIn = nextOut.getSym();\n      if (!nextOut.getLabel().isArea()) { continue }\n      if (firstOut === null && nextOut.isInResult()) { firstOut = nextOut; }\n      switch (state) {\n        case this$1._SCANNING_FOR_INCOMING:\n          if (!nextIn.isInResult()) { continue }\n          incoming = nextIn;\n          state = this$1._LINKING_TO_OUTGOING;\n          break\n        case this$1._LINKING_TO_OUTGOING:\n          if (!nextOut.isInResult()) { continue }\n          incoming.setNext(nextOut);\n          state = this$1._SCANNING_FOR_INCOMING;\n          break\n        default:\n      }\n    }\n    if (state === this._LINKING_TO_OUTGOING) {\n      if (firstOut === null) { throw new TopologyException('no outgoing dirEdge found', this.getCoordinate()) }\n      Assert.isTrue(firstOut.isInResult(), 'unable to link last incoming dirEdge');\n      incoming.setNext(firstOut);\n    }\n  };\n  DirectedEdgeStar.prototype.insert = function insert (ee) {\n    var de = ee;\n    this.insertEdgeEnd(de, de);\n  };\n  DirectedEdgeStar.prototype.getRightmostEdge = function getRightmostEdge () {\n    var edges = this.getEdges();\n    var size = edges.size();\n    if (size < 1) { return null }\n    var de0 = edges.get(0);\n    if (size === 1) { return de0 }\n    var deLast = edges.get(size - 1);\n    var quad0 = de0.getQuadrant();\n    var quad1 = deLast.getQuadrant();\n    if (Quadrant.isNorthern(quad0) && Quadrant.isNorthern(quad1)) { return de0; } else if (!Quadrant.isNorthern(quad0) && !Quadrant.isNorthern(quad1)) { return deLast; } else {\n      // const nonHorizontalEdge = null\n      if (de0.getDy() !== 0) { return de0; } else if (deLast.getDy() !== 0) { return deLast }\n    }\n    Assert.shouldNeverReachHere('found two horizontal edges incident on node');\n    return null\n  };\n  DirectedEdgeStar.prototype.print = function print (out) {\n    System.out.println('DirectedEdgeStar: ' + this.getCoordinate());\n    for (var it = this.iterator(); it.hasNext();) {\n      var de = it.next();\n      out.print('out ');\n      de.print(out);\n      out.println();\n      out.print('in ');\n      de.getSym().print(out);\n      out.println();\n    }\n  };\n  DirectedEdgeStar.prototype.getResultAreaEdges = function getResultAreaEdges () {\n    var this$1 = this;\n\n    if (this._resultAreaEdgeList !== null) { return this._resultAreaEdgeList }\n    this._resultAreaEdgeList = new ArrayList();\n    for (var it = this.iterator(); it.hasNext();) {\n      var de = it.next();\n      if (de.isInResult() || de.getSym().isInResult()) { this$1._resultAreaEdgeList.add(de); }\n    }\n    return this._resultAreaEdgeList\n  };\n  DirectedEdgeStar.prototype.updateLabelling = function updateLabelling (nodeLabel) {\n    for (var it = this.iterator(); it.hasNext();) {\n      var de = it.next();\n      var label = de.getLabel();\n      label.setAllLocationsIfNull(0, nodeLabel.getLocation(0));\n      label.setAllLocationsIfNull(1, nodeLabel.getLocation(1));\n    }\n  };\n  DirectedEdgeStar.prototype.linkAllDirectedEdges = function linkAllDirectedEdges () {\n    var this$1 = this;\n\n    this.getEdges();\n    var prevOut = null;\n    var firstIn = null;\n    for (var i = this._edgeList.size() - 1; i >= 0; i--) {\n      var nextOut = this$1._edgeList.get(i);\n      var nextIn = nextOut.getSym();\n      if (firstIn === null) { firstIn = nextIn; }\n      if (prevOut !== null) { nextIn.setNext(prevOut); }\n      prevOut = nextOut;\n    }\n    firstIn.setNext(prevOut);\n  };\n  DirectedEdgeStar.prototype.computeDepths = function computeDepths () {\n    var this$1 = this;\n\n    if (arguments.length === 1) {\n      var de = arguments[0];\n      var edgeIndex = this.findIndex(de);\n      // const label = de.getLabel()\n      var startDepth = de.getDepth(Position.LEFT);\n      var targetLastDepth = de.getDepth(Position.RIGHT);\n      var nextDepth = this.computeDepths(edgeIndex + 1, this._edgeList.size(), startDepth);\n      var lastDepth = this.computeDepths(0, edgeIndex, nextDepth);\n      if (lastDepth !== targetLastDepth) { throw new TopologyException('depth mismatch at ' + de.getCoordinate()) }\n    } else if (arguments.length === 3) {\n      var startIndex = arguments[0];\n      var endIndex = arguments[1];\n      var startDepth$1 = arguments[2];\n      var currDepth = startDepth$1;\n      for (var i = startIndex; i < endIndex; i++) {\n        var nextDe = this$1._edgeList.get(i);\n        // const label = nextDe.getLabel()\n        nextDe.setEdgeDepths(Position.RIGHT, currDepth);\n        currDepth = nextDe.getDepth(Position.LEFT);\n      }\n      return currDepth\n    }\n  };\n  DirectedEdgeStar.prototype.mergeSymLabels = function mergeSymLabels () {\n    for (var it = this.iterator(); it.hasNext();) {\n      var de = it.next();\n      var label = de.getLabel();\n      label.merge(de.getSym().getLabel());\n    }\n  };\n  DirectedEdgeStar.prototype.linkMinimalDirectedEdges = function linkMinimalDirectedEdges (er) {\n    var this$1 = this;\n\n    var firstOut = null;\n    var incoming = null;\n    var state = this._SCANNING_FOR_INCOMING;\n    for (var i = this._resultAreaEdgeList.size() - 1; i >= 0; i--) {\n      var nextOut = this$1._resultAreaEdgeList.get(i);\n      var nextIn = nextOut.getSym();\n      if (firstOut === null && nextOut.getEdgeRing() === er) { firstOut = nextOut; }\n      switch (state) {\n        case this$1._SCANNING_FOR_INCOMING:\n          if (nextIn.getEdgeRing() !== er) { continue }\n          incoming = nextIn;\n          state = this$1._LINKING_TO_OUTGOING;\n          break\n        case this$1._LINKING_TO_OUTGOING:\n          if (nextOut.getEdgeRing() !== er) { continue }\n          incoming.setNextMin(nextOut);\n          state = this$1._SCANNING_FOR_INCOMING;\n          break\n        default:\n      }\n    }\n    if (state === this._LINKING_TO_OUTGOING) {\n      Assert.isTrue(firstOut !== null, 'found null for first outgoing dirEdge');\n      Assert.isTrue(firstOut.getEdgeRing() === er, 'unable to link last incoming dirEdge');\n      incoming.setNextMin(firstOut);\n    }\n  };\n  DirectedEdgeStar.prototype.getOutgoingDegree = function getOutgoingDegree () {\n    if (arguments.length === 0) {\n      var degree = 0;\n      for (var it = this.iterator(); it.hasNext();) {\n        var de = it.next();\n        if (de.isInResult()) { degree++; }\n      }\n      return degree\n    } else if (arguments.length === 1) {\n      var er = arguments[0];\n      var degree$1 = 0;\n      for (var it$1 = this.iterator(); it$1.hasNext();) {\n        var de$1 = it$1.next();\n        if (de$1.getEdgeRing() === er) { degree$1++; }\n      }\n      return degree$1\n    }\n  };\n  DirectedEdgeStar.prototype.getLabel = function getLabel () {\n    return this._label\n  };\n  DirectedEdgeStar.prototype.findCoveredLineEdges = function findCoveredLineEdges () {\n    var startLoc = Location.NONE;\n    for (var it = this.iterator(); it.hasNext();) {\n      var nextOut = it.next();\n      var nextIn = nextOut.getSym();\n      if (!nextOut.isLineEdge()) {\n        if (nextOut.isInResult()) {\n          startLoc = Location.INTERIOR;\n          break\n        }\n        if (nextIn.isInResult()) {\n          startLoc = Location.EXTERIOR;\n          break\n        }\n      }\n    }\n    if (startLoc === Location.NONE) { return null }\n    var currLoc = startLoc;\n    for (var it$1 = this.iterator(); it$1.hasNext();) {\n      var nextOut$1 = it$1.next();\n      var nextIn$1 = nextOut$1.getSym();\n      if (nextOut$1.isLineEdge()) {\n        nextOut$1.getEdge().setCovered(currLoc === Location.INTERIOR);\n      } else {\n        if (nextOut$1.isInResult()) { currLoc = Location.EXTERIOR; }\n        if (nextIn$1.isInResult()) { currLoc = Location.INTERIOR; }\n      }\n    }\n  };\n  DirectedEdgeStar.prototype.computeLabelling = function computeLabelling (geom) {\n    var this$1 = this;\n\n    EdgeEndStar$$1.prototype.computeLabelling.call(this, geom);\n    this._label = new Label(Location.NONE);\n    for (var it = this.iterator(); it.hasNext();) {\n      var ee = it.next();\n      var e = ee.getEdge();\n      var eLabel = e.getLabel();\n      for (var i = 0; i < 2; i++) {\n        var eLoc = eLabel.getLocation(i);\n        if (eLoc === Location.INTERIOR || eLoc === Location.BOUNDARY) { this$1._label.setLocation(i, Location.INTERIOR); }\n      }\n    }\n  };\n  DirectedEdgeStar.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  DirectedEdgeStar.prototype.getClass = function getClass () {\n    return DirectedEdgeStar\n  };\n\n  return DirectedEdgeStar;\n}(EdgeEndStar));\n\nvar OverlayNodeFactory = (function (NodeFactory$$1) {\n  function OverlayNodeFactory () {\n    NodeFactory$$1.apply(this, arguments);\n  }\n\n  if ( NodeFactory$$1 ) OverlayNodeFactory.__proto__ = NodeFactory$$1;\n  OverlayNodeFactory.prototype = Object.create( NodeFactory$$1 && NodeFactory$$1.prototype );\n  OverlayNodeFactory.prototype.constructor = OverlayNodeFactory;\n\n  OverlayNodeFactory.prototype.createNode = function createNode (coord) {\n    return new Node(coord, new DirectedEdgeStar())\n  };\n  OverlayNodeFactory.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  OverlayNodeFactory.prototype.getClass = function getClass () {\n    return OverlayNodeFactory\n  };\n\n  return OverlayNodeFactory;\n}(NodeFactory));\n\nvar OrientedCoordinateArray = function OrientedCoordinateArray () {\n  this._pts = null;\n  this._orientation = null;\n  var pts = arguments[0];\n  this._pts = pts;\n  this._orientation = OrientedCoordinateArray.orientation(pts);\n};\nOrientedCoordinateArray.prototype.compareTo = function compareTo (o1) {\n  var oca = o1;\n  var comp = OrientedCoordinateArray.compareOriented(this._pts, this._orientation, oca._pts, oca._orientation);\n  return comp\n};\nOrientedCoordinateArray.prototype.interfaces_ = function interfaces_ () {\n  return [Comparable]\n};\nOrientedCoordinateArray.prototype.getClass = function getClass () {\n  return OrientedCoordinateArray\n};\nOrientedCoordinateArray.orientation = function orientation (pts) {\n  return CoordinateArrays.increasingDirection(pts) === 1\n};\nOrientedCoordinateArray.compareOriented = function compareOriented (pts1, orientation1, pts2, orientation2) {\n  var dir1 = orientation1 ? 1 : -1;\n  var dir2 = orientation2 ? 1 : -1;\n  var limit1 = orientation1 ? pts1.length : -1;\n  var limit2 = orientation2 ? pts2.length : -1;\n  var i1 = orientation1 ? 0 : pts1.length - 1;\n  var i2 = orientation2 ? 0 : pts2.length - 1;\n  // const comp = 0\n  while (true) {\n    var compPt = pts1[i1].compareTo(pts2[i2]);\n    if (compPt !== 0) { return compPt }\n    i1 += dir1;\n    i2 += dir2;\n    var done1 = i1 === limit1;\n    var done2 = i2 === limit2;\n    if (done1 && !done2) { return -1 }\n    if (!done1 && done2) { return 1 }\n    if (done1 && done2) { return 0 }\n  }\n};\n\nvar EdgeList = function EdgeList () {\n  this._edges = new ArrayList();\n  this._ocaMap = new TreeMap();\n};\nEdgeList.prototype.print = function print (out) {\n    var this$1 = this;\n\n  out.print('MULTILINESTRING ( ');\n  for (var j = 0; j < this._edges.size(); j++) {\n    var e = this$1._edges.get(j);\n    if (j > 0) { out.print(','); }\n    out.print('(');\n    var pts = e.getCoordinates();\n    for (var i = 0; i < pts.length; i++) {\n      if (i > 0) { out.print(','); }\n      out.print(pts[i].x + ' ' + pts[i].y);\n    }\n    out.println(')');\n  }\n  out.print(')  ');\n};\nEdgeList.prototype.addAll = function addAll (edgeColl) {\n    var this$1 = this;\n\n  for (var i = edgeColl.iterator(); i.hasNext();) {\n    this$1.add(i.next());\n  }\n};\nEdgeList.prototype.findEdgeIndex = function findEdgeIndex (e) {\n    var this$1 = this;\n\n  for (var i = 0; i < this._edges.size(); i++) {\n    if (this$1._edges.get(i).equals(e)) { return i }\n  }\n  return -1\n};\nEdgeList.prototype.iterator = function iterator () {\n  return this._edges.iterator()\n};\nEdgeList.prototype.getEdges = function getEdges () {\n  return this._edges\n};\nEdgeList.prototype.get = function get (i) {\n  return this._edges.get(i)\n};\nEdgeList.prototype.findEqualEdge = function findEqualEdge (e) {\n  var oca = new OrientedCoordinateArray(e.getCoordinates());\n  var matchEdge = this._ocaMap.get(oca);\n  return matchEdge\n};\nEdgeList.prototype.add = function add (e) {\n  this._edges.add(e);\n  var oca = new OrientedCoordinateArray(e.getCoordinates());\n  this._ocaMap.put(oca, e);\n};\nEdgeList.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nEdgeList.prototype.getClass = function getClass () {\n  return EdgeList\n};\n\nvar SegmentIntersector = function SegmentIntersector () {};\n\nSegmentIntersector.prototype.processIntersections = function processIntersections (e0, segIndex0, e1, segIndex1) {};\nSegmentIntersector.prototype.isDone = function isDone () {};\nSegmentIntersector.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nSegmentIntersector.prototype.getClass = function getClass () {\n  return SegmentIntersector\n};\n\nvar IntersectionAdder = function IntersectionAdder () {\n  this._hasIntersection = false;\n  this._hasProper = false;\n  this._hasProperInterior = false;\n  this._hasInterior = false;\n  this._properIntersectionPoint = null;\n  this._li = null;\n  this._isSelfIntersection = null;\n  this.numIntersections = 0;\n  this.numInteriorIntersections = 0;\n  this.numProperIntersections = 0;\n  this.numTests = 0;\n  var li = arguments[0];\n  this._li = li;\n};\nIntersectionAdder.prototype.isTrivialIntersection = function isTrivialIntersection (e0, segIndex0, e1, segIndex1) {\n  if (e0 === e1) {\n    if (this._li.getIntersectionNum() === 1) {\n      if (IntersectionAdder.isAdjacentSegments(segIndex0, segIndex1)) { return true }\n      if (e0.isClosed()) {\n        var maxSegIndex = e0.size() - 1;\n        if ((segIndex0 === 0 && segIndex1 === maxSegIndex) ||\n            (segIndex1 === 0 && segIndex0 === maxSegIndex)) {\n          return true\n        }\n      }\n    }\n  }\n  return false\n};\nIntersectionAdder.prototype.getProperIntersectionPoint = function getProperIntersectionPoint () {\n  return this._properIntersectionPoint\n};\nIntersectionAdder.prototype.hasProperInteriorIntersection = function hasProperInteriorIntersection () {\n  return this._hasProperInterior\n};\nIntersectionAdder.prototype.getLineIntersector = function getLineIntersector () {\n  return this._li\n};\nIntersectionAdder.prototype.hasProperIntersection = function hasProperIntersection () {\n  return this._hasProper\n};\nIntersectionAdder.prototype.processIntersections = function processIntersections (e0, segIndex0, e1, segIndex1) {\n  if (e0 === e1 && segIndex0 === segIndex1) { return null }\n  this.numTests++;\n  var p00 = e0.getCoordinates()[segIndex0];\n  var p01 = e0.getCoordinates()[segIndex0 + 1];\n  var p10 = e1.getCoordinates()[segIndex1];\n  var p11 = e1.getCoordinates()[segIndex1 + 1];\n  this._li.computeIntersection(p00, p01, p10, p11);\n  if (this._li.hasIntersection()) {\n    this.numIntersections++;\n    if (this._li.isInteriorIntersection()) {\n      this.numInteriorIntersections++;\n      this._hasInterior = true;\n    }\n    if (!this.isTrivialIntersection(e0, segIndex0, e1, segIndex1)) {\n      this._hasIntersection = true;\n      e0.addIntersections(this._li, segIndex0, 0);\n      e1.addIntersections(this._li, segIndex1, 1);\n      if (this._li.isProper()) {\n        this.numProperIntersections++;\n        this._hasProper = true;\n        this._hasProperInterior = true;\n      }\n    }\n  }\n};\nIntersectionAdder.prototype.hasIntersection = function hasIntersection () {\n  return this._hasIntersection\n};\nIntersectionAdder.prototype.isDone = function isDone () {\n  return false\n};\nIntersectionAdder.prototype.hasInteriorIntersection = function hasInteriorIntersection () {\n  return this._hasInterior\n};\nIntersectionAdder.prototype.interfaces_ = function interfaces_ () {\n  return [SegmentIntersector]\n};\nIntersectionAdder.prototype.getClass = function getClass () {\n  return IntersectionAdder\n};\nIntersectionAdder.isAdjacentSegments = function isAdjacentSegments (i1, i2) {\n  return Math.abs(i1 - i2) === 1\n};\n\nvar EdgeIntersection = function EdgeIntersection () {\n  this.coord = null;\n  this.segmentIndex = null;\n  this.dist = null;\n  var coord = arguments[0];\n  var segmentIndex = arguments[1];\n  var dist = arguments[2];\n  this.coord = new Coordinate(coord);\n  this.segmentIndex = segmentIndex;\n  this.dist = dist;\n};\nEdgeIntersection.prototype.getSegmentIndex = function getSegmentIndex () {\n  return this.segmentIndex\n};\nEdgeIntersection.prototype.getCoordinate = function getCoordinate () {\n  return this.coord\n};\nEdgeIntersection.prototype.print = function print (out) {\n  out.print(this.coord);\n  out.print(' seg # = ' + this.segmentIndex);\n  out.println(' dist = ' + this.dist);\n};\nEdgeIntersection.prototype.compareTo = function compareTo (obj) {\n  var other = obj;\n  return this.compare(other.segmentIndex, other.dist)\n};\nEdgeIntersection.prototype.isEndPoint = function isEndPoint (maxSegmentIndex) {\n  if (this.segmentIndex === 0 && this.dist === 0.0) { return true }\n  if (this.segmentIndex === maxSegmentIndex) { return true }\n  return false\n};\nEdgeIntersection.prototype.toString = function toString () {\n  return this.coord + ' seg # = ' + this.segmentIndex + ' dist = ' + this.dist\n};\nEdgeIntersection.prototype.getDistance = function getDistance () {\n  return this.dist\n};\nEdgeIntersection.prototype.compare = function compare (segmentIndex, dist) {\n  if (this.segmentIndex < segmentIndex) { return -1 }\n  if (this.segmentIndex > segmentIndex) { return 1 }\n  if (this.dist < dist) { return -1 }\n  if (this.dist > dist) { return 1 }\n  return 0\n};\nEdgeIntersection.prototype.interfaces_ = function interfaces_ () {\n  return [Comparable]\n};\nEdgeIntersection.prototype.getClass = function getClass () {\n  return EdgeIntersection\n};\n\nvar EdgeIntersectionList = function EdgeIntersectionList () {\n  this._nodeMap = new TreeMap();\n  this.edge = null;\n  var edge = arguments[0];\n  this.edge = edge;\n};\nEdgeIntersectionList.prototype.print = function print (out) {\n  out.println('Intersections:');\n  for (var it = this.iterator(); it.hasNext();) {\n    var ei = it.next();\n    ei.print(out);\n  }\n};\nEdgeIntersectionList.prototype.iterator = function iterator () {\n  return this._nodeMap.values().iterator()\n};\nEdgeIntersectionList.prototype.addSplitEdges = function addSplitEdges (edgeList) {\n    var this$1 = this;\n\n  this.addEndpoints();\n  var it = this.iterator();\n  var eiPrev = it.next();\n  while (it.hasNext()) {\n    var ei = it.next();\n    var newEdge = this$1.createSplitEdge(eiPrev, ei);\n    edgeList.add(newEdge);\n    eiPrev = ei;\n  }\n};\nEdgeIntersectionList.prototype.addEndpoints = function addEndpoints () {\n  var maxSegIndex = this.edge.pts.length - 1;\n  this.add(this.edge.pts[0], 0, 0.0);\n  this.add(this.edge.pts[maxSegIndex], maxSegIndex, 0.0);\n};\nEdgeIntersectionList.prototype.createSplitEdge = function createSplitEdge (ei0, ei1) {\n    var this$1 = this;\n\n  var npts = ei1.segmentIndex - ei0.segmentIndex + 2;\n  var lastSegStartPt = this.edge.pts[ei1.segmentIndex];\n  var useIntPt1 = ei1.dist > 0.0 || !ei1.coord.equals2D(lastSegStartPt);\n  if (!useIntPt1) {\n    npts--;\n  }\n  var pts = new Array(npts).fill(null);\n  var ipt = 0;\n  pts[ipt++] = new Coordinate(ei0.coord);\n  for (var i = ei0.segmentIndex + 1; i <= ei1.segmentIndex; i++) {\n    pts[ipt++] = this$1.edge.pts[i];\n  }\n  if (useIntPt1) { pts[ipt] = ei1.coord; }\n  return new Edge(pts, new Label(this.edge._label))\n};\nEdgeIntersectionList.prototype.add = function add (intPt, segmentIndex, dist) {\n  var eiNew = new EdgeIntersection(intPt, segmentIndex, dist);\n  var ei = this._nodeMap.get(eiNew);\n  if (ei !== null) {\n    return ei\n  }\n  this._nodeMap.put(eiNew, eiNew);\n  return eiNew\n};\nEdgeIntersectionList.prototype.isIntersection = function isIntersection (pt) {\n  for (var it = this.iterator(); it.hasNext();) {\n    var ei = it.next();\n    if (ei.coord.equals(pt)) { return true }\n  }\n  return false\n};\nEdgeIntersectionList.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nEdgeIntersectionList.prototype.getClass = function getClass () {\n  return EdgeIntersectionList\n};\n\nvar MonotoneChainIndexer = function MonotoneChainIndexer () {};\n\nMonotoneChainIndexer.prototype.getChainStartIndices = function getChainStartIndices (pts) {\n    var this$1 = this;\n\n  var start = 0;\n  var startIndexList = new ArrayList();\n  startIndexList.add(new Integer(start));\n  do {\n    var last = this$1.findChainEnd(pts, start);\n    startIndexList.add(new Integer(last));\n    start = last;\n  } while (start < pts.length - 1)\n  var startIndex = MonotoneChainIndexer.toIntArray(startIndexList);\n  return startIndex\n};\nMonotoneChainIndexer.prototype.findChainEnd = function findChainEnd (pts, start) {\n  var chainQuad = Quadrant.quadrant(pts[start], pts[start + 1]);\n  var last = start + 1;\n  while (last < pts.length) {\n    var quad = Quadrant.quadrant(pts[last - 1], pts[last]);\n    if (quad !== chainQuad) { break }\n    last++;\n  }\n  return last - 1\n};\nMonotoneChainIndexer.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nMonotoneChainIndexer.prototype.getClass = function getClass () {\n  return MonotoneChainIndexer\n};\nMonotoneChainIndexer.toIntArray = function toIntArray (list) {\n  var array = new Array(list.size()).fill(null);\n  for (var i = 0; i < array.length; i++) {\n    array[i] = list.get(i).intValue();\n  }\n  return array\n};\n\nvar MonotoneChainEdge = function MonotoneChainEdge () {\n  this.e = null;\n  this.pts = null;\n  this.startIndex = null;\n  this.env1 = new Envelope();\n  this.env2 = new Envelope();\n  var e = arguments[0];\n  this.e = e;\n  this.pts = e.getCoordinates();\n  var mcb = new MonotoneChainIndexer();\n  this.startIndex = mcb.getChainStartIndices(this.pts);\n};\nMonotoneChainEdge.prototype.getCoordinates = function getCoordinates () {\n  return this.pts\n};\nMonotoneChainEdge.prototype.getMaxX = function getMaxX (chainIndex) {\n  var x1 = this.pts[this.startIndex[chainIndex]].x;\n  var x2 = this.pts[this.startIndex[chainIndex + 1]].x;\n  return x1 > x2 ? x1 : x2\n};\nMonotoneChainEdge.prototype.getMinX = function getMinX (chainIndex) {\n  var x1 = this.pts[this.startIndex[chainIndex]].x;\n  var x2 = this.pts[this.startIndex[chainIndex + 1]].x;\n  return x1 < x2 ? x1 : x2\n};\nMonotoneChainEdge.prototype.computeIntersectsForChain = function computeIntersectsForChain () {\n  if (arguments.length === 4) {\n    var chainIndex0 = arguments[0];\n    var mce = arguments[1];\n    var chainIndex1 = arguments[2];\n    var si = arguments[3];\n    this.computeIntersectsForChain(this.startIndex[chainIndex0], this.startIndex[chainIndex0 + 1], mce, mce.startIndex[chainIndex1], mce.startIndex[chainIndex1 + 1], si);\n  } else if (arguments.length === 6) {\n    var start0 = arguments[0];\n    var end0 = arguments[1];\n    var mce$1 = arguments[2];\n    var start1 = arguments[3];\n    var end1 = arguments[4];\n    var ei = arguments[5];\n    var p00 = this.pts[start0];\n    var p01 = this.pts[end0];\n    var p10 = mce$1.pts[start1];\n    var p11 = mce$1.pts[end1];\n    if (end0 - start0 === 1 && end1 - start1 === 1) {\n      ei.addIntersections(this.e, start0, mce$1.e, start1);\n      return null\n    }\n    this.env1.init(p00, p01);\n    this.env2.init(p10, p11);\n    if (!this.env1.intersects(this.env2)) { return null }\n    var mid0 = Math.trunc((start0 + end0) / 2);\n    var mid1 = Math.trunc((start1 + end1) / 2);\n    if (start0 < mid0) {\n      if (start1 < mid1) { this.computeIntersectsForChain(start0, mid0, mce$1, start1, mid1, ei); }\n      if (mid1 < end1) { this.computeIntersectsForChain(start0, mid0, mce$1, mid1, end1, ei); }\n    }\n    if (mid0 < end0) {\n      if (start1 < mid1) { this.computeIntersectsForChain(mid0, end0, mce$1, start1, mid1, ei); }\n      if (mid1 < end1) { this.computeIntersectsForChain(mid0, end0, mce$1, mid1, end1, ei); }\n    }\n  }\n};\nMonotoneChainEdge.prototype.getStartIndexes = function getStartIndexes () {\n  return this.startIndex\n};\nMonotoneChainEdge.prototype.computeIntersects = function computeIntersects (mce, si) {\n    var this$1 = this;\n\n  for (var i = 0; i < this.startIndex.length - 1; i++) {\n    for (var j = 0; j < mce.startIndex.length - 1; j++) {\n      this$1.computeIntersectsForChain(i, mce, j, si);\n    }\n  }\n};\nMonotoneChainEdge.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nMonotoneChainEdge.prototype.getClass = function getClass () {\n  return MonotoneChainEdge\n};\n\nvar Depth = function Depth () {\n  var this$1 = this;\n\n  this._depth = Array(2).fill().map(function () { return Array(3); });\n  for (var i = 0; i < 2; i++) {\n    for (var j = 0; j < 3; j++) {\n      this$1._depth[i][j] = Depth.NULL_VALUE;\n    }\n  }\n};\n\nvar staticAccessors$31 = { NULL_VALUE: { configurable: true } };\nDepth.prototype.getDepth = function getDepth (geomIndex, posIndex) {\n  return this._depth[geomIndex][posIndex]\n};\nDepth.prototype.setDepth = function setDepth (geomIndex, posIndex, depthValue) {\n  this._depth[geomIndex][posIndex] = depthValue;\n};\nDepth.prototype.isNull = function isNull () {\n    var this$1 = this;\n\n  if (arguments.length === 0) {\n    for (var i = 0; i < 2; i++) {\n      for (var j = 0; j < 3; j++) {\n        if (this$1._depth[i][j] !== Depth.NULL_VALUE) { return false }\n      }\n    }\n    return true\n  } else if (arguments.length === 1) {\n    var geomIndex = arguments[0];\n    return this._depth[geomIndex][1] === Depth.NULL_VALUE\n  } else if (arguments.length === 2) {\n    var geomIndex$1 = arguments[0];\n    var posIndex = arguments[1];\n    return this._depth[geomIndex$1][posIndex] === Depth.NULL_VALUE\n  }\n};\nDepth.prototype.normalize = function normalize () {\n    var this$1 = this;\n\n  for (var i = 0; i < 2; i++) {\n    if (!this$1.isNull(i)) {\n      var minDepth = this$1._depth[i][1];\n      if (this$1._depth[i][2] < minDepth) { minDepth = this$1._depth[i][2]; }\n      if (minDepth < 0) { minDepth = 0; }\n      for (var j = 1; j < 3; j++) {\n        var newValue = 0;\n        if (this$1._depth[i][j] > minDepth) { newValue = 1; }\n        this$1._depth[i][j] = newValue;\n      }\n    }\n  }\n};\nDepth.prototype.getDelta = function getDelta (geomIndex) {\n  return this._depth[geomIndex][Position.RIGHT] - this._depth[geomIndex][Position.LEFT]\n};\nDepth.prototype.getLocation = function getLocation (geomIndex, posIndex) {\n  if (this._depth[geomIndex][posIndex] <= 0) { return Location.EXTERIOR }\n  return Location.INTERIOR\n};\nDepth.prototype.toString = function toString () {\n  return 'A: ' + this._depth[0][1] + ',' + this._depth[0][2] + ' B: ' + this._depth[1][1] + ',' + this._depth[1][2]\n};\nDepth.prototype.add = function add () {\n    var this$1 = this;\n\n  if (arguments.length === 1) {\n    var lbl = arguments[0];\n    for (var i = 0; i < 2; i++) {\n      for (var j = 1; j < 3; j++) {\n        var loc = lbl.getLocation(i, j);\n        if (loc === Location.EXTERIOR || loc === Location.INTERIOR) {\n          if (this$1.isNull(i, j)) {\n            this$1._depth[i][j] = Depth.depthAtLocation(loc);\n          } else { this$1._depth[i][j] += Depth.depthAtLocation(loc); }\n        }\n      }\n    }\n  } else if (arguments.length === 3) {\n    var geomIndex = arguments[0];\n    var posIndex = arguments[1];\n    var location = arguments[2];\n    if (location === Location.INTERIOR) { this._depth[geomIndex][posIndex]++; }\n  }\n};\nDepth.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nDepth.prototype.getClass = function getClass () {\n  return Depth\n};\nDepth.depthAtLocation = function depthAtLocation (location) {\n  if (location === Location.EXTERIOR) { return 0 }\n  if (location === Location.INTERIOR) { return 1 }\n  return Depth.NULL_VALUE\n};\nstaticAccessors$31.NULL_VALUE.get = function () { return -1 };\n\nObject.defineProperties( Depth, staticAccessors$31 );\n\nvar Edge = (function (GraphComponent$$1) {\n  function Edge () {\n    GraphComponent$$1.call(this);\n    this.pts = null;\n    this._env = null;\n    this.eiList = new EdgeIntersectionList(this);\n    this._name = null;\n    this._mce = null;\n    this._isIsolated = true;\n    this._depth = new Depth();\n    this._depthDelta = 0;\n    if (arguments.length === 1) {\n      var pts = arguments[0];\n      Edge.call(this, pts, null);\n    } else if (arguments.length === 2) {\n      var pts$1 = arguments[0];\n      var label = arguments[1];\n      this.pts = pts$1;\n      this._label = label;\n    }\n  }\n\n  if ( GraphComponent$$1 ) Edge.__proto__ = GraphComponent$$1;\n  Edge.prototype = Object.create( GraphComponent$$1 && GraphComponent$$1.prototype );\n  Edge.prototype.constructor = Edge;\n  Edge.prototype.getDepth = function getDepth () {\n    return this._depth\n  };\n  Edge.prototype.getCollapsedEdge = function getCollapsedEdge () {\n    var newPts = new Array(2).fill(null);\n    newPts[0] = this.pts[0];\n    newPts[1] = this.pts[1];\n    var newe = new Edge(newPts, Label.toLineLabel(this._label));\n    return newe\n  };\n  Edge.prototype.isIsolated = function isIsolated () {\n    return this._isIsolated\n  };\n  Edge.prototype.getCoordinates = function getCoordinates () {\n    return this.pts\n  };\n  Edge.prototype.setIsolated = function setIsolated (isIsolated) {\n    this._isIsolated = isIsolated;\n  };\n  Edge.prototype.setName = function setName (name) {\n    this._name = name;\n  };\n  Edge.prototype.equals = function equals (o) {\n    var this$1 = this;\n\n    if (!(o instanceof Edge)) { return false }\n    var e = o;\n    if (this.pts.length !== e.pts.length) { return false }\n    var isEqualForward = true;\n    var isEqualReverse = true;\n    var iRev = this.pts.length;\n    for (var i = 0; i < this.pts.length; i++) {\n      if (!this$1.pts[i].equals2D(e.pts[i])) {\n        isEqualForward = false;\n      }\n      if (!this$1.pts[i].equals2D(e.pts[--iRev])) {\n        isEqualReverse = false;\n      }\n      if (!isEqualForward && !isEqualReverse) { return false }\n    }\n    return true\n  };\n  Edge.prototype.getCoordinate = function getCoordinate () {\n    if (arguments.length === 0) {\n      if (this.pts.length > 0) { return this.pts[0] }\n      return null\n    } else if (arguments.length === 1) {\n      var i = arguments[0];\n      return this.pts[i]\n    }\n  };\n  Edge.prototype.print = function print (out) {\n    var this$1 = this;\n\n    out.print('edge ' + this._name + ': ');\n    out.print('LINESTRING (');\n    for (var i = 0; i < this.pts.length; i++) {\n      if (i > 0) { out.print(','); }\n      out.print(this$1.pts[i].x + ' ' + this$1.pts[i].y);\n    }\n    out.print(')  ' + this._label + ' ' + this._depthDelta);\n  };\n  Edge.prototype.computeIM = function computeIM (im) {\n    Edge.updateIM(this._label, im);\n  };\n  Edge.prototype.isCollapsed = function isCollapsed () {\n    if (!this._label.isArea()) { return false }\n    if (this.pts.length !== 3) { return false }\n    if (this.pts[0].equals(this.pts[2])) { return true }\n    return false\n  };\n  Edge.prototype.isClosed = function isClosed () {\n    return this.pts[0].equals(this.pts[this.pts.length - 1])\n  };\n  Edge.prototype.getMaximumSegmentIndex = function getMaximumSegmentIndex () {\n    return this.pts.length - 1\n  };\n  Edge.prototype.getDepthDelta = function getDepthDelta () {\n    return this._depthDelta\n  };\n  Edge.prototype.getNumPoints = function getNumPoints () {\n    return this.pts.length\n  };\n  Edge.prototype.printReverse = function printReverse (out) {\n    var this$1 = this;\n\n    out.print('edge ' + this._name + ': ');\n    for (var i = this.pts.length - 1; i >= 0; i--) {\n      out.print(this$1.pts[i] + ' ');\n    }\n    out.println('');\n  };\n  Edge.prototype.getMonotoneChainEdge = function getMonotoneChainEdge () {\n    if (this._mce === null) { this._mce = new MonotoneChainEdge(this); }\n    return this._mce\n  };\n  Edge.prototype.getEnvelope = function getEnvelope () {\n    var this$1 = this;\n\n    if (this._env === null) {\n      this._env = new Envelope();\n      for (var i = 0; i < this.pts.length; i++) {\n        this$1._env.expandToInclude(this$1.pts[i]);\n      }\n    }\n    return this._env\n  };\n  Edge.prototype.addIntersection = function addIntersection (li, segmentIndex, geomIndex, intIndex) {\n    var intPt = new Coordinate(li.getIntersection(intIndex));\n    var normalizedSegmentIndex = segmentIndex;\n    var dist = li.getEdgeDistance(geomIndex, intIndex);\n    var nextSegIndex = normalizedSegmentIndex + 1;\n    if (nextSegIndex < this.pts.length) {\n      var nextPt = this.pts[nextSegIndex];\n      if (intPt.equals2D(nextPt)) {\n        normalizedSegmentIndex = nextSegIndex;\n        dist = 0.0;\n      }\n    }\n    this.eiList.add(intPt, normalizedSegmentIndex, dist);\n  };\n  Edge.prototype.toString = function toString () {\n    var this$1 = this;\n\n    var buf = new StringBuffer();\n    buf.append('edge ' + this._name + ': ');\n    buf.append('LINESTRING (');\n    for (var i = 0; i < this.pts.length; i++) {\n      if (i > 0) { buf.append(','); }\n      buf.append(this$1.pts[i].x + ' ' + this$1.pts[i].y);\n    }\n    buf.append(')  ' + this._label + ' ' + this._depthDelta);\n    return buf.toString()\n  };\n  Edge.prototype.isPointwiseEqual = function isPointwiseEqual (e) {\n    var this$1 = this;\n\n    if (this.pts.length !== e.pts.length) { return false }\n    for (var i = 0; i < this.pts.length; i++) {\n      if (!this$1.pts[i].equals2D(e.pts[i])) {\n        return false\n      }\n    }\n    return true\n  };\n  Edge.prototype.setDepthDelta = function setDepthDelta (depthDelta) {\n    this._depthDelta = depthDelta;\n  };\n  Edge.prototype.getEdgeIntersectionList = function getEdgeIntersectionList () {\n    return this.eiList\n  };\n  Edge.prototype.addIntersections = function addIntersections (li, segmentIndex, geomIndex) {\n    var this$1 = this;\n\n    for (var i = 0; i < li.getIntersectionNum(); i++) {\n      this$1.addIntersection(li, segmentIndex, geomIndex, i);\n    }\n  };\n  Edge.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  Edge.prototype.getClass = function getClass () {\n    return Edge\n  };\n  Edge.updateIM = function updateIM () {\n    if (arguments.length === 2) {\n      var label = arguments[0];\n      var im = arguments[1];\n      im.setAtLeastIfValid(label.getLocation(0, Position.ON), label.getLocation(1, Position.ON), 1);\n      if (label.isArea()) {\n        im.setAtLeastIfValid(label.getLocation(0, Position.LEFT), label.getLocation(1, Position.LEFT), 2);\n        im.setAtLeastIfValid(label.getLocation(0, Position.RIGHT), label.getLocation(1, Position.RIGHT), 2);\n      }\n    } else { return GraphComponent$$1.prototype.updateIM.apply(this, arguments) }\n  };\n\n  return Edge;\n}(GraphComponent));\n\nvar BufferBuilder = function BufferBuilder (bufParams) {\n  this._workingPrecisionModel = null;\n  this._workingNoder = null;\n  this._geomFact = null;\n  this._graph = null;\n  this._edgeList = new EdgeList();\n  this._bufParams = bufParams || null;\n};\nBufferBuilder.prototype.setWorkingPrecisionModel = function setWorkingPrecisionModel (pm) {\n  this._workingPrecisionModel = pm;\n};\nBufferBuilder.prototype.insertUniqueEdge = function insertUniqueEdge (e) {\n  var existingEdge = this._edgeList.findEqualEdge(e);\n  if (existingEdge !== null) {\n    var existingLabel = existingEdge.getLabel();\n    var labelToMerge = e.getLabel();\n    if (!existingEdge.isPointwiseEqual(e)) {\n      labelToMerge = new Label(e.getLabel());\n      labelToMerge.flip();\n    }\n    existingLabel.merge(labelToMerge);\n    var mergeDelta = BufferBuilder.depthDelta(labelToMerge);\n    var existingDelta = existingEdge.getDepthDelta();\n    var newDelta = existingDelta + mergeDelta;\n    existingEdge.setDepthDelta(newDelta);\n  } else {\n    this._edgeList.add(e);\n    e.setDepthDelta(BufferBuilder.depthDelta(e.getLabel()));\n  }\n};\nBufferBuilder.prototype.buildSubgraphs = function buildSubgraphs (subgraphList, polyBuilder) {\n  var processedGraphs = new ArrayList();\n  for (var i = subgraphList.iterator(); i.hasNext();) {\n    var subgraph = i.next();\n    var p = subgraph.getRightmostCoordinate();\n    var locater = new SubgraphDepthLocater(processedGraphs);\n    var outsideDepth = locater.getDepth(p);\n    subgraph.computeDepth(outsideDepth);\n    subgraph.findResultEdges();\n    processedGraphs.add(subgraph);\n    polyBuilder.add(subgraph.getDirectedEdges(), subgraph.getNodes());\n  }\n};\nBufferBuilder.prototype.createSubgraphs = function createSubgraphs (graph) {\n  var subgraphList = new ArrayList();\n  for (var i = graph.getNodes().iterator(); i.hasNext();) {\n    var node = i.next();\n    if (!node.isVisited()) {\n      var subgraph = new BufferSubgraph();\n      subgraph.create(node);\n      subgraphList.add(subgraph);\n    }\n  }\n  Collections.sort(subgraphList, Collections.reverseOrder());\n  return subgraphList\n};\nBufferBuilder.prototype.createEmptyResultGeometry = function createEmptyResultGeometry () {\n  var emptyGeom = this._geomFact.createPolygon();\n  return emptyGeom\n};\nBufferBuilder.prototype.getNoder = function getNoder (precisionModel) {\n  if (this._workingNoder !== null) { return this._workingNoder }\n  var noder = new MCIndexNoder();\n  var li = new RobustLineIntersector();\n  li.setPrecisionModel(precisionModel);\n  noder.setSegmentIntersector(new IntersectionAdder(li));\n  return noder\n};\nBufferBuilder.prototype.buffer = function buffer (g, distance) {\n  var precisionModel = this._workingPrecisionModel;\n  if (precisionModel === null) { precisionModel = g.getPrecisionModel(); }\n  this._geomFact = g.getFactory();\n  var curveBuilder = new OffsetCurveBuilder(precisionModel, this._bufParams);\n  var curveSetBuilder = new OffsetCurveSetBuilder(g, distance, curveBuilder);\n  var bufferSegStrList = curveSetBuilder.getCurves();\n  if (bufferSegStrList.size() <= 0) {\n    return this.createEmptyResultGeometry()\n  }\n  this.computeNodedEdges(bufferSegStrList, precisionModel);\n  this._graph = new PlanarGraph(new OverlayNodeFactory());\n  this._graph.addEdges(this._edgeList.getEdges());\n  var subgraphList = this.createSubgraphs(this._graph);\n  var polyBuilder = new PolygonBuilder(this._geomFact);\n  this.buildSubgraphs(subgraphList, polyBuilder);\n  var resultPolyList = polyBuilder.getPolygons();\n  if (resultPolyList.size() <= 0) {\n    return this.createEmptyResultGeometry()\n  }\n  var resultGeom = this._geomFact.buildGeometry(resultPolyList);\n  return resultGeom\n};\nBufferBuilder.prototype.computeNodedEdges = function computeNodedEdges (bufferSegStrList, precisionModel) {\n    var this$1 = this;\n\n  var noder = this.getNoder(precisionModel);\n  noder.computeNodes(bufferSegStrList);\n  var nodedSegStrings = noder.getNodedSubstrings();\n  for (var i = nodedSegStrings.iterator(); i.hasNext();) {\n    var segStr = i.next();\n    var pts = segStr.getCoordinates();\n    if (pts.length === 2 && pts[0].equals2D(pts[1])) { continue }\n    var oldLabel = segStr.getData();\n    var edge = new Edge(segStr.getCoordinates(), new Label(oldLabel));\n    this$1.insertUniqueEdge(edge);\n  }\n};\nBufferBuilder.prototype.setNoder = function setNoder (noder) {\n  this._workingNoder = noder;\n};\nBufferBuilder.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nBufferBuilder.prototype.getClass = function getClass () {\n  return BufferBuilder\n};\nBufferBuilder.depthDelta = function depthDelta (label) {\n  var lLoc = label.getLocation(0, Position.LEFT);\n  var rLoc = label.getLocation(0, Position.RIGHT);\n  if (lLoc === Location.INTERIOR && rLoc === Location.EXTERIOR) { return 1; } else if (lLoc === Location.EXTERIOR && rLoc === Location.INTERIOR) { return -1 }\n  return 0\n};\nBufferBuilder.convertSegStrings = function convertSegStrings (it) {\n  var fact = new GeometryFactory();\n  var lines = new ArrayList();\n  while (it.hasNext()) {\n    var ss = it.next();\n    var line = fact.createLineString(ss.getCoordinates());\n    lines.add(line);\n  }\n  return fact.buildGeometry(lines)\n};\n\nvar ScaledNoder = function ScaledNoder () {\n  this._noder = null;\n  this._scaleFactor = null;\n  this._offsetX = null;\n  this._offsetY = null;\n  this._isScaled = false;\n  if (arguments.length === 2) {\n    var noder = arguments[0];\n    var scaleFactor = arguments[1];\n    this._noder = noder;\n    this._scaleFactor = scaleFactor;\n    this._offsetX = 0.0;\n    this._offsetY = 0.0;\n    this._isScaled = !this.isIntegerPrecision();\n  } else if (arguments.length === 4) {\n    var noder$1 = arguments[0];\n    var scaleFactor$1 = arguments[1];\n    var offsetX = arguments[2];\n    var offsetY = arguments[3];\n    this._noder = noder$1;\n    this._scaleFactor = scaleFactor$1;\n    this._offsetX = offsetX;\n    this._offsetY = offsetY;\n    this._isScaled = !this.isIntegerPrecision();\n  }\n};\nScaledNoder.prototype.rescale = function rescale () {\n    var this$1 = this;\n\n  if (hasInterface(arguments[0], Collection)) {\n    var segStrings = arguments[0];\n    for (var i = segStrings.iterator(); i.hasNext();) {\n      var ss = i.next();\n      this$1.rescale(ss.getCoordinates());\n    }\n  } else if (arguments[0] instanceof Array) {\n    var pts = arguments[0];\n    // let p0 = null\n    // let p1 = null\n    // if (pts.length === 2) {\n    // p0 = new Coordinate(pts[0])\n    // p1 = new Coordinate(pts[1])\n    // }\n    for (var i$1 = 0; i$1 < pts.length; i$1++) {\n      pts[i$1].x = pts[i$1].x / this$1._scaleFactor + this$1._offsetX;\n      pts[i$1].y = pts[i$1].y / this$1._scaleFactor + this$1._offsetY;\n    }\n    if (pts.length === 2 && pts[0].equals2D(pts[1])) {\n      System.out.println(pts);\n    }\n  }\n};\nScaledNoder.prototype.scale = function scale () {\n    var this$1 = this;\n\n  if (hasInterface(arguments[0], Collection)) {\n    var segStrings = arguments[0];\n    var nodedSegmentStrings = new ArrayList();\n    for (var i = segStrings.iterator(); i.hasNext();) {\n      var ss = i.next();\n      nodedSegmentStrings.add(new NodedSegmentString(this$1.scale(ss.getCoordinates()), ss.getData()));\n    }\n    return nodedSegmentStrings\n  } else if (arguments[0] instanceof Array) {\n    var pts = arguments[0];\n    var roundPts = new Array(pts.length).fill(null);\n    for (var i$1 = 0; i$1 < pts.length; i$1++) {\n      roundPts[i$1] = new Coordinate(Math.round((pts[i$1].x - this$1._offsetX) * this$1._scaleFactor), Math.round((pts[i$1].y - this$1._offsetY) * this$1._scaleFactor), pts[i$1].z);\n    }\n    var roundPtsNoDup = CoordinateArrays.removeRepeatedPoints(roundPts);\n    return roundPtsNoDup\n  }\n};\nScaledNoder.prototype.isIntegerPrecision = function isIntegerPrecision () {\n  return this._scaleFactor === 1.0\n};\nScaledNoder.prototype.getNodedSubstrings = function getNodedSubstrings () {\n  var splitSS = this._noder.getNodedSubstrings();\n  if (this._isScaled) { this.rescale(splitSS); }\n  return splitSS\n};\nScaledNoder.prototype.computeNodes = function computeNodes (inputSegStrings) {\n  var intSegStrings = inputSegStrings;\n  if (this._isScaled) { intSegStrings = this.scale(inputSegStrings); }\n  this._noder.computeNodes(intSegStrings);\n};\nScaledNoder.prototype.interfaces_ = function interfaces_ () {\n  return [Noder]\n};\nScaledNoder.prototype.getClass = function getClass () {\n  return ScaledNoder\n};\n\nvar NodingValidator = function NodingValidator () {\n  this._li = new RobustLineIntersector();\n  this._segStrings = null;\n  var segStrings = arguments[0];\n  this._segStrings = segStrings;\n};\n\nvar staticAccessors$33 = { fact: { configurable: true } };\nNodingValidator.prototype.checkEndPtVertexIntersections = function checkEndPtVertexIntersections () {\n    var this$1 = this;\n\n  if (arguments.length === 0) {\n    for (var i = this._segStrings.iterator(); i.hasNext();) {\n      var ss = i.next();\n      var pts = ss.getCoordinates();\n      this$1.checkEndPtVertexIntersections(pts[0], this$1._segStrings);\n      this$1.checkEndPtVertexIntersections(pts[pts.length - 1], this$1._segStrings);\n    }\n  } else if (arguments.length === 2) {\n    var testPt = arguments[0];\n    var segStrings = arguments[1];\n    for (var i$1 = segStrings.iterator(); i$1.hasNext();) {\n      var ss$1 = i$1.next();\n      var pts$1 = ss$1.getCoordinates();\n      for (var j = 1; j < pts$1.length - 1; j++) {\n        if (pts$1[j].equals(testPt)) { throw new RuntimeException('found endpt/interior pt intersection at index ' + j + ' :pt ' + testPt) }\n      }\n    }\n  }\n};\nNodingValidator.prototype.checkInteriorIntersections = function checkInteriorIntersections () {\n    var this$1 = this;\n\n  if (arguments.length === 0) {\n    for (var i = this._segStrings.iterator(); i.hasNext();) {\n      var ss0 = i.next();\n      for (var j = this._segStrings.iterator(); j.hasNext();) {\n        var ss1 = j.next();\n        this$1.checkInteriorIntersections(ss0, ss1);\n      }\n    }\n  } else if (arguments.length === 2) {\n    var ss0$1 = arguments[0];\n    var ss1$1 = arguments[1];\n    var pts0 = ss0$1.getCoordinates();\n    var pts1 = ss1$1.getCoordinates();\n    for (var i0 = 0; i0 < pts0.length - 1; i0++) {\n      for (var i1 = 0; i1 < pts1.length - 1; i1++) {\n        this$1.checkInteriorIntersections(ss0$1, i0, ss1$1, i1);\n      }\n    }\n  } else if (arguments.length === 4) {\n    var e0 = arguments[0];\n    var segIndex0 = arguments[1];\n    var e1 = arguments[2];\n    var segIndex1 = arguments[3];\n    if (e0 === e1 && segIndex0 === segIndex1) { return null }\n    var p00 = e0.getCoordinates()[segIndex0];\n    var p01 = e0.getCoordinates()[segIndex0 + 1];\n    var p10 = e1.getCoordinates()[segIndex1];\n    var p11 = e1.getCoordinates()[segIndex1 + 1];\n    this._li.computeIntersection(p00, p01, p10, p11);\n    if (this._li.hasIntersection()) {\n      if (this._li.isProper() || this.hasInteriorIntersection(this._li, p00, p01) || this.hasInteriorIntersection(this._li, p10, p11)) {\n        throw new RuntimeException('found non-noded intersection at ' + p00 + '-' + p01 + ' and ' + p10 + '-' + p11)\n      }\n    }\n  }\n};\nNodingValidator.prototype.checkValid = function checkValid () {\n  this.checkEndPtVertexIntersections();\n  this.checkInteriorIntersections();\n  this.checkCollapses();\n};\nNodingValidator.prototype.checkCollapses = function checkCollapses () {\n    var this$1 = this;\n\n  if (arguments.length === 0) {\n    for (var i = this._segStrings.iterator(); i.hasNext();) {\n      var ss = i.next();\n      this$1.checkCollapses(ss);\n    }\n  } else if (arguments.length === 1) {\n    var ss$1 = arguments[0];\n    var pts = ss$1.getCoordinates();\n    for (var i$1 = 0; i$1 < pts.length - 2; i$1++) {\n      this$1.checkCollapse(pts[i$1], pts[i$1 + 1], pts[i$1 + 2]);\n    }\n  }\n};\nNodingValidator.prototype.hasInteriorIntersection = function hasInteriorIntersection (li, p0, p1) {\n  for (var i = 0; i < li.getIntersectionNum(); i++) {\n    var intPt = li.getIntersection(i);\n    if (!(intPt.equals(p0) || intPt.equals(p1))) { return true }\n  }\n  return false\n};\nNodingValidator.prototype.checkCollapse = function checkCollapse (p0, p1, p2) {\n  if (p0.equals(p2)) { throw new RuntimeException('found non-noded collapse at ' + NodingValidator.fact.createLineString([p0, p1, p2])) }\n};\nNodingValidator.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nNodingValidator.prototype.getClass = function getClass () {\n  return NodingValidator\n};\nstaticAccessors$33.fact.get = function () { return new GeometryFactory() };\n\nObject.defineProperties( NodingValidator, staticAccessors$33 );\n\nvar HotPixel = function HotPixel () {\n  this._li = null;\n  this._pt = null;\n  this._originalPt = null;\n  this._ptScaled = null;\n  this._p0Scaled = null;\n  this._p1Scaled = null;\n  this._scaleFactor = null;\n  this._minx = null;\n  this._maxx = null;\n  this._miny = null;\n  this._maxy = null;\n  this._corner = new Array(4).fill(null);\n  this._safeEnv = null;\n  var pt = arguments[0];\n  var scaleFactor = arguments[1];\n  var li = arguments[2];\n  this._originalPt = pt;\n  this._pt = pt;\n  this._scaleFactor = scaleFactor;\n  this._li = li;\n  if (scaleFactor <= 0) { throw new IllegalArgumentException('Scale factor must be non-zero') }\n  if (scaleFactor !== 1.0) {\n    this._pt = new Coordinate(this.scale(pt.x), this.scale(pt.y));\n    this._p0Scaled = new Coordinate();\n    this._p1Scaled = new Coordinate();\n  }\n  this.initCorners(this._pt);\n};\n\nvar staticAccessors$34 = { SAFE_ENV_EXPANSION_FACTOR: { configurable: true } };\nHotPixel.prototype.intersectsScaled = function intersectsScaled (p0, p1) {\n  var segMinx = Math.min(p0.x, p1.x);\n  var segMaxx = Math.max(p0.x, p1.x);\n  var segMiny = Math.min(p0.y, p1.y);\n  var segMaxy = Math.max(p0.y, p1.y);\n  var isOutsidePixelEnv = this._maxx < segMinx || this._minx > segMaxx || this._maxy < segMiny || this._miny > segMaxy;\n  if (isOutsidePixelEnv) { return false }\n  var intersects = this.intersectsToleranceSquare(p0, p1);\n  Assert.isTrue(!(isOutsidePixelEnv && intersects), 'Found bad envelope test');\n  return intersects\n};\nHotPixel.prototype.initCorners = function initCorners (pt) {\n  var tolerance = 0.5;\n  this._minx = pt.x - tolerance;\n  this._maxx = pt.x + tolerance;\n  this._miny = pt.y - tolerance;\n  this._maxy = pt.y + tolerance;\n  this._corner[0] = new Coordinate(this._maxx, this._maxy);\n  this._corner[1] = new Coordinate(this._minx, this._maxy);\n  this._corner[2] = new Coordinate(this._minx, this._miny);\n  this._corner[3] = new Coordinate(this._maxx, this._miny);\n};\nHotPixel.prototype.intersects = function intersects (p0, p1) {\n  if (this._scaleFactor === 1.0) { return this.intersectsScaled(p0, p1) }\n  this.copyScaled(p0, this._p0Scaled);\n  this.copyScaled(p1, this._p1Scaled);\n  return this.intersectsScaled(this._p0Scaled, this._p1Scaled)\n};\nHotPixel.prototype.scale = function scale (val) {\n  return Math.round(val * this._scaleFactor)\n};\nHotPixel.prototype.getCoordinate = function getCoordinate () {\n  return this._originalPt\n};\nHotPixel.prototype.copyScaled = function copyScaled (p, pScaled) {\n  pScaled.x = this.scale(p.x);\n  pScaled.y = this.scale(p.y);\n};\nHotPixel.prototype.getSafeEnvelope = function getSafeEnvelope () {\n  if (this._safeEnv === null) {\n    var safeTolerance = HotPixel.SAFE_ENV_EXPANSION_FACTOR / this._scaleFactor;\n    this._safeEnv = new Envelope(this._originalPt.x - safeTolerance, this._originalPt.x + safeTolerance, this._originalPt.y - safeTolerance, this._originalPt.y + safeTolerance);\n  }\n  return this._safeEnv\n};\nHotPixel.prototype.intersectsPixelClosure = function intersectsPixelClosure (p0, p1) {\n  this._li.computeIntersection(p0, p1, this._corner[0], this._corner[1]);\n  if (this._li.hasIntersection()) { return true }\n  this._li.computeIntersection(p0, p1, this._corner[1], this._corner[2]);\n  if (this._li.hasIntersection()) { return true }\n  this._li.computeIntersection(p0, p1, this._corner[2], this._corner[3]);\n  if (this._li.hasIntersection()) { return true }\n  this._li.computeIntersection(p0, p1, this._corner[3], this._corner[0]);\n  if (this._li.hasIntersection()) { return true }\n  return false\n};\nHotPixel.prototype.intersectsToleranceSquare = function intersectsToleranceSquare (p0, p1) {\n  var intersectsLeft = false;\n  var intersectsBottom = false;\n  this._li.computeIntersection(p0, p1, this._corner[0], this._corner[1]);\n  if (this._li.isProper()) { return true }\n  this._li.computeIntersection(p0, p1, this._corner[1], this._corner[2]);\n  if (this._li.isProper()) { return true }\n  if (this._li.hasIntersection()) { intersectsLeft = true; }\n  this._li.computeIntersection(p0, p1, this._corner[2], this._corner[3]);\n  if (this._li.isProper()) { return true }\n  if (this._li.hasIntersection()) { intersectsBottom = true; }\n  this._li.computeIntersection(p0, p1, this._corner[3], this._corner[0]);\n  if (this._li.isProper()) { return true }\n  if (intersectsLeft && intersectsBottom) { return true }\n  if (p0.equals(this._pt)) { return true }\n  if (p1.equals(this._pt)) { return true }\n  return false\n};\nHotPixel.prototype.addSnappedNode = function addSnappedNode (segStr, segIndex) {\n  var p0 = segStr.getCoordinate(segIndex);\n  var p1 = segStr.getCoordinate(segIndex + 1);\n  if (this.intersects(p0, p1)) {\n    segStr.addIntersection(this.getCoordinate(), segIndex);\n    return true\n  }\n  return false\n};\nHotPixel.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nHotPixel.prototype.getClass = function getClass () {\n  return HotPixel\n};\nstaticAccessors$34.SAFE_ENV_EXPANSION_FACTOR.get = function () { return 0.75 };\n\nObject.defineProperties( HotPixel, staticAccessors$34 );\n\nvar MonotoneChainSelectAction = function MonotoneChainSelectAction () {\n  this.tempEnv1 = new Envelope();\n  this.selectedSegment = new LineSegment();\n};\nMonotoneChainSelectAction.prototype.select = function select () {\n  if (arguments.length === 1) {\n    // const seg = arguments[0]\n  } else if (arguments.length === 2) {\n    var mc = arguments[0];\n    var startIndex = arguments[1];\n    mc.getLineSegment(startIndex, this.selectedSegment);\n    this.select(this.selectedSegment);\n  }\n};\nMonotoneChainSelectAction.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nMonotoneChainSelectAction.prototype.getClass = function getClass () {\n  return MonotoneChainSelectAction\n};\n\nvar MCIndexPointSnapper = function MCIndexPointSnapper () {\n  this._index = null;\n  var index = arguments[0];\n  this._index = index;\n};\n\nvar staticAccessors$35 = { HotPixelSnapAction: { configurable: true } };\nMCIndexPointSnapper.prototype.snap = function snap () {\n  if (arguments.length === 1) {\n    var hotPixel = arguments[0];\n    return this.snap(hotPixel, null, -1)\n  } else if (arguments.length === 3) {\n    var hotPixel$1 = arguments[0];\n    var parentEdge = arguments[1];\n    var hotPixelVertexIndex = arguments[2];\n    var pixelEnv = hotPixel$1.getSafeEnvelope();\n    var hotPixelSnapAction = new HotPixelSnapAction(hotPixel$1, parentEdge, hotPixelVertexIndex);\n    this._index.query(pixelEnv, {\n      interfaces_: function () {\n        return [ItemVisitor]\n      },\n      visitItem: function (item) {\n        var testChain = item;\n        testChain.select(pixelEnv, hotPixelSnapAction);\n      }\n    });\n    return hotPixelSnapAction.isNodeAdded()\n  }\n};\nMCIndexPointSnapper.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nMCIndexPointSnapper.prototype.getClass = function getClass () {\n  return MCIndexPointSnapper\n};\nstaticAccessors$35.HotPixelSnapAction.get = function () { return HotPixelSnapAction };\n\nObject.defineProperties( MCIndexPointSnapper, staticAccessors$35 );\n\nvar HotPixelSnapAction = (function (MonotoneChainSelectAction$$1) {\n  function HotPixelSnapAction () {\n    MonotoneChainSelectAction$$1.call(this);\n    this._hotPixel = null;\n    this._parentEdge = null;\n    this._hotPixelVertexIndex = null;\n    this._isNodeAdded = false;\n    var hotPixel = arguments[0];\n    var parentEdge = arguments[1];\n    var hotPixelVertexIndex = arguments[2];\n    this._hotPixel = hotPixel;\n    this._parentEdge = parentEdge;\n    this._hotPixelVertexIndex = hotPixelVertexIndex;\n  }\n\n  if ( MonotoneChainSelectAction$$1 ) HotPixelSnapAction.__proto__ = MonotoneChainSelectAction$$1;\n  HotPixelSnapAction.prototype = Object.create( MonotoneChainSelectAction$$1 && MonotoneChainSelectAction$$1.prototype );\n  HotPixelSnapAction.prototype.constructor = HotPixelSnapAction;\n  HotPixelSnapAction.prototype.isNodeAdded = function isNodeAdded () {\n    return this._isNodeAdded\n  };\n  HotPixelSnapAction.prototype.select = function select () {\n    if (arguments.length === 2) {\n      var mc = arguments[0];\n      var startIndex = arguments[1];\n      var ss = mc.getContext();\n      if (this._parentEdge !== null) {\n        if (ss === this._parentEdge && startIndex === this._hotPixelVertexIndex) { return null }\n      }\n      this._isNodeAdded = this._hotPixel.addSnappedNode(ss, startIndex);\n    } else { return MonotoneChainSelectAction$$1.prototype.select.apply(this, arguments) }\n  };\n  HotPixelSnapAction.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  HotPixelSnapAction.prototype.getClass = function getClass () {\n    return HotPixelSnapAction\n  };\n\n  return HotPixelSnapAction;\n}(MonotoneChainSelectAction));\n\nvar InteriorIntersectionFinderAdder = function InteriorIntersectionFinderAdder () {\n  this._li = null;\n  this._interiorIntersections = null;\n  var li = arguments[0];\n  this._li = li;\n  this._interiorIntersections = new ArrayList();\n};\nInteriorIntersectionFinderAdder.prototype.processIntersections = function processIntersections (e0, segIndex0, e1, segIndex1) {\n    var this$1 = this;\n\n  if (e0 === e1 && segIndex0 === segIndex1) { return null }\n  var p00 = e0.getCoordinates()[segIndex0];\n  var p01 = e0.getCoordinates()[segIndex0 + 1];\n  var p10 = e1.getCoordinates()[segIndex1];\n  var p11 = e1.getCoordinates()[segIndex1 + 1];\n  this._li.computeIntersection(p00, p01, p10, p11);\n  if (this._li.hasIntersection()) {\n    if (this._li.isInteriorIntersection()) {\n      for (var intIndex = 0; intIndex < this._li.getIntersectionNum(); intIndex++) {\n        this$1._interiorIntersections.add(this$1._li.getIntersection(intIndex));\n      }\n      e0.addIntersections(this._li, segIndex0, 0);\n      e1.addIntersections(this._li, segIndex1, 1);\n    }\n  }\n};\nInteriorIntersectionFinderAdder.prototype.isDone = function isDone () {\n  return false\n};\nInteriorIntersectionFinderAdder.prototype.getInteriorIntersections = function getInteriorIntersections () {\n  return this._interiorIntersections\n};\nInteriorIntersectionFinderAdder.prototype.interfaces_ = function interfaces_ () {\n  return [SegmentIntersector]\n};\nInteriorIntersectionFinderAdder.prototype.getClass = function getClass () {\n  return InteriorIntersectionFinderAdder\n};\n\nvar MCIndexSnapRounder = function MCIndexSnapRounder () {\n  this._pm = null;\n  this._li = null;\n  this._scaleFactor = null;\n  this._noder = null;\n  this._pointSnapper = null;\n  this._nodedSegStrings = null;\n  var pm = arguments[0];\n  this._pm = pm;\n  this._li = new RobustLineIntersector();\n  this._li.setPrecisionModel(pm);\n  this._scaleFactor = pm.getScale();\n};\nMCIndexSnapRounder.prototype.checkCorrectness = function checkCorrectness (inputSegmentStrings) {\n  var resultSegStrings = NodedSegmentString.getNodedSubstrings(inputSegmentStrings);\n  var nv = new NodingValidator(resultSegStrings);\n  try {\n    nv.checkValid();\n  } catch (ex) {\n    if (ex instanceof Exception) {\n      ex.printStackTrace();\n    } else { throw ex }\n  } finally {}\n};\nMCIndexSnapRounder.prototype.getNodedSubstrings = function getNodedSubstrings () {\n  return NodedSegmentString.getNodedSubstrings(this._nodedSegStrings)\n};\nMCIndexSnapRounder.prototype.snapRound = function snapRound (segStrings, li) {\n  var intersections = this.findInteriorIntersections(segStrings, li);\n  this.computeIntersectionSnaps(intersections);\n  this.computeVertexSnaps(segStrings);\n};\nMCIndexSnapRounder.prototype.findInteriorIntersections = function findInteriorIntersections (segStrings, li) {\n  var intFinderAdder = new InteriorIntersectionFinderAdder(li);\n  this._noder.setSegmentIntersector(intFinderAdder);\n  this._noder.computeNodes(segStrings);\n  return intFinderAdder.getInteriorIntersections()\n};\nMCIndexSnapRounder.prototype.computeVertexSnaps = function computeVertexSnaps () {\n    var this$1 = this;\n\n  if (hasInterface(arguments[0], Collection)) {\n    var edges = arguments[0];\n    for (var i0 = edges.iterator(); i0.hasNext();) {\n      var edge0 = i0.next();\n      this$1.computeVertexSnaps(edge0);\n    }\n  } else if (arguments[0] instanceof NodedSegmentString) {\n    var e = arguments[0];\n    var pts0 = e.getCoordinates();\n    for (var i = 0; i < pts0.length; i++) {\n      var hotPixel = new HotPixel(pts0[i], this$1._scaleFactor, this$1._li);\n      var isNodeAdded = this$1._pointSnapper.snap(hotPixel, e, i);\n      if (isNodeAdded) {\n        e.addIntersection(pts0[i], i);\n      }\n    }\n  }\n};\nMCIndexSnapRounder.prototype.computeNodes = function computeNodes (inputSegmentStrings) {\n  this._nodedSegStrings = inputSegmentStrings;\n  this._noder = new MCIndexNoder();\n  this._pointSnapper = new MCIndexPointSnapper(this._noder.getIndex());\n  this.snapRound(inputSegmentStrings, this._li);\n};\nMCIndexSnapRounder.prototype.computeIntersectionSnaps = function computeIntersectionSnaps (snapPts) {\n    var this$1 = this;\n\n  for (var it = snapPts.iterator(); it.hasNext();) {\n    var snapPt = it.next();\n    var hotPixel = new HotPixel(snapPt, this$1._scaleFactor, this$1._li);\n    this$1._pointSnapper.snap(hotPixel);\n  }\n};\nMCIndexSnapRounder.prototype.interfaces_ = function interfaces_ () {\n  return [Noder]\n};\nMCIndexSnapRounder.prototype.getClass = function getClass () {\n  return MCIndexSnapRounder\n};\n\nvar BufferOp = function BufferOp () {\n  this._argGeom = null;\n  this._distance = null;\n  this._bufParams = new BufferParameters();\n  this._resultGeometry = null;\n  this._saveException = null;\n  if (arguments.length === 1) {\n    var g = arguments[0];\n    this._argGeom = g;\n  } else if (arguments.length === 2) {\n    var g$1 = arguments[0];\n    var bufParams = arguments[1];\n    this._argGeom = g$1;\n    this._bufParams = bufParams;\n  }\n};\n\nvar staticAccessors$32 = { CAP_ROUND: { configurable: true },CAP_BUTT: { configurable: true },CAP_FLAT: { configurable: true },CAP_SQUARE: { configurable: true },MAX_PRECISION_DIGITS: { configurable: true } };\nBufferOp.prototype.bufferFixedPrecision = function bufferFixedPrecision (fixedPM) {\n  var noder = new ScaledNoder(new MCIndexSnapRounder(new PrecisionModel(1.0)), fixedPM.getScale());\n  var bufBuilder = new BufferBuilder(this._bufParams);\n  bufBuilder.setWorkingPrecisionModel(fixedPM);\n  bufBuilder.setNoder(noder);\n  this._resultGeometry = bufBuilder.buffer(this._argGeom, this._distance);\n};\nBufferOp.prototype.bufferReducedPrecision = function bufferReducedPrecision () {\n    var this$1 = this;\n\n  if (arguments.length === 0) {\n    for (var precDigits = BufferOp.MAX_PRECISION_DIGITS; precDigits >= 0; precDigits--) {\n      try {\n        this$1.bufferReducedPrecision(precDigits);\n      } catch (ex) {\n        if (ex instanceof TopologyException) {\n          this$1._saveException = ex;\n        } else { throw ex }\n      } finally {}\n      if (this$1._resultGeometry !== null) { return null }\n    }\n    throw this._saveException\n  } else if (arguments.length === 1) {\n    var precisionDigits = arguments[0];\n    var sizeBasedScaleFactor = BufferOp.precisionScaleFactor(this._argGeom, this._distance, precisionDigits);\n    var fixedPM = new PrecisionModel(sizeBasedScaleFactor);\n    this.bufferFixedPrecision(fixedPM);\n  }\n};\nBufferOp.prototype.computeGeometry = function computeGeometry () {\n  this.bufferOriginalPrecision();\n  if (this._resultGeometry !== null) { return null }\n  var argPM = this._argGeom.getFactory().getPrecisionModel();\n  if (argPM.getType() === PrecisionModel.FIXED) { this.bufferFixedPrecision(argPM); } else { this.bufferReducedPrecision(); }\n};\nBufferOp.prototype.setQuadrantSegments = function setQuadrantSegments (quadrantSegments) {\n  this._bufParams.setQuadrantSegments(quadrantSegments);\n};\nBufferOp.prototype.bufferOriginalPrecision = function bufferOriginalPrecision () {\n  try {\n    var bufBuilder = new BufferBuilder(this._bufParams);\n    this._resultGeometry = bufBuilder.buffer(this._argGeom, this._distance);\n  } catch (ex) {\n    if (ex instanceof RuntimeException) {\n      this._saveException = ex;\n    } else { throw ex }\n  } finally {}\n};\nBufferOp.prototype.getResultGeometry = function getResultGeometry (distance) {\n  this._distance = distance;\n  this.computeGeometry();\n  return this._resultGeometry\n};\nBufferOp.prototype.setEndCapStyle = function setEndCapStyle (endCapStyle) {\n  this._bufParams.setEndCapStyle(endCapStyle);\n};\nBufferOp.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nBufferOp.prototype.getClass = function getClass () {\n  return BufferOp\n};\nBufferOp.bufferOp = function bufferOp () {\n  if (arguments.length === 2) {\n    var g = arguments[0];\n    var distance = arguments[1];\n    var gBuf = new BufferOp(g);\n    var geomBuf = gBuf.getResultGeometry(distance);\n    return geomBuf\n  } else if (arguments.length === 3) {\n    if (Number.isInteger(arguments[2]) && (arguments[0] instanceof Geometry && typeof arguments[1] === 'number')) {\n      var g$1 = arguments[0];\n      var distance$1 = arguments[1];\n      var quadrantSegments = arguments[2];\n      var bufOp = new BufferOp(g$1);\n      bufOp.setQuadrantSegments(quadrantSegments);\n      var geomBuf$1 = bufOp.getResultGeometry(distance$1);\n      return geomBuf$1\n    } else if (arguments[2] instanceof BufferParameters && (arguments[0] instanceof Geometry && typeof arguments[1] === 'number')) {\n      var g$2 = arguments[0];\n      var distance$2 = arguments[1];\n      var params = arguments[2];\n      var bufOp$1 = new BufferOp(g$2, params);\n      var geomBuf$2 = bufOp$1.getResultGeometry(distance$2);\n      return geomBuf$2\n    }\n  } else if (arguments.length === 4) {\n    var g$3 = arguments[0];\n    var distance$3 = arguments[1];\n    var quadrantSegments$1 = arguments[2];\n    var endCapStyle = arguments[3];\n    var bufOp$2 = new BufferOp(g$3);\n    bufOp$2.setQuadrantSegments(quadrantSegments$1);\n    bufOp$2.setEndCapStyle(endCapStyle);\n    var geomBuf$3 = bufOp$2.getResultGeometry(distance$3);\n    return geomBuf$3\n  }\n};\nBufferOp.precisionScaleFactor = function precisionScaleFactor (g, distance, maxPrecisionDigits) {\n  var env = g.getEnvelopeInternal();\n  var envMax = MathUtil.max(Math.abs(env.getMaxX()), Math.abs(env.getMaxY()), Math.abs(env.getMinX()), Math.abs(env.getMinY()));\n  var expandByDistance = distance > 0.0 ? distance : 0.0;\n  var bufEnvMax = envMax + 2 * expandByDistance;\n  var bufEnvPrecisionDigits = Math.trunc(Math.log(bufEnvMax) / Math.log(10) + 1.0);\n  var minUnitLog10 = maxPrecisionDigits - bufEnvPrecisionDigits;\n  var scaleFactor = Math.pow(10.0, minUnitLog10);\n  return scaleFactor\n};\nstaticAccessors$32.CAP_ROUND.get = function () { return BufferParameters.CAP_ROUND };\nstaticAccessors$32.CAP_BUTT.get = function () { return BufferParameters.CAP_FLAT };\nstaticAccessors$32.CAP_FLAT.get = function () { return BufferParameters.CAP_FLAT };\nstaticAccessors$32.CAP_SQUARE.get = function () { return BufferParameters.CAP_SQUARE };\nstaticAccessors$32.MAX_PRECISION_DIGITS.get = function () { return 12 };\n\nObject.defineProperties( BufferOp, staticAccessors$32 );\n\nvar PointPairDistance = function PointPairDistance () {\n  this._pt = [new Coordinate(), new Coordinate()];\n  this._distance = Double.NaN;\n  this._isNull = true;\n};\nPointPairDistance.prototype.getCoordinates = function getCoordinates () {\n  return this._pt\n};\nPointPairDistance.prototype.getCoordinate = function getCoordinate (i) {\n  return this._pt[i]\n};\nPointPairDistance.prototype.setMinimum = function setMinimum () {\n  if (arguments.length === 1) {\n    var ptDist = arguments[0];\n    this.setMinimum(ptDist._pt[0], ptDist._pt[1]);\n  } else if (arguments.length === 2) {\n    var p0 = arguments[0];\n    var p1 = arguments[1];\n    if (this._isNull) {\n      this.initialize(p0, p1);\n      return null\n    }\n    var dist = p0.distance(p1);\n    if (dist < this._distance) { this.initialize(p0, p1, dist); }\n  }\n};\nPointPairDistance.prototype.initialize = function initialize () {\n  if (arguments.length === 0) {\n    this._isNull = true;\n  } else if (arguments.length === 2) {\n    var p0 = arguments[0];\n    var p1 = arguments[1];\n    this._pt[0].setCoordinate(p0);\n    this._pt[1].setCoordinate(p1);\n    this._distance = p0.distance(p1);\n    this._isNull = false;\n  } else if (arguments.length === 3) {\n    var p0$1 = arguments[0];\n    var p1$1 = arguments[1];\n    var distance = arguments[2];\n    this._pt[0].setCoordinate(p0$1);\n    this._pt[1].setCoordinate(p1$1);\n    this._distance = distance;\n    this._isNull = false;\n  }\n};\nPointPairDistance.prototype.getDistance = function getDistance () {\n  return this._distance\n};\nPointPairDistance.prototype.setMaximum = function setMaximum () {\n  if (arguments.length === 1) {\n    var ptDist = arguments[0];\n    this.setMaximum(ptDist._pt[0], ptDist._pt[1]);\n  } else if (arguments.length === 2) {\n    var p0 = arguments[0];\n    var p1 = arguments[1];\n    if (this._isNull) {\n      this.initialize(p0, p1);\n      return null\n    }\n    var dist = p0.distance(p1);\n    if (dist > this._distance) { this.initialize(p0, p1, dist); }\n  }\n};\nPointPairDistance.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nPointPairDistance.prototype.getClass = function getClass () {\n  return PointPairDistance\n};\n\nvar DistanceToPointFinder = function DistanceToPointFinder () {};\n\nDistanceToPointFinder.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nDistanceToPointFinder.prototype.getClass = function getClass () {\n  return DistanceToPointFinder\n};\nDistanceToPointFinder.computeDistance = function computeDistance () {\n  if (arguments[2] instanceof PointPairDistance && (arguments[0] instanceof LineString && arguments[1] instanceof Coordinate)) {\n    var line = arguments[0];\n    var pt = arguments[1];\n    var ptDist = arguments[2];\n    var coords = line.getCoordinates();\n    var tempSegment = new LineSegment();\n    for (var i = 0; i < coords.length - 1; i++) {\n      tempSegment.setCoordinates(coords[i], coords[i + 1]);\n      var closestPt = tempSegment.closestPoint(pt);\n      ptDist.setMinimum(closestPt, pt);\n    }\n  } else if (arguments[2] instanceof PointPairDistance && (arguments[0] instanceof Polygon && arguments[1] instanceof Coordinate)) {\n    var poly = arguments[0];\n    var pt$1 = arguments[1];\n    var ptDist$1 = arguments[2];\n    DistanceToPointFinder.computeDistance(poly.getExteriorRing(), pt$1, ptDist$1);\n    for (var i$1 = 0; i$1 < poly.getNumInteriorRing(); i$1++) {\n      DistanceToPointFinder.computeDistance(poly.getInteriorRingN(i$1), pt$1, ptDist$1);\n    }\n  } else if (arguments[2] instanceof PointPairDistance && (arguments[0] instanceof Geometry && arguments[1] instanceof Coordinate)) {\n    var geom = arguments[0];\n    var pt$2 = arguments[1];\n    var ptDist$2 = arguments[2];\n    if (geom instanceof LineString) {\n      DistanceToPointFinder.computeDistance(geom, pt$2, ptDist$2);\n    } else if (geom instanceof Polygon) {\n      DistanceToPointFinder.computeDistance(geom, pt$2, ptDist$2);\n    } else if (geom instanceof GeometryCollection) {\n      var gc = geom;\n      for (var i$2 = 0; i$2 < gc.getNumGeometries(); i$2++) {\n        var g = gc.getGeometryN(i$2);\n        DistanceToPointFinder.computeDistance(g, pt$2, ptDist$2);\n      }\n    } else {\n      ptDist$2.setMinimum(geom.getCoordinate(), pt$2);\n    }\n  } else if (arguments[2] instanceof PointPairDistance && (arguments[0] instanceof LineSegment && arguments[1] instanceof Coordinate)) {\n    var segment = arguments[0];\n    var pt$3 = arguments[1];\n    var ptDist$3 = arguments[2];\n    var closestPt$1 = segment.closestPoint(pt$3);\n    ptDist$3.setMinimum(closestPt$1, pt$3);\n  }\n};\n\nvar BufferCurveMaximumDistanceFinder = function BufferCurveMaximumDistanceFinder (inputGeom) {\n  this._maxPtDist = new PointPairDistance();\n  this._inputGeom = inputGeom || null;\n};\n\nvar staticAccessors$36 = { MaxPointDistanceFilter: { configurable: true },MaxMidpointDistanceFilter: { configurable: true } };\nBufferCurveMaximumDistanceFinder.prototype.computeMaxMidpointDistance = function computeMaxMidpointDistance (curve) {\n  var distFilter = new MaxMidpointDistanceFilter(this._inputGeom);\n  curve.apply(distFilter);\n  this._maxPtDist.setMaximum(distFilter.getMaxPointDistance());\n};\nBufferCurveMaximumDistanceFinder.prototype.computeMaxVertexDistance = function computeMaxVertexDistance (curve) {\n  var distFilter = new MaxPointDistanceFilter(this._inputGeom);\n  curve.apply(distFilter);\n  this._maxPtDist.setMaximum(distFilter.getMaxPointDistance());\n};\nBufferCurveMaximumDistanceFinder.prototype.findDistance = function findDistance (bufferCurve) {\n  this.computeMaxVertexDistance(bufferCurve);\n  this.computeMaxMidpointDistance(bufferCurve);\n  return this._maxPtDist.getDistance()\n};\nBufferCurveMaximumDistanceFinder.prototype.getDistancePoints = function getDistancePoints () {\n  return this._maxPtDist\n};\nBufferCurveMaximumDistanceFinder.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nBufferCurveMaximumDistanceFinder.prototype.getClass = function getClass () {\n  return BufferCurveMaximumDistanceFinder\n};\nstaticAccessors$36.MaxPointDistanceFilter.get = function () { return MaxPointDistanceFilter };\nstaticAccessors$36.MaxMidpointDistanceFilter.get = function () { return MaxMidpointDistanceFilter };\n\nObject.defineProperties( BufferCurveMaximumDistanceFinder, staticAccessors$36 );\n\nvar MaxPointDistanceFilter = function MaxPointDistanceFilter (geom) {\n  this._maxPtDist = new PointPairDistance();\n  this._minPtDist = new PointPairDistance();\n  this._geom = geom || null;\n};\nMaxPointDistanceFilter.prototype.filter = function filter (pt) {\n  this._minPtDist.initialize();\n  DistanceToPointFinder.computeDistance(this._geom, pt, this._minPtDist);\n  this._maxPtDist.setMaximum(this._minPtDist);\n};\nMaxPointDistanceFilter.prototype.getMaxPointDistance = function getMaxPointDistance () {\n  return this._maxPtDist\n};\nMaxPointDistanceFilter.prototype.interfaces_ = function interfaces_ () {\n  return [CoordinateFilter]\n};\nMaxPointDistanceFilter.prototype.getClass = function getClass () {\n  return MaxPointDistanceFilter\n};\n\nvar MaxMidpointDistanceFilter = function MaxMidpointDistanceFilter (geom) {\n  this._maxPtDist = new PointPairDistance();\n  this._minPtDist = new PointPairDistance();\n  this._geom = geom || null;\n};\nMaxMidpointDistanceFilter.prototype.filter = function filter (seq, index) {\n  if (index === 0) { return null }\n  var p0 = seq.getCoordinate(index - 1);\n  var p1 = seq.getCoordinate(index);\n  var midPt = new Coordinate((p0.x + p1.x) / 2, (p0.y + p1.y) / 2);\n  this._minPtDist.initialize();\n  DistanceToPointFinder.computeDistance(this._geom, midPt, this._minPtDist);\n  this._maxPtDist.setMaximum(this._minPtDist);\n};\nMaxMidpointDistanceFilter.prototype.isDone = function isDone () {\n  return false\n};\nMaxMidpointDistanceFilter.prototype.isGeometryChanged = function isGeometryChanged () {\n  return false\n};\nMaxMidpointDistanceFilter.prototype.getMaxPointDistance = function getMaxPointDistance () {\n  return this._maxPtDist\n};\nMaxMidpointDistanceFilter.prototype.interfaces_ = function interfaces_ () {\n  return [CoordinateSequenceFilter]\n};\nMaxMidpointDistanceFilter.prototype.getClass = function getClass () {\n  return MaxMidpointDistanceFilter\n};\n\nvar PolygonExtracter = function PolygonExtracter (comps) {\n  this._comps = comps || null;\n};\nPolygonExtracter.prototype.filter = function filter (geom) {\n  if (geom instanceof Polygon) { this._comps.add(geom); }\n};\nPolygonExtracter.prototype.interfaces_ = function interfaces_ () {\n  return [GeometryFilter]\n};\nPolygonExtracter.prototype.getClass = function getClass () {\n  return PolygonExtracter\n};\nPolygonExtracter.getPolygons = function getPolygons () {\n  if (arguments.length === 1) {\n    var geom = arguments[0];\n    return PolygonExtracter.getPolygons(geom, new ArrayList())\n  } else if (arguments.length === 2) {\n    var geom$1 = arguments[0];\n    var list = arguments[1];\n    if (geom$1 instanceof Polygon) {\n      list.add(geom$1);\n    } else if (geom$1 instanceof GeometryCollection) {\n      geom$1.apply(new PolygonExtracter(list));\n    }\n    return list\n  }\n};\n\nvar LinearComponentExtracter = function LinearComponentExtracter () {\n  this._lines = null;\n  this._isForcedToLineString = false;\n  if (arguments.length === 1) {\n    var lines = arguments[0];\n    this._lines = lines;\n  } else if (arguments.length === 2) {\n    var lines$1 = arguments[0];\n    var isForcedToLineString = arguments[1];\n    this._lines = lines$1;\n    this._isForcedToLineString = isForcedToLineString;\n  }\n};\nLinearComponentExtracter.prototype.filter = function filter (geom) {\n  if (this._isForcedToLineString && geom instanceof LinearRing) {\n    var line = geom.getFactory().createLineString(geom.getCoordinateSequence());\n    this._lines.add(line);\n    return null\n  }\n  if (geom instanceof LineString) { this._lines.add(geom); }\n};\nLinearComponentExtracter.prototype.setForceToLineString = function setForceToLineString (isForcedToLineString) {\n  this._isForcedToLineString = isForcedToLineString;\n};\nLinearComponentExtracter.prototype.interfaces_ = function interfaces_ () {\n  return [GeometryComponentFilter]\n};\nLinearComponentExtracter.prototype.getClass = function getClass () {\n  return LinearComponentExtracter\n};\nLinearComponentExtracter.getGeometry = function getGeometry () {\n  if (arguments.length === 1) {\n    var geom = arguments[0];\n    return geom.getFactory().buildGeometry(LinearComponentExtracter.getLines(geom))\n  } else if (arguments.length === 2) {\n    var geom$1 = arguments[0];\n    var forceToLineString = arguments[1];\n    return geom$1.getFactory().buildGeometry(LinearComponentExtracter.getLines(geom$1, forceToLineString))\n  }\n};\nLinearComponentExtracter.getLines = function getLines () {\n  if (arguments.length === 1) {\n    var geom = arguments[0];\n    return LinearComponentExtracter.getLines(geom, false)\n  } else if (arguments.length === 2) {\n    if (hasInterface(arguments[0], Collection) && hasInterface(arguments[1], Collection)) {\n      var geoms = arguments[0];\n      var lines$1 = arguments[1];\n      for (var i = geoms.iterator(); i.hasNext();) {\n        var g = i.next();\n        LinearComponentExtracter.getLines(g, lines$1);\n      }\n      return lines$1\n    } else if (arguments[0] instanceof Geometry && typeof arguments[1] === 'boolean') {\n      var geom$1 = arguments[0];\n      var forceToLineString = arguments[1];\n      var lines = new ArrayList();\n      geom$1.apply(new LinearComponentExtracter(lines, forceToLineString));\n      return lines\n    } else if (arguments[0] instanceof Geometry && hasInterface(arguments[1], Collection)) {\n      var geom$2 = arguments[0];\n      var lines$2 = arguments[1];\n      if (geom$2 instanceof LineString) {\n        lines$2.add(geom$2);\n      } else {\n        geom$2.apply(new LinearComponentExtracter(lines$2));\n      }\n      return lines$2\n    }\n  } else if (arguments.length === 3) {\n    if (typeof arguments[2] === 'boolean' && (hasInterface(arguments[0], Collection) && hasInterface(arguments[1], Collection))) {\n      var geoms$1 = arguments[0];\n      var lines$3 = arguments[1];\n      var forceToLineString$1 = arguments[2];\n      for (var i$1 = geoms$1.iterator(); i$1.hasNext();) {\n        var g$1 = i$1.next();\n        LinearComponentExtracter.getLines(g$1, lines$3, forceToLineString$1);\n      }\n      return lines$3\n    } else if (typeof arguments[2] === 'boolean' && (arguments[0] instanceof Geometry && hasInterface(arguments[1], Collection))) {\n      var geom$3 = arguments[0];\n      var lines$4 = arguments[1];\n      var forceToLineString$2 = arguments[2];\n      geom$3.apply(new LinearComponentExtracter(lines$4, forceToLineString$2));\n      return lines$4\n    }\n  }\n};\n\nvar PointLocator = function PointLocator () {\n  this._boundaryRule = BoundaryNodeRule.OGC_SFS_BOUNDARY_RULE;\n  this._isIn = null;\n  this._numBoundaries = null;\n  if (arguments.length === 0) {} else if (arguments.length === 1) {\n    var boundaryRule = arguments[0];\n    if (boundaryRule === null) { throw new IllegalArgumentException('Rule must be non-null') }\n    this._boundaryRule = boundaryRule;\n  }\n};\nPointLocator.prototype.locateInternal = function locateInternal () {\n    var this$1 = this;\n\n  if (arguments[0] instanceof Coordinate && arguments[1] instanceof Polygon) {\n    var p = arguments[0];\n    var poly = arguments[1];\n    if (poly.isEmpty()) { return Location.EXTERIOR }\n    var shell = poly.getExteriorRing();\n    var shellLoc = this.locateInPolygonRing(p, shell);\n    if (shellLoc === Location.EXTERIOR) { return Location.EXTERIOR }\n    if (shellLoc === Location.BOUNDARY) { return Location.BOUNDARY }\n    for (var i = 0; i < poly.getNumInteriorRing(); i++) {\n      var hole = poly.getInteriorRingN(i);\n      var holeLoc = this$1.locateInPolygonRing(p, hole);\n      if (holeLoc === Location.INTERIOR) { return Location.EXTERIOR }\n      if (holeLoc === Location.BOUNDARY) { return Location.BOUNDARY }\n    }\n    return Location.INTERIOR\n  } else if (arguments[0] instanceof Coordinate && arguments[1] instanceof LineString) {\n    var p$1 = arguments[0];\n    var l = arguments[1];\n    if (!l.getEnvelopeInternal().intersects(p$1)) { return Location.EXTERIOR }\n    var pt = l.getCoordinates();\n    if (!l.isClosed()) {\n      if (p$1.equals(pt[0]) || p$1.equals(pt[pt.length - 1])) {\n        return Location.BOUNDARY\n      }\n    }\n    if (CGAlgorithms.isOnLine(p$1, pt)) { return Location.INTERIOR }\n    return Location.EXTERIOR\n  } else if (arguments[0] instanceof Coordinate && arguments[1] instanceof Point) {\n    var p$2 = arguments[0];\n    var pt$1 = arguments[1];\n    var ptCoord = pt$1.getCoordinate();\n    if (ptCoord.equals2D(p$2)) { return Location.INTERIOR }\n    return Location.EXTERIOR\n  }\n};\nPointLocator.prototype.locateInPolygonRing = function locateInPolygonRing (p, ring) {\n  if (!ring.getEnvelopeInternal().intersects(p)) { return Location.EXTERIOR }\n  return CGAlgorithms.locatePointInRing(p, ring.getCoordinates())\n};\nPointLocator.prototype.intersects = function intersects (p, geom) {\n  return this.locate(p, geom) !== Location.EXTERIOR\n};\nPointLocator.prototype.updateLocationInfo = function updateLocationInfo (loc) {\n  if (loc === Location.INTERIOR) { this._isIn = true; }\n  if (loc === Location.BOUNDARY) { this._numBoundaries++; }\n};\nPointLocator.prototype.computeLocation = function computeLocation (p, geom) {\n    var this$1 = this;\n\n  if (geom instanceof Point) {\n    this.updateLocationInfo(this.locateInternal(p, geom));\n  }\n  if (geom instanceof LineString) {\n    this.updateLocationInfo(this.locateInternal(p, geom));\n  } else if (geom instanceof Polygon) {\n    this.updateLocationInfo(this.locateInternal(p, geom));\n  } else if (geom instanceof MultiLineString) {\n    var ml = geom;\n    for (var i = 0; i < ml.getNumGeometries(); i++) {\n      var l = ml.getGeometryN(i);\n      this$1.updateLocationInfo(this$1.locateInternal(p, l));\n    }\n  } else if (geom instanceof MultiPolygon) {\n    var mpoly = geom;\n    for (var i$1 = 0; i$1 < mpoly.getNumGeometries(); i$1++) {\n      var poly = mpoly.getGeometryN(i$1);\n      this$1.updateLocationInfo(this$1.locateInternal(p, poly));\n    }\n  } else if (geom instanceof GeometryCollection) {\n    var geomi = new GeometryCollectionIterator(geom);\n    while (geomi.hasNext()) {\n      var g2 = geomi.next();\n      if (g2 !== geom) { this$1.computeLocation(p, g2); }\n    }\n  }\n};\nPointLocator.prototype.locate = function locate (p, geom) {\n  if (geom.isEmpty()) { return Location.EXTERIOR }\n  if (geom instanceof LineString) {\n    return this.locateInternal(p, geom)\n  } else if (geom instanceof Polygon) {\n    return this.locateInternal(p, geom)\n  }\n  this._isIn = false;\n  this._numBoundaries = 0;\n  this.computeLocation(p, geom);\n  if (this._boundaryRule.isInBoundary(this._numBoundaries)) { return Location.BOUNDARY }\n  if (this._numBoundaries > 0 || this._isIn) { return Location.INTERIOR }\n  return Location.EXTERIOR\n};\nPointLocator.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nPointLocator.prototype.getClass = function getClass () {\n  return PointLocator\n};\n\nvar GeometryLocation = function GeometryLocation () {\n  this._component = null;\n  this._segIndex = null;\n  this._pt = null;\n  if (arguments.length === 2) {\n    var component = arguments[0];\n    var pt = arguments[1];\n    GeometryLocation.call(this, component, GeometryLocation.INSIDE_AREA, pt);\n  } else if (arguments.length === 3) {\n    var component$1 = arguments[0];\n    var segIndex = arguments[1];\n    var pt$1 = arguments[2];\n    this._component = component$1;\n    this._segIndex = segIndex;\n    this._pt = pt$1;\n  }\n};\n\nvar staticAccessors$38 = { INSIDE_AREA: { configurable: true } };\nGeometryLocation.prototype.isInsideArea = function isInsideArea () {\n  return this._segIndex === GeometryLocation.INSIDE_AREA\n};\nGeometryLocation.prototype.getCoordinate = function getCoordinate () {\n  return this._pt\n};\nGeometryLocation.prototype.getGeometryComponent = function getGeometryComponent () {\n  return this._component\n};\nGeometryLocation.prototype.getSegmentIndex = function getSegmentIndex () {\n  return this._segIndex\n};\nGeometryLocation.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nGeometryLocation.prototype.getClass = function getClass () {\n  return GeometryLocation\n};\nstaticAccessors$38.INSIDE_AREA.get = function () { return -1 };\n\nObject.defineProperties( GeometryLocation, staticAccessors$38 );\n\nvar PointExtracter = function PointExtracter (pts) {\n  this._pts = pts || null;\n};\nPointExtracter.prototype.filter = function filter (geom) {\n  if (geom instanceof Point) { this._pts.add(geom); }\n};\nPointExtracter.prototype.interfaces_ = function interfaces_ () {\n  return [GeometryFilter]\n};\nPointExtracter.prototype.getClass = function getClass () {\n  return PointExtracter\n};\nPointExtracter.getPoints = function getPoints () {\n  if (arguments.length === 1) {\n    var geom = arguments[0];\n    if (geom instanceof Point) {\n      return Collections.singletonList(geom)\n    }\n    return PointExtracter.getPoints(geom, new ArrayList())\n  } else if (arguments.length === 2) {\n    var geom$1 = arguments[0];\n    var list = arguments[1];\n    if (geom$1 instanceof Point) {\n      list.add(geom$1);\n    } else if (geom$1 instanceof GeometryCollection) {\n      geom$1.apply(new PointExtracter(list));\n    }\n    return list\n  }\n};\n\nvar ConnectedElementLocationFilter = function ConnectedElementLocationFilter () {\n  this._locations = null;\n  var locations = arguments[0];\n  this._locations = locations;\n};\nConnectedElementLocationFilter.prototype.filter = function filter (geom) {\n  if (geom instanceof Point || geom instanceof LineString || geom instanceof Polygon) { this._locations.add(new GeometryLocation(geom, 0, geom.getCoordinate())); }\n};\nConnectedElementLocationFilter.prototype.interfaces_ = function interfaces_ () {\n  return [GeometryFilter]\n};\nConnectedElementLocationFilter.prototype.getClass = function getClass () {\n  return ConnectedElementLocationFilter\n};\nConnectedElementLocationFilter.getLocations = function getLocations (geom) {\n  var locations = new ArrayList();\n  geom.apply(new ConnectedElementLocationFilter(locations));\n  return locations\n};\n\nvar DistanceOp = function DistanceOp () {\n  this._geom = null;\n  this._terminateDistance = 0.0;\n  this._ptLocator = new PointLocator();\n  this._minDistanceLocation = null;\n  this._minDistance = Double.MAX_VALUE;\n  if (arguments.length === 2) {\n    var g0 = arguments[0];\n    var g1 = arguments[1];\n    this._geom = [g0, g1];\n    this._terminateDistance = 0.0;\n  } else if (arguments.length === 3) {\n    var g0$1 = arguments[0];\n    var g1$1 = arguments[1];\n    var terminateDistance = arguments[2];\n    this._geom = new Array(2).fill(null);\n    this._geom[0] = g0$1;\n    this._geom[1] = g1$1;\n    this._terminateDistance = terminateDistance;\n  }\n};\nDistanceOp.prototype.computeContainmentDistance = function computeContainmentDistance () {\n    var this$1 = this;\n\n  if (arguments.length === 0) {\n    var locPtPoly = new Array(2).fill(null);\n    this.computeContainmentDistance(0, locPtPoly);\n    if (this._minDistance <= this._terminateDistance) { return null }\n    this.computeContainmentDistance(1, locPtPoly);\n  } else if (arguments.length === 2) {\n    var polyGeomIndex = arguments[0];\n    var locPtPoly$1 = arguments[1];\n    var locationsIndex = 1 - polyGeomIndex;\n    var polys = PolygonExtracter.getPolygons(this._geom[polyGeomIndex]);\n    if (polys.size() > 0) {\n      var insideLocs = ConnectedElementLocationFilter.getLocations(this._geom[locationsIndex]);\n      this.computeContainmentDistance(insideLocs, polys, locPtPoly$1);\n      if (this._minDistance <= this._terminateDistance) {\n        this._minDistanceLocation[locationsIndex] = locPtPoly$1[0];\n        this._minDistanceLocation[polyGeomIndex] = locPtPoly$1[1];\n        return null\n      }\n    }\n  } else if (arguments.length === 3) {\n    if (arguments[2] instanceof Array && (hasInterface(arguments[0], List) && hasInterface(arguments[1], List))) {\n      var locs = arguments[0];\n      var polys$1 = arguments[1];\n      var locPtPoly$2 = arguments[2];\n      for (var i = 0; i < locs.size(); i++) {\n        var loc = locs.get(i);\n        for (var j = 0; j < polys$1.size(); j++) {\n          this$1.computeContainmentDistance(loc, polys$1.get(j), locPtPoly$2);\n          if (this$1._minDistance <= this$1._terminateDistance) { return null }\n        }\n      }\n    } else if (arguments[2] instanceof Array && (arguments[0] instanceof GeometryLocation && arguments[1] instanceof Polygon)) {\n      var ptLoc = arguments[0];\n      var poly = arguments[1];\n      var locPtPoly$3 = arguments[2];\n      var pt = ptLoc.getCoordinate();\n      if (Location.EXTERIOR !== this._ptLocator.locate(pt, poly)) {\n        this._minDistance = 0.0;\n        locPtPoly$3[0] = ptLoc;\n        locPtPoly$3[1] = new GeometryLocation(poly, pt);\n\n        return null\n      }\n    }\n  }\n};\nDistanceOp.prototype.computeMinDistanceLinesPoints = function computeMinDistanceLinesPoints (lines, points, locGeom) {\n    var this$1 = this;\n\n  for (var i = 0; i < lines.size(); i++) {\n    var line = lines.get(i);\n    for (var j = 0; j < points.size(); j++) {\n      var pt = points.get(j);\n      this$1.computeMinDistance(line, pt, locGeom);\n      if (this$1._minDistance <= this$1._terminateDistance) { return null }\n    }\n  }\n};\nDistanceOp.prototype.computeFacetDistance = function computeFacetDistance () {\n  var locGeom = new Array(2).fill(null);\n  var lines0 = LinearComponentExtracter.getLines(this._geom[0]);\n  var lines1 = LinearComponentExtracter.getLines(this._geom[1]);\n  var pts0 = PointExtracter.getPoints(this._geom[0]);\n  var pts1 = PointExtracter.getPoints(this._geom[1]);\n  this.computeMinDistanceLines(lines0, lines1, locGeom);\n  this.updateMinDistance(locGeom, false);\n  if (this._minDistance <= this._terminateDistance) { return null }\n  locGeom[0] = null;\n  locGeom[1] = null;\n  this.computeMinDistanceLinesPoints(lines0, pts1, locGeom);\n  this.updateMinDistance(locGeom, false);\n  if (this._minDistance <= this._terminateDistance) { return null }\n  locGeom[0] = null;\n  locGeom[1] = null;\n  this.computeMinDistanceLinesPoints(lines1, pts0, locGeom);\n  this.updateMinDistance(locGeom, true);\n  if (this._minDistance <= this._terminateDistance) { return null }\n  locGeom[0] = null;\n  locGeom[1] = null;\n  this.computeMinDistancePoints(pts0, pts1, locGeom);\n  this.updateMinDistance(locGeom, false);\n};\nDistanceOp.prototype.nearestLocations = function nearestLocations () {\n  this.computeMinDistance();\n  return this._minDistanceLocation\n};\nDistanceOp.prototype.updateMinDistance = function updateMinDistance (locGeom, flip) {\n  if (locGeom[0] === null) { return null }\n  if (flip) {\n    this._minDistanceLocation[0] = locGeom[1];\n    this._minDistanceLocation[1] = locGeom[0];\n  } else {\n    this._minDistanceLocation[0] = locGeom[0];\n    this._minDistanceLocation[1] = locGeom[1];\n  }\n};\nDistanceOp.prototype.nearestPoints = function nearestPoints () {\n  this.computeMinDistance();\n  var nearestPts = [this._minDistanceLocation[0].getCoordinate(), this._minDistanceLocation[1].getCoordinate()];\n  return nearestPts\n};\nDistanceOp.prototype.computeMinDistance = function computeMinDistance () {\n    var this$1 = this;\n\n  if (arguments.length === 0) {\n    if (this._minDistanceLocation !== null) { return null }\n    this._minDistanceLocation = new Array(2).fill(null);\n    this.computeContainmentDistance();\n    if (this._minDistance <= this._terminateDistance) { return null }\n    this.computeFacetDistance();\n  } else if (arguments.length === 3) {\n    if (arguments[2] instanceof Array && (arguments[0] instanceof LineString && arguments[1] instanceof Point)) {\n      var line = arguments[0];\n      var pt = arguments[1];\n      var locGeom = arguments[2];\n      if (line.getEnvelopeInternal().distance(pt.getEnvelopeInternal()) > this._minDistance) { return null }\n      var coord0 = line.getCoordinates();\n      var coord = pt.getCoordinate();\n      for (var i = 0; i < coord0.length - 1; i++) {\n        var dist = CGAlgorithms.distancePointLine(coord, coord0[i], coord0[i + 1]);\n        if (dist < this$1._minDistance) {\n          this$1._minDistance = dist;\n          var seg = new LineSegment(coord0[i], coord0[i + 1]);\n          var segClosestPoint = seg.closestPoint(coord);\n          locGeom[0] = new GeometryLocation(line, i, segClosestPoint);\n          locGeom[1] = new GeometryLocation(pt, 0, coord);\n        }\n        if (this$1._minDistance <= this$1._terminateDistance) { return null }\n      }\n    } else if (arguments[2] instanceof Array && (arguments[0] instanceof LineString && arguments[1] instanceof LineString)) {\n      var line0 = arguments[0];\n      var line1 = arguments[1];\n      var locGeom$1 = arguments[2];\n      if (line0.getEnvelopeInternal().distance(line1.getEnvelopeInternal()) > this._minDistance) { return null }\n      var coord0$1 = line0.getCoordinates();\n      var coord1 = line1.getCoordinates();\n      for (var i$1 = 0; i$1 < coord0$1.length - 1; i$1++) {\n        for (var j = 0; j < coord1.length - 1; j++) {\n          var dist$1 = CGAlgorithms.distanceLineLine(coord0$1[i$1], coord0$1[i$1 + 1], coord1[j], coord1[j + 1]);\n          if (dist$1 < this$1._minDistance) {\n            this$1._minDistance = dist$1;\n            var seg0 = new LineSegment(coord0$1[i$1], coord0$1[i$1 + 1]);\n            var seg1 = new LineSegment(coord1[j], coord1[j + 1]);\n            var closestPt = seg0.closestPoints(seg1);\n            locGeom$1[0] = new GeometryLocation(line0, i$1, closestPt[0]);\n            locGeom$1[1] = new GeometryLocation(line1, j, closestPt[1]);\n          }\n          if (this$1._minDistance <= this$1._terminateDistance) { return null }\n        }\n      }\n    }\n  }\n};\nDistanceOp.prototype.computeMinDistancePoints = function computeMinDistancePoints (points0, points1, locGeom) {\n    var this$1 = this;\n\n  for (var i = 0; i < points0.size(); i++) {\n    var pt0 = points0.get(i);\n    for (var j = 0; j < points1.size(); j++) {\n      var pt1 = points1.get(j);\n      var dist = pt0.getCoordinate().distance(pt1.getCoordinate());\n      if (dist < this$1._minDistance) {\n        this$1._minDistance = dist;\n        locGeom[0] = new GeometryLocation(pt0, 0, pt0.getCoordinate());\n        locGeom[1] = new GeometryLocation(pt1, 0, pt1.getCoordinate());\n      }\n      if (this$1._minDistance <= this$1._terminateDistance) { return null }\n    }\n  }\n};\nDistanceOp.prototype.distance = function distance () {\n  if (this._geom[0] === null || this._geom[1] === null) { throw new IllegalArgumentException('null geometries are not supported') }\n  if (this._geom[0].isEmpty() || this._geom[1].isEmpty()) { return 0.0 }\n  this.computeMinDistance();\n  return this._minDistance\n};\nDistanceOp.prototype.computeMinDistanceLines = function computeMinDistanceLines (lines0, lines1, locGeom) {\n    var this$1 = this;\n\n  for (var i = 0; i < lines0.size(); i++) {\n    var line0 = lines0.get(i);\n    for (var j = 0; j < lines1.size(); j++) {\n      var line1 = lines1.get(j);\n      this$1.computeMinDistance(line0, line1, locGeom);\n      if (this$1._minDistance <= this$1._terminateDistance) { return null }\n    }\n  }\n};\nDistanceOp.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nDistanceOp.prototype.getClass = function getClass () {\n  return DistanceOp\n};\nDistanceOp.distance = function distance (g0, g1) {\n  var distOp = new DistanceOp(g0, g1);\n  return distOp.distance()\n};\nDistanceOp.isWithinDistance = function isWithinDistance (g0, g1, distance) {\n  var distOp = new DistanceOp(g0, g1, distance);\n  return distOp.distance() <= distance\n};\nDistanceOp.nearestPoints = function nearestPoints (g0, g1) {\n  var distOp = new DistanceOp(g0, g1);\n  return distOp.nearestPoints()\n};\n\nvar PointPairDistance$2 = function PointPairDistance () {\n  this._pt = [new Coordinate(), new Coordinate()];\n  this._distance = Double.NaN;\n  this._isNull = true;\n};\nPointPairDistance$2.prototype.getCoordinates = function getCoordinates () {\n  return this._pt\n};\nPointPairDistance$2.prototype.getCoordinate = function getCoordinate (i) {\n  return this._pt[i]\n};\nPointPairDistance$2.prototype.setMinimum = function setMinimum () {\n  if (arguments.length === 1) {\n    var ptDist = arguments[0];\n    this.setMinimum(ptDist._pt[0], ptDist._pt[1]);\n  } else if (arguments.length === 2) {\n    var p0 = arguments[0];\n    var p1 = arguments[1];\n    if (this._isNull) {\n      this.initialize(p0, p1);\n      return null\n    }\n    var dist = p0.distance(p1);\n    if (dist < this._distance) { this.initialize(p0, p1, dist); }\n  }\n};\nPointPairDistance$2.prototype.initialize = function initialize () {\n  if (arguments.length === 0) {\n    this._isNull = true;\n  } else if (arguments.length === 2) {\n    var p0 = arguments[0];\n    var p1 = arguments[1];\n    this._pt[0].setCoordinate(p0);\n    this._pt[1].setCoordinate(p1);\n    this._distance = p0.distance(p1);\n    this._isNull = false;\n  } else if (arguments.length === 3) {\n    var p0$1 = arguments[0];\n    var p1$1 = arguments[1];\n    var distance = arguments[2];\n    this._pt[0].setCoordinate(p0$1);\n    this._pt[1].setCoordinate(p1$1);\n    this._distance = distance;\n    this._isNull = false;\n  }\n};\nPointPairDistance$2.prototype.toString = function toString () {\n  return WKTWriter.toLineString(this._pt[0], this._pt[1])\n};\nPointPairDistance$2.prototype.getDistance = function getDistance () {\n  return this._distance\n};\nPointPairDistance$2.prototype.setMaximum = function setMaximum () {\n  if (arguments.length === 1) {\n    var ptDist = arguments[0];\n    this.setMaximum(ptDist._pt[0], ptDist._pt[1]);\n  } else if (arguments.length === 2) {\n    var p0 = arguments[0];\n    var p1 = arguments[1];\n    if (this._isNull) {\n      this.initialize(p0, p1);\n      return null\n    }\n    var dist = p0.distance(p1);\n    if (dist > this._distance) { this.initialize(p0, p1, dist); }\n  }\n};\nPointPairDistance$2.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nPointPairDistance$2.prototype.getClass = function getClass () {\n  return PointPairDistance$2\n};\n\nvar DistanceToPoint = function DistanceToPoint () {};\n\nDistanceToPoint.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nDistanceToPoint.prototype.getClass = function getClass () {\n  return DistanceToPoint\n};\nDistanceToPoint.computeDistance = function computeDistance () {\n  if (arguments[2] instanceof PointPairDistance$2 && (arguments[0] instanceof LineString && arguments[1] instanceof Coordinate)) {\n    var line = arguments[0];\n    var pt = arguments[1];\n    var ptDist = arguments[2];\n    var tempSegment = new LineSegment();\n    var coords = line.getCoordinates();\n    for (var i = 0; i < coords.length - 1; i++) {\n      tempSegment.setCoordinates(coords[i], coords[i + 1]);\n      var closestPt = tempSegment.closestPoint(pt);\n      ptDist.setMinimum(closestPt, pt);\n    }\n  } else if (arguments[2] instanceof PointPairDistance$2 && (arguments[0] instanceof Polygon && arguments[1] instanceof Coordinate)) {\n    var poly = arguments[0];\n    var pt$1 = arguments[1];\n    var ptDist$1 = arguments[2];\n    DistanceToPoint.computeDistance(poly.getExteriorRing(), pt$1, ptDist$1);\n    for (var i$1 = 0; i$1 < poly.getNumInteriorRing(); i$1++) {\n      DistanceToPoint.computeDistance(poly.getInteriorRingN(i$1), pt$1, ptDist$1);\n    }\n  } else if (arguments[2] instanceof PointPairDistance$2 && (arguments[0] instanceof Geometry && arguments[1] instanceof Coordinate)) {\n    var geom = arguments[0];\n    var pt$2 = arguments[1];\n    var ptDist$2 = arguments[2];\n    if (geom instanceof LineString) {\n      DistanceToPoint.computeDistance(geom, pt$2, ptDist$2);\n    } else if (geom instanceof Polygon) {\n      DistanceToPoint.computeDistance(geom, pt$2, ptDist$2);\n    } else if (geom instanceof GeometryCollection) {\n      var gc = geom;\n      for (var i$2 = 0; i$2 < gc.getNumGeometries(); i$2++) {\n        var g = gc.getGeometryN(i$2);\n        DistanceToPoint.computeDistance(g, pt$2, ptDist$2);\n      }\n    } else {\n      ptDist$2.setMinimum(geom.getCoordinate(), pt$2);\n    }\n  } else if (arguments[2] instanceof PointPairDistance$2 && (arguments[0] instanceof LineSegment && arguments[1] instanceof Coordinate)) {\n    var segment = arguments[0];\n    var pt$3 = arguments[1];\n    var ptDist$3 = arguments[2];\n    var closestPt$1 = segment.closestPoint(pt$3);\n    ptDist$3.setMinimum(closestPt$1, pt$3);\n  }\n};\n\nvar DiscreteHausdorffDistance = function DiscreteHausdorffDistance () {\n  this._g0 = null;\n  this._g1 = null;\n  this._ptDist = new PointPairDistance$2();\n  this._densifyFrac = 0.0;\n  var g0 = arguments[0];\n  var g1 = arguments[1];\n  this._g0 = g0;\n  this._g1 = g1;\n};\n\nvar staticAccessors$39 = { MaxPointDistanceFilter: { configurable: true },MaxDensifiedByFractionDistanceFilter: { configurable: true } };\nDiscreteHausdorffDistance.prototype.getCoordinates = function getCoordinates () {\n  return this._ptDist.getCoordinates()\n};\nDiscreteHausdorffDistance.prototype.setDensifyFraction = function setDensifyFraction (densifyFrac) {\n  if (densifyFrac > 1.0 || densifyFrac <= 0.0) { throw new IllegalArgumentException('Fraction is not in range (0.0 - 1.0]') }\n  this._densifyFrac = densifyFrac;\n};\nDiscreteHausdorffDistance.prototype.compute = function compute (g0, g1) {\n  this.computeOrientedDistance(g0, g1, this._ptDist);\n  this.computeOrientedDistance(g1, g0, this._ptDist);\n};\nDiscreteHausdorffDistance.prototype.distance = function distance () {\n  this.compute(this._g0, this._g1);\n  return this._ptDist.getDistance()\n};\nDiscreteHausdorffDistance.prototype.computeOrientedDistance = function computeOrientedDistance (discreteGeom, geom, ptDist) {\n  var distFilter = new MaxPointDistanceFilter$1(geom);\n  discreteGeom.apply(distFilter);\n  ptDist.setMaximum(distFilter.getMaxPointDistance());\n  if (this._densifyFrac > 0) {\n    var fracFilter = new MaxDensifiedByFractionDistanceFilter(geom, this._densifyFrac);\n    discreteGeom.apply(fracFilter);\n    ptDist.setMaximum(fracFilter.getMaxPointDistance());\n  }\n};\nDiscreteHausdorffDistance.prototype.orientedDistance = function orientedDistance () {\n  this.computeOrientedDistance(this._g0, this._g1, this._ptDist);\n  return this._ptDist.getDistance()\n};\nDiscreteHausdorffDistance.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nDiscreteHausdorffDistance.prototype.getClass = function getClass () {\n  return DiscreteHausdorffDistance\n};\nDiscreteHausdorffDistance.distance = function distance () {\n  if (arguments.length === 2) {\n    var g0 = arguments[0];\n    var g1 = arguments[1];\n    var dist = new DiscreteHausdorffDistance(g0, g1);\n    return dist.distance()\n  } else if (arguments.length === 3) {\n    var g0$1 = arguments[0];\n    var g1$1 = arguments[1];\n    var densifyFrac = arguments[2];\n    var dist$1 = new DiscreteHausdorffDistance(g0$1, g1$1);\n    dist$1.setDensifyFraction(densifyFrac);\n    return dist$1.distance()\n  }\n};\nstaticAccessors$39.MaxPointDistanceFilter.get = function () { return MaxPointDistanceFilter$1 };\nstaticAccessors$39.MaxDensifiedByFractionDistanceFilter.get = function () { return MaxDensifiedByFractionDistanceFilter };\n\nObject.defineProperties( DiscreteHausdorffDistance, staticAccessors$39 );\n\nvar MaxPointDistanceFilter$1 = function MaxPointDistanceFilter () {\n  this._maxPtDist = new PointPairDistance$2();\n  this._minPtDist = new PointPairDistance$2();\n  this._euclideanDist = new DistanceToPoint();\n  this._geom = null;\n  var geom = arguments[0];\n  this._geom = geom;\n};\nMaxPointDistanceFilter$1.prototype.filter = function filter (pt) {\n  this._minPtDist.initialize();\n  DistanceToPoint.computeDistance(this._geom, pt, this._minPtDist);\n  this._maxPtDist.setMaximum(this._minPtDist);\n};\nMaxPointDistanceFilter$1.prototype.getMaxPointDistance = function getMaxPointDistance () {\n  return this._maxPtDist\n};\nMaxPointDistanceFilter$1.prototype.interfaces_ = function interfaces_ () {\n  return [CoordinateFilter]\n};\nMaxPointDistanceFilter$1.prototype.getClass = function getClass () {\n  return MaxPointDistanceFilter$1\n};\n\nvar MaxDensifiedByFractionDistanceFilter = function MaxDensifiedByFractionDistanceFilter () {\n  this._maxPtDist = new PointPairDistance$2();\n  this._minPtDist = new PointPairDistance$2();\n  this._geom = null;\n  this._numSubSegs = 0;\n  var geom = arguments[0];\n  var fraction = arguments[1];\n  this._geom = geom;\n  this._numSubSegs = Math.trunc(Math.round(1.0 / fraction));\n};\nMaxDensifiedByFractionDistanceFilter.prototype.filter = function filter (seq, index) {\n    var this$1 = this;\n\n  if (index === 0) { return null }\n  var p0 = seq.getCoordinate(index - 1);\n  var p1 = seq.getCoordinate(index);\n  var delx = (p1.x - p0.x) / this._numSubSegs;\n  var dely = (p1.y - p0.y) / this._numSubSegs;\n  for (var i = 0; i < this._numSubSegs; i++) {\n    var x = p0.x + i * delx;\n    var y = p0.y + i * dely;\n    var pt = new Coordinate(x, y);\n    this$1._minPtDist.initialize();\n    DistanceToPoint.computeDistance(this$1._geom, pt, this$1._minPtDist);\n    this$1._maxPtDist.setMaximum(this$1._minPtDist);\n  }\n};\nMaxDensifiedByFractionDistanceFilter.prototype.isDone = function isDone () {\n  return false\n};\nMaxDensifiedByFractionDistanceFilter.prototype.isGeometryChanged = function isGeometryChanged () {\n  return false\n};\nMaxDensifiedByFractionDistanceFilter.prototype.getMaxPointDistance = function getMaxPointDistance () {\n  return this._maxPtDist\n};\nMaxDensifiedByFractionDistanceFilter.prototype.interfaces_ = function interfaces_ () {\n  return [CoordinateSequenceFilter]\n};\nMaxDensifiedByFractionDistanceFilter.prototype.getClass = function getClass () {\n  return MaxDensifiedByFractionDistanceFilter\n};\n\nvar BufferDistanceValidator = function BufferDistanceValidator (input, bufDistance, result) {\n  this._minValidDistance = null;\n  this._maxValidDistance = null;\n  this._minDistanceFound = null;\n  this._maxDistanceFound = null;\n  this._isValid = true;\n  this._errMsg = null;\n  this._errorLocation = null;\n  this._errorIndicator = null;\n  this._input = input || null;\n  this._bufDistance = bufDistance || null;\n  this._result = result || null;\n};\n\nvar staticAccessors$37 = { VERBOSE: { configurable: true },MAX_DISTANCE_DIFF_FRAC: { configurable: true } };\nBufferDistanceValidator.prototype.checkMaximumDistance = function checkMaximumDistance (input, bufCurve, maxDist) {\n  var haus = new DiscreteHausdorffDistance(bufCurve, input);\n  haus.setDensifyFraction(0.25);\n  this._maxDistanceFound = haus.orientedDistance();\n  if (this._maxDistanceFound > maxDist) {\n    this._isValid = false;\n    var pts = haus.getCoordinates();\n    this._errorLocation = pts[1];\n    this._errorIndicator = input.getFactory().createLineString(pts);\n    this._errMsg = 'Distance between buffer curve and input is too large (' + this._maxDistanceFound + ' at ' + WKTWriter.toLineString(pts[0], pts[1]) + ')';\n  }\n};\nBufferDistanceValidator.prototype.isValid = function isValid () {\n  var posDistance = Math.abs(this._bufDistance);\n  var distDelta = BufferDistanceValidator.MAX_DISTANCE_DIFF_FRAC * posDistance;\n  this._minValidDistance = posDistance - distDelta;\n  this._maxValidDistance = posDistance + distDelta;\n  if (this._input.isEmpty() || this._result.isEmpty()) { return true }\n  if (this._bufDistance > 0.0) {\n    this.checkPositiveValid();\n  } else {\n    this.checkNegativeValid();\n  }\n  if (BufferDistanceValidator.VERBOSE) {\n    System.out.println('Min Dist= ' + this._minDistanceFound + '  err= ' + (1.0 - this._minDistanceFound / this._bufDistance) + '  Max Dist= ' + this._maxDistanceFound + '  err= ' + (this._maxDistanceFound / this._bufDistance - 1.0));\n  }\n  return this._isValid\n};\nBufferDistanceValidator.prototype.checkNegativeValid = function checkNegativeValid () {\n  if (!(this._input instanceof Polygon || this._input instanceof MultiPolygon || this._input instanceof GeometryCollection)) {\n    return null\n  }\n  var inputCurve = this.getPolygonLines(this._input);\n  this.checkMinimumDistance(inputCurve, this._result, this._minValidDistance);\n  if (!this._isValid) { return null }\n  this.checkMaximumDistance(inputCurve, this._result, this._maxValidDistance);\n};\nBufferDistanceValidator.prototype.getErrorIndicator = function getErrorIndicator () {\n  return this._errorIndicator\n};\nBufferDistanceValidator.prototype.checkMinimumDistance = function checkMinimumDistance (g1, g2, minDist) {\n  var distOp = new DistanceOp(g1, g2, minDist);\n  this._minDistanceFound = distOp.distance();\n  if (this._minDistanceFound < minDist) {\n    this._isValid = false;\n    var pts = distOp.nearestPoints();\n    this._errorLocation = distOp.nearestPoints()[1];\n    this._errorIndicator = g1.getFactory().createLineString(pts);\n    this._errMsg = 'Distance between buffer curve and input is too small (' + this._minDistanceFound + ' at ' + WKTWriter.toLineString(pts[0], pts[1]) + ' )';\n  }\n};\nBufferDistanceValidator.prototype.checkPositiveValid = function checkPositiveValid () {\n  var bufCurve = this._result.getBoundary();\n  this.checkMinimumDistance(this._input, bufCurve, this._minValidDistance);\n  if (!this._isValid) { return null }\n  this.checkMaximumDistance(this._input, bufCurve, this._maxValidDistance);\n};\nBufferDistanceValidator.prototype.getErrorLocation = function getErrorLocation () {\n  return this._errorLocation\n};\nBufferDistanceValidator.prototype.getPolygonLines = function getPolygonLines (g) {\n  var lines = new ArrayList();\n  var lineExtracter = new LinearComponentExtracter(lines);\n  var polys = PolygonExtracter.getPolygons(g);\n  for (var i = polys.iterator(); i.hasNext();) {\n    var poly = i.next();\n    poly.apply(lineExtracter);\n  }\n  return g.getFactory().buildGeometry(lines)\n};\nBufferDistanceValidator.prototype.getErrorMessage = function getErrorMessage () {\n  return this._errMsg\n};\nBufferDistanceValidator.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nBufferDistanceValidator.prototype.getClass = function getClass () {\n  return BufferDistanceValidator\n};\nstaticAccessors$37.VERBOSE.get = function () { return false };\nstaticAccessors$37.MAX_DISTANCE_DIFF_FRAC.get = function () { return 0.012 };\n\nObject.defineProperties( BufferDistanceValidator, staticAccessors$37 );\n\nvar BufferResultValidator = function BufferResultValidator (input, distance, result) {\n  this._isValid = true;\n  this._errorMsg = null;\n  this._errorLocation = null;\n  this._errorIndicator = null;\n  this._input = input || null;\n  this._distance = distance || null;\n  this._result = result || null;\n};\n\nvar staticAccessors$40 = { VERBOSE: { configurable: true },MAX_ENV_DIFF_FRAC: { configurable: true } };\nBufferResultValidator.prototype.isValid = function isValid () {\n  this.checkPolygonal();\n  if (!this._isValid) { return this._isValid }\n  this.checkExpectedEmpty();\n  if (!this._isValid) { return this._isValid }\n  this.checkEnvelope();\n  if (!this._isValid) { return this._isValid }\n  this.checkArea();\n  if (!this._isValid) { return this._isValid }\n  this.checkDistance();\n  return this._isValid\n};\nBufferResultValidator.prototype.checkEnvelope = function checkEnvelope () {\n  if (this._distance < 0.0) { return null }\n  var padding = this._distance * BufferResultValidator.MAX_ENV_DIFF_FRAC;\n  if (padding === 0.0) { padding = 0.001; }\n  var expectedEnv = new Envelope(this._input.getEnvelopeInternal());\n  expectedEnv.expandBy(this._distance);\n  var bufEnv = new Envelope(this._result.getEnvelopeInternal());\n  bufEnv.expandBy(padding);\n  if (!bufEnv.contains(expectedEnv)) {\n    this._isValid = false;\n    this._errorMsg = 'Buffer envelope is incorrect';\n    this._errorIndicator = this._input.getFactory().toGeometry(bufEnv);\n  }\n  this.report('Envelope');\n};\nBufferResultValidator.prototype.checkDistance = function checkDistance () {\n  var distValid = new BufferDistanceValidator(this._input, this._distance, this._result);\n  if (!distValid.isValid()) {\n    this._isValid = false;\n    this._errorMsg = distValid.getErrorMessage();\n    this._errorLocation = distValid.getErrorLocation();\n    this._errorIndicator = distValid.getErrorIndicator();\n  }\n  this.report('Distance');\n};\nBufferResultValidator.prototype.checkArea = function checkArea () {\n  var inputArea = this._input.getArea();\n  var resultArea = this._result.getArea();\n  if (this._distance > 0.0 && inputArea > resultArea) {\n    this._isValid = false;\n    this._errorMsg = 'Area of positive buffer is smaller than input';\n    this._errorIndicator = this._result;\n  }\n  if (this._distance < 0.0 && inputArea < resultArea) {\n    this._isValid = false;\n    this._errorMsg = 'Area of negative buffer is larger than input';\n    this._errorIndicator = this._result;\n  }\n  this.report('Area');\n};\nBufferResultValidator.prototype.checkPolygonal = function checkPolygonal () {\n  if (!(this._result instanceof Polygon || this._result instanceof MultiPolygon)) { this._isValid = false; }\n  this._errorMsg = 'Result is not polygonal';\n  this._errorIndicator = this._result;\n  this.report('Polygonal');\n};\nBufferResultValidator.prototype.getErrorIndicator = function getErrorIndicator () {\n  return this._errorIndicator\n};\nBufferResultValidator.prototype.getErrorLocation = function getErrorLocation () {\n  return this._errorLocation\n};\nBufferResultValidator.prototype.checkExpectedEmpty = function checkExpectedEmpty () {\n  if (this._input.getDimension() >= 2) { return null }\n  if (this._distance > 0.0) { return null }\n  if (!this._result.isEmpty()) {\n    this._isValid = false;\n    this._errorMsg = 'Result is non-empty';\n    this._errorIndicator = this._result;\n  }\n  this.report('ExpectedEmpty');\n};\nBufferResultValidator.prototype.report = function report (checkName) {\n  if (!BufferResultValidator.VERBOSE) { return null }\n  System.out.println('Check ' + checkName + ': ' + (this._isValid ? 'passed' : 'FAILED'));\n};\nBufferResultValidator.prototype.getErrorMessage = function getErrorMessage () {\n  return this._errorMsg\n};\nBufferResultValidator.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nBufferResultValidator.prototype.getClass = function getClass () {\n  return BufferResultValidator\n};\nBufferResultValidator.isValidMsg = function isValidMsg (g, distance, result) {\n  var validator = new BufferResultValidator(g, distance, result);\n  if (!validator.isValid()) { return validator.getErrorMessage() }\n  return null\n};\nBufferResultValidator.isValid = function isValid (g, distance, result) {\n  var validator = new BufferResultValidator(g, distance, result);\n  if (validator.isValid()) { return true }\n  return false\n};\nstaticAccessors$40.VERBOSE.get = function () { return false };\nstaticAccessors$40.MAX_ENV_DIFF_FRAC.get = function () { return 0.012 };\n\nObject.defineProperties( BufferResultValidator, staticAccessors$40 );\n\n// operation.buffer\n\nvar BasicSegmentString = function BasicSegmentString () {\n  this._pts = null;\n  this._data = null;\n  var pts = arguments[0];\n  var data = arguments[1];\n  this._pts = pts;\n  this._data = data;\n};\nBasicSegmentString.prototype.getCoordinates = function getCoordinates () {\n  return this._pts\n};\nBasicSegmentString.prototype.size = function size () {\n  return this._pts.length\n};\nBasicSegmentString.prototype.getCoordinate = function getCoordinate (i) {\n  return this._pts[i]\n};\nBasicSegmentString.prototype.isClosed = function isClosed () {\n  return this._pts[0].equals(this._pts[this._pts.length - 1])\n};\nBasicSegmentString.prototype.getSegmentOctant = function getSegmentOctant (index) {\n  if (index === this._pts.length - 1) { return -1 }\n  return Octant.octant(this.getCoordinate(index), this.getCoordinate(index + 1))\n};\nBasicSegmentString.prototype.setData = function setData (data) {\n  this._data = data;\n};\nBasicSegmentString.prototype.getData = function getData () {\n  return this._data\n};\nBasicSegmentString.prototype.toString = function toString () {\n  return WKTWriter.toLineString(new CoordinateArraySequence(this._pts))\n};\nBasicSegmentString.prototype.interfaces_ = function interfaces_ () {\n  return [SegmentString]\n};\nBasicSegmentString.prototype.getClass = function getClass () {\n  return BasicSegmentString\n};\n\nvar InteriorIntersectionFinder = function InteriorIntersectionFinder () {\n  this._findAllIntersections = false;\n  this._isCheckEndSegmentsOnly = false;\n  this._li = null;\n  this._interiorIntersection = null;\n  this._intSegments = null;\n  this._intersections = new ArrayList();\n  this._intersectionCount = 0;\n  this._keepIntersections = true;\n  var li = arguments[0];\n  this._li = li;\n  this._interiorIntersection = null;\n};\nInteriorIntersectionFinder.prototype.getInteriorIntersection = function getInteriorIntersection () {\n  return this._interiorIntersection\n};\nInteriorIntersectionFinder.prototype.setCheckEndSegmentsOnly = function setCheckEndSegmentsOnly (isCheckEndSegmentsOnly) {\n  this._isCheckEndSegmentsOnly = isCheckEndSegmentsOnly;\n};\nInteriorIntersectionFinder.prototype.getIntersectionSegments = function getIntersectionSegments () {\n  return this._intSegments\n};\nInteriorIntersectionFinder.prototype.count = function count () {\n  return this._intersectionCount\n};\nInteriorIntersectionFinder.prototype.getIntersections = function getIntersections () {\n  return this._intersections\n};\nInteriorIntersectionFinder.prototype.setFindAllIntersections = function setFindAllIntersections (findAllIntersections) {\n  this._findAllIntersections = findAllIntersections;\n};\nInteriorIntersectionFinder.prototype.setKeepIntersections = function setKeepIntersections (keepIntersections) {\n  this._keepIntersections = keepIntersections;\n};\nInteriorIntersectionFinder.prototype.processIntersections = function processIntersections (e0, segIndex0, e1, segIndex1) {\n  if (!this._findAllIntersections && this.hasIntersection()) { return null }\n  if (e0 === e1 && segIndex0 === segIndex1) { return null }\n  if (this._isCheckEndSegmentsOnly) {\n    var isEndSegPresent = this.isEndSegment(e0, segIndex0) || this.isEndSegment(e1, segIndex1);\n    if (!isEndSegPresent) { return null }\n  }\n  var p00 = e0.getCoordinates()[segIndex0];\n  var p01 = e0.getCoordinates()[segIndex0 + 1];\n  var p10 = e1.getCoordinates()[segIndex1];\n  var p11 = e1.getCoordinates()[segIndex1 + 1];\n  this._li.computeIntersection(p00, p01, p10, p11);\n  if (this._li.hasIntersection()) {\n    if (this._li.isInteriorIntersection()) {\n      this._intSegments = new Array(4).fill(null);\n      this._intSegments[0] = p00;\n      this._intSegments[1] = p01;\n      this._intSegments[2] = p10;\n      this._intSegments[3] = p11;\n      this._interiorIntersection = this._li.getIntersection(0);\n      if (this._keepIntersections) { this._intersections.add(this._interiorIntersection); }\n      this._intersectionCount++;\n    }\n  }\n};\nInteriorIntersectionFinder.prototype.isEndSegment = function isEndSegment (segStr, index) {\n  if (index === 0) { return true }\n  if (index >= segStr.size() - 2) { return true }\n  return false\n};\nInteriorIntersectionFinder.prototype.hasIntersection = function hasIntersection () {\n  return this._interiorIntersection !== null\n};\nInteriorIntersectionFinder.prototype.isDone = function isDone () {\n  if (this._findAllIntersections) { return false }\n  return this._interiorIntersection !== null\n};\nInteriorIntersectionFinder.prototype.interfaces_ = function interfaces_ () {\n  return [SegmentIntersector]\n};\nInteriorIntersectionFinder.prototype.getClass = function getClass () {\n  return InteriorIntersectionFinder\n};\nInteriorIntersectionFinder.createAllIntersectionsFinder = function createAllIntersectionsFinder (li) {\n  var finder = new InteriorIntersectionFinder(li);\n  finder.setFindAllIntersections(true);\n  return finder\n};\nInteriorIntersectionFinder.createAnyIntersectionFinder = function createAnyIntersectionFinder (li) {\n  return new InteriorIntersectionFinder(li)\n};\nInteriorIntersectionFinder.createIntersectionCounter = function createIntersectionCounter (li) {\n  var finder = new InteriorIntersectionFinder(li);\n  finder.setFindAllIntersections(true);\n  finder.setKeepIntersections(false);\n  return finder\n};\n\nvar FastNodingValidator = function FastNodingValidator () {\n  this._li = new RobustLineIntersector();\n  this._segStrings = null;\n  this._findAllIntersections = false;\n  this._segInt = null;\n  this._isValid = true;\n  var segStrings = arguments[0];\n  this._segStrings = segStrings;\n};\nFastNodingValidator.prototype.execute = function execute () {\n  if (this._segInt !== null) { return null }\n  this.checkInteriorIntersections();\n};\nFastNodingValidator.prototype.getIntersections = function getIntersections () {\n  return this._segInt.getIntersections()\n};\nFastNodingValidator.prototype.isValid = function isValid () {\n  this.execute();\n  return this._isValid\n};\nFastNodingValidator.prototype.setFindAllIntersections = function setFindAllIntersections (findAllIntersections) {\n  this._findAllIntersections = findAllIntersections;\n};\nFastNodingValidator.prototype.checkInteriorIntersections = function checkInteriorIntersections () {\n  this._isValid = true;\n  this._segInt = new InteriorIntersectionFinder(this._li);\n  this._segInt.setFindAllIntersections(this._findAllIntersections);\n  var noder = new MCIndexNoder();\n  noder.setSegmentIntersector(this._segInt);\n  noder.computeNodes(this._segStrings);\n  if (this._segInt.hasIntersection()) {\n    this._isValid = false;\n    return null\n  }\n};\nFastNodingValidator.prototype.checkValid = function checkValid () {\n  this.execute();\n  if (!this._isValid) { throw new TopologyException(this.getErrorMessage(), this._segInt.getInteriorIntersection()) }\n};\nFastNodingValidator.prototype.getErrorMessage = function getErrorMessage () {\n  if (this._isValid) { return 'no intersections found' }\n  var intSegs = this._segInt.getIntersectionSegments();\n  return 'found non-noded intersection between ' + WKTWriter.toLineString(intSegs[0], intSegs[1]) + ' and ' + WKTWriter.toLineString(intSegs[2], intSegs[3])\n};\nFastNodingValidator.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nFastNodingValidator.prototype.getClass = function getClass () {\n  return FastNodingValidator\n};\nFastNodingValidator.computeIntersections = function computeIntersections (segStrings) {\n  var nv = new FastNodingValidator(segStrings);\n  nv.setFindAllIntersections(true);\n  nv.isValid();\n  return nv.getIntersections()\n};\n\nvar EdgeNodingValidator = function EdgeNodingValidator () {\n  this._nv = null;\n  var edges = arguments[0];\n  this._nv = new FastNodingValidator(EdgeNodingValidator.toSegmentStrings(edges));\n};\nEdgeNodingValidator.prototype.checkValid = function checkValid () {\n  this._nv.checkValid();\n};\nEdgeNodingValidator.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nEdgeNodingValidator.prototype.getClass = function getClass () {\n  return EdgeNodingValidator\n};\nEdgeNodingValidator.toSegmentStrings = function toSegmentStrings (edges) {\n  var segStrings = new ArrayList();\n  for (var i = edges.iterator(); i.hasNext();) {\n    var e = i.next();\n    segStrings.add(new BasicSegmentString(e.getCoordinates(), e));\n  }\n  return segStrings\n};\nEdgeNodingValidator.checkValid = function checkValid (edges) {\n  var validator = new EdgeNodingValidator(edges);\n  validator.checkValid();\n};\n\nvar GeometryCollectionMapper = function GeometryCollectionMapper (mapOp) {\n  this._mapOp = mapOp;\n};\nGeometryCollectionMapper.prototype.map = function map (gc) {\n    var this$1 = this;\n\n  var mapped = new ArrayList();\n  for (var i = 0; i < gc.getNumGeometries(); i++) {\n    var g = this$1._mapOp.map(gc.getGeometryN(i));\n    if (!g.isEmpty()) { mapped.add(g); }\n  }\n  return gc.getFactory().createGeometryCollection(GeometryFactory.toGeometryArray(mapped))\n};\nGeometryCollectionMapper.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nGeometryCollectionMapper.prototype.getClass = function getClass () {\n  return GeometryCollectionMapper\n};\nGeometryCollectionMapper.map = function map (gc, op) {\n  var mapper = new GeometryCollectionMapper(op);\n  return mapper.map(gc)\n};\n\nvar LineBuilder = function LineBuilder () {\n  this._op = null;\n  this._geometryFactory = null;\n  this._ptLocator = null;\n  this._lineEdgesList = new ArrayList();\n  this._resultLineList = new ArrayList();\n  var op = arguments[0];\n  var geometryFactory = arguments[1];\n  var ptLocator = arguments[2];\n  this._op = op;\n  this._geometryFactory = geometryFactory;\n  this._ptLocator = ptLocator;\n};\nLineBuilder.prototype.collectLines = function collectLines (opCode) {\n    var this$1 = this;\n\n  for (var it = this._op.getGraph().getEdgeEnds().iterator(); it.hasNext();) {\n    var de = it.next();\n    this$1.collectLineEdge(de, opCode, this$1._lineEdgesList);\n    this$1.collectBoundaryTouchEdge(de, opCode, this$1._lineEdgesList);\n  }\n};\nLineBuilder.prototype.labelIsolatedLine = function labelIsolatedLine (e, targetIndex) {\n  var loc = this._ptLocator.locate(e.getCoordinate(), this._op.getArgGeometry(targetIndex));\n  e.getLabel().setLocation(targetIndex, loc);\n};\nLineBuilder.prototype.build = function build (opCode) {\n  this.findCoveredLineEdges();\n  this.collectLines(opCode);\n  this.buildLines(opCode);\n  return this._resultLineList\n};\nLineBuilder.prototype.collectLineEdge = function collectLineEdge (de, opCode, edges) {\n  var label = de.getLabel();\n  var e = de.getEdge();\n  if (de.isLineEdge()) {\n    if (!de.isVisited() && OverlayOp.isResultOfOp(label, opCode) && !e.isCovered()) {\n      edges.add(e);\n      de.setVisitedEdge(true);\n    }\n  }\n};\nLineBuilder.prototype.findCoveredLineEdges = function findCoveredLineEdges () {\n    var this$1 = this;\n\n  for (var nodeit = this._op.getGraph().getNodes().iterator(); nodeit.hasNext();) {\n    var node = nodeit.next();\n    node.getEdges().findCoveredLineEdges();\n  }\n  for (var it = this._op.getGraph().getEdgeEnds().iterator(); it.hasNext();) {\n    var de = it.next();\n    var e = de.getEdge();\n    if (de.isLineEdge() && !e.isCoveredSet()) {\n      var isCovered = this$1._op.isCoveredByA(de.getCoordinate());\n      e.setCovered(isCovered);\n    }\n  }\n};\nLineBuilder.prototype.labelIsolatedLines = function labelIsolatedLines (edgesList) {\n    var this$1 = this;\n\n  for (var it = edgesList.iterator(); it.hasNext();) {\n    var e = it.next();\n    var label = e.getLabel();\n    if (e.isIsolated()) {\n      if (label.isNull(0)) { this$1.labelIsolatedLine(e, 0); } else { this$1.labelIsolatedLine(e, 1); }\n    }\n  }\n};\nLineBuilder.prototype.buildLines = function buildLines (opCode) {\n    var this$1 = this;\n\n  for (var it = this._lineEdgesList.iterator(); it.hasNext();) {\n    var e = it.next();\n    // const label = e.getLabel()\n    var line = this$1._geometryFactory.createLineString(e.getCoordinates());\n    this$1._resultLineList.add(line);\n    e.setInResult(true);\n  }\n};\nLineBuilder.prototype.collectBoundaryTouchEdge = function collectBoundaryTouchEdge (de, opCode, edges) {\n  var label = de.getLabel();\n  if (de.isLineEdge()) { return null }\n  if (de.isVisited()) { return null }\n  if (de.isInteriorAreaEdge()) { return null }\n  if (de.getEdge().isInResult()) { return null }\n  Assert.isTrue(!(de.isInResult() || de.getSym().isInResult()) || !de.getEdge().isInResult());\n  if (OverlayOp.isResultOfOp(label, opCode) && opCode === OverlayOp.INTERSECTION) {\n    edges.add(de.getEdge());\n    de.setVisitedEdge(true);\n  }\n};\nLineBuilder.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nLineBuilder.prototype.getClass = function getClass () {\n  return LineBuilder\n};\n\nvar PointBuilder = function PointBuilder () {\n  this._op = null;\n  this._geometryFactory = null;\n  this._resultPointList = new ArrayList();\n  var op = arguments[0];\n  var geometryFactory = arguments[1];\n  // const ptLocator = arguments[2]\n  this._op = op;\n  this._geometryFactory = geometryFactory;\n};\nPointBuilder.prototype.filterCoveredNodeToPoint = function filterCoveredNodeToPoint (n) {\n  var coord = n.getCoordinate();\n  if (!this._op.isCoveredByLA(coord)) {\n    var pt = this._geometryFactory.createPoint(coord);\n    this._resultPointList.add(pt);\n  }\n};\nPointBuilder.prototype.extractNonCoveredResultNodes = function extractNonCoveredResultNodes (opCode) {\n    var this$1 = this;\n\n  for (var nodeit = this._op.getGraph().getNodes().iterator(); nodeit.hasNext();) {\n    var n = nodeit.next();\n    if (n.isInResult()) { continue }\n    if (n.isIncidentEdgeInResult()) { continue }\n    if (n.getEdges().getDegree() === 0 || opCode === OverlayOp.INTERSECTION) {\n      var label = n.getLabel();\n      if (OverlayOp.isResultOfOp(label, opCode)) {\n        this$1.filterCoveredNodeToPoint(n);\n      }\n    }\n  }\n};\nPointBuilder.prototype.build = function build (opCode) {\n  this.extractNonCoveredResultNodes(opCode);\n  return this._resultPointList\n};\nPointBuilder.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nPointBuilder.prototype.getClass = function getClass () {\n  return PointBuilder\n};\n\nvar GeometryTransformer = function GeometryTransformer () {\n  this._inputGeom = null;\n  this._factory = null;\n  this._pruneEmptyGeometry = true;\n  this._preserveGeometryCollectionType = true;\n  this._preserveCollections = false;\n  this._preserveType = false;\n};\nGeometryTransformer.prototype.transformPoint = function transformPoint (geom, parent) {\n  return this._factory.createPoint(this.transformCoordinates(geom.getCoordinateSequence(), geom))\n};\nGeometryTransformer.prototype.transformPolygon = function transformPolygon (geom, parent) {\n    var this$1 = this;\n\n  var isAllValidLinearRings = true;\n  var shell = this.transformLinearRing(geom.getExteriorRing(), geom);\n  if (shell === null || !(shell instanceof LinearRing) || shell.isEmpty()) { isAllValidLinearRings = false; }\n  var holes = new ArrayList();\n  for (var i = 0; i < geom.getNumInteriorRing(); i++) {\n    var hole = this$1.transformLinearRing(geom.getInteriorRingN(i), geom);\n    if (hole === null || hole.isEmpty()) {\n      continue\n    }\n    if (!(hole instanceof LinearRing)) { isAllValidLinearRings = false; }\n    holes.add(hole);\n  }\n  if (isAllValidLinearRings) { return this._factory.createPolygon(shell, holes.toArray([])); } else {\n    var components = new ArrayList();\n    if (shell !== null) { components.add(shell); }\n    components.addAll(holes);\n    return this._factory.buildGeometry(components)\n  }\n};\nGeometryTransformer.prototype.createCoordinateSequence = function createCoordinateSequence (coords) {\n  return this._factory.getCoordinateSequenceFactory().create(coords)\n};\nGeometryTransformer.prototype.getInputGeometry = function getInputGeometry () {\n  return this._inputGeom\n};\nGeometryTransformer.prototype.transformMultiLineString = function transformMultiLineString (geom, parent) {\n    var this$1 = this;\n\n  var transGeomList = new ArrayList();\n  for (var i = 0; i < geom.getNumGeometries(); i++) {\n    var transformGeom = this$1.transformLineString(geom.getGeometryN(i), geom);\n    if (transformGeom === null) { continue }\n    if (transformGeom.isEmpty()) { continue }\n    transGeomList.add(transformGeom);\n  }\n  return this._factory.buildGeometry(transGeomList)\n};\nGeometryTransformer.prototype.transformCoordinates = function transformCoordinates (coords, parent) {\n  return this.copy(coords)\n};\nGeometryTransformer.prototype.transformLineString = function transformLineString (geom, parent) {\n  return this._factory.createLineString(this.transformCoordinates(geom.getCoordinateSequence(), geom))\n};\nGeometryTransformer.prototype.transformMultiPoint = function transformMultiPoint (geom, parent) {\n    var this$1 = this;\n\n  var transGeomList = new ArrayList();\n  for (var i = 0; i < geom.getNumGeometries(); i++) {\n    var transformGeom = this$1.transformPoint(geom.getGeometryN(i), geom);\n    if (transformGeom === null) { continue }\n    if (transformGeom.isEmpty()) { continue }\n    transGeomList.add(transformGeom);\n  }\n  return this._factory.buildGeometry(transGeomList)\n};\nGeometryTransformer.prototype.transformMultiPolygon = function transformMultiPolygon (geom, parent) {\n    var this$1 = this;\n\n  var transGeomList = new ArrayList();\n  for (var i = 0; i < geom.getNumGeometries(); i++) {\n    var transformGeom = this$1.transformPolygon(geom.getGeometryN(i), geom);\n    if (transformGeom === null) { continue }\n    if (transformGeom.isEmpty()) { continue }\n    transGeomList.add(transformGeom);\n  }\n  return this._factory.buildGeometry(transGeomList)\n};\nGeometryTransformer.prototype.copy = function copy (seq) {\n  return seq.copy()\n};\nGeometryTransformer.prototype.transformGeometryCollection = function transformGeometryCollection (geom, parent) {\n    var this$1 = this;\n\n  var transGeomList = new ArrayList();\n  for (var i = 0; i < geom.getNumGeometries(); i++) {\n    var transformGeom = this$1.transform(geom.getGeometryN(i));\n    if (transformGeom === null) { continue }\n    if (this$1._pruneEmptyGeometry && transformGeom.isEmpty()) { continue }\n    transGeomList.add(transformGeom);\n  }\n  if (this._preserveGeometryCollectionType) { return this._factory.createGeometryCollection(GeometryFactory.toGeometryArray(transGeomList)) }\n  return this._factory.buildGeometry(transGeomList)\n};\nGeometryTransformer.prototype.transform = function transform (inputGeom) {\n  this._inputGeom = inputGeom;\n  this._factory = inputGeom.getFactory();\n  if (inputGeom instanceof Point) { return this.transformPoint(inputGeom, null) }\n  if (inputGeom instanceof MultiPoint) { return this.transformMultiPoint(inputGeom, null) }\n  if (inputGeom instanceof LinearRing) { return this.transformLinearRing(inputGeom, null) }\n  if (inputGeom instanceof LineString) { return this.transformLineString(inputGeom, null) }\n  if (inputGeom instanceof MultiLineString) { return this.transformMultiLineString(inputGeom, null) }\n  if (inputGeom instanceof Polygon) { return this.transformPolygon(inputGeom, null) }\n  if (inputGeom instanceof MultiPolygon) { return this.transformMultiPolygon(inputGeom, null) }\n  if (inputGeom instanceof GeometryCollection) { return this.transformGeometryCollection(inputGeom, null) }\n  throw new IllegalArgumentException('Unknown Geometry subtype: ' + inputGeom.getClass().getName())\n};\nGeometryTransformer.prototype.transformLinearRing = function transformLinearRing (geom, parent) {\n  var seq = this.transformCoordinates(geom.getCoordinateSequence(), geom);\n  if (seq === null) { return this._factory.createLinearRing(null) }\n  var seqSize = seq.size();\n  if (seqSize > 0 && seqSize < 4 && !this._preserveType) { return this._factory.createLineString(seq) }\n  return this._factory.createLinearRing(seq)\n};\nGeometryTransformer.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nGeometryTransformer.prototype.getClass = function getClass () {\n  return GeometryTransformer\n};\n\nvar LineStringSnapper = function LineStringSnapper () {\n  this._snapTolerance = 0.0;\n  this._srcPts = null;\n  this._seg = new LineSegment();\n  this._allowSnappingToSourceVertices = false;\n  this._isClosed = false;\n  if (arguments[0] instanceof LineString && typeof arguments[1] === 'number') {\n    var srcLine = arguments[0];\n    var snapTolerance = arguments[1];\n    LineStringSnapper.call(this, srcLine.getCoordinates(), snapTolerance);\n  } else if (arguments[0] instanceof Array && typeof arguments[1] === 'number') {\n    var srcPts = arguments[0];\n    var snapTolerance$1 = arguments[1];\n    this._srcPts = srcPts;\n    this._isClosed = LineStringSnapper.isClosed(srcPts);\n    this._snapTolerance = snapTolerance$1;\n  }\n};\nLineStringSnapper.prototype.snapVertices = function snapVertices (srcCoords, snapPts) {\n    var this$1 = this;\n\n  var end = this._isClosed ? srcCoords.size() - 1 : srcCoords.size();\n  for (var i = 0; i < end; i++) {\n    var srcPt = srcCoords.get(i);\n    var snapVert = this$1.findSnapForVertex(srcPt, snapPts);\n    if (snapVert !== null) {\n      srcCoords.set(i, new Coordinate(snapVert));\n      if (i === 0 && this$1._isClosed) { srcCoords.set(srcCoords.size() - 1, new Coordinate(snapVert)); }\n    }\n  }\n};\nLineStringSnapper.prototype.findSnapForVertex = function findSnapForVertex (pt, snapPts) {\n    var this$1 = this;\n\n  for (var i = 0; i < snapPts.length; i++) {\n    if (pt.equals2D(snapPts[i])) { return null }\n    if (pt.distance(snapPts[i]) < this$1._snapTolerance) { return snapPts[i] }\n  }\n  return null\n};\nLineStringSnapper.prototype.snapTo = function snapTo (snapPts) {\n  var coordList = new CoordinateList(this._srcPts);\n  this.snapVertices(coordList, snapPts);\n  this.snapSegments(coordList, snapPts);\n  var newPts = coordList.toCoordinateArray();\n  return newPts\n};\nLineStringSnapper.prototype.snapSegments = function snapSegments (srcCoords, snapPts) {\n    var this$1 = this;\n\n  if (snapPts.length === 0) { return null }\n  var distinctPtCount = snapPts.length;\n  if (snapPts[0].equals2D(snapPts[snapPts.length - 1])) { distinctPtCount = snapPts.length - 1; }\n  for (var i = 0; i < distinctPtCount; i++) {\n    var snapPt = snapPts[i];\n    var index = this$1.findSegmentIndexToSnap(snapPt, srcCoords);\n    if (index >= 0) {\n      srcCoords.add(index + 1, new Coordinate(snapPt), false);\n    }\n  }\n};\nLineStringSnapper.prototype.findSegmentIndexToSnap = function findSegmentIndexToSnap (snapPt, srcCoords) {\n    var this$1 = this;\n\n  var minDist = Double.MAX_VALUE;\n  var snapIndex = -1;\n  for (var i = 0; i < srcCoords.size() - 1; i++) {\n    this$1._seg.p0 = srcCoords.get(i);\n    this$1._seg.p1 = srcCoords.get(i + 1);\n    if (this$1._seg.p0.equals2D(snapPt) || this$1._seg.p1.equals2D(snapPt)) {\n      if (this$1._allowSnappingToSourceVertices) { continue; } else { return -1 }\n    }\n    var dist = this$1._seg.distance(snapPt);\n    if (dist < this$1._snapTolerance && dist < minDist) {\n      minDist = dist;\n      snapIndex = i;\n    }\n  }\n  return snapIndex\n};\nLineStringSnapper.prototype.setAllowSnappingToSourceVertices = function setAllowSnappingToSourceVertices (allowSnappingToSourceVertices) {\n  this._allowSnappingToSourceVertices = allowSnappingToSourceVertices;\n};\nLineStringSnapper.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nLineStringSnapper.prototype.getClass = function getClass () {\n  return LineStringSnapper\n};\nLineStringSnapper.isClosed = function isClosed (pts) {\n  if (pts.length <= 1) { return false }\n  return pts[0].equals2D(pts[pts.length - 1])\n};\n\nvar GeometrySnapper = function GeometrySnapper (srcGeom) {\n  this._srcGeom = srcGeom || null;\n};\n\nvar staticAccessors$41 = { SNAP_PRECISION_FACTOR: { configurable: true } };\nGeometrySnapper.prototype.snapTo = function snapTo (snapGeom, snapTolerance) {\n  var snapPts = this.extractTargetCoordinates(snapGeom);\n  var snapTrans = new SnapTransformer(snapTolerance, snapPts);\n  return snapTrans.transform(this._srcGeom)\n};\nGeometrySnapper.prototype.snapToSelf = function snapToSelf (snapTolerance, cleanResult) {\n  var snapPts = this.extractTargetCoordinates(this._srcGeom);\n  var snapTrans = new SnapTransformer(snapTolerance, snapPts, true);\n  var snappedGeom = snapTrans.transform(this._srcGeom);\n  var result = snappedGeom;\n  if (cleanResult && hasInterface(result, Polygonal)) {\n    result = snappedGeom.buffer(0);\n  }\n  return result\n};\nGeometrySnapper.prototype.computeSnapTolerance = function computeSnapTolerance (ringPts) {\n  var minSegLen = this.computeMinimumSegmentLength(ringPts);\n  var snapTol = minSegLen / 10;\n  return snapTol\n};\nGeometrySnapper.prototype.extractTargetCoordinates = function extractTargetCoordinates (g) {\n  var ptSet = new TreeSet();\n  var pts = g.getCoordinates();\n  for (var i = 0; i < pts.length; i++) {\n    ptSet.add(pts[i]);\n  }\n  return ptSet.toArray(new Array(0).fill(null))\n};\nGeometrySnapper.prototype.computeMinimumSegmentLength = function computeMinimumSegmentLength (pts) {\n  var minSegLen = Double.MAX_VALUE;\n  for (var i = 0; i < pts.length - 1; i++) {\n    var segLen = pts[i].distance(pts[i + 1]);\n    if (segLen < minSegLen) { minSegLen = segLen; }\n  }\n  return minSegLen\n};\nGeometrySnapper.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nGeometrySnapper.prototype.getClass = function getClass () {\n  return GeometrySnapper\n};\nGeometrySnapper.snap = function snap (g0, g1, snapTolerance) {\n  var snapGeom = new Array(2).fill(null);\n  var snapper0 = new GeometrySnapper(g0);\n  snapGeom[0] = snapper0.snapTo(g1, snapTolerance);\n  var snapper1 = new GeometrySnapper(g1);\n  snapGeom[1] = snapper1.snapTo(snapGeom[0], snapTolerance);\n  return snapGeom\n};\nGeometrySnapper.computeOverlaySnapTolerance = function computeOverlaySnapTolerance () {\n  if (arguments.length === 1) {\n    var g = arguments[0];\n    var snapTolerance = GeometrySnapper.computeSizeBasedSnapTolerance(g);\n    var pm = g.getPrecisionModel();\n    if (pm.getType() === PrecisionModel.FIXED) {\n      var fixedSnapTol = 1 / pm.getScale() * 2 / 1.415;\n      if (fixedSnapTol > snapTolerance) { snapTolerance = fixedSnapTol; }\n    }\n    return snapTolerance\n  } else if (arguments.length === 2) {\n    var g0 = arguments[0];\n    var g1 = arguments[1];\n    return Math.min(GeometrySnapper.computeOverlaySnapTolerance(g0), GeometrySnapper.computeOverlaySnapTolerance(g1))\n  }\n};\nGeometrySnapper.computeSizeBasedSnapTolerance = function computeSizeBasedSnapTolerance (g) {\n  var env = g.getEnvelopeInternal();\n  var minDimension = Math.min(env.getHeight(), env.getWidth());\n  var snapTol = minDimension * GeometrySnapper.SNAP_PRECISION_FACTOR;\n  return snapTol\n};\nGeometrySnapper.snapToSelf = function snapToSelf (geom, snapTolerance, cleanResult) {\n  var snapper0 = new GeometrySnapper(geom);\n  return snapper0.snapToSelf(snapTolerance, cleanResult)\n};\nstaticAccessors$41.SNAP_PRECISION_FACTOR.get = function () { return 1e-9 };\n\nObject.defineProperties( GeometrySnapper, staticAccessors$41 );\n\nvar SnapTransformer = (function (GeometryTransformer$$1) {\n  function SnapTransformer (snapTolerance, snapPts, isSelfSnap) {\n    GeometryTransformer$$1.call(this);\n    this._snapTolerance = snapTolerance || null;\n    this._snapPts = snapPts || null;\n    this._isSelfSnap = (isSelfSnap !== undefined) ? isSelfSnap : false;\n  }\n\n  if ( GeometryTransformer$$1 ) SnapTransformer.__proto__ = GeometryTransformer$$1;\n  SnapTransformer.prototype = Object.create( GeometryTransformer$$1 && GeometryTransformer$$1.prototype );\n  SnapTransformer.prototype.constructor = SnapTransformer;\n  SnapTransformer.prototype.snapLine = function snapLine (srcPts, snapPts) {\n    var snapper = new LineStringSnapper(srcPts, this._snapTolerance);\n    snapper.setAllowSnappingToSourceVertices(this._isSelfSnap);\n    return snapper.snapTo(snapPts)\n  };\n  SnapTransformer.prototype.transformCoordinates = function transformCoordinates (coords, parent) {\n    var srcPts = coords.toCoordinateArray();\n    var newPts = this.snapLine(srcPts, this._snapPts);\n    return this._factory.getCoordinateSequenceFactory().create(newPts)\n  };\n  SnapTransformer.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  SnapTransformer.prototype.getClass = function getClass () {\n    return SnapTransformer\n  };\n\n  return SnapTransformer;\n}(GeometryTransformer));\n\nvar CommonBits = function CommonBits () {\n  this._isFirst = true;\n  this._commonMantissaBitsCount = 53;\n  this._commonBits = 0;\n  this._commonSignExp = null;\n};\nCommonBits.prototype.getCommon = function getCommon () {\n  return Double.longBitsToDouble(this._commonBits)\n};\nCommonBits.prototype.add = function add (num) {\n  var numBits = Double.doubleToLongBits(num);\n  if (this._isFirst) {\n    this._commonBits = numBits;\n    this._commonSignExp = CommonBits.signExpBits(this._commonBits);\n    this._isFirst = false;\n    return null\n  }\n  var numSignExp = CommonBits.signExpBits(numBits);\n  if (numSignExp !== this._commonSignExp) {\n    this._commonBits = 0;\n    return null\n  }\n  this._commonMantissaBitsCount = CommonBits.numCommonMostSigMantissaBits(this._commonBits, numBits);\n  this._commonBits = CommonBits.zeroLowerBits(this._commonBits, 64 - (12 + this._commonMantissaBitsCount));\n};\nCommonBits.prototype.toString = function toString () {\n  if (arguments.length === 1) {\n    var bits = arguments[0];\n    var x = Double.longBitsToDouble(bits);\n    var numStr = Double.toBinaryString(bits);\n    var padStr = '0000000000000000000000000000000000000000000000000000000000000000' + numStr;\n    var bitStr = padStr.substring(padStr.length - 64);\n    var str = bitStr.substring(0, 1) + '  ' + bitStr.substring(1, 12) + '(exp) ' + bitStr.substring(12) + ' [ ' + x + ' ]';\n    return str\n  }\n};\nCommonBits.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nCommonBits.prototype.getClass = function getClass () {\n  return CommonBits\n};\nCommonBits.getBit = function getBit (bits, i) {\n  var mask = 1 << i;\n  return (bits & mask) !== 0 ? 1 : 0\n};\nCommonBits.signExpBits = function signExpBits (num) {\n  return num >> 52\n};\nCommonBits.zeroLowerBits = function zeroLowerBits (bits, nBits) {\n  var invMask = (1 << nBits) - 1;\n  var mask = ~invMask;\n  var zeroed = bits & mask;\n  return zeroed\n};\nCommonBits.numCommonMostSigMantissaBits = function numCommonMostSigMantissaBits (num1, num2) {\n  var count = 0;\n  for (var i = 52; i >= 0; i--) {\n    if (CommonBits.getBit(num1, i) !== CommonBits.getBit(num2, i)) { return count }\n    count++;\n  }\n  return 52\n};\n\nvar CommonBitsRemover = function CommonBitsRemover () {\n  this._commonCoord = null;\n  this._ccFilter = new CommonCoordinateFilter();\n};\n\nvar staticAccessors$42 = { CommonCoordinateFilter: { configurable: true },Translater: { configurable: true } };\nCommonBitsRemover.prototype.addCommonBits = function addCommonBits (geom) {\n  var trans = new Translater(this._commonCoord);\n  geom.apply(trans);\n  geom.geometryChanged();\n};\nCommonBitsRemover.prototype.removeCommonBits = function removeCommonBits (geom) {\n  if (this._commonCoord.x === 0.0 && this._commonCoord.y === 0.0) { return geom }\n  var invCoord = new Coordinate(this._commonCoord);\n  invCoord.x = -invCoord.x;\n  invCoord.y = -invCoord.y;\n  var trans = new Translater(invCoord);\n  geom.apply(trans);\n  geom.geometryChanged();\n  return geom\n};\nCommonBitsRemover.prototype.getCommonCoordinate = function getCommonCoordinate () {\n  return this._commonCoord\n};\nCommonBitsRemover.prototype.add = function add (geom) {\n  geom.apply(this._ccFilter);\n  this._commonCoord = this._ccFilter.getCommonCoordinate();\n};\nCommonBitsRemover.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nCommonBitsRemover.prototype.getClass = function getClass () {\n  return CommonBitsRemover\n};\nstaticAccessors$42.CommonCoordinateFilter.get = function () { return CommonCoordinateFilter };\nstaticAccessors$42.Translater.get = function () { return Translater };\n\nObject.defineProperties( CommonBitsRemover, staticAccessors$42 );\n\nvar CommonCoordinateFilter = function CommonCoordinateFilter () {\n  this._commonBitsX = new CommonBits();\n  this._commonBitsY = new CommonBits();\n};\nCommonCoordinateFilter.prototype.filter = function filter (coord) {\n  this._commonBitsX.add(coord.x);\n  this._commonBitsY.add(coord.y);\n};\nCommonCoordinateFilter.prototype.getCommonCoordinate = function getCommonCoordinate () {\n  return new Coordinate(this._commonBitsX.getCommon(), this._commonBitsY.getCommon())\n};\nCommonCoordinateFilter.prototype.interfaces_ = function interfaces_ () {\n  return [CoordinateFilter]\n};\nCommonCoordinateFilter.prototype.getClass = function getClass () {\n  return CommonCoordinateFilter\n};\n\nvar Translater = function Translater () {\n  this.trans = null;\n  var trans = arguments[0];\n  this.trans = trans;\n};\nTranslater.prototype.filter = function filter (seq, i) {\n  var xp = seq.getOrdinate(i, 0) + this.trans.x;\n  var yp = seq.getOrdinate(i, 1) + this.trans.y;\n  seq.setOrdinate(i, 0, xp);\n  seq.setOrdinate(i, 1, yp);\n};\nTranslater.prototype.isDone = function isDone () {\n  return false\n};\nTranslater.prototype.isGeometryChanged = function isGeometryChanged () {\n  return true\n};\nTranslater.prototype.interfaces_ = function interfaces_ () {\n  return [CoordinateSequenceFilter]\n};\nTranslater.prototype.getClass = function getClass () {\n  return Translater\n};\n\nvar SnapOverlayOp = function SnapOverlayOp (g1, g2) {\n  this._geom = new Array(2).fill(null);\n  this._snapTolerance = null;\n  this._cbr = null;\n  this._geom[0] = g1;\n  this._geom[1] = g2;\n  this.computeSnapTolerance();\n};\nSnapOverlayOp.prototype.selfSnap = function selfSnap (geom) {\n  var snapper0 = new GeometrySnapper(geom);\n  var snapGeom = snapper0.snapTo(geom, this._snapTolerance);\n  return snapGeom\n};\nSnapOverlayOp.prototype.removeCommonBits = function removeCommonBits (geom) {\n  this._cbr = new CommonBitsRemover();\n  this._cbr.add(geom[0]);\n  this._cbr.add(geom[1]);\n  var remGeom = new Array(2).fill(null);\n  remGeom[0] = this._cbr.removeCommonBits(geom[0].copy());\n  remGeom[1] = this._cbr.removeCommonBits(geom[1].copy());\n  return remGeom\n};\nSnapOverlayOp.prototype.prepareResult = function prepareResult (geom) {\n  this._cbr.addCommonBits(geom);\n  return geom\n};\nSnapOverlayOp.prototype.getResultGeometry = function getResultGeometry (opCode) {\n  var prepGeom = this.snap(this._geom);\n  var result = OverlayOp.overlayOp(prepGeom[0], prepGeom[1], opCode);\n  return this.prepareResult(result)\n};\nSnapOverlayOp.prototype.checkValid = function checkValid (g) {\n  if (!g.isValid()) {\n    System.out.println('Snapped geometry is invalid');\n  }\n};\nSnapOverlayOp.prototype.computeSnapTolerance = function computeSnapTolerance () {\n  this._snapTolerance = GeometrySnapper.computeOverlaySnapTolerance(this._geom[0], this._geom[1]);\n};\nSnapOverlayOp.prototype.snap = function snap (geom) {\n  var remGeom = this.removeCommonBits(geom);\n  var snapGeom = GeometrySnapper.snap(remGeom[0], remGeom[1], this._snapTolerance);\n  return snapGeom\n};\nSnapOverlayOp.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nSnapOverlayOp.prototype.getClass = function getClass () {\n  return SnapOverlayOp\n};\nSnapOverlayOp.overlayOp = function overlayOp (g0, g1, opCode) {\n  var op = new SnapOverlayOp(g0, g1);\n  return op.getResultGeometry(opCode)\n};\nSnapOverlayOp.union = function union (g0, g1) {\n  return SnapOverlayOp.overlayOp(g0, g1, OverlayOp.UNION)\n};\nSnapOverlayOp.intersection = function intersection (g0, g1) {\n  return SnapOverlayOp.overlayOp(g0, g1, OverlayOp.INTERSECTION)\n};\nSnapOverlayOp.symDifference = function symDifference (g0, g1) {\n  return SnapOverlayOp.overlayOp(g0, g1, OverlayOp.SYMDIFFERENCE)\n};\nSnapOverlayOp.difference = function difference (g0, g1) {\n  return SnapOverlayOp.overlayOp(g0, g1, OverlayOp.DIFFERENCE)\n};\n\nvar SnapIfNeededOverlayOp = function SnapIfNeededOverlayOp (g1, g2) {\n  this._geom = new Array(2).fill(null);\n  this._geom[0] = g1;\n  this._geom[1] = g2;\n};\nSnapIfNeededOverlayOp.prototype.getResultGeometry = function getResultGeometry (opCode) {\n  var result = null;\n  var isSuccess = false;\n  var savedException = null;\n  try {\n    result = OverlayOp.overlayOp(this._geom[0], this._geom[1], opCode);\n    var isValid = true;\n    if (isValid) { isSuccess = true; }\n  } catch (ex) {\n    if (ex instanceof RuntimeException) {\n      savedException = ex;\n    } else { throw ex }\n  } finally {}\n  if (!isSuccess) {\n    try {\n      result = SnapOverlayOp.overlayOp(this._geom[0], this._geom[1], opCode);\n    } catch (ex) {\n      if (ex instanceof RuntimeException) {\n        throw savedException\n      } else { throw ex }\n    } finally {}\n  }\n  return result\n};\nSnapIfNeededOverlayOp.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nSnapIfNeededOverlayOp.prototype.getClass = function getClass () {\n  return SnapIfNeededOverlayOp\n};\nSnapIfNeededOverlayOp.overlayOp = function overlayOp (g0, g1, opCode) {\n  var op = new SnapIfNeededOverlayOp(g0, g1);\n  return op.getResultGeometry(opCode)\n};\nSnapIfNeededOverlayOp.union = function union (g0, g1) {\n  return SnapIfNeededOverlayOp.overlayOp(g0, g1, OverlayOp.UNION)\n};\nSnapIfNeededOverlayOp.intersection = function intersection (g0, g1) {\n  return SnapIfNeededOverlayOp.overlayOp(g0, g1, OverlayOp.INTERSECTION)\n};\nSnapIfNeededOverlayOp.symDifference = function symDifference (g0, g1) {\n  return SnapIfNeededOverlayOp.overlayOp(g0, g1, OverlayOp.SYMDIFFERENCE)\n};\nSnapIfNeededOverlayOp.difference = function difference (g0, g1) {\n  return SnapIfNeededOverlayOp.overlayOp(g0, g1, OverlayOp.DIFFERENCE)\n};\n\nvar MonotoneChain$2 = function MonotoneChain () {\n  this.mce = null;\n  this.chainIndex = null;\n  var mce = arguments[0];\n  var chainIndex = arguments[1];\n  this.mce = mce;\n  this.chainIndex = chainIndex;\n};\nMonotoneChain$2.prototype.computeIntersections = function computeIntersections (mc, si) {\n  this.mce.computeIntersectsForChain(this.chainIndex, mc.mce, mc.chainIndex, si);\n};\nMonotoneChain$2.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nMonotoneChain$2.prototype.getClass = function getClass () {\n  return MonotoneChain$2\n};\n\nvar SweepLineEvent = function SweepLineEvent () {\n  this._label = null;\n  this._xValue = null;\n  this._eventType = null;\n  this._insertEvent = null;\n  this._deleteEventIndex = null;\n  this._obj = null;\n  if (arguments.length === 2) {\n    var x = arguments[0];\n    var insertEvent = arguments[1];\n    this._eventType = SweepLineEvent.DELETE;\n    this._xValue = x;\n    this._insertEvent = insertEvent;\n  } else if (arguments.length === 3) {\n    var label = arguments[0];\n    var x$1 = arguments[1];\n    var obj = arguments[2];\n    this._eventType = SweepLineEvent.INSERT;\n    this._label = label;\n    this._xValue = x$1;\n    this._obj = obj;\n  }\n};\n\nvar staticAccessors$43 = { INSERT: { configurable: true },DELETE: { configurable: true } };\nSweepLineEvent.prototype.isDelete = function isDelete () {\n  return this._eventType === SweepLineEvent.DELETE\n};\nSweepLineEvent.prototype.setDeleteEventIndex = function setDeleteEventIndex (deleteEventIndex) {\n  this._deleteEventIndex = deleteEventIndex;\n};\nSweepLineEvent.prototype.getObject = function getObject () {\n  return this._obj\n};\nSweepLineEvent.prototype.compareTo = function compareTo (o) {\n  var pe = o;\n  if (this._xValue < pe._xValue) { return -1 }\n  if (this._xValue > pe._xValue) { return 1 }\n  if (this._eventType < pe._eventType) { return -1 }\n  if (this._eventType > pe._eventType) { return 1 }\n  return 0\n};\nSweepLineEvent.prototype.getInsertEvent = function getInsertEvent () {\n  return this._insertEvent\n};\nSweepLineEvent.prototype.isInsert = function isInsert () {\n  return this._eventType === SweepLineEvent.INSERT\n};\nSweepLineEvent.prototype.isSameLabel = function isSameLabel (ev) {\n  if (this._label === null) { return false }\n  return this._label === ev._label\n};\nSweepLineEvent.prototype.getDeleteEventIndex = function getDeleteEventIndex () {\n  return this._deleteEventIndex\n};\nSweepLineEvent.prototype.interfaces_ = function interfaces_ () {\n  return [Comparable]\n};\nSweepLineEvent.prototype.getClass = function getClass () {\n  return SweepLineEvent\n};\nstaticAccessors$43.INSERT.get = function () { return 1 };\nstaticAccessors$43.DELETE.get = function () { return 2 };\n\nObject.defineProperties( SweepLineEvent, staticAccessors$43 );\n\nvar EdgeSetIntersector = function EdgeSetIntersector () {};\n\nEdgeSetIntersector.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nEdgeSetIntersector.prototype.getClass = function getClass () {\n  return EdgeSetIntersector\n};\n\nvar SegmentIntersector$2 = function SegmentIntersector () {\n  this._hasIntersection = false;\n  this._hasProper = false;\n  this._hasProperInterior = false;\n  this._properIntersectionPoint = null;\n  this._li = null;\n  this._includeProper = null;\n  this._recordIsolated = null;\n  this._isSelfIntersection = null;\n  this._numIntersections = 0;\n  this.numTests = 0;\n  this._bdyNodes = null;\n  this._isDone = false;\n  this._isDoneWhenProperInt = false;\n  var li = arguments[0];\n  var includeProper = arguments[1];\n  var recordIsolated = arguments[2];\n  this._li = li;\n  this._includeProper = includeProper;\n  this._recordIsolated = recordIsolated;\n};\nSegmentIntersector$2.prototype.isTrivialIntersection = function isTrivialIntersection (e0, segIndex0, e1, segIndex1) {\n  if (e0 === e1) {\n    if (this._li.getIntersectionNum() === 1) {\n      if (SegmentIntersector$2.isAdjacentSegments(segIndex0, segIndex1)) { return true }\n      if (e0.isClosed()) {\n        var maxSegIndex = e0.getNumPoints() - 1;\n        if ((segIndex0 === 0 && segIndex1 === maxSegIndex) ||\n            (segIndex1 === 0 && segIndex0 === maxSegIndex)) {\n          return true\n        }\n      }\n    }\n  }\n  return false\n};\nSegmentIntersector$2.prototype.getProperIntersectionPoint = function getProperIntersectionPoint () {\n  return this._properIntersectionPoint\n};\nSegmentIntersector$2.prototype.setIsDoneIfProperInt = function setIsDoneIfProperInt (isDoneWhenProperInt) {\n  this._isDoneWhenProperInt = isDoneWhenProperInt;\n};\nSegmentIntersector$2.prototype.hasProperInteriorIntersection = function hasProperInteriorIntersection () {\n  return this._hasProperInterior\n};\nSegmentIntersector$2.prototype.isBoundaryPointInternal = function isBoundaryPointInternal (li, bdyNodes) {\n  for (var i = bdyNodes.iterator(); i.hasNext();) {\n    var node = i.next();\n    var pt = node.getCoordinate();\n    if (li.isIntersection(pt)) { return true }\n  }\n  return false\n};\nSegmentIntersector$2.prototype.hasProperIntersection = function hasProperIntersection () {\n  return this._hasProper\n};\nSegmentIntersector$2.prototype.hasIntersection = function hasIntersection () {\n  return this._hasIntersection\n};\nSegmentIntersector$2.prototype.isDone = function isDone () {\n  return this._isDone\n};\nSegmentIntersector$2.prototype.isBoundaryPoint = function isBoundaryPoint (li, bdyNodes) {\n  if (bdyNodes === null) { return false }\n  if (this.isBoundaryPointInternal(li, bdyNodes[0])) { return true }\n  if (this.isBoundaryPointInternal(li, bdyNodes[1])) { return true }\n  return false\n};\nSegmentIntersector$2.prototype.setBoundaryNodes = function setBoundaryNodes (bdyNodes0, bdyNodes1) {\n  this._bdyNodes = new Array(2).fill(null);\n  this._bdyNodes[0] = bdyNodes0;\n  this._bdyNodes[1] = bdyNodes1;\n};\nSegmentIntersector$2.prototype.addIntersections = function addIntersections (e0, segIndex0, e1, segIndex1) {\n  if (e0 === e1 && segIndex0 === segIndex1) { return null }\n  this.numTests++;\n  var p00 = e0.getCoordinates()[segIndex0];\n  var p01 = e0.getCoordinates()[segIndex0 + 1];\n  var p10 = e1.getCoordinates()[segIndex1];\n  var p11 = e1.getCoordinates()[segIndex1 + 1];\n  this._li.computeIntersection(p00, p01, p10, p11);\n  if (this._li.hasIntersection()) {\n    if (this._recordIsolated) {\n      e0.setIsolated(false);\n      e1.setIsolated(false);\n    }\n    this._numIntersections++;\n    if (!this.isTrivialIntersection(e0, segIndex0, e1, segIndex1)) {\n      this._hasIntersection = true;\n      if (this._includeProper || !this._li.isProper()) {\n        e0.addIntersections(this._li, segIndex0, 0);\n        e1.addIntersections(this._li, segIndex1, 1);\n      }\n      if (this._li.isProper()) {\n        this._properIntersectionPoint = this._li.getIntersection(0).copy();\n        this._hasProper = true;\n        if (this._isDoneWhenProperInt) {\n          this._isDone = true;\n        }\n        if (!this.isBoundaryPoint(this._li, this._bdyNodes)) { this._hasProperInterior = true; }\n      }\n    }\n  }\n};\nSegmentIntersector$2.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nSegmentIntersector$2.prototype.getClass = function getClass () {\n  return SegmentIntersector$2\n};\nSegmentIntersector$2.isAdjacentSegments = function isAdjacentSegments (i1, i2) {\n  return Math.abs(i1 - i2) === 1\n};\n\nvar SimpleMCSweepLineIntersector = (function (EdgeSetIntersector$$1) {\n  function SimpleMCSweepLineIntersector () {\n    EdgeSetIntersector$$1.call(this);\n    this.events = new ArrayList();\n    this.nOverlaps = null;\n  }\n\n  if ( EdgeSetIntersector$$1 ) SimpleMCSweepLineIntersector.__proto__ = EdgeSetIntersector$$1;\n  SimpleMCSweepLineIntersector.prototype = Object.create( EdgeSetIntersector$$1 && EdgeSetIntersector$$1.prototype );\n  SimpleMCSweepLineIntersector.prototype.constructor = SimpleMCSweepLineIntersector;\n  SimpleMCSweepLineIntersector.prototype.prepareEvents = function prepareEvents () {\n    var this$1 = this;\n\n    Collections.sort(this.events);\n    for (var i = 0; i < this.events.size(); i++) {\n      var ev = this$1.events.get(i);\n      if (ev.isDelete()) {\n        ev.getInsertEvent().setDeleteEventIndex(i);\n      }\n    }\n  };\n  SimpleMCSweepLineIntersector.prototype.computeIntersections = function computeIntersections () {\n    var this$1 = this;\n\n    if (arguments.length === 1) {\n      var si = arguments[0];\n      this.nOverlaps = 0;\n      this.prepareEvents();\n      for (var i = 0; i < this.events.size(); i++) {\n        var ev = this$1.events.get(i);\n        if (ev.isInsert()) {\n          this$1.processOverlaps(i, ev.getDeleteEventIndex(), ev, si);\n        }\n        if (si.isDone()) {\n          break\n        }\n      }\n    } else if (arguments.length === 3) {\n      if (arguments[2] instanceof SegmentIntersector$2 && (hasInterface(arguments[0], List) && hasInterface(arguments[1], List))) {\n        var edges0 = arguments[0];\n        var edges1 = arguments[1];\n        var si$1 = arguments[2];\n        this.addEdges(edges0, edges0);\n        this.addEdges(edges1, edges1);\n        this.computeIntersections(si$1);\n      } else if (typeof arguments[2] === 'boolean' && (hasInterface(arguments[0], List) && arguments[1] instanceof SegmentIntersector$2)) {\n        var edges = arguments[0];\n        var si$2 = arguments[1];\n        var testAllSegments = arguments[2];\n        if (testAllSegments) { this.addEdges(edges, null); } else { this.addEdges(edges); }\n        this.computeIntersections(si$2);\n      }\n    }\n  };\n  SimpleMCSweepLineIntersector.prototype.addEdge = function addEdge (edge, edgeSet) {\n    var this$1 = this;\n\n    var mce = edge.getMonotoneChainEdge();\n    var startIndex = mce.getStartIndexes();\n    for (var i = 0; i < startIndex.length - 1; i++) {\n      var mc = new MonotoneChain$2(mce, i);\n      var insertEvent = new SweepLineEvent(edgeSet, mce.getMinX(i), mc);\n      this$1.events.add(insertEvent);\n      this$1.events.add(new SweepLineEvent(mce.getMaxX(i), insertEvent));\n    }\n  };\n  SimpleMCSweepLineIntersector.prototype.processOverlaps = function processOverlaps (start, end, ev0, si) {\n    var this$1 = this;\n\n    var mc0 = ev0.getObject();\n    for (var i = start; i < end; i++) {\n      var ev1 = this$1.events.get(i);\n      if (ev1.isInsert()) {\n        var mc1 = ev1.getObject();\n        if (!ev0.isSameLabel(ev1)) {\n          mc0.computeIntersections(mc1, si);\n          this$1.nOverlaps++;\n        }\n      }\n    }\n  };\n  SimpleMCSweepLineIntersector.prototype.addEdges = function addEdges () {\n    var this$1 = this;\n\n    if (arguments.length === 1) {\n      var edges = arguments[0];\n      for (var i = edges.iterator(); i.hasNext();) {\n        var edge = i.next();\n        this$1.addEdge(edge, edge);\n      }\n    } else if (arguments.length === 2) {\n      var edges$1 = arguments[0];\n      var edgeSet = arguments[1];\n      for (var i$1 = edges$1.iterator(); i$1.hasNext();) {\n        var edge$1 = i$1.next();\n        this$1.addEdge(edge$1, edgeSet);\n      }\n    }\n  };\n  SimpleMCSweepLineIntersector.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  SimpleMCSweepLineIntersector.prototype.getClass = function getClass () {\n    return SimpleMCSweepLineIntersector\n  };\n\n  return SimpleMCSweepLineIntersector;\n}(EdgeSetIntersector));\n\nvar IntervalRTreeNode = function IntervalRTreeNode () {\n  this._min = Double.POSITIVE_INFINITY;\n  this._max = Double.NEGATIVE_INFINITY;\n};\n\nvar staticAccessors$45 = { NodeComparator: { configurable: true } };\nIntervalRTreeNode.prototype.getMin = function getMin () {\n  return this._min\n};\nIntervalRTreeNode.prototype.intersects = function intersects (queryMin, queryMax) {\n  if (this._min > queryMax || this._max < queryMin) { return false }\n  return true\n};\nIntervalRTreeNode.prototype.getMax = function getMax () {\n  return this._max\n};\nIntervalRTreeNode.prototype.toString = function toString () {\n  return WKTWriter.toLineString(new Coordinate(this._min, 0), new Coordinate(this._max, 0))\n};\nIntervalRTreeNode.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nIntervalRTreeNode.prototype.getClass = function getClass () {\n  return IntervalRTreeNode\n};\nstaticAccessors$45.NodeComparator.get = function () { return NodeComparator };\n\nObject.defineProperties( IntervalRTreeNode, staticAccessors$45 );\n\nvar NodeComparator = function NodeComparator () {};\n\nNodeComparator.prototype.compare = function compare (o1, o2) {\n  var n1 = o1;\n  var n2 = o2;\n  var mid1 = (n1._min + n1._max) / 2;\n  var mid2 = (n2._min + n2._max) / 2;\n  if (mid1 < mid2) { return -1 }\n  if (mid1 > mid2) { return 1 }\n  return 0\n};\nNodeComparator.prototype.interfaces_ = function interfaces_ () {\n  return [Comparator]\n};\nNodeComparator.prototype.getClass = function getClass () {\n  return NodeComparator\n};\n\nvar IntervalRTreeLeafNode = (function (IntervalRTreeNode$$1) {\n  function IntervalRTreeLeafNode () {\n    IntervalRTreeNode$$1.call(this);\n    this._item = null;\n    var min = arguments[0];\n    var max = arguments[1];\n    var item = arguments[2];\n    this._min = min;\n    this._max = max;\n    this._item = item;\n  }\n\n  if ( IntervalRTreeNode$$1 ) IntervalRTreeLeafNode.__proto__ = IntervalRTreeNode$$1;\n  IntervalRTreeLeafNode.prototype = Object.create( IntervalRTreeNode$$1 && IntervalRTreeNode$$1.prototype );\n  IntervalRTreeLeafNode.prototype.constructor = IntervalRTreeLeafNode;\n  IntervalRTreeLeafNode.prototype.query = function query (queryMin, queryMax, visitor) {\n    if (!this.intersects(queryMin, queryMax)) { return null }\n    visitor.visitItem(this._item);\n  };\n  IntervalRTreeLeafNode.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  IntervalRTreeLeafNode.prototype.getClass = function getClass () {\n    return IntervalRTreeLeafNode\n  };\n\n  return IntervalRTreeLeafNode;\n}(IntervalRTreeNode));\n\nvar IntervalRTreeBranchNode = (function (IntervalRTreeNode$$1) {\n  function IntervalRTreeBranchNode () {\n    IntervalRTreeNode$$1.call(this);\n    this._node1 = null;\n    this._node2 = null;\n    var n1 = arguments[0];\n    var n2 = arguments[1];\n    this._node1 = n1;\n    this._node2 = n2;\n    this.buildExtent(this._node1, this._node2);\n  }\n\n  if ( IntervalRTreeNode$$1 ) IntervalRTreeBranchNode.__proto__ = IntervalRTreeNode$$1;\n  IntervalRTreeBranchNode.prototype = Object.create( IntervalRTreeNode$$1 && IntervalRTreeNode$$1.prototype );\n  IntervalRTreeBranchNode.prototype.constructor = IntervalRTreeBranchNode;\n  IntervalRTreeBranchNode.prototype.buildExtent = function buildExtent (n1, n2) {\n    this._min = Math.min(n1._min, n2._min);\n    this._max = Math.max(n1._max, n2._max);\n  };\n  IntervalRTreeBranchNode.prototype.query = function query (queryMin, queryMax, visitor) {\n    if (!this.intersects(queryMin, queryMax)) {\n      return null\n    }\n    if (this._node1 !== null) { this._node1.query(queryMin, queryMax, visitor); }\n    if (this._node2 !== null) { this._node2.query(queryMin, queryMax, visitor); }\n  };\n  IntervalRTreeBranchNode.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  IntervalRTreeBranchNode.prototype.getClass = function getClass () {\n    return IntervalRTreeBranchNode\n  };\n\n  return IntervalRTreeBranchNode;\n}(IntervalRTreeNode));\n\nvar SortedPackedIntervalRTree = function SortedPackedIntervalRTree () {\n  this._leaves = new ArrayList();\n  this._root = null;\n  this._level = 0;\n};\nSortedPackedIntervalRTree.prototype.buildTree = function buildTree () {\n    var this$1 = this;\n\n  Collections.sort(this._leaves, new IntervalRTreeNode.NodeComparator());\n  var src = this._leaves;\n  var temp = null;\n  var dest = new ArrayList();\n  while (true) {\n    this$1.buildLevel(src, dest);\n    if (dest.size() === 1) { return dest.get(0) }\n    temp = src;\n    src = dest;\n    dest = temp;\n  }\n};\nSortedPackedIntervalRTree.prototype.insert = function insert (min, max, item) {\n  if (this._root !== null) { throw new Error('Index cannot be added to once it has been queried') }\n  this._leaves.add(new IntervalRTreeLeafNode(min, max, item));\n};\nSortedPackedIntervalRTree.prototype.query = function query (min, max, visitor) {\n  this.init();\n  this._root.query(min, max, visitor);\n};\nSortedPackedIntervalRTree.prototype.buildRoot = function buildRoot () {\n  if (this._root !== null) { return null }\n  this._root = this.buildTree();\n};\nSortedPackedIntervalRTree.prototype.printNode = function printNode (node) {\n  System.out.println(WKTWriter.toLineString(new Coordinate(node._min, this._level), new Coordinate(node._max, this._level)));\n};\nSortedPackedIntervalRTree.prototype.init = function init () {\n  if (this._root !== null) { return null }\n  this.buildRoot();\n};\nSortedPackedIntervalRTree.prototype.buildLevel = function buildLevel (src, dest) {\n  this._level++;\n  dest.clear();\n  for (var i = 0; i < src.size(); i += 2) {\n    var n1 = src.get(i);\n    var n2 = i + 1 < src.size() ? src.get(i) : null;\n    if (n2 === null) {\n      dest.add(n1);\n    } else {\n      var node = new IntervalRTreeBranchNode(src.get(i), src.get(i + 1));\n      dest.add(node);\n    }\n  }\n};\nSortedPackedIntervalRTree.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nSortedPackedIntervalRTree.prototype.getClass = function getClass () {\n  return SortedPackedIntervalRTree\n};\n\nvar ArrayListVisitor = function ArrayListVisitor () {\n  this._items = new ArrayList();\n};\nArrayListVisitor.prototype.visitItem = function visitItem (item) {\n  this._items.add(item);\n};\nArrayListVisitor.prototype.getItems = function getItems () {\n  return this._items\n};\nArrayListVisitor.prototype.interfaces_ = function interfaces_ () {\n  return [ItemVisitor]\n};\nArrayListVisitor.prototype.getClass = function getClass () {\n  return ArrayListVisitor\n};\n\nvar IndexedPointInAreaLocator = function IndexedPointInAreaLocator () {\n  this._index = null;\n  var g = arguments[0];\n  if (!hasInterface(g, Polygonal)) { throw new IllegalArgumentException('Argument must be Polygonal') }\n  this._index = new IntervalIndexedGeometry(g);\n};\n\nvar staticAccessors$44 = { SegmentVisitor: { configurable: true },IntervalIndexedGeometry: { configurable: true } };\nIndexedPointInAreaLocator.prototype.locate = function locate (p) {\n  var rcc = new RayCrossingCounter(p);\n  var visitor = new SegmentVisitor(rcc);\n  this._index.query(p.y, p.y, visitor);\n  return rcc.getLocation()\n};\nIndexedPointInAreaLocator.prototype.interfaces_ = function interfaces_ () {\n  return [PointOnGeometryLocator]\n};\nIndexedPointInAreaLocator.prototype.getClass = function getClass () {\n  return IndexedPointInAreaLocator\n};\nstaticAccessors$44.SegmentVisitor.get = function () { return SegmentVisitor };\nstaticAccessors$44.IntervalIndexedGeometry.get = function () { return IntervalIndexedGeometry };\n\nObject.defineProperties( IndexedPointInAreaLocator, staticAccessors$44 );\n\nvar SegmentVisitor = function SegmentVisitor () {\n  this._counter = null;\n  var counter = arguments[0];\n  this._counter = counter;\n};\nSegmentVisitor.prototype.visitItem = function visitItem (item) {\n  var seg = item;\n  this._counter.countSegment(seg.getCoordinate(0), seg.getCoordinate(1));\n};\nSegmentVisitor.prototype.interfaces_ = function interfaces_ () {\n  return [ItemVisitor]\n};\nSegmentVisitor.prototype.getClass = function getClass () {\n  return SegmentVisitor\n};\n\nvar IntervalIndexedGeometry = function IntervalIndexedGeometry () {\n  this._index = new SortedPackedIntervalRTree();\n  var geom = arguments[0];\n  this.init(geom);\n};\nIntervalIndexedGeometry.prototype.init = function init (geom) {\n    var this$1 = this;\n\n  var lines = LinearComponentExtracter.getLines(geom);\n  for (var i = lines.iterator(); i.hasNext();) {\n    var line = i.next();\n    var pts = line.getCoordinates();\n    this$1.addLine(pts);\n  }\n};\nIntervalIndexedGeometry.prototype.addLine = function addLine (pts) {\n    var this$1 = this;\n\n  for (var i = 1; i < pts.length; i++) {\n    var seg = new LineSegment(pts[i - 1], pts[i]);\n    var min = Math.min(seg.p0.y, seg.p1.y);\n    var max = Math.max(seg.p0.y, seg.p1.y);\n    this$1._index.insert(min, max, seg);\n  }\n};\nIntervalIndexedGeometry.prototype.query = function query () {\n  if (arguments.length === 2) {\n    var min = arguments[0];\n    var max = arguments[1];\n    var visitor = new ArrayListVisitor();\n    this._index.query(min, max, visitor);\n    return visitor.getItems()\n  } else if (arguments.length === 3) {\n    var min$1 = arguments[0];\n    var max$1 = arguments[1];\n    var visitor$1 = arguments[2];\n    this._index.query(min$1, max$1, visitor$1);\n  }\n};\nIntervalIndexedGeometry.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nIntervalIndexedGeometry.prototype.getClass = function getClass () {\n  return IntervalIndexedGeometry\n};\n\nvar GeometryGraph = (function (PlanarGraph$$1) {\n  function GeometryGraph () {\n    PlanarGraph$$1.call(this);\n    this._parentGeom = null;\n    this._lineEdgeMap = new HashMap();\n    this._boundaryNodeRule = null;\n    this._useBoundaryDeterminationRule = true;\n    this._argIndex = null;\n    this._boundaryNodes = null;\n    this._hasTooFewPoints = false;\n    this._invalidPoint = null;\n    this._areaPtLocator = null;\n    this._ptLocator = new PointLocator();\n    if (arguments.length === 2) {\n      var argIndex = arguments[0];\n      var parentGeom = arguments[1];\n      var boundaryNodeRule = BoundaryNodeRule.OGC_SFS_BOUNDARY_RULE;\n      this._argIndex = argIndex;\n      this._parentGeom = parentGeom;\n      this._boundaryNodeRule = boundaryNodeRule;\n      if (parentGeom !== null) {\n        this.add(parentGeom);\n      }\n    } else if (arguments.length === 3) {\n      var argIndex$1 = arguments[0];\n      var parentGeom$1 = arguments[1];\n      var boundaryNodeRule$1 = arguments[2];\n      this._argIndex = argIndex$1;\n      this._parentGeom = parentGeom$1;\n      this._boundaryNodeRule = boundaryNodeRule$1;\n      if (parentGeom$1 !== null) {\n        this.add(parentGeom$1);\n      }\n    }\n  }\n\n  if ( PlanarGraph$$1 ) GeometryGraph.__proto__ = PlanarGraph$$1;\n  GeometryGraph.prototype = Object.create( PlanarGraph$$1 && PlanarGraph$$1.prototype );\n  GeometryGraph.prototype.constructor = GeometryGraph;\n  GeometryGraph.prototype.insertBoundaryPoint = function insertBoundaryPoint (argIndex, coord) {\n    var n = this._nodes.addNode(coord);\n    var lbl = n.getLabel();\n    var boundaryCount = 1;\n    var loc = Location.NONE;\n    loc = lbl.getLocation(argIndex, Position.ON);\n    if (loc === Location.BOUNDARY) { boundaryCount++; }\n    var newLoc = GeometryGraph.determineBoundary(this._boundaryNodeRule, boundaryCount);\n    lbl.setLocation(argIndex, newLoc);\n  };\n  GeometryGraph.prototype.computeSelfNodes = function computeSelfNodes () {\n    if (arguments.length === 2) {\n      var li = arguments[0];\n      var computeRingSelfNodes = arguments[1];\n      return this.computeSelfNodes(li, computeRingSelfNodes, false)\n    } else if (arguments.length === 3) {\n      var li$1 = arguments[0];\n      var computeRingSelfNodes$1 = arguments[1];\n      var isDoneIfProperInt = arguments[2];\n      var si = new SegmentIntersector$2(li$1, true, false);\n      si.setIsDoneIfProperInt(isDoneIfProperInt);\n      var esi = this.createEdgeSetIntersector();\n      var isRings = this._parentGeom instanceof LinearRing || this._parentGeom instanceof Polygon || this._parentGeom instanceof MultiPolygon;\n      var computeAllSegments = computeRingSelfNodes$1 || !isRings;\n      esi.computeIntersections(this._edges, si, computeAllSegments);\n      this.addSelfIntersectionNodes(this._argIndex);\n      return si\n    }\n  };\n  GeometryGraph.prototype.computeSplitEdges = function computeSplitEdges (edgelist) {\n    for (var i = this._edges.iterator(); i.hasNext();) {\n      var e = i.next();\n      e.eiList.addSplitEdges(edgelist);\n    }\n  };\n  GeometryGraph.prototype.computeEdgeIntersections = function computeEdgeIntersections (g, li, includeProper) {\n    var si = new SegmentIntersector$2(li, includeProper, true);\n    si.setBoundaryNodes(this.getBoundaryNodes(), g.getBoundaryNodes());\n    var esi = this.createEdgeSetIntersector();\n    esi.computeIntersections(this._edges, g._edges, si);\n    return si\n  };\n  GeometryGraph.prototype.getGeometry = function getGeometry () {\n    return this._parentGeom\n  };\n  GeometryGraph.prototype.getBoundaryNodeRule = function getBoundaryNodeRule () {\n    return this._boundaryNodeRule\n  };\n  GeometryGraph.prototype.hasTooFewPoints = function hasTooFewPoints () {\n    return this._hasTooFewPoints\n  };\n  GeometryGraph.prototype.addPoint = function addPoint () {\n    if (arguments[0] instanceof Point) {\n      var p = arguments[0];\n      var coord = p.getCoordinate();\n      this.insertPoint(this._argIndex, coord, Location.INTERIOR);\n    } else if (arguments[0] instanceof Coordinate) {\n      var pt = arguments[0];\n      this.insertPoint(this._argIndex, pt, Location.INTERIOR);\n    }\n  };\n  GeometryGraph.prototype.addPolygon = function addPolygon (p) {\n    var this$1 = this;\n\n    this.addPolygonRing(p.getExteriorRing(), Location.EXTERIOR, Location.INTERIOR);\n    for (var i = 0; i < p.getNumInteriorRing(); i++) {\n      var hole = p.getInteriorRingN(i);\n      this$1.addPolygonRing(hole, Location.INTERIOR, Location.EXTERIOR);\n    }\n  };\n  GeometryGraph.prototype.addEdge = function addEdge (e) {\n    this.insertEdge(e);\n    var coord = e.getCoordinates();\n    this.insertPoint(this._argIndex, coord[0], Location.BOUNDARY);\n    this.insertPoint(this._argIndex, coord[coord.length - 1], Location.BOUNDARY);\n  };\n  GeometryGraph.prototype.addLineString = function addLineString (line) {\n    var coord = CoordinateArrays.removeRepeatedPoints(line.getCoordinates());\n    if (coord.length < 2) {\n      this._hasTooFewPoints = true;\n      this._invalidPoint = coord[0];\n      return null\n    }\n    var e = new Edge(coord, new Label(this._argIndex, Location.INTERIOR));\n    this._lineEdgeMap.put(line, e);\n    this.insertEdge(e);\n    Assert.isTrue(coord.length >= 2, 'found LineString with single point');\n    this.insertBoundaryPoint(this._argIndex, coord[0]);\n    this.insertBoundaryPoint(this._argIndex, coord[coord.length - 1]);\n  };\n  GeometryGraph.prototype.getInvalidPoint = function getInvalidPoint () {\n    return this._invalidPoint\n  };\n  GeometryGraph.prototype.getBoundaryPoints = function getBoundaryPoints () {\n    var coll = this.getBoundaryNodes();\n    var pts = new Array(coll.size()).fill(null);\n    var i = 0;\n    for (var it = coll.iterator(); it.hasNext();) {\n      var node = it.next();\n      pts[i++] = node.getCoordinate().copy();\n    }\n    return pts\n  };\n  GeometryGraph.prototype.getBoundaryNodes = function getBoundaryNodes () {\n    if (this._boundaryNodes === null) { this._boundaryNodes = this._nodes.getBoundaryNodes(this._argIndex); }\n    return this._boundaryNodes\n  };\n  GeometryGraph.prototype.addSelfIntersectionNode = function addSelfIntersectionNode (argIndex, coord, loc) {\n    if (this.isBoundaryNode(argIndex, coord)) { return null }\n    if (loc === Location.BOUNDARY && this._useBoundaryDeterminationRule) { this.insertBoundaryPoint(argIndex, coord); } else { this.insertPoint(argIndex, coord, loc); }\n  };\n  GeometryGraph.prototype.addPolygonRing = function addPolygonRing (lr, cwLeft, cwRight) {\n    if (lr.isEmpty()) { return null }\n    var coord = CoordinateArrays.removeRepeatedPoints(lr.getCoordinates());\n    if (coord.length < 4) {\n      this._hasTooFewPoints = true;\n      this._invalidPoint = coord[0];\n      return null\n    }\n    var left = cwLeft;\n    var right = cwRight;\n    if (CGAlgorithms.isCCW(coord)) {\n      left = cwRight;\n      right = cwLeft;\n    }\n    var e = new Edge(coord, new Label(this._argIndex, Location.BOUNDARY, left, right));\n    this._lineEdgeMap.put(lr, e);\n    this.insertEdge(e);\n    this.insertPoint(this._argIndex, coord[0], Location.BOUNDARY);\n  };\n  GeometryGraph.prototype.insertPoint = function insertPoint (argIndex, coord, onLocation) {\n    var n = this._nodes.addNode(coord);\n    var lbl = n.getLabel();\n    if (lbl === null) {\n      n._label = new Label(argIndex, onLocation);\n    } else { lbl.setLocation(argIndex, onLocation); }\n  };\n  GeometryGraph.prototype.createEdgeSetIntersector = function createEdgeSetIntersector () {\n    return new SimpleMCSweepLineIntersector()\n  };\n  GeometryGraph.prototype.addSelfIntersectionNodes = function addSelfIntersectionNodes (argIndex) {\n    var this$1 = this;\n\n    for (var i = this._edges.iterator(); i.hasNext();) {\n      var e = i.next();\n      var eLoc = e.getLabel().getLocation(argIndex);\n      for (var eiIt = e.eiList.iterator(); eiIt.hasNext();) {\n        var ei = eiIt.next();\n        this$1.addSelfIntersectionNode(argIndex, ei.coord, eLoc);\n      }\n    }\n  };\n  GeometryGraph.prototype.add = function add () {\n    if (arguments.length === 1) {\n      var g = arguments[0];\n      if (g.isEmpty()) { return null }\n      if (g instanceof MultiPolygon) { this._useBoundaryDeterminationRule = false; }\n      if (g instanceof Polygon) { this.addPolygon(g); }\n      else if (g instanceof LineString) { this.addLineString(g); }\n      else if (g instanceof Point) { this.addPoint(g); }\n      else if (g instanceof MultiPoint) { this.addCollection(g); }\n      else if (g instanceof MultiLineString) { this.addCollection(g); }\n      else if (g instanceof MultiPolygon) { this.addCollection(g); }\n      else if (g instanceof GeometryCollection) { this.addCollection(g); }\n      else { throw new Error(g.getClass().getName()) }\n    } else { return PlanarGraph$$1.prototype.add.apply(this, arguments) }\n  };\n  GeometryGraph.prototype.addCollection = function addCollection (gc) {\n    var this$1 = this;\n\n    for (var i = 0; i < gc.getNumGeometries(); i++) {\n      var g = gc.getGeometryN(i);\n      this$1.add(g);\n    }\n  };\n  GeometryGraph.prototype.locate = function locate (pt) {\n    if (hasInterface(this._parentGeom, Polygonal) && this._parentGeom.getNumGeometries() > 50) {\n      if (this._areaPtLocator === null) {\n        this._areaPtLocator = new IndexedPointInAreaLocator(this._parentGeom);\n      }\n      return this._areaPtLocator.locate(pt)\n    }\n    return this._ptLocator.locate(pt, this._parentGeom)\n  };\n  GeometryGraph.prototype.findEdge = function findEdge () {\n    if (arguments.length === 1) {\n      var line = arguments[0];\n      return this._lineEdgeMap.get(line)\n    } else { return PlanarGraph$$1.prototype.findEdge.apply(this, arguments) }\n  };\n  GeometryGraph.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  GeometryGraph.prototype.getClass = function getClass () {\n    return GeometryGraph\n  };\n  GeometryGraph.determineBoundary = function determineBoundary (boundaryNodeRule, boundaryCount) {\n    return boundaryNodeRule.isInBoundary(boundaryCount) ? Location.BOUNDARY : Location.INTERIOR\n  };\n\n  return GeometryGraph;\n}(PlanarGraph));\n\nvar GeometryGraphOp = function GeometryGraphOp () {\n  this._li = new RobustLineIntersector();\n  this._resultPrecisionModel = null;\n  this._arg = null;\n  if (arguments.length === 1) {\n    var g0 = arguments[0];\n    this.setComputationPrecision(g0.getPrecisionModel());\n    this._arg = new Array(1).fill(null);\n    this._arg[0] = new GeometryGraph(0, g0);\n  } else if (arguments.length === 2) {\n    var g0$1 = arguments[0];\n    var g1 = arguments[1];\n    var boundaryNodeRule = BoundaryNodeRule.OGC_SFS_BOUNDARY_RULE;\n    if (g0$1.getPrecisionModel().compareTo(g1.getPrecisionModel()) >= 0) { this.setComputationPrecision(g0$1.getPrecisionModel()); } else { this.setComputationPrecision(g1.getPrecisionModel()); }\n    this._arg = new Array(2).fill(null);\n    this._arg[0] = new GeometryGraph(0, g0$1, boundaryNodeRule);\n    this._arg[1] = new GeometryGraph(1, g1, boundaryNodeRule);\n  } else if (arguments.length === 3) {\n    var g0$2 = arguments[0];\n    var g1$1 = arguments[1];\n    var boundaryNodeRule$1 = arguments[2];\n    if (g0$2.getPrecisionModel().compareTo(g1$1.getPrecisionModel()) >= 0) { this.setComputationPrecision(g0$2.getPrecisionModel()); } else { this.setComputationPrecision(g1$1.getPrecisionModel()); }\n    this._arg = new Array(2).fill(null);\n    this._arg[0] = new GeometryGraph(0, g0$2, boundaryNodeRule$1);\n    this._arg[1] = new GeometryGraph(1, g1$1, boundaryNodeRule$1);\n  }\n};\nGeometryGraphOp.prototype.getArgGeometry = function getArgGeometry (i) {\n  return this._arg[i].getGeometry()\n};\nGeometryGraphOp.prototype.setComputationPrecision = function setComputationPrecision (pm) {\n  this._resultPrecisionModel = pm;\n  this._li.setPrecisionModel(this._resultPrecisionModel);\n};\nGeometryGraphOp.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nGeometryGraphOp.prototype.getClass = function getClass () {\n  return GeometryGraphOp\n};\n\n// operation.geometrygraph\n\nvar GeometryMapper = function GeometryMapper () {};\n\nGeometryMapper.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nGeometryMapper.prototype.getClass = function getClass () {\n  return GeometryMapper\n};\nGeometryMapper.map = function map () {\n  if (arguments[0] instanceof Geometry && hasInterface(arguments[1], GeometryMapper.MapOp)) {\n    var geom = arguments[0];\n    var op = arguments[1];\n    var mapped = new ArrayList();\n    for (var i = 0; i < geom.getNumGeometries(); i++) {\n      var g = op.map(geom.getGeometryN(i));\n      if (g !== null) { mapped.add(g); }\n    }\n    return geom.getFactory().buildGeometry(mapped)\n  } else if (hasInterface(arguments[0], Collection) && hasInterface(arguments[1], GeometryMapper.MapOp)) {\n    var geoms = arguments[0];\n    var op$1 = arguments[1];\n    var mapped$1 = new ArrayList();\n    for (var i$1 = geoms.iterator(); i$1.hasNext();) {\n      var g$1 = i$1.next();\n      var gr = op$1.map(g$1);\n      if (gr !== null) { mapped$1.add(gr); }\n    }\n    return mapped$1\n  }\n};\nGeometryMapper.MapOp = function MapOp () {};\n\nvar OverlayOp = (function (GeometryGraphOp) {\n  function OverlayOp () {\n    var g0 = arguments[0];\n    var g1 = arguments[1];\n    GeometryGraphOp.call(this, g0, g1);\n    this._ptLocator = new PointLocator();\n    this._geomFact = null;\n    this._resultGeom = null;\n    this._graph = null;\n    this._edgeList = new EdgeList();\n    this._resultPolyList = new ArrayList();\n    this._resultLineList = new ArrayList();\n    this._resultPointList = new ArrayList();\n    this._graph = new PlanarGraph(new OverlayNodeFactory());\n    this._geomFact = g0.getFactory();\n  }\n\n  if ( GeometryGraphOp ) OverlayOp.__proto__ = GeometryGraphOp;\n  OverlayOp.prototype = Object.create( GeometryGraphOp && GeometryGraphOp.prototype );\n  OverlayOp.prototype.constructor = OverlayOp;\n  OverlayOp.prototype.insertUniqueEdge = function insertUniqueEdge (e) {\n    var existingEdge = this._edgeList.findEqualEdge(e);\n    if (existingEdge !== null) {\n      var existingLabel = existingEdge.getLabel();\n      var labelToMerge = e.getLabel();\n      if (!existingEdge.isPointwiseEqual(e)) {\n        labelToMerge = new Label(e.getLabel());\n        labelToMerge.flip();\n      }\n      var depth = existingEdge.getDepth();\n      if (depth.isNull()) {\n        depth.add(existingLabel);\n      }\n      depth.add(labelToMerge);\n      existingLabel.merge(labelToMerge);\n    } else {\n      this._edgeList.add(e);\n    }\n  };\n  OverlayOp.prototype.getGraph = function getGraph () {\n    return this._graph\n  };\n  OverlayOp.prototype.cancelDuplicateResultEdges = function cancelDuplicateResultEdges () {\n    for (var it = this._graph.getEdgeEnds().iterator(); it.hasNext();) {\n      var de = it.next();\n      var sym = de.getSym();\n      if (de.isInResult() && sym.isInResult()) {\n        de.setInResult(false);\n        sym.setInResult(false);\n      }\n    }\n  };\n  OverlayOp.prototype.isCoveredByLA = function isCoveredByLA (coord) {\n    if (this.isCovered(coord, this._resultLineList)) { return true }\n    if (this.isCovered(coord, this._resultPolyList)) { return true }\n    return false\n  };\n  OverlayOp.prototype.computeGeometry = function computeGeometry (resultPointList, resultLineList, resultPolyList, opcode) {\n    var geomList = new ArrayList();\n    geomList.addAll(resultPointList);\n    geomList.addAll(resultLineList);\n    geomList.addAll(resultPolyList);\n    if (geomList.isEmpty()) { return OverlayOp.createEmptyResult(opcode, this._arg[0].getGeometry(), this._arg[1].getGeometry(), this._geomFact) }\n    return this._geomFact.buildGeometry(geomList)\n  };\n  OverlayOp.prototype.mergeSymLabels = function mergeSymLabels () {\n    for (var nodeit = this._graph.getNodes().iterator(); nodeit.hasNext();) {\n      var node = nodeit.next();\n      node.getEdges().mergeSymLabels();\n    }\n  };\n  OverlayOp.prototype.isCovered = function isCovered (coord, geomList) {\n    var this$1 = this;\n\n    for (var it = geomList.iterator(); it.hasNext();) {\n      var geom = it.next();\n      var loc = this$1._ptLocator.locate(coord, geom);\n      if (loc !== Location.EXTERIOR) { return true }\n    }\n    return false\n  };\n  OverlayOp.prototype.replaceCollapsedEdges = function replaceCollapsedEdges () {\n    var newEdges = new ArrayList();\n    for (var it = this._edgeList.iterator(); it.hasNext();) {\n      var e = it.next();\n      if (e.isCollapsed()) {\n        it.remove();\n        newEdges.add(e.getCollapsedEdge());\n      }\n    }\n    this._edgeList.addAll(newEdges);\n  };\n  OverlayOp.prototype.updateNodeLabelling = function updateNodeLabelling () {\n    for (var nodeit = this._graph.getNodes().iterator(); nodeit.hasNext();) {\n      var node = nodeit.next();\n      var lbl = node.getEdges().getLabel();\n      node.getLabel().merge(lbl);\n    }\n  };\n  OverlayOp.prototype.getResultGeometry = function getResultGeometry (overlayOpCode) {\n    this.computeOverlay(overlayOpCode);\n    return this._resultGeom\n  };\n  OverlayOp.prototype.insertUniqueEdges = function insertUniqueEdges (edges) {\n    var this$1 = this;\n\n    for (var i = edges.iterator(); i.hasNext();) {\n      var e = i.next();\n      this$1.insertUniqueEdge(e);\n    }\n  };\n  OverlayOp.prototype.computeOverlay = function computeOverlay (opCode) {\n    this.copyPoints(0);\n    this.copyPoints(1);\n    this._arg[0].computeSelfNodes(this._li, false);\n    this._arg[1].computeSelfNodes(this._li, false);\n    this._arg[0].computeEdgeIntersections(this._arg[1], this._li, true);\n    var baseSplitEdges = new ArrayList();\n    this._arg[0].computeSplitEdges(baseSplitEdges);\n    this._arg[1].computeSplitEdges(baseSplitEdges);\n    // const splitEdges = baseSplitEdges\n    this.insertUniqueEdges(baseSplitEdges);\n    this.computeLabelsFromDepths();\n    this.replaceCollapsedEdges();\n    EdgeNodingValidator.checkValid(this._edgeList.getEdges());\n    this._graph.addEdges(this._edgeList.getEdges());\n    this.computeLabelling();\n    this.labelIncompleteNodes();\n    this.findResultAreaEdges(opCode);\n    this.cancelDuplicateResultEdges();\n    var polyBuilder = new PolygonBuilder(this._geomFact);\n    polyBuilder.add(this._graph);\n    this._resultPolyList = polyBuilder.getPolygons();\n    var lineBuilder = new LineBuilder(this, this._geomFact, this._ptLocator);\n    this._resultLineList = lineBuilder.build(opCode);\n    var pointBuilder = new PointBuilder(this, this._geomFact, this._ptLocator);\n    this._resultPointList = pointBuilder.build(opCode);\n    this._resultGeom = this.computeGeometry(this._resultPointList, this._resultLineList, this._resultPolyList, opCode);\n  };\n  OverlayOp.prototype.labelIncompleteNode = function labelIncompleteNode (n, targetIndex) {\n    var loc = this._ptLocator.locate(n.getCoordinate(), this._arg[targetIndex].getGeometry());\n    n.getLabel().setLocation(targetIndex, loc);\n  };\n  OverlayOp.prototype.copyPoints = function copyPoints (argIndex) {\n    var this$1 = this;\n\n    for (var i = this._arg[argIndex].getNodeIterator(); i.hasNext();) {\n      var graphNode = i.next();\n      var newNode = this$1._graph.addNode(graphNode.getCoordinate());\n      newNode.setLabel(argIndex, graphNode.getLabel().getLocation(argIndex));\n    }\n  };\n  OverlayOp.prototype.findResultAreaEdges = function findResultAreaEdges (opCode) {\n    for (var it = this._graph.getEdgeEnds().iterator(); it.hasNext();) {\n      var de = it.next();\n      var label = de.getLabel();\n      if (label.isArea() && !de.isInteriorAreaEdge() && OverlayOp.isResultOfOp(label.getLocation(0, Position.RIGHT), label.getLocation(1, Position.RIGHT), opCode)) {\n        de.setInResult(true);\n      }\n    }\n  };\n  OverlayOp.prototype.computeLabelsFromDepths = function computeLabelsFromDepths () {\n    for (var it = this._edgeList.iterator(); it.hasNext();) {\n      var e = it.next();\n      var lbl = e.getLabel();\n      var depth = e.getDepth();\n      if (!depth.isNull()) {\n        depth.normalize();\n        for (var i = 0; i < 2; i++) {\n          if (!lbl.isNull(i) && lbl.isArea() && !depth.isNull(i)) {\n            if (depth.getDelta(i) === 0) {\n              lbl.toLine(i);\n            } else {\n              Assert.isTrue(!depth.isNull(i, Position.LEFT), 'depth of LEFT side has not been initialized');\n              lbl.setLocation(i, Position.LEFT, depth.getLocation(i, Position.LEFT));\n              Assert.isTrue(!depth.isNull(i, Position.RIGHT), 'depth of RIGHT side has not been initialized');\n              lbl.setLocation(i, Position.RIGHT, depth.getLocation(i, Position.RIGHT));\n            }\n          }\n        }\n      }\n    }\n  };\n  OverlayOp.prototype.computeLabelling = function computeLabelling () {\n    var this$1 = this;\n\n    for (var nodeit = this._graph.getNodes().iterator(); nodeit.hasNext();) {\n      var node = nodeit.next();\n      node.getEdges().computeLabelling(this$1._arg);\n    }\n    this.mergeSymLabels();\n    this.updateNodeLabelling();\n  };\n  OverlayOp.prototype.labelIncompleteNodes = function labelIncompleteNodes () {\n    var this$1 = this;\n\n    // let nodeCount = 0\n    for (var ni = this._graph.getNodes().iterator(); ni.hasNext();) {\n      var n = ni.next();\n      var label = n.getLabel();\n      if (n.isIsolated()) {\n        // nodeCount++\n        if (label.isNull(0)) { this$1.labelIncompleteNode(n, 0); } else { this$1.labelIncompleteNode(n, 1); }\n      }\n      n.getEdges().updateLabelling(label);\n    }\n  };\n  OverlayOp.prototype.isCoveredByA = function isCoveredByA (coord) {\n    if (this.isCovered(coord, this._resultPolyList)) { return true }\n    return false\n  };\n  OverlayOp.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  OverlayOp.prototype.getClass = function getClass () {\n    return OverlayOp\n  };\n\n  return OverlayOp;\n}(GeometryGraphOp));\n\nOverlayOp.overlayOp = function (geom0, geom1, opCode) {\n  var gov = new OverlayOp(geom0, geom1);\n  var geomOv = gov.getResultGeometry(opCode);\n  return geomOv\n};\nOverlayOp.intersection = function (g, other) {\n  if (g.isEmpty() || other.isEmpty()) { return OverlayOp.createEmptyResult(OverlayOp.INTERSECTION, g, other, g.getFactory()) }\n  if (g.isGeometryCollection()) {\n    var g2 = other;\n    return GeometryCollectionMapper.map(g, {\n      interfaces_: function () {\n        return [GeometryMapper.MapOp]\n      },\n      map: function (g) {\n        return g.intersection(g2)\n      }\n    })\n  }\n  g.checkNotGeometryCollection(g);\n  g.checkNotGeometryCollection(other);\n  return SnapIfNeededOverlayOp.overlayOp(g, other, OverlayOp.INTERSECTION)\n};\nOverlayOp.symDifference = function (g, other) {\n  if (g.isEmpty() || other.isEmpty()) {\n    if (g.isEmpty() && other.isEmpty()) { return OverlayOp.createEmptyResult(OverlayOp.SYMDIFFERENCE, g, other, g.getFactory()) }\n    if (g.isEmpty()) { return other.copy() }\n    if (other.isEmpty()) { return g.copy() }\n  }\n  g.checkNotGeometryCollection(g);\n  g.checkNotGeometryCollection(other);\n  return SnapIfNeededOverlayOp.overlayOp(g, other, OverlayOp.SYMDIFFERENCE)\n};\nOverlayOp.resultDimension = function (opCode, g0, g1) {\n  var dim0 = g0.getDimension();\n  var dim1 = g1.getDimension();\n  var resultDimension = -1;\n  switch (opCode) {\n    case OverlayOp.INTERSECTION:\n      resultDimension = Math.min(dim0, dim1);\n      break\n    case OverlayOp.UNION:\n      resultDimension = Math.max(dim0, dim1);\n      break\n    case OverlayOp.DIFFERENCE:\n      resultDimension = dim0;\n      break\n    case OverlayOp.SYMDIFFERENCE:\n      resultDimension = Math.max(dim0, dim1);\n      break\n    default:\n  }\n  return resultDimension\n};\nOverlayOp.createEmptyResult = function (overlayOpCode, a, b, geomFact) {\n  var result = null;\n  switch (OverlayOp.resultDimension(overlayOpCode, a, b)) {\n    case -1:\n      result = geomFact.createGeometryCollection(new Array(0).fill(null));\n      break\n    case 0:\n      result = geomFact.createPoint();\n      break\n    case 1:\n      result = geomFact.createLineString();\n      break\n    case 2:\n      result = geomFact.createPolygon();\n      break\n    default:\n  }\n  return result\n};\nOverlayOp.difference = function (g, other) {\n  if (g.isEmpty()) { return OverlayOp.createEmptyResult(OverlayOp.DIFFERENCE, g, other, g.getFactory()) }\n  if (other.isEmpty()) { return g.copy() }\n  g.checkNotGeometryCollection(g);\n  g.checkNotGeometryCollection(other);\n  return SnapIfNeededOverlayOp.overlayOp(g, other, OverlayOp.DIFFERENCE)\n};\nOverlayOp.isResultOfOp = function () {\n  if (arguments.length === 2) {\n    var label = arguments[0];\n    var opCode = arguments[1];\n    var loc0 = label.getLocation(0);\n    var loc1 = label.getLocation(1);\n    return OverlayOp.isResultOfOp(loc0, loc1, opCode)\n  } else if (arguments.length === 3) {\n    var loc0$1 = arguments[0];\n    var loc1$1 = arguments[1];\n    var overlayOpCode = arguments[2];\n    if (loc0$1 === Location.BOUNDARY) { loc0$1 = Location.INTERIOR; }\n    if (loc1$1 === Location.BOUNDARY) { loc1$1 = Location.INTERIOR; }\n    switch (overlayOpCode) {\n      case OverlayOp.INTERSECTION:\n        return loc0$1 === Location.INTERIOR && loc1$1 === Location.INTERIOR\n      case OverlayOp.UNION:\n        return loc0$1 === Location.INTERIOR || loc1$1 === Location.INTERIOR\n      case OverlayOp.DIFFERENCE:\n        return loc0$1 === Location.INTERIOR && loc1$1 !== Location.INTERIOR\n      case OverlayOp.SYMDIFFERENCE:\n        return (loc0$1 === Location.INTERIOR && loc1$1 !== Location.INTERIOR) || (loc0$1 !== Location.INTERIOR && loc1$1 === Location.INTERIOR)\n      default:\n    }\n    return false\n  }\n};\nOverlayOp.INTERSECTION = 1;\nOverlayOp.UNION = 2;\nOverlayOp.DIFFERENCE = 3;\nOverlayOp.SYMDIFFERENCE = 4;\n\nvar FuzzyPointLocator = function FuzzyPointLocator () {\n  this._g = null;\n  this._boundaryDistanceTolerance = null;\n  this._linework = null;\n  this._ptLocator = new PointLocator();\n  this._seg = new LineSegment();\n  var g = arguments[0];\n  var boundaryDistanceTolerance = arguments[1];\n  this._g = g;\n  this._boundaryDistanceTolerance = boundaryDistanceTolerance;\n  this._linework = this.extractLinework(g);\n};\nFuzzyPointLocator.prototype.isWithinToleranceOfBoundary = function isWithinToleranceOfBoundary (pt) {\n    var this$1 = this;\n\n  for (var i = 0; i < this._linework.getNumGeometries(); i++) {\n    var line = this$1._linework.getGeometryN(i);\n    var seq = line.getCoordinateSequence();\n    for (var j = 0; j < seq.size() - 1; j++) {\n      seq.getCoordinate(j, this$1._seg.p0);\n      seq.getCoordinate(j + 1, this$1._seg.p1);\n      var dist = this$1._seg.distance(pt);\n      if (dist <= this$1._boundaryDistanceTolerance) { return true }\n    }\n  }\n  return false\n};\nFuzzyPointLocator.prototype.getLocation = function getLocation (pt) {\n  if (this.isWithinToleranceOfBoundary(pt)) { return Location.BOUNDARY }\n  return this._ptLocator.locate(pt, this._g)\n};\nFuzzyPointLocator.prototype.extractLinework = function extractLinework (g) {\n  var extracter = new PolygonalLineworkExtracter();\n  g.apply(extracter);\n  var linework = extracter.getLinework();\n  var lines = GeometryFactory.toLineStringArray(linework);\n  return g.getFactory().createMultiLineString(lines)\n};\nFuzzyPointLocator.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nFuzzyPointLocator.prototype.getClass = function getClass () {\n  return FuzzyPointLocator\n};\n\nvar PolygonalLineworkExtracter = function PolygonalLineworkExtracter () {\n  this._linework = null;\n  this._linework = new ArrayList();\n};\nPolygonalLineworkExtracter.prototype.getLinework = function getLinework () {\n  return this._linework\n};\nPolygonalLineworkExtracter.prototype.filter = function filter (g) {\n    var this$1 = this;\n\n  if (g instanceof Polygon) {\n    var poly = g;\n    this._linework.add(poly.getExteriorRing());\n    for (var i = 0; i < poly.getNumInteriorRing(); i++) {\n      this$1._linework.add(poly.getInteriorRingN(i));\n    }\n  }\n};\nPolygonalLineworkExtracter.prototype.interfaces_ = function interfaces_ () {\n  return [GeometryFilter]\n};\nPolygonalLineworkExtracter.prototype.getClass = function getClass () {\n  return PolygonalLineworkExtracter\n};\n\nvar OffsetPointGenerator = function OffsetPointGenerator () {\n  this._g = null;\n  this._doLeft = true;\n  this._doRight = true;\n  var g = arguments[0];\n  this._g = g;\n};\nOffsetPointGenerator.prototype.extractPoints = function extractPoints (line, offsetDistance, offsetPts) {\n    var this$1 = this;\n\n  var pts = line.getCoordinates();\n  for (var i = 0; i < pts.length - 1; i++) {\n    this$1.computeOffsetPoints(pts[i], pts[i + 1], offsetDistance, offsetPts);\n  }\n};\nOffsetPointGenerator.prototype.setSidesToGenerate = function setSidesToGenerate (doLeft, doRight) {\n  this._doLeft = doLeft;\n  this._doRight = doRight;\n};\nOffsetPointGenerator.prototype.getPoints = function getPoints (offsetDistance) {\n    var this$1 = this;\n\n  var offsetPts = new ArrayList();\n  var lines = LinearComponentExtracter.getLines(this._g);\n  for (var i = lines.iterator(); i.hasNext();) {\n    var line = i.next();\n    this$1.extractPoints(line, offsetDistance, offsetPts);\n  }\n  return offsetPts\n};\nOffsetPointGenerator.prototype.computeOffsetPoints = function computeOffsetPoints (p0, p1, offsetDistance, offsetPts) {\n  var dx = p1.x - p0.x;\n  var dy = p1.y - p0.y;\n  var len = Math.sqrt(dx * dx + dy * dy);\n  var ux = offsetDistance * dx / len;\n  var uy = offsetDistance * dy / len;\n  var midX = (p1.x + p0.x) / 2;\n  var midY = (p1.y + p0.y) / 2;\n  if (this._doLeft) {\n    var offsetLeft = new Coordinate(midX - uy, midY + ux);\n    offsetPts.add(offsetLeft);\n  }\n  if (this._doRight) {\n    var offsetRight = new Coordinate(midX + uy, midY - ux);\n    offsetPts.add(offsetRight);\n  }\n};\nOffsetPointGenerator.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nOffsetPointGenerator.prototype.getClass = function getClass () {\n  return OffsetPointGenerator\n};\n\nvar OverlayResultValidator = function OverlayResultValidator () {\n  this._geom = null;\n  this._locFinder = null;\n  this._location = new Array(3).fill(null);\n  this._invalidLocation = null;\n  this._boundaryDistanceTolerance = OverlayResultValidator.TOLERANCE;\n  this._testCoords = new ArrayList();\n  var a = arguments[0];\n  var b = arguments[1];\n  var result = arguments[2];\n  this._boundaryDistanceTolerance = OverlayResultValidator.computeBoundaryDistanceTolerance(a, b);\n  this._geom = [a, b, result];\n  this._locFinder = [new FuzzyPointLocator(this._geom[0], this._boundaryDistanceTolerance), new FuzzyPointLocator(this._geom[1], this._boundaryDistanceTolerance), new FuzzyPointLocator(this._geom[2], this._boundaryDistanceTolerance)];\n};\n\nvar staticAccessors$46 = { TOLERANCE: { configurable: true } };\nOverlayResultValidator.prototype.reportResult = function reportResult (overlayOp, location, expectedInterior) {\n  System.out.println('Overlay result invalid - A:' + Location.toLocationSymbol(location[0]) + ' B:' + Location.toLocationSymbol(location[1]) + ' expected:' + (expectedInterior ? 'i' : 'e') + ' actual:' + Location.toLocationSymbol(location[2]));\n};\nOverlayResultValidator.prototype.isValid = function isValid (overlayOp) {\n  this.addTestPts(this._geom[0]);\n  this.addTestPts(this._geom[1]);\n  var isValid = this.checkValid(overlayOp);\n  return isValid\n};\nOverlayResultValidator.prototype.checkValid = function checkValid () {\n    var this$1 = this;\n\n  if (arguments.length === 1) {\n    var overlayOp = arguments[0];\n    for (var i = 0; i < this._testCoords.size(); i++) {\n      var pt = this$1._testCoords.get(i);\n      if (!this$1.checkValid(overlayOp, pt)) {\n        this$1._invalidLocation = pt;\n        return false\n      }\n    }\n    return true\n  } else if (arguments.length === 2) {\n    var overlayOp$1 = arguments[0];\n    var pt$1 = arguments[1];\n    this._location[0] = this._locFinder[0].getLocation(pt$1);\n    this._location[1] = this._locFinder[1].getLocation(pt$1);\n    this._location[2] = this._locFinder[2].getLocation(pt$1);\n    if (OverlayResultValidator.hasLocation(this._location, Location.BOUNDARY)) { return true }\n    return this.isValidResult(overlayOp$1, this._location)\n  }\n};\nOverlayResultValidator.prototype.addTestPts = function addTestPts (g) {\n  var ptGen = new OffsetPointGenerator(g);\n  this._testCoords.addAll(ptGen.getPoints(5 * this._boundaryDistanceTolerance));\n};\nOverlayResultValidator.prototype.isValidResult = function isValidResult (overlayOp, location) {\n  var expectedInterior = OverlayOp.isResultOfOp(location[0], location[1], overlayOp);\n  var resultInInterior = location[2] === Location.INTERIOR;\n  var isValid = !(expectedInterior ^ resultInInterior);\n  if (!isValid) { this.reportResult(overlayOp, location, expectedInterior); }\n  return isValid\n};\nOverlayResultValidator.prototype.getInvalidLocation = function getInvalidLocation () {\n  return this._invalidLocation\n};\nOverlayResultValidator.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nOverlayResultValidator.prototype.getClass = function getClass () {\n  return OverlayResultValidator\n};\nOverlayResultValidator.hasLocation = function hasLocation (location, loc) {\n  for (var i = 0; i < 3; i++) {\n    if (location[i] === loc) { return true }\n  }\n  return false\n};\nOverlayResultValidator.computeBoundaryDistanceTolerance = function computeBoundaryDistanceTolerance (g0, g1) {\n  return Math.min(GeometrySnapper.computeSizeBasedSnapTolerance(g0), GeometrySnapper.computeSizeBasedSnapTolerance(g1))\n};\nOverlayResultValidator.isValid = function isValid (a, b, overlayOp, result) {\n  var validator = new OverlayResultValidator(a, b, result);\n  return validator.isValid(overlayOp)\n};\nstaticAccessors$46.TOLERANCE.get = function () { return 0.000001 };\n\nObject.defineProperties( OverlayResultValidator, staticAccessors$46 );\n\n// operation.overlay\n\nvar GeometryCombiner = function GeometryCombiner (geoms) {\n  this._geomFactory = null;\n  this._skipEmpty = false;\n  this._inputGeoms = null;\n  this._geomFactory = GeometryCombiner.extractFactory(geoms);\n  this._inputGeoms = geoms;\n};\nGeometryCombiner.prototype.extractElements = function extractElements (geom, elems) {\n    var this$1 = this;\n\n  if (geom === null) { return null }\n  for (var i = 0; i < geom.getNumGeometries(); i++) {\n    var elemGeom = geom.getGeometryN(i);\n    if (this$1._skipEmpty && elemGeom.isEmpty()) { continue }\n    elems.add(elemGeom);\n  }\n};\nGeometryCombiner.prototype.combine = function combine () {\n    var this$1 = this;\n\n  var elems = new ArrayList();\n  for (var i = this._inputGeoms.iterator(); i.hasNext();) {\n    var g = i.next();\n    this$1.extractElements(g, elems);\n  }\n  if (elems.size() === 0) {\n    if (this._geomFactory !== null) {\n      return this._geomFactory.createGeometryCollection(null)\n    }\n    return null\n  }\n  return this._geomFactory.buildGeometry(elems)\n};\nGeometryCombiner.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nGeometryCombiner.prototype.getClass = function getClass () {\n  return GeometryCombiner\n};\nGeometryCombiner.combine = function combine () {\n  if (arguments.length === 1) {\n    var geoms = arguments[0];\n    var combiner = new GeometryCombiner(geoms);\n    return combiner.combine()\n  } else if (arguments.length === 2) {\n    var g0 = arguments[0];\n    var g1 = arguments[1];\n    var combiner$1 = new GeometryCombiner(GeometryCombiner.createList(g0, g1));\n    return combiner$1.combine()\n  } else if (arguments.length === 3) {\n    var g0$1 = arguments[0];\n    var g1$1 = arguments[1];\n    var g2 = arguments[2];\n    var combiner$2 = new GeometryCombiner(GeometryCombiner.createList(g0$1, g1$1, g2));\n    return combiner$2.combine()\n  }\n};\nGeometryCombiner.extractFactory = function extractFactory (geoms) {\n  if (geoms.isEmpty()) { return null }\n  return geoms.iterator().next().getFactory()\n};\nGeometryCombiner.createList = function createList () {\n  if (arguments.length === 2) {\n    var obj0 = arguments[0];\n    var obj1 = arguments[1];\n    var list = new ArrayList();\n    list.add(obj0);\n    list.add(obj1);\n    return list\n  } else if (arguments.length === 3) {\n    var obj0$1 = arguments[0];\n    var obj1$1 = arguments[1];\n    var obj2 = arguments[2];\n    var list$1 = new ArrayList();\n    list$1.add(obj0$1);\n    list$1.add(obj1$1);\n    list$1.add(obj2);\n    return list$1\n  }\n};\n\nvar CascadedPolygonUnion = function CascadedPolygonUnion () {\n  this._inputPolys = null;\n  this._geomFactory = null;\n  var polys = arguments[0];\n  this._inputPolys = polys;\n  if (this._inputPolys === null) { this._inputPolys = new ArrayList(); }\n};\n\nvar staticAccessors$47 = { STRTREE_NODE_CAPACITY: { configurable: true } };\nCascadedPolygonUnion.prototype.reduceToGeometries = function reduceToGeometries (geomTree) {\n    var this$1 = this;\n\n  var geoms = new ArrayList();\n  for (var i = geomTree.iterator(); i.hasNext();) {\n    var o = i.next();\n    var geom = null;\n    if (hasInterface(o, List)) {\n      geom = this$1.unionTree(o);\n    } else if (o instanceof Geometry) {\n      geom = o;\n    }\n    geoms.add(geom);\n  }\n  return geoms\n};\nCascadedPolygonUnion.prototype.extractByEnvelope = function extractByEnvelope (env, geom, disjointGeoms) {\n  var intersectingGeoms = new ArrayList();\n  for (var i = 0; i < geom.getNumGeometries(); i++) {\n    var elem = geom.getGeometryN(i);\n    if (elem.getEnvelopeInternal().intersects(env)) { intersectingGeoms.add(elem); } else { disjointGeoms.add(elem); }\n  }\n  return this._geomFactory.buildGeometry(intersectingGeoms)\n};\nCascadedPolygonUnion.prototype.unionOptimized = function unionOptimized (g0, g1) {\n  var g0Env = g0.getEnvelopeInternal();\n  var g1Env = g1.getEnvelopeInternal();\n  if (!g0Env.intersects(g1Env)) {\n    var combo = GeometryCombiner.combine(g0, g1);\n    return combo\n  }\n  if (g0.getNumGeometries() <= 1 && g1.getNumGeometries() <= 1) { return this.unionActual(g0, g1) }\n  var commonEnv = g0Env.intersection(g1Env);\n  return this.unionUsingEnvelopeIntersection(g0, g1, commonEnv)\n};\nCascadedPolygonUnion.prototype.union = function union () {\n  if (this._inputPolys === null) { throw new Error('union() method cannot be called twice') }\n  if (this._inputPolys.isEmpty()) { return null }\n  this._geomFactory = this._inputPolys.iterator().next().getFactory();\n  var index = new STRtree(CascadedPolygonUnion.STRTREE_NODE_CAPACITY);\n  for (var i = this._inputPolys.iterator(); i.hasNext();) {\n    var item = i.next();\n    index.insert(item.getEnvelopeInternal(), item);\n  }\n  this._inputPolys = null;\n  var itemTree = index.itemsTree();\n  var unionAll = this.unionTree(itemTree);\n  return unionAll\n};\nCascadedPolygonUnion.prototype.binaryUnion = function binaryUnion () {\n  if (arguments.length === 1) {\n    var geoms = arguments[0];\n    return this.binaryUnion(geoms, 0, geoms.size())\n  } else if (arguments.length === 3) {\n    var geoms$1 = arguments[0];\n    var start = arguments[1];\n    var end = arguments[2];\n    if (end - start <= 1) {\n      var g0 = CascadedPolygonUnion.getGeometry(geoms$1, start);\n      return this.unionSafe(g0, null)\n    } else if (end - start === 2) {\n      return this.unionSafe(CascadedPolygonUnion.getGeometry(geoms$1, start), CascadedPolygonUnion.getGeometry(geoms$1, start + 1))\n    } else {\n      var mid = Math.trunc((end + start) / 2);\n      var g0$1 = this.binaryUnion(geoms$1, start, mid);\n      var g1 = this.binaryUnion(geoms$1, mid, end);\n      return this.unionSafe(g0$1, g1)\n    }\n  }\n};\nCascadedPolygonUnion.prototype.repeatedUnion = function repeatedUnion (geoms) {\n  var union = null;\n  for (var i = geoms.iterator(); i.hasNext();) {\n    var g = i.next();\n    if (union === null) { union = g.copy(); } else { union = union.union(g); }\n  }\n  return union\n};\nCascadedPolygonUnion.prototype.unionSafe = function unionSafe (g0, g1) {\n  if (g0 === null && g1 === null) { return null }\n  if (g0 === null) { return g1.copy() }\n  if (g1 === null) { return g0.copy() }\n  return this.unionOptimized(g0, g1)\n};\nCascadedPolygonUnion.prototype.unionActual = function unionActual (g0, g1) {\n  return CascadedPolygonUnion.restrictToPolygons(g0.union(g1))\n};\nCascadedPolygonUnion.prototype.unionTree = function unionTree (geomTree) {\n  var geoms = this.reduceToGeometries(geomTree);\n  var union = this.binaryUnion(geoms);\n  return union\n};\nCascadedPolygonUnion.prototype.unionUsingEnvelopeIntersection = function unionUsingEnvelopeIntersection (g0, g1, common) {\n  var disjointPolys = new ArrayList();\n  var g0Int = this.extractByEnvelope(common, g0, disjointPolys);\n  var g1Int = this.extractByEnvelope(common, g1, disjointPolys);\n  var union = this.unionActual(g0Int, g1Int);\n  disjointPolys.add(union);\n  var overallUnion = GeometryCombiner.combine(disjointPolys);\n  return overallUnion\n};\nCascadedPolygonUnion.prototype.bufferUnion = function bufferUnion () {\n  if (arguments.length === 1) {\n    var geoms = arguments[0];\n    var factory = geoms.get(0).getFactory();\n    var gColl = factory.buildGeometry(geoms);\n    var unionAll = gColl.buffer(0.0);\n    return unionAll\n  } else if (arguments.length === 2) {\n    var g0 = arguments[0];\n    var g1 = arguments[1];\n    var factory$1 = g0.getFactory();\n    var gColl$1 = factory$1.createGeometryCollection([g0, g1]);\n    var unionAll$1 = gColl$1.buffer(0.0);\n    return unionAll$1\n  }\n};\nCascadedPolygonUnion.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nCascadedPolygonUnion.prototype.getClass = function getClass () {\n  return CascadedPolygonUnion\n};\nCascadedPolygonUnion.restrictToPolygons = function restrictToPolygons (g) {\n  if (hasInterface(g, Polygonal)) {\n    return g\n  }\n  var polygons = PolygonExtracter.getPolygons(g);\n  if (polygons.size() === 1) { return polygons.get(0) }\n  return g.getFactory().createMultiPolygon(GeometryFactory.toPolygonArray(polygons))\n};\nCascadedPolygonUnion.getGeometry = function getGeometry (list, index) {\n  if (index >= list.size()) { return null }\n  return list.get(index)\n};\nCascadedPolygonUnion.union = function union (polys) {\n  var op = new CascadedPolygonUnion(polys);\n  return op.union()\n};\nstaticAccessors$47.STRTREE_NODE_CAPACITY.get = function () { return 4 };\n\nObject.defineProperties( CascadedPolygonUnion, staticAccessors$47 );\n\nvar UnionOp = function UnionOp () {};\n\nUnionOp.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nUnionOp.prototype.getClass = function getClass () {\n  return UnionOp\n};\nUnionOp.union = function union (g, other) {\n  if (g.isEmpty() || other.isEmpty()) {\n    if (g.isEmpty() && other.isEmpty()) { return OverlayOp.createEmptyResult(OverlayOp.UNION, g, other, g.getFactory()) }\n    if (g.isEmpty()) { return other.copy() }\n    if (other.isEmpty()) { return g.copy() }\n  }\n  g.checkNotGeometryCollection(g);\n  g.checkNotGeometryCollection(other);\n  return SnapIfNeededOverlayOp.overlayOp(g, other, OverlayOp.UNION)\n};\n\n// operation.union\n\n// operation\n\n/**\n * Polyfill for IE support\n */\n\nexport { GeoJSONReader, GeoJSONWriter, OverlayOp, UnionOp, BufferOp };\n","import { GeoJSONReader, GeoJSONWriter, UnionOp } from 'turf-jsts';\n\n/**\n * Takes two or more {@link Polygon|polygons} and returns a combined polygon. If the input polygons are not contiguous, this function returns a {@link MultiPolygon} feature.\n *\n * @name union\n * @param {...Feature<Polygon>} A polygon to combine\n * @returns {Feature<(Polygon|MultiPolygon)>} a combined {@link Polygon} or {@link MultiPolygon} feature\n * @example\n * var poly1 = turf.polygon([[\n *     [-82.574787, 35.594087],\n *     [-82.574787, 35.615581],\n *     [-82.545261, 35.615581],\n *     [-82.545261, 35.594087],\n *     [-82.574787, 35.594087]\n * ]], {\"fill\": \"#0f0\"});\n * var poly2 = turf.polygon([[\n *     [-82.560024, 35.585153],\n *     [-82.560024, 35.602602],\n *     [-82.52964, 35.602602],\n *     [-82.52964, 35.585153],\n *     [-82.560024, 35.585153]\n * ]], {\"fill\": \"#00f\"});\n *\n * var union = turf.union(poly1, poly2);\n *\n * //addToMap\n * var addToMap = [poly1, poly2, union];\n */\nfunction union() {\n    var reader = new GeoJSONReader();\n    var result = reader.read(JSON.stringify(arguments[0].geometry));\n\n    for (var i = 1; i < arguments.length; i++) {\n        result = UnionOp.union(result, reader.read(JSON.stringify(arguments[i].geometry)));\n    }\n\n    var writer = new GeoJSONWriter();\n    result = writer.write(result);\n\n    return {\n        type: 'Feature',\n        geometry: result,\n        properties: arguments[0].properties\n    };\n}\n\nexport default union;\n","/**\n * Earth Radius used with the Harvesine formula and approximates using a spherical (non-ellipsoid) Earth.\n */\nvar earthRadius = 6371008.8;\n\n/**\n * Unit of measurement factors using a spherical (non-ellipsoid) earth radius.\n */\nvar factors = {\n    meters: earthRadius,\n    metres: earthRadius,\n    millimeters: earthRadius * 1000,\n    millimetres: earthRadius * 1000,\n    centimeters: earthRadius * 100,\n    centimetres: earthRadius * 100,\n    kilometers: earthRadius / 1000,\n    kilometres: earthRadius / 1000,\n    miles: earthRadius / 1609.344,\n    nauticalmiles: earthRadius / 1852,\n    inches: earthRadius * 39.370,\n    yards: earthRadius / 1.0936,\n    feet: earthRadius * 3.28084,\n    radians: 1,\n    degrees: earthRadius / 111325,\n};\n\n/**\n * Units of measurement factors based on 1 meter.\n */\nvar unitsFactors = {\n    meters: 1,\n    metres: 1,\n    millimeters: 1000,\n    millimetres: 1000,\n    centimeters: 100,\n    centimetres: 100,\n    kilometers: 1 / 1000,\n    kilometres: 1 / 1000,\n    miles: 1 / 1609.344,\n    nauticalmiles: 1 / 1852,\n    inches: 39.370,\n    yards: 1 / 1.0936,\n    feet: 3.28084,\n    radians: 1 / earthRadius,\n    degrees: 1 / 111325,\n};\n\n/**\n * Area of measurement factors based on 1 square meter.\n */\nvar areaFactors = {\n    meters: 1,\n    metres: 1,\n    millimeters: 1000000,\n    millimetres: 1000000,\n    centimeters: 10000,\n    centimetres: 10000,\n    kilometers: 0.000001,\n    kilometres: 0.000001,\n    acres: 0.000247105,\n    miles: 3.86e-7,\n    yards: 1.195990046,\n    feet: 10.763910417,\n    inches: 1550.003100006\n};\n\n/**\n * Wraps a GeoJSON {@link Geometry} in a GeoJSON {@link Feature}.\n *\n * @name feature\n * @param {Geometry} geometry input geometry\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature} a GeoJSON Feature\n * @example\n * var geometry = {\n *   \"type\": \"Point\",\n *   \"coordinates\": [110, 50]\n * };\n *\n * var feature = turf.feature(geometry);\n *\n * //=feature\n */\nfunction feature(geometry, properties, options) {\n    // Optional Parameters\n    options = options || {};\n    if (!isObject(options)) throw new Error('options is invalid');\n    var bbox = options.bbox;\n    var id = options.id;\n\n    // Validation\n    if (geometry === undefined) throw new Error('geometry is required');\n    if (properties && properties.constructor !== Object) throw new Error('properties must be an Object');\n    if (bbox) validateBBox(bbox);\n    if (id) validateId(id);\n\n    // Main\n    var feat = {type: 'Feature'};\n    if (id) feat.id = id;\n    if (bbox) feat.bbox = bbox;\n    feat.properties = properties || {};\n    feat.geometry = geometry;\n    return feat;\n}\n\n/**\n * Creates a GeoJSON {@link Geometry} from a Geometry string type & coordinates.\n * For GeometryCollection type use `helpers.geometryCollection`\n *\n * @name geometry\n * @param {string} type Geometry Type\n * @param {Array<number>} coordinates Coordinates\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Geometry\n * @returns {Geometry} a GeoJSON Geometry\n * @example\n * var type = 'Point';\n * var coordinates = [110, 50];\n *\n * var geometry = turf.geometry(type, coordinates);\n *\n * //=geometry\n */\nfunction geometry(type, coordinates, options) {\n    // Optional Parameters\n    options = options || {};\n    if (!isObject(options)) throw new Error('options is invalid');\n    var bbox = options.bbox;\n\n    // Validation\n    if (!type) throw new Error('type is required');\n    if (!coordinates) throw new Error('coordinates is required');\n    if (!Array.isArray(coordinates)) throw new Error('coordinates must be an Array');\n    if (bbox) validateBBox(bbox);\n\n    // Main\n    var geom;\n    switch (type) {\n    case 'Point': geom = point(coordinates).geometry; break;\n    case 'LineString': geom = lineString(coordinates).geometry; break;\n    case 'Polygon': geom = polygon(coordinates).geometry; break;\n    case 'MultiPoint': geom = multiPoint(coordinates).geometry; break;\n    case 'MultiLineString': geom = multiLineString(coordinates).geometry; break;\n    case 'MultiPolygon': geom = multiPolygon(coordinates).geometry; break;\n    default: throw new Error(type + ' is invalid');\n    }\n    if (bbox) geom.bbox = bbox;\n    return geom;\n}\n\n/**\n * Creates a {@link Point} {@link Feature} from a Position.\n *\n * @name point\n * @param {Array<number>} coordinates longitude, latitude position (each in decimal degrees)\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<Point>} a Point feature\n * @example\n * var point = turf.point([-75.343, 39.984]);\n *\n * //=point\n */\nfunction point(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n    if (!Array.isArray(coordinates)) throw new Error('coordinates must be an Array');\n    if (coordinates.length < 2) throw new Error('coordinates must be at least 2 numbers long');\n    if (!isNumber(coordinates[0]) || !isNumber(coordinates[1])) throw new Error('coordinates must contain numbers');\n\n    return feature({\n        type: 'Point',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link Point} {@link FeatureCollection} from an Array of Point coordinates.\n *\n * @name points\n * @param {Array<Array<number>>} coordinates an array of Points\n * @param {Object} [properties={}] Translate these properties to each Feature\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the FeatureCollection\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<Point>} Point Feature\n * @example\n * var points = turf.points([\n *   [-75, 39],\n *   [-80, 45],\n *   [-78, 50]\n * ]);\n *\n * //=points\n */\nfunction points(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n    if (!Array.isArray(coordinates)) throw new Error('coordinates must be an Array');\n\n    return featureCollection(coordinates.map(function (coords) {\n        return point(coords, properties);\n    }), options);\n}\n\n/**\n * Creates a {@link Polygon} {@link Feature} from an Array of LinearRings.\n *\n * @name polygon\n * @param {Array<Array<Array<number>>>} coordinates an array of LinearRings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<Polygon>} Polygon Feature\n * @example\n * var polygon = turf.polygon([[[-5, 52], [-4, 56], [-2, 51], [-7, 54], [-5, 52]]], { name: 'poly1' });\n *\n * //=polygon\n */\nfunction polygon(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n\n    for (var i = 0; i < coordinates.length; i++) {\n        var ring = coordinates[i];\n        if (ring.length < 4) {\n            throw new Error('Each LinearRing of a Polygon must have 4 or more Positions.');\n        }\n        for (var j = 0; j < ring[ring.length - 1].length; j++) {\n            // Check if first point of Polygon contains two numbers\n            if (i === 0 && j === 0 && !isNumber(ring[0][0]) || !isNumber(ring[0][1])) throw new Error('coordinates must contain numbers');\n            if (ring[ring.length - 1][j] !== ring[0][j]) {\n                throw new Error('First and last Position are not equivalent.');\n            }\n        }\n    }\n\n    return feature({\n        type: 'Polygon',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link Polygon} {@link FeatureCollection} from an Array of Polygon coordinates.\n *\n * @name polygons\n * @param {Array<Array<Array<Array<number>>>>} coordinates an array of Polygon coordinates\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<Polygon>} Polygon FeatureCollection\n * @example\n * var polygons = turf.polygons([\n *   [[[-5, 52], [-4, 56], [-2, 51], [-7, 54], [-5, 52]]],\n *   [[[-15, 42], [-14, 46], [-12, 41], [-17, 44], [-15, 42]]],\n * ]);\n *\n * //=polygons\n */\nfunction polygons(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n    if (!Array.isArray(coordinates)) throw new Error('coordinates must be an Array');\n\n    return featureCollection(coordinates.map(function (coords) {\n        return polygon(coords, properties);\n    }), options);\n}\n\n/**\n * Creates a {@link LineString} {@link Feature} from an Array of Positions.\n *\n * @name lineString\n * @param {Array<Array<number>>} coordinates an array of Positions\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<LineString>} LineString Feature\n * @example\n * var linestring1 = turf.lineString([[-24, 63], [-23, 60], [-25, 65], [-20, 69]], {name: 'line 1'});\n * var linestring2 = turf.lineString([[-14, 43], [-13, 40], [-15, 45], [-10, 49]], {name: 'line 2'});\n *\n * //=linestring1\n * //=linestring2\n */\nfunction lineString(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n    if (coordinates.length < 2) throw new Error('coordinates must be an array of two or more positions');\n    // Check if first point of LineString contains two numbers\n    if (!isNumber(coordinates[0][1]) || !isNumber(coordinates[0][1])) throw new Error('coordinates must contain numbers');\n\n    return feature({\n        type: 'LineString',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link LineString} {@link FeatureCollection} from an Array of LineString coordinates.\n *\n * @name lineStrings\n * @param {Array<Array<number>>} coordinates an array of LinearRings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the FeatureCollection\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<LineString>} LineString FeatureCollection\n * @example\n * var linestrings = turf.lineStrings([\n *   [[-24, 63], [-23, 60], [-25, 65], [-20, 69]],\n *   [[-14, 43], [-13, 40], [-15, 45], [-10, 49]]\n * ]);\n *\n * //=linestrings\n */\nfunction lineStrings(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n    if (!Array.isArray(coordinates)) throw new Error('coordinates must be an Array');\n\n    return featureCollection(coordinates.map(function (coords) {\n        return lineString(coords, properties);\n    }), options);\n}\n\n/**\n * Takes one or more {@link Feature|Features} and creates a {@link FeatureCollection}.\n *\n * @name featureCollection\n * @param {Feature[]} features input features\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {FeatureCollection} FeatureCollection of Features\n * @example\n * var locationA = turf.point([-75.343, 39.984], {name: 'Location A'});\n * var locationB = turf.point([-75.833, 39.284], {name: 'Location B'});\n * var locationC = turf.point([-75.534, 39.123], {name: 'Location C'});\n *\n * var collection = turf.featureCollection([\n *   locationA,\n *   locationB,\n *   locationC\n * ]);\n *\n * //=collection\n */\nfunction featureCollection(features, options) {\n    // Optional Parameters\n    options = options || {};\n    if (!isObject(options)) throw new Error('options is invalid');\n    var bbox = options.bbox;\n    var id = options.id;\n\n    // Validation\n    if (!features) throw new Error('No features passed');\n    if (!Array.isArray(features)) throw new Error('features must be an Array');\n    if (bbox) validateBBox(bbox);\n    if (id) validateId(id);\n\n    // Main\n    var fc = {type: 'FeatureCollection'};\n    if (id) fc.id = id;\n    if (bbox) fc.bbox = bbox;\n    fc.features = features;\n    return fc;\n}\n\n/**\n * Creates a {@link Feature<MultiLineString>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiLineString\n * @param {Array<Array<Array<number>>>} coordinates an array of LineStrings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiLineString>} a MultiLineString feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiLine = turf.multiLineString([[[0,0],[10,10]]]);\n *\n * //=multiLine\n */\nfunction multiLineString(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n\n    return feature({\n        type: 'MultiLineString',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link Feature<MultiPoint>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiPoint\n * @param {Array<Array<number>>} coordinates an array of Positions\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiPoint>} a MultiPoint feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiPt = turf.multiPoint([[0,0],[10,10]]);\n *\n * //=multiPt\n */\nfunction multiPoint(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n\n    return feature({\n        type: 'MultiPoint',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link Feature<MultiPolygon>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiPolygon\n * @param {Array<Array<Array<Array<number>>>>} coordinates an array of Polygons\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiPolygon>} a multipolygon feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiPoly = turf.multiPolygon([[[[0,0],[0,10],[10,10],[10,0],[0,0]]]]);\n *\n * //=multiPoly\n *\n */\nfunction multiPolygon(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n\n    return feature({\n        type: 'MultiPolygon',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link Feature<GeometryCollection>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name geometryCollection\n * @param {Array<Geometry>} geometries an array of GeoJSON Geometries\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<GeometryCollection>} a GeoJSON GeometryCollection Feature\n * @example\n * var pt = {\n *     \"type\": \"Point\",\n *       \"coordinates\": [100, 0]\n *     };\n * var line = {\n *     \"type\": \"LineString\",\n *     \"coordinates\": [ [101, 0], [102, 1] ]\n *   };\n * var collection = turf.geometryCollection([pt, line]);\n *\n * //=collection\n */\nfunction geometryCollection(geometries, properties, options) {\n    if (!geometries) throw new Error('geometries is required');\n    if (!Array.isArray(geometries)) throw new Error('geometries must be an Array');\n\n    return feature({\n        type: 'GeometryCollection',\n        geometries: geometries\n    }, properties, options);\n}\n\n/**\n * Round number to precision\n *\n * @param {number} num Number\n * @param {number} [precision=0] Precision\n * @returns {number} rounded number\n * @example\n * turf.round(120.4321)\n * //=120\n *\n * turf.round(120.4321, 2)\n * //=120.43\n */\nfunction round(num, precision) {\n    if (num === undefined || num === null || isNaN(num)) throw new Error('num is required');\n    if (precision && !(precision >= 0)) throw new Error('precision must be a positive number');\n    var multiplier = Math.pow(10, precision || 0);\n    return Math.round(num * multiplier) / multiplier;\n}\n\n/**\n * Convert a distance measurement (assuming a spherical Earth) from radians to a more friendly unit.\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @name radiansToLength\n * @param {number} radians in radians across the sphere\n * @param {string} [units='kilometers'] can be degrees, radians, miles, or kilometers inches, yards, metres, meters, kilometres, kilometers.\n * @returns {number} distance\n */\nfunction radiansToLength(radians, units) {\n    if (radians === undefined || radians === null) throw new Error('radians is required');\n\n    if (units && typeof units !== 'string') throw new Error('units must be a string');\n    var factor = factors[units || 'kilometers'];\n    if (!factor) throw new Error(units + ' units is invalid');\n    return radians * factor;\n}\n\n/**\n * Convert a distance measurement (assuming a spherical Earth) from a real-world unit into radians\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @name lengthToRadians\n * @param {number} distance in real units\n * @param {string} [units='kilometers'] can be degrees, radians, miles, or kilometers inches, yards, metres, meters, kilometres, kilometers.\n * @returns {number} radians\n */\nfunction lengthToRadians(distance, units) {\n    if (distance === undefined || distance === null) throw new Error('distance is required');\n\n    if (units && typeof units !== 'string') throw new Error('units must be a string');\n    var factor = factors[units || 'kilometers'];\n    if (!factor) throw new Error(units + ' units is invalid');\n    return distance / factor;\n}\n\n/**\n * Convert a distance measurement (assuming a spherical Earth) from a real-world unit into degrees\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, centimeters, kilometres, feet\n *\n * @name lengthToDegrees\n * @param {number} distance in real units\n * @param {string} [units='kilometers'] can be degrees, radians, miles, or kilometers inches, yards, metres, meters, kilometres, kilometers.\n * @returns {number} degrees\n */\nfunction lengthToDegrees(distance, units) {\n    return radiansToDegrees(lengthToRadians(distance, units));\n}\n\n/**\n * Converts any bearing angle from the north line direction (positive clockwise)\n * and returns an angle between 0-360 degrees (positive clockwise), 0 being the north line\n *\n * @name bearingToAzimuth\n * @param {number} bearing angle, between -180 and +180 degrees\n * @returns {number} angle between 0 and 360 degrees\n */\nfunction bearingToAzimuth(bearing) {\n    if (bearing === null || bearing === undefined) throw new Error('bearing is required');\n\n    var angle = bearing % 360;\n    if (angle < 0) angle += 360;\n    return angle;\n}\n\n/**\n * Converts an angle in radians to degrees\n *\n * @name radiansToDegrees\n * @param {number} radians angle in radians\n * @returns {number} degrees between 0 and 360 degrees\n */\nfunction radiansToDegrees(radians) {\n    if (radians === null || radians === undefined) throw new Error('radians is required');\n\n    var degrees = radians % (2 * Math.PI);\n    return degrees * 180 / Math.PI;\n}\n\n/**\n * Converts an angle in degrees to radians\n *\n * @name degreesToRadians\n * @param {number} degrees angle between 0 and 360 degrees\n * @returns {number} angle in radians\n */\nfunction degreesToRadians(degrees) {\n    if (degrees === null || degrees === undefined) throw new Error('degrees is required');\n\n    var radians = degrees % 360;\n    return radians * Math.PI / 180;\n}\n\n/**\n * Converts a length to the requested unit.\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @param {number} length to be converted\n * @param {string} originalUnit of the length\n * @param {string} [finalUnit='kilometers'] returned unit\n * @returns {number} the converted length\n */\nfunction convertLength(length, originalUnit, finalUnit) {\n    if (length === null || length === undefined) throw new Error('length is required');\n    if (!(length >= 0)) throw new Error('length must be a positive number');\n\n    return radiansToLength(lengthToRadians(length, originalUnit), finalUnit || 'kilometers');\n}\n\n/**\n * Converts a area to the requested unit.\n * Valid units: kilometers, kilometres, meters, metres, centimetres, millimeters, acres, miles, yards, feet, inches\n * @param {number} area to be converted\n * @param {string} [originalUnit='meters'] of the distance\n * @param {string} [finalUnit='kilometers'] returned unit\n * @returns {number} the converted distance\n */\nfunction convertArea(area, originalUnit, finalUnit) {\n    if (area === null || area === undefined) throw new Error('area is required');\n    if (!(area >= 0)) throw new Error('area must be a positive number');\n\n    var startFactor = areaFactors[originalUnit || 'meters'];\n    if (!startFactor) throw new Error('invalid original units');\n\n    var finalFactor = areaFactors[finalUnit || 'kilometers'];\n    if (!finalFactor) throw new Error('invalid final units');\n\n    return (area / startFactor) * finalFactor;\n}\n\n/**\n * isNumber\n *\n * @param {*} num Number to validate\n * @returns {boolean} true/false\n * @example\n * turf.isNumber(123)\n * //=true\n * turf.isNumber('foo')\n * //=false\n */\nfunction isNumber(num) {\n    return !isNaN(num) && num !== null && !Array.isArray(num);\n}\n\n/**\n * isObject\n *\n * @param {*} input variable to validate\n * @returns {boolean} true/false\n * @example\n * turf.isObject({elevation: 10})\n * //=true\n * turf.isObject('foo')\n * //=false\n */\nfunction isObject(input) {\n    return (!!input) && (input.constructor === Object);\n}\n\n/**\n * Validate BBox\n *\n * @private\n * @param {Array<number>} bbox BBox to validate\n * @returns {void}\n * @throws Error if BBox is not valid\n * @example\n * validateBBox([-180, -40, 110, 50])\n * //=OK\n * validateBBox([-180, -40])\n * //=Error\n * validateBBox('Foo')\n * //=Error\n * validateBBox(5)\n * //=Error\n * validateBBox(null)\n * //=Error\n * validateBBox(undefined)\n * //=Error\n */\nfunction validateBBox(bbox) {\n    if (!bbox) throw new Error('bbox is required');\n    if (!Array.isArray(bbox)) throw new Error('bbox must be an Array');\n    if (bbox.length !== 4 && bbox.length !== 6) throw new Error('bbox must be an Array of 4 or 6 numbers');\n    bbox.forEach(function (num) {\n        if (!isNumber(num)) throw new Error('bbox must only contain numbers');\n    });\n}\n\n/**\n * Validate Id\n *\n * @private\n * @param {string|number} id Id to validate\n * @returns {void}\n * @throws Error if Id is not valid\n * @example\n * validateId([-180, -40, 110, 50])\n * //=Error\n * validateId([-180, -40])\n * //=Error\n * validateId('Foo')\n * //=OK\n * validateId(5)\n * //=OK\n * validateId(null)\n * //=Error\n * validateId(undefined)\n * //=Error\n */\nfunction validateId(id) {\n    if (!id) throw new Error('id is required');\n    if (['string', 'number'].indexOf(typeof id) === -1) throw new Error('id must be a number or a string');\n}\n\n// Deprecated methods\nfunction radians2degrees() {\n    throw new Error('method has been renamed to `radiansToDegrees`');\n}\n\nfunction degrees2radians() {\n    throw new Error('method has been renamed to `degreesToRadians`');\n}\n\nfunction distanceToDegrees() {\n    throw new Error('method has been renamed to `lengthToDegrees`');\n}\n\nfunction distanceToRadians() {\n    throw new Error('method has been renamed to `lengthToRadians`');\n}\n\nfunction radiansToDistance() {\n    throw new Error('method has been renamed to `radiansToLength`');\n}\n\nfunction bearingToAngle() {\n    throw new Error('method has been renamed to `bearingToAzimuth`');\n}\n\nfunction convertDistance() {\n    throw new Error('method has been renamed to `convertLength`');\n}\n\nexport { earthRadius, factors, unitsFactors, areaFactors, feature, geometry, point, points, polygon, polygons, lineString, lineStrings, featureCollection, multiLineString, multiPoint, multiPolygon, geometryCollection, round, radiansToLength, lengthToRadians, lengthToDegrees, bearingToAzimuth, radiansToDegrees, degreesToRadians, convertLength, convertArea, isNumber, isObject, validateBBox, validateId, radians2degrees, degrees2radians, distanceToDegrees, distanceToRadians, radiansToDistance, bearingToAngle, convertDistance };\n","import { feature, isObject, lineString, point } from '@turf/helpers';\n\n/**\n * Callback for coordEach\n *\n * @callback coordEachCallback\n * @param {Array<number>} currentCoord The current coordinate being processed.\n * @param {number} coordIndex The current index of the coordinate being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n * @param {number} geometryIndex The current index of the Geometry being processed.\n */\n\n/**\n * Iterate over coordinates in any GeoJSON object, similar to Array.forEach()\n *\n * @name coordEach\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (currentCoord, coordIndex, featureIndex, multiFeatureIndex)\n * @param {boolean} [excludeWrapCoord=false] whether or not to include the final coordinate of LinearRings that wraps the ring in its iteration.\n * @returns {void}\n * @example\n * var features = turf.featureCollection([\n *   turf.point([26, 37], {\"foo\": \"bar\"}),\n *   turf.point([36, 53], {\"hello\": \"world\"})\n * ]);\n *\n * turf.coordEach(features, function (currentCoord, coordIndex, featureIndex, multiFeatureIndex, geometryIndex) {\n *   //=currentCoord\n *   //=coordIndex\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   //=geometryIndex\n * });\n */\nfunction coordEach(geojson, callback, excludeWrapCoord) {\n    // Handles null Geometry -- Skips this GeoJSON\n    if (geojson === null) return;\n    var j, k, l, geometry, stopG, coords,\n        geometryMaybeCollection,\n        wrapShrink = 0,\n        coordIndex = 0,\n        isGeometryCollection,\n        type = geojson.type,\n        isFeatureCollection = type === 'FeatureCollection',\n        isFeature = type === 'Feature',\n        stop = isFeatureCollection ? geojson.features.length : 1;\n\n    // This logic may look a little weird. The reason why it is that way\n    // is because it's trying to be fast. GeoJSON supports multiple kinds\n    // of objects at its root: FeatureCollection, Features, Geometries.\n    // This function has the responsibility of handling all of them, and that\n    // means that some of the `for` loops you see below actually just don't apply\n    // to certain inputs. For instance, if you give this just a\n    // Point geometry, then both loops are short-circuited and all we do\n    // is gradually rename the input until it's called 'geometry'.\n    //\n    // This also aims to allocate as few resources as possible: just a\n    // few numbers and booleans, rather than any temporary arrays as would\n    // be required with the normalization approach.\n    for (var featureIndex = 0; featureIndex < stop; featureIndex++) {\n        geometryMaybeCollection = (isFeatureCollection ? geojson.features[featureIndex].geometry :\n            (isFeature ? geojson.geometry : geojson));\n        isGeometryCollection = (geometryMaybeCollection) ? geometryMaybeCollection.type === 'GeometryCollection' : false;\n        stopG = isGeometryCollection ? geometryMaybeCollection.geometries.length : 1;\n\n        for (var geomIndex = 0; geomIndex < stopG; geomIndex++) {\n            var multiFeatureIndex = 0;\n            var geometryIndex = 0;\n            geometry = isGeometryCollection ?\n                geometryMaybeCollection.geometries[geomIndex] : geometryMaybeCollection;\n\n            // Handles null Geometry -- Skips this geometry\n            if (geometry === null) continue;\n            coords = geometry.coordinates;\n            var geomType = geometry.type;\n\n            wrapShrink = (excludeWrapCoord && (geomType === 'Polygon' || geomType === 'MultiPolygon')) ? 1 : 0;\n\n            switch (geomType) {\n            case null:\n                break;\n            case 'Point':\n                if (callback(coords, coordIndex, featureIndex, multiFeatureIndex, geometryIndex) === false) return false;\n                coordIndex++;\n                multiFeatureIndex++;\n                break;\n            case 'LineString':\n            case 'MultiPoint':\n                for (j = 0; j < coords.length; j++) {\n                    if (callback(coords[j], coordIndex, featureIndex, multiFeatureIndex, geometryIndex) === false) return false;\n                    coordIndex++;\n                    if (geomType === 'MultiPoint') multiFeatureIndex++;\n                }\n                if (geomType === 'LineString') multiFeatureIndex++;\n                break;\n            case 'Polygon':\n            case 'MultiLineString':\n                for (j = 0; j < coords.length; j++) {\n                    for (k = 0; k < coords[j].length - wrapShrink; k++) {\n                        if (callback(coords[j][k], coordIndex, featureIndex, multiFeatureIndex, geometryIndex) === false) return false;\n                        coordIndex++;\n                    }\n                    if (geomType === 'MultiLineString') multiFeatureIndex++;\n                    if (geomType === 'Polygon') geometryIndex++;\n                }\n                if (geomType === 'Polygon') multiFeatureIndex++;\n                break;\n            case 'MultiPolygon':\n                for (j = 0; j < coords.length; j++) {\n                    if (geomType === 'MultiPolygon') geometryIndex = 0;\n                    for (k = 0; k < coords[j].length; k++) {\n                        for (l = 0; l < coords[j][k].length - wrapShrink; l++) {\n                            if (callback(coords[j][k][l], coordIndex, featureIndex, multiFeatureIndex, geometryIndex) === false) return false;\n                            coordIndex++;\n                        }\n                        geometryIndex++;\n                    }\n                    multiFeatureIndex++;\n                }\n                break;\n            case 'GeometryCollection':\n                for (j = 0; j < geometry.geometries.length; j++)\n                    if (coordEach(geometry.geometries[j], callback, excludeWrapCoord) === false) return false;\n                break;\n            default:\n                throw new Error('Unknown Geometry Type');\n            }\n        }\n    }\n}\n\n/**\n * Callback for coordReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback coordReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Array<number>} currentCoord The current coordinate being processed.\n * @param {number} coordIndex The current index of the coordinate being processed.\n * Starts at index 0, if an initialValue is provided, and at index 1 otherwise.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n * @param {number} geometryIndex The current index of the Geometry being processed.\n */\n\n/**\n * Reduce coordinates in any GeoJSON object, similar to Array.reduce()\n *\n * @name coordReduce\n * @param {FeatureCollection|Geometry|Feature} geojson any GeoJSON object\n * @param {Function} callback a method that takes (previousValue, currentCoord, coordIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @param {boolean} [excludeWrapCoord=false] whether or not to include the final coordinate of LinearRings that wraps the ring in its iteration.\n * @returns {*} The value that results from the reduction.\n * @example\n * var features = turf.featureCollection([\n *   turf.point([26, 37], {\"foo\": \"bar\"}),\n *   turf.point([36, 53], {\"hello\": \"world\"})\n * ]);\n *\n * turf.coordReduce(features, function (previousValue, currentCoord, coordIndex, featureIndex, multiFeatureIndex, geometryIndex) {\n *   //=previousValue\n *   //=currentCoord\n *   //=coordIndex\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   //=geometryIndex\n *   return currentCoord;\n * });\n */\nfunction coordReduce(geojson, callback, initialValue, excludeWrapCoord) {\n    var previousValue = initialValue;\n    coordEach(geojson, function (currentCoord, coordIndex, featureIndex, multiFeatureIndex, geometryIndex) {\n        if (coordIndex === 0 && initialValue === undefined) previousValue = currentCoord;\n        else previousValue = callback(previousValue, currentCoord, coordIndex, featureIndex, multiFeatureIndex, geometryIndex);\n    }, excludeWrapCoord);\n    return previousValue;\n}\n\n/**\n * Callback for propEach\n *\n * @callback propEachCallback\n * @param {Object} currentProperties The current Properties being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n */\n\n/**\n * Iterate over properties in any GeoJSON object, similar to Array.forEach()\n *\n * @name propEach\n * @param {FeatureCollection|Feature} geojson any GeoJSON object\n * @param {Function} callback a method that takes (currentProperties, featureIndex)\n * @returns {void}\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * turf.propEach(features, function (currentProperties, featureIndex) {\n *   //=currentProperties\n *   //=featureIndex\n * });\n */\nfunction propEach(geojson, callback) {\n    var i;\n    switch (geojson.type) {\n    case 'FeatureCollection':\n        for (i = 0; i < geojson.features.length; i++) {\n            if (callback(geojson.features[i].properties, i) === false) break;\n        }\n        break;\n    case 'Feature':\n        callback(geojson.properties, 0);\n        break;\n    }\n}\n\n\n/**\n * Callback for propReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback propReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {*} currentProperties The current Properties being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n */\n\n/**\n * Reduce properties in any GeoJSON object into a single value,\n * similar to how Array.reduce works. However, in this case we lazily run\n * the reduction, so an array of all properties is unnecessary.\n *\n * @name propReduce\n * @param {FeatureCollection|Feature} geojson any GeoJSON object\n * @param {Function} callback a method that takes (previousValue, currentProperties, featureIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {*} The value that results from the reduction.\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * turf.propReduce(features, function (previousValue, currentProperties, featureIndex) {\n *   //=previousValue\n *   //=currentProperties\n *   //=featureIndex\n *   return currentProperties\n * });\n */\nfunction propReduce(geojson, callback, initialValue) {\n    var previousValue = initialValue;\n    propEach(geojson, function (currentProperties, featureIndex) {\n        if (featureIndex === 0 && initialValue === undefined) previousValue = currentProperties;\n        else previousValue = callback(previousValue, currentProperties, featureIndex);\n    });\n    return previousValue;\n}\n\n/**\n * Callback for featureEach\n *\n * @callback featureEachCallback\n * @param {Feature<any>} currentFeature The current Feature being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n */\n\n/**\n * Iterate over features in any GeoJSON object, similar to\n * Array.forEach.\n *\n * @name featureEach\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (currentFeature, featureIndex)\n * @returns {void}\n * @example\n * var features = turf.featureCollection([\n *   turf.point([26, 37], {foo: 'bar'}),\n *   turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * turf.featureEach(features, function (currentFeature, featureIndex) {\n *   //=currentFeature\n *   //=featureIndex\n * });\n */\nfunction featureEach(geojson, callback) {\n    if (geojson.type === 'Feature') {\n        callback(geojson, 0);\n    } else if (geojson.type === 'FeatureCollection') {\n        for (var i = 0; i < geojson.features.length; i++) {\n            if (callback(geojson.features[i], i) === false) break;\n        }\n    }\n}\n\n/**\n * Callback for featureReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback featureReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Feature} currentFeature The current Feature being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n */\n\n/**\n * Reduce features in any GeoJSON object, similar to Array.reduce().\n *\n * @name featureReduce\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (previousValue, currentFeature, featureIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {*} The value that results from the reduction.\n * @example\n * var features = turf.featureCollection([\n *   turf.point([26, 37], {\"foo\": \"bar\"}),\n *   turf.point([36, 53], {\"hello\": \"world\"})\n * ]);\n *\n * turf.featureReduce(features, function (previousValue, currentFeature, featureIndex) {\n *   //=previousValue\n *   //=currentFeature\n *   //=featureIndex\n *   return currentFeature\n * });\n */\nfunction featureReduce(geojson, callback, initialValue) {\n    var previousValue = initialValue;\n    featureEach(geojson, function (currentFeature, featureIndex) {\n        if (featureIndex === 0 && initialValue === undefined) previousValue = currentFeature;\n        else previousValue = callback(previousValue, currentFeature, featureIndex);\n    });\n    return previousValue;\n}\n\n/**\n * Get all coordinates from any GeoJSON object.\n *\n * @name coordAll\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @returns {Array<Array<number>>} coordinate position array\n * @example\n * var features = turf.featureCollection([\n *   turf.point([26, 37], {foo: 'bar'}),\n *   turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * var coords = turf.coordAll(features);\n * //= [[26, 37], [36, 53]]\n */\nfunction coordAll(geojson) {\n    var coords = [];\n    coordEach(geojson, function (coord) {\n        coords.push(coord);\n    });\n    return coords;\n}\n\n/**\n * Callback for geomEach\n *\n * @callback geomEachCallback\n * @param {Geometry} currentGeometry The current Geometry being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {Object} featureProperties The current Feature Properties being processed.\n * @param {Array<number>} featureBBox The current Feature BBox being processed.\n * @param {number|string} featureId The current Feature Id being processed.\n */\n\n/**\n * Iterate over each geometry in any GeoJSON object, similar to Array.forEach()\n *\n * @name geomEach\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (currentGeometry, featureIndex, featureProperties, featureBBox, featureId)\n * @returns {void}\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * turf.geomEach(features, function (currentGeometry, featureIndex, featureProperties, featureBBox, featureId) {\n *   //=currentGeometry\n *   //=featureIndex\n *   //=featureProperties\n *   //=featureBBox\n *   //=featureId\n * });\n */\nfunction geomEach(geojson, callback) {\n    var i, j, g, geometry, stopG,\n        geometryMaybeCollection,\n        isGeometryCollection,\n        featureProperties,\n        featureBBox,\n        featureId,\n        featureIndex = 0,\n        isFeatureCollection = geojson.type === 'FeatureCollection',\n        isFeature = geojson.type === 'Feature',\n        stop = isFeatureCollection ? geojson.features.length : 1;\n\n    // This logic may look a little weird. The reason why it is that way\n    // is because it's trying to be fast. GeoJSON supports multiple kinds\n    // of objects at its root: FeatureCollection, Features, Geometries.\n    // This function has the responsibility of handling all of them, and that\n    // means that some of the `for` loops you see below actually just don't apply\n    // to certain inputs. For instance, if you give this just a\n    // Point geometry, then both loops are short-circuited and all we do\n    // is gradually rename the input until it's called 'geometry'.\n    //\n    // This also aims to allocate as few resources as possible: just a\n    // few numbers and booleans, rather than any temporary arrays as would\n    // be required with the normalization approach.\n    for (i = 0; i < stop; i++) {\n\n        geometryMaybeCollection = (isFeatureCollection ? geojson.features[i].geometry :\n            (isFeature ? geojson.geometry : geojson));\n        featureProperties = (isFeatureCollection ? geojson.features[i].properties :\n            (isFeature ? geojson.properties : {}));\n        featureBBox = (isFeatureCollection ? geojson.features[i].bbox :\n            (isFeature ? geojson.bbox : undefined));\n        featureId = (isFeatureCollection ? geojson.features[i].id :\n            (isFeature ? geojson.id : undefined));\n        isGeometryCollection = (geometryMaybeCollection) ? geometryMaybeCollection.type === 'GeometryCollection' : false;\n        stopG = isGeometryCollection ? geometryMaybeCollection.geometries.length : 1;\n\n        for (g = 0; g < stopG; g++) {\n            geometry = isGeometryCollection ?\n                geometryMaybeCollection.geometries[g] : geometryMaybeCollection;\n\n            // Handle null Geometry\n            if (geometry === null) {\n                if (callback(null, featureIndex, featureProperties, featureBBox, featureId) === false) return false;\n                continue;\n            }\n            switch (geometry.type) {\n            case 'Point':\n            case 'LineString':\n            case 'MultiPoint':\n            case 'Polygon':\n            case 'MultiLineString':\n            case 'MultiPolygon': {\n                if (callback(geometry, featureIndex, featureProperties, featureBBox, featureId) === false) return false;\n                break;\n            }\n            case 'GeometryCollection': {\n                for (j = 0; j < geometry.geometries.length; j++) {\n                    if (callback(geometry.geometries[j], featureIndex, featureProperties, featureBBox, featureId) === false) return false;\n                }\n                break;\n            }\n            default:\n                throw new Error('Unknown Geometry Type');\n            }\n        }\n        // Only increase `featureIndex` per each feature\n        featureIndex++;\n    }\n}\n\n/**\n * Callback for geomReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback geomReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Geometry} currentGeometry The current Geometry being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {Object} featureProperties The current Feature Properties being processed.\n * @param {Array<number>} featureBBox The current Feature BBox being processed.\n * @param {number|string} featureId The current Feature Id being processed.\n */\n\n/**\n * Reduce geometry in any GeoJSON object, similar to Array.reduce().\n *\n * @name geomReduce\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (previousValue, currentGeometry, featureIndex, featureProperties, featureBBox, featureId)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {*} The value that results from the reduction.\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * turf.geomReduce(features, function (previousValue, currentGeometry, featureIndex, featureProperties, featureBBox, featureId) {\n *   //=previousValue\n *   //=currentGeometry\n *   //=featureIndex\n *   //=featureProperties\n *   //=featureBBox\n *   //=featureId\n *   return currentGeometry\n * });\n */\nfunction geomReduce(geojson, callback, initialValue) {\n    var previousValue = initialValue;\n    geomEach(geojson, function (currentGeometry, featureIndex, featureProperties, featureBBox, featureId) {\n        if (featureIndex === 0 && initialValue === undefined) previousValue = currentGeometry;\n        else previousValue = callback(previousValue, currentGeometry, featureIndex, featureProperties, featureBBox, featureId);\n    });\n    return previousValue;\n}\n\n/**\n * Callback for flattenEach\n *\n * @callback flattenEachCallback\n * @param {Feature} currentFeature The current flattened feature being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n */\n\n/**\n * Iterate over flattened features in any GeoJSON object, similar to\n * Array.forEach.\n *\n * @name flattenEach\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (currentFeature, featureIndex, multiFeatureIndex)\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.multiPoint([[40, 30], [36, 53]], {hello: 'world'})\n * ]);\n *\n * turf.flattenEach(features, function (currentFeature, featureIndex, multiFeatureIndex) {\n *   //=currentFeature\n *   //=featureIndex\n *   //=multiFeatureIndex\n * });\n */\nfunction flattenEach(geojson, callback) {\n    geomEach(geojson, function (geometry, featureIndex, properties, bbox, id) {\n        // Callback for single geometry\n        var type = (geometry === null) ? null : geometry.type;\n        switch (type) {\n        case null:\n        case 'Point':\n        case 'LineString':\n        case 'Polygon':\n            if (callback(feature(geometry, properties, {bbox: bbox, id: id}), featureIndex, 0) === false) return false;\n            return;\n        }\n\n        var geomType;\n\n        // Callback for multi-geometry\n        switch (type) {\n        case 'MultiPoint':\n            geomType = 'Point';\n            break;\n        case 'MultiLineString':\n            geomType = 'LineString';\n            break;\n        case 'MultiPolygon':\n            geomType = 'Polygon';\n            break;\n        }\n\n        for (var multiFeatureIndex = 0; multiFeatureIndex < geometry.coordinates.length; multiFeatureIndex++) {\n            var coordinate = geometry.coordinates[multiFeatureIndex];\n            var geom = {\n                type: geomType,\n                coordinates: coordinate\n            };\n            if (callback(feature(geom, properties), featureIndex, multiFeatureIndex) === false) return false;\n        }\n    });\n}\n\n/**\n * Callback for flattenReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback flattenReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Feature} currentFeature The current Feature being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n */\n\n/**\n * Reduce flattened features in any GeoJSON object, similar to Array.reduce().\n *\n * @name flattenReduce\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (previousValue, currentFeature, featureIndex, multiFeatureIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {*} The value that results from the reduction.\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.multiPoint([[40, 30], [36, 53]], {hello: 'world'})\n * ]);\n *\n * turf.flattenReduce(features, function (previousValue, currentFeature, featureIndex, multiFeatureIndex) {\n *   //=previousValue\n *   //=currentFeature\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   return currentFeature\n * });\n */\nfunction flattenReduce(geojson, callback, initialValue) {\n    var previousValue = initialValue;\n    flattenEach(geojson, function (currentFeature, featureIndex, multiFeatureIndex) {\n        if (featureIndex === 0 && multiFeatureIndex === 0 && initialValue === undefined) previousValue = currentFeature;\n        else previousValue = callback(previousValue, currentFeature, featureIndex, multiFeatureIndex);\n    });\n    return previousValue;\n}\n\n/**\n * Callback for segmentEach\n *\n * @callback segmentEachCallback\n * @param {Feature<LineString>} currentSegment The current Segment being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n * @param {number} geometryIndex The current index of the Geometry being processed.\n * @param {number} segmentIndex The current index of the Segment being processed.\n * @returns {void}\n */\n\n/**\n * Iterate over 2-vertex line segment in any GeoJSON object, similar to Array.forEach()\n * (Multi)Point geometries do not contain segments therefore they are ignored during this operation.\n *\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON\n * @param {Function} callback a method that takes (currentSegment, featureIndex, multiFeatureIndex, geometryIndex, segmentIndex)\n * @returns {void}\n * @example\n * var polygon = turf.polygon([[[-50, 5], [-40, -10], [-50, -10], [-40, 5], [-50, 5]]]);\n *\n * // Iterate over GeoJSON by 2-vertex segments\n * turf.segmentEach(polygon, function (currentSegment, featureIndex, multiFeatureIndex, geometryIndex, segmentIndex) {\n *   //=currentSegment\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   //=geometryIndex\n *   //=segmentIndex\n * });\n *\n * // Calculate the total number of segments\n * var total = 0;\n * turf.segmentEach(polygon, function () {\n *     total++;\n * });\n */\nfunction segmentEach(geojson, callback) {\n    flattenEach(geojson, function (feature$$1, featureIndex, multiFeatureIndex) {\n        var segmentIndex = 0;\n\n        // Exclude null Geometries\n        if (!feature$$1.geometry) return;\n        // (Multi)Point geometries do not contain segments therefore they are ignored during this operation.\n        var type = feature$$1.geometry.type;\n        if (type === 'Point' || type === 'MultiPoint') return;\n\n        // Generate 2-vertex line segments\n        var previousCoords;\n        if (coordEach(feature$$1, function (currentCoord, coordIndex, featureIndexCoord, mutliPartIndexCoord, geometryIndex) {\n            // Simulating a meta.coordReduce() since `reduce` operations cannot be stopped by returning `false`\n            if (previousCoords === undefined) {\n                previousCoords = currentCoord;\n                return;\n            }\n            var currentSegment = lineString([previousCoords, currentCoord], feature$$1.properties);\n            if (callback(currentSegment, featureIndex, multiFeatureIndex, geometryIndex, segmentIndex) === false) return false;\n            segmentIndex++;\n            previousCoords = currentCoord;\n        }) === false) return false;\n    });\n}\n\n/**\n * Callback for segmentReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback segmentReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Feature<LineString>} currentSegment The current Segment being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n * @param {number} geometryIndex The current index of the Geometry being processed.\n * @param {number} segmentIndex The current index of the Segment being processed.\n */\n\n/**\n * Reduce 2-vertex line segment in any GeoJSON object, similar to Array.reduce()\n * (Multi)Point geometries do not contain segments therefore they are ignored during this operation.\n *\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON\n * @param {Function} callback a method that takes (previousValue, currentSegment, currentIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {void}\n * @example\n * var polygon = turf.polygon([[[-50, 5], [-40, -10], [-50, -10], [-40, 5], [-50, 5]]]);\n *\n * // Iterate over GeoJSON by 2-vertex segments\n * turf.segmentReduce(polygon, function (previousSegment, currentSegment, featureIndex, multiFeatureIndex, geometryIndex, segmentIndex) {\n *   //= previousSegment\n *   //= currentSegment\n *   //= featureIndex\n *   //= multiFeatureIndex\n *   //= geometryIndex\n *   //= segmentInex\n *   return currentSegment\n * });\n *\n * // Calculate the total number of segments\n * var initialValue = 0\n * var total = turf.segmentReduce(polygon, function (previousValue) {\n *     previousValue++;\n *     return previousValue;\n * }, initialValue);\n */\nfunction segmentReduce(geojson, callback, initialValue) {\n    var previousValue = initialValue;\n    var started = false;\n    segmentEach(geojson, function (currentSegment, featureIndex, multiFeatureIndex, geometryIndex, segmentIndex) {\n        if (started === false && initialValue === undefined) previousValue = currentSegment;\n        else previousValue = callback(previousValue, currentSegment, featureIndex, multiFeatureIndex, geometryIndex, segmentIndex);\n        started = true;\n    });\n    return previousValue;\n}\n\n/**\n * Callback for lineEach\n *\n * @callback lineEachCallback\n * @param {Feature<LineString>} currentLine The current LineString|LinearRing being processed\n * @param {number} featureIndex The current index of the Feature being processed\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed\n * @param {number} geometryIndex The current index of the Geometry being processed\n */\n\n/**\n * Iterate over line or ring coordinates in LineString, Polygon, MultiLineString, MultiPolygon Features or Geometries,\n * similar to Array.forEach.\n *\n * @name lineEach\n * @param {Geometry|Feature<LineString|Polygon|MultiLineString|MultiPolygon>} geojson object\n * @param {Function} callback a method that takes (currentLine, featureIndex, multiFeatureIndex, geometryIndex)\n * @example\n * var multiLine = turf.multiLineString([\n *   [[26, 37], [35, 45]],\n *   [[36, 53], [38, 50], [41, 55]]\n * ]);\n *\n * turf.lineEach(multiLine, function (currentLine, featureIndex, multiFeatureIndex, geometryIndex) {\n *   //=currentLine\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   //=geometryIndex\n * });\n */\nfunction lineEach(geojson, callback) {\n    // validation\n    if (!geojson) throw new Error('geojson is required');\n\n    flattenEach(geojson, function (feature$$1, featureIndex, multiFeatureIndex) {\n        if (feature$$1.geometry === null) return;\n        var type = feature$$1.geometry.type;\n        var coords = feature$$1.geometry.coordinates;\n        switch (type) {\n        case 'LineString':\n            if (callback(feature$$1, featureIndex, multiFeatureIndex, 0, 0) === false) return false;\n            break;\n        case 'Polygon':\n            for (var geometryIndex = 0; geometryIndex < coords.length; geometryIndex++) {\n                if (callback(lineString(coords[geometryIndex], feature$$1.properties), featureIndex, multiFeatureIndex, geometryIndex) === false) return false;\n            }\n            break;\n        }\n    });\n}\n\n/**\n * Callback for lineReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback lineReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Feature<LineString>} currentLine The current LineString|LinearRing being processed.\n * @param {number} featureIndex The current index of the Feature being processed\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed\n * @param {number} geometryIndex The current index of the Geometry being processed\n */\n\n/**\n * Reduce features in any GeoJSON object, similar to Array.reduce().\n *\n * @name lineReduce\n * @param {Geometry|Feature<LineString|Polygon|MultiLineString|MultiPolygon>} geojson object\n * @param {Function} callback a method that takes (previousValue, currentLine, featureIndex, multiFeatureIndex, geometryIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {*} The value that results from the reduction.\n * @example\n * var multiPoly = turf.multiPolygon([\n *   turf.polygon([[[12,48],[2,41],[24,38],[12,48]], [[9,44],[13,41],[13,45],[9,44]]]),\n *   turf.polygon([[[5, 5], [0, 0], [2, 2], [4, 4], [5, 5]]])\n * ]);\n *\n * turf.lineReduce(multiPoly, function (previousValue, currentLine, featureIndex, multiFeatureIndex, geometryIndex) {\n *   //=previousValue\n *   //=currentLine\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   //=geometryIndex\n *   return currentLine\n * });\n */\nfunction lineReduce(geojson, callback, initialValue) {\n    var previousValue = initialValue;\n    lineEach(geojson, function (currentLine, featureIndex, multiFeatureIndex, geometryIndex) {\n        if (featureIndex === 0 && initialValue === undefined) previousValue = currentLine;\n        else previousValue = callback(previousValue, currentLine, featureIndex, multiFeatureIndex, geometryIndex);\n    });\n    return previousValue;\n}\n\n/**\n * Finds a particular 2-vertex LineString Segment from a GeoJSON using `@turf/meta` indexes.\n *\n * Negative indexes are permitted.\n * Point & MultiPoint will always return null.\n *\n * @param {FeatureCollection|Feature|Geometry} geojson Any GeoJSON Feature or Geometry\n * @param {Object} [options={}] Optional parameters\n * @param {number} [options.featureIndex=0] Feature Index\n * @param {number} [options.multiFeatureIndex=0] Multi-Feature Index\n * @param {number} [options.geometryIndex=0] Geometry Index\n * @param {number} [options.segmentIndex=0] Segment Index\n * @param {Object} [options.properties={}] Translate Properties to output LineString\n * @param {BBox} [options.bbox={}] Translate BBox to output LineString\n * @param {number|string} [options.id={}] Translate Id to output LineString\n * @returns {Feature<LineString>} 2-vertex GeoJSON Feature LineString\n * @example\n * var multiLine = turf.multiLineString([\n *     [[10, 10], [50, 30], [30, 40]],\n *     [[-10, -10], [-50, -30], [-30, -40]]\n * ]);\n *\n * // First Segment (defaults are 0)\n * turf.findSegment(multiLine);\n * // => Feature<LineString<[[10, 10], [50, 30]]>>\n *\n * // First Segment of 2nd Multi Feature\n * turf.findSegment(multiLine, {multiFeatureIndex: 1});\n * // => Feature<LineString<[[-10, -10], [-50, -30]]>>\n *\n * // Last Segment of Last Multi Feature\n * turf.findSegment(multiLine, {multiFeatureIndex: -1, segmentIndex: -1});\n * // => Feature<LineString<[[-50, -30], [-30, -40]]>>\n */\nfunction findSegment(geojson, options) {\n    // Optional Parameters\n    options = options || {};\n    if (!isObject(options)) throw new Error('options is invalid');\n    var featureIndex = options.featureIndex || 0;\n    var multiFeatureIndex = options.multiFeatureIndex || 0;\n    var geometryIndex = options.geometryIndex || 0;\n    var segmentIndex = options.segmentIndex || 0;\n\n    // Find FeatureIndex\n    var properties = options.properties;\n    var geometry;\n\n    switch (geojson.type) {\n    case 'FeatureCollection':\n        if (featureIndex < 0) featureIndex = geojson.features.length + featureIndex;\n        properties = properties || geojson.features[featureIndex].properties;\n        geometry = geojson.features[featureIndex].geometry;\n        break;\n    case 'Feature':\n        properties = properties || geojson.properties;\n        geometry = geojson.geometry;\n        break;\n    case 'Point':\n    case 'MultiPoint':\n        return null;\n    case 'LineString':\n    case 'Polygon':\n    case 'MultiLineString':\n    case 'MultiPolygon':\n        geometry = geojson;\n        break;\n    default:\n        throw new Error('geojson is invalid');\n    }\n\n    // Find SegmentIndex\n    if (geometry === null) return null;\n    var coords = geometry.coordinates;\n    switch (geometry.type) {\n    case 'Point':\n    case 'MultiPoint':\n        return null;\n    case 'LineString':\n        if (segmentIndex < 0) segmentIndex = coords.length + segmentIndex - 1;\n        return lineString([coords[segmentIndex], coords[segmentIndex + 1]], properties, options);\n    case 'Polygon':\n        if (geometryIndex < 0) geometryIndex = coords.length + geometryIndex;\n        if (segmentIndex < 0) segmentIndex = coords[geometryIndex].length + segmentIndex - 1;\n        return lineString([coords[geometryIndex][segmentIndex], coords[geometryIndex][segmentIndex + 1]], properties, options);\n    case 'MultiLineString':\n        if (multiFeatureIndex < 0) multiFeatureIndex = coords.length + multiFeatureIndex;\n        if (segmentIndex < 0) segmentIndex = coords[multiFeatureIndex].length + segmentIndex - 1;\n        return lineString([coords[multiFeatureIndex][segmentIndex], coords[multiFeatureIndex][segmentIndex + 1]], properties, options);\n    case 'MultiPolygon':\n        if (multiFeatureIndex < 0) multiFeatureIndex = coords.length + multiFeatureIndex;\n        if (geometryIndex < 0) geometryIndex = coords[multiFeatureIndex].length + geometryIndex;\n        if (segmentIndex < 0) segmentIndex = coords[multiFeatureIndex][geometryIndex].length - segmentIndex - 1;\n        return lineString([coords[multiFeatureIndex][geometryIndex][segmentIndex], coords[multiFeatureIndex][geometryIndex][segmentIndex + 1]], properties, options);\n    }\n    throw new Error('geojson is invalid');\n}\n\n/**\n * Finds a particular Point from a GeoJSON using `@turf/meta` indexes.\n *\n * Negative indexes are permitted.\n *\n * @param {FeatureCollection|Feature|Geometry} geojson Any GeoJSON Feature or Geometry\n * @param {Object} [options={}] Optional parameters\n * @param {number} [options.featureIndex=0] Feature Index\n * @param {number} [options.multiFeatureIndex=0] Multi-Feature Index\n * @param {number} [options.geometryIndex=0] Geometry Index\n * @param {number} [options.coordIndex=0] Coord Index\n * @param {Object} [options.properties={}] Translate Properties to output Point\n * @param {BBox} [options.bbox={}] Translate BBox to output Point\n * @param {number|string} [options.id={}] Translate Id to output Point\n * @returns {Feature<Point>} 2-vertex GeoJSON Feature Point\n * @example\n * var multiLine = turf.multiLineString([\n *     [[10, 10], [50, 30], [30, 40]],\n *     [[-10, -10], [-50, -30], [-30, -40]]\n * ]);\n *\n * // First Segment (defaults are 0)\n * turf.findPoint(multiLine);\n * // => Feature<Point<[10, 10]>>\n *\n * // First Segment of the 2nd Multi-Feature\n * turf.findPoint(multiLine, {multiFeatureIndex: 1});\n * // => Feature<Point<[-10, -10]>>\n *\n * // Last Segment of last Multi-Feature\n * turf.findPoint(multiLine, {multiFeatureIndex: -1, coordIndex: -1});\n * // => Feature<Point<[-30, -40]>>\n */\nfunction findPoint(geojson, options) {\n    // Optional Parameters\n    options = options || {};\n    if (!isObject(options)) throw new Error('options is invalid');\n    var featureIndex = options.featureIndex || 0;\n    var multiFeatureIndex = options.multiFeatureIndex || 0;\n    var geometryIndex = options.geometryIndex || 0;\n    var coordIndex = options.coordIndex || 0;\n\n    // Find FeatureIndex\n    var properties = options.properties;\n    var geometry;\n\n    switch (geojson.type) {\n    case 'FeatureCollection':\n        if (featureIndex < 0) featureIndex = geojson.features.length + featureIndex;\n        properties = properties || geojson.features[featureIndex].properties;\n        geometry = geojson.features[featureIndex].geometry;\n        break;\n    case 'Feature':\n        properties = properties || geojson.properties;\n        geometry = geojson.geometry;\n        break;\n    case 'Point':\n    case 'MultiPoint':\n        return null;\n    case 'LineString':\n    case 'Polygon':\n    case 'MultiLineString':\n    case 'MultiPolygon':\n        geometry = geojson;\n        break;\n    default:\n        throw new Error('geojson is invalid');\n    }\n\n    // Find Coord Index\n    if (geometry === null) return null;\n    var coords = geometry.coordinates;\n    switch (geometry.type) {\n    case 'Point':\n        return point(coords, properties, options);\n    case 'MultiPoint':\n        if (multiFeatureIndex < 0) multiFeatureIndex = coords.length + multiFeatureIndex;\n        return point(coords[multiFeatureIndex], properties, options);\n    case 'LineString':\n        if (coordIndex < 0) coordIndex = coords.length + coordIndex;\n        return point(coords[coordIndex], properties, options);\n    case 'Polygon':\n        if (geometryIndex < 0) geometryIndex = coords.length + geometryIndex;\n        if (coordIndex < 0) coordIndex = coords[geometryIndex].length + coordIndex;\n        return point(coords[geometryIndex][coordIndex], properties, options);\n    case 'MultiLineString':\n        if (multiFeatureIndex < 0) multiFeatureIndex = coords.length + multiFeatureIndex;\n        if (coordIndex < 0) coordIndex = coords[multiFeatureIndex].length + coordIndex;\n        return point(coords[multiFeatureIndex][coordIndex], properties, options);\n    case 'MultiPolygon':\n        if (multiFeatureIndex < 0) multiFeatureIndex = coords.length + multiFeatureIndex;\n        if (geometryIndex < 0) geometryIndex = coords[multiFeatureIndex].length + geometryIndex;\n        if (coordIndex < 0) coordIndex = coords[multiFeatureIndex][geometryIndex].length - coordIndex;\n        return point(coords[multiFeatureIndex][geometryIndex][coordIndex], properties, options);\n    }\n    throw new Error('geojson is invalid');\n}\n\nexport { coordEach, coordReduce, propEach, propReduce, featureEach, featureReduce, coordAll, geomEach, geomReduce, flattenEach, flattenReduce, segmentEach, segmentReduce, lineEach, lineReduce, findSegment, findPoint };\n","import { coordEach } from '@turf/meta';\nimport { isObject } from '@turf/helpers';\n\n/**\n * Takes a GeoJSON Feature or FeatureCollection and truncates the precision of the geometry.\n *\n * @name truncate\n * @param {GeoJSON} geojson any GeoJSON Feature, FeatureCollection, Geometry or GeometryCollection.\n * @param {Object} [options={}] Optional parameters\n * @param {number} [options.precision=6] coordinate decimal precision\n * @param {number} [options.coordinates=3] maximum number of coordinates (primarly used to remove z coordinates)\n * @param {boolean} [options.mutate=false] allows GeoJSON input to be mutated (significant performance increase if true)\n * @returns {GeoJSON} layer with truncated geometry\n * @example\n * var point = turf.point([\n *     70.46923055566859,\n *     58.11088890802906,\n *     1508\n * ]);\n * var options = {precision: 3, coordinates: 2};\n * var truncated = turf.truncate(point, options);\n * //=truncated.geometry.coordinates => [70.469, 58.111]\n *\n * //addToMap\n * var addToMap = [truncated];\n */\nfunction truncate(geojson, options) {\n    // Optional parameters\n    options = options || {};\n    if (!isObject(options)) throw new Error('options is invalid');\n    var precision = options.precision;\n    var coordinates = options.coordinates;\n    var mutate = options.mutate;\n\n    // default params\n    precision = (precision === undefined || precision === null || isNaN(precision)) ? 6 : precision;\n    coordinates = (coordinates === undefined || coordinates === null || isNaN(coordinates)) ? 3 : coordinates;\n\n    // validation\n    if (!geojson) throw new Error('<geojson> is required');\n    if (typeof precision !== 'number') throw new Error('<precision> must be a number');\n    if (typeof coordinates !== 'number') throw new Error('<coordinates> must be a number');\n\n    // prevent input mutation\n    if (mutate === false || mutate === undefined) geojson = JSON.parse(JSON.stringify(geojson));\n\n    var factor = Math.pow(10, precision);\n\n    // Truncate Coordinates\n    coordEach(geojson, function (coords) {\n        truncateCoords(coords, factor, coordinates);\n    });\n    return geojson;\n}\n\n/**\n * Truncate Coordinates - Mutates coordinates in place\n *\n * @private\n * @param {Array<any>} coords Geometry Coordinates\n * @param {number} factor rounding factor for coordinate decimal precision\n * @param {number} coordinates maximum number of coordinates (primarly used to remove z coordinates)\n * @returns {Array<any>} mutated coordinates\n */\nfunction truncateCoords(coords, factor, coordinates) {\n    // Remove extra coordinates (usually elevation coordinates and more)\n    if (coords.length > coordinates) coords.splice(coordinates, coords.length);\n\n    // Truncate coordinate decimals\n    for (var i = 0; i < coords.length; i++) {\n        coords[i] = Math.round(coords[i] * factor) / factor;\n    }\n    return coords;\n}\n\nexport default truncate;\n","import { isNumber } from '@turf/helpers';\n\n/**\n * Unwrap a coordinate from a Point Feature, Geometry or a single coordinate.\n *\n * @name getCoord\n * @param {Array<number>|Geometry<Point>|Feature<Point>} coord GeoJSON Point or an Array of numbers\n * @returns {Array<number>} coordinates\n * @example\n * var pt = turf.point([10, 10]);\n *\n * var coord = turf.getCoord(pt);\n * //= [10, 10]\n */\nfunction getCoord(coord) {\n    if (!coord) throw new Error('coord is required');\n    if (coord.type === 'Feature' && coord.geometry !== null && coord.geometry.type === 'Point') return coord.geometry.coordinates;\n    if (coord.type === 'Point') return coord.coordinates;\n    if (Array.isArray(coord) && coord.length >= 2 && coord[0].length === undefined && coord[1].length === undefined) return coord;\n\n    throw new Error('coord must be GeoJSON Point or an Array of numbers');\n}\n\n/**\n * Unwrap coordinates from a Feature, Geometry Object or an Array\n *\n * @name getCoords\n * @param {Array<any>|Geometry|Feature} coords Feature, Geometry Object or an Array\n * @returns {Array<any>} coordinates\n * @example\n * var poly = turf.polygon([[[119.32, -8.7], [119.55, -8.69], [119.51, -8.54], [119.32, -8.7]]]);\n *\n * var coords = turf.getCoords(poly);\n * //= [[[119.32, -8.7], [119.55, -8.69], [119.51, -8.54], [119.32, -8.7]]]\n */\nfunction getCoords(coords) {\n    if (!coords) throw new Error('coords is required');\n\n    // Feature\n    if (coords.type === 'Feature' && coords.geometry !== null) return coords.geometry.coordinates;\n\n    // Geometry\n    if (coords.coordinates) return coords.coordinates;\n\n    // Array of numbers\n    if (Array.isArray(coords)) return coords;\n\n    throw new Error('coords must be GeoJSON Feature, Geometry Object or an Array');\n}\n\n/**\n * Checks if coordinates contains a number\n *\n * @name containsNumber\n * @param {Array<any>} coordinates GeoJSON Coordinates\n * @returns {boolean} true if Array contains a number\n */\nfunction containsNumber(coordinates) {\n    if (coordinates.length > 1 && isNumber(coordinates[0]) && isNumber(coordinates[1])) {\n        return true;\n    }\n\n    if (Array.isArray(coordinates[0]) && coordinates[0].length) {\n        return containsNumber(coordinates[0]);\n    }\n    throw new Error('coordinates must only contain numbers');\n}\n\n/**\n * Enforce expectations about types of GeoJSON objects for Turf.\n *\n * @name geojsonType\n * @param {GeoJSON} value any GeoJSON object\n * @param {string} type expected GeoJSON type\n * @param {string} name name of calling function\n * @throws {Error} if value is not the expected type.\n */\nfunction geojsonType(value, type, name) {\n    if (!type || !name) throw new Error('type and name required');\n\n    if (!value || value.type !== type) {\n        throw new Error('Invalid input to ' + name + ': must be a ' + type + ', given ' + value.type);\n    }\n}\n\n/**\n * Enforce expectations about types of {@link Feature} inputs for Turf.\n * Internally this uses {@link geojsonType} to judge geometry types.\n *\n * @name featureOf\n * @param {Feature} feature a feature with an expected geometry type\n * @param {string} type expected GeoJSON type\n * @param {string} name name of calling function\n * @throws {Error} error if value is not the expected type.\n */\nfunction featureOf(feature, type, name) {\n    if (!feature) throw new Error('No feature passed');\n    if (!name) throw new Error('.featureOf() requires a name');\n    if (!feature || feature.type !== 'Feature' || !feature.geometry) {\n        throw new Error('Invalid input to ' + name + ', Feature with geometry required');\n    }\n    if (!feature.geometry || feature.geometry.type !== type) {\n        throw new Error('Invalid input to ' + name + ': must be a ' + type + ', given ' + feature.geometry.type);\n    }\n}\n\n/**\n * Enforce expectations about types of {@link FeatureCollection} inputs for Turf.\n * Internally this uses {@link geojsonType} to judge geometry types.\n *\n * @name collectionOf\n * @param {FeatureCollection} featureCollection a FeatureCollection for which features will be judged\n * @param {string} type expected GeoJSON type\n * @param {string} name name of calling function\n * @throws {Error} if value is not the expected type.\n */\nfunction collectionOf(featureCollection, type, name) {\n    if (!featureCollection) throw new Error('No featureCollection passed');\n    if (!name) throw new Error('.collectionOf() requires a name');\n    if (!featureCollection || featureCollection.type !== 'FeatureCollection') {\n        throw new Error('Invalid input to ' + name + ', FeatureCollection required');\n    }\n    for (var i = 0; i < featureCollection.features.length; i++) {\n        var feature = featureCollection.features[i];\n        if (!feature || feature.type !== 'Feature' || !feature.geometry) {\n            throw new Error('Invalid input to ' + name + ', Feature with geometry required');\n        }\n        if (!feature.geometry || feature.geometry.type !== type) {\n            throw new Error('Invalid input to ' + name + ': must be a ' + type + ', given ' + feature.geometry.type);\n        }\n    }\n}\n\n/**\n * Get Geometry from Feature or Geometry Object\n *\n * @param {Feature|Geometry} geojson GeoJSON Feature or Geometry Object\n * @returns {Geometry|null} GeoJSON Geometry Object\n * @throws {Error} if geojson is not a Feature or Geometry Object\n * @example\n * var point = {\n *   \"type\": \"Feature\",\n *   \"properties\": {},\n *   \"geometry\": {\n *     \"type\": \"Point\",\n *     \"coordinates\": [110, 40]\n *   }\n * }\n * var geom = turf.getGeom(point)\n * //={\"type\": \"Point\", \"coordinates\": [110, 40]}\n */\nfunction getGeom(geojson) {\n    if (!geojson) throw new Error('geojson is required');\n    if (geojson.geometry !== undefined) return geojson.geometry;\n    if (geojson.coordinates || geojson.geometries) return geojson;\n    throw new Error('geojson must be a valid Feature or Geometry Object');\n}\n\n/**\n * Get Geometry Type from Feature or Geometry Object\n *\n * @throws {Error} **DEPRECATED** in v5.0.0 in favor of getType\n */\nfunction getGeomType() {\n    throw new Error('invariant.getGeomType has been deprecated in v5.0 in favor of invariant.getType');\n}\n\n/**\n * Get GeoJSON object's type, Geometry type is prioritize.\n *\n * @param {GeoJSON} geojson GeoJSON object\n * @param {string} [name=\"geojson\"] name of the variable to display in error message\n * @returns {string} GeoJSON type\n * @example\n * var point = {\n *   \"type\": \"Feature\",\n *   \"properties\": {},\n *   \"geometry\": {\n *     \"type\": \"Point\",\n *     \"coordinates\": [110, 40]\n *   }\n * }\n * var geom = turf.getType(point)\n * //=\"Point\"\n */\nfunction getType(geojson, name) {\n    if (!geojson) throw new Error((name || 'geojson') + ' is required');\n    // GeoJSON Feature & GeometryCollection\n    if (geojson.geometry && geojson.geometry.type) return geojson.geometry.type;\n    // GeoJSON Geometry & FeatureCollection\n    if (geojson.type) return geojson.type;\n    throw new Error((name || 'geojson') + ' is invalid');\n}\n\nexport { getCoord, getCoords, containsNumber, geojsonType, featureOf, collectionOf, getGeom, getGeomType, getType };\n","import { feature } from '@turf/helpers';\nimport { getCoords, getType } from '@turf/invariant';\n\n/**\n * Removes redundant coordinates from any GeoJSON Geometry.\n *\n * @name cleanCoords\n * @param {Geometry|Feature} geojson Feature or Geometry\n * @param {Object} [options={}] Optional parameters\n * @param {boolean} [options.mutate=false] allows GeoJSON input to be mutated\n * @returns {Geometry|Feature} the cleaned input Feature/Geometry\n * @example\n * var line = turf.lineString([[0, 0], [0, 2], [0, 5], [0, 8], [0, 8], [0, 10]]);\n * var multiPoint = turf.multiPoint([[0, 0], [0, 0], [2, 2]]);\n *\n * turf.cleanCoords(line).geometry.coordinates;\n * //= [[0, 0], [0, 10]]\n *\n * turf.cleanCoords(multiPoint).geometry.coordinates;\n * //= [[0, 0], [2, 2]]\n */\nfunction cleanCoords(geojson, options) {\n    // Backwards compatible with v4.0\n    var mutate = (typeof options === 'object') ? options.mutate : options;\n    if (!geojson) throw new Error('geojson is required');\n    var type = getType(geojson);\n\n    // Store new \"clean\" points in this Array\n    var newCoords = [];\n\n    switch (type) {\n    case 'LineString':\n        newCoords = cleanLine(geojson);\n        break;\n    case 'MultiLineString':\n    case 'Polygon':\n        getCoords(geojson).forEach(function (line) {\n            newCoords.push(cleanLine(line));\n        });\n        break;\n    case 'MultiPolygon':\n        getCoords(geojson).forEach(function (polygons) {\n            var polyPoints = [];\n            polygons.forEach(function (ring) {\n                polyPoints.push(cleanLine(ring));\n            });\n            newCoords.push(polyPoints);\n        });\n        break;\n    case 'Point':\n        return geojson;\n    case 'MultiPoint':\n        var existing = {};\n        getCoords(geojson).forEach(function (coord) {\n            var key = coord.join('-');\n            if (!existing.hasOwnProperty(key)) {\n                newCoords.push(coord);\n                existing[key] = true;\n            }\n        });\n        break;\n    default:\n        throw new Error(type + ' geometry not supported');\n    }\n\n    // Support input mutation\n    if (geojson.coordinates) {\n        if (mutate === true) {\n            geojson.coordinates = newCoords;\n            return geojson;\n        }\n        return {type: type, coordinates: newCoords};\n    } else {\n        if (mutate === true) {\n            geojson.geometry.coordinates = newCoords;\n            return geojson;\n        }\n        return feature({type: type, coordinates: newCoords}, geojson.properties, geojson.bbox, geojson.id);\n    }\n}\n\n/**\n * Clean Coords\n *\n * @private\n * @param {Array<number>|LineString} line Line\n * @returns {Array<number>} Cleaned coordinates\n */\nfunction cleanLine(line) {\n    var points = getCoords(line);\n    // handle \"clean\" segment\n    if (points.length === 2 && !equals(points[0], points[1])) return points;\n\n    var prevPoint, point, nextPoint;\n    var newPoints = [];\n    var secondToLast = points.length - 1;\n\n    newPoints.push(points[0]);\n    for (var i = 1; i < secondToLast; i++) {\n        prevPoint = points[i - 1];\n        point = points[i];\n        nextPoint = points[i + 1];\n\n        if (!isPointOnLineSegment(prevPoint, nextPoint, point)) {\n            newPoints.push(point);\n        }\n    }\n    newPoints.push(nextPoint);\n    return newPoints;\n}\n\n/**\n * Compares two points and returns if they are equals\n *\n * @private\n * @param {Position} pt1 point\n * @param {Position} pt2 point\n * @returns {boolean} true if they are equals\n */\nfunction equals(pt1, pt2) {\n    return pt1[0] === pt2[0] && pt1[1] === pt2[1];\n}\n\n/**\n * Returns if `point` is on the segment between `start` and `end`.\n * Borrowed from `@turf/boolean-point-on-line` to speed up the evaluation (instead of using the module as dependency)\n *\n * @private\n * @param {Position} start coord pair of start of line\n * @param {Position} end coord pair of end of line\n * @param {Position} point coord pair of point to check\n * @returns {boolean} true/false\n */\nfunction isPointOnLineSegment(start, end, point) {\n    var x = point[0], y = point[1];\n    var startX = start[0], startY = start[1];\n    var endX = end[0], endY = end[1];\n\n    var dxc = x - startX;\n    var dyc = y - startY;\n    var dxl = endX - startX;\n    var dyl = endY - startY;\n    var cross = dxc * dyl - dyc * dxl;\n\n    if (cross !== 0) return false;\n    else if (Math.abs(dxl) >= Math.abs(dyl)) return dxl > 0 ? startX <= x && x <= endX : endX <= x && x <= startX;\n    else return dyl > 0 ? startY <= y && y <= endY : endY <= y && y <= startY;\n}\n\nexport default cleanCoords;\n","import { GeoJSONReader, GeoJSONWriter, OverlayOp } from 'turf-jsts';\nimport truncate from '@turf/truncate';\nimport { getGeom } from '@turf/invariant';\nimport { feature } from '@turf/helpers';\nimport cleanCoords from '@turf/clean-coords';\n\n// depend on jsts for now http://bjornharrtell.github.io/jsts/\n/**\n * Takes two {@link Polygon|polygons} and finds their intersection. If they share a border, returns the border; if they don't intersect, returns undefined.\n *\n * @name intersect\n * @param {Feature<Polygon>} poly1 the first polygon\n * @param {Feature<Polygon>} poly2 the second polygon\n * @returns {Feature|null} returns a feature representing the point(s) they share (in case of a {@link Point}  or {@link MultiPoint}), the borders they share (in case of a {@link LineString} or a {@link MultiLineString}), the area they share (in case of {@link Polygon} or {@link MultiPolygon}). If they do not share any point, returns `null`.\n * @example\n * var poly1 = turf.polygon([[\n *   [-122.801742, 45.48565],\n *   [-122.801742, 45.60491],\n *   [-122.584762, 45.60491],\n *   [-122.584762, 45.48565],\n *   [-122.801742, 45.48565]\n * ]]);\n *\n * var poly2 = turf.polygon([[\n *   [-122.520217, 45.535693],\n *   [-122.64038, 45.553967],\n *   [-122.720031, 45.526554],\n *   [-122.669906, 45.507309],\n *   [-122.723464, 45.446643],\n *   [-122.532577, 45.408574],\n *   [-122.487258, 45.477466],\n *   [-122.520217, 45.535693]\n * ]]);\n *\n * var intersection = turf.intersect(poly1, poly2);\n *\n * //addToMap\n * var addToMap = [poly1, poly2, intersection];\n */\nfunction intersect(poly1, poly2) {\n    var geom1 = getGeom(poly1);\n    var geom2 = getGeom(poly2);\n\n    // Return null if geometry is too narrow in coordinate precision\n    // fixes topology errors with JSTS\n    // https://github.com/Turfjs/turf/issues/463\n    // https://github.com/Turfjs/turf/pull/1004\n    if (cleanCoords(truncate(geom2, {precision: 4})).coordinates[0].length < 4) return null;\n    if (cleanCoords(truncate(geom1, {precision: 4})).coordinates[0].length < 4) return null;\n\n    var reader = new GeoJSONReader();\n    var a = reader.read(truncate(geom1));\n    var b = reader.read(truncate(geom2));\n    var intersection = OverlayOp.intersection(a, b);\n\n    // https://github.com/Turfjs/turf/issues/951\n    if (intersection.isEmpty()) return null;\n\n    var writer = new GeoJSONWriter();\n    var geom = writer.write(intersection);\n    return feature(geom);\n}\n\nexport default intersect;\n","import { geomReduce } from '@turf/meta';\n\n/**\n * Takes one or more features and returns their area in square meters.\n *\n * @name area\n * @param {GeoJSON} geojson input GeoJSON feature(s)\n * @returns {number} area in square meters\n * @example\n * var polygon = turf.polygon([[[125, -15], [113, -22], [154, -27], [144, -15], [125, -15]]]);\n *\n * var area = turf.area(polygon);\n *\n * //addToMap\n * var addToMap = [polygon]\n * polygon.properties.area = area\n */\nfunction area(geojson) {\n    return geomReduce(geojson, function (value, geom) {\n        return value + calculateArea(geom);\n    }, 0);\n}\n\nvar RADIUS = 6378137;\n// var FLATTENING_DENOM = 298.257223563;\n// var FLATTENING = 1 / FLATTENING_DENOM;\n// var POLAR_RADIUS = RADIUS * (1 - FLATTENING);\n\n/**\n * Calculate Area\n *\n * @private\n * @param {GeoJSON} geojson GeoJSON\n * @returns {number} area\n */\nfunction calculateArea(geojson) {\n    var area = 0, i;\n    switch (geojson.type) {\n    case 'Polygon':\n        return polygonArea(geojson.coordinates);\n    case 'MultiPolygon':\n        for (i = 0; i < geojson.coordinates.length; i++) {\n            area += polygonArea(geojson.coordinates[i]);\n        }\n        return area;\n    case 'Point':\n    case 'MultiPoint':\n    case 'LineString':\n    case 'MultiLineString':\n        return 0;\n    case 'GeometryCollection':\n        for (i = 0; i < geojson.geometries.length; i++) {\n            area += calculateArea(geojson.geometries[i]);\n        }\n        return area;\n    }\n}\n\nfunction polygonArea(coords) {\n    var area = 0;\n    if (coords && coords.length > 0) {\n        area += Math.abs(ringArea(coords[0]));\n        for (var i = 1; i < coords.length; i++) {\n            area -= Math.abs(ringArea(coords[i]));\n        }\n    }\n    return area;\n}\n\n/**\n * @private\n * Calculate the approximate area of the polygon were it projected onto the earth.\n * Note that this area will be positive if ring is oriented clockwise, otherwise it will be negative.\n *\n * Reference:\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007 http://trs-new.jpl.nasa.gov/dspace/handle/2014/40409\n *\n * @param {Array<Array<number>>} coords Ring Coordinates\n * @returns {number} The approximate signed geodesic area of the polygon in square meters.\n */\nfunction ringArea(coords) {\n    var p1;\n    var p2;\n    var p3;\n    var lowerIndex;\n    var middleIndex;\n    var upperIndex;\n    var i;\n    var area = 0;\n    var coordsLength = coords.length;\n\n    if (coordsLength > 2) {\n        for (i = 0; i < coordsLength; i++) {\n            if (i === coordsLength - 2) { // i = N-2\n                lowerIndex = coordsLength - 2;\n                middleIndex = coordsLength - 1;\n                upperIndex = 0;\n            } else if (i === coordsLength - 1) { // i = N-1\n                lowerIndex = coordsLength - 1;\n                middleIndex = 0;\n                upperIndex = 1;\n            } else { // i = 0 to N-3\n                lowerIndex = i;\n                middleIndex = i + 1;\n                upperIndex = i + 2;\n            }\n            p1 = coords[lowerIndex];\n            p2 = coords[middleIndex];\n            p3 = coords[upperIndex];\n            area += (rad(p3[0]) - rad(p1[0])) * Math.sin(rad(p2[1]));\n        }\n\n        area = area * RADIUS * RADIUS / 2;\n    }\n\n    return area;\n}\n\nfunction rad(_) {\n    return _ * Math.PI / 180;\n}\n\nexport default area;\n","import { GeoJSONReader, GeoJSONWriter, OverlayOp } from 'turf-jsts';\nimport area from '@turf/area';\nimport { feature } from '@turf/helpers';\nimport { getGeom } from '@turf/invariant';\nimport { flattenEach } from '@turf/meta';\n\n/**\n * Finds the difference between two {@link Polygon|polygons} by clipping the second polygon from the first.\n *\n * @name difference\n * @param {Feature<Polygon|MultiPolygon>} polygon1 input Polygon feature\n * @param {Feature<Polygon|MultiPolygon>} polygon2 Polygon feature to difference from polygon1\n * @returns {Feature<Polygon|MultiPolygon>|null} a Polygon or MultiPolygon feature showing the area of `polygon1` excluding the area of `polygon2` (if empty returns `null`)\n * @example\n * var polygon1 = turf.polygon([[\n *   [128, -26],\n *   [141, -26],\n *   [141, -21],\n *   [128, -21],\n *   [128, -26]\n * ]], {\n *   \"fill\": \"#F00\",\n *   \"fill-opacity\": 0.1\n * });\n * var polygon2 = turf.polygon([[\n *   [126, -28],\n *   [140, -28],\n *   [140, -20],\n *   [126, -20],\n *   [126, -28]\n * ]], {\n *   \"fill\": \"#00F\",\n *   \"fill-opacity\": 0.1\n * });\n *\n * var difference = turf.difference(polygon1, polygon2);\n *\n * //addToMap\n * var addToMap = [polygon1, polygon2, difference];\n */\nfunction difference(polygon1, polygon2) {\n    var geom1 = getGeom(polygon1);\n    var geom2 = getGeom(polygon2);\n    var properties = polygon1.properties || {};\n\n    // Issue #721 - JSTS can't handle empty polygons\n    geom1 = removeEmptyPolygon(geom1);\n    geom2 = removeEmptyPolygon(geom2);\n    if (!geom1) return null;\n    if (!geom2) return feature(geom1, properties);\n\n    // JSTS difference operation\n    var reader = new GeoJSONReader();\n    var a = reader.read(geom1);\n    var b = reader.read(geom2);\n    var differenced = OverlayOp.difference(a, b);\n    if (differenced.isEmpty()) return null;\n    var writer = new GeoJSONWriter();\n    var geom = writer.write(differenced);\n\n    return feature(geom, properties);\n}\n\n/**\n * Detect Empty Polygon\n *\n * @private\n * @param {Geometry<Polygon|MultiPolygon>} geom Geometry Object\n * @returns {Geometry<Polygon|MultiPolygon>|null} removed any polygons with no areas\n */\nfunction removeEmptyPolygon(geom) {\n    switch (geom.type) {\n    case 'Polygon':\n        if (area(geom) > 1) return geom;\n        return null;\n    case 'MultiPolygon':\n        var coordinates = [];\n        flattenEach(geom, function (feature$$1) {\n            if (area(feature$$1) > 1) coordinates.push(feature$$1.geometry.coordinates);\n        });\n        if (coordinates.length) return {type: 'MultiPolygon', coordinates: coordinates};\n    }\n}\n\nexport default difference;\n","function normalizeComponent(template, style, script, scopeId, isFunctionalTemplate, moduleIdentifier /* server only */, shadowMode, createInjector, createInjectorSSR, createInjectorShadow) {\r\n    if (typeof shadowMode !== 'boolean') {\r\n        createInjectorSSR = createInjector;\r\n        createInjector = shadowMode;\r\n        shadowMode = false;\r\n    }\r\n    // Vue.extend constructor export interop.\r\n    const options = typeof script === 'function' ? script.options : script;\r\n    // render functions\r\n    if (template && template.render) {\r\n        options.render = template.render;\r\n        options.staticRenderFns = template.staticRenderFns;\r\n        options._compiled = true;\r\n        // functional template\r\n        if (isFunctionalTemplate) {\r\n            options.functional = true;\r\n        }\r\n    }\r\n    // scopedId\r\n    if (scopeId) {\r\n        options._scopeId = scopeId;\r\n    }\r\n    let hook;\r\n    if (moduleIdentifier) {\r\n        // server build\r\n        hook = function (context) {\r\n            // 2.3 injection\r\n            context =\r\n                context || // cached call\r\n                    (this.$vnode && this.$vnode.ssrContext) || // stateful\r\n                    (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext); // functional\r\n            // 2.2 with runInNewContext: true\r\n            if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\r\n                context = __VUE_SSR_CONTEXT__;\r\n            }\r\n            // inject component styles\r\n            if (style) {\r\n                style.call(this, createInjectorSSR(context));\r\n            }\r\n            // register component module identifier for async chunk inference\r\n            if (context && context._registeredComponents) {\r\n                context._registeredComponents.add(moduleIdentifier);\r\n            }\r\n        };\r\n        // used by ssr in case component is cached and beforeCreate\r\n        // never gets called\r\n        options._ssrRegister = hook;\r\n    }\r\n    else if (style) {\r\n        hook = shadowMode\r\n            ? function (context) {\r\n                style.call(this, createInjectorShadow(context, this.$root.$options.shadowRoot));\r\n            }\r\n            : function (context) {\r\n                style.call(this, createInjector(context));\r\n            };\r\n    }\r\n    if (hook) {\r\n        if (options.functional) {\r\n            // register for functional component in vue file\r\n            const originalRender = options.render;\r\n            options.render = function renderWithStyleInjection(h, context) {\r\n                hook.call(context);\r\n                return originalRender(h, context);\r\n            };\r\n        }\r\n        else {\r\n            // inject component registration as beforeCreate hook\r\n            const existing = options.beforeCreate;\r\n            options.beforeCreate = existing ? [].concat(existing, hook) : [hook];\r\n        }\r\n    }\r\n    return script;\r\n}\n\nexport default normalizeComponent;\n//# sourceMappingURL=normalize-component.mjs.map\n","const isOldIE = typeof navigator !== 'undefined' &&\r\n    /msie [6-9]\\\\b/.test(navigator.userAgent.toLowerCase());\r\nfunction createInjector(context) {\r\n    return (id, style) => addStyle(id, style);\r\n}\r\nlet HEAD;\r\nconst styles = {};\r\nfunction addStyle(id, css) {\r\n    const group = isOldIE ? css.media || 'default' : id;\r\n    const style = styles[group] || (styles[group] = { ids: new Set(), styles: [] });\r\n    if (!style.ids.has(id)) {\r\n        style.ids.add(id);\r\n        let code = css.source;\r\n        if (css.map) {\r\n            // https://developer.chrome.com/devtools/docs/javascript-debugging\r\n            // this makes source maps inside style tags work properly in Chrome\r\n            code += '\\n/*# sourceURL=' + css.map.sources[0] + ' */';\r\n            // http://stackoverflow.com/a/26603875\r\n            code +=\r\n                '\\n/*# sourceMappingURL=data:application/json;base64,' +\r\n                    btoa(unescape(encodeURIComponent(JSON.stringify(css.map)))) +\r\n                    ' */';\r\n        }\r\n        if (!style.element) {\r\n            style.element = document.createElement('style');\r\n            style.element.type = 'text/css';\r\n            if (css.media)\r\n                style.element.setAttribute('media', css.media);\r\n            if (HEAD === undefined) {\r\n                HEAD = document.head || document.getElementsByTagName('head')[0];\r\n            }\r\n            HEAD.appendChild(style.element);\r\n        }\r\n        if ('styleSheet' in style.element) {\r\n            style.styles.push(code);\r\n            style.element.styleSheet.cssText = style.styles\r\n                .filter(Boolean)\r\n                .join('\\n');\r\n        }\r\n        else {\r\n            const index = style.ids.size - 1;\r\n            const textNode = document.createTextNode(code);\r\n            const nodes = style.element.childNodes;\r\n            if (nodes[index])\r\n                style.element.removeChild(nodes[index]);\r\n            if (nodes.length)\r\n                style.element.insertBefore(textNode, nodes[index]);\r\n            else\r\n                style.element.appendChild(textNode);\r\n        }\r\n    }\r\n}\n\nexport default createInjector;\n//# sourceMappingURL=browser.mjs.map\n","<template>\n  <div id=\"app\">\n    <div id=\"map\">\n      <div class=\"control leaflet-bar\">\n        <h4>Input Data</h4>\n        <select @change=\"setInput\">\n          <option>Asia</option>\n          <option>Almost Parallel Segments</option>\n          <option>Saw & Cheese</option>\n        </select>\n        <br><br>\n        <div\n          v-for=\"operation in operations\"\n          :key=\"operation\"\n        >\n          <input\n            v-model=\"selectedOperation\"\n            type=\"radio\"\n            name=\"some\"\n            :value=\"operation\"\n            @change=\"setOperation\"\n          > {{ operation }}\n        </div>\n\n        <h4>Performance</h4>\n        <p>\n          polygon-clipping {{ performance }} m/s<br>\n          martinez {{ martinezPerf }} m/s<br>\n          jsts {{ jstsPerf }} m/s<br>\n        </p>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\n\nimport pc from '../..'\n\nimport {\n  union as martinezUnion,\n  intersection as martinezIntersection,\n  diff as martinezDifference,\n  xor as martinezXor,\n} from 'martinez-polygon-clipping'\n\n// turf v5 runs off of jsts under the hood\nimport jstsUnion from '@turf/union'\nimport jstsIntersection from '@turf/intersect'\nimport jstsDifference from '@turf/difference'\nvar jstsXor = null\n\nvar operation = pc.intersection\nvar martinezOp = martinezUnion\nvar jstsOp = jstsUnion\nvar inData = null\nvar inLayer = null\nvar outLayer = null\nvar map = null\n\nimport asia from '../geojson/asia-with-poly.json'\nimport parallel from '../geojson/parallel.json'\nimport cheese from '../geojson/cheese.json'\n\nexport default {\n  name: 'App',\n  data () {\n    return {\n      operations: ['Intersection', 'Union', 'Difference', 'XOR'],\n      selectedOperation: 'Intersection',\n      performance: '',\n      martinezPerf: '',\n      jstsPerf: ''\n    }\n  },\n  mounted () {\n    inData = asia\n    map = window.map = L.map('map', {\n      minZoom: 1,\n      maxZoom: 20,\n      center: [0, 0],\n      zoom: 2,\n      crs: L.CRS.Simple\n    })\n\n    inLayer = L.geoJson(asia).addTo(map)\n\n    map.fitBounds(inLayer.getBounds(), {\n      padding: [20, 20]\n    })\n    outLayer = L.geoJson({\n      type: 'FeatureCollection',\n      features: []\n    }, {\n      color: 'red'\n    }).addTo(map)\n\n    this.runOperation()\n  },\n  methods: {\n    setInput (e) {\n      inLayer.clearLayers()\n      outLayer.clearLayers()\n      if (e.target.value === 'Asia') inData = asia\n      if (e.target.value === 'Almost Parallel Segments') inData = parallel\n      if (e.target.value === 'Saw & Cheese') inData = cheese\n      inLayer.addData(inData)\n      map.fitBounds(inLayer.getBounds(), {\n        padding: [20, 20]\n      })\n      this.runOperation()\n    },\n    setOperation (e) {\n      this.selectedOperation = e.target.value\n      outLayer.clearLayers()\n\n      if (this.selectedOperation === 'Union') {\n        operation = pc.union\n        martinezOp = martinezUnion\n        jstsOp = jstsUnion\n      }\n      if (this.selectedOperation === 'Intersection') {\n        operation = pc.intersection\n        martinezOp = martinezIntersection\n        jstsOp = jstsIntersection\n      }\n      if (this.selectedOperation === 'XOR') {\n        operation = pc.xor\n        martinezOp = martinezXor\n        jstsOp = jstsXor\n      }\n      if (this.selectedOperation === 'Difference') {\n        operation = pc.difference\n        martinezOp = martinezDifference\n        jstsOp = jstsDifference\n      }\n\n      this.runOperation()\n    },\n    runOperation () {\n      var t0 = performance.now()\n      var outData = operation(inData.features[0].geometry.coordinates, inData.features[1].geometry.coordinates)\n      this.performance = (performance.now() - t0).toFixed(2)\n\n      outLayer.addData({\n        'type': 'MultiPolygon',\n        'coordinates': outData\n      }).addTo(map)\n\n      var m0 = performance.now()\n      martinezOp(inData.features[0].geometry.coordinates, inData.features[1].geometry.coordinates)\n      this.martinezPerf = (performance.now() - m0).toFixed(2)\n\n      if (jstsOp !== null) {\n        var j0 = performance.now()\n        jstsOp(inData.features[0], inData.features[1])\n        this.jstsPerf = (performance.now() - j0).toFixed(2)\n      } else {\n        this.jstsPerf = 'N/A'\n      }\n    }\n  }\n}\n</script>\n\n<style>\n    html, body, #app, #map {\n      width: 100%;\n      height: 100%;\n      margin: 0px;\n    }\n\n  .control {\n    position: absolute;\n    top: 10px;\n    right: 10px;\n    background: white;\n    padding: 10px;\n    z-index: 10000;\n  }\n\n  h4{\n    margin-bottom: 5px\n  }\n  p{\n    margin-top: 5px;\n  }\n</style>\n","import Vue from 'vue'\nimport App from './App.vue'\n\nnew Vue({\n  el: '#app',\n  render: h => h(App)\n})\n"],"names":["_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","protoProps","staticProps","prototype","isInBbox","bbox","point","ll","x","ur","y","getBboxOverlap","b1","b2","lowerX","upperX","epsilon","Number","EPSILON","undefined","Math","pow","EPSILON_SQ","cmp","a","b","ab","PtRounder","this","reset","value","xRounder","CoordRounder","yRounder","round","tree","SplayTree","coord","node","add","prevNode","prev","remove","nextNode","next","rounder","crossProduct","dotProduct","compareVectorAngles","basePt","endPt1","endPt2","v1","v2","kross","v","sqrt","cosineOfAngle","pShared","pBase","pAngle","vBase","vAngle","horizontalIntersection","pt","verticalIntersection","SweepEvent","isLeft","events","push","ptCmp","comparePoints","link","Segment","compare","segment","aPt","bPt","other","Error","otherEvents","iMax","evt","checkForConsuming","numEvents","evt1","consumedBy","j","evt2","otherSE","consume","ringOut","isInResult","baseEvent","_this","cache","Map","fillCache","linkedEvent","nextEvent","set","sine","cosine","has","_cache$get","get","asine","acosine","_cache$get2","bsine","bcosine","segmentId","leftSE","rightSE","rings","windings","id","alx","blx","arx","brx","aly","bly","ary","bry","aCmpBLeft","comparePoint","bCmpARight","bCmpALeft","aCmpBRight","_bCmpARight","_aCmpBRight","ay","ax","by","bx","newRightSE","y1","y2","isAnEndpoint","lPt","rPt","vector","yDist","xFromYDist","xDist","yFromXDist","tBbox","oBbox","bboxOverlap","tlp","trp","olp","orp","touchesOtherLSE","touchesThisLSE","touchesOtherRSE","touchesThisRSE","pt1","pt2","ve","d1","d2","intersection","newEvents","alreadyLinked","newLeftSE","oldRightSE","replaceRightSE","newSeg","slice","swapEvents","tmpEvt","consumer","consumee","tmp","_tmp","ring","winding","index","indexOf","_prevInResult","prevInResult","_beforeState","seg","afterState","multiPolys","_afterState","beforeState","ringsAfter","windingsAfter","mpsAfter","polysAfter","polysExclude","_i","_iMax","_ring","poly","isExterior","_index","splice","_i2","_iMax2","mp","multiPoly","_isInResult","mpsBefore","operation","type","noBefores","noAfters","least","most","numMultiPolys","diff","abs","isJustSubject","mps","isSubject","concat","leftPt","rightPt","cmpPts","RingIn","geomRing","Array","isArray","segments","firstPoint","prevPoint","fromRing","sweepEvents","PolyIn","geomPoly","exteriorRing","interiorRings","getSweepEvents","ringSweepEvents","jMax","MultiPolyIn","geom","ex","polys","POSITIVE_INFINITY","NEGATIVE_INFINITY","polySweepEvents","RingOut","allSegments","ringsOut","prevEvent","event","startingPoint","intersectionLEs","availableLEs","getAvailableLinkedEvents","firstPt","lastPt","indexLE","comparator","getLeftmostComparator","sort","intersectionLE","ringEvents","unshift","reverse","prevPt","points","_pt","_nextPt","nextPt","shift","step","isExteriorRing","iStart","iEnd","orderedPoints","_isExteriorRing","enclosing","enclosingRing","_enclosingRing","_calcEnclosingRing","leftMostEvt","prevSeg","prevPrevSeg","PolyOut","getGeom","ringGeom","MultiPolyOut","_composePolys","polyGeom","addInterior","SweepLine","queue","arguments","insert","find","nextSeg","prevMySplitter","prevInter","getIntersection","newEventsFromSplit","_splitSafely","nextMySplitter","nextInter","_newEventsFromSplit","mySplitter","_newEventsFromSplit2","split","inter","_newEventsFromSplit3","_i3","_iMax3","_newEventsFromSplit4","_i4","_iMax4","POLYGON_CLIPPING_MAX_QUEUE_SIZE","process","env","POLYGON_CLIPPING_MAX_SWEEPLINE_SEGMENTS","Operation","moreGeoms","multipolys","subject","mpA","_j","_jMax","size","sweepLine","prevQueueSize","pop","_evt","factory","_len","_key","run","_len2","_key2","_len3","_key3","subjectGeom","_len4","clippingGeoms","_key4","DEFAULT_COMPARE","noDuplicates","_compare","_root","_size","_noDuplicates","right","left","parent","p","rotateRight","rotateLeft","gp","ggp","l","r","u","data","z","comp","splay","minNode","replace","s","t","sMax","maxNode","returnValue","successor","predecessor","callback","current","done","low","high","fn","ctx","Q","call","keys","values","presort","loadRecursive","load","start","end","middle","floor","pivot","computeFields","inOut","otherInOut","isVertical","inResult","resultTransition","isIn","thisIn","thatIn","determineResultTransition","otherEvent","edgeType","otherPos","outputContourId","p0","p1","isBelow","copy","contourId","equals","p2","splitter","sum","elen","e","flen","f","h","Qnew","hh","bvirt","enow","fnow","eindex","findex","hindex","vec","n","Float64Array","B","C1","C2","D","orient2d","cx","cy","detleft","detright","det","detsum","acxtail","acytail","bcxtail","bcytail","c","ahi","alo","bhi","blo","_0","s1","s0","t1","t0","u3","acx","bcx","acy","bcy","estimate","errbound","C1len","C2len","Dlen","orient2dadapt","signedArea","res","compareEvents","e1","e2","specialCases","divideSegment","se","console","warn","possibleIntersection","se1","se2","a1","a2","noEndpointTouch","va","vb","toPoint","d","sqrKross","sqrLenA","sa","sb","smin","min","smax","max","nintersections","leftCoincide","rightCoincide","compareSegments","le1","le2","isAbove","Contour","holeIds","holeOf","depth","nextPos","pos","resultEvents","processed","origPos","newPos","connectEdges","sortedEvents","len","sorted","orderEvents","contours","contour","lowerContourId","lowerContour","parentContourId","initializeContourFromContext","markAsProcessed","initial","TinyQueue","defaultCompare","_down","item","_up","top","peek","halfLength","best","processPolygon","contourOrHole","s2","EMPTY","boolean","clipping","trivial","result","trivialOperation","sbbox","Infinity","cbbox","eventQueue","polygonSet","ii","jj","Queue","fillQueue","compareBBoxes","begin","Tree","rightbound","prevprev","subdivideSegments","polygons","holeId","union","xor","arrayLike","relativeStart","parseInt","relativeEnd","isFinite","isInteger","val","parseFloat","isNaN","trunc","ceil","NumberUtil","interfaces_","getClass","equalsWithTolerance","x1","x2","tolerance","IllegalArgumentException","message","name","stack","__proto__","create","constructor","Double","staticAccessors$1","MAX_VALUE","doubleToLongBits","longBitsToDouble","isInfinite","defineProperties","Comparable","Clonable","Comparator","Serializable","Coordinate","NULL_ORDINATE","staticAccessors","DimensionalComparator","serialVersionUID","X","Y","Z","setOrdinate","ordinateIndex","equals2D","getOrdinate","equals3D","equalInZ","compareTo","o","clone","toString","distance3D","dx","dy","dz","distance","hashCode","setCoordinate","NaN","dimensionsToTest","_dimensionsToTest","dimensionsToTest$1","o1","o2","c1","c2","compX","compY","CoordinateSequenceFactory","Location","staticAccessors$4","INTERIOR","BOUNDARY","EXTERIOR","NONE","toLocationSymbol","locationValue","hasInterface","MathUtil","staticAccessors$5","LOG_10","log10","ln","log","v3","v4","clamp","x$1","min$1","max$1","wrap","v1$1","v2$1","v3$1","average","StringBuffer","str","append","setCharAt","substr","Integer","intValue","Character","isWhitespace","toUpperCase","DD","_hi","_lo","init","dd","parse","hi","lo","staticAccessors$7","PI","TWO_PI","PI_2","E","EPS","SPLIT","MAX_PRINT_DIGITS","TEN","ONE","SCI_NOT_EXPONENT_CHAR","SCI_NOT_ZERO","le","extractSignificantDigits","insertDecimalPoint","magnitude","mag","scale","divide","gt","lt","multiply","decimalPointPos","buf","numDigits","digit","rebiasBy10","digitChar","subtract","valueOf","selfAdd","continueExtractingDigits","remMag","sqr","doubleValue","negate","y$1","isZero","selfSubtract","getSpecialNumberString","selfDivide","yhi","ylo","hc","tc","hy","ty","C","U","dump","zhi","zlo","createNaN","ge","exp","selfMultiply","reciprocal","fhi","flo","rint","setValue","value$1","isNegative","axdd","H","S","H$1","T","S$1","s$1","e$1","f$1","hx","tx","selfSqr","toStandardNotation","toSciNotation","specialStr","fill","sigDigits","num","charAt","stringOfChar","numZeroes","digits","expStr","trailingDigits","substring","digitsWithDecimal","isPositive","signum","strlen","signCh","numBeforeDec","ch","isDigit","val2","numDecPlaces","scale$1","xAbs","xLog10","xMag","CGAlgorithmsDD","staticAccessors$6","DP_SAFE_EPSILON","orientationIndex","q","orientationIndexFilter","dx1","dy1","dx2","dy2","signOfDet2x2","q1","q2","denom1","denom2","denom","numx1","numx2","fracP","numy1","numy2","fracQ","pa","pb","pc","CoordinateSequence","staticAccessors$8","M","getCoordinate","getCoordinateCopy","getDimension","getX","expandEnvelope","getY","toCoordinateArray","Exception","NotRepresentableException","Exception$$1","System","arraycopy","src","srcPos","dest","destPos","getProperty","line.separator","HCoordinate","w","_x","_y","p1$1","p2$1","_x$1","_y$1","_w","p1$2","p2$2","px","py","pw","qx","qy","qw","xInt","yInt","Envelope","_minx","_maxx","_miny","_maxy","staticAccessors$9","getArea","getWidth","getHeight","otherEnvelope","isNull","getMaxX","getMaxY","getMinX","getMinY","intersects","intMinX","intMinY","intMaxX","intMaxY","covers","expandToInclude","minExtent","translate","transX","transY","setToNull","maxExtent","expandBy","deltaX","deltaY","contains","centre","minq","maxq","minp","maxp","regExes","typeStr","emptyTypeStr","spaces","parenComma","doubleParenComma","trimParens","WKTParser","geometryFactory","GeometryFactory","read","wkt","geometry","matches","exec","search","toLowerCase","parse$1","apply","write","extractGeometry","getGeometryType","extract$1","wktType","isEmpty","coordinate","coordinate$1","point$1","_coordinates","multipoint","multipoint$1","array","_geometries","join","linestring","linestring$1","_points","linearring","linearring$1","multilinestring","multilinestring$1","polygon","polygon$1","_shell","_holes","multipolygon","multipolygon$1","geometrycollection","collection","createPoint","coords","trim","createMultiPoint","components","createLineString","createLinearRing","line","createMultiLineString","lines","createPolygon","shell","holes","createMultiPolygon","createGeometryCollection","wktArray","WKTWriter","parser","toLineString","RuntimeException","AssertionFailedException","RuntimeException$$1","Assert","shouldNeverReachHere","isTrue","expectedValue","actualValue","LineIntersector","_result","_inputLines","map","_intPt","_intLineIndex","_isProper","_pa","_pb","_precisionModel","staticAccessors$10","DONT_INTERSECT","DO_INTERSECT","COLLINEAR","NO_INTERSECTION","POINT_INTERSECTION","COLLINEAR_INTERSECTION","getIndexAlongSegment","segmentIndex","intIndex","computeIntLineIndex","getTopologySummary","catBuf","isEndPoint","isCollinear","computeIntersection","p3","p4","computeIntersect","getIntersectionNum","dist0","getEdgeDistance","dist1","isProper","hasIntersection","setPrecisionModel","precisionModel","isInteriorIntersection","this$1","inputLineIndex","computeEdgeDistance","getEndpoint","ptIndex","isIntersection","getIntersectionAlongSegment","dist","pdx","pdy","nonRobustComputeEdgeDistance","RobustLineIntersector","LineIntersector$$1","isInSegmentEnvelopes","intPt","env0","env1","CGAlgorithms","normalizeToMinimum","n1","n2","n3","n4","normPt","smallestInAbsValue","safeHCoordinateIntersection","nearestEndpoint","intersectionWithNormalization","makePrecise","x3","x4","xabs","checkDD","intPtDD","out","println","normalizeToEnvCentre","computeCollinearIntersection","p1q1p2","p1q2p2","q1p1q2","q1p2q2","n00","n01","n10","n11","minX0","minY0","maxX0","maxY0","minX1","minY1","maxX1","maxY1","intMidX","intMidY","Pq1","Pq2","Qp1","Qp2","nearestPt","minDist","distancePointLine","RobustDeterminant","sign","swap","k","RayCrossingCounter","_p","_crossingCount","_isPointOnSegment","countSegment","minx","maxx","xIntSign","isPointInPolygon","getLocation","isOnSegment","locatePointInRing","counter","p$1","ring$1","counter$1","i$1","staticAccessors$3","CLOCKWISE","RIGHT","COUNTERCLOCKWISE","LEFT","STRAIGHT","x0","x0$1","sum$1","distanceLineLine","A","noIntersection","rNumb","isPointInRing","computeLength","pts","y0","isCCW","nPts","hiPt","hiIndex","iPrev","iNext","disc","computeOrientation","distancePointLinePerpendicular","len2","minDistance","isOnLine","lineIntersector","GeometryComponentFilter","filter","Geometry","_envelope","_factory","_SRID","_userData","getSRID","staticAccessors$11","SORTINDEX_POINT","SORTINDEX_MULTIPOINT","SORTINDEX_LINESTRING","SORTINDEX_LINEARRING","SORTINDEX_MULTILINESTRING","SORTINDEX_POLYGON","SORTINDEX_MULTIPOLYGON","SORTINDEX_GEOMETRYCOLLECTION","geometryChangedFilter","isGeometryCollection","getSortIndex","getFactory","getGeometryN","isRectangle","g$1","equalsTopo","g","equalsExact","geometryChanged","geometryChangedAction","equalsNorm","norm","getLength","getNumGeometries","compareToSameClass","other$1","getUserData","getEnvelope","toGeometry","getEnvelopeInternal","checkNotGeometryCollection","equal","normalize","getPrecisionModel","computeEnvelopeInternal","setSRID","SRID","setUserData","userData","iterator","hasNext","aElement","bElement","comparison","isGeometryCollectionOrDerived","hasNonEmptyElements","geometries","hasNullElements","CoordinateFilter","BoundaryNodeRule","staticAccessors$12","Mod2BoundaryNodeRule","EndPointBoundaryNodeRule","MultiValentEndPointBoundaryNodeRule","MonoValentEndPointBoundaryNodeRule","MOD2_BOUNDARY_RULE","ENDPOINT_BOUNDARY_RULE","MULTIVALENT_ENDPOINT_BOUNDARY_RULE","MONOVALENT_ENDPOINT_BOUNDARY_RULE","OGC_SFS_BOUNDARY_RULE","isInBoundary","boundaryCount","Collection","IndexOutOfBoundsException","addAll","toArray","Iterator","List","Collection$$1","NoSuchElementException","ArrayList","List$$1","array_","ensureCapacity","clear","element","oldElement","Iterator_","found","Iterator$$1","arrayList","arrayList_","position_","CoordinateList","ArrayList$$1","coord$1","allowRepeated","coordArrayType","coll","isChanged","coord$2","allowRepeated$1","last","obj","allowRepeated$2","coord$3","allowRepeated$3","direction","i$2","i$3","coord$4","allowRepeated$4","coord$5","allowRepeated$5","inc","closeRing","CoordinateArrays","staticAccessors$13","ForwardComparator","BidirectionalComparator","isRing","ptNotInList","testPts","testPt","scroll","coordinates","firstCoordinate","newCoordinates","coord1","coord2","coord1$1","coord2$1","coordinateComparator","coordList","hasRepeatedPoints","removeRepeatedPoints","mid","removeNull","nonNull","newCoord","copyDeep","srcStart","destStart","isEqualReversed","pts1","pts2","envelope","atLeastNCoordinatesOrNothing","increasingDirection","minCoordinate","minCoord","extract","npts","extractPts","iPts","forwardComp","OLDcompare","dir1","dir2","i1","i2","comparePt","Map$1","put","entrySet","SortedMap","OperationNotSupported","Set","HashSet","Set$$1","Iterator_$1","hashSet","hashSet_","colorOf","color","parentOf","setColor","leftOf","rightOf","TreeMap","root_","size_","getValue","getKey","oldValue","fixAfterInsertion","getFirstEntry","Lineal","SortedSet","TreeSet","Iterator_$2","treeSet","treeSet_","Arrays","asList","Dimension","staticAccessors$14","P","L","FALSE","TRUE","DONTCARE","SYM_FALSE","SYM_TRUE","SYM_DONTCARE","SYM_P","SYM_L","SYM_A","toDimensionSymbol","dimensionValue","toDimensionValue","dimensionSymbol","GeometryFilter","CoordinateSequenceFilter","seq","isDone","isGeometryChanged","GeometryCollection","Geometry$$1","getCoordinates","getNumPoints","childCoordinates","area","isEquivalentClass","otherCollection","getBoundaryDimension","dimension","numPoints","revGeoms","theseElements","otherElements","o$1","gc","thisGeom","otherGeom","holeComp","filter$1","filter$2","filter$3","getBoundary","MultiLineString","GeometryCollection$$1","isClosed","nLines","revLines","BoundaryOp","lineStrings","_geom","_geomFact","_bnRule","_endpointMap","bnRule","geom$1","bnRule$1","boundaryMultiLineString","mLine","getEmptyMultiPoint","bdyPts","computeBoundaryCoordinates","createMultiPointFromCoords","LineString","boundaryLineString","getStartPoint","getEndPoint","addEndpoint","getCoordinateN","it","entry","valence","count","Counter","bop","bop$1","PrintStream","StringReader","DecimalFormat","ByteArrayOutputStream","IOException","LineNumberReader","StringUtil","staticAccessors$15","NEWLINE","SIMPLE_ORDINATE_FORMAT","chars","String","getStackTrace","os","ps","printStackTrace","t$1","stackTrace","stringReader","lineNumberReader","readLine","separator","separatorlen","tokenList","tmpString","token","format","CoordinateSequences","copyCoord","minDim","dim","isEqual","cs1","cs2","cs1Size","extend","fact","newseq","cs","ensureValidRing","createClosedRing","isSimple","otherLineString","getPointN","line$1","ls","getCoordinateSequence","getCoordinateSequenceFactory","isCoordinate","Puntal","Point","Polygonal","Polygon","shellCoordinates","getNumInteriorRing","prevX","prevY","otherPolygon","thisShell","otherPolygonShell","clockwise","uniqueCoordinates","convexHull","getExteriorRing","otherShell","thisShell$1","otherShell$1","shellComp","nHole1","nHole2","thisHole","getInteriorRingN","otherHole","MultiPoint","isValid","LinearRing","LineString$$1","validateConstruction","MINIMUM_VALID_SIZE","MultiPolygon","allRings","allRingsArray","GeometryEditor","_isUserDataCopied","staticAccessors$16","NoOpGeometryOperation","CoordinateOperation","CoordinateSequenceOperation","setCopyUserData","isUserDataCopied","edit","editInternal","editGeometryCollection","editPolygon","getName","collectionForType","newPolygon","hole","GeometryEditorOperation","editCoordinates","CoordinateArraySequence","_dimension","coordSeq","size$1","dimension$1","staticAccessors$18","cloneCoordinates","strBuf","CoordinateArraySequenceFactory","staticAccessors$17","instanceObject","readResolve","HashMap","MapInterface","map_","entries","forEach","PrecisionModel","_modelType","_scale","FLOATING","Type","modelType","FIXED","setScale","pm","staticAccessors$19","maximumPreciseValue","otherPrecisionModel","getMaximumSignificantDigits","otherSigDigits","getScale","isFloating","FLOATING_SINGLE","getType","description","maxSigDigits","mostPrecise","pm1","pm2","_name","nameToTypeMap","staticAccessors$1$1","_coordinateSequenceFactory","getDefaultCoordinateSequenceFactory","staticAccessors$2","buildGeometry","geomList","geomClass","isHeterogeneous","hasGeometryCollection","partClass","toGeometryArray","geom0","toPolygonArray","toLineStringArray","toPointArray","coordinates$1","shell$1","createGeometry","ptSeq","toMultiPolygonArray","multiPolygons","multiPolygonArray","geometryArray","toMultiLineStringArray","multiLineStrings","multiLineStringArray","lineStringArray","toMultiPointArray","multiPoints","multiPointArray","toLinearRingArray","linearRings","linearRingArray","pointArray","polygonArray","createPointFromInternalCoord","exemplar","geometryTypes","GeoJSONParser","json","JSON","Feature","feature","FeatureCollection","featureCollection","features","sub","linearRing","geoJson","shellGeoJson","holeGeoJson","GeoJSONReader","reducePrecision","GeoJSONWriter","Position","staticAccessors$20","ON","EmptyStackException","Stack","opposite","position","empty","RightmostEdgeFinder","_minIndex","_minCoord","_minDe","_orientedDe","getRightmostSide","de","side","getRightmostSideOfSegment","checkForRightmostCoordinate","findRightmostEdgeAtVertex","getEdge","pPrev","pNext","orientation","usePrev","findRightmostEdgeAtNode","star","getNode","getEdges","getRightmostEdge","isForward","getSym","findEdge","dirEdgeList","TopologyException","msg","msgWithCoord","LinkedList","addLast","removeFirst","BufferSubgraph","_finder","_dirEdgeList","_nodes","_rightMostCoord","_env","clearVisitedEdges","setVisited","getRightmostCoordinate","computeNodeDepth","startEdge","isVisited","computeDepths","de$1","copySymDepths","computeDepth","outsideDepth","setEdgeDepths","addReachable","findResultEdges","getDepth","isInteriorAreaEdge","setInResult","nodesVisited","nodeQueue","startNode","sym","adjNode","graph","edgeEnv","nodeStack","setDepth","symNode","getNodes","getDirectedEdges","TopologyLocation","location","on","gl","on$1","setAllLocations","locValue","setAllLocationsIfNull","isLine","merge","newLoc","getLocations","flip","temp","setLocations","posIndex","isArea","isAnyNull","setLocation","locIndex","locValue$1","isEqualOnSide","allPositionsEqual","loc","Label","elt","onLoc","lbl","geomIndex","onLoc$1","onLoc$2","leftLoc","rightLoc","geomIndex$1","onLoc$3","leftLoc$1","rightLoc$1","getGeometryCount","location$1","toLine","toLineLabel","label","lineLabel","EdgeRing","_startDe","_maxNodeDegree","_edges","_pts","_label","_isHole","_geometryFactory","computePoints","computeRing","isIsolated","isFirstEdge","getEdgeRing","getLabel","mergeLabel","addPoints","setEdgeRing","getNext","getLinearRing","computeMaxNodeDegree","degree","getOutgoingDegree","edge","edgePts","startIndex","startIndex$1","isHole","containsPoint","addHole","isShell","getMaxNodeDegree","getShell","deLabel","deLabel$1","setShell","toPolygon","holeLR","MinimalEdgeRing","EdgeRing$$1","er","setMinEdgeRing","getNextMin","MaximalEdgeRing","buildMinimalRings","minEdgeRings","getMinEdgeRing","minEr","linkDirectedEdgesForMinimalEdgeRings","linkMinimalDirectedEdges","GraphComponent","_isCovered","_isCoveredSet","_isVisited","isCovered","isCoveredSet","setLabel","setCovered","updateIM","im","computeIM","Node","GraphComponent$$1","_coord","edges","isIncidentEdgeInResult","print","computeMergedLocation","label2","eltIndex","nLoc","argIndex","onLocation","thisLoc","setNode","setLabelBoundary","NodeMap","nodeMap","nodeFact","addNode","createNode","node$1","getBoundaryNodes","bdyNodes","Quadrant","staticAccessors$21","NE","NW","SW","SE","isNorthern","quad","isOpposite","quad1","quad2","commonHalfPlane","isInHalfPlane","halfPlane","quadrant","EdgeEnd","_edge","_node","_p0","_p1","_dx","_dy","_quadrant","edge$1","edge$2","p0$1","label$1","compareDirection","getDy","angle","atan2","className","lastDotPos","lastIndexOf","getDirectedCoordinate","getDx","getQuadrant","computeLabel","boundaryNodeRule","DirectedEdge","EdgeEnd$$1","_isForward","_sym","_next","_nextMin","_edgeRing","_minEdgeRing","_depth","computeDirectedLabel","depthVal","setNextMin","nextMin","getDepthDelta","minEdgeRing","isLineEdge","isExteriorIfArea0","isExteriorIfArea1","edgeRing","depthDelta","printEdge","printReverse","setSym","setVisitedEdge","directionFactor","oppositePos","oppositeDepth","setNext","depthFactor","currLocation","nextLocation","NodeFactory","PlanarGraph","_edgeEndList","printEdges","eiList","getNodeIterator","linkResultDirectedEdges","nodeit","debugPrintln","isBoundaryNode","linkAllDirectedEdges","matchInSameDirection","ep0","ep1","getEdgeEnds","debugPrint","getEdgeIterator","findEdgeInSameDirection","eCoord","insertEdge","findEdgeEnd","ee","addEdges","edgesToAdd","de1","de2","nodes","PolygonBuilder","_shellList","sortShellsAndHoles","edgeRings","shellList","freeHoleList","computePolygons","resultPolyList","placeFreeHoles","findEdgeRingContaining","buildMinimalEdgeRings","maxEdgeRings","findShell","placePolygonHoles","buildMaximalEdgeRings","dirEdges","getPolygons","testEr","testRing","testEnv","minShell","minEnv","tryShell","tryRing","tryEnv","isContained","shellCount","Boundable","getBounds","ItemBoundable","_bounds","_item","bounds","getItem","PriorityQueue","_items","poll","minItem","reorder","child","ItemVisitor","visitItem","SpatialIndex","itemEnv","query","AbstractNode","_childBoundables","_level","level","staticAccessors$22","getLevel","getChildBoundables","addChildBoundable","childBoundable","computeBounds","Collections","reverseOrder","alen","singletonList","BoundablePair","_boundable1","_boundable2","_distance","_itemDistance","boundable1","boundable2","itemDistance","expandToQueue","priQ","isComp1","isComposite","isComp2","expand","isLeaves","nd","bndComposite","bndOther","bp","getDistance","getBoundable","AbstractSTRtree","_built","_itemBoundables","_nodeCapacity","nodeCapacity","DEFAULT_NODE_CAPACITY","nodeCapacity$1","staticAccessors$23","IntersectsOp","getNodeCapacity","lastNode","build","removeItem","childToRemove","itemsTree","valuesTree","valuesTreeForNode","valuesTreeForChild","boundablesAtLevel","boundables","level$1","boundables$1","boundable","searchBounds","getIntersectsOp","searchBounds$1","visitor","searchBounds$2","visitor$1","childBoundables","searchBounds$3","matches$1","childBoundables$1","childBoundable$1","createHigherLevels","getRoot","item$1","childToPrune","boundablesOfALevel","parentBoundables","createParentBoundables","maxChildDepth","childDepth","newLevel","sortedChildBoundables","getComparator","compareDoubles","ItemDistance","item1","item2","STRtree","AbstractSTRtree$$1","STRtreeNode","xComparator","yComparator","intersectsOp","createParentBoundablesFromVerticalSlices","verticalSlices","createParentBoundablesFromVerticalSlice","sliceCount","sliceCapacity","slices","boundablesAddedToSlice","searchEnv","searchEnv$1","minLeafCount","nearestNeighbour","itemDist","initBndPair","itemDist$1","bp$1","initBndPair$1","maxDistance","distanceLowerBound","minPair","bndPair","currentDistance","itemDist$2","bnd","bp$2","centreX","avg","centreY","aBounds","bBounds","AbstractNode$$1","SegmentPointComparator","relativeSign","octant","xSign","ySign","compareValue","compareSign0","compareSign1","SegmentNode","_segString","_segmentOctant","_isInterior","segString","segmentOctant","maxSegmentIndex","isInterior","SegmentNodeList","_nodeMap","getSplitCoordinates","addEndpoints","eiPrev","ei","addEdgeCoordinates","addCollapsedNodes","collapsedVertexIndexes","findCollapsesFromInsertedNodes","findCollapsesFromExistingVertices","vertexIndex","ei0","ei1","lastSegStartPt","useIntPt1","addSplitEdges","edgeList","newEdge","createSplitEdge","findCollapseIndex","collapsedVertexIndex","numVerticesBetween","maxSegIndex","ipt","NodedSegmentString","getData","eiNew","getSegmentOctant","checkSplitEdgesCorrectness","splitEdges","pt0","splitnPts","ptn","Octant","adx","ady","dx$1","dy$1","SegmentString","setData","NodableSegmentString","addIntersection","_nodeList","_data","safeOctant","intPt$1","addIntersectionNode","li","segmentIndex$1","getNodeList","normalizedSegmentIndex","nextSegIndex","addIntersections","getNodedSubstrings","segStrings","resultEdgelist","segStrings$1","resultEdgelist$1","ss","LineSegment","staticAccessors$24","minX","orient0","orient1","geomFactory","project","projectionFactor","pf0","pf1","newp0","newp1","distancePerpendicular","minY","midPoint","closestPoints","closestPt","close00","closestPoint","close01","close10","close11","factor","maxX","comp0","lineIntersection","maxY","pointAlongOffset","segmentLengthFraction","offsetDistance","segx","segy","ux","uy","setCoordinates","segmentFraction","inputPt","segFrac","isHorizontal","pointAlong","bits0","hash0","bits1","MonotoneChainOverlapAction","tempEnv1","tempEnv2","_overlapSeg1","_overlapSeg2","overlap","mc1","start1","mc2","start2","getLineSegment","MonotoneChain","_start","_end","_context","_id","context","computeSelect","start0","end0","mcs","select","computeOverlaps","mc","mco","computeOverlapsInternal","setId","getEndIndex","getStartIndex","getContext","getId","end1","p00","p01","p10","p11","mid0","mid1","MonotoneChainBuilder","getChainStartIndices","startIndexList","findChainEnd","toIntArray","safeStart","chainQuad","getChains","pts$1","mcList","list","Noder","computeNodes","SinglePassNoder","_segInt","segInt","setSegmentIntersector","MCIndexNoder","SinglePassNoder$$1","si","_monoChains","_idCounter","_nodedSegStrings","_nOverlaps","SegmentOverlapAction","getMonotoneChains","getIndex","segStr","inputSegStrings","intersectChains","overlapAction","queryChain","testChain","MonotoneChainOverlapAction$$1","_si","ss1","ss2","processIntersections","BufferParameters","_quadrantSegments","DEFAULT_QUADRANT_SEGMENTS","_endCapStyle","CAP_ROUND","_joinStyle","JOIN_ROUND","_mitreLimit","DEFAULT_MITRE_LIMIT","_isSingleSided","_simplifyFactor","DEFAULT_SIMPLIFY_FACTOR","quadrantSegments","setQuadrantSegments","quadrantSegments$1","endCapStyle","setEndCapStyle","quadrantSegments$2","endCapStyle$1","joinStyle","mitreLimit","setJoinStyle","setMitreLimit","staticAccessors$25","CAP_FLAT","CAP_SQUARE","JOIN_MITRE","JOIN_BEVEL","getEndCapStyle","isSingleSided","quadSegs","getJoinStyle","setSimplifyFactor","simplifyFactor","getSimplifyFactor","getQuadrantSegments","getMitreLimit","setSingleSided","bufferDistanceError","alpha","cos","BufferInputLineSimplifier","inputLine","_distanceTol","_isDeleted","_angleOrientation","_inputLine","staticAccessors$26","INIT","DELETE","KEEP","NUM_PTS_TO_CHECK","isDeletable","i0","distanceTol","isConcave","isShallow","isShallowSampled","deleteShallowConcavities","midIndex","findNextNonDeletedIndex","lastIndex","isMiddleVertexDeleted","isShallowConcavity","simplify","collapseLine","OffsetSegmentString","_ptList","_minimimVertexDistance","staticAccessors$28","COORDINATE_ARRAY_TYPE","addPt","bufPt","isRedundant","revere","addPts","startPt","setMinimumVertexDistance","minimimVertexDistance","Angle","staticAccessors$29","PI_TIMES_2","PI_OVER_2","PI_OVER_4","toDegrees","radians","isAcute","dx0","dy0","isObtuse","interiorAngle","anglePrev","angleNext","normalizePositive","angleBetween","tip1","tail","tip2","ang1","ang2","delAngle","toRadians","angleDegrees","getTurn","crossproduct","sin","angleBetweenOriented","angDel","OffsetSegmentGenerator","_maxCurveSegmentError","_filletAngleQuantum","_closingSegLengthFactor","_segList","_bufParams","_li","_s0","_s1","_s2","_seg0","_seg1","_offset0","_offset1","_side","_hasNarrowConcaveAngle","bufParams","MAX_CLOSING_SEG_LEN_FACTOR","staticAccessors$27","OFFSET_SEGMENT_SEPARATION_FACTOR","INSIDE_TURN_VERTEX_SNAP_DISTANCE_FACTOR","CURVE_VERTEX_SNAP_DISTANCE_FACTOR","addNextSegment","addStartPoint","computeOffsetSegment","outsideTurn","addCollinear","addOutsideTurn","addInsideTurn","addLineEndCap","offsetL","offsetR","addFilletArc","squareCapSideOffset","squareCapLOffset","squareCapROffset","addMitreJoin","offset0","offset1","isMitreWithinLimit","addLimitedMitreJoin","addFilletCorner","radius","startAngle","endAngle","addBevelJoin","createSquare","addSegments","addFirstSegment","addLastSegment","initSideSegments","ang0","angDiffHalf","midAng","mitreMidAng","mitreDist","bevelHalfLen","bevelMidX","bevelMidY","bevelMidPt","mitreMidLine","bevelEndLeft","bevelEndRight","offset","sideSign","totalAngle","nSegs","currAngleInc","currAngle","createCircle","hasNarrowConcaveAngle","OffsetCurveBuilder","getOffsetCurve","inputPts","isRightSide","posDistance","segGen","getSegGen","computePointCurve","computeOffsetCurve","curvePts","computeSingleSidedBufferCurve","distTol","simplifyTolerance","simp2","simp1","computeRingBufferCurve","simp","computeLineBufferCurve","getLineCurve","getBufferParameters","bufDistance","getRingCurve","copyCoordinates","SubgraphDepthLocater","_subgraphs","_seg","_cga","subgraphs","staticAccessors$30","DepthSegment","findStabbedSegments","stabbingRayLeftPt","stabbedSegments","bsg","stabbingRayLeftPt$1","dirEdge","stabbedSegments$1","ds","stabbingRayLeftPt$2","stabbedSegments$2","_leftDepth","_upwardSeg","orientIndex","compareX","seg0","seg1","compare0","Triangle","interpolateZ","longestSideLength","circumcentre","area3D","centroid","inCentre","m00","m01","m10","m11","v0","lenAB","lenBC","lenCA","maxLen","numx","numy","perpendicularBisector","l1","l2","angleBisector","len0","frac","uz","vx","vy","vz","crossx","crossy","crossz","absSq","len1","circum","inCentreX","inCentreY","OffsetCurveSetBuilder","_inputGeom","_curveBuilder","_curveList","inputGeom","curveBuilder","addPoint","curve","addCurve","addPolygon","offsetSide","shellCoord","isErodedCompletely","addPolygonRing","holeCoord","isTriangleErodedCompletely","triangleCoord","bufferDistance","tri","addLineString","getCurves","cwLeftLoc","cwRightLoc","addCollection","ringCoord","envMinDimension","PointOnGeometryLocator","locate","GeometryCollectionIterator","_parent","_atStart","_max","_subcollectionIterator","isAtomic","SimplePointInAreaLocator","containsPointInPolygon","geomi","g2","EdgeEndStar","_edgeMap","_edgeList","_ptInAreaLocation","getNextCW","iNextCW","propagateSideLabels","startLoc","currLoc","it$1","isAreaLabelsConsistent","geomGraph","computeEdgeEndLabels","getBoundaryNodeRule","checkAreaLabelsConsistent","lastEdgeIndex","findIndex","eSearch","getGeometry","computeLabelling","hasDimensionalCollapseEdge","geomi$1","getDegree","insertEdgeEnd","DirectedEdgeStar","EdgeEndStar$$1","_resultAreaEdgeList","_SCANNING_FOR_INCOMING","_LINKING_TO_OUTGOING","getResultAreaEdges","firstOut","incoming","state","nextOut","nextIn","de0","deLast","quad0","updateLabelling","nodeLabel","prevOut","firstIn","edgeIndex","startDepth","targetLastDepth","nextDepth","lastDepth","endIndex","startDepth$1","currDepth","nextDe","mergeSymLabels","degree$1","findCoveredLineEdges","nextOut$1","nextIn$1","eLabel","eLoc","OverlayNodeFactory","NodeFactory$$1","OrientedCoordinateArray","_orientation","oca","compareOriented","orientation1","orientation2","limit1","limit2","compPt","done1","done2","EdgeList","_ocaMap","edgeColl","findEdgeIndex","findEqualEdge","SegmentIntersector","e0","segIndex0","segIndex1","IntersectionAdder","_hasIntersection","_hasProper","_hasProperInterior","_hasInterior","_properIntersectionPoint","_isSelfIntersection","numIntersections","numInteriorIntersections","numProperIntersections","numTests","isTrivialIntersection","isAdjacentSegments","getProperIntersectionPoint","hasProperInteriorIntersection","getLineIntersector","hasProperIntersection","hasInteriorIntersection","EdgeIntersection","getSegmentIndex","EdgeIntersectionList","Edge","MonotoneChainIndexer","MonotoneChainEdge","env2","mcb","chainIndex","computeIntersectsForChain","chainIndex0","mce","chainIndex1","mce$1","getStartIndexes","computeIntersects","Depth","NULL_VALUE","staticAccessors$31","depthValue","minDepth","newValue","getDelta","depthAtLocation","_mce","_isIsolated","_depthDelta","getCollapsedEdge","newPts","setIsolated","setName","isEqualForward","isEqualReverse","iRev","isCollapsed","getMaximumSegmentIndex","getMonotoneChainEdge","isPointwiseEqual","setDepthDelta","getEdgeIntersectionList","setAtLeastIfValid","BufferBuilder","_workingPrecisionModel","_workingNoder","_graph","setWorkingPrecisionModel","insertUniqueEdge","existingEdge","existingLabel","labelToMerge","mergeDelta","newDelta","buildSubgraphs","subgraphList","polyBuilder","processedGraphs","subgraph","createSubgraphs","createEmptyResultGeometry","getNoder","noder","buffer","bufferSegStrList","computeNodedEdges","oldLabel","setNoder","lLoc","rLoc","convertSegStrings","ScaledNoder","_noder","_scaleFactor","_offsetX","_offsetY","_isScaled","scaleFactor","isIntegerPrecision","noder$1","scaleFactor$1","offsetX","offsetY","rescale","nodedSegmentStrings","roundPts","roundPtsNoDup","splitSS","intSegStrings","NodingValidator","_segStrings","staticAccessors$33","checkEndPtVertexIntersections","ss$1","checkInteriorIntersections","ss0","ss0$1","ss1$1","pts0","checkValid","checkCollapses","checkCollapse","HotPixel","_originalPt","_ptScaled","_p0Scaled","_p1Scaled","_corner","_safeEnv","initCorners","staticAccessors$34","SAFE_ENV_EXPANSION_FACTOR","intersectsScaled","segMinx","segMaxx","segMiny","segMaxy","isOutsidePixelEnv","intersectsToleranceSquare","copyScaled","pScaled","getSafeEnvelope","safeTolerance","intersectsPixelClosure","intersectsLeft","intersectsBottom","addSnappedNode","segIndex","MonotoneChainSelectAction","selectedSegment","MCIndexPointSnapper","staticAccessors$35","HotPixelSnapAction","snap","hotPixel","hotPixel$1","parentEdge","hotPixelVertexIndex","pixelEnv","hotPixelSnapAction","isNodeAdded","MonotoneChainSelectAction$$1","_hotPixel","_parentEdge","_hotPixelVertexIndex","_isNodeAdded","InteriorIntersectionFinderAdder","_interiorIntersections","getInteriorIntersections","MCIndexSnapRounder","_pm","_pointSnapper","checkCorrectness","inputSegmentStrings","resultSegStrings","nv","snapRound","intersections","findInteriorIntersections","computeIntersectionSnaps","computeVertexSnaps","intFinderAdder","edge0","snapPts","snapPt","BufferOp","_argGeom","_resultGeometry","_saveException","staticAccessors$32","CAP_BUTT","MAX_PRECISION_DIGITS","bufferFixedPrecision","fixedPM","bufBuilder","bufferReducedPrecision","precDigits","precisionDigits","sizeBasedScaleFactor","precisionScaleFactor","computeGeometry","bufferOriginalPrecision","argPM","getResultGeometry","bufferOp","gBuf","geomBuf","distance$1","bufOp","geomBuf$1","g$2","distance$2","params","bufOp$1","geomBuf$2","g$3","distance$3","bufOp$2","geomBuf$3","maxPrecisionDigits","bufEnvMax","minUnitLog10","PointPairDistance","_isNull","setMinimum","ptDist","initialize","setMaximum","DistanceToPointFinder","computeDistance","tempSegment","pt$1","ptDist$1","pt$2","ptDist$2","pt$3","ptDist$3","closestPt$1","BufferCurveMaximumDistanceFinder","_maxPtDist","staticAccessors$36","MaxPointDistanceFilter","MaxMidpointDistanceFilter","computeMaxMidpointDistance","distFilter","getMaxPointDistance","computeMaxVertexDistance","findDistance","bufferCurve","getDistancePoints","_minPtDist","midPt","PolygonExtracter","comps","_comps","LinearComponentExtracter","_lines","_isForcedToLineString","lines$1","isForcedToLineString","setForceToLineString","getLines","forceToLineString","geoms","geom$2","lines$2","geoms$1","lines$3","forceToLineString$1","geom$3","lines$4","forceToLineString$2","PointLocator","_boundaryRule","_isIn","_numBoundaries","boundaryRule","locateInternal","shellLoc","locateInPolygonRing","holeLoc","p$2","ptCoord","updateLocationInfo","computeLocation","ml","mpoly","GeometryLocation","_component","_segIndex","component","INSIDE_AREA","component$1","staticAccessors$38","isInsideArea","getGeometryComponent","PointExtracter","getPoints","ConnectedElementLocationFilter","_locations","locations","DistanceOp","_terminateDistance","_ptLocator","_minDistanceLocation","_minDistance","g0","g1","g0$1","g1$1","terminateDistance","computeContainmentDistance","locPtPoly","polyGeomIndex","locPtPoly$1","locationsIndex","insideLocs","locs","polys$1","locPtPoly$2","ptLoc","locPtPoly$3","computeMinDistanceLinesPoints","locGeom","computeMinDistance","computeFacetDistance","lines0","lines1","computeMinDistanceLines","updateMinDistance","computeMinDistancePoints","nearestLocations","nearestPoints","coord0","segClosestPoint","line0","line1","locGeom$1","coord0$1","dist$1","points0","points1","isWithinDistance","PointPairDistance$2","DistanceToPoint","DiscreteHausdorffDistance","_g0","_g1","_ptDist","_densifyFrac","staticAccessors$39","MaxDensifiedByFractionDistanceFilter","setDensifyFraction","densifyFrac","compute","computeOrientedDistance","discreteGeom","MaxPointDistanceFilter$1","fracFilter","orientedDistance","_euclideanDist","_numSubSegs","fraction","delx","dely","BufferDistanceValidator","input","_minValidDistance","_maxValidDistance","_minDistanceFound","_maxDistanceFound","_isValid","_errMsg","_errorLocation","_errorIndicator","_input","_bufDistance","staticAccessors$37","VERBOSE","MAX_DISTANCE_DIFF_FRAC","checkMaximumDistance","bufCurve","maxDist","haus","distDelta","checkPositiveValid","checkNegativeValid","inputCurve","getPolygonLines","checkMinimumDistance","getErrorIndicator","distOp","getErrorLocation","lineExtracter","getErrorMessage","BufferResultValidator","_errorMsg","staticAccessors$40","MAX_ENV_DIFF_FRAC","checkPolygonal","checkExpectedEmpty","checkEnvelope","checkArea","checkDistance","padding","expectedEnv","bufEnv","report","distValid","inputArea","resultArea","checkName","isValidMsg","validator","BasicSegmentString","InteriorIntersectionFinder","_findAllIntersections","_isCheckEndSegmentsOnly","_interiorIntersection","_intSegments","_intersections","_intersectionCount","_keepIntersections","getInteriorIntersection","setCheckEndSegmentsOnly","isCheckEndSegmentsOnly","getIntersectionSegments","getIntersections","setFindAllIntersections","findAllIntersections","setKeepIntersections","keepIntersections","isEndSegment","createAllIntersectionsFinder","finder","createAnyIntersectionFinder","createIntersectionCounter","FastNodingValidator","execute","intSegs","computeIntersections","EdgeNodingValidator","_nv","toSegmentStrings","GeometryCollectionMapper","mapOp","_mapOp","mapped","op","LineBuilder","_op","_lineEdgesList","_resultLineList","ptLocator","collectLines","opCode","getGraph","collectLineEdge","collectBoundaryTouchEdge","labelIsolatedLine","targetIndex","getArgGeometry","buildLines","OverlayOp","isResultOfOp","isCoveredByA","labelIsolatedLines","edgesList","INTERSECTION","PointBuilder","_resultPointList","filterCoveredNodeToPoint","isCoveredByLA","extractNonCoveredResultNodes","GeometryTransformer","_pruneEmptyGeometry","_preserveGeometryCollectionType","_preserveCollections","_preserveType","transformPoint","transformCoordinates","transformPolygon","isAllValidLinearRings","transformLinearRing","createCoordinateSequence","getInputGeometry","transformMultiLineString","transGeomList","transformGeom","transformLineString","transformMultiPoint","transformMultiPolygon","transformGeometryCollection","transform","seqSize","LineStringSnapper","_snapTolerance","_srcPts","_allowSnappingToSourceVertices","_isClosed","srcLine","snapTolerance","srcPts","snapTolerance$1","snapVertices","srcCoords","srcPt","snapVert","findSnapForVertex","snapTo","snapSegments","distinctPtCount","findSegmentIndexToSnap","snapIndex","setAllowSnappingToSourceVertices","allowSnappingToSourceVertices","GeometrySnapper","srcGeom","_srcGeom","staticAccessors$41","SNAP_PRECISION_FACTOR","snapGeom","extractTargetCoordinates","SnapTransformer","snapToSelf","cleanResult","snappedGeom","computeSnapTolerance","ringPts","computeMinimumSegmentLength","ptSet","minSegLen","segLen","snapper0","snapper1","computeOverlaySnapTolerance","computeSizeBasedSnapTolerance","fixedSnapTol","GeometryTransformer$$1","isSelfSnap","_snapPts","_isSelfSnap","snapLine","snapper","CommonBits","_isFirst","_commonMantissaBitsCount","_commonBits","_commonSignExp","getCommon","numBits","signExpBits","numCommonMostSigMantissaBits","zeroLowerBits","bits","numStr","toBinaryString","padStr","bitStr","getBit","nBits","num1","num2","CommonBitsRemover","_commonCoord","_ccFilter","CommonCoordinateFilter","staticAccessors$42","Translater","addCommonBits","trans","removeCommonBits","invCoord","getCommonCoordinate","_commonBitsX","_commonBitsY","xp","yp","SnapOverlayOp","_cbr","selfSnap","remGeom","prepareResult","prepGeom","overlayOp","UNION","symDifference","SYMDIFFERENCE","difference","DIFFERENCE","SnapIfNeededOverlayOp","isSuccess","savedException","MonotoneChain$2","SweepLineEvent","_xValue","_eventType","_insertEvent","_deleteEventIndex","_obj","insertEvent","INSERT","staticAccessors$43","isDelete","setDeleteEventIndex","deleteEventIndex","getObject","pe","getInsertEvent","isInsert","isSameLabel","ev","getDeleteEventIndex","EdgeSetIntersector","SegmentIntersector$2","_includeProper","_recordIsolated","_numIntersections","_bdyNodes","_isDone","_isDoneWhenProperInt","includeProper","recordIsolated","setIsDoneIfProperInt","isDoneWhenProperInt","isBoundaryPointInternal","isBoundaryPoint","setBoundaryNodes","bdyNodes0","bdyNodes1","SimpleMCSweepLineIntersector","EdgeSetIntersector$$1","nOverlaps","prepareEvents","processOverlaps","edges0","edges1","si$1","si$2","testAllSegments","addEdge","edgeSet","ev0","mc0","ev1","edges$1","IntervalRTreeNode","_min","staticAccessors$45","NodeComparator","getMin","queryMin","queryMax","getMax","mid2","IntervalRTreeLeafNode","IntervalRTreeNode$$1","IntervalRTreeBranchNode","_node1","_node2","buildExtent","SortedPackedIntervalRTree","_leaves","buildTree","buildLevel","buildRoot","printNode","ArrayListVisitor","getItems","IndexedPointInAreaLocator","IntervalIndexedGeometry","staticAccessors$44","SegmentVisitor","rcc","_counter","addLine","GeometryGraph","PlanarGraph$$1","_parentGeom","_lineEdgeMap","_boundaryNodeRule","_useBoundaryDeterminationRule","_argIndex","_boundaryNodes","_hasTooFewPoints","_invalidPoint","_areaPtLocator","parentGeom","argIndex$1","parentGeom$1","boundaryNodeRule$1","insertBoundaryPoint","determineBoundary","computeSelfNodes","computeRingSelfNodes","li$1","computeRingSelfNodes$1","isDoneIfProperInt","esi","createEdgeSetIntersector","isRings","computeAllSegments","addSelfIntersectionNodes","computeSplitEdges","edgelist","computeEdgeIntersections","hasTooFewPoints","insertPoint","getInvalidPoint","getBoundaryPoints","addSelfIntersectionNode","lr","cwLeft","cwRight","eiIt","GeometryGraphOp","_resultPrecisionModel","_arg","setComputationPrecision","g0$2","GeometryMapper","MapOp","op$1","mapped$1","gr","_resultGeom","_resultPolyList","cancelDuplicateResultEdges","resultPointList","resultLineList","opcode","createEmptyResult","replaceCollapsedEdges","newEdges","updateNodeLabelling","overlayOpCode","computeOverlay","insertUniqueEdges","copyPoints","baseSplitEdges","computeLabelsFromDepths","labelIncompleteNodes","findResultAreaEdges","lineBuilder","pointBuilder","labelIncompleteNode","graphNode","ni","geom1","resultDimension","dim0","dim1","geomFact","loc0","loc1","loc0$1","loc1$1","FuzzyPointLocator","_g","_boundaryDistanceTolerance","_linework","boundaryDistanceTolerance","extractLinework","isWithinToleranceOfBoundary","extracter","PolygonalLineworkExtracter","linework","getLinework","OffsetPointGenerator","_doLeft","_doRight","extractPoints","offsetPts","computeOffsetPoints","setSidesToGenerate","doLeft","doRight","midX","midY","offsetLeft","offsetRight","OverlayResultValidator","_locFinder","_location","_invalidLocation","TOLERANCE","_testCoords","computeBoundaryDistanceTolerance","staticAccessors$46","reportResult","expectedInterior","addTestPts","overlayOp$1","hasLocation","isValidResult","ptGen","getInvalidLocation","GeometryCombiner","_geomFactory","_skipEmpty","_inputGeoms","extractFactory","extractElements","elems","elemGeom","combine","combiner","combiner$1","createList","combiner$2","obj0","obj1","obj0$1","obj1$1","obj2","list$1","CascadedPolygonUnion","_inputPolys","staticAccessors$47","STRTREE_NODE_CAPACITY","reduceToGeometries","geomTree","unionTree","extractByEnvelope","disjointGeoms","intersectingGeoms","elem","unionOptimized","g0Env","g1Env","unionActual","commonEnv","unionUsingEnvelopeIntersection","itemTree","binaryUnion","unionSafe","repeatedUnion","restrictToPolygons","common","disjointPolys","g0Int","g1Int","bufferUnion","gColl","unionAll","factory$1","gColl$1","unionAll$1","UnionOp","reader","stringify","writer","properties","options","isObject","isNumber","validateBBox","validateId","feat","coordEach","geojson","excludeWrapCoord","stopG","geometryMaybeCollection","wrapShrink","coordIndex","isFeatureCollection","isFeature","stop","featureIndex","multiFeatureIndex","geometryIndex","geomType","geomEach","featureProperties","featureBBox","featureId","truncate","precision","mutate","truncateCoords","getCoords","cleanCoords","_typeof","newCoords","cleanLine","polyPoints","existing","hasOwnProperty","nextPoint","newPoints","secondToLast","isPointOnLineSegment","startX","startY","endX","endY","dxl","dyl","intersect","poly1","poly2","geom2","initialValue","previousValue","currentGeometry","geomReduce","calculateArea","RADIUS","polygonArea","ringArea","lowerIndex","middleIndex","upperIndex","coordsLength","rad","_","polygon1","polygon2","removeEmptyPolygon","differenced","feature$$1","normalizeComponent","template","style","script","scopeId","isFunctionalTemplate","moduleIdentifier","shadowMode","createInjector","createInjectorSSR","createInjectorShadow","hook","render","staticRenderFns","_compiled","functional","_scopeId","$vnode","ssrContext","__VUE_SSR_CONTEXT__","_registeredComponents","_ssrRegister","$root","$options","shadowRoot","originalRender","beforeCreate","isOldIE","navigator","test","userAgent","css","group","media","styles","ids","code","source","sources","btoa","unescape","encodeURIComponent","document","createElement","setAttribute","HEAD","head","getElementsByTagName","appendChild","styleSheet","cssText","Boolean","textNode","createTextNode","childNodes","removeChild","insertBefore","addStyle","Vue","el","App"],"mappings":"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"}