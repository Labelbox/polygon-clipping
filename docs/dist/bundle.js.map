{"version":3,"file":"bundle.js","sources":["../../node_modules/splaytree/index.js","../../dist/polygon-clipping.esm.js","../../node_modules/martinez-polygon-clipping/node_modules/splaytree/index.js","../../node_modules/martinez-polygon-clipping/src/edge_type.js","../../node_modules/martinez-polygon-clipping/src/operation.js","../../node_modules/martinez-polygon-clipping/src/compute_fields.js","../../node_modules/martinez-polygon-clipping/src/sweep_event.js","../../node_modules/martinez-polygon-clipping/src/equals.js","../../node_modules/martinez-polygon-clipping/src/signed_area.js","../../node_modules/martinez-polygon-clipping/src/compare_events.js","../../node_modules/martinez-polygon-clipping/src/divide_segment.js","../../node_modules/martinez-polygon-clipping/src/segment_intersection.js","../../node_modules/martinez-polygon-clipping/src/possible_intersection.js","../../node_modules/martinez-polygon-clipping/src/compare_segments.js","../../node_modules/martinez-polygon-clipping/src/connect_edges.js","../../node_modules/tinyqueue/index.js","../../node_modules/martinez-polygon-clipping/src/fill_queue.js","../../node_modules/martinez-polygon-clipping/src/index.js","../../node_modules/martinez-polygon-clipping/src/subdivide_segments.js","../../node_modules/turf-jsts/jsts.mjs","../../node_modules/@turf/union/main.es.js","../../node_modules/@turf/helpers/main.es.js","../../node_modules/@turf/meta/main.es.js","../../node_modules/@turf/truncate/main.es.js","../../node_modules/@turf/invariant/main.es.js","../../node_modules/@turf/clean-coords/main.es.js","../../node_modules/@turf/intersect/main.es.js","../../node_modules/@turf/area/main.es.js","../../node_modules/@turf/difference/main.es.js","../src/App.vue","../src/main.js"],"sourcesContent":["/* follows \"An implementation of top-down splaying\"\n * by D. Sleator <sleator@cs.cmu.edu> March 1992\n */\n\n/**\n * @typedef {*} Key\n */\n\n\n/**\n * @typedef {*} Value\n */\n\n\n/**\n * @typedef {function(node:Node):void} Visitor\n */\n\n\n/**\n * @typedef {function(a:Key, b:Key):number} Comparator\n */\n\n\n/**\n * @param {function(node:Node):string} NodePrinter\n */\n\n\n/**\n * @typedef {Object}  Node\n * @property {Key}    Key\n * @property {Value=} data\n * @property {Node}   left\n * @property {Node}   right\n */\n\nclass Node {\n\n  constructor (key, data) {\n    this.key    = key;\n    this.data   = data;\n    this.left   = null;\n    this.right  = null;\n  }\n}\n\nfunction DEFAULT_COMPARE (a, b) { return a > b ? 1 : a < b ? -1 : 0; }\n\n\n/**\n * Simple top down splay, not requiring i to be in the tree t.\n * @param {Key} i\n * @param {Node?} t\n * @param {Comparator} comparator\n */\nfunction splay (i, t, comparator) {\n  if (t === null) return t;\n  let l, r, y;\n  const N = new Node();\n  l = r = N;\n\n  while (true) {\n    const cmp = comparator(i, t.key);\n    //if (i < t.key) {\n    if (cmp < 0) {\n      if (t.left === null) break;\n      //if (i < t.left.key) {\n      if (comparator(i, t.left.key) < 0) {\n        y = t.left;                           /* rotate right */\n        t.left = y.right;\n        y.right = t;\n        t = y;\n        if (t.left === null) break;\n      }\n      r.left = t;                               /* link right */\n      r = t;\n      t = t.left;\n    //} else if (i > t.key) {\n    } else if (cmp > 0) {\n      if (t.right === null) break;\n      //if (i > t.right.key) {\n      if (comparator(i, t.right.key) > 0) {\n        y = t.right;                          /* rotate left */\n        t.right = y.left;\n        y.left = t;\n        t = y;\n        if (t.right === null) break;\n      }\n      l.right = t;                              /* link left */\n      l = t;\n      t = t.right;\n    } else {\n      break;\n    }\n  }\n  /* assemble */\n  l.right = t.left;\n  r.left = t.right;\n  t.left = N.right;\n  t.right = N.left;\n  return t;\n}\n\n\n/**\n * @param  {Key}        i\n * @param  {Value}      data\n * @param  {Comparator} comparator\n * @param  {Tree}       tree\n * @return {Node}      root\n */\nfunction insert (i, data, t, comparator, tree) {\n  const node = new Node(i, data);\n\n  tree._size++;\n\n  if (t === null) {\n    node.left = node.right = null;\n    return node;\n  }\n\n  t = splay(i, t, comparator);\n  const cmp = comparator(i, t.key);\n  if (cmp < 0) {\n    node.left = t.left;\n    node.right = t;\n    t.left = null;\n  } else if (cmp >= 0) {\n    node.right = t.right;\n    node.left = t;\n    t.right = null;\n  }\n  return node;\n}\n\n\n/**\n * Insert i into the tree t, unless it's already there.\n * @param  {Key}        i\n * @param  {Value}      data\n * @param  {Comparator} comparator\n * @param  {Tree}       tree\n * @return {Node}       root\n */\nfunction add (i, data, t, comparator, tree) {\n  const node = new Node(i, data);\n\n  if (t === null) {\n    node.left = node.right = null;\n    tree._size++;\n    return node;\n  }\n\n  t = splay(i, t, comparator);\n  const cmp = comparator(i, t.key);\n  if (cmp === 0) return t;\n  else {\n    if (cmp < 0) {\n      node.left = t.left;\n      node.right = t;\n      t.left = null;\n    } else if (cmp > 0) {\n      node.right = t.right;\n      node.left = t;\n      t.right = null;\n    }\n    tree._size++;\n    return node;\n  }\n}\n\n\n/**\n * Deletes i from the tree if it's there\n * @param {Key}        i\n * @param {Tree}       tree\n * @param {Comparator} comparator\n * @param {Tree}       tree\n * @return {Node}      new root\n */\nfunction remove (i, t, comparator, tree) {\n  let x;\n  if (t === null) return null;\n  t = splay(i, t, comparator);\n  var cmp = comparator(i, t.key);\n  if (cmp === 0) {               /* found it */\n    if (t.left === null) {\n      x = t.right;\n    } else {\n      x = splay(i, t.left, comparator);\n      x.right = t.right;\n    }\n    tree._size--;\n    return x;\n  }\n  return t;                         /* It wasn't there */\n}\n\n\nfunction split (key, v, comparator) {\n  let left, right;\n  if (v === null) {\n    left = right = null;\n  } else {\n    v = splay(key, v, comparator);\n\n    const cmp = comparator(v.key, key);\n    if (cmp === 0) {\n      left  = v.left;\n      right = v.right;\n    } else if (cmp < 0) {\n      right   = v.right;\n      v.right = null;\n      left    = v;\n    } else {\n      left   = v.left;\n      v.left = null;\n      right  = v;\n    }\n  }\n  return { left, right };\n}\n\n\nfunction merge (left, right, comparator) {\n  if (right === null) return left;\n  if (left  === null) return right;\n\n  right = splay(left.key, right, comparator);\n  right.left = left;\n  return right;\n}\n\n\n/**\n * Prints level of the tree\n * @param  {Node}                        root\n * @param  {String}                      prefix\n * @param  {Boolean}                     isTail\n * @param  {Array<string>}               out\n * @param  {Function(node:Node):String}  printNode\n */\nfunction printRow (root, prefix, isTail, out, printNode) {\n  if (root) {\n    out(`${ prefix }${ isTail ? '└── ' : '├── ' }${ printNode(root) }\\n`);\n    const indent = prefix + (isTail ? '    ' : '│   ');\n    if (root.left)  printRow(root.left,  indent, false, out, printNode);\n    if (root.right) printRow(root.right, indent, true,  out, printNode);\n  }\n}\n\n\nexport default class Tree {\n\n  constructor (comparator = DEFAULT_COMPARE) {\n    this._comparator = comparator;\n    this._root = null;\n    this._size = 0;\n  }\n\n\n  /**\n   * Inserts a key, allows duplicates\n   * @param  {Key}    key\n   * @param  {Value=} data\n   * @return {Node|null}\n   */\n  insert (key, data) {\n    return this._root = insert(key, data, this._root, this._comparator, this);\n  }\n\n\n  /**\n   * Adds a key, if it is not present in the tree\n   * @param  {Key}    key\n   * @param  {Value=} data\n   * @return {Node|null}\n   */\n  add (key, data) {\n    return this._root = add(key, data, this._root, this._comparator, this);\n  }\n\n\n  /**\n   * @param  {Key} key\n   * @return {Node|null}\n   */\n  remove (key) {\n    this._root = remove(key, this._root, this._comparator, this);\n  }\n\n\n  /**\n   * Removes and returns the node with smallest key\n   * @return {?Node}\n   */\n  pop () {\n    let node = this._root;\n    if (node) {\n      while (node.left) node = node.left;\n      this._root = splay(node.key,  this._root, this._comparator);\n      this._root = remove(node.key, this._root, this._comparator, this);\n      return { key: node.key, data: node.data };\n    }\n    return null;\n  }\n\n\n  /**\n   * @param  {Key} key\n   * @return {Node|null}\n   */\n  findStatic (key) {\n    let current   = this._root;\n    const compare = this._comparator;\n    while (current) {\n      const cmp = compare(key, current.key);\n      if (cmp === 0)    return current;\n      else if (cmp < 0) current = current.left;\n      else              current = current.right;\n    }\n    return null;\n  }\n\n\n  /**\n   * @param  {Key} key\n   * @return {Node|null}\n   */\n  find (key) {\n    if (this._root) {\n      this._root = splay(key, this._root, this._comparator);\n      if (this._comparator(key, this._root.key) !== 0) return null;\n    }\n    return this._root;\n  }\n\n\n  /**\n   * @param  {Key} key\n   * @return {Boolean}\n   */\n  contains (key) {\n    let current   = this._root;\n    const compare = this._comparator;\n    while (current) {\n      const cmp = compare(key, current.key);\n      if (cmp === 0)    return true;\n      else if (cmp < 0) current = current.left;\n      else              current = current.right;\n    }\n    return false;\n  }\n\n\n  /**\n   * @param  {Visitor} visitor\n   * @param  {*=}      ctx\n   * @return {SplayTree}\n   */\n  forEach (visitor, ctx) {\n    let current = this._root;\n    const Q = [];  /* Initialize stack s */\n    let done = false;\n\n    while (!done) {\n      if (current !==  null) {\n        Q.push(current);\n        current = current.left;\n      } else {\n        if (Q.length !== 0) {\n          current = Q.pop();\n          visitor.call(ctx, current);\n\n          current = current.right;\n        } else done = true;\n      }\n    }\n    return this;\n  }\n\n\n  /**\n   * Walk key range from `low` to `high`. Stops if `fn` returns a value.\n   * @param  {Key}      low\n   * @param  {Key}      high\n   * @param  {Function} fn\n   * @param  {*?}       ctx\n   * @return {SplayTree}\n   */\n  range (low, high, fn, ctx) {\n    const Q = [];\n    const compare = this._comparator;\n    let node = this._root, cmp;\n\n    while (Q.length !== 0 || node) {\n      if (node) {\n        Q.push(node);\n        node = node.left;\n      } else {\n        node = Q.pop();\n        cmp = compare(node.key, high);\n        if (cmp > 0) {\n          break;\n        } else if (compare(node.key, low) >= 0) {\n          if (fn.call(ctx, node)) return this; // stop if smth is returned\n        }\n        node = node.right;\n      }\n    }\n    return this;\n  }\n\n\n  /**\n   * Returns array of keys\n   * @return {Array<Key>}\n   */\n  keys () {\n    const keys = [];\n    this.forEach(({ key }) => keys.push(key));\n    return keys;\n  }\n\n\n  /**\n   * Returns array of all the data in the nodes\n   * @return {Array<Value>}\n   */\n  values () {\n    const values = [];\n    this.forEach(({ data }) => values.push(data));\n    return values;\n  }\n\n\n  /**\n   * @return {Key|null}\n   */\n  min() {\n    if (this._root) return this.minNode(this._root).key;\n    return null;\n  }\n\n\n  /**\n   * @return {Key|null}\n   */\n  max() {\n    if (this._root) return this.maxNode(this._root).key;\n    return null;\n  }\n\n\n  /**\n   * @return {Node|null}\n   */\n  minNode(t = this._root) {\n    if (t) while (t.left) t = t.left;\n    return t;\n  }\n\n\n  /**\n   * @return {Node|null}\n   */\n  maxNode(t = this._root) {\n    if (t) while (t.right) t = t.right;\n    return t;\n  }\n\n\n  /**\n   * Returns node at given index\n   * @param  {number} index\n   * @return {?Node}\n   */\n  at (index) {\n    let current = this._root, done = false, i = 0;\n    const Q = [];\n\n    while (!done) {\n      if (current) {\n        Q.push(current);\n        current = current.left;\n      } else {\n        if (Q.length > 0) {\n          current = Q.pop();\n          if (i === index) return current;\n          i++;\n          current = current.right;\n        } else done = true;\n      }\n    }\n    return null;\n  }\n\n\n  /**\n   * @param  {Node}   d\n   * @return {Node|null}\n   */\n  next (d) {\n    let root = this._root;\n    let successor = null;\n\n    if (d.right) {\n      successor = d.right;\n      while (successor.left) successor = successor.left;\n      return successor;\n    }\n\n    const comparator = this._comparator;\n    while (root) {\n      const cmp = comparator(d.key, root.key);\n      if (cmp === 0) break;\n      else if (cmp < 0) {\n        successor = root;\n        root = root.left;\n      } else root = root.right;\n    }\n\n    return successor;\n  }\n\n\n  /**\n   * @param  {Node} d\n   * @return {Node|null}\n   */\n  prev (d) {\n    let root = this._root;\n    let predecessor = null;\n\n    if (d.left !== null) {\n      predecessor = d.left;\n      while (predecessor.right) predecessor = predecessor.right;\n      return predecessor;\n    }\n\n    const comparator = this._comparator;\n    while (root) {\n      const cmp = comparator(d.key, root.key);\n      if (cmp === 0) break;\n      else if (cmp < 0) root = root.left;\n      else {\n        predecessor = root;\n        root = root.right;\n      }\n    }\n    return predecessor;\n  }\n\n\n  /**\n   * @return {SplayTree}\n   */\n  clear() {\n    this._root = null;\n    this._size = 0;\n    return this;\n  }\n\n\n  /**\n   * @return {NodeList}\n   */\n  toList() {\n    return toList(this._root);\n  }\n\n\n  /**\n   * Bulk-load items. Both array have to be same size\n   * @param  {Array<Key>}    keys\n   * @param  {Array<Value>}  [values]\n   * @param  {Boolean}       [presort=false] Pre-sort keys and values, using\n   *                                         tree's comparator. Sorting is done\n   *                                         in-place\n   * @return {AVLTree}\n   */\n  load (keys = [], values = [], presort = false) {\n    let size = keys.length;\n    const comparator = this._comparator;\n\n    // sort if needed\n    if (presort) sort(keys, values, 0, size - 1, comparator);\n\n    if (this._root === null) { // empty tree\n      this._root = loadRecursive(this._root, keys, values, 0, size);\n      this._size = size;\n    } else { // that re-builds the whole tree from two in-order traversals\n      const mergedList = mergeLists(this.toList(), createList(keys, values), comparator);\n      size = this._size + size;\n      this._root = sortedListToBST({ head: mergedList }, 0, size);\n    }\n    return this;\n  }\n\n\n  /**\n   * @return {Boolean}\n   */\n  isEmpty() { return this._root === null; }\n\n  get size () { return this._size; }\n\n\n  /**\n   * @param  {NodePrinter=} printNode\n   * @return {String}\n   */\n  toString (printNode = (n) => n.key) {\n    const out = [];\n    printRow(this._root, '', true, (v) => out.push(v), printNode);\n    return out.join('');\n  }\n\n\n  update (key, newKey, newData) {\n    const comparator = this._comparator;\n    let { left, right } = split(key, this._root, comparator);\n    this._size--;\n    if (comparator(key, newKey) < 0) {\n      right = insert(newKey, newData, right, comparator, this);\n    } else {\n      left = insert(newKey, newData, left, comparator, this);\n    }\n    this._root = merge(left, right, comparator);\n  }\n\n\n  split(key) {\n    return split(key, this._root, this._comparator);\n  }\n}\n\n\nfunction loadRecursive (parent, keys, values, start, end) {\n  const size = end - start;\n  if (size > 0) {\n    const middle = start + Math.floor(size / 2);\n    const key    = keys[middle];\n    const data   = values[middle];\n    const node   = { key, data, parent };\n    node.left    = loadRecursive(node, keys, values, start, middle);\n    node.right   = loadRecursive(node, keys, values, middle + 1, end);\n    return node;\n  }\n  return null;\n}\n\n\nfunction createList(keys, values) {\n  const head = { next: null };\n  let p = head;\n  for (let i = 0; i < keys.length; i++) {\n    p = p.next = { key: keys[i], data: values[i] };\n  }\n  p.next = null;\n  return head.next;\n}\n\n\nfunction toList (root) {\n  var current = root;\n  var Q = [], done = false;\n\n  const head = { next: null };\n  let p = head;\n\n  while (!done) {\n    if (current) {\n      Q.push(current);\n      current = current.left;\n    } else {\n      if (Q.length > 0) {\n        current = p = p.next = Q.pop();\n        current = current.right;\n      } else done = true;\n    }\n  }\n  p.next = null; // that'll work even if the tree was empty\n  return head.next;\n}\n\n\nfunction sortedListToBST(list, start, end) {\n  const size = end - start;\n  if (size > 0) {\n    const middle = start + Math.floor(size / 2);\n    const left = sortedListToBST(list, start, middle);\n\n    const root = list.head;\n    root.left = left;\n\n    list.head = list.head.next;\n\n    root.right = sortedListToBST(list, middle + 1, end);\n    return root;\n  }\n  return null;\n}\n\n\nfunction mergeLists (l1, l2, compare = (a, b) => a - b) {\n  const head = {}; // dummy\n  let p = head;\n\n  let p1 = l1;\n  let p2 = l2;\n\n  while (p1 !== null && p2 !== null) {\n    if (compare(p1.key, p2.key) < 0) {\n      p.next = p1;\n      p1 = p1.next;\n    } else {\n      p.next = p2;\n      p2 = p2.next;\n    }\n    p = p.next;\n  }\n\n  if (p1 !== null)      p.next = p1;\n  else if (p2 !== null) p.next = p2;\n\n  return head.next;\n}\n\n\nfunction sort(keys, values, left, right, compare) {\n  if (left >= right) return;\n\n  const pivot = keys[(left + right) >> 1];\n  let i = left - 1;\n  let j = right + 1;\n\n  while (true) {\n    do i++; while (compare(keys[i], pivot) < 0);\n    do j--; while (compare(keys[j], pivot) > 0);\n    if (i >= j) break;\n\n    let tmp = keys[i];\n    keys[i] = keys[j];\n    keys[j] = tmp;\n\n    tmp = values[i];\n    values[i] = values[j];\n    values[j] = tmp;\n  }\n\n  sort(keys, values,  left,     j, compare);\n  sort(keys, values, j + 1, right, compare);\n}\n","import SplayTree from 'splaytree';\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\n/* Javascript doesn't do integer math. Everything is\n * floating point with percision Number.EPSILON.\n *\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/EPSILON\n */\nvar epsilon = Number.EPSILON; // IE Polyfill\n\nif (epsilon === undefined) epsilon = Math.pow(2, -52);\nvar EPSILON_SQ = epsilon * epsilon;\n/* FLP comparator */\n\nvar cmp = function cmp(a, b) {\n  // check if they're both 0\n  if (-epsilon < a && a < epsilon) {\n    if (-epsilon < b && b < epsilon) {\n      return 0;\n    }\n  } // check if they're flp equal\n\n\n  if ((a - b) * (a - b) < EPSILON_SQ * a * b) {\n    return 0;\n  } // normal comparison\n\n\n  return a < b ? -1 : 1;\n};\n/* Greedy comparison. Two numbers are defined to touch\n * if their midpoint is indistinguishable from either. */\n\nvar touch = function touch(a, b) {\n  var m = (a + b) / 2;\n  return cmp(m, a) === 0 || cmp(m, b) === 0;\n};\n/* Greedy comparison. Two points are defined to touch\n * if their midpoint is indistinguishable from either. */\n\nvar touchPoints = function touchPoints(aPt, bPt) {\n  // call directly to (skip touch()) cmp() for performance boost\n  var mx = (aPt.x + bPt.x) / 2;\n  var aXMiss = cmp(mx, aPt.x) !== 0;\n  if (aXMiss && cmp(mx, bPt.x) !== 0) return false;\n  var my = (aPt.y + bPt.y) / 2;\n  var aYMiss = cmp(my, aPt.y) !== 0;\n  if (aYMiss && cmp(my, bPt.y) !== 0) return false; // we have touching on both x & y, we have to make sure it's\n  // not just on opposite points thou\n\n  if (aYMiss && aYMiss) return true;\n  if (!aYMiss && !aYMiss) return true;\n  return false;\n};\n\n/* Cross Product of two vectors with first point at origin */\n\nvar crossProduct = function crossProduct(a, b) {\n  return a.x * b.y - a.y * b.x;\n};\n/* Dot Product of two vectors with first point at origin */\n\nvar dotProduct = function dotProduct(a, b) {\n  return a.x * b.x + a.y * b.y;\n};\n/* Comparator for two vectors with same starting point */\n\nvar compareVectorAngles = function compareVectorAngles(basePt, endPt1, endPt2) {\n  var v1 = {\n    x: endPt1.x - basePt.x,\n    y: endPt1.y - basePt.y\n  };\n  var v2 = {\n    x: endPt2.x - basePt.x,\n    y: endPt2.y - basePt.y\n  };\n  var kross = crossProduct(v1, v2);\n  return cmp(kross, 0);\n};\nvar length = function length(v) {\n  return Math.sqrt(dotProduct(v, v));\n};\n/* Get the sine of the angle from pShared -> pAngle to pShaed -> pBase */\n\nvar sineOfAngle = function sineOfAngle(pShared, pBase, pAngle) {\n  var vBase = {\n    x: pBase.x - pShared.x,\n    y: pBase.y - pShared.y\n  };\n  var vAngle = {\n    x: pAngle.x - pShared.x,\n    y: pAngle.y - pShared.y\n  };\n  return crossProduct(vAngle, vBase) / length(vAngle) / length(vBase);\n};\n/* Get the cosine of the angle from pShared -> pAngle to pShaed -> pBase */\n\nvar cosineOfAngle = function cosineOfAngle(pShared, pBase, pAngle) {\n  var vBase = {\n    x: pBase.x - pShared.x,\n    y: pBase.y - pShared.y\n  };\n  var vAngle = {\n    x: pAngle.x - pShared.x,\n    y: pAngle.y - pShared.y\n  };\n  return dotProduct(vAngle, vBase) / length(vAngle) / length(vBase);\n};\n/* Get the closest point on an line (defined by two points)\n * to another point. */\n\nvar closestPoint = function closestPoint(ptA1, ptA2, ptB) {\n  if (ptA1.x === ptA2.x) return {\n    x: ptA1.x,\n    y: ptB.y // vertical vector\n\n  };\n  if (ptA1.y === ptA2.y) return {\n    x: ptB.x,\n    y: ptA1.y // horizontal vector\n    // determinne which point is further away\n\n  };\n  var v1 = {\n    x: ptA1.x - ptB.x,\n    y: ptA1.y - ptB.y\n  };\n  var v2 = {\n    x: ptA2.x - ptB.x,\n    y: ptA2.y - ptB.y\n  };\n  var nearPt = ptA1;\n  var farPt = ptA2;\n\n  if (dotProduct(v1, v1) > dotProduct(v2, v2)) {\n    farPt = ptA1;\n    nearPt = ptA2;\n  } // use the further point as our base in the calculation, so that the\n  // vectors are more parallel, providing more accurate dot product\n\n\n  var vA = {\n    x: nearPt.x - farPt.x,\n    y: nearPt.y - farPt.y\n  };\n  var vB = {\n    x: ptB.x - farPt.x,\n    y: ptB.y - farPt.y\n  };\n  var dist = dotProduct(vA, vB) / dotProduct(vA, vA);\n  return {\n    x: farPt.x + dist * vA.x,\n    y: farPt.y + dist * vA.y\n  };\n};\n/* Get the x coordinate where the given line (defined by a point and vector)\n * crosses the horizontal line with the given y coordiante.\n * In the case of parrallel lines (including overlapping ones) returns null. */\n\nvar horizontalIntersection = function horizontalIntersection(pt, v, y) {\n  if (v.y === 0) return null;\n  return {\n    x: pt.x + v.x / v.y * (y - pt.y),\n    y: y\n  };\n};\n/* Get the y coordinate where the given line (defined by a point and vector)\n * crosses the vertical line with the given x coordiante.\n * In the case of parrallel lines (including overlapping ones) returns null. */\n\nvar verticalIntersection = function verticalIntersection(pt, v, x) {\n  if (v.x === 0) return null;\n  return {\n    x: x,\n    y: pt.y + v.y / v.x * (x - pt.x)\n  };\n};\n/* Get the intersection of two lines, each defined by a base point and a vector.\n * In the case of parrallel lines (including overlapping ones) returns null. */\n\nvar intersection = function intersection(pt1, v1, pt2, v2) {\n  // take some shortcuts for vertical and horizontal lines\n  // this also ensures we don't calculate an intersection and then discover\n  // it's actually outside the bounding box of the line\n  if (v1.x === 0) return verticalIntersection(pt2, v2, pt1.x);\n  if (v2.x === 0) return verticalIntersection(pt1, v1, pt2.x);\n  if (v1.y === 0) return horizontalIntersection(pt2, v2, pt1.y);\n  if (v2.y === 0) return horizontalIntersection(pt1, v1, pt2.y); // General case for non-overlapping segments.\n  // This algorithm is based on Schneider and Eberly.\n  // http://www.cimec.org.ar/~ncalvo/Schneider_Eberly.pdf - pg 244\n\n  var kross = crossProduct(v1, v2);\n  if (kross == 0) return null;\n  var ve = {\n    x: pt2.x - pt1.x,\n    y: pt2.y - pt1.y\n  };\n  var d1 = crossProduct(ve, v1) / kross;\n  var d2 = crossProduct(ve, v2) / kross; // take the average of the two calculations to minimize rounding error\n\n  var x1 = pt1.x + d2 * v1.x,\n      x2 = pt2.x + d1 * v2.x;\n  var y1 = pt1.y + d2 * v1.y,\n      y2 = pt2.y + d1 * v2.y;\n  var x = (x1 + x2) / 2;\n  var y = (y1 + y2) / 2;\n  return {\n    x: x,\n    y: y\n  };\n};\n\n/**\n * This class rounds incoming values sufficiently so that\n * floating points problems are, for the most part, avoided.\n *\n * Incoming points are have their x & y values tested against\n * all previously seen x & y values. If either is 'too close'\n * to a previously seen value, it's value is 'snapped' to the\n * previously seen value.\n *\n * All points should be rounded by this class before being\n * stored in any data structures in the rest of this algorithm.\n */\n\nvar PtRounder =\n/*#__PURE__*/\nfunction () {\n  function PtRounder() {\n    _classCallCheck(this, PtRounder);\n\n    this.reset();\n  }\n\n  _createClass(PtRounder, [{\n    key: \"reset\",\n    value: function reset() {\n      this.xRounder = new CoordRounder();\n      this.yRounder = new CoordRounder();\n    }\n  }, {\n    key: \"round\",\n    value: function round(x, y) {\n      return {\n        x: this.xRounder.round(x),\n        y: this.yRounder.round(y)\n      };\n    }\n  }]);\n\n  return PtRounder;\n}();\n\nvar CoordRounder =\n/*#__PURE__*/\nfunction () {\n  function CoordRounder() {\n    _classCallCheck(this, CoordRounder);\n\n    this.tree = new SplayTree(); // preseed with 0 so we don't end up with values < Number.EPSILON\n\n    this.round(0);\n  } // Note: this can rounds input values backwards or forwards.\n  //       You might ask, why not restrict this to just rounding\n  //       forwards? Wouldn't that allow left endpoints to always\n  //       remain left endpoints during splitting (never change to\n  //       right). No - it wouldn't, because we snap intersections\n  //       to endpoints (to establish independence from the segment\n  //       angle for t-intersections).\n\n\n  _createClass(CoordRounder, [{\n    key: \"round\",\n    value: function round(coord) {\n      var node = this.tree.add(coord);\n      var prevNode = this.tree.prev(node);\n\n      if (prevNode !== null && cmp(node.key, prevNode.key) === 0) {\n        this.tree.remove(coord);\n        return prevNode.key;\n      }\n\n      var nextNode = this.tree.next(node);\n\n      if (nextNode !== null && cmp(node.key, nextNode.key) === 0) {\n        this.tree.remove(coord);\n        return nextNode.key;\n      }\n\n      return coord;\n    }\n  }]);\n\n  return CoordRounder;\n}(); // singleton available by import\n\n\nvar rounder = new PtRounder();\n\n/* Given input geometry as a standard array-of-arrays geojson-style\n * geometry, return one that uses objects as points, for better perf */\n\nvar pointsAsObjects = function pointsAsObjects(geom) {\n  // we can handle well-formed multipolys and polys\n  var output = [];\n\n  if (!Array.isArray(geom)) {\n    throw new Error('Input is not a Polygon or MultiPolygon');\n  }\n\n  for (var i = 0, iMax = geom.length; i < iMax; i++) {\n    if (!Array.isArray(geom[i]) || geom[i].length == 0) {\n      throw new Error('Input is not a Polygon or MultiPolygon');\n    }\n\n    output.push([]);\n\n    for (var j = 0, jMax = geom[i].length; j < jMax; j++) {\n      if (!Array.isArray(geom[i][j]) || geom[i][j].length == 0) {\n        throw new Error('Input is not a Polygon or MultiPolygon');\n      }\n\n      if (Array.isArray(geom[i][j][0])) {\n        // multipolygon\n        output[i].push([]);\n\n        for (var k = 0, kMax = geom[i][j].length; k < kMax; k++) {\n          if (!Array.isArray(geom[i][j][k]) || geom[i][j][k].length < 2) {\n            throw new Error('Input is not a Polygon or MultiPolygon');\n          }\n\n          if (geom[i][j][k].length > 2) {\n            throw new Error('Input has more than two coordinates. ' + 'Only 2-dimensional polygons supported.');\n          }\n\n          output[i][j].push(rounder.round(geom[i][j][k][0], geom[i][j][k][1]));\n        }\n      } else {\n        // polygon\n        if (geom[i][j].length < 2) {\n          throw new Error('Input is not a Polygon or MultiPolygon');\n        }\n\n        if (geom[i][j].length > 2) {\n          throw new Error('Input has more than two coordinates. ' + 'Only 2-dimensional polygons supported.');\n        }\n\n        output[i].push(rounder.round(geom[i][j][0], geom[i][j][1]));\n      }\n    }\n  }\n\n  return output;\n};\n/* WARN: input modified directly */\n\nvar forceMultiPoly = function forceMultiPoly(geom) {\n  if (Array.isArray(geom)) {\n    if (geom.length === 0) return; // allow empty multipolys\n\n    if (Array.isArray(geom[0])) {\n      if (Array.isArray(geom[0][0])) {\n        if (typeof geom[0][0][0].x === 'number' && typeof geom[0][0][0].y === 'number') {\n          // multipolygon\n          return;\n        }\n      }\n\n      if (typeof geom[0][0].x === 'number' && typeof geom[0][0].y === 'number') {\n        // polygon\n        geom.unshift(geom.splice(0));\n        return;\n      }\n    }\n  }\n\n  throw new Error('Unrecognized input - not a polygon nor multipolygon');\n};\n/* WARN: input modified directly */\n\nvar cleanMultiPoly = function cleanMultiPoly(multipoly) {\n  var i = 0;\n\n  while (i < multipoly.length) {\n    var poly = multipoly[i];\n\n    if (poly.length === 0) {\n      multipoly.splice(i, 1);\n      continue;\n    }\n\n    var exteriorRing = poly[0];\n    cleanRing(exteriorRing); // poly is dropped if exteriorRing is degenerate\n\n    if (exteriorRing.length === 0) {\n      multipoly.splice(i, 1);\n      continue;\n    }\n\n    var j = 1;\n\n    while (j < poly.length) {\n      var interiorRing = poly[j];\n      cleanRing(interiorRing);\n      if (interiorRing.length === 0) poly.splice(j, 1);else j++;\n    }\n\n    i++;\n  }\n};\n/* Clean ring:\n *  - remove duplicate points\n *  - remove colinear points\n *  - remove rings with no area (less than 3 distinct points)\n *  - un-close rings (last point should not repeat first)\n *\n * WARN: input modified directly */\n\nvar cleanRing = function cleanRing(ring) {\n  if (ring.length === 0) return;\n  var ringLengthBeforeTheClean = ring.length;\n  var firstPt = ring[0];\n  var lastPt = ring[ring.length - 1];\n  if (firstPt.x === lastPt.x && firstPt.y === lastPt.y) ring.pop();\n\n  var isPointUncessary = function isPointUncessary(prevPt, pt, nextPt) {\n    return prevPt.x === pt.x && prevPt.y === pt.y || nextPt.x === pt.x && nextPt.y === pt.y || compareVectorAngles(pt, prevPt, nextPt) === 0;\n  };\n\n  var i = 0;\n  var prevPt, nextPt;\n\n  while (i < ring.length) {\n    prevPt = i === 0 ? ring[ring.length - 1] : ring[i - 1];\n    nextPt = i === ring.length - 1 ? ring[0] : ring[i + 1];\n    if (isPointUncessary(prevPt, ring[i], nextPt)) ring.splice(i, 1);else i++;\n  } // if our ring has less than 3 distinct points now (so is degenerate)\n  // shrink it down to the empty array to communicate to our caller to\n  // drop it\n\n\n  while (ring.length < 3 && ring.length > 0) {\n    ring.pop();\n  }\n  /**\n   * If at least one item has been removed from the ring, we need to re-run the cleanRing function with the new ring\n   * to avoid situations when new neighbor items are duplicated or have the same vector angle\n   *\n   * Imagine we have an initial ring with the following points:\n   * [{ x: 1, y: 1 },\n   *  { x: 2, y: 0 },\n   *  { x: 1, y: 0 },\n   *  { x: 1, y: 1 },\n   *  { x: 0,  y: 1 }]\n   *\n   * When we run the cleanRing with those points, it will remove from the list only the last one, as the value of the\n   * compareVectorAngles(pt, prevPt, nextPt) will be true ( compareVectorAngles({x: 0, y:1}, {x:1, y:1}, {x:1, y:1}) ),\n   * and the pre-last point will become the last one, which is the same as the first point, but the code wouldn't check\n   * that anymore and will move on with the result:\n   *\n   * [{ x: 1, y: 1 },\n   *  { x: 2, y: 0 },\n   *  { x: 1, y: 0 },\n   *  { x: 1, y: 1 }]\n   *\n   *  To prevent this kind of situation, we need to run the output data through the cleanRing function once again, if\n   *  at least one point has been removed\n   */\n\n\n  if (ringLengthBeforeTheClean !== ring.length) {\n    cleanRing(ring);\n  }\n};\n\nvar SweepEvent =\n/*#__PURE__*/\nfunction () {\n  _createClass(SweepEvent, null, [{\n    key: \"compare\",\n    // for ordering sweep events in the sweep event queue\n    value: function compare(a, b) {\n      // favor event with a point that the sweep line hits first\n      var ptCmp = SweepEvent.comparePoints(a.point, b.point);\n      if (ptCmp !== 0) return ptCmp; // the points are the same, so link them if needed\n\n      if (a.point !== b.point) a.link(b); // favor right events over left\n\n      if (a.isLeft !== b.isLeft) return a.isLeft ? 1 : -1; // we have two matching left or right endpoints\n      // ordering of this case is the same as for their segments\n\n      return Segment.compare(a.segment, b.segment);\n    } // for ordering points in sweep line order\n\n  }, {\n    key: \"comparePoints\",\n    value: function comparePoints(aPt, bPt) {\n      if (aPt.x < bPt.x) return -1;\n      if (aPt.x > bPt.x) return 1;\n      if (aPt.y < bPt.y) return -1;\n      if (aPt.y > bPt.y) return 1;\n      return 0;\n    } // Warning: 'point' input will be modified and re-used (for performance)\n\n  }]);\n\n  function SweepEvent(point, isLeft) {\n    _classCallCheck(this, SweepEvent);\n\n    if (point.events === undefined) point.events = [this];else point.events.push(this);\n    this.point = point;\n    this.isLeft = isLeft; // this.segment, this.otherSE set by factory\n  }\n\n  _createClass(SweepEvent, [{\n    key: \"link\",\n    value: function link(other) {\n      if (other.point === this.point) {\n        throw new Error('Tried to link already linked events');\n      }\n\n      var otherEvents = other.point.events;\n\n      for (var i = 0, iMax = otherEvents.length; i < iMax; i++) {\n        var evt = otherEvents[i];\n        this.point.events.push(evt);\n        evt.point = this.point;\n      }\n\n      this.checkForConsuming();\n    }\n    /* Do a pass over our linked events and check to see if any pair\n     * of segments match, and should be consumed. */\n\n  }, {\n    key: \"checkForConsuming\",\n    value: function checkForConsuming() {\n      // FIXME: The loops in this method run O(n^2) => no good.\n      //        Maintain little ordered sweep event trees?\n      //        Can we maintaining an ordering that avoids the need\n      //        for the re-sorting with getLeftmostComparator in geom-out?\n      // Compare each pair of events to see if other events also match\n      var numEvents = this.point.events.length;\n\n      for (var i = 0; i < numEvents; i++) {\n        var evt1 = this.point.events[i];\n        if (evt1.segment.consumedBy !== undefined) continue;\n\n        for (var j = i + 1; j < numEvents; j++) {\n          var evt2 = this.point.events[j];\n          if (evt2.consumedBy !== undefined) continue;\n          if (evt1.otherSE.point.events !== evt2.otherSE.point.events) continue;\n          evt1.segment.consume(evt2.segment);\n        }\n      }\n    }\n  }, {\n    key: \"getAvailableLinkedEvents\",\n    value: function getAvailableLinkedEvents() {\n      // point.events is always of length 2 or greater\n      var events = [];\n\n      for (var i = 0, iMax = this.point.events.length; i < iMax; i++) {\n        var evt = this.point.events[i];\n\n        if (evt !== this && !evt.segment.ringOut && evt.segment.isInResult()) {\n          events.push(evt);\n        }\n      }\n\n      return events;\n    }\n    /**\n     * Returns a comparator function for sorting linked events that will\n     * favor the event that will give us the smallest left-side angle.\n     * All ring construction starts as low as possible heading to the right,\n     * so by always turning left as sharp as possible we'll get polygons\n     * without uncessary loops & holes.\n     *\n     * The comparator function has a compute cache such that it avoids\n     * re-computing already-computed values.\n     */\n\n  }, {\n    key: \"getLeftmostComparator\",\n    value: function getLeftmostComparator(baseEvent) {\n      var _this = this;\n\n      var cache = new Map();\n\n      var fillCache = function fillCache(linkedEvent) {\n        var nextEvent = linkedEvent.otherSE;\n        cache.set(linkedEvent, {\n          sine: sineOfAngle(_this.point, baseEvent.point, nextEvent.point),\n          cosine: cosineOfAngle(_this.point, baseEvent.point, nextEvent.point)\n        });\n      };\n\n      return function (a, b) {\n        if (!cache.has(a)) fillCache(a);\n        if (!cache.has(b)) fillCache(b);\n\n        var _cache$get = cache.get(a),\n            asine = _cache$get.sine,\n            acosine = _cache$get.cosine;\n\n        var _cache$get2 = cache.get(b),\n            bsine = _cache$get2.sine,\n            bcosine = _cache$get2.cosine; // both on or above x-axis\n\n\n        if (asine >= 0 && bsine >= 0) {\n          if (acosine < bcosine) return 1;\n          if (acosine > bcosine) return -1;\n          return 0;\n        } // both below x-axis\n\n\n        if (asine < 0 && bsine < 0) {\n          if (acosine < bcosine) return -1;\n          if (acosine > bcosine) return 1;\n          return 0;\n        } // one above x-axis, one below\n\n\n        if (bsine < asine) return -1;\n        if (bsine > asine) return 1;\n        return 0;\n      };\n    }\n  }]);\n\n  return SweepEvent;\n}();\n\n/**\n * A bounding box has the format:\n *\n *  { ll: { x: xmin, y: ymin }, ur: { x: xmax, y: ymax } }\n *\n */\n\nvar isInBbox = function isInBbox(bbox, point) {\n  return bbox.ll.x <= point.x && point.x <= bbox.ur.x && bbox.ll.y <= point.y && point.y <= bbox.ur.y;\n};\n/* Greedy comparison with a bbox. A point is defined to 'touch'\n * a bbox if:\n *  - it is inside the bbox\n *  - it 'touches' one of the sides (another greedy comparison) */\n\nvar touchesBbox = function touchesBbox(bbox, point) {\n  return (bbox.ll.x <= point.x || touch(bbox.ll.x, point.x)) && (point.x <= bbox.ur.x || touch(point.x, bbox.ur.x)) && (bbox.ll.y <= point.y || touch(bbox.ll.y, point.y)) && (point.y <= bbox.ur.y || touch(point.y, bbox.ur.y));\n};\n/* Returns either null, or a bbox (aka an ordered pair of points)\n * If there is only one point of overlap, a bbox with identical points\n * will be returned */\n\nvar getBboxOverlap = function getBboxOverlap(b1, b2) {\n  // check if the bboxes overlap at all\n  if (b2.ur.x < b1.ll.x || b1.ur.x < b2.ll.x || b2.ur.y < b1.ll.y || b1.ur.y < b2.ll.y) return null; // find the middle two X values\n\n  var lowerX = b1.ll.x < b2.ll.x ? b2.ll.x : b1.ll.x;\n  var upperX = b1.ur.x < b2.ur.x ? b1.ur.x : b2.ur.x; // find the middle two Y values\n\n  var lowerY = b1.ll.y < b2.ll.y ? b2.ll.y : b1.ll.y;\n  var upperY = b1.ur.y < b2.ur.y ? b1.ur.y : b2.ur.y; // put those middle values together to get the overlap\n\n  return {\n    ll: {\n      x: lowerX,\n      y: lowerY\n    },\n    ur: {\n      x: upperX,\n      y: upperY\n    }\n  };\n};\n\n// segments and sweep events when all else is identical\n\nvar segmentId = 0;\n\nvar Segment =\n/*#__PURE__*/\nfunction () {\n  _createClass(Segment, null, [{\n    key: \"compare\",\n\n    /* This compare() function is for ordering segments in the sweep\n     * line tree, and does so according to the following criteria:\n     *\n     * Consider the vertical line that lies an infinestimal step to the\n     * right of the right-more of the two left endpoints of the input\n     * segments. Imagine slowly moving a point up from negative infinity\n     * in the increasing y direction. Which of the two segments will that\n     * point intersect first? That segment comes 'before' the other one.\n     *\n     * If neither segment would be intersected by such a line, (if one\n     * or more of the segments are vertical) then the line to be considered\n     * is directly on the right-more of the two left inputs.\n     */\n    value: function compare(a, b) {\n      var alx = a.leftSE.point.x;\n      var blx = b.leftSE.point.x;\n      var arx = a.rightSE.point.x;\n      var brx = b.rightSE.point.x; // check if they're even in the same vertical plane\n\n      if (brx < alx) return 1;\n      if (arx < blx) return -1;\n      var aly = a.leftSE.point.y;\n      var bly = b.leftSE.point.y;\n      var ary = a.rightSE.point.y;\n      var bry = b.rightSE.point.y; // is left endpoint of segment B the right-more?\n\n      if (alx < blx) {\n        // are the two segments in the same horizontal plane?\n        if (bly < aly && bly < ary) return 1;\n        if (bly > aly && bly > ary) return -1; // is the B left endpoint colinear to segment A?\n\n        var aCmpBLeft = a.comparePoint(b.leftSE.point);\n        if (aCmpBLeft < 0) return 1;\n        if (aCmpBLeft > 0) return -1; // is the A right endpoint colinear to segment B ?\n\n        var bCmpARight = b.comparePoint(a.rightSE.point);\n        if (bCmpARight !== 0) return bCmpARight; // colinear segments, consider the one with left-more\n        // left endpoint to be first (arbitrary?)\n\n        return -1;\n      } // is left endpoint of segment A the right-more?\n\n\n      if (alx > blx) {\n        if (aly < bly && aly < bry) return -1;\n        if (aly > bly && aly > bry) return 1; // is the A left endpoint colinear to segment B?\n\n        var bCmpALeft = b.comparePoint(a.leftSE.point);\n        if (bCmpALeft !== 0) return bCmpALeft; // is the B right endpoint colinear to segment A?\n\n        var aCmpBRight = a.comparePoint(b.rightSE.point);\n        if (aCmpBRight < 0) return 1;\n        if (aCmpBRight > 0) return -1; // colinear segments, consider the one with left-more\n        // left endpoint to be first (arbitrary?)\n\n        return 1;\n      } // if we get here, the two left endpoints are in the same\n      // vertical plane, ie alx === blx\n      // consider the lower left-endpoint to come first\n\n\n      if (aly < bly) return -1;\n      if (aly > bly) return 1; // left endpoints are identical\n      // check for colinearity by using the left-more right endpoint\n      // is the A right endpoint more left-more?\n\n      if (arx < brx) {\n        var _bCmpARight = b.comparePoint(a.rightSE.point);\n\n        if (_bCmpARight !== 0) return _bCmpARight; // colinear segments with matching left endpoints,\n        // consider the one with more left-more right endpoint to be first\n\n        return -1;\n      } // is the B right endpoint more left-more?\n\n\n      if (arx > brx) {\n        var _aCmpBRight = a.comparePoint(b.rightSE.point);\n\n        if (_aCmpBRight < 0) return 1;\n        if (_aCmpBRight > 0) return -1; // colinear segments with matching left endpoints,\n        // consider the one with more left-more right endpoint to be first\n\n        return 1;\n      } // if we get here, two two right endpoints are in the same\n      // vertical plane, ie arx === brx\n      // consider the lower right-endpoint to come first\n\n\n      if (ary < bry) return -1;\n      if (ary > bry) return 1; // right endpoints identical as well, so the segments are idential\n      // fall back on creation order as consistent tie-breaker\n\n      if (a.id < b.id) return -1;\n      if (a.id > b.id) return 1; // identical segment, ie a === b\n\n      return 0;\n    }\n    /* Warning: a reference to ringsIn input will be stored,\n     *  and possibly will be later modified */\n\n  }]);\n\n  function Segment(leftSE, rightSE, ringsIn) {\n    _classCallCheck(this, Segment);\n\n    this.id = ++segmentId;\n    this.leftSE = leftSE;\n    leftSE.segment = this;\n    leftSE.otherSE = rightSE;\n    this.rightSE = rightSE;\n    rightSE.segment = this;\n    rightSE.otherSE = leftSE;\n    this.ringsIn = ringsIn;\n    this._cache = {}; // left unset for performance, set later in algorithm\n    // this.ringOut, this.consumedBy, this.prev\n  }\n\n  _createClass(Segment, [{\n    key: \"replaceRightSE\",\n\n    /* When a segment is split, the rightSE is replaced with a new sweep event */\n    value: function replaceRightSE(newRightSE) {\n      this.rightSE = newRightSE;\n      this.rightSE.segment = this;\n      this.rightSE.otherSE = this.leftSE;\n      this.leftSE.otherSE = this.rightSE;\n    }\n  }, {\n    key: \"bbox\",\n    value: function bbox() {\n      var y1 = this.leftSE.point.y;\n      var y2 = this.rightSE.point.y;\n      return {\n        ll: {\n          x: this.leftSE.point.x,\n          y: y1 < y2 ? y1 : y2\n        },\n        ur: {\n          x: this.rightSE.point.x,\n          y: y1 > y2 ? y1 : y2\n        }\n      };\n    }\n    /* A vector from the left point to the right */\n\n  }, {\n    key: \"vector\",\n    value: function vector() {\n      return {\n        x: this.rightSE.point.x - this.leftSE.point.x,\n        y: this.rightSE.point.y - this.leftSE.point.y\n      };\n    }\n  }, {\n    key: \"isAnEndpoint\",\n    value: function isAnEndpoint(pt) {\n      return pt.x === this.leftSE.point.x && pt.y === this.leftSE.point.y || pt.x === this.rightSE.point.x && pt.y === this.rightSE.point.y;\n    }\n    /* Compare this segment with a point. Return value indicates:\n     *     1: point lies above or to the left of segment\n     *     0: point is colinear to segment\n     *    -1: point is below or to the right of segment */\n\n  }, {\n    key: \"comparePoint\",\n    value: function comparePoint(point) {\n      if (this.isAnEndpoint(point)) return 0;\n      var interPt = closestPoint(this.leftSE.point, this.rightSE.point, point);\n      if (point.y < interPt.y) return -1;\n      if (point.y > interPt.y) return 1; // depending on if our segment angles up or down,\n      // the x coord comparison means oppposite things\n\n      if (point.x < interPt.x) {\n        if (this.leftSE.point.y < this.rightSE.point.y) return 1;\n        if (this.leftSE.point.y > this.rightSE.point.y) return -1;\n      }\n\n      if (point.x > interPt.x) {\n        if (this.leftSE.point.y < this.rightSE.point.y) return -1;\n        if (this.leftSE.point.y > this.rightSE.point.y) return 1;\n      } // on the line\n\n\n      return 0;\n    }\n    /* Does the point in question touch the given segment?\n     * Greedy - essentially a 2 * Number.EPSILON comparison.\n     * If it's not possible to add an independent point between the\n     * point and the segment, we say the point 'touches' the segment. */\n\n  }, {\n    key: \"touches\",\n    value: function touches(point) {\n      if (!touchesBbox(this.bbox(), point)) return false; // if the points have been linked already, performance boost use that\n\n      if (point === this.leftSE.point || point === this.rightSE.point) return true; // avoid doing vector math on tiny vectors\n\n      if (touchPoints(this.leftSE.point, point)) return true;\n      if (touchPoints(this.rightSE.point, point)) return true;\n      var cPt1 = closestPoint(this.leftSE.point, this.rightSE.point, point);\n      var avgPt1 = {\n        x: (cPt1.x + point.x) / 2,\n        y: (cPt1.y + point.y) / 2\n      };\n      return touchPoints(avgPt1, cPt1) || touchPoints(avgPt1, point);\n    }\n    /**\n     * Given another segment, returns the first non-trivial intersection\n     * between the two segments (in terms of sweep line ordering), if it exists.\n     *\n     * A 'non-trivial' intersection is one that will cause one or both of the\n     * segments to be split(). As such, 'trivial' vs. 'non-trivial' intersection:\n     *\n     *   * endpoint of segA with endpoint of segB --> trivial\n     *   * endpoint of segA with point along segB --> non-trivial\n     *   * endpoint of segB with point along segA --> non-trivial\n     *   * point along segA with point along segB --> non-trivial\n     *\n     * If no non-trivial intersection exists, return null\n     * Else, return null.\n     */\n\n  }, {\n    key: \"getIntersection\",\n    value: function getIntersection(other) {\n      // If bboxes don't overlap, there can't be any intersections\n      var bboxOverlap = getBboxOverlap(this.bbox(), other.bbox());\n      if (bboxOverlap === null) return null; // We first check to see if the endpoints can be considered intersections.\n      // This will 'snap' intersections to endpoints if possible, and will\n      // handle cases of colinearity.\n      // does each endpoint touch the other segment?\n\n      var touchesOtherLSE = this.touches(other.leftSE.point);\n      var touchesThisLSE = other.touches(this.leftSE.point);\n      var touchesOtherRSE = this.touches(other.rightSE.point);\n      var touchesThisRSE = other.touches(this.rightSE.point); // do left endpoints match?\n\n      if (touchesThisLSE && touchesOtherLSE) {\n        // these two cases are for colinear segments with matching left\n        // endpoints, and one segment being longer than the other\n        if (touchesThisRSE && !touchesOtherRSE) return this.rightSE.point;\n        if (!touchesThisRSE && touchesOtherRSE) return other.rightSE.point; // either the two segments match exactly (two trival intersections)\n        // or just on their left endpoint (one trivial intersection\n\n        return null;\n      } // does this left endpoint matches (other doesn't)\n\n\n      if (touchesThisLSE) {\n        // check for segments that just intersect on opposing endpoints\n        if (touchesOtherRSE && touchPoints(this.leftSE.point, other.rightSE.point)) return null; // t-intersection on left endpoint\n\n        return this.leftSE.point;\n      } // does other left endpoint matches (this doesn't)\n\n\n      if (touchesOtherLSE) {\n        // check for segments that just intersect on opposing endpoints\n        if (touchesThisRSE && touchPoints(this.rightSE.point, other.leftSE.point)) return null; // t-intersection on left endpoint\n\n        return other.leftSE.point;\n      } // trivial intersection on right endpoints\n\n\n      if (touchesThisRSE && touchesOtherRSE) return null; // t-intersections on just one right endpoint\n\n      if (touchesThisRSE) return this.rightSE.point;\n      if (touchesOtherRSE) return other.rightSE.point; // None of our endpoints intersect. Look for a general intersection between\n      // infinite lines laid over the segments\n\n      var pt = intersection(this.leftSE.point, this.vector(), other.leftSE.point, other.vector()); // are the segments parrallel? Note that if they were colinear with overlap,\n      // they would have an endpoint intersection and that case was already handled above\n\n      if (pt === null) return null; // is the intersection found between the lines not on the segments?\n\n      if (!isInBbox(bboxOverlap, pt)) return null; // round the the computed point if needed\n\n      return rounder.round(pt.x, pt.y);\n    }\n    /**\n     * Split the given segment into multiple segments on the given points.\n     *  * Each existing segment will retain its leftSE and a new rightSE will be\n     *    generated for it.\n     *  * A new segment will be generated which will adopt the original segment's\n     *    rightSE, and a new leftSE will be generated for it.\n     *  * If there are more than two points given to split on, new segments\n     *    in the middle will be generated with new leftSE and rightSE's.\n     *  * An array of the newly generated SweepEvents will be returned.\n     *\n     * Warning: input array of points is modified\n     */\n\n  }, {\n    key: \"split\",\n    value: function split(point) {\n      var newEvents = [];\n      var alreadyLinked = point.events !== undefined;\n      var newLeftSE = new SweepEvent(point, true);\n      var newRightSE = new SweepEvent(point, false);\n      var oldRightSE = this.rightSE;\n      this.replaceRightSE(newRightSE);\n      newEvents.push(newRightSE);\n      newEvents.push(newLeftSE);\n      new Segment(newLeftSE, oldRightSE, this.ringsIn.slice()); // in the point we just used to create new sweep events with was already\n      // linked to other events, we need to check if either of the affected\n      // segments should be consumed\n\n      if (alreadyLinked) {\n        newLeftSE.checkForConsuming();\n        newRightSE.checkForConsuming();\n      }\n\n      return newEvents;\n    }\n    /* Consume another segment. We take their ringsIn under our wing\n     * and mark them as consumed. Use for perfectly overlapping segments */\n\n  }, {\n    key: \"consume\",\n    value: function consume(other) {\n      var consumer = this;\n      var consumee = other;\n\n      while (consumer.consumedBy) {\n        consumer = consumer.consumedBy;\n      }\n\n      while (consumee.consumedBy) {\n        consumee = consumee.consumedBy;\n      }\n\n      var cmp$$1 = Segment.compare(consumer, consumee);\n      if (cmp$$1 === 0) return; // already consumed\n      // the winner of the consumption is the earlier segment\n      // according to sweep line ordering\n\n      if (cmp$$1 > 0) {\n        var tmp = consumer;\n        consumer = consumee;\n        consumee = tmp;\n      } // make sure a segment doesn't consume it's prev\n\n\n      if (consumer.prev === consumee) {\n        var _tmp = consumer;\n        consumer = consumee;\n        consumee = _tmp;\n      }\n\n      for (var i = 0, iMax = consumee.ringsIn.length; i < iMax; i++) {\n        consumer.ringsIn.push(consumee.ringsIn[i]);\n      }\n\n      consumee.ringsIn = null;\n      consumee.consumedBy = consumer; // mark sweep events consumed as to maintain ordering in sweep event queue\n\n      consumee.leftSE.consumedBy = consumer.leftSE;\n      consumee.rightSE.consumedBy = consumer.rightSE;\n    }\n    /* The first segment previous segment chain that is in the result */\n\n  }, {\n    key: \"prevInResult\",\n    value: function prevInResult() {\n      var key = 'prevInResult';\n      if (this._cache[key] === undefined) this._cache[key] = this[\"_\".concat(key)]();\n      return this._cache[key];\n    }\n  }, {\n    key: \"_prevInResult\",\n    value: function _prevInResult() {\n      if (!this.prev) return null;\n      if (this.prev.isInResult()) return this.prev;\n      return this.prev.prevInResult();\n    }\n  }, {\n    key: \"ringsBefore\",\n    value: function ringsBefore() {\n      var key = 'ringsBefore';\n      if (this._cache[key] === undefined) this._cache[key] = this[\"_\".concat(key)]();\n      return this._cache[key];\n    }\n  }, {\n    key: \"_ringsBefore\",\n    value: function _ringsBefore() {\n      if (!this.prev) return [];\n      return (this.prev.consumedBy || this.prev).ringsAfter();\n    }\n  }, {\n    key: \"ringsAfter\",\n    value: function ringsAfter() {\n      var key = 'ringsAfter';\n      if (this._cache[key] === undefined) this._cache[key] = this[\"_\".concat(key)]();\n      return this._cache[key];\n    }\n  }, {\n    key: \"_ringsAfter\",\n    value: function _ringsAfter() {\n      var rings = this.ringsBefore().slice(0);\n\n      for (var i = 0, iMax = this.ringsIn.length; i < iMax; i++) {\n        var ring = this.ringsIn[i];\n        var index = rings.indexOf(ring);\n        if (index === -1) rings.push(ring);else rings.splice(index, 1);\n      }\n\n      return rings;\n    }\n  }, {\n    key: \"multiPolysBefore\",\n    value: function multiPolysBefore() {\n      var key = 'multiPolysBefore';\n      if (this._cache[key] === undefined) this._cache[key] = this[\"_\".concat(key)]();\n      return this._cache[key];\n    }\n  }, {\n    key: \"_multiPolysBefore\",\n    value: function _multiPolysBefore() {\n      if (!this.prev) return [];\n      return (this.prev.consumedBy || this.prev).multiPolysAfter();\n    }\n  }, {\n    key: \"multiPolysAfter\",\n    value: function multiPolysAfter() {\n      var key = 'multiPolysAfter';\n      if (this._cache[key] === undefined) this._cache[key] = this[\"_\".concat(key)]();\n      return this._cache[key];\n    }\n  }, {\n    key: \"_multiPolysAfter\",\n    value: function _multiPolysAfter() {\n      // first calcualte our polysAfter\n      var polysAfter = [];\n      var polysExclude = [];\n      var ringsAfter = this.ringsAfter();\n\n      for (var i = 0, iMax = ringsAfter.length; i < iMax; i++) {\n        var ring = ringsAfter[i];\n        var poly = ring.poly;\n        if (polysExclude.indexOf(poly) !== -1) continue;\n        if (ring.isExterior) polysAfter.push(poly);else {\n          if (polysExclude.indexOf(poly) === -1) polysExclude.push(poly);\n          var index = polysAfter.indexOf(ring.poly);\n          if (index !== -1) polysAfter.splice(index, 1);\n        }\n      } // now calculate our multiPolysAfter\n\n\n      var mps = [];\n\n      for (var _i = 0, _iMax = polysAfter.length; _i < _iMax; _i++) {\n        var mp = polysAfter[_i].multiPoly;\n        if (mps.indexOf(mp) === -1) mps.push(mp);\n      }\n\n      return mps;\n    }\n    /* Is this segment part of the final result? */\n\n  }, {\n    key: \"isInResult\",\n    value: function isInResult() {\n      var key = 'isInResult';\n      if (this._cache[key] === undefined) this._cache[key] = this[\"_\".concat(key)]();\n      return this._cache[key];\n    }\n  }, {\n    key: \"_isInResult\",\n    value: function _isInResult() {\n      // if we've been consumed, we're not in the result\n      if (this.consumedBy) return false;\n      var mpsBefore = this.multiPolysBefore();\n      var mpsAfter = this.multiPolysAfter();\n\n      switch (operation.type) {\n        case 'union':\n          {\n            // UNION - included iff:\n            //  * On one side of us there is 0 poly interiors AND\n            //  * On the other side there is 1 or more.\n            var noBefores = mpsBefore.length === 0;\n            var noAfters = mpsAfter.length === 0;\n            return noBefores !== noAfters;\n          }\n\n        case 'intersection':\n          {\n            // INTERSECTION - included iff:\n            //  * on one side of us all multipolys are rep. with poly interiors AND\n            //  * on the other side of us, not all multipolys are repsented\n            //    with poly interiors\n            var least;\n            var most;\n\n            if (mpsBefore.length < mpsAfter.length) {\n              least = mpsBefore.length;\n              most = mpsAfter.length;\n            } else {\n              least = mpsAfter.length;\n              most = mpsBefore.length;\n            }\n\n            return most === operation.numMultiPolys && least < most;\n          }\n\n        case 'xor':\n          {\n            // XOR - included iff:\n            //  * the difference between the number of multipolys represented\n            //    with poly interiors on our two sides is an odd number\n            var diff = Math.abs(mpsBefore.length - mpsAfter.length);\n            return diff % 2 === 1;\n          }\n\n        case 'difference':\n          {\n            // DIFFERENCE included iff:\n            //  * on exactly one side, we have just the subject\n            var isJustSubject = function isJustSubject(mps) {\n              return mps.length === 1 && mps[0].isSubject;\n            };\n\n            return isJustSubject(mpsBefore) !== isJustSubject(mpsAfter);\n          }\n\n        default:\n          throw new Error(\"Unrecognized operation type found \".concat(operation.type));\n      }\n    }\n  }], [{\n    key: \"fromRing\",\n    value: function fromRing(pt1, pt2, ring) {\n      var leftPt, rightPt; // ordering the two points according to sweep line ordering\n\n      var cmpPts = SweepEvent.comparePoints(pt1, pt2);\n\n      if (cmpPts < 0) {\n        leftPt = pt1;\n        rightPt = pt2;\n      } else if (cmpPts > 0) {\n        leftPt = pt2;\n        rightPt = pt1;\n      } else throw new Error(\"Tried to create degenerate segment at [\".concat(pt1.x, \", \").concat(pt1.y, \"]\"));\n\n      var leftSE = new SweepEvent(leftPt, true);\n      var rightSE = new SweepEvent(rightPt, false);\n      return new Segment(leftSE, rightSE, [ring]);\n    }\n  }]);\n\n  return Segment;\n}();\n\nvar RingIn =\n/*#__PURE__*/\nfunction () {\n  function RingIn(geomRing, poly, isExterior) {\n    _classCallCheck(this, RingIn);\n\n    this.poly = poly;\n    this.isExterior = isExterior;\n    this.segments = [];\n    var prevPoint = geomRing[0];\n\n    for (var i = 1, iMax = geomRing.length; i < iMax; i++) {\n      var point = geomRing[i];\n      this.segments.push(Segment.fromRing(prevPoint, point, this));\n      prevPoint = point;\n    }\n\n    this.segments.push(Segment.fromRing(prevPoint, geomRing[0], this));\n  }\n\n  _createClass(RingIn, [{\n    key: \"getSweepEvents\",\n    value: function getSweepEvents() {\n      var sweepEvents = [];\n\n      for (var i = 0, iMax = this.segments.length; i < iMax; i++) {\n        var segment = this.segments[i];\n        sweepEvents.push(segment.leftSE);\n        sweepEvents.push(segment.rightSE);\n      }\n\n      return sweepEvents;\n    }\n  }]);\n\n  return RingIn;\n}();\nvar PolyIn =\n/*#__PURE__*/\nfunction () {\n  function PolyIn(geomPoly, multiPoly) {\n    _classCallCheck(this, PolyIn);\n\n    this.exteriorRing = new RingIn(geomPoly[0], this, true);\n    this.interiorRings = [];\n\n    for (var i = 1, iMax = geomPoly.length; i < iMax; i++) {\n      this.interiorRings.push(new RingIn(geomPoly[i], this, false));\n    }\n\n    this.multiPoly = multiPoly;\n  }\n\n  _createClass(PolyIn, [{\n    key: \"getSweepEvents\",\n    value: function getSweepEvents() {\n      var sweepEvents = this.exteriorRing.getSweepEvents();\n\n      for (var i = 0, iMax = this.interiorRings.length; i < iMax; i++) {\n        var ringSweepEvents = this.interiorRings[i].getSweepEvents();\n\n        for (var j = 0, jMax = ringSweepEvents.length; j < jMax; j++) {\n          sweepEvents.push(ringSweepEvents[j]);\n        }\n      }\n\n      return sweepEvents;\n    }\n  }]);\n\n  return PolyIn;\n}();\nvar MultiPolyIn =\n/*#__PURE__*/\nfunction () {\n  function MultiPolyIn(geomMultiPoly) {\n    _classCallCheck(this, MultiPolyIn);\n\n    this.polys = [];\n\n    for (var i = 0, iMax = geomMultiPoly.length; i < iMax; i++) {\n      this.polys.push(new PolyIn(geomMultiPoly[i], this));\n    }\n\n    this.isSubject = false;\n  }\n\n  _createClass(MultiPolyIn, [{\n    key: \"markAsSubject\",\n    value: function markAsSubject() {\n      this.isSubject = true;\n    }\n  }, {\n    key: \"getSweepEvents\",\n    value: function getSweepEvents() {\n      var sweepEvents = [];\n\n      for (var i = 0, iMax = this.polys.length; i < iMax; i++) {\n        var polySweepEvents = this.polys[i].getSweepEvents();\n\n        for (var j = 0, jMax = polySweepEvents.length; j < jMax; j++) {\n          sweepEvents.push(polySweepEvents[j]);\n        }\n      }\n\n      return sweepEvents;\n    }\n  }]);\n\n  return MultiPolyIn;\n}();\n\nvar RingOut =\n/*#__PURE__*/\nfunction () {\n  _createClass(RingOut, null, [{\n    key: \"factory\",\n\n    /* Given the segments from the sweep line pass, compute & return a series\n     * of closed rings from all the segments marked to be part of the result */\n    value: function factory(allSegments) {\n      var ringsOut = [];\n\n      for (var i = 0, iMax = allSegments.length; i < iMax; i++) {\n        var segment = allSegments[i];\n        if (!segment.isInResult() || segment.ringOut) continue;\n        var prevEvent = null;\n        var event = segment.leftSE;\n        var nextEvent = segment.rightSE;\n        var events = [event];\n        var startingPoint = event.point;\n        var intersectionLEs = [];\n        /* Walk the chain of linked events to form a closed ring */\n\n        while (true) {\n          prevEvent = event;\n          event = nextEvent;\n          events.push(event);\n          /* Is the ring complete? */\n\n          if (event.point === startingPoint) break;\n\n          while (true) {\n            var availableLEs = event.getAvailableLinkedEvents();\n            /* Did we hit a dead end? This shouldn't happen. Indicates some earlier\n             * part of the algorithm malfunctioned... please file a bug report. */\n\n            if (availableLEs.length === 0) {\n              var firstPt = events[0].point;\n              var lastPt = events[events.length - 1].point;\n              throw new Error(\"Unable to complete output ring starting at [\".concat(firstPt.x, \",\") + \" \".concat(firstPt.y, \"]. Last matching segment found ends at\") + \" [\".concat(lastPt.x, \", \").concat(lastPt.y, \"].\"));\n            }\n            /* Only one way to go, so cotinue on the path */\n\n\n            if (availableLEs.length === 1) {\n              nextEvent = availableLEs[0].otherSE;\n              break;\n            }\n            /* We must have an intersection. Check for a completed loop */\n\n\n            var indexLE = null;\n\n            for (var j = 0, jMax = intersectionLEs.length; j < jMax; j++) {\n              if (intersectionLEs[j].point === event.point) {\n                indexLE = j;\n                break;\n              }\n            }\n            /* Found a completed loop. Cut that off and make a ring */\n\n\n            if (indexLE !== null) {\n              var intersectionLE = intersectionLEs.splice(indexLE)[0];\n              var ringEvents = events.splice(intersectionLE.index);\n              ringEvents.unshift(ringEvents[0].otherSE);\n              ringsOut.push(new RingOut(ringEvents.reverse()));\n              continue;\n            }\n            /* register the intersection */\n\n\n            intersectionLEs.push({\n              index: events.length,\n              point: event.point\n            });\n            /* Choose the left-most option to continue the walk */\n\n            var comparator = event.getLeftmostComparator(prevEvent);\n            nextEvent = availableLEs.sort(comparator)[0].otherSE;\n            break;\n          }\n        }\n\n        ringsOut.push(new RingOut(events));\n      }\n\n      return ringsOut;\n    }\n  }]);\n\n  function RingOut(events) {\n    _classCallCheck(this, RingOut);\n\n    this.events = events;\n\n    for (var i = 0, iMax = events.length; i < iMax; i++) {\n      events[i].segment.ringOut = this;\n    }\n\n    this.poly = null;\n  }\n\n  _createClass(RingOut, [{\n    key: \"getGeom\",\n    value: function getGeom() {\n      // Remove superfluous points (ie extra points along a straight line),\n      var prevPt = this.events[0].point;\n      var points = [prevPt];\n\n      for (var i = 1, iMax = this.events.length - 1; i < iMax; i++) {\n        var _pt = this.events[i].point;\n        var _nextPt = this.events[i + 1].point;\n        if (compareVectorAngles(_pt, prevPt, _nextPt) === 0) continue;\n        points.push(_pt);\n        prevPt = _pt;\n      } // ring was all (within rounding error of angle calc) colinear points\n\n\n      if (points.length === 1) return null; // check if the starting point is necessary\n\n      var pt = points[0];\n      var nextPt = points[1];\n      if (compareVectorAngles(pt, prevPt, nextPt) === 0) points.shift();\n      points.push(points[0]);\n      var step = this.isExteriorRing() ? 1 : -1;\n      var iStart = this.isExteriorRing() ? 0 : points.length - 1;\n      var iEnd = this.isExteriorRing() ? points.length : -1;\n      var orderedPoints = [];\n\n      for (var _i = iStart; _i != iEnd; _i += step) {\n        orderedPoints.push([points[_i].x, points[_i].y]);\n      }\n\n      return orderedPoints;\n    }\n  }, {\n    key: \"isExteriorRing\",\n    value: function isExteriorRing() {\n      if (this._isExteriorRing === undefined) {\n        var enclosing = this.enclosingRing();\n        this._isExteriorRing = enclosing ? !enclosing.isExteriorRing() : true;\n      }\n\n      return this._isExteriorRing;\n    }\n  }, {\n    key: \"enclosingRing\",\n    value: function enclosingRing() {\n      if (this._enclosingRing === undefined) {\n        this._enclosingRing = this._calcEnclosingRing();\n      }\n\n      return this._enclosingRing;\n    }\n    /* Returns the ring that encloses this one, if any */\n\n  }, {\n    key: \"_calcEnclosingRing\",\n    value: function _calcEnclosingRing() {\n      // start with the ealier sweep line event so that the prevSeg\n      // chain doesn't lead us inside of a loop of ours\n      var leftMostEvt = this.events[0];\n\n      for (var i = 1, iMax = this.events.length; i < iMax; i++) {\n        var evt = this.events[i];\n        if (SweepEvent.compare(leftMostEvt, evt) > 0) leftMostEvt = evt;\n      }\n\n      var prevSeg = leftMostEvt.segment.prevInResult();\n      var prevPrevSeg = prevSeg ? prevSeg.prevInResult() : null;\n\n      while (true) {\n        // no segment found, thus no ring can enclose us\n        if (!prevSeg) return null; // no segments below prev segment found, thus the ring of the prev\n        // segment must loop back around and enclose us\n\n        if (!prevPrevSeg) return prevSeg.ringOut; // if the two segments are of different rings, the ring of the prev\n        // segment must either loop around us or the ring of the prev prev\n        // seg, which would make us and the ring of the prev peers\n\n        if (prevPrevSeg.ringOut !== prevSeg.ringOut) {\n          if (prevPrevSeg.ringOut.enclosingRing() !== prevSeg.ringOut) {\n            return prevSeg.ringOut;\n          } else return prevSeg.ringOut.enclosingRing();\n        } // two segments are from the same ring, so this was a penisula\n        // of that ring. iterate downward, keep searching\n\n\n        prevSeg = prevPrevSeg.prevInResult();\n        prevPrevSeg = prevSeg ? prevSeg.prevInResult() : null;\n      }\n    }\n  }]);\n\n  return RingOut;\n}();\nvar PolyOut =\n/*#__PURE__*/\nfunction () {\n  function PolyOut(exteriorRing) {\n    _classCallCheck(this, PolyOut);\n\n    this.exteriorRing = exteriorRing;\n    exteriorRing.poly = this;\n    this.interiorRings = [];\n  }\n\n  _createClass(PolyOut, [{\n    key: \"addInterior\",\n    value: function addInterior(ring) {\n      this.interiorRings.push(ring);\n      ring.poly = this;\n    }\n  }, {\n    key: \"getGeom\",\n    value: function getGeom() {\n      var geom = [this.exteriorRing.getGeom()]; // exterior ring was all (within rounding error of angle calc) colinear points\n\n      if (geom[0] === null) return null;\n\n      for (var i = 0, iMax = this.interiorRings.length; i < iMax; i++) {\n        var ringGeom = this.interiorRings[i].getGeom(); // interior ring was all (within rounding error of angle calc) colinear points\n\n        if (ringGeom === null) continue;\n        geom.push(ringGeom);\n      }\n\n      return geom;\n    }\n  }]);\n\n  return PolyOut;\n}();\nvar MultiPolyOut =\n/*#__PURE__*/\nfunction () {\n  function MultiPolyOut(rings) {\n    _classCallCheck(this, MultiPolyOut);\n\n    this.rings = rings;\n    this.polys = this._composePolys(rings);\n  }\n\n  _createClass(MultiPolyOut, [{\n    key: \"getGeom\",\n    value: function getGeom() {\n      var geom = [];\n\n      for (var i = 0, iMax = this.polys.length; i < iMax; i++) {\n        var polyGeom = this.polys[i].getGeom(); // exterior ring was all (within rounding error of angle calc) colinear points\n\n        if (polyGeom === null) continue;\n        geom.push(polyGeom);\n      }\n\n      return geom;\n    }\n  }, {\n    key: \"_composePolys\",\n    value: function _composePolys(rings) {\n      var polys = [];\n\n      for (var i = 0, iMax = rings.length; i < iMax; i++) {\n        var ring = rings[i];\n        if (ring.poly) continue;\n        if (ring.isExteriorRing()) polys.push(new PolyOut(ring));else {\n          var enclosingRing = ring.enclosingRing();\n          if (!enclosingRing.poly) polys.push(new PolyOut(enclosingRing));\n          enclosingRing.poly.addInterior(ring);\n        }\n      }\n\n      return polys;\n    }\n  }]);\n\n  return MultiPolyOut;\n}();\n\n/**\n * NOTE:  We must be careful not to change any segments while\n *        they are in the SplayTree. AFAIK, there's no way to tell\n *        the tree to rebalance itself - thus before splitting\n *        a segment that's in the tree, we remove it from the tree,\n *        do the split, then re-insert it. (Even though splitting a\n *        segment *shouldn't* change its correct position in the\n *        sweep line tree, the reality is because of rounding errors,\n *        it sometimes does.)\n */\n\nvar SweepLine =\n/*#__PURE__*/\nfunction () {\n  function SweepLine(queue) {\n    var comparator = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : Segment.compare;\n\n    _classCallCheck(this, SweepLine);\n\n    this.queue = queue;\n    this.tree = new SplayTree(comparator);\n    this.segments = [];\n  }\n\n  _createClass(SweepLine, [{\n    key: \"process\",\n    value: function process(event) {\n      var segment = event.segment;\n      var newEvents = []; // if we've already been consumed by another segment,\n      // clean up our body parts and get out\n\n      if (event.consumedBy) {\n        if (event.isLeft) this.queue.remove(event.otherSE);else this.tree.remove(segment);\n        return newEvents;\n      }\n\n      var node = event.isLeft ? this.tree.insert(segment) : this.tree.find(segment);\n      if (!node) throw new Error(\"Unable to find segment #\".concat(segment.id, \" \") + \"[\".concat(segment.leftSE.point.x, \", \").concat(segment.leftSE.point.y, \"] -> \") + \"[\".concat(segment.rightSE.point.x, \", \").concat(segment.rightSE.point.y, \"] \") + 'in SweepLine tree. Please submit a bug report.');\n      var prevNode = node;\n      var nextNode = node;\n      var prevSeg = undefined;\n      var nextSeg = undefined; // skip consumed segments still in tree\n\n      while (prevSeg === undefined) {\n        prevNode = this.tree.prev(prevNode);\n        if (prevNode === null) prevSeg = null;else if (prevNode.key.consumedBy === undefined) prevSeg = prevNode.key;\n      } // skip consumed segments still in tree\n\n\n      while (nextSeg === undefined) {\n        nextNode = this.tree.next(nextNode);\n        if (nextNode === null) nextSeg = null;else if (nextNode.key.consumedBy === undefined) nextSeg = nextNode.key;\n      }\n\n      if (event.isLeft) {\n        // Check for intersections against the previous segment in the sweep line\n        var prevMySplitter = null;\n\n        if (prevSeg) {\n          var prevInter = prevSeg.getIntersection(segment);\n\n          if (prevInter !== null) {\n            if (!segment.isAnEndpoint(prevInter)) prevMySplitter = prevInter;\n\n            if (!prevSeg.isAnEndpoint(prevInter)) {\n              var newEventsFromSplit = this._splitSafely(prevSeg, prevInter);\n\n              for (var i = 0, iMax = newEventsFromSplit.length; i < iMax; i++) {\n                newEvents.push(newEventsFromSplit[i]);\n              }\n            }\n          }\n        } // Check for intersections against the next segment in the sweep line\n\n\n        var nextMySplitter = null;\n\n        if (nextSeg) {\n          var nextInter = nextSeg.getIntersection(segment);\n\n          if (nextInter !== null) {\n            if (!segment.isAnEndpoint(nextInter)) nextMySplitter = nextInter;\n\n            if (!nextSeg.isAnEndpoint(nextInter)) {\n              var _newEventsFromSplit = this._splitSafely(nextSeg, nextInter);\n\n              for (var _i = 0, _iMax = _newEventsFromSplit.length; _i < _iMax; _i++) {\n                newEvents.push(_newEventsFromSplit[_i]);\n              }\n            }\n          }\n        } // For simplicity, even if we find more than one intersection we only\n        // spilt on the 'earliest' (sweep-line style) of the intersections.\n        // The other intersection will be handled in a future process().\n\n\n        if (prevMySplitter !== null || nextMySplitter !== null) {\n          var mySplitter = null;\n          if (prevMySplitter === null) mySplitter = nextMySplitter;else if (nextMySplitter === null) mySplitter = prevMySplitter;else {\n            var cmpSplitters = SweepEvent.comparePoints(prevMySplitter, nextMySplitter);\n            if (cmpSplitters < 0) mySplitter = prevMySplitter;\n            if (cmpSplitters > 0) mySplitter = nextMySplitter; // the two splitters are the exact same point\n\n            mySplitter = prevMySplitter;\n          } // Rounding errors can cause changes in ordering,\n          // so remove afected segments and right sweep events before splitting\n\n          this.queue.remove(segment.rightSE);\n          newEvents.push(segment.rightSE);\n\n          var _newEventsFromSplit2 = segment.split(mySplitter);\n\n          for (var _i2 = 0, _iMax2 = _newEventsFromSplit2.length; _i2 < _iMax2; _i2++) {\n            newEvents.push(_newEventsFromSplit2[_i2]);\n          }\n        }\n\n        if (newEvents.length > 0) {\n          // We found some intersections, so re-do the current event to\n          // make sure sweep line ordering is totally consistent for later\n          // use with the segment 'prev' pointers\n          this.tree.remove(segment);\n          newEvents.push(event);\n        } else {\n          // done with left event\n          this.segments.push(segment);\n          segment.prev = prevSeg;\n        }\n      } else {\n        // event.isRight\n        // since we're about to be removed from the sweep line, check for\n        // intersections between our previous and next segments\n        if (prevSeg && nextSeg) {\n          var inter = prevSeg.getIntersection(nextSeg);\n\n          if (inter !== null) {\n            if (!prevSeg.isAnEndpoint(inter)) {\n              var _newEventsFromSplit3 = this._splitSafely(prevSeg, inter);\n\n              for (var _i3 = 0, _iMax3 = _newEventsFromSplit3.length; _i3 < _iMax3; _i3++) {\n                newEvents.push(_newEventsFromSplit3[_i3]);\n              }\n            }\n\n            if (!nextSeg.isAnEndpoint(inter)) {\n              var _newEventsFromSplit4 = this._splitSafely(nextSeg, inter);\n\n              for (var _i4 = 0, _iMax4 = _newEventsFromSplit4.length; _i4 < _iMax4; _i4++) {\n                newEvents.push(_newEventsFromSplit4[_i4]);\n              }\n            }\n          }\n        }\n\n        this.tree.remove(segment);\n      }\n\n      return newEvents;\n    }\n    /* Safely split a segment that is currently in the datastructures\n     * IE - a segment other than the one that is currently being processed. */\n\n  }, {\n    key: \"_splitSafely\",\n    value: function _splitSafely(seg, pt) {\n      // Rounding errors can cause changes in ordering,\n      // so remove afected segments and right sweep events before splitting\n      // removeNode() doesn't work, so have re-find the seg\n      // https://github.com/w8r/splay-tree/pull/5\n      this.tree.remove(seg);\n      var rightSE = seg.rightSE;\n      this.queue.remove(rightSE);\n      var newEvents = seg.split(pt);\n      newEvents.push(rightSE); // splitting can trigger consumption\n\n      if (seg.consumedBy === undefined) this.tree.insert(seg);\n      return newEvents;\n    }\n  }]);\n\n  return SweepLine;\n}();\n\nvar Operation =\n/*#__PURE__*/\nfunction () {\n  function Operation() {\n    _classCallCheck(this, Operation);\n  }\n\n  _createClass(Operation, [{\n    key: \"run\",\n    value: function run(type, geom, moreGeoms) {\n      operation.type = type;\n      rounder.reset();\n      /* Make a copy of the input geometry with rounded points as objects */\n\n      var geoms = [pointsAsObjects(geom)];\n\n      for (var i = 0, iMax = moreGeoms.length; i < iMax; i++) {\n        geoms.push(pointsAsObjects(moreGeoms[i]));\n      }\n      /* Clean inputs */\n\n\n      for (var _i = 0, _iMax = geoms.length; _i < _iMax; _i++) {\n        forceMultiPoly(geoms[_i]);\n        cleanMultiPoly(geoms[_i]);\n      }\n      /* Convert inputs to MultiPoly objects, mark subject */\n\n\n      var multipolys = [];\n\n      for (var _i2 = 0, _iMax2 = geoms.length; _i2 < _iMax2; _i2++) {\n        multipolys.push(new MultiPolyIn(geoms[_i2]));\n      }\n\n      multipolys[0].markAsSubject();\n      operation.numMultiPolys = multipolys.length;\n      /* Put segment endpoints in a priority queue */\n\n      var queue = new SplayTree(SweepEvent.compare);\n\n      for (var _i3 = 0, _iMax3 = multipolys.length; _i3 < _iMax3; _i3++) {\n        var sweepEvents = multipolys[_i3].getSweepEvents();\n\n        for (var j = 0, jMax = sweepEvents.length; j < jMax; j++) {\n          queue.insert(sweepEvents[j]);\n        }\n      }\n      /* Pass the sweep line over those endpoints */\n\n\n      var sweepLine = new SweepLine(queue);\n      var prevQueueSize = queue.size;\n      var node = queue.pop();\n\n      while (node) {\n        var evt = node.key;\n\n        if (queue.size === prevQueueSize) {\n          // prevents an infinite loop, an otherwise common manifestation of bugs\n          throw new Error(\"Unable to pop() SweepEvent [\".concat(evt.point.x, \", \").concat(evt.point.y, \"] from \") + \"segment #\".concat(evt.segment.id, \" from queue. Please file a bug report.\"));\n        }\n\n        var newEvents = sweepLine.process(evt);\n\n        for (var _i4 = 0, _iMax4 = newEvents.length; _i4 < _iMax4; _i4++) {\n          var _evt = newEvents[_i4];\n          if (_evt.consumedBy === undefined) queue.insert(_evt);\n        }\n\n        prevQueueSize = queue.size;\n        node = queue.pop();\n      } // free some memory we don't need anymore\n\n\n      rounder.reset();\n      /* Collect and compile segments we're keeping into a multipolygon */\n\n      var ringsOut = RingOut.factory(sweepLine.segments);\n      var result = new MultiPolyOut(ringsOut);\n      return result.getGeom();\n    }\n  }]);\n\n  return Operation;\n}(); // singleton available by import\n\nvar operation = new Operation();\n\nvar union = function union(geom) {\n  for (var _len = arguments.length, moreGeoms = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    moreGeoms[_key - 1] = arguments[_key];\n  }\n\n  return operation.run('union', geom, moreGeoms);\n};\n\nvar intersection$1 = function intersection(geom) {\n  for (var _len2 = arguments.length, moreGeoms = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n    moreGeoms[_key2 - 1] = arguments[_key2];\n  }\n\n  return operation.run('intersection', geom, moreGeoms);\n};\n\nvar xor = function xor(geom) {\n  for (var _len3 = arguments.length, moreGeoms = new Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {\n    moreGeoms[_key3 - 1] = arguments[_key3];\n  }\n\n  return operation.run('xor', geom, moreGeoms);\n};\n\nvar difference = function difference(subjectGeom) {\n  for (var _len4 = arguments.length, clippingGeoms = new Array(_len4 > 1 ? _len4 - 1 : 0), _key4 = 1; _key4 < _len4; _key4++) {\n    clippingGeoms[_key4 - 1] = arguments[_key4];\n  }\n\n  return operation.run('difference', subjectGeom, clippingGeoms);\n};\n\nvar index = {\n  union: union,\n  intersection: intersection$1,\n  xor: xor,\n  difference: difference\n};\n\nexport default index;\n","function DEFAULT_COMPARE (a, b) { return a > b ? 1 : a < b ? -1 : 0; }\n\nexport default class SplayTree {\n\n  constructor(compare = DEFAULT_COMPARE, noDuplicates = false) {\n    this._compare = compare;\n    this._root = null;\n    this._size = 0;\n    this._noDuplicates = !!noDuplicates;\n  }\n\n\n  rotateLeft(x) {\n    var y = x.right;\n    if (y) {\n      x.right = y.left;\n      if (y.left) y.left.parent = x;\n      y.parent = x.parent;\n    }\n\n    if (!x.parent)                this._root = y;\n    else if (x === x.parent.left) x.parent.left = y;\n    else                          x.parent.right = y;\n    if (y) y.left = x;\n    x.parent = y;\n  }\n\n\n  rotateRight(x) {\n    var y = x.left;\n    if (y) {\n      x.left = y.right;\n      if (y.right) y.right.parent = x;\n      y.parent = x.parent;\n    }\n\n    if (!x.parent)               this._root = y;\n    else if(x === x.parent.left) x.parent.left = y;\n    else                         x.parent.right = y;\n    if (y) y.right = x;\n    x.parent = y;\n  }\n\n\n  _splay(x) {\n    while (x.parent) {\n      var p = x.parent;\n      if (!p.parent) {\n        if (p.left === x) this.rotateRight(p);\n        else              this.rotateLeft(p);\n      } else if (p.left === x && p.parent.left === p) {\n        this.rotateRight(p.parent);\n        this.rotateRight(p);\n      } else if (p.right === x && p.parent.right === p) {\n        this.rotateLeft(p.parent);\n        this.rotateLeft(p);\n      } else if (p.left === x && p.parent.right === p) {\n        this.rotateRight(p);\n        this.rotateLeft(p);\n      } else {\n        this.rotateLeft(p);\n        this.rotateRight(p);\n      }\n    }\n  }\n\n\n  splay(x) {\n    var p, gp, ggp, l, r;\n\n    while (x.parent) {\n      p = x.parent;\n      gp = p.parent;\n\n      if (gp && gp.parent) {\n        ggp = gp.parent;\n        if (ggp.left === gp) ggp.left  = x;\n        else                 ggp.right = x;\n        x.parent = ggp;\n      } else {\n        x.parent = null;\n        this._root = x;\n      }\n\n      l = x.left; r = x.right;\n\n      if (x === p.left) { // left\n        if (gp) {\n          if (gp.left === p) {\n            /* zig-zig */\n            if (p.right) {\n              gp.left = p.right;\n              gp.left.parent = gp;\n            } else gp.left = null;\n\n            p.right   = gp;\n            gp.parent = p;\n          } else {\n            /* zig-zag */\n            if (l) {\n              gp.right = l;\n              l.parent = gp;\n            } else gp.right = null;\n\n            x.left    = gp;\n            gp.parent = x;\n          }\n        }\n        if (r) {\n          p.left = r;\n          r.parent = p;\n        } else p.left = null;\n\n        x.right  = p;\n        p.parent = x;\n      } else { // right\n        if (gp) {\n          if (gp.right === p) {\n            /* zig-zig */\n            if (p.left) {\n              gp.right = p.left;\n              gp.right.parent = gp;\n            } else gp.right = null;\n\n            p.left = gp;\n            gp.parent = p;\n          } else {\n            /* zig-zag */\n            if (r) {\n              gp.left = r;\n              r.parent = gp;\n            } else gp.left = null;\n\n            x.right   = gp;\n            gp.parent = x;\n          }\n        }\n        if (l) {\n          p.right = l;\n          l.parent = p;\n        } else p.right = null;\n\n        x.left   = p;\n        p.parent = x;\n      }\n    }\n  }\n\n\n  replace(u, v) {\n    if (!u.parent) this._root = v;\n    else if (u === u.parent.left) u.parent.left = v;\n    else u.parent.right = v;\n    if (v) v.parent = u.parent;\n  }\n\n\n  minNode(u = this._root) {\n    if (u) while (u.left) u = u.left;\n    return u;\n  }\n\n\n  maxNode(u = this._root) {\n    if (u) while (u.right) u = u.right;\n    return u;\n  }\n\n\n  insert(key, data) {\n    var z = this._root;\n    var p = null;\n    var comp = this._compare;\n    var cmp;\n\n    if (this._noDuplicates) {\n      while (z) {\n        p = z;\n        cmp = comp(z.key, key);\n        if (cmp === 0) return;\n        else if (comp(z.key, key) < 0) z = z.right;\n        else z = z.left;\n      }\n    } else {\n      while (z) {\n        p = z;\n        if (comp(z.key, key) < 0) z = z.right;\n        else z = z.left;\n      }\n    }\n\n    z = { key, data, left: null, right: null, parent: p };\n\n    if (!p)                          this._root = z;\n    else if (comp(p.key, z.key) < 0) p.right = z;\n    else                             p.left  = z;\n\n    this.splay(z);\n    this._size++;\n    return z;\n  }\n\n\n  find (key) {\n    var z    = this._root;\n    var comp = this._compare;\n    while (z) {\n      var cmp = comp(z.key, key);\n      if      (cmp < 0) z = z.right;\n      else if (cmp > 0) z = z.left;\n      else              return z;\n    }\n    return null;\n  }\n\n  /**\n   * Whether the tree contains a node with the given key\n   * @param  {Key} key\n   * @return {boolean} true/false\n   */\n  contains (key) {\n    var node       = this._root;\n    var comparator = this._compare;\n    while (node)  {\n      var cmp = comparator(key, node.key);\n      if      (cmp === 0) return true;\n      else if (cmp < 0)   node = node.left;\n      else                node = node.right;\n    }\n\n    return false;\n  }\n\n\n  remove (key) {\n    var z = this.find(key);\n\n    if (!z) return false;\n\n    this.splay(z);\n\n    if (!z.left) this.replace(z, z.right);\n    else if (!z.right) this.replace(z, z.left);\n    else {\n      var y = this.minNode(z.right);\n      if (y.parent !== z) {\n        this.replace(y, y.right);\n        y.right = z.right;\n        y.right.parent = y;\n      }\n      this.replace(z, y);\n      y.left = z.left;\n      y.left.parent = y;\n    }\n\n    this._size--;\n    return true;\n  }\n\n\n  removeNode(z) {\n    if (!z) return false;\n\n    this.splay(z);\n\n    if (!z.left) this.replace(z, z.right);\n    else if (!z.right) this.replace(z, z.left);\n    else {\n      var y = this.minNode(z.right);\n      if (y.parent !== z) {\n        this.replace(y, y.right);\n        y.right = z.right;\n        y.right.parent = y;\n      }\n      this.replace(z, y);\n      y.left = z.left;\n      y.left.parent = y;\n    }\n\n    this._size--;\n    return true;\n  }\n\n\n  erase (key) {\n    var z = this.find(key);\n    if (!z) return;\n\n    this.splay(z);\n\n    var s = z.left;\n    var t = z.right;\n\n    var sMax = null;\n    if (s) {\n      s.parent = null;\n      sMax = this.maxNode(s);\n      this.splay(sMax);\n      this._root = sMax;\n    }\n    if (t) {\n      if (s) sMax.right = t;\n      else   this._root = t;\n      t.parent = sMax;\n    }\n\n    this._size--;\n  }\n\n  /**\n   * Removes and returns the node with smallest key\n   * @return {?Node}\n   */\n  pop () {\n    var node = this._root, returnValue = null;\n    if (node) {\n      while (node.left) node = node.left;\n      returnValue = { key: node.key, data: node.data };\n      this.remove(node.key);\n    }\n    return returnValue;\n  }\n\n\n  /* eslint-disable class-methods-use-this */\n\n  /**\n   * Successor node\n   * @param  {Node} node\n   * @return {?Node}\n   */\n  next (node) {\n    var successor = node;\n    if (successor) {\n      if (successor.right) {\n        successor = successor.right;\n        while (successor && successor.left) successor = successor.left;\n      } else {\n        successor = node.parent;\n        while (successor && successor.right === node) {\n          node = successor; successor = successor.parent;\n        }\n      }\n    }\n    return successor;\n  }\n\n\n  /**\n   * Predecessor node\n   * @param  {Node} node\n   * @return {?Node}\n   */\n  prev (node) {\n    var predecessor = node;\n    if (predecessor) {\n      if (predecessor.left) {\n        predecessor = predecessor.left;\n        while (predecessor && predecessor.right) predecessor = predecessor.right;\n      } else {\n        predecessor = node.parent;\n        while (predecessor && predecessor.left === node) {\n          node = predecessor;\n          predecessor = predecessor.parent;\n        }\n      }\n    }\n    return predecessor;\n  }\n  /* eslint-enable class-methods-use-this */\n\n\n  /**\n   * @param  {forEachCallback} callback\n   * @return {SplayTree}\n   */\n  forEach(callback) {\n    var current = this._root;\n    var s = [], done = false, i = 0;\n\n    while (!done) {\n      // Reach the left most Node of the current Node\n      if (current) {\n        // Place pointer to a tree node on the stack\n        // before traversing the node's left subtree\n        s.push(current);\n        current = current.left;\n      } else {\n        // BackTrack from the empty subtree and visit the Node\n        // at the top of the stack; however, if the stack is\n        // empty you are done\n        if (s.length > 0) {\n          current = s.pop();\n          callback(current, i++);\n\n          // We have visited the node and its left\n          // subtree. Now, it's right subtree's turn\n          current = current.right;\n        } else done = true;\n      }\n    }\n    return this;\n  }\n\n\n  /**\n   * Walk key range from `low` to `high`. Stops if `fn` returns a value.\n   * @param  {Key}      low\n   * @param  {Key}      high\n   * @param  {Function} fn\n   * @param  {*?}       ctx\n   * @return {SplayTree}\n   */\n  range(low, high, fn, ctx) {\n    const Q = [];\n    const compare = this._compare;\n    let node = this._root, cmp;\n\n    while (Q.length !== 0 || node) {\n      if (node) {\n        Q.push(node);\n        node = node.left;\n      } else {\n        node = Q.pop();\n        cmp = compare(node.key, high);\n        if (cmp > 0) {\n          break;\n        } else if (compare(node.key, low) >= 0) {\n          if (fn.call(ctx, node)) return this; // stop if smth is returned\n        }\n        node = node.right;\n      }\n    }\n    return this;\n  }\n\n  /**\n   * Returns all keys in order\n   * @return {Array<Key>}\n   */\n  keys () {\n    var current = this._root;\n    var s = [], r = [], done = false;\n\n    while (!done) {\n      if (current) {\n        s.push(current);\n        current = current.left;\n      } else {\n        if (s.length > 0) {\n          current = s.pop();\n          r.push(current.key);\n          current = current.right;\n        } else done = true;\n      }\n    }\n    return r;\n  }\n\n\n  /**\n   * Returns `data` fields of all nodes in order.\n   * @return {Array<Value>}\n   */\n  values () {\n    var current = this._root;\n    var s = [], r = [], done = false;\n\n    while (!done) {\n      if (current) {\n        s.push(current);\n        current = current.left;\n      } else {\n        if (s.length > 0) {\n          current = s.pop();\n          r.push(current.data);\n          current = current.right;\n        } else done = true;\n      }\n    }\n    return r;\n  }\n\n\n  /**\n   * Returns node at given index\n   * @param  {number} index\n   * @return {?Node}\n   */\n  at (index) {\n    // removed after a consideration, more misleading than useful\n    // index = index % this.size;\n    // if (index < 0) index = this.size - index;\n\n    var current = this._root;\n    var s = [], done = false, i = 0;\n\n    while (!done) {\n      if (current) {\n        s.push(current);\n        current = current.left;\n      } else {\n        if (s.length > 0) {\n          current = s.pop();\n          if (i === index) return current;\n          i++;\n          current = current.right;\n        } else done = true;\n      }\n    }\n    return null;\n  }\n\n  /**\n   * Bulk-load items. Both array have to be same size\n   * @param  {Array<Key>}    keys\n   * @param  {Array<Value>}  [values]\n   * @param  {Boolean}       [presort=false] Pre-sort keys and values, using\n   *                                         tree's comparator. Sorting is done\n   *                                         in-place\n   * @return {AVLTree}\n   */\n  load(keys = [], values = [], presort = false) {\n    if (this._size !== 0) throw new Error('bulk-load: tree is not empty');\n    const size = keys.length;\n    if (presort) sort(keys, values, 0, size - 1, this._compare);\n    this._root = loadRecursive(null, keys, values, 0, size);\n    this._size = size;\n    return this;\n  }\n\n\n  min() {\n    var node = this.minNode(this._root);\n    if (node) return node.key;\n    else      return null;\n  }\n\n\n  max() {\n    var node = this.maxNode(this._root);\n    if (node) return node.key;\n    else      return null;\n  }\n\n  isEmpty() { return this._root === null; }\n  get size() { return this._size; }\n\n\n  /**\n   * Create a tree and load it with items\n   * @param  {Array<Key>}          keys\n   * @param  {Array<Value>?}        [values]\n\n   * @param  {Function?}            [comparator]\n   * @param  {Boolean?}             [presort=false] Pre-sort keys and values, using\n   *                                               tree's comparator. Sorting is done\n   *                                               in-place\n   * @param  {Boolean?}             [noDuplicates=false]   Allow duplicates\n   * @return {SplayTree}\n   */\n  static createTree(keys, values, comparator, presort, noDuplicates) {\n    return new SplayTree(comparator, noDuplicates).load(keys, values, presort);\n  }\n}\n\n\nfunction loadRecursive (parent, keys, values, start, end) {\n  const size = end - start;\n  if (size > 0) {\n    const middle = start + Math.floor(size / 2);\n    const key    = keys[middle];\n    const data   = values[middle];\n    const node   = { key, data, parent };\n    node.left    = loadRecursive(node, keys, values, start, middle);\n    node.right   = loadRecursive(node, keys, values, middle + 1, end);\n    return node;\n  }\n  return null;\n}\n\n\nfunction sort(keys, values, left, right, compare) {\n  if (left >= right) return;\n\n  const pivot = keys[(left + right) >> 1];\n  let i = left - 1;\n  let j = right + 1;\n\n  while (true) {\n    do i++; while (compare(keys[i], pivot) < 0);\n    do j--; while (compare(keys[j], pivot) > 0);\n    if (i >= j) break;\n\n    let tmp = keys[i];\n    keys[i] = keys[j];\n    keys[j] = tmp;\n\n    tmp = values[i];\n    values[i] = values[j];\n    values[j] = tmp;\n  }\n\n  sort(keys, values,  left,     j, compare);\n  sort(keys, values, j + 1, right, compare);\n}\n","export const NORMAL               = 0;\nexport const NON_CONTRIBUTING     = 1;\nexport const SAME_TRANSITION      = 2;\nexport const DIFFERENT_TRANSITION = 3;\n","export const INTERSECTION = 0;\nexport const UNION        = 1;\nexport const DIFFERENCE   = 2;\nexport const XOR          = 3;\n","import {\n  NORMAL,\n  SAME_TRANSITION,\n  DIFFERENT_TRANSITION,\n  NON_CONTRIBUTING\n} from './edge_type';\nimport {\n  INTERSECTION,\n  UNION,\n  DIFFERENCE,\n  XOR\n} from './operation';\n\n/**\n * @param  {SweepEvent} event\n * @param  {SweepEvent} prev\n * @param  {Operation} operation\n */\nexport default function computeFields (event, prev, operation) {\n  // compute inOut and otherInOut fields\n  if (prev === null) {\n    event.inOut      = false;\n    event.otherInOut = true;\n\n  // previous line segment in sweepline belongs to the same polygon\n  } else {\n    if (event.isSubject === prev.isSubject) {\n      event.inOut      = !prev.inOut;\n      event.otherInOut = prev.otherInOut;\n\n    // previous line segment in sweepline belongs to the clipping polygon\n    } else {\n      event.inOut      = !prev.otherInOut;\n      event.otherInOut = prev.isVertical() ? !prev.inOut : prev.inOut;\n    }\n\n    // compute prevInResult field\n    if (prev) {\n      event.prevInResult = (!inResult(prev, operation) || prev.isVertical())\n        ? prev.prevInResult : prev;\n    }\n  }\n\n  // check if the line segment belongs to the Boolean operation\n  event.inResult = inResult(event, operation);\n}\n\n\n/* eslint-disable indent */\nfunction inResult(event, operation) {\n  switch (event.type) {\n    case NORMAL:\n      switch (operation) {\n        case INTERSECTION:\n          return !event.otherInOut;\n        case UNION:\n          return event.otherInOut;\n        case DIFFERENCE:\n          // return (event.isSubject && !event.otherInOut) ||\n          //         (!event.isSubject && event.otherInOut);\n          return (event.isSubject && event.otherInOut) ||\n                  (!event.isSubject && !event.otherInOut);\n        case XOR:\n          return true;\n      }\n      break;\n    case SAME_TRANSITION:\n      return operation === INTERSECTION || operation === UNION;\n    case DIFFERENT_TRANSITION:\n      return operation === DIFFERENCE;\n    case NON_CONTRIBUTING:\n      return false;\n  }\n  return false;\n}\n/* eslint-enable indent */\n","import { NORMAL } from './edge_type';\n\n\nexport default class SweepEvent {\n\n\n  /**\n   * Sweepline event\n   *\n   * @class {SweepEvent}\n   * @param {Array.<Number>}  point\n   * @param {Boolean}         left\n   * @param {SweepEvent=}     otherEvent\n   * @param {Boolean}         isSubject\n   * @param {Number}          edgeType\n   */\n  constructor (point, left, otherEvent, isSubject, edgeType) {\n\n    /**\n     * Is left endpoint?\n     * @type {Boolean}\n     */\n    this.left = left;\n\n    /**\n     * @type {Array.<Number>}\n     */\n    this.point = point;\n\n    /**\n     * Other edge reference\n     * @type {SweepEvent}\n     */\n    this.otherEvent = otherEvent;\n\n    /**\n     * Belongs to source or clipping polygon\n     * @type {Boolean}\n     */\n    this.isSubject = isSubject;\n\n    /**\n     * Edge contribution type\n     * @type {Number}\n     */\n    this.type = edgeType || NORMAL;\n\n\n    /**\n     * In-out transition for the sweepline crossing polygon\n     * @type {Boolean}\n     */\n    this.inOut = false;\n\n\n    /**\n     * @type {Boolean}\n     */\n    this.otherInOut = false;\n\n    /**\n     * Previous event in result?\n     * @type {SweepEvent}\n     */\n    this.prevInResult = null;\n\n    /**\n     * Does event belong to result?\n     * @type {Boolean}\n     */\n    this.inResult = false;\n\n\n    // connection step\n\n    /**\n     * @type {Boolean}\n     */\n    this.resultInOut = false;\n\n    this.isExteriorRing = true;\n  }\n\n\n  /**\n   * @param  {Array.<Number>}  p\n   * @return {Boolean}\n   */\n  isBelow (p) {\n    const p0 = this.point, p1 = this.otherEvent.point;\n    return this.left\n      ? (p0[0] - p[0]) * (p1[1] - p[1]) - (p1[0] - p[0]) * (p0[1] - p[1]) > 0\n      // signedArea(this.point, this.otherEvent.point, p) > 0 :\n      : (p1[0] - p[0]) * (p0[1] - p[1]) - (p0[0] - p[0]) * (p1[1] - p[1]) > 0;\n      //signedArea(this.otherEvent.point, this.point, p) > 0;\n  }\n\n\n  /**\n   * @param  {Array.<Number>}  p\n   * @return {Boolean}\n   */\n  isAbove (p) {\n    return !this.isBelow(p);\n  }\n\n\n  /**\n   * @return {Boolean}\n   */\n  isVertical () {\n    return this.point[0] === this.otherEvent.point[0];\n  }\n\n\n  clone () {\n    const copy = new SweepEvent(\n      this.point, this.left, this.otherEvent, this.isSubject, this.type);\n\n    copy.inResult       = this.inResult;\n    copy.prevInResult   = this.prevInResult;\n    copy.isExteriorRing = this.isExteriorRing;\n    copy.inOut          = this.inOut;\n    copy.otherInOut     = this.otherInOut;\n\n    return copy;\n  }\n}\n","export default function equals(p1, p2) {\n  if (p1[0] === p2[0]) {\n    if (p1[1] === p2[1]) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n  return false;\n}\n\n// const EPSILON = 1e-9;\n// const abs = Math.abs;\n// TODO https://github.com/w8r/martinez/issues/6#issuecomment-262847164\n// Precision problem.\n//\n// module.exports = function equals(p1, p2) {\n//   return abs(p1[0] - p2[0]) <= EPSILON && abs(p1[1] - p2[1]) <= EPSILON;\n// };\n","/**\n * Signed area of the triangle (p0, p1, p2)\n * @param  {Array.<Number>} p0\n * @param  {Array.<Number>} p1\n * @param  {Array.<Number>} p2\n * @return {Number}\n */\nexport default function signedArea(p0, p1, p2) {\n  return (p0[0] - p2[0]) * (p1[1] - p2[1]) - (p1[0] - p2[0]) * (p0[1] - p2[1]);\n}\n","import signedArea from './signed_area';\n\n/**\n * @param  {SweepEvent} e1\n * @param  {SweepEvent} e2\n * @return {Number}\n */\nexport default function compareEvents(e1, e2) {\n  const p1 = e1.point;\n  const p2 = e2.point;\n\n  // Different x-coordinate\n  if (p1[0] > p2[0]) return 1;\n  if (p1[0] < p2[0]) return -1;\n\n  // Different points, but same x-coordinate\n  // Event with lower y-coordinate is processed first\n  if (p1[1] !== p2[1]) return p1[1] > p2[1] ? 1 : -1;\n\n  return specialCases(e1, e2, p1, p2);\n}\n\n\n/* eslint-disable no-unused-vars */\nfunction specialCases(e1, e2, p1, p2) {\n  // Same coordinates, but one is a left endpoint and the other is\n  // a right endpoint. The right endpoint is processed first\n  if (e1.left !== e2.left)\n    return e1.left ? 1 : -1;\n\n  // const p2 = e1.otherEvent.point, p3 = e2.otherEvent.point;\n  // const sa = (p1[0] - p3[0]) * (p2[1] - p3[1]) - (p2[0] - p3[0]) * (p1[1] - p3[1])\n  // Same coordinates, both events\n  // are left endpoints or right endpoints.\n  // not collinear\n  if (signedArea(p1, e1.otherEvent.point, e2.otherEvent.point) !== 0) {\n    // the event associate to the bottom segment is processed first\n    return (!e1.isBelow(e2.otherEvent.point)) ? 1 : -1;\n  }\n\n  return (!e1.isSubject && e2.isSubject) ? 1 : -1;\n}\n/* eslint-enable no-unused-vars */\n","import SweepEvent    from './sweep_event';\nimport equals        from './equals';\nimport compareEvents from './compare_events';\n\n/**\n * @param  {SweepEvent} se\n * @param  {Array.<Number>} p\n * @param  {Queue} queue\n * @return {Queue}\n */\nexport default function divideSegment(se, p, queue)  {\n  const r = new SweepEvent(p, false, se,            se.isSubject);\n  const l = new SweepEvent(p, true,  se.otherEvent, se.isSubject);\n\n  /* eslint-disable no-console */\n  if (equals(se.point, se.otherEvent.point)) {\n\n    console.warn('what is that, a collapsed segment?', se);\n  }\n  /* eslint-enable no-console */\n\n  r.contourId = l.contourId = se.contourId;\n\n  // avoid a rounding error. The left event would be processed after the right event\n  if (compareEvents(l, se.otherEvent) > 0) {\n    se.otherEvent.left = true;\n    l.left = false;\n  }\n\n  // avoid a rounding error. The left event would be processed after the right event\n  // if (compareEvents(se, r) > 0) {}\n\n  se.otherEvent.otherEvent = l;\n  se.otherEvent = r;\n\n  queue.push(l);\n  queue.push(r);\n\n  return queue;\n}\n","//const EPS = 1e-9;\n\n/**\n * Finds the magnitude of the cross product of two vectors (if we pretend\n * they're in three dimensions)\n *\n * @param {Object} a First vector\n * @param {Object} b Second vector\n * @private\n * @returns {Number} The magnitude of the cross product\n */\nfunction crossProduct(a, b) {\n  return (a[0] * b[1]) - (a[1] * b[0]);\n}\n\n/**\n * Finds the dot product of two vectors.\n *\n * @param {Object} a First vector\n * @param {Object} b Second vector\n * @private\n * @returns {Number} The dot product\n */\nfunction dotProduct(a, b) {\n  return (a[0] * b[0]) + (a[1] * b[1]);\n}\n\n/**\n * Finds the intersection (if any) between two line segments a and b, given the\n * line segments' end points a1, a2 and b1, b2.\n *\n * This algorithm is based on Schneider and Eberly.\n * http://www.cimec.org.ar/~ncalvo/Schneider_Eberly.pdf\n * Page 244.\n *\n * @param {Array.<Number>} a1 point of first line\n * @param {Array.<Number>} a2 point of first line\n * @param {Array.<Number>} b1 point of second line\n * @param {Array.<Number>} b2 point of second line\n * @param {Boolean=}       noEndpointTouch whether to skip single touchpoints\n *                                         (meaning connected segments) as\n *                                         intersections\n * @returns {Array.<Array.<Number>>|Null} If the lines intersect, the point of\n * intersection. If they overlap, the two end points of the overlapping segment.\n * Otherwise, null.\n */\nexport default function (a1, a2, b1, b2, noEndpointTouch) {\n  // The algorithm expects our lines in the form P + sd, where P is a point,\n  // s is on the interval [0, 1], and d is a vector.\n  // We are passed two points. P can be the first point of each pair. The\n  // vector, then, could be thought of as the distance (in x and y components)\n  // from the first point to the second point.\n  // So first, let's make our vectors:\n  const va = [a2[0] - a1[0], a2[1] - a1[1]];\n  const vb = [b2[0] - b1[0], b2[1] - b1[1]];\n  // We also define a function to convert back to regular point form:\n\n  /* eslint-disable arrow-body-style */\n\n  function toPoint(p, s, d) {\n    return [\n      p[0] + s * d[0],\n      p[1] + s * d[1]\n    ];\n  }\n\n  /* eslint-enable arrow-body-style */\n\n  // The rest is pretty much a straight port of the algorithm.\n  const e = [b1[0] - a1[0], b1[1] - a1[1]];\n  let kross    = crossProduct(va, vb);\n  let sqrKross = kross * kross;\n  const sqrLenA  = dotProduct(va, va);\n  //const sqrLenB  = dotProduct(vb, vb);\n\n  // Check for line intersection. This works because of the properties of the\n  // cross product -- specifically, two vectors are parallel if and only if the\n  // cross product is the 0 vector. The full calculation involves relative error\n  // to account for possible very small line segments. See Schneider & Eberly\n  // for details.\n  if (sqrKross > 0/* EPS * sqrLenB * sqLenA */) {\n    // If they're not parallel, then (because these are line segments) they\n    // still might not actually intersect. This code checks that the\n    // intersection point of the lines is actually on both line segments.\n    const s = crossProduct(e, vb) / kross;\n    if (s < 0 || s > 1) {\n      // not on line segment a\n      return null;\n    }\n    const t = crossProduct(e, va) / kross;\n    if (t < 0 || t > 1) {\n      // not on line segment b\n      return null;\n    }\n    if (s === 0 || s === 1) {\n      // on an endpoint of line segment a\n      return noEndpointTouch ? null : [toPoint(a1, s, va)];\n    }\n    if (t === 0 || t === 1) {\n      // on an endpoint of line segment b\n      return noEndpointTouch ? null : [toPoint(b1, t, vb)];\n    }\n    return [toPoint(a1, s, va)];\n  }\n\n  // If we've reached this point, then the lines are either parallel or the\n  // same, but the segments could overlap partially or fully, or not at all.\n  // So we need to find the overlap, if any. To do that, we can use e, which is\n  // the (vector) difference between the two initial points. If this is parallel\n  // with the line itself, then the two lines are the same line, and there will\n  // be overlap.\n  //const sqrLenE = dotProduct(e, e);\n  kross = crossProduct(e, va);\n  sqrKross = kross * kross;\n\n  if (sqrKross > 0 /* EPS * sqLenB * sqLenE */) {\n  // Lines are just parallel, not the same. No overlap.\n    return null;\n  }\n\n  const sa = dotProduct(va, e) / sqrLenA;\n  const sb = sa + dotProduct(va, vb) / sqrLenA;\n  const smin = Math.min(sa, sb);\n  const smax = Math.max(sa, sb);\n\n  // this is, essentially, the FindIntersection acting on floats from\n  // Schneider & Eberly, just inlined into this function.\n  if (smin <= 1 && smax >= 0) {\n\n    // overlap on an end point\n    if (smin === 1) {\n      return noEndpointTouch ? null : [toPoint(a1, smin > 0 ? smin : 0, va)];\n    }\n\n    if (smax === 0) {\n      return noEndpointTouch ? null : [toPoint(a1, smax < 1 ? smax : 1, va)];\n    }\n\n    if (noEndpointTouch && smin === 0 && smax === 1) return null;\n\n    // There's overlap on a segment -- two points of intersection. Return both.\n    return [\n      toPoint(a1, smin > 0 ? smin : 0, va),\n      toPoint(a1, smax < 1 ? smax : 1, va)\n    ];\n  }\n\n  return null;\n}\n","import divideSegment from './divide_segment';\nimport intersection  from './segment_intersection';\nimport equals        from './equals';\nimport compareEvents from './compare_events';\nimport {\n  NON_CONTRIBUTING,\n  SAME_TRANSITION,\n  DIFFERENT_TRANSITION\n} from './edge_type';\n\n/**\n * @param  {SweepEvent} se1\n * @param  {SweepEvent} se2\n * @param  {Queue}      queue\n * @return {Number}\n */\nexport default function possibleIntersection (se1, se2, queue) {\n  // that disallows self-intersecting polygons,\n  // did cost us half a day, so I'll leave it\n  // out of respect\n  // if (se1.isSubject === se2.isSubject) return;\n  const inter = intersection(\n    se1.point, se1.otherEvent.point,\n    se2.point, se2.otherEvent.point\n  );\n\n  const nintersections = inter ? inter.length : 0;\n  if (nintersections === 0) return 0; // no intersection\n\n  // the line segments intersect at an endpoint of both line segments\n  if ((nintersections === 1) &&\n      (equals(se1.point, se2.point) ||\n       equals(se1.otherEvent.point, se2.otherEvent.point))) {\n    return 0;\n  }\n\n  if (nintersections === 2 && se1.isSubject === se2.isSubject) {\n    // if(se1.contourId === se2.contourId){\n    // console.warn('Edges of the same polygon overlap',\n    //   se1.point, se1.otherEvent.point, se2.point, se2.otherEvent.point);\n    // }\n    //throw new Error('Edges of the same polygon overlap');\n    return 0;\n  }\n\n  // The line segments associated to se1 and se2 intersect\n  if (nintersections === 1) {\n\n    // if the intersection point is not an endpoint of se1\n    if (!equals(se1.point, inter[0]) && !equals(se1.otherEvent.point, inter[0])) {\n      divideSegment(se1, inter[0], queue);\n    }\n\n    // if the intersection point is not an endpoint of se2\n    if (!equals(se2.point, inter[0]) && !equals(se2.otherEvent.point, inter[0])) {\n      divideSegment(se2, inter[0], queue);\n    }\n    return 1;\n  }\n\n  // The line segments associated to se1 and se2 overlap\n  const events        = [];\n  let leftCoincide  = false;\n  let rightCoincide = false;\n\n  if (equals(se1.point, se2.point)) {\n    leftCoincide = true; // linked\n  } else if (compareEvents(se1, se2) === 1) {\n    events.push(se2, se1);\n  } else {\n    events.push(se1, se2);\n  }\n\n  if (equals(se1.otherEvent.point, se2.otherEvent.point)) {\n    rightCoincide = true;\n  } else if (compareEvents(se1.otherEvent, se2.otherEvent) === 1) {\n    events.push(se2.otherEvent, se1.otherEvent);\n  } else {\n    events.push(se1.otherEvent, se2.otherEvent);\n  }\n\n  if ((leftCoincide && rightCoincide) || leftCoincide) {\n    // both line segments are equal or share the left endpoint\n    se2.type = NON_CONTRIBUTING;\n    se1.type = (se2.inOut === se1.inOut)\n      ? SAME_TRANSITION : DIFFERENT_TRANSITION;\n\n    if (leftCoincide && !rightCoincide) {\n      // honestly no idea, but changing events selection from [2, 1]\n      // to [0, 1] fixes the overlapping self-intersecting polygons issue\n      divideSegment(events[1].otherEvent, events[0].point, queue);\n    }\n    return 2;\n  }\n\n  // the line segments share the right endpoint\n  if (rightCoincide) {\n    divideSegment(events[0], events[1].point, queue);\n    return 3;\n  }\n\n  // no line segment includes totally the other one\n  if (events[0] !== events[3].otherEvent) {\n    divideSegment(events[0], events[1].point, queue);\n    divideSegment(events[1], events[2].point, queue);\n    return 3;\n  }\n\n  // one line segment includes the other one\n  divideSegment(events[0], events[1].point, queue);\n  divideSegment(events[3].otherEvent, events[2].point, queue);\n\n  return 3;\n}\n","import signedArea    from './signed_area';\nimport compareEvents from './compare_events';\nimport equals        from './equals';\n\n\n/**\n * @param  {SweepEvent} le1\n * @param  {SweepEvent} le2\n * @return {Number}\n */\nexport default function compareSegments(le1, le2) {\n  if (le1 === le2) return 0;\n\n  // Segments are not collinear\n  if (signedArea(le1.point, le1.otherEvent.point, le2.point) !== 0 ||\n    signedArea(le1.point, le1.otherEvent.point, le2.otherEvent.point) !== 0) {\n\n    // If they share their left endpoint use the right endpoint to sort\n    if (equals(le1.point, le2.point)) return le1.isBelow(le2.otherEvent.point) ? -1 : 1;\n\n    // Different left endpoint: use the left endpoint to sort\n    if (le1.point[0] === le2.point[0]) return le1.point[1] < le2.point[1] ? -1 : 1;\n\n    // has the line segment associated to e1 been inserted\n    // into S after the line segment associated to e2 ?\n    if (compareEvents(le1, le2) === 1) return le2.isAbove(le1.point) ? -1 : 1;\n\n    // The line segment associated to e2 has been inserted\n    // into S after the line segment associated to e1\n    return le1.isBelow(le2.point) ? -1 : 1;\n  }\n\n  if (le1.isSubject === le2.isSubject) { // same polygon\n    let p1 = le1.point, p2 = le2.point;\n    if (p1[0] === p2[0] && p1[1] === p2[1]/*equals(le1.point, le2.point)*/) {\n      p1 = le1.otherEvent.point; p2 = le2.otherEvent.point;\n      if (p1[0] === p2[0] && p1[1] === p2[1]) return 0;\n      else return le1.contourId > le2.contourId ? 1 : -1;\n    }\n  } else { // Segments are collinear, but belong to separate polygons\n    return le1.isSubject ? -1 : 1;\n  }\n\n  return compareEvents(le1, le2) === 1 ? 1 : -1;\n}\n","import compareEvents from './compare_events';\nimport { DIFFERENCE } from './operation';\n\n/**\n * @param  {Array.<SweepEvent>} sortedEvents\n * @return {Array.<SweepEvent>}\n */\nfunction orderEvents(sortedEvents) {\n  let event, i, len, tmp;\n  const resultEvents = [];\n  for (i = 0, len = sortedEvents.length; i < len; i++) {\n    event = sortedEvents[i];\n    if ((event.left && event.inResult) ||\n      (!event.left && event.otherEvent.inResult)) {\n      resultEvents.push(event);\n    }\n  }\n  // Due to overlapping edges the resultEvents array can be not wholly sorted\n  let sorted = false;\n  while (!sorted) {\n    sorted = true;\n    for (i = 0, len = resultEvents.length; i < len; i++) {\n      if ((i + 1) < len &&\n        compareEvents(resultEvents[i], resultEvents[i + 1]) === 1) {\n        tmp = resultEvents[i];\n        resultEvents[i] = resultEvents[i + 1];\n        resultEvents[i + 1] = tmp;\n        sorted = false;\n      }\n    }\n  }\n\n\n  for (i = 0, len = resultEvents.length; i < len; i++) {\n    event = resultEvents[i];\n    event.pos = i;\n  }\n\n  // imagine, the right event is found in the beginning of the queue,\n  // when his left counterpart is not marked yet\n  for (i = 0, len = resultEvents.length; i < len; i++) {\n    event = resultEvents[i];\n    if (!event.left) {\n      tmp = event.pos;\n      event.pos = event.otherEvent.pos;\n      event.otherEvent.pos = tmp;\n    }\n  }\n\n  return resultEvents;\n}\n\n\n/**\n * @param  {Number} pos\n * @param  {Array.<SweepEvent>} resultEvents\n * @param  {Object>}    processed\n * @return {Number}\n */\nfunction nextPos(pos, resultEvents, processed, origIndex) {\n  let p, p1;\n  let newPos = pos + 1;\n  const length = resultEvents.length;\n\n  p  = resultEvents[pos].point;\n\n  if (newPos < length)\n    p1 = resultEvents[newPos].point;\n\n\n  // while in range and not the current one by value\n  while (newPos < length && p1[0] === p[0] && p1[1] === p[1]) {\n    if (!processed[newPos]) {\n      return newPos;\n    } else   {\n      newPos++;\n    }\n    p1 = resultEvents[newPos].point;\n  }\n\n  newPos = pos - 1;\n\n  while (processed[newPos] && newPos >= origIndex) {\n    newPos--;\n  }\n  return newPos;\n}\n\n\n/**\n * @param  {Array.<SweepEvent>} sortedEvents\n * @return {Array.<*>} polygons\n */\nexport default function connectEdges(sortedEvents, operation) {\n  let i, len;\n  const resultEvents = orderEvents(sortedEvents);\n\n  // \"false\"-filled array\n  const processed = {};\n  const result = [];\n  let event;\n\n  for (i = 0, len = resultEvents.length; i < len; i++) {\n    if (processed[i]) continue;\n    const contour = [[]];\n\n    if (!resultEvents[i].isExteriorRing) {\n      if (operation === DIFFERENCE && !resultEvents[i].isSubject && result.length === 0) {\n        result.push(contour);\n      } else if (result.length === 0) {\n        result.push([[contour]]);\n      } else {\n        result[result.length - 1].push(contour[0]);\n      }\n    } else if (operation === DIFFERENCE && !resultEvents[i].isSubject && result.length > 1) {\n      result[result.length - 1].push(contour[0]);\n    } else {\n      result.push(contour);\n    }\n\n    const ringId = result.length - 1;\n    let pos = i;\n\n    const initial = resultEvents[i].point;\n    contour[0].push(initial);\n\n    while (pos >= i) {\n      event = resultEvents[pos];\n      processed[pos] = true;\n\n      if (event.left) {\n        event.resultInOut = false;\n        event.contourId   = ringId;\n      } else {\n        event.otherEvent.resultInOut = true;\n        event.otherEvent.contourId   = ringId;\n      }\n\n      pos = event.pos;\n      processed[pos] = true;\n      contour[0].push(resultEvents[pos].point);\n      pos = nextPos(pos, resultEvents, processed, i);\n    }\n\n    pos = pos === -1 ? i : pos;\n\n    event = resultEvents[pos];\n    processed[pos] = processed[event.pos] = true;\n    event.otherEvent.resultInOut = true;\n    event.otherEvent.contourId   = ringId;\n  }\n\n  // Handle if the result is a polygon (eg not multipoly)\n  // Commented it again, let's see what do we mean by that\n  // if (result.length === 1) result = result[0];\n  return result;\n}\n","'use strict';\n\nmodule.exports = TinyQueue;\nmodule.exports.default = TinyQueue;\n\nfunction TinyQueue(data, compare) {\n    if (!(this instanceof TinyQueue)) return new TinyQueue(data, compare);\n\n    this.data = data || [];\n    this.length = this.data.length;\n    this.compare = compare || defaultCompare;\n\n    if (this.length > 0) {\n        for (var i = (this.length >> 1) - 1; i >= 0; i--) this._down(i);\n    }\n}\n\nfunction defaultCompare(a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n}\n\nTinyQueue.prototype = {\n\n    push: function (item) {\n        this.data.push(item);\n        this.length++;\n        this._up(this.length - 1);\n    },\n\n    pop: function () {\n        if (this.length === 0) return undefined;\n\n        var top = this.data[0];\n        this.length--;\n\n        if (this.length > 0) {\n            this.data[0] = this.data[this.length];\n            this._down(0);\n        }\n        this.data.pop();\n\n        return top;\n    },\n\n    peek: function () {\n        return this.data[0];\n    },\n\n    _up: function (pos) {\n        var data = this.data;\n        var compare = this.compare;\n        var item = data[pos];\n\n        while (pos > 0) {\n            var parent = (pos - 1) >> 1;\n            var current = data[parent];\n            if (compare(item, current) >= 0) break;\n            data[pos] = current;\n            pos = parent;\n        }\n\n        data[pos] = item;\n    },\n\n    _down: function (pos) {\n        var data = this.data;\n        var compare = this.compare;\n        var halfLength = this.length >> 1;\n        var item = data[pos];\n\n        while (pos < halfLength) {\n            var left = (pos << 1) + 1;\n            var right = left + 1;\n            var best = data[left];\n\n            if (right < this.length && compare(data[right], best) < 0) {\n                left = right;\n                best = data[right];\n            }\n            if (compare(best, item) >= 0) break;\n\n            data[pos] = best;\n            pos = left;\n        }\n\n        data[pos] = item;\n    }\n};\n","import Queue           from 'tinyqueue';\nimport SweepEvent      from './sweep_event';\nimport compareEvents   from './compare_events';\nimport { DIFFERENCE }  from './operation';\n\nconst max = Math.max;\nconst min = Math.min;\n\nlet contourId = 0;\n\n\nfunction processPolygon(contourOrHole, isSubject, depth, Q, bbox, isExteriorRing) {\n  let i, len, s1, s2, e1, e2;\n  for (i = 0, len = contourOrHole.length - 1; i < len; i++) {\n    s1 = contourOrHole[i];\n    s2 = contourOrHole[i + 1];\n    e1 = new SweepEvent(s1, false, undefined, isSubject);\n    e2 = new SweepEvent(s2, false, e1,        isSubject);\n    e1.otherEvent = e2;\n\n    if (s1[0] === s2[0] && s1[1] === s2[1]) {\n      continue; // skip collapsed edges, or it breaks\n    }\n\n    e1.contourId = e2.contourId = depth;\n    if (!isExteriorRing) {\n      e1.isExteriorRing = false;\n      e2.isExteriorRing = false;\n    }\n    if (compareEvents(e1, e2) > 0) {\n      e2.left = true;\n    } else {\n      e1.left = true;\n    }\n\n    const x = s1[0], y = s1[1];\n    bbox[0] = min(bbox[0], x);\n    bbox[1] = min(bbox[1], y);\n    bbox[2] = max(bbox[2], x);\n    bbox[3] = max(bbox[3], y);\n\n    // Pushing it so the queue is sorted from left to right,\n    // with object on the left having the highest priority.\n    Q.push(e1);\n    Q.push(e2);\n  }\n}\n\n\nexport default function fillQueue(subject, clipping, sbbox, cbbox, operation) {\n  const eventQueue = new Queue(null, compareEvents);\n  let polygonSet, isExteriorRing, i, ii, j, jj; //, k, kk;\n\n  for (i = 0, ii = subject.length; i < ii; i++) {\n    polygonSet = subject[i];\n    for (j = 0, jj = polygonSet.length; j < jj; j++) {\n      isExteriorRing = j === 0;\n      if (isExteriorRing) contourId++;\n      processPolygon(polygonSet[j], true, contourId, eventQueue, sbbox, isExteriorRing);\n    }\n  }\n\n  for (i = 0, ii = clipping.length; i < ii; i++) {\n    polygonSet = clipping[i];\n    for (j = 0, jj = polygonSet.length; j < jj; j++) {\n      isExteriorRing = j === 0;\n      if (operation === DIFFERENCE) isExteriorRing = false;\n      if (isExteriorRing) contourId++;\n      processPolygon(polygonSet[j], false, contourId, eventQueue, cbbox, isExteriorRing);\n    }\n  }\n\n  return eventQueue;\n}\n","import subdivideSegments from './subdivide_segments';\nimport connectEdges      from './connect_edges';\nimport fillQueue         from './fill_queue';\nimport {\n  INTERSECTION,\n  DIFFERENCE,\n  UNION,\n  XOR\n}        from './operation';\n\nconst EMPTY = [];\n\n\nfunction trivialOperation(subject, clipping, operation) {\n  let result = null;\n  if (subject.length * clipping.length === 0) {\n    if        (operation === INTERSECTION) {\n      result = EMPTY;\n    } else if (operation === DIFFERENCE) {\n      result = subject;\n    } else if (operation === UNION ||\n               operation === XOR) {\n      result = (subject.length === 0) ? clipping : subject;\n    }\n  }\n  return result;\n}\n\n\nfunction compareBBoxes(subject, clipping, sbbox, cbbox, operation) {\n  let result = null;\n  if (sbbox[0] > cbbox[2] ||\n      cbbox[0] > sbbox[2] ||\n      sbbox[1] > cbbox[3] ||\n      cbbox[1] > sbbox[3]) {\n    if        (operation === INTERSECTION) {\n      result = EMPTY;\n    } else if (operation === DIFFERENCE) {\n      result = subject;\n    } else if (operation === UNION ||\n               operation === XOR) {\n      result = subject.concat(clipping);\n    }\n  }\n  return result;\n}\n\n\nexport default function boolean(subject, clipping, operation) {\n  if (typeof subject[0][0][0] === 'number') {\n    subject = [subject];\n  }\n  if (typeof clipping[0][0][0] === 'number') {\n    clipping = [clipping];\n  }\n  let trivial = trivialOperation(subject, clipping, operation);\n  if (trivial) {\n    return trivial === EMPTY ? null : trivial;\n  }\n  const sbbox = [Infinity, Infinity, -Infinity, -Infinity];\n  const cbbox = [Infinity, Infinity, -Infinity, -Infinity];\n\n  //console.time('fill queue');\n  const eventQueue = fillQueue(subject, clipping, sbbox, cbbox, operation);\n  //console.timeEnd('fill queue');\n\n  trivial = compareBBoxes(subject, clipping, sbbox, cbbox, operation);\n  if (trivial) {\n    return trivial === EMPTY ? null : trivial;\n  }\n  //console.time('subdivide edges');\n  const sortedEvents = subdivideSegments(eventQueue, subject, clipping, sbbox, cbbox, operation);\n  //console.timeEnd('subdivide edges');\n\n  //console.time('connect vertices');\n  const result = connectEdges(sortedEvents, operation);\n  //console.timeEnd('connect vertices');\n  return result;\n}\n","import Tree                 from 'splaytree';\nimport computeFields        from './compute_fields';\nimport possibleIntersection from './possible_intersection';\nimport compareSegments      from './compare_segments';\nimport {\n  INTERSECTION,\n  DIFFERENCE\n} from './operation';\n\n\nexport default function subdivide(eventQueue, subject, clipping, sbbox, cbbox, operation) {\n  const sweepLine = new Tree(compareSegments);\n  const sortedEvents = [];\n\n  const rightbound = Math.min(sbbox[2], cbbox[2]);\n\n  let prev, next, begin;\n\n  while (eventQueue.length !== 0) {\n    let event = eventQueue.pop();\n    sortedEvents.push(event);\n\n    // optimization by bboxes for intersection and difference goes here\n    if ((operation === INTERSECTION && event.point[0] > rightbound) ||\n        (operation === DIFFERENCE   && event.point[0] > sbbox[2])) {\n      break;\n    }\n\n    if (event.left) {\n      next  = prev = sweepLine.insert(event);\n      begin = sweepLine.minNode();\n\n      if (prev !== begin) prev = sweepLine.prev(prev);\n      else                prev = null;\n\n      next = sweepLine.next(next);\n\n      const prevEvent = prev ? prev.key : null;\n      let prevprevEvent;\n      computeFields(event, prevEvent, operation);\n      if (next) {\n        if (possibleIntersection(event, next.key, eventQueue) === 2) {\n          computeFields(event, prevEvent, operation);\n          computeFields(event, next.key, operation);\n        }\n      }\n\n      if (prev) {\n        if (possibleIntersection(prev.key, event, eventQueue) === 2) {\n          let prevprev = prev;\n          if (prevprev !== begin) prevprev = sweepLine.prev(prevprev);\n          else                    prevprev = null;\n\n          prevprevEvent = prevprev ? prevprev.key : null;\n          computeFields(prevEvent, prevprevEvent, operation);\n          computeFields(event,     prevEvent,     operation);\n        }\n      }\n    } else {\n      event = event.otherEvent;\n      next = prev = sweepLine.find(event);\n\n      if (prev && next) {\n\n        if (prev !== begin) prev = sweepLine.prev(prev);\n        else                prev = null;\n\n        next = sweepLine.next(next);\n        sweepLine.remove(event);\n\n        if (next && prev) {\n          possibleIntersection(prev.key, next.key, eventQueue);\n        }\n      }\n    }\n  }\n  return sortedEvents;\n}\n","/* Polyfill service v3.13.0\n * For detailed credits and licence information see http://github.com/financial-times/polyfill-service\n *\n * - Array.prototype.fill, License: CC0 */\n\nif (!('fill' in Array.prototype)) {\n  Object.defineProperty(Array.prototype, 'fill', {\n    configurable: true,\n    value: function fill (value) {\n      if (this === undefined || this === null) {\n        throw new TypeError(this + ' is not an object')\n      }\n\n      var arrayLike = Object(this);\n\n      var length = Math.max(Math.min(arrayLike.length, 9007199254740991), 0) || 0;\n\n      var relativeStart = 1 in arguments ? parseInt(Number(arguments[1]), 10) || 0 : 0;\n\n      relativeStart = relativeStart < 0 ? Math.max(length + relativeStart, 0) : Math.min(relativeStart, length);\n\n      var relativeEnd = 2 in arguments && arguments[2] !== undefined ? parseInt(Number(arguments[2]), 10) || 0 : length;\n\n      relativeEnd = relativeEnd < 0 ? Math.max(length + arguments[2], 0) : Math.min(relativeEnd, length);\n\n      while (relativeStart < relativeEnd) {\n        arrayLike[relativeStart] = value;\n\n        ++relativeStart;\n      }\n\n      return arrayLike\n    },\n    writable: true\n  });\n}\n\n/**\n * Polyfill for IE support\n */\nNumber.isFinite = Number.isFinite || function (value) {\n  return typeof value === 'number' && isFinite(value)\n};\n\nNumber.isInteger = Number.isInteger || function (val) {\n  return typeof val === 'number' &&\n  isFinite(val) &&\n  Math.floor(val) === val\n};\n\nNumber.parseFloat = Number.parseFloat || parseFloat;\n\nNumber.isNaN = Number.isNaN || function (value) {\n  return value !== value // eslint-disable-line\n};\n\n/**\n * Polyfill for IE support\n */\nMath.trunc = Math.trunc || function (x) {\n  return x < 0 ? Math.ceil(x) : Math.floor(x)\n};\n\nvar NumberUtil = function NumberUtil () {};\n\nNumberUtil.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nNumberUtil.prototype.getClass = function getClass () {\n  return NumberUtil\n};\nNumberUtil.prototype.equalsWithTolerance = function equalsWithTolerance (x1, x2, tolerance) {\n  return Math.abs(x1 - x2) <= tolerance\n};\n\nvar IllegalArgumentException = (function (Error) {\n\tfunction IllegalArgumentException (message) {\n\t\tError.call(this, message);\n\t\tthis.name = 'IllegalArgumentException';\n\t\tthis.message = message;\n\t\tthis.stack = (new Error()).stack;\n\t}\n\n\tif ( Error ) IllegalArgumentException.__proto__ = Error;\n\tIllegalArgumentException.prototype = Object.create( Error && Error.prototype );\n\tIllegalArgumentException.prototype.constructor = IllegalArgumentException;\n\n\treturn IllegalArgumentException;\n}(Error));\n\nvar Double = function Double () {};\n\nvar staticAccessors$1 = { MAX_VALUE: { configurable: true } };\n\nDouble.isNaN = function isNaN (n) { return Number.isNaN(n) };\nDouble.doubleToLongBits = function doubleToLongBits (n) { return n };\nDouble.longBitsToDouble = function longBitsToDouble (n) { return n };\nDouble.isInfinite = function isInfinite (n) { return !Number.isFinite(n) };\nstaticAccessors$1.MAX_VALUE.get = function () { return Number.MAX_VALUE };\n\nObject.defineProperties( Double, staticAccessors$1 );\n\nvar Comparable = function Comparable () {};\n\nvar Clonable = function Clonable () {};\n\nvar Comparator = function Comparator () {};\n\nfunction Serializable () {}\n\n// import Assert from '../util/Assert'\n\nvar Coordinate = function Coordinate () {\n  this.x = null;\n  this.y = null;\n  this.z = null;\n  if (arguments.length === 0) {\n    this.x = 0.0;\n    this.y = 0.0;\n    this.z = Coordinate.NULL_ORDINATE;\n  } else if (arguments.length === 1) {\n    var c = arguments[0];\n    this.x = c.x;\n    this.y = c.y;\n    this.z = c.z;\n  } else if (arguments.length === 2) {\n    this.x = arguments[0];\n    this.y = arguments[1];\n    this.z = Coordinate.NULL_ORDINATE;\n  } else if (arguments.length === 3) {\n    this.x = arguments[0];\n    this.y = arguments[1];\n    this.z = arguments[2];\n  }\n};\n\nvar staticAccessors = { DimensionalComparator: { configurable: true },serialVersionUID: { configurable: true },NULL_ORDINATE: { configurable: true },X: { configurable: true },Y: { configurable: true },Z: { configurable: true } };\nCoordinate.prototype.setOrdinate = function setOrdinate (ordinateIndex, value) {\n  switch (ordinateIndex) {\n    case Coordinate.X:\n      this.x = value;\n      break\n    case Coordinate.Y:\n      this.y = value;\n      break\n    case Coordinate.Z:\n      this.z = value;\n      break\n    default:\n      throw new IllegalArgumentException('Invalid ordinate index: ' + ordinateIndex)\n  }\n};\nCoordinate.prototype.equals2D = function equals2D () {\n  if (arguments.length === 1) {\n    var other = arguments[0];\n    if (this.x !== other.x) {\n      return false\n    }\n    if (this.y !== other.y) {\n      return false\n    }\n    return true\n  } else if (arguments.length === 2) {\n    var c = arguments[0];\n    var tolerance = arguments[1];\n    if (!NumberUtil.equalsWithTolerance(this.x, c.x, tolerance)) {\n      return false\n    }\n    if (!NumberUtil.equalsWithTolerance(this.y, c.y, tolerance)) {\n      return false\n    }\n    return true\n  }\n};\nCoordinate.prototype.getOrdinate = function getOrdinate (ordinateIndex) {\n  switch (ordinateIndex) {\n    case Coordinate.X:\n      return this.x\n    case Coordinate.Y:\n      return this.y\n    case Coordinate.Z:\n      return this.z\n    default:\n  }\n  throw new IllegalArgumentException('Invalid ordinate index: ' + ordinateIndex)\n};\nCoordinate.prototype.equals3D = function equals3D (other) {\n  return this.x === other.x &&\n         this.y === other.y &&\n         ((this.z === other.z || Double.isNaN(this.z)) &&\n         Double.isNaN(other.z))\n};\nCoordinate.prototype.equals = function equals (other) {\n  if (!(other instanceof Coordinate)) {\n    return false\n  }\n  return this.equals2D(other)\n};\nCoordinate.prototype.equalInZ = function equalInZ (c, tolerance) {\n  return NumberUtil.equalsWithTolerance(this.z, c.z, tolerance)\n};\nCoordinate.prototype.compareTo = function compareTo (o) {\n  var other = o;\n  if (this.x < other.x) { return -1 }\n  if (this.x > other.x) { return 1 }\n  if (this.y < other.y) { return -1 }\n  if (this.y > other.y) { return 1 }\n  return 0\n};\nCoordinate.prototype.clone = function clone () {\n  // try {\n  // var coord = null\n  // return coord\n  // } catch (e) {\n  // if (e instanceof CloneNotSupportedException) {\n  //   Assert.shouldNeverReachHere(\"this shouldn't happen because this class is Cloneable\")\n  //   return null\n  // } else throw e\n  // } finally {}\n};\nCoordinate.prototype.copy = function copy () {\n  return new Coordinate(this)\n};\nCoordinate.prototype.toString = function toString () {\n  return '(' + this.x + ', ' + this.y + ', ' + this.z + ')'\n};\nCoordinate.prototype.distance3D = function distance3D (c) {\n  var dx = this.x - c.x;\n  var dy = this.y - c.y;\n  var dz = this.z - c.z;\n  return Math.sqrt(dx * dx + dy * dy + dz * dz)\n};\nCoordinate.prototype.distance = function distance (c) {\n  var dx = this.x - c.x;\n  var dy = this.y - c.y;\n  return Math.sqrt(dx * dx + dy * dy)\n};\nCoordinate.prototype.hashCode = function hashCode () {\n  var result = 17;\n  result = 37 * result + Coordinate.hashCode(this.x);\n  result = 37 * result + Coordinate.hashCode(this.y);\n  return result\n};\nCoordinate.prototype.setCoordinate = function setCoordinate (other) {\n  this.x = other.x;\n  this.y = other.y;\n  this.z = other.z;\n};\nCoordinate.prototype.interfaces_ = function interfaces_ () {\n  return [Comparable, Clonable, Serializable]\n};\nCoordinate.prototype.getClass = function getClass () {\n  return Coordinate\n};\nCoordinate.hashCode = function hashCode () {\n  if (arguments.length === 1) {\n    var x = arguments[0];\n    var f = Double.doubleToLongBits(x);\n    return Math.trunc((f ^ f) >>> 32)\n  }\n};\nstaticAccessors.DimensionalComparator.get = function () { return DimensionalComparator };\nstaticAccessors.serialVersionUID.get = function () { return 6683108902428366910 };\nstaticAccessors.NULL_ORDINATE.get = function () { return Double.NaN };\nstaticAccessors.X.get = function () { return 0 };\nstaticAccessors.Y.get = function () { return 1 };\nstaticAccessors.Z.get = function () { return 2 };\n\nObject.defineProperties( Coordinate, staticAccessors );\n\nvar DimensionalComparator = function DimensionalComparator (dimensionsToTest) {\n  this._dimensionsToTest = 2;\n  if (arguments.length === 0) {} else if (arguments.length === 1) {\n    var dimensionsToTest$1 = arguments[0];\n    if (dimensionsToTest$1 !== 2 && dimensionsToTest$1 !== 3) { throw new IllegalArgumentException('only 2 or 3 dimensions may be specified') }\n    this._dimensionsToTest = dimensionsToTest$1;\n  }\n};\nDimensionalComparator.prototype.compare = function compare (o1, o2) {\n  var c1 = o1;\n  var c2 = o2;\n  var compX = DimensionalComparator.compare(c1.x, c2.x);\n  if (compX !== 0) { return compX }\n  var compY = DimensionalComparator.compare(c1.y, c2.y);\n  if (compY !== 0) { return compY }\n  if (this._dimensionsToTest <= 2) { return 0 }\n  var compZ = DimensionalComparator.compare(c1.z, c2.z);\n  return compZ\n};\nDimensionalComparator.prototype.interfaces_ = function interfaces_ () {\n  return [Comparator]\n};\nDimensionalComparator.prototype.getClass = function getClass () {\n  return DimensionalComparator\n};\nDimensionalComparator.compare = function compare (a, b) {\n  if (a < b) { return -1 }\n  if (a > b) { return 1 }\n  if (Double.isNaN(a)) {\n    if (Double.isNaN(b)) { return 0 }\n    return -1\n  }\n  if (Double.isNaN(b)) { return 1 }\n  return 0\n};\n\n// import hasInterface from '../../../../hasInterface'\n// import CoordinateSequence from './CoordinateSequence'\n\nvar CoordinateSequenceFactory = function CoordinateSequenceFactory () {};\n\nCoordinateSequenceFactory.prototype.create = function create () {\n  // if (arguments.length === 1) {\n  // if (arguments[0] instanceof Array) {\n  //   let coordinates = arguments[0]\n  // } else if (hasInterface(arguments[0], CoordinateSequence)) {\n  //   let coordSeq = arguments[0]\n  // }\n  // } else if (arguments.length === 2) {\n  // let size = arguments[0]\n  // let dimension = arguments[1]\n  // }\n};\nCoordinateSequenceFactory.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nCoordinateSequenceFactory.prototype.getClass = function getClass () {\n  return CoordinateSequenceFactory\n};\n\nvar Location = function Location () {};\n\nvar staticAccessors$4 = { INTERIOR: { configurable: true },BOUNDARY: { configurable: true },EXTERIOR: { configurable: true },NONE: { configurable: true } };\n\nLocation.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nLocation.prototype.getClass = function getClass () {\n  return Location\n};\nLocation.toLocationSymbol = function toLocationSymbol (locationValue) {\n  switch (locationValue) {\n    case Location.EXTERIOR:\n      return 'e'\n    case Location.BOUNDARY:\n      return 'b'\n    case Location.INTERIOR:\n      return 'i'\n    case Location.NONE:\n      return '-'\n    default:\n  }\n  throw new IllegalArgumentException('Unknown location value: ' + locationValue)\n};\nstaticAccessors$4.INTERIOR.get = function () { return 0 };\nstaticAccessors$4.BOUNDARY.get = function () { return 1 };\nstaticAccessors$4.EXTERIOR.get = function () { return 2 };\nstaticAccessors$4.NONE.get = function () { return -1 };\n\nObject.defineProperties( Location, staticAccessors$4 );\n\nvar hasInterface = function (o, i) {\n  return o.interfaces_ && o.interfaces_().indexOf(i) > -1\n};\n\nvar MathUtil = function MathUtil () {};\n\nvar staticAccessors$5 = { LOG_10: { configurable: true } };\n\nMathUtil.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nMathUtil.prototype.getClass = function getClass () {\n  return MathUtil\n};\nMathUtil.log10 = function log10 (x) {\n  var ln = Math.log(x);\n  if (Double.isInfinite(ln)) { return ln }\n  if (Double.isNaN(ln)) { return ln }\n  return ln / MathUtil.LOG_10\n};\nMathUtil.min = function min (v1, v2, v3, v4) {\n  var min = v1;\n  if (v2 < min) { min = v2; }\n  if (v3 < min) { min = v3; }\n  if (v4 < min) { min = v4; }\n  return min\n};\nMathUtil.clamp = function clamp () {\n  if (typeof arguments[2] === 'number' && (typeof arguments[0] === 'number' && typeof arguments[1] === 'number')) {\n    var x = arguments[0];\n    var min = arguments[1];\n    var max = arguments[2];\n    if (x < min) { return min }\n    if (x > max) { return max }\n    return x\n  } else if (Number.isInteger(arguments[2]) && (Number.isInteger(arguments[0]) && Number.isInteger(arguments[1]))) {\n    var x$1 = arguments[0];\n    var min$1 = arguments[1];\n    var max$1 = arguments[2];\n    if (x$1 < min$1) { return min$1 }\n    if (x$1 > max$1) { return max$1 }\n    return x$1\n  }\n};\nMathUtil.wrap = function wrap (index, max) {\n  if (index < 0) {\n    return max - -index % max\n  }\n  return index % max\n};\nMathUtil.max = function max () {\n  if (arguments.length === 3) {\n    var v1 = arguments[0];\n    var v2 = arguments[1];\n    var v3 = arguments[2];\n    var max = v1;\n    if (v2 > max) { max = v2; }\n    if (v3 > max) { max = v3; }\n    return max\n  } else if (arguments.length === 4) {\n    var v1$1 = arguments[0];\n    var v2$1 = arguments[1];\n    var v3$1 = arguments[2];\n    var v4 = arguments[3];\n    var max$1 = v1$1;\n    if (v2$1 > max$1) { max$1 = v2$1; }\n    if (v3$1 > max$1) { max$1 = v3$1; }\n    if (v4 > max$1) { max$1 = v4; }\n    return max$1\n  }\n};\nMathUtil.average = function average (x1, x2) {\n  return (x1 + x2) / 2.0\n};\nstaticAccessors$5.LOG_10.get = function () { return Math.log(10) };\n\nObject.defineProperties( MathUtil, staticAccessors$5 );\n\nvar StringBuffer = function StringBuffer (str) {\n  this.str = str;\n};\nStringBuffer.prototype.append = function append (e) {\n  this.str += e;\n};\n\nStringBuffer.prototype.setCharAt = function setCharAt (i, c) {\n  this.str = this.str.substr(0, i) + c + this.str.substr(i + 1);\n};\n\nStringBuffer.prototype.toString = function toString (e) {\n  return this.str\n};\n\nvar Integer = function Integer (value) {\n  this.value = value;\n};\nInteger.prototype.intValue = function intValue () {\n  return this.value\n};\nInteger.prototype.compareTo = function compareTo (o) {\n  if (this.value < o) { return -1 }\n  if (this.value > o) { return 1 }\n  return 0\n};\nInteger.isNaN = function isNaN (n) { return Number.isNaN(n) };\n\nvar Character = function Character () {};\n\nCharacter.isWhitespace = function isWhitespace (c) { return ((c <= 32 && c >= 0) || c === 127) };\nCharacter.toUpperCase = function toUpperCase (c) { return c.toUpperCase() };\n\nvar DD = function DD () {\n  this._hi = 0.0;\n  this._lo = 0.0;\n  if (arguments.length === 0) {\n    this.init(0.0);\n  } else if (arguments.length === 1) {\n    if (typeof arguments[0] === 'number') {\n      var x = arguments[0];\n      this.init(x);\n    } else if (arguments[0] instanceof DD) {\n      var dd = arguments[0];\n      this.init(dd);\n    } else if (typeof arguments[0] === 'string') {\n      var str = arguments[0];\n      DD.call(this, DD.parse(str));\n    }\n  } else if (arguments.length === 2) {\n    var hi = arguments[0];\n    var lo = arguments[1];\n    this.init(hi, lo);\n  }\n};\n\nvar staticAccessors$7 = { PI: { configurable: true },TWO_PI: { configurable: true },PI_2: { configurable: true },E: { configurable: true },NaN: { configurable: true },EPS: { configurable: true },SPLIT: { configurable: true },MAX_PRINT_DIGITS: { configurable: true },TEN: { configurable: true },ONE: { configurable: true },SCI_NOT_EXPONENT_CHAR: { configurable: true },SCI_NOT_ZERO: { configurable: true } };\nDD.prototype.le = function le (y) {\n  return (this._hi < y._hi || this._hi === y._hi) && this._lo <= y._lo\n};\nDD.prototype.extractSignificantDigits = function extractSignificantDigits (insertDecimalPoint, magnitude) {\n  var y = this.abs();\n  var mag = DD.magnitude(y._hi);\n  var scale = DD.TEN.pow(mag);\n  y = y.divide(scale);\n  if (y.gt(DD.TEN)) {\n    y = y.divide(DD.TEN);\n    mag += 1;\n  } else if (y.lt(DD.ONE)) {\n    y = y.multiply(DD.TEN);\n    mag -= 1;\n  }\n  var decimalPointPos = mag + 1;\n  var buf = new StringBuffer();\n  var numDigits = DD.MAX_PRINT_DIGITS - 1;\n  for (var i = 0; i <= numDigits; i++) {\n    if (insertDecimalPoint && i === decimalPointPos) {\n      buf.append('.');\n    }\n    var digit = Math.trunc(y._hi);\n    if (digit < 0) {\n      break\n    }\n    var rebiasBy10 = false;\n    var digitChar = 0;\n    if (digit > 9) {\n      rebiasBy10 = true;\n      digitChar = '9';\n    } else {\n      digitChar = '0' + digit;\n    }\n    buf.append(digitChar);\n    y = y.subtract(DD.valueOf(digit)).multiply(DD.TEN);\n    if (rebiasBy10) { y.selfAdd(DD.TEN); }\n    var continueExtractingDigits = true;\n    var remMag = DD.magnitude(y._hi);\n    if (remMag < 0 && Math.abs(remMag) >= numDigits - i) { continueExtractingDigits = false; }\n    if (!continueExtractingDigits) { break }\n  }\n  magnitude[0] = mag;\n  return buf.toString()\n};\nDD.prototype.sqr = function sqr () {\n  return this.multiply(this)\n};\nDD.prototype.doubleValue = function doubleValue () {\n  return this._hi + this._lo\n};\nDD.prototype.subtract = function subtract () {\n  if (arguments[0] instanceof DD) {\n    var y = arguments[0];\n    return this.add(y.negate())\n  } else if (typeof arguments[0] === 'number') {\n    var y$1 = arguments[0];\n    return this.add(-y$1)\n  }\n};\nDD.prototype.equals = function equals () {\n  if (arguments.length === 1) {\n    var y = arguments[0];\n    return this._hi === y._hi && this._lo === y._lo\n  }\n};\nDD.prototype.isZero = function isZero () {\n  return this._hi === 0.0 && this._lo === 0.0\n};\nDD.prototype.selfSubtract = function selfSubtract () {\n  if (arguments[0] instanceof DD) {\n    var y = arguments[0];\n    if (this.isNaN()) { return this }\n    return this.selfAdd(-y._hi, -y._lo)\n  } else if (typeof arguments[0] === 'number') {\n    var y$1 = arguments[0];\n    if (this.isNaN()) { return this }\n    return this.selfAdd(-y$1, 0.0)\n  }\n};\nDD.prototype.getSpecialNumberString = function getSpecialNumberString () {\n  if (this.isZero()) { return '0.0' }\n  if (this.isNaN()) { return 'NaN ' }\n  return null\n};\nDD.prototype.min = function min (x) {\n  if (this.le(x)) {\n    return this\n  } else {\n    return x\n  }\n};\nDD.prototype.selfDivide = function selfDivide () {\n  if (arguments.length === 1) {\n    if (arguments[0] instanceof DD) {\n      var y = arguments[0];\n      return this.selfDivide(y._hi, y._lo)\n    } else if (typeof arguments[0] === 'number') {\n      var y$1 = arguments[0];\n      return this.selfDivide(y$1, 0.0)\n    }\n  } else if (arguments.length === 2) {\n    var yhi = arguments[0];\n    var ylo = arguments[1];\n    var hc = null;\n    var tc = null;\n    var hy = null;\n    var ty = null;\n    var C = null;\n    var c = null;\n    var U = null;\n    var u = null;\n    C = this._hi / yhi;\n    c = DD.SPLIT * C;\n    hc = c - C;\n    u = DD.SPLIT * yhi;\n    hc = c - hc;\n    tc = C - hc;\n    hy = u - yhi;\n    U = C * yhi;\n    hy = u - hy;\n    ty = yhi - hy;\n    u = hc * hy - U + hc * ty + tc * hy + tc * ty;\n    c = (this._hi - U - u + this._lo - C * ylo) / yhi;\n    u = C + c;\n    this._hi = u;\n    this._lo = C - u + c;\n    return this\n  }\n};\nDD.prototype.dump = function dump () {\n  return 'DD<' + this._hi + ', ' + this._lo + '>'\n};\nDD.prototype.divide = function divide () {\n  if (arguments[0] instanceof DD) {\n    var y = arguments[0];\n    var hc = null;\n    var tc = null;\n    var hy = null;\n    var ty = null;\n    var C = null;\n    var c = null;\n    var U = null;\n    var u = null;\n    C = this._hi / y._hi;\n    c = DD.SPLIT * C;\n    hc = c - C;\n    u = DD.SPLIT * y._hi;\n    hc = c - hc;\n    tc = C - hc;\n    hy = u - y._hi;\n    U = C * y._hi;\n    hy = u - hy;\n    ty = y._hi - hy;\n    u = hc * hy - U + hc * ty + tc * hy + tc * ty;\n    c = (this._hi - U - u + this._lo - C * y._lo) / y._hi;\n    u = C + c;\n    var zhi = u;\n    var zlo = C - u + c;\n    return new DD(zhi, zlo)\n  } else if (typeof arguments[0] === 'number') {\n    var y$1 = arguments[0];\n    if (Double.isNaN(y$1)) { return DD.createNaN() }\n    return DD.copy(this).selfDivide(y$1, 0.0)\n  }\n};\nDD.prototype.ge = function ge (y) {\n  return (this._hi > y._hi || this._hi === y._hi) && this._lo >= y._lo\n};\nDD.prototype.pow = function pow (exp) {\n  if (exp === 0.0) { return DD.valueOf(1.0) }\n  var r = new DD(this);\n  var s = DD.valueOf(1.0);\n  var n = Math.abs(exp);\n  if (n > 1) {\n    while (n > 0) {\n      if (n % 2 === 1) {\n        s.selfMultiply(r);\n      }\n      n /= 2;\n      if (n > 0) { r = r.sqr(); }\n    }\n  } else {\n    s = r;\n  }\n  if (exp < 0) { return s.reciprocal() }\n  return s\n};\nDD.prototype.ceil = function ceil () {\n  if (this.isNaN()) { return DD.NaN }\n  var fhi = Math.ceil(this._hi);\n  var flo = 0.0;\n  if (fhi === this._hi) {\n    flo = Math.ceil(this._lo);\n  }\n  return new DD(fhi, flo)\n};\nDD.prototype.compareTo = function compareTo (o) {\n  var other = o;\n  if (this._hi < other._hi) { return -1 }\n  if (this._hi > other._hi) { return 1 }\n  if (this._lo < other._lo) { return -1 }\n  if (this._lo > other._lo) { return 1 }\n  return 0\n};\nDD.prototype.rint = function rint () {\n  if (this.isNaN()) { return this }\n  var plus5 = this.add(0.5);\n  return plus5.floor()\n};\nDD.prototype.setValue = function setValue () {\n  if (arguments[0] instanceof DD) {\n    var value = arguments[0];\n    this.init(value);\n    return this\n  } else if (typeof arguments[0] === 'number') {\n    var value$1 = arguments[0];\n    this.init(value$1);\n    return this\n  }\n};\nDD.prototype.max = function max (x) {\n  if (this.ge(x)) {\n    return this\n  } else {\n    return x\n  }\n};\nDD.prototype.sqrt = function sqrt () {\n  if (this.isZero()) { return DD.valueOf(0.0) }\n  if (this.isNegative()) {\n    return DD.NaN\n  }\n  var x = 1.0 / Math.sqrt(this._hi);\n  var ax = this._hi * x;\n  var axdd = DD.valueOf(ax);\n  var diffSq = this.subtract(axdd.sqr());\n  var d2 = diffSq._hi * (x * 0.5);\n  return axdd.add(d2)\n};\nDD.prototype.selfAdd = function selfAdd () {\n  if (arguments.length === 1) {\n    if (arguments[0] instanceof DD) {\n      var y = arguments[0];\n      return this.selfAdd(y._hi, y._lo)\n    } else if (typeof arguments[0] === 'number') {\n      var y$1 = arguments[0];\n      var H = null;\n      var h = null;\n      var S = null;\n      var s = null;\n      var e = null;\n      var f = null;\n      S = this._hi + y$1;\n      e = S - this._hi;\n      s = S - e;\n      s = y$1 - e + (this._hi - s);\n      f = s + this._lo;\n      H = S + f;\n      h = f + (S - H);\n      this._hi = H + h;\n      this._lo = h + (H - this._hi);\n      return this\n    }\n  } else if (arguments.length === 2) {\n    var yhi = arguments[0];\n    var ylo = arguments[1];\n    var H$1 = null;\n    var h$1 = null;\n    var T = null;\n    var t = null;\n    var S$1 = null;\n    var s$1 = null;\n    var e$1 = null;\n    var f$1 = null;\n    S$1 = this._hi + yhi;\n    T = this._lo + ylo;\n    e$1 = S$1 - this._hi;\n    f$1 = T - this._lo;\n    s$1 = S$1 - e$1;\n    t = T - f$1;\n    s$1 = yhi - e$1 + (this._hi - s$1);\n    t = ylo - f$1 + (this._lo - t);\n    e$1 = s$1 + T;\n    H$1 = S$1 + e$1;\n    h$1 = e$1 + (S$1 - H$1);\n    e$1 = t + h$1;\n    var zhi = H$1 + e$1;\n    var zlo = e$1 + (H$1 - zhi);\n    this._hi = zhi;\n    this._lo = zlo;\n    return this\n  }\n};\nDD.prototype.selfMultiply = function selfMultiply () {\n  if (arguments.length === 1) {\n    if (arguments[0] instanceof DD) {\n      var y = arguments[0];\n      return this.selfMultiply(y._hi, y._lo)\n    } else if (typeof arguments[0] === 'number') {\n      var y$1 = arguments[0];\n      return this.selfMultiply(y$1, 0.0)\n    }\n  } else if (arguments.length === 2) {\n    var yhi = arguments[0];\n    var ylo = arguments[1];\n    var hx = null;\n    var tx = null;\n    var hy = null;\n    var ty = null;\n    var C = null;\n    var c = null;\n    C = DD.SPLIT * this._hi;\n    hx = C - this._hi;\n    c = DD.SPLIT * yhi;\n    hx = C - hx;\n    tx = this._hi - hx;\n    hy = c - yhi;\n    C = this._hi * yhi;\n    hy = c - hy;\n    ty = yhi - hy;\n    c = hx * hy - C + hx * ty + tx * hy + tx * ty + (this._hi * ylo + this._lo * yhi);\n    var zhi = C + c;\n    hx = C - zhi;\n    var zlo = c + hx;\n    this._hi = zhi;\n    this._lo = zlo;\n    return this\n  }\n};\nDD.prototype.selfSqr = function selfSqr () {\n  return this.selfMultiply(this)\n};\nDD.prototype.floor = function floor () {\n  if (this.isNaN()) { return DD.NaN }\n  var fhi = Math.floor(this._hi);\n  var flo = 0.0;\n  if (fhi === this._hi) {\n    flo = Math.floor(this._lo);\n  }\n  return new DD(fhi, flo)\n};\nDD.prototype.negate = function negate () {\n  if (this.isNaN()) { return this }\n  return new DD(-this._hi, -this._lo)\n};\nDD.prototype.clone = function clone () {\n  // try {\n  // return null\n  // } catch (ex) {\n  // if (ex instanceof CloneNotSupportedException) {\n  //   return null\n  // } else throw ex\n  // } finally {}\n};\nDD.prototype.multiply = function multiply () {\n  if (arguments[0] instanceof DD) {\n    var y = arguments[0];\n    if (y.isNaN()) { return DD.createNaN() }\n    return DD.copy(this).selfMultiply(y)\n  } else if (typeof arguments[0] === 'number') {\n    var y$1 = arguments[0];\n    if (Double.isNaN(y$1)) { return DD.createNaN() }\n    return DD.copy(this).selfMultiply(y$1, 0.0)\n  }\n};\nDD.prototype.isNaN = function isNaN () {\n  return Double.isNaN(this._hi)\n};\nDD.prototype.intValue = function intValue () {\n  return Math.trunc(this._hi)\n};\nDD.prototype.toString = function toString () {\n  var mag = DD.magnitude(this._hi);\n  if (mag >= -3 && mag <= 20) { return this.toStandardNotation() }\n  return this.toSciNotation()\n};\nDD.prototype.toStandardNotation = function toStandardNotation () {\n  var specialStr = this.getSpecialNumberString();\n  if (specialStr !== null) { return specialStr }\n  var magnitude = new Array(1).fill(null);\n  var sigDigits = this.extractSignificantDigits(true, magnitude);\n  var decimalPointPos = magnitude[0] + 1;\n  var num = sigDigits;\n  if (sigDigits.charAt(0) === '.') {\n    num = '0' + sigDigits;\n  } else if (decimalPointPos < 0) {\n    num = '0.' + DD.stringOfChar('0', -decimalPointPos) + sigDigits;\n  } else if (sigDigits.indexOf('.') === -1) {\n    var numZeroes = decimalPointPos - sigDigits.length;\n    var zeroes = DD.stringOfChar('0', numZeroes);\n    num = sigDigits + zeroes + '.0';\n  }\n  if (this.isNegative()) { return '-' + num }\n  return num\n};\nDD.prototype.reciprocal = function reciprocal () {\n  var hc = null;\n  var tc = null;\n  var hy = null;\n  var ty = null;\n  var C = null;\n  var c = null;\n  var U = null;\n  var u = null;\n  C = 1.0 / this._hi;\n  c = DD.SPLIT * C;\n  hc = c - C;\n  u = DD.SPLIT * this._hi;\n  hc = c - hc;\n  tc = C - hc;\n  hy = u - this._hi;\n  U = C * this._hi;\n  hy = u - hy;\n  ty = this._hi - hy;\n  u = hc * hy - U + hc * ty + tc * hy + tc * ty;\n  c = (1.0 - U - u - C * this._lo) / this._hi;\n  var zhi = C + c;\n  var zlo = C - zhi + c;\n  return new DD(zhi, zlo)\n};\nDD.prototype.toSciNotation = function toSciNotation () {\n  if (this.isZero()) { return DD.SCI_NOT_ZERO }\n  var specialStr = this.getSpecialNumberString();\n  if (specialStr !== null) { return specialStr }\n  var magnitude = new Array(1).fill(null);\n  var digits = this.extractSignificantDigits(false, magnitude);\n  var expStr = DD.SCI_NOT_EXPONENT_CHAR + magnitude[0];\n  if (digits.charAt(0) === '0') {\n    throw new Error('Found leading zero: ' + digits)\n  }\n  var trailingDigits = '';\n  if (digits.length > 1) { trailingDigits = digits.substring(1); }\n  var digitsWithDecimal = digits.charAt(0) + '.' + trailingDigits;\n  if (this.isNegative()) { return '-' + digitsWithDecimal + expStr }\n  return digitsWithDecimal + expStr\n};\nDD.prototype.abs = function abs () {\n  if (this.isNaN()) { return DD.NaN }\n  if (this.isNegative()) { return this.negate() }\n  return new DD(this)\n};\nDD.prototype.isPositive = function isPositive () {\n  return (this._hi > 0.0 || this._hi === 0.0) && this._lo > 0.0\n};\nDD.prototype.lt = function lt (y) {\n  return (this._hi < y._hi || this._hi === y._hi) && this._lo < y._lo\n};\nDD.prototype.add = function add () {\n  if (arguments[0] instanceof DD) {\n    var y = arguments[0];\n    return DD.copy(this).selfAdd(y)\n  } else if (typeof arguments[0] === 'number') {\n    var y$1 = arguments[0];\n    return DD.copy(this).selfAdd(y$1)\n  }\n};\nDD.prototype.init = function init () {\n  if (arguments.length === 1) {\n    if (typeof arguments[0] === 'number') {\n      var x = arguments[0];\n      this._hi = x;\n      this._lo = 0.0;\n    } else if (arguments[0] instanceof DD) {\n      var dd = arguments[0];\n      this._hi = dd._hi;\n      this._lo = dd._lo;\n    }\n  } else if (arguments.length === 2) {\n    var hi = arguments[0];\n    var lo = arguments[1];\n    this._hi = hi;\n    this._lo = lo;\n  }\n};\nDD.prototype.gt = function gt (y) {\n  return (this._hi > y._hi || this._hi === y._hi) && this._lo > y._lo\n};\nDD.prototype.isNegative = function isNegative () {\n  return (this._hi < 0.0 || this._hi === 0.0) && this._lo < 0.0\n};\nDD.prototype.trunc = function trunc () {\n  if (this.isNaN()) { return DD.NaN }\n  if (this.isPositive()) { return this.floor(); } else { return this.ceil() }\n};\nDD.prototype.signum = function signum () {\n  if (this._hi > 0) { return 1 }\n  if (this._hi < 0) { return -1 }\n  if (this._lo > 0) { return 1 }\n  if (this._lo < 0) { return -1 }\n  return 0\n};\nDD.prototype.interfaces_ = function interfaces_ () {\n  return [Serializable, Comparable, Clonable]\n};\nDD.prototype.getClass = function getClass () {\n  return DD\n};\nDD.sqr = function sqr (x) {\n  return DD.valueOf(x).selfMultiply(x)\n};\nDD.valueOf = function valueOf () {\n  if (typeof arguments[0] === 'string') {\n    var str = arguments[0];\n    return DD.parse(str)\n  } else if (typeof arguments[0] === 'number') {\n    var x = arguments[0];\n    return new DD(x)\n  }\n};\nDD.sqrt = function sqrt (x) {\n  return DD.valueOf(x).sqrt()\n};\nDD.parse = function parse (str) {\n  var i = 0;\n  var strlen = str.length;\n  while (Character.isWhitespace(str.charAt(i))) { i++; }\n  var isNegative = false;\n  if (i < strlen) {\n    var signCh = str.charAt(i);\n    if (signCh === '-' || signCh === '+') {\n      i++;\n      if (signCh === '-') { isNegative = true; }\n    }\n  }\n  var val = new DD();\n  var numDigits = 0;\n  var numBeforeDec = 0;\n  var exp = 0;\n  while (true) {\n    if (i >= strlen) { break }\n    var ch = str.charAt(i);\n    i++;\n    if (Character.isDigit(ch)) {\n      var d = ch - '0';\n      val.selfMultiply(DD.TEN);\n      val.selfAdd(d);\n      numDigits++;\n      continue\n    }\n    if (ch === '.') {\n      numBeforeDec = numDigits;\n      continue\n    }\n    if (ch === 'e' || ch === 'E') {\n      var expStr = str.substring(i);\n      try {\n        exp = Integer.parseInt(expStr);\n      } catch (ex) {\n        if (ex instanceof Error) {\n          throw new Error('Invalid exponent ' + expStr + ' in string ' + str)\n        } else { throw ex }\n      } finally {}\n      break\n    }\n    throw new Error(\"Unexpected character '\" + ch + \"' at position \" + i + ' in string ' + str)\n  }\n  var val2 = val;\n  var numDecPlaces = numDigits - numBeforeDec - exp;\n  if (numDecPlaces === 0) {\n    val2 = val;\n  } else if (numDecPlaces > 0) {\n    var scale = DD.TEN.pow(numDecPlaces);\n    val2 = val.divide(scale);\n  } else if (numDecPlaces < 0) {\n    var scale$1 = DD.TEN.pow(-numDecPlaces);\n    val2 = val.multiply(scale$1);\n  }\n  if (isNegative) {\n    return val2.negate()\n  }\n  return val2\n};\nDD.createNaN = function createNaN () {\n  return new DD(Double.NaN, Double.NaN)\n};\nDD.copy = function copy (dd) {\n  return new DD(dd)\n};\nDD.magnitude = function magnitude (x) {\n  var xAbs = Math.abs(x);\n  var xLog10 = Math.log(xAbs) / Math.log(10);\n  var xMag = Math.trunc(Math.floor(xLog10));\n  var xApprox = Math.pow(10, xMag);\n  if (xApprox * 10 <= xAbs) { xMag += 1; }\n  return xMag\n};\nDD.stringOfChar = function stringOfChar (ch, len) {\n  var buf = new StringBuffer();\n  for (var i = 0; i < len; i++) {\n    buf.append(ch);\n  }\n  return buf.toString()\n};\nstaticAccessors$7.PI.get = function () { return new DD(3.141592653589793116e+00, 1.224646799147353207e-16) };\nstaticAccessors$7.TWO_PI.get = function () { return new DD(6.283185307179586232e+00, 2.449293598294706414e-16) };\nstaticAccessors$7.PI_2.get = function () { return new DD(1.570796326794896558e+00, 6.123233995736766036e-17) };\nstaticAccessors$7.E.get = function () { return new DD(2.718281828459045091e+00, 1.445646891729250158e-16) };\nstaticAccessors$7.NaN.get = function () { return new DD(Double.NaN, Double.NaN) };\nstaticAccessors$7.EPS.get = function () { return 1.23259516440783e-32 };\nstaticAccessors$7.SPLIT.get = function () { return 134217729.0 };\nstaticAccessors$7.MAX_PRINT_DIGITS.get = function () { return 32 };\nstaticAccessors$7.TEN.get = function () { return DD.valueOf(10.0) };\nstaticAccessors$7.ONE.get = function () { return DD.valueOf(1.0) };\nstaticAccessors$7.SCI_NOT_EXPONENT_CHAR.get = function () { return 'E' };\nstaticAccessors$7.SCI_NOT_ZERO.get = function () { return '0.0E0' };\n\nObject.defineProperties( DD, staticAccessors$7 );\n\nvar CGAlgorithmsDD = function CGAlgorithmsDD () {};\n\nvar staticAccessors$6 = { DP_SAFE_EPSILON: { configurable: true } };\n\nCGAlgorithmsDD.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nCGAlgorithmsDD.prototype.getClass = function getClass () {\n  return CGAlgorithmsDD\n};\nCGAlgorithmsDD.orientationIndex = function orientationIndex (p1, p2, q) {\n  var index = CGAlgorithmsDD.orientationIndexFilter(p1, p2, q);\n  if (index <= 1) { return index }\n  var dx1 = DD.valueOf(p2.x).selfAdd(-p1.x);\n  var dy1 = DD.valueOf(p2.y).selfAdd(-p1.y);\n  var dx2 = DD.valueOf(q.x).selfAdd(-p2.x);\n  var dy2 = DD.valueOf(q.y).selfAdd(-p2.y);\n  return dx1.selfMultiply(dy2).selfSubtract(dy1.selfMultiply(dx2)).signum()\n};\nCGAlgorithmsDD.signOfDet2x2 = function signOfDet2x2 (x1, y1, x2, y2) {\n  var det = x1.multiply(y2).selfSubtract(y1.multiply(x2));\n  return det.signum()\n};\nCGAlgorithmsDD.intersection = function intersection (p1, p2, q1, q2) {\n  var denom1 = DD.valueOf(q2.y).selfSubtract(q1.y).selfMultiply(DD.valueOf(p2.x).selfSubtract(p1.x));\n  var denom2 = DD.valueOf(q2.x).selfSubtract(q1.x).selfMultiply(DD.valueOf(p2.y).selfSubtract(p1.y));\n  var denom = denom1.subtract(denom2);\n  var numx1 = DD.valueOf(q2.x).selfSubtract(q1.x).selfMultiply(DD.valueOf(p1.y).selfSubtract(q1.y));\n  var numx2 = DD.valueOf(q2.y).selfSubtract(q1.y).selfMultiply(DD.valueOf(p1.x).selfSubtract(q1.x));\n  var numx = numx1.subtract(numx2);\n  var fracP = numx.selfDivide(denom).doubleValue();\n  var x = DD.valueOf(p1.x).selfAdd(DD.valueOf(p2.x).selfSubtract(p1.x).selfMultiply(fracP)).doubleValue();\n  var numy1 = DD.valueOf(p2.x).selfSubtract(p1.x).selfMultiply(DD.valueOf(p1.y).selfSubtract(q1.y));\n  var numy2 = DD.valueOf(p2.y).selfSubtract(p1.y).selfMultiply(DD.valueOf(p1.x).selfSubtract(q1.x));\n  var numy = numy1.subtract(numy2);\n  var fracQ = numy.selfDivide(denom).doubleValue();\n  var y = DD.valueOf(q1.y).selfAdd(DD.valueOf(q2.y).selfSubtract(q1.y).selfMultiply(fracQ)).doubleValue();\n  return new Coordinate(x, y)\n};\nCGAlgorithmsDD.orientationIndexFilter = function orientationIndexFilter (pa, pb, pc) {\n  var detsum = null;\n  var detleft = (pa.x - pc.x) * (pb.y - pc.y);\n  var detright = (pa.y - pc.y) * (pb.x - pc.x);\n  var det = detleft - detright;\n  if (detleft > 0.0) {\n    if (detright <= 0.0) {\n      return CGAlgorithmsDD.signum(det)\n    } else {\n      detsum = detleft + detright;\n    }\n  } else if (detleft < 0.0) {\n    if (detright >= 0.0) {\n      return CGAlgorithmsDD.signum(det)\n    } else {\n      detsum = -detleft - detright;\n    }\n  } else {\n    return CGAlgorithmsDD.signum(det)\n  }\n  var errbound = CGAlgorithmsDD.DP_SAFE_EPSILON * detsum;\n  if (det >= errbound || -det >= errbound) {\n    return CGAlgorithmsDD.signum(det)\n  }\n  return 2\n};\nCGAlgorithmsDD.signum = function signum (x) {\n  if (x > 0) { return 1 }\n  if (x < 0) { return -1 }\n  return 0\n};\nstaticAccessors$6.DP_SAFE_EPSILON.get = function () { return 1e-15 };\n\nObject.defineProperties( CGAlgorithmsDD, staticAccessors$6 );\n\nvar CoordinateSequence = function CoordinateSequence () {};\n\nvar staticAccessors$8 = { X: { configurable: true },Y: { configurable: true },Z: { configurable: true },M: { configurable: true } };\n\nstaticAccessors$8.X.get = function () { return 0 };\nstaticAccessors$8.Y.get = function () { return 1 };\nstaticAccessors$8.Z.get = function () { return 2 };\nstaticAccessors$8.M.get = function () { return 3 };\nCoordinateSequence.prototype.setOrdinate = function setOrdinate (index, ordinateIndex, value) {};\nCoordinateSequence.prototype.size = function size () {};\nCoordinateSequence.prototype.getOrdinate = function getOrdinate (index, ordinateIndex) {};\nCoordinateSequence.prototype.getCoordinate = function getCoordinate () {};\nCoordinateSequence.prototype.getCoordinateCopy = function getCoordinateCopy (i) {};\nCoordinateSequence.prototype.getDimension = function getDimension () {};\nCoordinateSequence.prototype.getX = function getX (index) {};\nCoordinateSequence.prototype.clone = function clone () {};\nCoordinateSequence.prototype.expandEnvelope = function expandEnvelope (env) {};\nCoordinateSequence.prototype.copy = function copy () {};\nCoordinateSequence.prototype.getY = function getY (index) {};\nCoordinateSequence.prototype.toCoordinateArray = function toCoordinateArray () {};\nCoordinateSequence.prototype.interfaces_ = function interfaces_ () {\n  return [Clonable]\n};\nCoordinateSequence.prototype.getClass = function getClass () {\n  return CoordinateSequence\n};\n\nObject.defineProperties( CoordinateSequence, staticAccessors$8 );\n\nvar Exception = function Exception () {};\n\nvar NotRepresentableException = (function (Exception$$1) {\n  function NotRepresentableException () {\n    Exception$$1.call(this, 'Projective point not representable on the Cartesian plane.');\n  }\n\n  if ( Exception$$1 ) NotRepresentableException.__proto__ = Exception$$1;\n  NotRepresentableException.prototype = Object.create( Exception$$1 && Exception$$1.prototype );\n  NotRepresentableException.prototype.constructor = NotRepresentableException;\n  NotRepresentableException.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  NotRepresentableException.prototype.getClass = function getClass () {\n    return NotRepresentableException\n  };\n\n  return NotRepresentableException;\n}(Exception));\n\nvar System = function System () {};\n\nSystem.arraycopy = function arraycopy (src, srcPos, dest, destPos, len) {\n  var c = 0;\n  for (var i = srcPos; i < srcPos + len; i++) {\n    dest[destPos + c] = src[i];\n    c++;\n  }\n};\n\nSystem.getProperty = function getProperty (name) {\n  return {\n    'line.separator': '\\n'\n  }[name]\n};\n\nvar HCoordinate = function HCoordinate () {\n  this.x = null;\n  this.y = null;\n  this.w = null;\n  if (arguments.length === 0) {\n    this.x = 0.0;\n    this.y = 0.0;\n    this.w = 1.0;\n  } else if (arguments.length === 1) {\n    var p = arguments[0];\n    this.x = p.x;\n    this.y = p.y;\n    this.w = 1.0;\n  } else if (arguments.length === 2) {\n    if (typeof arguments[0] === 'number' && typeof arguments[1] === 'number') {\n      var _x = arguments[0];\n      var _y = arguments[1];\n      this.x = _x;\n      this.y = _y;\n      this.w = 1.0;\n    } else if (arguments[0] instanceof HCoordinate && arguments[1] instanceof HCoordinate) {\n      var p1 = arguments[0];\n      var p2 = arguments[1];\n      this.x = p1.y * p2.w - p2.y * p1.w;\n      this.y = p2.x * p1.w - p1.x * p2.w;\n      this.w = p1.x * p2.y - p2.x * p1.y;\n    } else if (arguments[0] instanceof Coordinate && arguments[1] instanceof Coordinate) {\n      var p1$1 = arguments[0];\n      var p2$1 = arguments[1];\n      this.x = p1$1.y - p2$1.y;\n      this.y = p2$1.x - p1$1.x;\n      this.w = p1$1.x * p2$1.y - p2$1.x * p1$1.y;\n    }\n  } else if (arguments.length === 3) {\n    var _x$1 = arguments[0];\n    var _y$1 = arguments[1];\n    var _w = arguments[2];\n    this.x = _x$1;\n    this.y = _y$1;\n    this.w = _w;\n  } else if (arguments.length === 4) {\n    var p1$2 = arguments[0];\n    var p2$2 = arguments[1];\n    var q1 = arguments[2];\n    var q2 = arguments[3];\n    var px = p1$2.y - p2$2.y;\n    var py = p2$2.x - p1$2.x;\n    var pw = p1$2.x * p2$2.y - p2$2.x * p1$2.y;\n    var qx = q1.y - q2.y;\n    var qy = q2.x - q1.x;\n    var qw = q1.x * q2.y - q2.x * q1.y;\n    this.x = py * qw - qy * pw;\n    this.y = qx * pw - px * qw;\n    this.w = px * qy - qx * py;\n  }\n};\nHCoordinate.prototype.getY = function getY () {\n  var a = this.y / this.w;\n  if (Double.isNaN(a) || Double.isInfinite(a)) {\n    throw new NotRepresentableException()\n  }\n  return a\n};\nHCoordinate.prototype.getX = function getX () {\n  var a = this.x / this.w;\n  if (Double.isNaN(a) || Double.isInfinite(a)) {\n    throw new NotRepresentableException()\n  }\n  return a\n};\nHCoordinate.prototype.getCoordinate = function getCoordinate () {\n  var p = new Coordinate();\n  p.x = this.getX();\n  p.y = this.getY();\n  return p\n};\nHCoordinate.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nHCoordinate.prototype.getClass = function getClass () {\n  return HCoordinate\n};\nHCoordinate.intersection = function intersection (p1, p2, q1, q2) {\n  var px = p1.y - p2.y;\n  var py = p2.x - p1.x;\n  var pw = p1.x * p2.y - p2.x * p1.y;\n  var qx = q1.y - q2.y;\n  var qy = q2.x - q1.x;\n  var qw = q1.x * q2.y - q2.x * q1.y;\n  var x = py * qw - qy * pw;\n  var y = qx * pw - px * qw;\n  var w = px * qy - qx * py;\n  var xInt = x / w;\n  var yInt = y / w;\n  if (Double.isNaN(xInt) || (Double.isInfinite(xInt) || Double.isNaN(yInt)) || Double.isInfinite(yInt)) {\n    throw new NotRepresentableException()\n  }\n  return new Coordinate(xInt, yInt)\n};\n\nvar Envelope = function Envelope () {\n  this._minx = null;\n  this._maxx = null;\n  this._miny = null;\n  this._maxy = null;\n  if (arguments.length === 0) {\n    this.init();\n  } else if (arguments.length === 1) {\n    if (arguments[0] instanceof Coordinate) {\n      var p = arguments[0];\n      this.init(p.x, p.x, p.y, p.y);\n    } else if (arguments[0] instanceof Envelope) {\n      var env = arguments[0];\n      this.init(env);\n    }\n  } else if (arguments.length === 2) {\n    var p1 = arguments[0];\n    var p2 = arguments[1];\n    this.init(p1.x, p2.x, p1.y, p2.y);\n  } else if (arguments.length === 4) {\n    var x1 = arguments[0];\n    var x2 = arguments[1];\n    var y1 = arguments[2];\n    var y2 = arguments[3];\n    this.init(x1, x2, y1, y2);\n  }\n};\n\nvar staticAccessors$9 = { serialVersionUID: { configurable: true } };\nEnvelope.prototype.getArea = function getArea () {\n  return this.getWidth() * this.getHeight()\n};\nEnvelope.prototype.equals = function equals (other) {\n  if (!(other instanceof Envelope)) {\n    return false\n  }\n  var otherEnvelope = other;\n  if (this.isNull()) {\n    return otherEnvelope.isNull()\n  }\n  return this._maxx === otherEnvelope.getMaxX() && this._maxy === otherEnvelope.getMaxY() && this._minx === otherEnvelope.getMinX() && this._miny === otherEnvelope.getMinY()\n};\nEnvelope.prototype.intersection = function intersection (env) {\n  if (this.isNull() || env.isNull() || !this.intersects(env)) { return new Envelope() }\n  var intMinX = this._minx > env._minx ? this._minx : env._minx;\n  var intMinY = this._miny > env._miny ? this._miny : env._miny;\n  var intMaxX = this._maxx < env._maxx ? this._maxx : env._maxx;\n  var intMaxY = this._maxy < env._maxy ? this._maxy : env._maxy;\n  return new Envelope(intMinX, intMaxX, intMinY, intMaxY)\n};\nEnvelope.prototype.isNull = function isNull () {\n  return this._maxx < this._minx\n};\nEnvelope.prototype.getMaxX = function getMaxX () {\n  return this._maxx\n};\nEnvelope.prototype.covers = function covers () {\n  if (arguments.length === 1) {\n    if (arguments[0] instanceof Coordinate) {\n      var p = arguments[0];\n      return this.covers(p.x, p.y)\n    } else if (arguments[0] instanceof Envelope) {\n      var other = arguments[0];\n      if (this.isNull() || other.isNull()) {\n        return false\n      }\n      return other.getMinX() >= this._minx && other.getMaxX() <= this._maxx && other.getMinY() >= this._miny && other.getMaxY() <= this._maxy\n    }\n  } else if (arguments.length === 2) {\n    var x = arguments[0];\n    var y = arguments[1];\n    if (this.isNull()) { return false }\n    return x >= this._minx && x <= this._maxx && y >= this._miny && y <= this._maxy\n  }\n};\nEnvelope.prototype.intersects = function intersects () {\n  if (arguments.length === 1) {\n    if (arguments[0] instanceof Envelope) {\n      var other = arguments[0];\n      if (this.isNull() || other.isNull()) {\n        return false\n      }\n      return !(other._minx > this._maxx || other._maxx < this._minx || other._miny > this._maxy || other._maxy < this._miny)\n    } else if (arguments[0] instanceof Coordinate) {\n      var p = arguments[0];\n      return this.intersects(p.x, p.y)\n    }\n  } else if (arguments.length === 2) {\n    var x = arguments[0];\n    var y = arguments[1];\n    if (this.isNull()) { return false }\n    return !(x > this._maxx || x < this._minx || y > this._maxy || y < this._miny)\n  }\n};\nEnvelope.prototype.getMinY = function getMinY () {\n  return this._miny\n};\nEnvelope.prototype.getMinX = function getMinX () {\n  return this._minx\n};\nEnvelope.prototype.expandToInclude = function expandToInclude () {\n  if (arguments.length === 1) {\n    if (arguments[0] instanceof Coordinate) {\n      var p = arguments[0];\n      this.expandToInclude(p.x, p.y);\n    } else if (arguments[0] instanceof Envelope) {\n      var other = arguments[0];\n      if (other.isNull()) {\n        return null\n      }\n      if (this.isNull()) {\n        this._minx = other.getMinX();\n        this._maxx = other.getMaxX();\n        this._miny = other.getMinY();\n        this._maxy = other.getMaxY();\n      } else {\n        if (other._minx < this._minx) {\n          this._minx = other._minx;\n        }\n        if (other._maxx > this._maxx) {\n          this._maxx = other._maxx;\n        }\n        if (other._miny < this._miny) {\n          this._miny = other._miny;\n        }\n        if (other._maxy > this._maxy) {\n          this._maxy = other._maxy;\n        }\n      }\n    }\n  } else if (arguments.length === 2) {\n    var x = arguments[0];\n    var y = arguments[1];\n    if (this.isNull()) {\n      this._minx = x;\n      this._maxx = x;\n      this._miny = y;\n      this._maxy = y;\n    } else {\n      if (x < this._minx) {\n        this._minx = x;\n      }\n      if (x > this._maxx) {\n        this._maxx = x;\n      }\n      if (y < this._miny) {\n        this._miny = y;\n      }\n      if (y > this._maxy) {\n        this._maxy = y;\n      }\n    }\n  }\n};\nEnvelope.prototype.minExtent = function minExtent () {\n  if (this.isNull()) { return 0.0 }\n  var w = this.getWidth();\n  var h = this.getHeight();\n  if (w < h) { return w }\n  return h\n};\nEnvelope.prototype.getWidth = function getWidth () {\n  if (this.isNull()) {\n    return 0\n  }\n  return this._maxx - this._minx\n};\nEnvelope.prototype.compareTo = function compareTo (o) {\n  var env = o;\n  if (this.isNull()) {\n    if (env.isNull()) { return 0 }\n    return -1\n  } else {\n    if (env.isNull()) { return 1 }\n  }\n  if (this._minx < env._minx) { return -1 }\n  if (this._minx > env._minx) { return 1 }\n  if (this._miny < env._miny) { return -1 }\n  if (this._miny > env._miny) { return 1 }\n  if (this._maxx < env._maxx) { return -1 }\n  if (this._maxx > env._maxx) { return 1 }\n  if (this._maxy < env._maxy) { return -1 }\n  if (this._maxy > env._maxy) { return 1 }\n  return 0\n};\nEnvelope.prototype.translate = function translate (transX, transY) {\n  if (this.isNull()) {\n    return null\n  }\n  this.init(this.getMinX() + transX, this.getMaxX() + transX, this.getMinY() + transY, this.getMaxY() + transY);\n};\nEnvelope.prototype.toString = function toString () {\n  return 'Env[' + this._minx + ' : ' + this._maxx + ', ' + this._miny + ' : ' + this._maxy + ']'\n};\nEnvelope.prototype.setToNull = function setToNull () {\n  this._minx = 0;\n  this._maxx = -1;\n  this._miny = 0;\n  this._maxy = -1;\n};\nEnvelope.prototype.getHeight = function getHeight () {\n  if (this.isNull()) {\n    return 0\n  }\n  return this._maxy - this._miny\n};\nEnvelope.prototype.maxExtent = function maxExtent () {\n  if (this.isNull()) { return 0.0 }\n  var w = this.getWidth();\n  var h = this.getHeight();\n  if (w > h) { return w }\n  return h\n};\nEnvelope.prototype.expandBy = function expandBy () {\n  if (arguments.length === 1) {\n    var distance = arguments[0];\n    this.expandBy(distance, distance);\n  } else if (arguments.length === 2) {\n    var deltaX = arguments[0];\n    var deltaY = arguments[1];\n    if (this.isNull()) { return null }\n    this._minx -= deltaX;\n    this._maxx += deltaX;\n    this._miny -= deltaY;\n    this._maxy += deltaY;\n    if (this._minx > this._maxx || this._miny > this._maxy) { this.setToNull(); }\n  }\n};\nEnvelope.prototype.contains = function contains () {\n  if (arguments.length === 1) {\n    if (arguments[0] instanceof Envelope) {\n      var other = arguments[0];\n      return this.covers(other)\n    } else if (arguments[0] instanceof Coordinate) {\n      var p = arguments[0];\n      return this.covers(p)\n    }\n  } else if (arguments.length === 2) {\n    var x = arguments[0];\n    var y = arguments[1];\n    return this.covers(x, y)\n  }\n};\nEnvelope.prototype.centre = function centre () {\n  if (this.isNull()) { return null }\n  return new Coordinate((this.getMinX() + this.getMaxX()) / 2.0, (this.getMinY() + this.getMaxY()) / 2.0)\n};\nEnvelope.prototype.init = function init () {\n  if (arguments.length === 0) {\n    this.setToNull();\n  } else if (arguments.length === 1) {\n    if (arguments[0] instanceof Coordinate) {\n      var p = arguments[0];\n      this.init(p.x, p.x, p.y, p.y);\n    } else if (arguments[0] instanceof Envelope) {\n      var env = arguments[0];\n      this._minx = env._minx;\n      this._maxx = env._maxx;\n      this._miny = env._miny;\n      this._maxy = env._maxy;\n    }\n  } else if (arguments.length === 2) {\n    var p1 = arguments[0];\n    var p2 = arguments[1];\n    this.init(p1.x, p2.x, p1.y, p2.y);\n  } else if (arguments.length === 4) {\n    var x1 = arguments[0];\n    var x2 = arguments[1];\n    var y1 = arguments[2];\n    var y2 = arguments[3];\n    if (x1 < x2) {\n      this._minx = x1;\n      this._maxx = x2;\n    } else {\n      this._minx = x2;\n      this._maxx = x1;\n    }\n    if (y1 < y2) {\n      this._miny = y1;\n      this._maxy = y2;\n    } else {\n      this._miny = y2;\n      this._maxy = y1;\n    }\n  }\n};\nEnvelope.prototype.getMaxY = function getMaxY () {\n  return this._maxy\n};\nEnvelope.prototype.distance = function distance (env) {\n  if (this.intersects(env)) { return 0 }\n  var dx = 0.0;\n  if (this._maxx < env._minx) { dx = env._minx - this._maxx; } else if (this._minx > env._maxx) { dx = this._minx - env._maxx; }\n  var dy = 0.0;\n  if (this._maxy < env._miny) { dy = env._miny - this._maxy; } else if (this._miny > env._maxy) { dy = this._miny - env._maxy; }\n  if (dx === 0.0) { return dy }\n  if (dy === 0.0) { return dx }\n  return Math.sqrt(dx * dx + dy * dy)\n};\nEnvelope.prototype.hashCode = function hashCode () {\n  var result = 17;\n  result = 37 * result + Coordinate.hashCode(this._minx);\n  result = 37 * result + Coordinate.hashCode(this._maxx);\n  result = 37 * result + Coordinate.hashCode(this._miny);\n  result = 37 * result + Coordinate.hashCode(this._maxy);\n  return result\n};\nEnvelope.prototype.interfaces_ = function interfaces_ () {\n  return [Comparable, Serializable]\n};\nEnvelope.prototype.getClass = function getClass () {\n  return Envelope\n};\nEnvelope.intersects = function intersects () {\n  if (arguments.length === 3) {\n    var p1 = arguments[0];\n    var p2 = arguments[1];\n    var q = arguments[2];\n    if (q.x >= (p1.x < p2.x ? p1.x : p2.x) && q.x <= (p1.x > p2.x ? p1.x : p2.x) && (q.y >= (p1.y < p2.y ? p1.y : p2.y) && q.y <= (p1.y > p2.y ? p1.y : p2.y))) {\n      return true\n    }\n    return false\n  } else if (arguments.length === 4) {\n    var p1$1 = arguments[0];\n    var p2$1 = arguments[1];\n    var q1 = arguments[2];\n    var q2 = arguments[3];\n    var minq = Math.min(q1.x, q2.x);\n    var maxq = Math.max(q1.x, q2.x);\n    var minp = Math.min(p1$1.x, p2$1.x);\n    var maxp = Math.max(p1$1.x, p2$1.x);\n    if (minp > maxq) { return false }\n    if (maxp < minq) { return false }\n    minq = Math.min(q1.y, q2.y);\n    maxq = Math.max(q1.y, q2.y);\n    minp = Math.min(p1$1.y, p2$1.y);\n    maxp = Math.max(p1$1.y, p2$1.y);\n    if (minp > maxq) { return false }\n    if (maxp < minq) { return false }\n    return true\n  }\n};\nstaticAccessors$9.serialVersionUID.get = function () { return 5873921885273102420 };\n\nObject.defineProperties( Envelope, staticAccessors$9 );\n\nvar regExes = {\n  'typeStr': /^\\s*(\\w+)\\s*\\(\\s*(.*)\\s*\\)\\s*$/,\n  'emptyTypeStr': /^\\s*(\\w+)\\s*EMPTY\\s*$/,\n  'spaces': /\\s+/,\n  'parenComma': /\\)\\s*,\\s*\\(/,\n  'doubleParenComma': /\\)\\s*\\)\\s*,\\s*\\(\\s*\\(/, // can't use {2} here\n  'trimParens': /^\\s*\\(?(.*?)\\)?\\s*$/\n};\n\n/**\n * Class for reading and writing Well-Known Text.\n *\n * NOTE: Adapted from OpenLayers 2.11 implementation.\n */\n\n/** Create a new parser for WKT\n *\n * @param {GeometryFactory} geometryFactory\n * @return An instance of WKTParser.\n * @constructor\n * @private\n */\nvar WKTParser = function WKTParser (geometryFactory) {\n  this.geometryFactory = geometryFactory || new GeometryFactory();\n};\n/**\n * Deserialize a WKT string and return a geometry. Supports WKT for POINT,\n * MULTIPOINT, LINESTRING, LINEARRING, MULTILINESTRING, POLYGON, MULTIPOLYGON,\n * and GEOMETRYCOLLECTION.\n *\n * @param {String} wkt A WKT string.\n * @return {Geometry} A geometry instance.\n * @private\n */\nWKTParser.prototype.read = function read (wkt) {\n  var geometry, type, str;\n  wkt = wkt.replace(/[\\n\\r]/g, ' ');\n  var matches = regExes.typeStr.exec(wkt);\n  if (wkt.search('EMPTY') !== -1) {\n    matches = regExes.emptyTypeStr.exec(wkt);\n    matches[2] = undefined;\n  }\n  if (matches) {\n    type = matches[1].toLowerCase();\n    str = matches[2];\n    if (parse$1[type]) {\n      geometry = parse$1[type].apply(this, [str]);\n    }\n  }\n\n  if (geometry === undefined) { throw new Error('Could not parse WKT ' + wkt) }\n\n  return geometry\n};\n\n/**\n * Serialize a geometry into a WKT string.\n *\n * @param {Geometry} geometry A feature or array of features.\n * @return {String} The WKT string representation of the input geometries.\n * @private\n */\nWKTParser.prototype.write = function write (geometry) {\n  return this.extractGeometry(geometry)\n};\n\n/**\n * Entry point to construct the WKT for a single Geometry object.\n *\n * @param {Geometry} geometry\n * @return {String} A WKT string of representing the geometry.\n * @private\n */\nWKTParser.prototype.extractGeometry = function extractGeometry (geometry) {\n  var type = geometry.getGeometryType().toLowerCase();\n  if (!extract$1[type]) {\n    return null\n  }\n  var wktType = type.toUpperCase();\n  var data;\n  if (geometry.isEmpty()) {\n    data = wktType + ' EMPTY';\n  } else {\n    data = wktType + '(' + extract$1[type].apply(this, [geometry]) + ')';\n  }\n  return data\n};\n\n/**\n * Object with properties corresponding to the geometry types. Property values\n * are functions that do the actual data extraction.\n * @private\n */\nvar extract$1 = {\n  coordinate: function coordinate (coordinate$1) {\n    return coordinate$1.x + ' ' + coordinate$1.y\n  },\n\n  /**\n   * Return a space delimited string of point coordinates.\n   *\n   * @param {Point}\n   *          point\n   * @return {String} A string of coordinates representing the point.\n   */\n  point: function point (point$1) {\n    return extract$1.coordinate.call(this, point$1._coordinates._coordinates[0])\n  },\n\n  /**\n   * Return a comma delimited string of point coordinates from a multipoint.\n   *\n   * @param {MultiPoint}\n   *          multipoint\n   * @return {String} A string of point coordinate strings representing the\n   *         multipoint.\n   */\n  multipoint: function multipoint (multipoint$1) {\n    var this$1 = this;\n\n    var array = [];\n    for (var i = 0, len = multipoint$1._geometries.length; i < len; ++i) {\n      array.push('(' + extract$1.point.apply(this$1, [multipoint$1._geometries[i]]) + ')');\n    }\n    return array.join(',')\n  },\n\n  /**\n   * Return a comma delimited string of point coordinates from a line.\n   *\n   * @param {LineString} linestring\n   * @return {String} A string of point coordinate strings representing the linestring.\n   */\n  linestring: function linestring (linestring$1) {\n    var this$1 = this;\n\n    var array = [];\n    for (var i = 0, len = linestring$1._points._coordinates.length; i < len; ++i) {\n      array.push(extract$1.coordinate.apply(this$1, [linestring$1._points._coordinates[i]]));\n    }\n    return array.join(',')\n  },\n\n  linearring: function linearring (linearring$1) {\n    var this$1 = this;\n\n    var array = [];\n    for (var i = 0, len = linearring$1._points._coordinates.length; i < len; ++i) {\n      array.push(extract$1.coordinate.apply(this$1, [linearring$1._points._coordinates[i]]));\n    }\n    return array.join(',')\n  },\n\n  /**\n   * Return a comma delimited string of linestring strings from a\n   * multilinestring.\n   *\n   * @param {MultiLineString} multilinestring\n   * @return {String} A string of of linestring strings representing the multilinestring.\n   */\n  multilinestring: function multilinestring (multilinestring$1) {\n    var this$1 = this;\n\n    var array = [];\n    for (var i = 0, len = multilinestring$1._geometries.length; i < len; ++i) {\n      array.push('(' +\n        extract$1.linestring.apply(this$1, [multilinestring$1._geometries[i]]) +\n        ')');\n    }\n    return array.join(',')\n  },\n\n  /**\n   * Return a comma delimited string of linear ring arrays from a polygon.\n   *\n   * @param {Polygon} polygon\n   * @return {String} An array of linear ring arrays representing the polygon.\n   */\n  polygon: function polygon (polygon$1) {\n    var this$1 = this;\n\n    var array = [];\n    array.push('(' + extract$1.linestring.apply(this, [polygon$1._shell]) + ')');\n    for (var i = 0, len = polygon$1._holes.length; i < len; ++i) {\n      array.push('(' + extract$1.linestring.apply(this$1, [polygon$1._holes[i]]) + ')');\n    }\n    return array.join(',')\n  },\n\n  /**\n   * Return an array of polygon arrays from a multipolygon.\n   *\n   * @param {MultiPolygon} multipolygon\n   * @return {String} An array of polygon arrays representing the multipolygon.\n   */\n  multipolygon: function multipolygon (multipolygon$1) {\n    var this$1 = this;\n\n    var array = [];\n    for (var i = 0, len = multipolygon$1._geometries.length; i < len; ++i) {\n      array.push('(' + extract$1.polygon.apply(this$1, [multipolygon$1._geometries[i]]) + ')');\n    }\n    return array.join(',')\n  },\n\n  /**\n   * Return the WKT portion between 'GEOMETRYCOLLECTION(' and ')' for an\n   * geometrycollection.\n   *\n   * @param {GeometryCollection} collection\n   * @return {String} internal WKT representation of the collection.\n   */\n  geometrycollection: function geometrycollection (collection) {\n    var this$1 = this;\n\n    var array = [];\n    for (var i = 0, len = collection._geometries.length; i < len; ++i) {\n      array.push(this$1.extractGeometry(collection._geometries[i]));\n    }\n    return array.join(',')\n  }\n};\n\n/**\n * Object with properties corresponding to the geometry types. Property values\n * are functions that do the actual parsing.\n * @private\n */\nvar parse$1 = {\n  /**\n   * Return point geometry given a point WKT fragment.\n   *\n   * @param {String} str A WKT fragment representing the point.\n   * @return {Point} A point geometry.\n   * @private\n   */\n  point: function point (str) {\n    if (str === undefined) {\n      return this.geometryFactory.createPoint()\n    }\n\n    var coords = str.trim().split(regExes.spaces);\n    return this.geometryFactory.createPoint(new Coordinate(Number.parseFloat(coords[0]),\n      Number.parseFloat(coords[1])))\n  },\n\n  /**\n   * Return a multipoint geometry given a multipoint WKT fragment.\n   *\n   * @param {String} str A WKT fragment representing the multipoint.\n   * @return {Point} A multipoint feature.\n   * @private\n   */\n  multipoint: function multipoint (str) {\n    var this$1 = this;\n\n    if (str === undefined) {\n      return this.geometryFactory.createMultiPoint()\n    }\n\n    var point;\n    var points = str.trim().split(',');\n    var components = [];\n    for (var i = 0, len = points.length; i < len; ++i) {\n      point = points[i].replace(regExes.trimParens, '$1');\n      components.push(parse$1.point.apply(this$1, [point]));\n    }\n    return this.geometryFactory.createMultiPoint(components)\n  },\n\n  /**\n   * Return a linestring geometry given a linestring WKT fragment.\n   *\n   * @param {String} str A WKT fragment representing the linestring.\n   * @return {LineString} A linestring geometry.\n   * @private\n   */\n  linestring: function linestring (str) {\n    if (str === undefined) {\n      return this.geometryFactory.createLineString()\n    }\n\n    var points = str.trim().split(',');\n    var components = [];\n    var coords;\n    for (var i = 0, len = points.length; i < len; ++i) {\n      coords = points[i].trim().split(regExes.spaces);\n      components.push(new Coordinate(Number.parseFloat(coords[0]), Number.parseFloat(coords[1])));\n    }\n    return this.geometryFactory.createLineString(components)\n  },\n\n  /**\n   * Return a linearring geometry given a linearring WKT fragment.\n   *\n   * @param {String} str A WKT fragment representing the linearring.\n   * @return {LinearRing} A linearring geometry.\n   * @private\n   */\n  linearring: function linearring (str) {\n    if (str === undefined) {\n      return this.geometryFactory.createLinearRing()\n    }\n\n    var points = str.trim().split(',');\n    var components = [];\n    var coords;\n    for (var i = 0, len = points.length; i < len; ++i) {\n      coords = points[i].trim().split(regExes.spaces);\n      components.push(new Coordinate(Number.parseFloat(coords[0]), Number.parseFloat(coords[1])));\n    }\n    return this.geometryFactory.createLinearRing(components)\n  },\n\n  /**\n   * Return a multilinestring geometry given a multilinestring WKT fragment.\n   *\n   * @param {String} str A WKT fragment representing the multilinestring.\n   * @return {MultiLineString} A multilinestring geometry.\n   * @private\n   */\n  multilinestring: function multilinestring (str) {\n    var this$1 = this;\n\n    if (str === undefined) {\n      return this.geometryFactory.createMultiLineString()\n    }\n\n    var line;\n    var lines = str.trim().split(regExes.parenComma);\n    var components = [];\n    for (var i = 0, len = lines.length; i < len; ++i) {\n      line = lines[i].replace(regExes.trimParens, '$1');\n      components.push(parse$1.linestring.apply(this$1, [line]));\n    }\n    return this.geometryFactory.createMultiLineString(components)\n  },\n\n  /**\n   * Return a polygon geometry given a polygon WKT fragment.\n   *\n   * @param {String} str A WKT fragment representing the polygon.\n   * @return {Polygon} A polygon geometry.\n   * @private\n   */\n  polygon: function polygon (str) {\n    var this$1 = this;\n\n    if (str === undefined) {\n      return this.geometryFactory.createPolygon()\n    }\n\n    var ring, linestring, linearring;\n    var rings = str.trim().split(regExes.parenComma);\n    var shell;\n    var holes = [];\n    for (var i = 0, len = rings.length; i < len; ++i) {\n      ring = rings[i].replace(regExes.trimParens, '$1');\n      linestring = parse$1.linestring.apply(this$1, [ring]);\n      linearring = this$1.geometryFactory.createLinearRing(linestring._points);\n      if (i === 0) {\n        shell = linearring;\n      } else {\n        holes.push(linearring);\n      }\n    }\n    return this.geometryFactory.createPolygon(shell, holes)\n  },\n\n  /**\n   * Return a multipolygon geometry given a multipolygon WKT fragment.\n   *\n   * @param {String} str A WKT fragment representing the multipolygon.\n   * @return {MultiPolygon} A multipolygon geometry.\n   * @private\n   */\n  multipolygon: function multipolygon (str) {\n    var this$1 = this;\n\n    if (str === undefined) {\n      return this.geometryFactory.createMultiPolygon()\n    }\n\n    var polygon;\n    var polygons = str.trim().split(regExes.doubleParenComma);\n    var components = [];\n    for (var i = 0, len = polygons.length; i < len; ++i) {\n      polygon = polygons[i].replace(regExes.trimParens, '$1');\n      components.push(parse$1.polygon.apply(this$1, [polygon]));\n    }\n    return this.geometryFactory.createMultiPolygon(components)\n  },\n\n  /**\n   * Return a geometrycollection given a geometrycollection WKT fragment.\n   *\n   * @param {String} str A WKT fragment representing the geometrycollection.\n   * @return {GeometryCollection}\n   * @private\n   */\n  geometrycollection: function geometrycollection (str) {\n    var this$1 = this;\n\n    if (str === undefined) {\n      return this.geometryFactory.createGeometryCollection()\n    }\n\n    // separate components of the collection with |\n    str = str.replace(/,\\s*([A-Za-z])/g, '|$1');\n    var wktArray = str.trim().split('|');\n    var components = [];\n    for (var i = 0, len = wktArray.length; i < len; ++i) {\n      components.push(this$1.read(wktArray[i]));\n    }\n    return this.geometryFactory.createGeometryCollection(components)\n  }\n};\n\n/**\n * Writes the Well-Known Text representation of a {@link Geometry}. The\n * Well-Known Text format is defined in the <A\n * HREF=\"http://www.opengis.org/techno/specs.htm\"> OGC Simple Features\n * Specification for SQL</A>.\n * <p>\n * The <code>WKTWriter</code> outputs coordinates rounded to the precision\n * model. Only the maximum number of decimal places necessary to represent the\n * ordinates to the required precision will be output.\n * <p>\n * The SFS WKT spec does not define a special tag for {@link LinearRing}s.\n * Under the spec, rings are output as <code>LINESTRING</code>s.\n */\n\n/**\n * @param {GeometryFactory} geometryFactory\n * @constructor\n */\nvar WKTWriter = function WKTWriter (geometryFactory) {\n  this.parser = new WKTParser(geometryFactory);\n};\n\n/**\n * Converts a <code>Geometry</code> to its Well-known Text representation.\n *\n * @param {Geometry} geometry a <code>Geometry</code> to process.\n * @return {string} a <Geometry Tagged Text> string (see the OpenGIS Simple\n *       Features Specification).\n * @memberof WKTWriter\n */\nWKTWriter.prototype.write = function write (geometry) {\n  return this.parser.write(geometry)\n};\n/**\n * Generates the WKT for a <tt>LINESTRING</tt> specified by two\n * {@link Coordinate}s.\n *\n * @param p0 the first coordinate.\n * @param p1 the second coordinate.\n *\n * @return the WKT.\n * @private\n */\nWKTWriter.toLineString = function toLineString (p0, p1) {\n  if (arguments.length !== 2) {\n    throw new Error('Not implemented')\n  }\n  return 'LINESTRING ( ' + p0.x + ' ' + p0.y + ', ' + p1.x + ' ' + p1.y + ' )'\n};\n\nvar RuntimeException = (function (Error) {\n  function RuntimeException (message) {\n    Error.call(this, message);\n    this.name = 'RuntimeException';\n    this.message = message;\n    this.stack = (new Error()).stack;\n  }\n\n  if ( Error ) RuntimeException.__proto__ = Error;\n  RuntimeException.prototype = Object.create( Error && Error.prototype );\n  RuntimeException.prototype.constructor = RuntimeException;\n\n  return RuntimeException;\n}(Error));\n\nvar AssertionFailedException = (function (RuntimeException$$1) {\n  function AssertionFailedException () {\n    RuntimeException$$1.call(this);\n    if (arguments.length === 0) {\n      RuntimeException$$1.call(this);\n    } else if (arguments.length === 1) {\n      var message = arguments[0];\n      RuntimeException$$1.call(this, message);\n    }\n  }\n\n  if ( RuntimeException$$1 ) AssertionFailedException.__proto__ = RuntimeException$$1;\n  AssertionFailedException.prototype = Object.create( RuntimeException$$1 && RuntimeException$$1.prototype );\n  AssertionFailedException.prototype.constructor = AssertionFailedException;\n  AssertionFailedException.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  AssertionFailedException.prototype.getClass = function getClass () {\n    return AssertionFailedException\n  };\n\n  return AssertionFailedException;\n}(RuntimeException));\n\nvar Assert = function Assert () {};\n\nAssert.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nAssert.prototype.getClass = function getClass () {\n  return Assert\n};\nAssert.shouldNeverReachHere = function shouldNeverReachHere () {\n  if (arguments.length === 0) {\n    Assert.shouldNeverReachHere(null);\n  } else if (arguments.length === 1) {\n    var message = arguments[0];\n    throw new AssertionFailedException('Should never reach here' + (message !== null ? ': ' + message : ''))\n  }\n};\nAssert.isTrue = function isTrue () {\n  var assertion;\n  var message;\n  if (arguments.length === 1) {\n    assertion = arguments[0];\n    Assert.isTrue(assertion, null);\n  } else if (arguments.length === 2) {\n    assertion = arguments[0];\n    message = arguments[1];\n    if (!assertion) {\n      if (message === null) {\n        throw new AssertionFailedException()\n      } else {\n        throw new AssertionFailedException(message)\n      }\n    }\n  }\n};\nAssert.equals = function equals () {\n  var expectedValue;\n  var actualValue;\n  var message;\n  if (arguments.length === 2) {\n    expectedValue = arguments[0];\n    actualValue = arguments[1];\n    Assert.equals(expectedValue, actualValue, null);\n  } else if (arguments.length === 3) {\n    expectedValue = arguments[0];\n    actualValue = arguments[1];\n    message = arguments[2];\n    if (!actualValue.equals(expectedValue)) {\n      throw new AssertionFailedException('Expected ' + expectedValue + ' but encountered ' + actualValue + (message !== null ? ': ' + message : ''))\n    }\n  }\n};\n\nvar LineIntersector = function LineIntersector () {\n  this._result = null;\n  this._inputLines = Array(2).fill().map(function () { return Array(2); });\n  this._intPt = new Array(2).fill(null);\n  this._intLineIndex = null;\n  this._isProper = null;\n  this._pa = null;\n  this._pb = null;\n  this._precisionModel = null;\n  this._intPt[0] = new Coordinate();\n  this._intPt[1] = new Coordinate();\n  this._pa = this._intPt[0];\n  this._pb = this._intPt[1];\n  this._result = 0;\n};\n\nvar staticAccessors$10 = { DONT_INTERSECT: { configurable: true },DO_INTERSECT: { configurable: true },COLLINEAR: { configurable: true },NO_INTERSECTION: { configurable: true },POINT_INTERSECTION: { configurable: true },COLLINEAR_INTERSECTION: { configurable: true } };\nLineIntersector.prototype.getIndexAlongSegment = function getIndexAlongSegment (segmentIndex, intIndex) {\n  this.computeIntLineIndex();\n  return this._intLineIndex[segmentIndex][intIndex]\n};\nLineIntersector.prototype.getTopologySummary = function getTopologySummary () {\n  var catBuf = new StringBuffer();\n  if (this.isEndPoint()) { catBuf.append(' endpoint'); }\n  if (this._isProper) { catBuf.append(' proper'); }\n  if (this.isCollinear()) { catBuf.append(' collinear'); }\n  return catBuf.toString()\n};\nLineIntersector.prototype.computeIntersection = function computeIntersection (p1, p2, p3, p4) {\n  this._inputLines[0][0] = p1;\n  this._inputLines[0][1] = p2;\n  this._inputLines[1][0] = p3;\n  this._inputLines[1][1] = p4;\n  this._result = this.computeIntersect(p1, p2, p3, p4);\n};\nLineIntersector.prototype.getIntersectionNum = function getIntersectionNum () {\n  return this._result\n};\nLineIntersector.prototype.computeIntLineIndex = function computeIntLineIndex () {\n  if (arguments.length === 0) {\n    if (this._intLineIndex === null) {\n      this._intLineIndex = Array(2).fill().map(function () { return Array(2); });\n      this.computeIntLineIndex(0);\n      this.computeIntLineIndex(1);\n    }\n  } else if (arguments.length === 1) {\n    var segmentIndex = arguments[0];\n    var dist0 = this.getEdgeDistance(segmentIndex, 0);\n    var dist1 = this.getEdgeDistance(segmentIndex, 1);\n    if (dist0 > dist1) {\n      this._intLineIndex[segmentIndex][0] = 0;\n      this._intLineIndex[segmentIndex][1] = 1;\n    } else {\n      this._intLineIndex[segmentIndex][0] = 1;\n      this._intLineIndex[segmentIndex][1] = 0;\n    }\n  }\n};\nLineIntersector.prototype.isProper = function isProper () {\n  return this.hasIntersection() && this._isProper\n};\nLineIntersector.prototype.setPrecisionModel = function setPrecisionModel (precisionModel) {\n  this._precisionModel = precisionModel;\n};\nLineIntersector.prototype.isInteriorIntersection = function isInteriorIntersection () {\n    var this$1 = this;\n\n  if (arguments.length === 0) {\n    if (this.isInteriorIntersection(0)) { return true }\n    if (this.isInteriorIntersection(1)) { return true }\n    return false\n  } else if (arguments.length === 1) {\n    var inputLineIndex = arguments[0];\n    for (var i = 0; i < this._result; i++) {\n      if (!(this$1._intPt[i].equals2D(this$1._inputLines[inputLineIndex][0]) || this$1._intPt[i].equals2D(this$1._inputLines[inputLineIndex][1]))) {\n        return true\n      }\n    }\n    return false\n  }\n};\nLineIntersector.prototype.getIntersection = function getIntersection (intIndex) {\n  return this._intPt[intIndex]\n};\nLineIntersector.prototype.isEndPoint = function isEndPoint () {\n  return this.hasIntersection() && !this._isProper\n};\nLineIntersector.prototype.hasIntersection = function hasIntersection () {\n  return this._result !== LineIntersector.NO_INTERSECTION\n};\nLineIntersector.prototype.getEdgeDistance = function getEdgeDistance (segmentIndex, intIndex) {\n  var dist = LineIntersector.computeEdgeDistance(this._intPt[intIndex], this._inputLines[segmentIndex][0], this._inputLines[segmentIndex][1]);\n  return dist\n};\nLineIntersector.prototype.isCollinear = function isCollinear () {\n  return this._result === LineIntersector.COLLINEAR_INTERSECTION\n};\nLineIntersector.prototype.toString = function toString () {\n  return WKTWriter.toLineString(this._inputLines[0][0], this._inputLines[0][1]) + ' - ' + WKTWriter.toLineString(this._inputLines[1][0], this._inputLines[1][1]) + this.getTopologySummary()\n};\nLineIntersector.prototype.getEndpoint = function getEndpoint (segmentIndex, ptIndex) {\n  return this._inputLines[segmentIndex][ptIndex]\n};\nLineIntersector.prototype.isIntersection = function isIntersection (pt) {\n    var this$1 = this;\n\n  for (var i = 0; i < this._result; i++) {\n    if (this$1._intPt[i].equals2D(pt)) {\n      return true\n    }\n  }\n  return false\n};\nLineIntersector.prototype.getIntersectionAlongSegment = function getIntersectionAlongSegment (segmentIndex, intIndex) {\n  this.computeIntLineIndex();\n  return this._intPt[this._intLineIndex[segmentIndex][intIndex]]\n};\nLineIntersector.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nLineIntersector.prototype.getClass = function getClass () {\n  return LineIntersector\n};\nLineIntersector.computeEdgeDistance = function computeEdgeDistance (p, p0, p1) {\n  var dx = Math.abs(p1.x - p0.x);\n  var dy = Math.abs(p1.y - p0.y);\n  var dist = -1.0;\n  if (p.equals(p0)) {\n    dist = 0.0;\n  } else if (p.equals(p1)) {\n    if (dx > dy) { dist = dx; } else { dist = dy; }\n  } else {\n    var pdx = Math.abs(p.x - p0.x);\n    var pdy = Math.abs(p.y - p0.y);\n    if (dx > dy) { dist = pdx; } else { dist = pdy; }\n    if (dist === 0.0 && !p.equals(p0)) {\n      dist = Math.max(pdx, pdy);\n    }\n  }\n  Assert.isTrue(!(dist === 0.0 && !p.equals(p0)), 'Bad distance calculation');\n  return dist\n};\nLineIntersector.nonRobustComputeEdgeDistance = function nonRobustComputeEdgeDistance (p, p1, p2) {\n  var dx = p.x - p1.x;\n  var dy = p.y - p1.y;\n  var dist = Math.sqrt(dx * dx + dy * dy);\n  Assert.isTrue(!(dist === 0.0 && !p.equals(p1)), 'Invalid distance calculation');\n  return dist\n};\nstaticAccessors$10.DONT_INTERSECT.get = function () { return 0 };\nstaticAccessors$10.DO_INTERSECT.get = function () { return 1 };\nstaticAccessors$10.COLLINEAR.get = function () { return 2 };\nstaticAccessors$10.NO_INTERSECTION.get = function () { return 0 };\nstaticAccessors$10.POINT_INTERSECTION.get = function () { return 1 };\nstaticAccessors$10.COLLINEAR_INTERSECTION.get = function () { return 2 };\n\nObject.defineProperties( LineIntersector, staticAccessors$10 );\n\nvar RobustLineIntersector = (function (LineIntersector$$1) {\n  function RobustLineIntersector () {\n    LineIntersector$$1.apply(this, arguments);\n  }\n\n  if ( LineIntersector$$1 ) RobustLineIntersector.__proto__ = LineIntersector$$1;\n  RobustLineIntersector.prototype = Object.create( LineIntersector$$1 && LineIntersector$$1.prototype );\n  RobustLineIntersector.prototype.constructor = RobustLineIntersector;\n\n  RobustLineIntersector.prototype.isInSegmentEnvelopes = function isInSegmentEnvelopes (intPt) {\n    var env0 = new Envelope(this._inputLines[0][0], this._inputLines[0][1]);\n    var env1 = new Envelope(this._inputLines[1][0], this._inputLines[1][1]);\n    return env0.contains(intPt) && env1.contains(intPt)\n  };\n  RobustLineIntersector.prototype.computeIntersection = function computeIntersection () {\n    if (arguments.length === 3) {\n      var p = arguments[0];\n      var p1 = arguments[1];\n      var p2 = arguments[2];\n      this._isProper = false;\n      if (Envelope.intersects(p1, p2, p)) {\n        if (CGAlgorithms.orientationIndex(p1, p2, p) === 0 && CGAlgorithms.orientationIndex(p2, p1, p) === 0) {\n          this._isProper = true;\n          if (p.equals(p1) || p.equals(p2)) {\n            this._isProper = false;\n          }\n          this._result = LineIntersector$$1.POINT_INTERSECTION;\n          return null\n        }\n      }\n      this._result = LineIntersector$$1.NO_INTERSECTION;\n    } else { return LineIntersector$$1.prototype.computeIntersection.apply(this, arguments) }\n  };\n  RobustLineIntersector.prototype.normalizeToMinimum = function normalizeToMinimum (n1, n2, n3, n4, normPt) {\n    normPt.x = this.smallestInAbsValue(n1.x, n2.x, n3.x, n4.x);\n    normPt.y = this.smallestInAbsValue(n1.y, n2.y, n3.y, n4.y);\n    n1.x -= normPt.x;\n    n1.y -= normPt.y;\n    n2.x -= normPt.x;\n    n2.y -= normPt.y;\n    n3.x -= normPt.x;\n    n3.y -= normPt.y;\n    n4.x -= normPt.x;\n    n4.y -= normPt.y;\n  };\n  RobustLineIntersector.prototype.safeHCoordinateIntersection = function safeHCoordinateIntersection (p1, p2, q1, q2) {\n    var intPt = null;\n    try {\n      intPt = HCoordinate.intersection(p1, p2, q1, q2);\n    } catch (e) {\n      if (e instanceof NotRepresentableException) {\n        intPt = RobustLineIntersector.nearestEndpoint(p1, p2, q1, q2);\n      } else { throw e }\n    } finally {}\n    return intPt\n  };\n  RobustLineIntersector.prototype.intersection = function intersection (p1, p2, q1, q2) {\n    var intPt = this.intersectionWithNormalization(p1, p2, q1, q2);\n    if (!this.isInSegmentEnvelopes(intPt)) {\n      intPt = new Coordinate(RobustLineIntersector.nearestEndpoint(p1, p2, q1, q2));\n    }\n    if (this._precisionModel !== null) {\n      this._precisionModel.makePrecise(intPt);\n    }\n    return intPt\n  };\n  RobustLineIntersector.prototype.smallestInAbsValue = function smallestInAbsValue (x1, x2, x3, x4) {\n    var x = x1;\n    var xabs = Math.abs(x);\n    if (Math.abs(x2) < xabs) {\n      x = x2;\n      xabs = Math.abs(x2);\n    }\n    if (Math.abs(x3) < xabs) {\n      x = x3;\n      xabs = Math.abs(x3);\n    }\n    if (Math.abs(x4) < xabs) {\n      x = x4;\n    }\n    return x\n  };\n  RobustLineIntersector.prototype.checkDD = function checkDD (p1, p2, q1, q2, intPt) {\n    var intPtDD = CGAlgorithmsDD.intersection(p1, p2, q1, q2);\n    var isIn = this.isInSegmentEnvelopes(intPtDD);\n    System.out.println('DD in env = ' + isIn + '  --------------------- ' + intPtDD);\n    if (intPt.distance(intPtDD) > 0.0001) {\n      System.out.println('Distance = ' + intPt.distance(intPtDD));\n    }\n  };\n  RobustLineIntersector.prototype.intersectionWithNormalization = function intersectionWithNormalization (p1, p2, q1, q2) {\n    var n1 = new Coordinate(p1);\n    var n2 = new Coordinate(p2);\n    var n3 = new Coordinate(q1);\n    var n4 = new Coordinate(q2);\n    var normPt = new Coordinate();\n    this.normalizeToEnvCentre(n1, n2, n3, n4, normPt);\n    var intPt = this.safeHCoordinateIntersection(n1, n2, n3, n4);\n    intPt.x += normPt.x;\n    intPt.y += normPt.y;\n    return intPt\n  };\n  RobustLineIntersector.prototype.computeCollinearIntersection = function computeCollinearIntersection (p1, p2, q1, q2) {\n    var p1q1p2 = Envelope.intersects(p1, p2, q1);\n    var p1q2p2 = Envelope.intersects(p1, p2, q2);\n    var q1p1q2 = Envelope.intersects(q1, q2, p1);\n    var q1p2q2 = Envelope.intersects(q1, q2, p2);\n    if (p1q1p2 && p1q2p2) {\n      this._intPt[0] = q1;\n      this._intPt[1] = q2;\n      return LineIntersector$$1.COLLINEAR_INTERSECTION\n    }\n    if (q1p1q2 && q1p2q2) {\n      this._intPt[0] = p1;\n      this._intPt[1] = p2;\n      return LineIntersector$$1.COLLINEAR_INTERSECTION\n    }\n    if (p1q1p2 && q1p1q2) {\n      this._intPt[0] = q1;\n      this._intPt[1] = p1;\n      return q1.equals(p1) && !p1q2p2 && !q1p2q2 ? LineIntersector$$1.POINT_INTERSECTION : LineIntersector$$1.COLLINEAR_INTERSECTION\n    }\n    if (p1q1p2 && q1p2q2) {\n      this._intPt[0] = q1;\n      this._intPt[1] = p2;\n      return q1.equals(p2) && !p1q2p2 && !q1p1q2 ? LineIntersector$$1.POINT_INTERSECTION : LineIntersector$$1.COLLINEAR_INTERSECTION\n    }\n    if (p1q2p2 && q1p1q2) {\n      this._intPt[0] = q2;\n      this._intPt[1] = p1;\n      return q2.equals(p1) && !p1q1p2 && !q1p2q2 ? LineIntersector$$1.POINT_INTERSECTION : LineIntersector$$1.COLLINEAR_INTERSECTION\n    }\n    if (p1q2p2 && q1p2q2) {\n      this._intPt[0] = q2;\n      this._intPt[1] = p2;\n      return q2.equals(p2) && !p1q1p2 && !q1p1q2 ? LineIntersector$$1.POINT_INTERSECTION : LineIntersector$$1.COLLINEAR_INTERSECTION\n    }\n    return LineIntersector$$1.NO_INTERSECTION\n  };\n  RobustLineIntersector.prototype.normalizeToEnvCentre = function normalizeToEnvCentre (n00, n01, n10, n11, normPt) {\n    var minX0 = n00.x < n01.x ? n00.x : n01.x;\n    var minY0 = n00.y < n01.y ? n00.y : n01.y;\n    var maxX0 = n00.x > n01.x ? n00.x : n01.x;\n    var maxY0 = n00.y > n01.y ? n00.y : n01.y;\n    var minX1 = n10.x < n11.x ? n10.x : n11.x;\n    var minY1 = n10.y < n11.y ? n10.y : n11.y;\n    var maxX1 = n10.x > n11.x ? n10.x : n11.x;\n    var maxY1 = n10.y > n11.y ? n10.y : n11.y;\n    var intMinX = minX0 > minX1 ? minX0 : minX1;\n    var intMaxX = maxX0 < maxX1 ? maxX0 : maxX1;\n    var intMinY = minY0 > minY1 ? minY0 : minY1;\n    var intMaxY = maxY0 < maxY1 ? maxY0 : maxY1;\n    var intMidX = (intMinX + intMaxX) / 2.0;\n    var intMidY = (intMinY + intMaxY) / 2.0;\n    normPt.x = intMidX;\n    normPt.y = intMidY;\n    n00.x -= normPt.x;\n    n00.y -= normPt.y;\n    n01.x -= normPt.x;\n    n01.y -= normPt.y;\n    n10.x -= normPt.x;\n    n10.y -= normPt.y;\n    n11.x -= normPt.x;\n    n11.y -= normPt.y;\n  };\n  RobustLineIntersector.prototype.computeIntersect = function computeIntersect (p1, p2, q1, q2) {\n    this._isProper = false;\n    if (!Envelope.intersects(p1, p2, q1, q2)) { return LineIntersector$$1.NO_INTERSECTION }\n    var Pq1 = CGAlgorithms.orientationIndex(p1, p2, q1);\n    var Pq2 = CGAlgorithms.orientationIndex(p1, p2, q2);\n    if ((Pq1 > 0 && Pq2 > 0) || (Pq1 < 0 && Pq2 < 0)) {\n      return LineIntersector$$1.NO_INTERSECTION\n    }\n    var Qp1 = CGAlgorithms.orientationIndex(q1, q2, p1);\n    var Qp2 = CGAlgorithms.orientationIndex(q1, q2, p2);\n    if ((Qp1 > 0 && Qp2 > 0) || (Qp1 < 0 && Qp2 < 0)) {\n      return LineIntersector$$1.NO_INTERSECTION\n    }\n    var collinear = Pq1 === 0 && Pq2 === 0 && Qp1 === 0 && Qp2 === 0;\n    if (collinear) {\n      return this.computeCollinearIntersection(p1, p2, q1, q2)\n    }\n    if (Pq1 === 0 || Pq2 === 0 || Qp1 === 0 || Qp2 === 0) {\n      this._isProper = false;\n      if (p1.equals2D(q1) || p1.equals2D(q2)) {\n        this._intPt[0] = p1;\n      } else if (p2.equals2D(q1) || p2.equals2D(q2)) {\n        this._intPt[0] = p2;\n      } else if (Pq1 === 0) {\n        this._intPt[0] = new Coordinate(q1);\n      } else if (Pq2 === 0) {\n        this._intPt[0] = new Coordinate(q2);\n      } else if (Qp1 === 0) {\n        this._intPt[0] = new Coordinate(p1);\n      } else if (Qp2 === 0) {\n        this._intPt[0] = new Coordinate(p2);\n      }\n    } else {\n      this._isProper = true;\n      this._intPt[0] = this.intersection(p1, p2, q1, q2);\n    }\n    return LineIntersector$$1.POINT_INTERSECTION\n  };\n  RobustLineIntersector.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  RobustLineIntersector.prototype.getClass = function getClass () {\n    return RobustLineIntersector\n  };\n  RobustLineIntersector.nearestEndpoint = function nearestEndpoint (p1, p2, q1, q2) {\n    var nearestPt = p1;\n    var minDist = CGAlgorithms.distancePointLine(p1, q1, q2);\n    var dist = CGAlgorithms.distancePointLine(p2, q1, q2);\n    if (dist < minDist) {\n      minDist = dist;\n      nearestPt = p2;\n    }\n    dist = CGAlgorithms.distancePointLine(q1, p1, p2);\n    if (dist < minDist) {\n      minDist = dist;\n      nearestPt = q1;\n    }\n    dist = CGAlgorithms.distancePointLine(q2, p1, p2);\n    if (dist < minDist) {\n      minDist = dist;\n      nearestPt = q2;\n    }\n    return nearestPt\n  };\n\n  return RobustLineIntersector;\n}(LineIntersector));\n\nvar RobustDeterminant = function RobustDeterminant () {};\n\nRobustDeterminant.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nRobustDeterminant.prototype.getClass = function getClass () {\n  return RobustDeterminant\n};\nRobustDeterminant.orientationIndex = function orientationIndex (p1, p2, q) {\n  var dx1 = p2.x - p1.x;\n  var dy1 = p2.y - p1.y;\n  var dx2 = q.x - p2.x;\n  var dy2 = q.y - p2.y;\n  return RobustDeterminant.signOfDet2x2(dx1, dy1, dx2, dy2)\n};\nRobustDeterminant.signOfDet2x2 = function signOfDet2x2 (x1, y1, x2, y2) {\n  var sign = null;\n  var swap = null;\n  var k = null;\n  sign = 1;\n  if (x1 === 0.0 || y2 === 0.0) {\n    if (y1 === 0.0 || x2 === 0.0) {\n      return 0\n    } else if (y1 > 0) {\n      if (x2 > 0) {\n        return -sign\n      } else {\n        return sign\n      }\n    } else {\n      if (x2 > 0) {\n        return sign\n      } else {\n        return -sign\n      }\n    }\n  }\n  if (y1 === 0.0 || x2 === 0.0) {\n    if (y2 > 0) {\n      if (x1 > 0) {\n        return sign\n      } else {\n        return -sign\n      }\n    } else {\n      if (x1 > 0) {\n        return -sign\n      } else {\n        return sign\n      }\n    }\n  }\n  if (y1 > 0.0) {\n    if (y2 > 0.0) {\n      if (y1 <= y2) {\n        \n      } else {\n        sign = -sign;\n        swap = x1;\n        x1 = x2;\n        x2 = swap;\n        swap = y1;\n        y1 = y2;\n        y2 = swap;\n      }\n    } else {\n      if (y1 <= -y2) {\n        sign = -sign;\n        x2 = -x2;\n        y2 = -y2;\n      } else {\n        swap = x1;\n        x1 = -x2;\n        x2 = swap;\n        swap = y1;\n        y1 = -y2;\n        y2 = swap;\n      }\n    }\n  } else {\n    if (y2 > 0.0) {\n      if (-y1 <= y2) {\n        sign = -sign;\n        x1 = -x1;\n        y1 = -y1;\n      } else {\n        swap = -x1;\n        x1 = x2;\n        x2 = swap;\n        swap = -y1;\n        y1 = y2;\n        y2 = swap;\n      }\n    } else {\n      if (y1 >= y2) {\n        x1 = -x1;\n        y1 = -y1;\n        x2 = -x2;\n        y2 = -y2;\n      } else {\n        sign = -sign;\n        swap = -x1;\n        x1 = -x2;\n        x2 = swap;\n        swap = -y1;\n        y1 = -y2;\n        y2 = swap;\n      }\n    }\n  }\n  if (x1 > 0.0) {\n    if (x2 > 0.0) {\n      if (x1 <= x2) {\n        \n      } else {\n        return sign\n      }\n    } else {\n      return sign\n    }\n  } else {\n    if (x2 > 0.0) {\n      return -sign\n    } else {\n      if (x1 >= x2) {\n        sign = -sign;\n        x1 = -x1;\n        x2 = -x2;\n      } else {\n        return -sign\n      }\n    }\n  }\n  while (true) {\n    k = Math.floor(x2 / x1);\n    x2 = x2 - k * x1;\n    y2 = y2 - k * y1;\n    if (y2 < 0.0) {\n      return -sign\n    }\n    if (y2 > y1) {\n      return sign\n    }\n    if (x1 > x2 + x2) {\n      if (y1 < y2 + y2) {\n        return sign\n      }\n    } else {\n      if (y1 > y2 + y2) {\n        return -sign\n      } else {\n        x2 = x1 - x2;\n        y2 = y1 - y2;\n        sign = -sign;\n      }\n    }\n    if (y2 === 0.0) {\n      if (x2 === 0.0) {\n        return 0\n      } else {\n        return -sign\n      }\n    }\n    if (x2 === 0.0) {\n      return sign\n    }\n    k = Math.floor(x1 / x2);\n    x1 = x1 - k * x2;\n    y1 = y1 - k * y2;\n    if (y1 < 0.0) {\n      return sign\n    }\n    if (y1 > y2) {\n      return -sign\n    }\n    if (x2 > x1 + x1) {\n      if (y2 < y1 + y1) {\n        return -sign\n      }\n    } else {\n      if (y2 > y1 + y1) {\n        return sign\n      } else {\n        x1 = x2 - x1;\n        y1 = y2 - y1;\n        sign = -sign;\n      }\n    }\n    if (y1 === 0.0) {\n      if (x1 === 0.0) {\n        return 0\n      } else {\n        return sign\n      }\n    }\n    if (x1 === 0.0) {\n      return -sign\n    }\n  }\n};\n\nvar RayCrossingCounter = function RayCrossingCounter () {\n  this._p = null;\n  this._crossingCount = 0;\n  this._isPointOnSegment = false;\n  var p = arguments[0];\n  this._p = p;\n};\nRayCrossingCounter.prototype.countSegment = function countSegment (p1, p2) {\n  if (p1.x < this._p.x && p2.x < this._p.x) { return null }\n  if (this._p.x === p2.x && this._p.y === p2.y) {\n    this._isPointOnSegment = true;\n    return null\n  }\n  if (p1.y === this._p.y && p2.y === this._p.y) {\n    var minx = p1.x;\n    var maxx = p2.x;\n    if (minx > maxx) {\n      minx = p2.x;\n      maxx = p1.x;\n    }\n    if (this._p.x >= minx && this._p.x <= maxx) {\n      this._isPointOnSegment = true;\n    }\n    return null\n  }\n  if ((p1.y > this._p.y && p2.y <= this._p.y) || (p2.y > this._p.y && p1.y <= this._p.y)) {\n    var x1 = p1.x - this._p.x;\n    var y1 = p1.y - this._p.y;\n    var x2 = p2.x - this._p.x;\n    var y2 = p2.y - this._p.y;\n    var xIntSign = RobustDeterminant.signOfDet2x2(x1, y1, x2, y2);\n    if (xIntSign === 0.0) {\n      this._isPointOnSegment = true;\n      return null\n    }\n    if (y2 < y1) { xIntSign = -xIntSign; }\n    if (xIntSign > 0.0) {\n      this._crossingCount++;\n    }\n  }\n};\nRayCrossingCounter.prototype.isPointInPolygon = function isPointInPolygon () {\n  return this.getLocation() !== Location.EXTERIOR\n};\nRayCrossingCounter.prototype.getLocation = function getLocation () {\n  if (this._isPointOnSegment) { return Location.BOUNDARY }\n  if (this._crossingCount % 2 === 1) {\n    return Location.INTERIOR\n  }\n  return Location.EXTERIOR\n};\nRayCrossingCounter.prototype.isOnSegment = function isOnSegment () {\n  return this._isPointOnSegment\n};\nRayCrossingCounter.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nRayCrossingCounter.prototype.getClass = function getClass () {\n  return RayCrossingCounter\n};\nRayCrossingCounter.locatePointInRing = function locatePointInRing () {\n  if (arguments[0] instanceof Coordinate && hasInterface(arguments[1], CoordinateSequence)) {\n    var p = arguments[0];\n    var ring = arguments[1];\n    var counter = new RayCrossingCounter(p);\n    var p1 = new Coordinate();\n    var p2 = new Coordinate();\n    for (var i = 1; i < ring.size(); i++) {\n      ring.getCoordinate(i, p1);\n      ring.getCoordinate(i - 1, p2);\n      counter.countSegment(p1, p2);\n      if (counter.isOnSegment()) { return counter.getLocation() }\n    }\n    return counter.getLocation()\n  } else if (arguments[0] instanceof Coordinate && arguments[1] instanceof Array) {\n    var p$1 = arguments[0];\n    var ring$1 = arguments[1];\n    var counter$1 = new RayCrossingCounter(p$1);\n    for (var i$1 = 1; i$1 < ring$1.length; i$1++) {\n      var p1$1 = ring$1[i$1];\n      var p2$1 = ring$1[i$1 - 1];\n      counter$1.countSegment(p1$1, p2$1);\n      if (counter$1.isOnSegment()) { return counter$1.getLocation() }\n    }\n    return counter$1.getLocation()\n  }\n};\n\nvar CGAlgorithms = function CGAlgorithms () {};\n\nvar staticAccessors$3 = { CLOCKWISE: { configurable: true },RIGHT: { configurable: true },COUNTERCLOCKWISE: { configurable: true },LEFT: { configurable: true },COLLINEAR: { configurable: true },STRAIGHT: { configurable: true } };\n\nCGAlgorithms.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nCGAlgorithms.prototype.getClass = function getClass () {\n  return CGAlgorithms\n};\nCGAlgorithms.orientationIndex = function orientationIndex (p1, p2, q) {\n  return CGAlgorithmsDD.orientationIndex(p1, p2, q)\n};\nCGAlgorithms.signedArea = function signedArea () {\n  if (arguments[0] instanceof Array) {\n    var ring = arguments[0];\n    if (ring.length < 3) { return 0.0 }\n    var sum = 0.0;\n    var x0 = ring[0].x;\n    for (var i = 1; i < ring.length - 1; i++) {\n      var x = ring[i].x - x0;\n      var y1 = ring[i + 1].y;\n      var y2 = ring[i - 1].y;\n      sum += x * (y2 - y1);\n    }\n    return sum / 2.0\n  } else if (hasInterface(arguments[0], CoordinateSequence)) {\n    var ring$1 = arguments[0];\n    var n = ring$1.size();\n    if (n < 3) { return 0.0 }\n    var p0 = new Coordinate();\n    var p1 = new Coordinate();\n    var p2 = new Coordinate();\n    ring$1.getCoordinate(0, p1);\n    ring$1.getCoordinate(1, p2);\n    var x0$1 = p1.x;\n    p2.x -= x0$1;\n    var sum$1 = 0.0;\n    for (var i$1 = 1; i$1 < n - 1; i$1++) {\n      p0.y = p1.y;\n      p1.x = p2.x;\n      p1.y = p2.y;\n      ring$1.getCoordinate(i$1 + 1, p2);\n      p2.x -= x0$1;\n      sum$1 += p1.x * (p0.y - p2.y);\n    }\n    return sum$1 / 2.0\n  }\n};\nCGAlgorithms.distanceLineLine = function distanceLineLine (A, B, C, D) {\n  if (A.equals(B)) { return CGAlgorithms.distancePointLine(A, C, D) }\n  if (C.equals(D)) { return CGAlgorithms.distancePointLine(D, A, B) }\n  var noIntersection = false;\n  if (!Envelope.intersects(A, B, C, D)) {\n    noIntersection = true;\n  } else {\n    var denom = (B.x - A.x) * (D.y - C.y) - (B.y - A.y) * (D.x - C.x);\n    if (denom === 0) {\n      noIntersection = true;\n    } else {\n      var rNumb = (A.y - C.y) * (D.x - C.x) - (A.x - C.x) * (D.y - C.y);\n      var sNum = (A.y - C.y) * (B.x - A.x) - (A.x - C.x) * (B.y - A.y);\n      var s = sNum / denom;\n      var r = rNumb / denom;\n      if (r < 0 || r > 1 || s < 0 || s > 1) {\n        noIntersection = true;\n      }\n    }\n  }\n  if (noIntersection) {\n    return MathUtil.min(CGAlgorithms.distancePointLine(A, C, D), CGAlgorithms.distancePointLine(B, C, D), CGAlgorithms.distancePointLine(C, A, B), CGAlgorithms.distancePointLine(D, A, B))\n  }\n  return 0.0\n};\nCGAlgorithms.isPointInRing = function isPointInRing (p, ring) {\n  return CGAlgorithms.locatePointInRing(p, ring) !== Location.EXTERIOR\n};\nCGAlgorithms.computeLength = function computeLength (pts) {\n  var n = pts.size();\n  if (n <= 1) { return 0.0 }\n  var len = 0.0;\n  var p = new Coordinate();\n  pts.getCoordinate(0, p);\n  var x0 = p.x;\n  var y0 = p.y;\n  for (var i = 1; i < n; i++) {\n    pts.getCoordinate(i, p);\n    var x1 = p.x;\n    var y1 = p.y;\n    var dx = x1 - x0;\n    var dy = y1 - y0;\n    len += Math.sqrt(dx * dx + dy * dy);\n    x0 = x1;\n    y0 = y1;\n  }\n  return len\n};\nCGAlgorithms.isCCW = function isCCW (ring) {\n  var nPts = ring.length - 1;\n  if (nPts < 3) { throw new IllegalArgumentException('Ring has fewer than 4 points, so orientation cannot be determined') }\n  var hiPt = ring[0];\n  var hiIndex = 0;\n  for (var i = 1; i <= nPts; i++) {\n    var p = ring[i];\n    if (p.y > hiPt.y) {\n      hiPt = p;\n      hiIndex = i;\n    }\n  }\n  var iPrev = hiIndex;\n  do {\n    iPrev = iPrev - 1;\n    if (iPrev < 0) { iPrev = nPts; }\n  } while (ring[iPrev].equals2D(hiPt) && iPrev !== hiIndex)\n  var iNext = hiIndex;\n  do {\n    iNext = (iNext + 1) % nPts;\n  } while (ring[iNext].equals2D(hiPt) && iNext !== hiIndex)\n  var prev = ring[iPrev];\n  var next = ring[iNext];\n  if (prev.equals2D(hiPt) || next.equals2D(hiPt) || prev.equals2D(next)) { return false }\n  var disc = CGAlgorithms.computeOrientation(prev, hiPt, next);\n  var isCCW = false;\n  if (disc === 0) {\n    isCCW = prev.x > next.x;\n  } else {\n    isCCW = disc > 0;\n  }\n  return isCCW\n};\nCGAlgorithms.locatePointInRing = function locatePointInRing (p, ring) {\n  return RayCrossingCounter.locatePointInRing(p, ring)\n};\nCGAlgorithms.distancePointLinePerpendicular = function distancePointLinePerpendicular (p, A, B) {\n  var len2 = (B.x - A.x) * (B.x - A.x) + (B.y - A.y) * (B.y - A.y);\n  var s = ((A.y - p.y) * (B.x - A.x) - (A.x - p.x) * (B.y - A.y)) / len2;\n  return Math.abs(s) * Math.sqrt(len2)\n};\nCGAlgorithms.computeOrientation = function computeOrientation (p1, p2, q) {\n  return CGAlgorithms.orientationIndex(p1, p2, q)\n};\nCGAlgorithms.distancePointLine = function distancePointLine () {\n  if (arguments.length === 2) {\n    var p = arguments[0];\n    var line = arguments[1];\n    if (line.length === 0) { throw new IllegalArgumentException('Line array must contain at least one vertex') }\n    var minDistance = p.distance(line[0]);\n    for (var i = 0; i < line.length - 1; i++) {\n      var dist = CGAlgorithms.distancePointLine(p, line[i], line[i + 1]);\n      if (dist < minDistance) {\n        minDistance = dist;\n      }\n    }\n    return minDistance\n  } else if (arguments.length === 3) {\n    var p$1 = arguments[0];\n    var A = arguments[1];\n    var B = arguments[2];\n    if (A.x === B.x && A.y === B.y) { return p$1.distance(A) }\n    var len2 = (B.x - A.x) * (B.x - A.x) + (B.y - A.y) * (B.y - A.y);\n    var r = ((p$1.x - A.x) * (B.x - A.x) + (p$1.y - A.y) * (B.y - A.y)) / len2;\n    if (r <= 0.0) { return p$1.distance(A) }\n    if (r >= 1.0) { return p$1.distance(B) }\n    var s = ((A.y - p$1.y) * (B.x - A.x) - (A.x - p$1.x) * (B.y - A.y)) / len2;\n    return Math.abs(s) * Math.sqrt(len2)\n  }\n};\nCGAlgorithms.isOnLine = function isOnLine (p, pt) {\n  var lineIntersector = new RobustLineIntersector();\n  for (var i = 1; i < pt.length; i++) {\n    var p0 = pt[i - 1];\n    var p1 = pt[i];\n    lineIntersector.computeIntersection(p, p0, p1);\n    if (lineIntersector.hasIntersection()) {\n      return true\n    }\n  }\n  return false\n};\nstaticAccessors$3.CLOCKWISE.get = function () { return -1 };\nstaticAccessors$3.RIGHT.get = function () { return CGAlgorithms.CLOCKWISE };\nstaticAccessors$3.COUNTERCLOCKWISE.get = function () { return 1 };\nstaticAccessors$3.LEFT.get = function () { return CGAlgorithms.COUNTERCLOCKWISE };\nstaticAccessors$3.COLLINEAR.get = function () { return 0 };\nstaticAccessors$3.STRAIGHT.get = function () { return CGAlgorithms.COLLINEAR };\n\nObject.defineProperties( CGAlgorithms, staticAccessors$3 );\n\nvar GeometryComponentFilter = function GeometryComponentFilter () {};\n\nGeometryComponentFilter.prototype.filter = function filter (geom) {};\nGeometryComponentFilter.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nGeometryComponentFilter.prototype.getClass = function getClass () {\n  return GeometryComponentFilter\n};\n\nvar Geometry = function Geometry () {\n  var factory = arguments[0];\n\n  this._envelope = null;\n  this._factory = null;\n  this._SRID = null;\n  this._userData = null;\n  this._factory = factory;\n  this._SRID = factory.getSRID();\n};\n\nvar staticAccessors$11 = { serialVersionUID: { configurable: true },SORTINDEX_POINT: { configurable: true },SORTINDEX_MULTIPOINT: { configurable: true },SORTINDEX_LINESTRING: { configurable: true },SORTINDEX_LINEARRING: { configurable: true },SORTINDEX_MULTILINESTRING: { configurable: true },SORTINDEX_POLYGON: { configurable: true },SORTINDEX_MULTIPOLYGON: { configurable: true },SORTINDEX_GEOMETRYCOLLECTION: { configurable: true },geometryChangedFilter: { configurable: true } };\nGeometry.prototype.isGeometryCollection = function isGeometryCollection () {\n  return this.getSortIndex() === Geometry.SORTINDEX_GEOMETRYCOLLECTION\n};\nGeometry.prototype.getFactory = function getFactory () {\n  return this._factory\n};\nGeometry.prototype.getGeometryN = function getGeometryN (n) {\n  return this\n};\nGeometry.prototype.getArea = function getArea () {\n  return 0.0\n};\nGeometry.prototype.isRectangle = function isRectangle () {\n  return false\n};\nGeometry.prototype.equals = function equals () {\n  if (arguments[0] instanceof Geometry) {\n    var g$1 = arguments[0];\n    if (g$1 === null) { return false }\n    return this.equalsTopo(g$1)\n  } else if (arguments[0] instanceof Object) {\n    var o = arguments[0];\n    if (!(o instanceof Geometry)) { return false }\n    var g = o;\n    return this.equalsExact(g)\n  }\n};\nGeometry.prototype.equalsExact = function equalsExact (other) {\n  return this === other || this.equalsExact(other, 0)\n};\nGeometry.prototype.geometryChanged = function geometryChanged () {\n  this.apply(Geometry.geometryChangedFilter);\n};\nGeometry.prototype.geometryChangedAction = function geometryChangedAction () {\n  this._envelope = null;\n};\nGeometry.prototype.equalsNorm = function equalsNorm (g) {\n  if (g === null) { return false }\n  return this.norm().equalsExact(g.norm())\n};\nGeometry.prototype.getLength = function getLength () {\n  return 0.0\n};\nGeometry.prototype.getNumGeometries = function getNumGeometries () {\n  return 1\n};\nGeometry.prototype.compareTo = function compareTo () {\n  if (arguments.length === 1) {\n    var o = arguments[0];\n    var other = o;\n    if (this.getSortIndex() !== other.getSortIndex()) {\n      return this.getSortIndex() - other.getSortIndex()\n    }\n    if (this.isEmpty() && other.isEmpty()) {\n      return 0\n    }\n    if (this.isEmpty()) {\n      return -1\n    }\n    if (other.isEmpty()) {\n      return 1\n    }\n    return this.compareToSameClass(o)\n  } else if (arguments.length === 2) {\n    var other$1 = arguments[0];\n    var comp = arguments[1];\n    if (this.getSortIndex() !== other$1.getSortIndex()) {\n      return this.getSortIndex() - other$1.getSortIndex()\n    }\n    if (this.isEmpty() && other$1.isEmpty()) {\n      return 0\n    }\n    if (this.isEmpty()) {\n      return -1\n    }\n    if (other$1.isEmpty()) {\n      return 1\n    }\n    return this.compareToSameClass(other$1, comp)\n  }\n};\nGeometry.prototype.getUserData = function getUserData () {\n  return this._userData\n};\nGeometry.prototype.getSRID = function getSRID () {\n  return this._SRID\n};\nGeometry.prototype.getEnvelope = function getEnvelope () {\n  return this.getFactory().toGeometry(this.getEnvelopeInternal())\n};\nGeometry.prototype.checkNotGeometryCollection = function checkNotGeometryCollection (g) {\n  if (g.getSortIndex() === Geometry.SORTINDEX_GEOMETRYCOLLECTION) {\n    throw new IllegalArgumentException('This method does not support GeometryCollection arguments')\n  }\n};\nGeometry.prototype.equal = function equal (a, b, tolerance) {\n  if (tolerance === 0) {\n    return a.equals(b)\n  }\n  return a.distance(b) <= tolerance\n};\nGeometry.prototype.norm = function norm () {\n  var copy = this.copy();\n  copy.normalize();\n  return copy\n};\nGeometry.prototype.getPrecisionModel = function getPrecisionModel () {\n  return this._factory.getPrecisionModel()\n};\nGeometry.prototype.getEnvelopeInternal = function getEnvelopeInternal () {\n  if (this._envelope === null) {\n    this._envelope = this.computeEnvelopeInternal();\n  }\n  return new Envelope(this._envelope)\n};\nGeometry.prototype.setSRID = function setSRID (SRID) {\n  this._SRID = SRID;\n};\nGeometry.prototype.setUserData = function setUserData (userData) {\n  this._userData = userData;\n};\nGeometry.prototype.compare = function compare (a, b) {\n  var i = a.iterator();\n  var j = b.iterator();\n  while (i.hasNext() && j.hasNext()) {\n    var aElement = i.next();\n    var bElement = j.next();\n    var comparison = aElement.compareTo(bElement);\n    if (comparison !== 0) {\n      return comparison\n    }\n  }\n  if (i.hasNext()) {\n    return 1\n  }\n  if (j.hasNext()) {\n    return -1\n  }\n  return 0\n};\nGeometry.prototype.hashCode = function hashCode () {\n  return this.getEnvelopeInternal().hashCode()\n};\nGeometry.prototype.isGeometryCollectionOrDerived = function isGeometryCollectionOrDerived () {\n  if (this.getSortIndex() === Geometry.SORTINDEX_GEOMETRYCOLLECTION || this.getSortIndex() === Geometry.SORTINDEX_MULTIPOINT || this.getSortIndex() === Geometry.SORTINDEX_MULTILINESTRING || this.getSortIndex() === Geometry.SORTINDEX_MULTIPOLYGON) {\n    return true\n  }\n  return false\n};\nGeometry.prototype.interfaces_ = function interfaces_ () {\n  return [Clonable, Comparable, Serializable]\n};\nGeometry.prototype.getClass = function getClass () {\n  return Geometry\n};\nGeometry.hasNonEmptyElements = function hasNonEmptyElements (geometries) {\n  for (var i = 0; i < geometries.length; i++) {\n    if (!geometries[i].isEmpty()) {\n      return true\n    }\n  }\n  return false\n};\nGeometry.hasNullElements = function hasNullElements (array) {\n  for (var i = 0; i < array.length; i++) {\n    if (array[i] === null) {\n      return true\n    }\n  }\n  return false\n};\nstaticAccessors$11.serialVersionUID.get = function () { return 8763622679187376702 };\nstaticAccessors$11.SORTINDEX_POINT.get = function () { return 0 };\nstaticAccessors$11.SORTINDEX_MULTIPOINT.get = function () { return 1 };\nstaticAccessors$11.SORTINDEX_LINESTRING.get = function () { return 2 };\nstaticAccessors$11.SORTINDEX_LINEARRING.get = function () { return 3 };\nstaticAccessors$11.SORTINDEX_MULTILINESTRING.get = function () { return 4 };\nstaticAccessors$11.SORTINDEX_POLYGON.get = function () { return 5 };\nstaticAccessors$11.SORTINDEX_MULTIPOLYGON.get = function () { return 6 };\nstaticAccessors$11.SORTINDEX_GEOMETRYCOLLECTION.get = function () { return 7 };\nstaticAccessors$11.geometryChangedFilter.get = function () { return geometryChangedFilter };\n\nObject.defineProperties( Geometry, staticAccessors$11 );\n\nvar geometryChangedFilter = function geometryChangedFilter () {};\n\ngeometryChangedFilter.interfaces_ = function interfaces_ () {\n  return [GeometryComponentFilter]\n};\ngeometryChangedFilter.filter = function filter (geom) {\n  geom.geometryChangedAction();\n};\n\nvar CoordinateFilter = function CoordinateFilter () {};\n\nCoordinateFilter.prototype.filter = function filter (coord) {};\nCoordinateFilter.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nCoordinateFilter.prototype.getClass = function getClass () {\n  return CoordinateFilter\n};\n\nvar BoundaryNodeRule = function BoundaryNodeRule () {};\n\nvar staticAccessors$12 = { Mod2BoundaryNodeRule: { configurable: true },EndPointBoundaryNodeRule: { configurable: true },MultiValentEndPointBoundaryNodeRule: { configurable: true },MonoValentEndPointBoundaryNodeRule: { configurable: true },MOD2_BOUNDARY_RULE: { configurable: true },ENDPOINT_BOUNDARY_RULE: { configurable: true },MULTIVALENT_ENDPOINT_BOUNDARY_RULE: { configurable: true },MONOVALENT_ENDPOINT_BOUNDARY_RULE: { configurable: true },OGC_SFS_BOUNDARY_RULE: { configurable: true } };\n\nBoundaryNodeRule.prototype.isInBoundary = function isInBoundary (boundaryCount) {};\nBoundaryNodeRule.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nBoundaryNodeRule.prototype.getClass = function getClass () {\n  return BoundaryNodeRule\n};\nstaticAccessors$12.Mod2BoundaryNodeRule.get = function () { return Mod2BoundaryNodeRule };\nstaticAccessors$12.EndPointBoundaryNodeRule.get = function () { return EndPointBoundaryNodeRule };\nstaticAccessors$12.MultiValentEndPointBoundaryNodeRule.get = function () { return MultiValentEndPointBoundaryNodeRule };\nstaticAccessors$12.MonoValentEndPointBoundaryNodeRule.get = function () { return MonoValentEndPointBoundaryNodeRule };\nstaticAccessors$12.MOD2_BOUNDARY_RULE.get = function () { return new Mod2BoundaryNodeRule() };\nstaticAccessors$12.ENDPOINT_BOUNDARY_RULE.get = function () { return new EndPointBoundaryNodeRule() };\nstaticAccessors$12.MULTIVALENT_ENDPOINT_BOUNDARY_RULE.get = function () { return new MultiValentEndPointBoundaryNodeRule() };\nstaticAccessors$12.MONOVALENT_ENDPOINT_BOUNDARY_RULE.get = function () { return new MonoValentEndPointBoundaryNodeRule() };\nstaticAccessors$12.OGC_SFS_BOUNDARY_RULE.get = function () { return BoundaryNodeRule.MOD2_BOUNDARY_RULE };\n\nObject.defineProperties( BoundaryNodeRule, staticAccessors$12 );\n\nvar Mod2BoundaryNodeRule = function Mod2BoundaryNodeRule () {};\n\nMod2BoundaryNodeRule.prototype.isInBoundary = function isInBoundary (boundaryCount) {\n  return boundaryCount % 2 === 1\n};\nMod2BoundaryNodeRule.prototype.interfaces_ = function interfaces_ () {\n  return [BoundaryNodeRule]\n};\nMod2BoundaryNodeRule.prototype.getClass = function getClass () {\n  return Mod2BoundaryNodeRule\n};\n\nvar EndPointBoundaryNodeRule = function EndPointBoundaryNodeRule () {};\n\nEndPointBoundaryNodeRule.prototype.isInBoundary = function isInBoundary (boundaryCount) {\n  return boundaryCount > 0\n};\nEndPointBoundaryNodeRule.prototype.interfaces_ = function interfaces_ () {\n  return [BoundaryNodeRule]\n};\nEndPointBoundaryNodeRule.prototype.getClass = function getClass () {\n  return EndPointBoundaryNodeRule\n};\n\nvar MultiValentEndPointBoundaryNodeRule = function MultiValentEndPointBoundaryNodeRule () {};\n\nMultiValentEndPointBoundaryNodeRule.prototype.isInBoundary = function isInBoundary (boundaryCount) {\n  return boundaryCount > 1\n};\nMultiValentEndPointBoundaryNodeRule.prototype.interfaces_ = function interfaces_ () {\n  return [BoundaryNodeRule]\n};\nMultiValentEndPointBoundaryNodeRule.prototype.getClass = function getClass () {\n  return MultiValentEndPointBoundaryNodeRule\n};\n\nvar MonoValentEndPointBoundaryNodeRule = function MonoValentEndPointBoundaryNodeRule () {};\n\nMonoValentEndPointBoundaryNodeRule.prototype.isInBoundary = function isInBoundary (boundaryCount) {\n  return boundaryCount === 1\n};\nMonoValentEndPointBoundaryNodeRule.prototype.interfaces_ = function interfaces_ () {\n  return [BoundaryNodeRule]\n};\nMonoValentEndPointBoundaryNodeRule.prototype.getClass = function getClass () {\n  return MonoValentEndPointBoundaryNodeRule\n};\n\n// import Iterator from './Iterator'\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/Collection.html\n *\n * @constructor\n * @private\n */\nvar Collection = function Collection () {};\n\nCollection.prototype.add = function add () {};\n\n/**\n * Appends all of the elements in the specified collection to the end of this\n * list, in the order that they are returned by the specified collection's\n * iterator (optional operation).\n * @param {javascript.util.Collection} c\n * @return {boolean}\n */\nCollection.prototype.addAll = function addAll () {};\n\n/**\n * Returns true if this collection contains no elements.\n * @return {boolean}\n */\nCollection.prototype.isEmpty = function isEmpty () {};\n\n/**\n * Returns an iterator over the elements in this collection.\n * @return {javascript.util.Iterator}\n */\nCollection.prototype.iterator = function iterator () {};\n\n/**\n * Returns an iterator over the elements in this collection.\n * @return {number}\n */\nCollection.prototype.size = function size () {};\n\n/**\n * Returns an array containing all of the elements in this collection.\n * @return {Array}\n */\nCollection.prototype.toArray = function toArray () {};\n\n/**\n * Removes a single instance of the specified element from this collection if it\n * is present. (optional)\n * @param {Object} e\n * @return {boolean}\n */\nCollection.prototype.remove = function remove () {};\n\n/**\n * @param {string=} message Optional message\n * @extends {Error}\n * @constructor\n * @private\n */\nfunction IndexOutOfBoundsException (message) {\n  this.message = message || '';\n}\nIndexOutOfBoundsException.prototype = new Error();\n\n/**\n * @type {string}\n */\nIndexOutOfBoundsException.prototype.name = 'IndexOutOfBoundsException';\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/Iterator.html\n * @constructor\n * @private\n */\nvar Iterator = function Iterator () {};\n\nIterator.prototype.hasNext = function hasNext () {};\n\n/**\n * Returns the next element in the iteration.\n * @return {Object}\n */\nIterator.prototype.next = function next () {};\n\n/**\n * Removes from the underlying collection the last element returned by the\n * iterator (optional operation).\n */\nIterator.prototype.remove = function remove () {};\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/List.html\n *\n * @extends {javascript.util.Collection}\n * @constructor\n * @private\n */\nvar List = (function (Collection$$1) {\n  function List () {\n    Collection$$1.apply(this, arguments);\n  }\n\n  if ( Collection$$1 ) List.__proto__ = Collection$$1;\n  List.prototype = Object.create( Collection$$1 && Collection$$1.prototype );\n  List.prototype.constructor = List;\n\n  List.prototype.get = function get () { };\n\n  /**\n   * Replaces the element at the specified position in this list with the\n   * specified element (optional operation).\n   * @param {number} index\n   * @param {Object} e\n   * @return {Object}\n   */\n  List.prototype.set = function set () { };\n\n  /**\n   * Returns true if this collection contains no elements.\n   * @return {boolean}\n   */\n  List.prototype.isEmpty = function isEmpty () { };\n\n  return List;\n}(Collection));\n\n/**\n * @param {string=} message Optional message\n * @extends {Error}\n * @constructor\n * @private\n */\nfunction NoSuchElementException (message) {\n  this.message = message || '';\n}\nNoSuchElementException.prototype = new Error();\n\n/**\n * @type {string}\n */\nNoSuchElementException.prototype.name = 'NoSuchElementException';\n\n// import OperationNotSupported from './OperationNotSupported'\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/ArrayList.html\n *\n * @extends List\n * @private\n */\nvar ArrayList = (function (List$$1) {\n  function ArrayList () {\n    List$$1.call(this);\n    this.array_ = [];\n\n    if (arguments[0] instanceof Collection) {\n      this.addAll(arguments[0]);\n    }\n  }\n\n  if ( List$$1 ) ArrayList.__proto__ = List$$1;\n  ArrayList.prototype = Object.create( List$$1 && List$$1.prototype );\n  ArrayList.prototype.constructor = ArrayList;\n\n  ArrayList.prototype.ensureCapacity = function ensureCapacity () {};\n  ArrayList.prototype.interfaces_ = function interfaces_ () { return [List$$1, Collection] };\n\n  /**\n   * @override\n   */\n  ArrayList.prototype.add = function add (e) {\n    if (arguments.length === 1) {\n      this.array_.push(e);\n    } else {\n      this.array_.splice(arguments[0], arguments[1]);\n    }\n    return true\n  };\n\n  ArrayList.prototype.clear = function clear () {\n    this.array_ = [];\n  };\n\n  /**\n   * @override\n   */\n  ArrayList.prototype.addAll = function addAll (c) {\n    var this$1 = this;\n\n    for (var i = c.iterator(); i.hasNext();) {\n      this$1.add(i.next());\n    }\n    return true\n  };\n\n  /**\n   * @override\n   */\n  ArrayList.prototype.set = function set (index, element) {\n    var oldElement = this.array_[index];\n    this.array_[index] = element;\n    return oldElement\n  };\n\n  /**\n   * @override\n   */\n  ArrayList.prototype.iterator = function iterator () {\n    return new Iterator_(this)\n  };\n\n  /**\n   * @override\n   */\n  ArrayList.prototype.get = function get (index) {\n    if (index < 0 || index >= this.size()) {\n      throw new IndexOutOfBoundsException()\n    }\n\n    return this.array_[index]\n  };\n\n  /**\n   * @override\n   */\n  ArrayList.prototype.isEmpty = function isEmpty () {\n    return this.array_.length === 0\n  };\n\n  /**\n   * @override\n   */\n  ArrayList.prototype.size = function size () {\n    return this.array_.length\n  };\n\n  /**\n   * @override\n   */\n  ArrayList.prototype.toArray = function toArray () {\n    var this$1 = this;\n\n    var array = [];\n\n    for (var i = 0, len = this.array_.length; i < len; i++) {\n      array.push(this$1.array_[i]);\n    }\n\n    return array\n  };\n\n  /**\n   * @override\n   */\n  ArrayList.prototype.remove = function remove (o) {\n    var this$1 = this;\n\n    var found = false;\n\n    for (var i = 0, len = this.array_.length; i < len; i++) {\n      if (this$1.array_[i] === o) {\n        this$1.array_.splice(i, 1);\n        found = true;\n        break\n      }\n    }\n\n    return found\n  };\n\n  return ArrayList;\n}(List));\n\n/**\n * @extends {Iterator}\n * @param {ArrayList} arrayList\n * @constructor\n * @private\n */\nvar Iterator_ = (function (Iterator$$1) {\n  function Iterator_ (arrayList) {\n    Iterator$$1.call(this);\n    /**\n     * @type {ArrayList}\n     * @private\n    */\n    this.arrayList_ = arrayList;\n    /**\n     * @type {number}\n     * @private\n    */\n    this.position_ = 0;\n  }\n\n  if ( Iterator$$1 ) Iterator_.__proto__ = Iterator$$1;\n  Iterator_.prototype = Object.create( Iterator$$1 && Iterator$$1.prototype );\n  Iterator_.prototype.constructor = Iterator_;\n\n  /**\n   * @override\n   */\n  Iterator_.prototype.next = function next () {\n    if (this.position_ === this.arrayList_.size()) {\n      throw new NoSuchElementException()\n    }\n    return this.arrayList_.get(this.position_++)\n  };\n\n  /**\n   * @override\n   */\n  Iterator_.prototype.hasNext = function hasNext () {\n    if (this.position_ < this.arrayList_.size()) {\n      return true\n    } else {\n      return false\n    }\n  };\n\n  /**\n   * TODO: should be in ListIterator\n   * @override\n   */\n  Iterator_.prototype.set = function set (element) {\n    return this.arrayList_.set(this.position_ - 1, element)\n  };\n\n  /**\n   * @override\n   */\n  Iterator_.prototype.remove = function remove () {\n    this.arrayList_.remove(this.arrayList_.get(this.position_));\n  };\n\n  return Iterator_;\n}(Iterator));\n\nvar CoordinateList = (function (ArrayList$$1) {\n  function CoordinateList () {\n    ArrayList$$1.call(this);\n    if (arguments.length === 0) {\n    } else if (arguments.length === 1) {\n      var coord = arguments[0];\n      this.ensureCapacity(coord.length);\n      this.add(coord, true);\n    } else if (arguments.length === 2) {\n      var coord$1 = arguments[0];\n      var allowRepeated = arguments[1];\n      this.ensureCapacity(coord$1.length);\n      this.add(coord$1, allowRepeated);\n    }\n  }\n\n  if ( ArrayList$$1 ) CoordinateList.__proto__ = ArrayList$$1;\n  CoordinateList.prototype = Object.create( ArrayList$$1 && ArrayList$$1.prototype );\n  CoordinateList.prototype.constructor = CoordinateList;\n\n  var staticAccessors = { coordArrayType: { configurable: true } };\n  staticAccessors.coordArrayType.get = function () { return new Array(0).fill(null) };\n  CoordinateList.prototype.getCoordinate = function getCoordinate (i) {\n    return this.get(i)\n  };\n  CoordinateList.prototype.addAll = function addAll () {\n    var this$1 = this;\n\n    if (arguments.length === 2) {\n      var coll = arguments[0];\n      var allowRepeated = arguments[1];\n      var isChanged = false;\n      for (var i = coll.iterator(); i.hasNext();) {\n        this$1.add(i.next(), allowRepeated);\n        isChanged = true;\n      }\n      return isChanged\n    } else { return ArrayList$$1.prototype.addAll.apply(this, arguments) }\n  };\n  CoordinateList.prototype.clone = function clone () {\n    var this$1 = this;\n\n    var clone = ArrayList$$1.prototype.clone.call(this);\n    for (var i = 0; i < this.size(); i++) {\n      clone.add(i, this$1.get(i).copy());\n    }\n    return clone\n  };\n  CoordinateList.prototype.toCoordinateArray = function toCoordinateArray () {\n    return this.toArray(CoordinateList.coordArrayType)\n  };\n  CoordinateList.prototype.add = function add () {\n    var this$1 = this;\n\n    if (arguments.length === 1) {\n      var coord = arguments[0];\n      ArrayList$$1.prototype.add.call(this, coord);\n    } else if (arguments.length === 2) {\n      if (arguments[0] instanceof Array && typeof arguments[1] === 'boolean') {\n        var coord$1 = arguments[0];\n        var allowRepeated = arguments[1];\n        this.add(coord$1, allowRepeated, true);\n        return true\n      } else if (arguments[0] instanceof Coordinate && typeof arguments[1] === 'boolean') {\n        var coord$2 = arguments[0];\n        var allowRepeated$1 = arguments[1];\n        if (!allowRepeated$1) {\n          if (this.size() >= 1) {\n            var last = this.get(this.size() - 1);\n            if (last.equals2D(coord$2)) { return null }\n          }\n        }\n        ArrayList$$1.prototype.add.call(this, coord$2);\n      } else if (arguments[0] instanceof Object && typeof arguments[1] === 'boolean') {\n        var obj = arguments[0];\n        var allowRepeated$2 = arguments[1];\n        this.add(obj, allowRepeated$2);\n        return true\n      }\n    } else if (arguments.length === 3) {\n      if (typeof arguments[2] === 'boolean' && (arguments[0] instanceof Array && typeof arguments[1] === 'boolean')) {\n        var coord$3 = arguments[0];\n        var allowRepeated$3 = arguments[1];\n        var direction = arguments[2];\n        if (direction) {\n          for (var i$1 = 0; i$1 < coord$3.length; i$1++) {\n            this$1.add(coord$3[i$1], allowRepeated$3);\n          }\n        } else {\n          for (var i$2 = coord$3.length - 1; i$2 >= 0; i$2--) {\n            this$1.add(coord$3[i$2], allowRepeated$3);\n          }\n        }\n        return true\n      } else if (typeof arguments[2] === 'boolean' && (Number.isInteger(arguments[0]) && arguments[1] instanceof Coordinate)) {\n        var i$3 = arguments[0];\n        var coord$4 = arguments[1];\n        var allowRepeated$4 = arguments[2];\n        if (!allowRepeated$4) {\n          var size = this.size();\n          if (size > 0) {\n            if (i$3 > 0) {\n              var prev = this.get(i$3 - 1);\n              if (prev.equals2D(coord$4)) { return null }\n            }\n            if (i$3 < size) {\n              var next = this.get(i$3);\n              if (next.equals2D(coord$4)) { return null }\n            }\n          }\n        }\n        ArrayList$$1.prototype.add.call(this, i$3, coord$4);\n      }\n    } else if (arguments.length === 4) {\n      var coord$5 = arguments[0];\n      var allowRepeated$5 = arguments[1];\n      var start = arguments[2];\n      var end = arguments[3];\n      var inc = 1;\n      if (start > end) { inc = -1; }\n      for (var i = start; i !== end; i += inc) {\n        this$1.add(coord$5[i], allowRepeated$5);\n      }\n      return true\n    }\n  };\n  CoordinateList.prototype.closeRing = function closeRing () {\n    if (this.size() > 0) { this.add(new Coordinate(this.get(0)), false); }\n  };\n  CoordinateList.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  CoordinateList.prototype.getClass = function getClass () {\n    return CoordinateList\n  };\n\n  Object.defineProperties( CoordinateList, staticAccessors );\n\n  return CoordinateList;\n}(ArrayList));\n\nvar CoordinateArrays = function CoordinateArrays () {};\n\nvar staticAccessors$13 = { ForwardComparator: { configurable: true },BidirectionalComparator: { configurable: true },coordArrayType: { configurable: true } };\n\nstaticAccessors$13.ForwardComparator.get = function () { return ForwardComparator };\nstaticAccessors$13.BidirectionalComparator.get = function () { return BidirectionalComparator };\nstaticAccessors$13.coordArrayType.get = function () { return new Array(0).fill(null) };\n\nCoordinateArrays.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nCoordinateArrays.prototype.getClass = function getClass () {\n  return CoordinateArrays\n};\nCoordinateArrays.isRing = function isRing (pts) {\n  if (pts.length < 4) { return false }\n  if (!pts[0].equals2D(pts[pts.length - 1])) { return false }\n  return true\n};\nCoordinateArrays.ptNotInList = function ptNotInList (testPts, pts) {\n  for (var i = 0; i < testPts.length; i++) {\n    var testPt = testPts[i];\n    if (CoordinateArrays.indexOf(testPt, pts) < 0) { return testPt }\n  }\n  return null\n};\nCoordinateArrays.scroll = function scroll (coordinates, firstCoordinate) {\n  var i = CoordinateArrays.indexOf(firstCoordinate, coordinates);\n  if (i < 0) { return null }\n  var newCoordinates = new Array(coordinates.length).fill(null);\n  System.arraycopy(coordinates, i, newCoordinates, 0, coordinates.length - i);\n  System.arraycopy(coordinates, 0, newCoordinates, coordinates.length - i, i);\n  System.arraycopy(newCoordinates, 0, coordinates, 0, coordinates.length);\n};\nCoordinateArrays.equals = function equals () {\n  if (arguments.length === 2) {\n    var coord1 = arguments[0];\n    var coord2 = arguments[1];\n    if (coord1 === coord2) { return true }\n    if (coord1 === null || coord2 === null) { return false }\n    if (coord1.length !== coord2.length) { return false }\n    for (var i = 0; i < coord1.length; i++) {\n      if (!coord1[i].equals(coord2[i])) { return false }\n    }\n    return true\n  } else if (arguments.length === 3) {\n    var coord1$1 = arguments[0];\n    var coord2$1 = arguments[1];\n    var coordinateComparator = arguments[2];\n    if (coord1$1 === coord2$1) { return true }\n    if (coord1$1 === null || coord2$1 === null) { return false }\n    if (coord1$1.length !== coord2$1.length) { return false }\n    for (var i$1 = 0; i$1 < coord1$1.length; i$1++) {\n      if (coordinateComparator.compare(coord1$1[i$1], coord2$1[i$1]) !== 0) { return false }\n    }\n    return true\n  }\n};\nCoordinateArrays.intersection = function intersection (coordinates, env) {\n  var coordList = new CoordinateList();\n  for (var i = 0; i < coordinates.length; i++) {\n    if (env.intersects(coordinates[i])) { coordList.add(coordinates[i], true); }\n  }\n  return coordList.toCoordinateArray()\n};\nCoordinateArrays.hasRepeatedPoints = function hasRepeatedPoints (coord) {\n  for (var i = 1; i < coord.length; i++) {\n    if (coord[i - 1].equals(coord[i])) {\n      return true\n    }\n  }\n  return false\n};\nCoordinateArrays.removeRepeatedPoints = function removeRepeatedPoints (coord) {\n  if (!CoordinateArrays.hasRepeatedPoints(coord)) { return coord }\n  var coordList = new CoordinateList(coord, false);\n  return coordList.toCoordinateArray()\n};\nCoordinateArrays.reverse = function reverse (coord) {\n  var last = coord.length - 1;\n  var mid = Math.trunc(last / 2);\n  for (var i = 0; i <= mid; i++) {\n    var tmp = coord[i];\n    coord[i] = coord[last - i];\n    coord[last - i] = tmp;\n  }\n};\nCoordinateArrays.removeNull = function removeNull (coord) {\n  var nonNull = 0;\n  for (var i = 0; i < coord.length; i++) {\n    if (coord[i] !== null) { nonNull++; }\n  }\n  var newCoord = new Array(nonNull).fill(null);\n  if (nonNull === 0) { return newCoord }\n  var j = 0;\n  for (var i$1 = 0; i$1 < coord.length; i$1++) {\n    if (coord[i$1] !== null) { newCoord[j++] = coord[i$1]; }\n  }\n  return newCoord\n};\nCoordinateArrays.copyDeep = function copyDeep () {\n  if (arguments.length === 1) {\n    var coordinates = arguments[0];\n    var copy = new Array(coordinates.length).fill(null);\n    for (var i = 0; i < coordinates.length; i++) {\n      copy[i] = new Coordinate(coordinates[i]);\n    }\n    return copy\n  } else if (arguments.length === 5) {\n    var src = arguments[0];\n    var srcStart = arguments[1];\n    var dest = arguments[2];\n    var destStart = arguments[3];\n    var length = arguments[4];\n    for (var i$1 = 0; i$1 < length; i$1++) {\n      dest[destStart + i$1] = new Coordinate(src[srcStart + i$1]);\n    }\n  }\n};\nCoordinateArrays.isEqualReversed = function isEqualReversed (pts1, pts2) {\n  for (var i = 0; i < pts1.length; i++) {\n    var p1 = pts1[i];\n    var p2 = pts2[pts1.length - i - 1];\n    if (p1.compareTo(p2) !== 0) { return false }\n  }\n  return true\n};\nCoordinateArrays.envelope = function envelope (coordinates) {\n  var env = new Envelope();\n  for (var i = 0; i < coordinates.length; i++) {\n    env.expandToInclude(coordinates[i]);\n  }\n  return env\n};\nCoordinateArrays.toCoordinateArray = function toCoordinateArray (coordList) {\n  return coordList.toArray(CoordinateArrays.coordArrayType)\n};\nCoordinateArrays.atLeastNCoordinatesOrNothing = function atLeastNCoordinatesOrNothing (n, c) {\n  return c.length >= n ? c : []\n};\nCoordinateArrays.indexOf = function indexOf (coordinate, coordinates) {\n  for (var i = 0; i < coordinates.length; i++) {\n    if (coordinate.equals(coordinates[i])) {\n      return i\n    }\n  }\n  return -1\n};\nCoordinateArrays.increasingDirection = function increasingDirection (pts) {\n  for (var i = 0; i < Math.trunc(pts.length / 2); i++) {\n    var j = pts.length - 1 - i;\n    var comp = pts[i].compareTo(pts[j]);\n    if (comp !== 0) { return comp }\n  }\n  return 1\n};\nCoordinateArrays.compare = function compare (pts1, pts2) {\n  var i = 0;\n  while (i < pts1.length && i < pts2.length) {\n    var compare = pts1[i].compareTo(pts2[i]);\n    if (compare !== 0) { return compare }\n    i++;\n  }\n  if (i < pts2.length) { return -1 }\n  if (i < pts1.length) { return 1 }\n  return 0\n};\nCoordinateArrays.minCoordinate = function minCoordinate (coordinates) {\n  var minCoord = null;\n  for (var i = 0; i < coordinates.length; i++) {\n    if (minCoord === null || minCoord.compareTo(coordinates[i]) > 0) {\n      minCoord = coordinates[i];\n    }\n  }\n  return minCoord\n};\nCoordinateArrays.extract = function extract (pts, start, end) {\n  start = MathUtil.clamp(start, 0, pts.length);\n  end = MathUtil.clamp(end, -1, pts.length);\n  var npts = end - start + 1;\n  if (end < 0) { npts = 0; }\n  if (start >= pts.length) { npts = 0; }\n  if (end < start) { npts = 0; }\n  var extractPts = new Array(npts).fill(null);\n  if (npts === 0) { return extractPts }\n  var iPts = 0;\n  for (var i = start; i <= end; i++) {\n    extractPts[iPts++] = pts[i];\n  }\n  return extractPts\n};\n\nObject.defineProperties( CoordinateArrays, staticAccessors$13 );\n\nvar ForwardComparator = function ForwardComparator () {};\n\nForwardComparator.prototype.compare = function compare (o1, o2) {\n  var pts1 = o1;\n  var pts2 = o2;\n  return CoordinateArrays.compare(pts1, pts2)\n};\nForwardComparator.prototype.interfaces_ = function interfaces_ () {\n  return [Comparator]\n};\nForwardComparator.prototype.getClass = function getClass () {\n  return ForwardComparator\n};\n\nvar BidirectionalComparator = function BidirectionalComparator () {};\n\nBidirectionalComparator.prototype.compare = function compare (o1, o2) {\n  var pts1 = o1;\n  var pts2 = o2;\n  if (pts1.length < pts2.length) { return -1 }\n  if (pts1.length > pts2.length) { return 1 }\n  if (pts1.length === 0) { return 0 }\n  var forwardComp = CoordinateArrays.compare(pts1, pts2);\n  var isEqualRev = CoordinateArrays.isEqualReversed(pts1, pts2);\n  if (isEqualRev) { return 0 }\n  return forwardComp\n};\nBidirectionalComparator.prototype.OLDcompare = function OLDcompare (o1, o2) {\n  var pts1 = o1;\n  var pts2 = o2;\n  if (pts1.length < pts2.length) { return -1 }\n  if (pts1.length > pts2.length) { return 1 }\n  if (pts1.length === 0) { return 0 }\n  var dir1 = CoordinateArrays.increasingDirection(pts1);\n  var dir2 = CoordinateArrays.increasingDirection(pts2);\n  var i1 = dir1 > 0 ? 0 : pts1.length - 1;\n  var i2 = dir2 > 0 ? 0 : pts1.length - 1;\n  for (var i = 0; i < pts1.length; i++) {\n    var comparePt = pts1[i1].compareTo(pts2[i2]);\n    if (comparePt !== 0) { return comparePt }\n    i1 += dir1;\n    i2 += dir2;\n  }\n  return 0\n};\nBidirectionalComparator.prototype.interfaces_ = function interfaces_ () {\n  return [Comparator]\n};\nBidirectionalComparator.prototype.getClass = function getClass () {\n  return BidirectionalComparator\n};\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/Map.html\n *\n * @constructor\n * @private\n */\nvar Map$1 = function Map () {};\n\nMap$1.prototype.get = function get () {};\n/**\n * Associates the specified value with the specified key in this map (optional\n * operation).\n * @param {Object} key\n * @param {Object} value\n * @return {Object}\n */\nMap$1.prototype.put = function put () {};\n\n/**\n * Returns the number of key-value mappings in this map.\n * @return {number}\n */\nMap$1.prototype.size = function size () {};\n\n/**\n * Returns a Collection view of the values contained in this map.\n * @return {javascript.util.Collection}\n */\nMap$1.prototype.values = function values () {};\n\n/**\n * Returns a {@link Set} view of the mappings contained in this map.\n * The set is backed by the map, so changes to the map are\n * reflected in the set, and vice-versa.If the map is modified\n * while an iteration over the set is in progress (except through\n * the iterator's own <tt>remove</tt> operation, or through the\n * <tt>setValue</tt> operation on a map entry returned by the\n * iterator) the results of the iteration are undefined.The set\n * supports element removal, which removes the corresponding\n * mapping from the map, via the <tt>Iterator.remove</tt>,\n * <tt>Set.remove</tt>, <tt>removeAll</tt>, <tt>retainAll</tt> and\n * <tt>clear</tt> operations.It does not support the\n * <tt>add</tt> or <tt>addAll</tt> operations.\n *\n * @return {Set} a set view of the mappings contained in this map\n */\nMap$1.prototype.entrySet = function entrySet () {};\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/SortedMap.html\n *\n * @extends {Map}\n * @constructor\n * @private\n */\nvar SortedMap = (function (Map) {\n\tfunction SortedMap () {\n\t\tMap.apply(this, arguments);\n\t}if ( Map ) SortedMap.__proto__ = Map;\n\tSortedMap.prototype = Object.create( Map && Map.prototype );\n\tSortedMap.prototype.constructor = SortedMap;\n\n\t\n\n\treturn SortedMap;\n}(Map$1));\n\n/**\n * @param {string=} message Optional message\n * @extends {Error}\n * @constructor\n * @private\n */\nfunction OperationNotSupported (message) {\n  this.message = message || '';\n}\nOperationNotSupported.prototype = new Error();\n\n/**\n * @type {string}\n */\nOperationNotSupported.prototype.name = 'OperationNotSupported';\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/Set.html\n *\n * @extends {Collection}\n * @constructor\n * @private\n */\nfunction Set() {}\nSet.prototype = new Collection();\n\n\n/**\n * Returns true if this set contains the specified element. More formally,\n * returns true if and only if this set contains an element e such that (o==null ?\n * e==null : o.equals(e)).\n * @param {Object} e\n * @return {boolean}\n */\nSet.prototype.contains = function() {};\n\n/**\n * @see http://docs.oracle.com/javase/6/docs/api/java/util/HashSet.html\n *\n * @extends {javascript.util.Set}\n * @constructor\n * @private\n */\nvar HashSet = (function (Set$$1) {\n  function HashSet () {\n    Set$$1.call(this);\n    this.array_ = [];\n\n    if (arguments[0] instanceof Collection) {\n      this.addAll(arguments[0]);\n    }\n  }\n\n  if ( Set$$1 ) HashSet.__proto__ = Set$$1;\n  HashSet.prototype = Object.create( Set$$1 && Set$$1.prototype );\n  HashSet.prototype.constructor = HashSet;\n\n  /**\n   * @override\n   */\n  HashSet.prototype.contains = function contains (o) {\n    var this$1 = this;\n\n    for (var i = 0, len = this.array_.length; i < len; i++) {\n      var e = this$1.array_[i];\n      if (e === o) {\n        return true\n      }\n    }\n    return false\n  };\n\n  /**\n   * @override\n   */\n  HashSet.prototype.add = function add (o) {\n    if (this.contains(o)) {\n      return false\n    }\n\n    this.array_.push(o);\n\n    return true\n  };\n\n  /**\n   * @override\n   */\n  HashSet.prototype.addAll = function addAll (c) {\n    var this$1 = this;\n\n    for (var i = c.iterator(); i.hasNext();) {\n      this$1.add(i.next());\n    }\n    return true\n  };\n\n  /**\n   * @override\n   */\n  HashSet.prototype.remove = function remove (o) {\n    // throw new javascript.util.OperationNotSupported()\n    throw new Error()\n  };\n\n  /**\n   * @override\n   */\n  HashSet.prototype.size = function size () {\n    return this.array_.length\n  };\n\n  /**\n   * @override\n   */\n  HashSet.prototype.isEmpty = function isEmpty () {\n    return this.array_.length === 0\n  };\n\n  /**\n   * @override\n   */\n  HashSet.prototype.toArray = function toArray () {\n    var this$1 = this;\n\n    var array = [];\n\n    for (var i = 0, len = this.array_.length; i < len; i++) {\n      array.push(this$1.array_[i]);\n    }\n\n    return array\n  };\n\n  /**\n   * @override\n   */\n  HashSet.prototype.iterator = function iterator () {\n    return new Iterator_$1(this)\n  };\n\n  return HashSet;\n}(Set));\n\n/**\n   * @extends {Iterator}\n   * @param {HashSet} hashSet\n   * @constructor\n   * @private\n   */\nvar Iterator_$1 = (function (Iterator$$1) {\n  function Iterator_ (hashSet) {\n    Iterator$$1.call(this);\n    /**\n     * @type {HashSet}\n     * @private\n     */\n    this.hashSet_ = hashSet;\n    /**\n     * @type {number}\n     * @private\n     */\n    this.position_ = 0;\n  }\n\n  if ( Iterator$$1 ) Iterator_.__proto__ = Iterator$$1;\n  Iterator_.prototype = Object.create( Iterator$$1 && Iterator$$1.prototype );\n  Iterator_.prototype.constructor = Iterator_;\n\n  /**\n   * @override\n   */\n  Iterator_.prototype.next = function next () {\n    if (this.position_ === this.hashSet_.size()) {\n      throw new NoSuchElementException()\n    }\n    return this.hashSet_.array_[this.position_++]\n  };\n\n  /**\n   * @override\n   */\n  Iterator_.prototype.hasNext = function hasNext () {\n    if (this.position_ < this.hashSet_.size()) {\n      return true\n    } else {\n      return false\n    }\n  };\n\n  /**\n   * @override\n   */\n  Iterator_.prototype.remove = function remove () {\n    throw new OperationNotSupported()\n  };\n\n  return Iterator_;\n}(Iterator));\n\nvar BLACK = 0;\nvar RED = 1;\nfunction colorOf (p) { return (p === null ? BLACK : p.color) }\nfunction parentOf (p) { return (p === null ? null : p.parent) }\nfunction setColor (p, c) { if (p !== null) { p.color = c; } }\nfunction leftOf (p) { return (p === null ? null : p.left) }\nfunction rightOf (p) { return (p === null ? null : p.right) }\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/TreeMap.html\n *\n * @extends {SortedMap}\n * @constructor\n * @private\n */\nfunction TreeMap () {\n  /**\n   * @type {Object}\n   * @private\n   */\n  this.root_ = null;\n  /**\n   * @type {number}\n   * @private\n  */\n  this.size_ = 0;\n}\nTreeMap.prototype = new SortedMap();\n\n/**\n * @override\n */\nTreeMap.prototype.get = function (key) {\n  var p = this.root_;\n  while (p !== null) {\n    var cmp = key['compareTo'](p.key);\n    if (cmp < 0) { p = p.left; }\n    else if (cmp > 0) { p = p.right; }\n    else { return p.value }\n  }\n  return null\n};\n\n/**\n * @override\n */\nTreeMap.prototype.put = function (key, value) {\n  if (this.root_ === null) {\n    this.root_ = {\n      key: key,\n      value: value,\n      left: null,\n      right: null,\n      parent: null,\n      color: BLACK,\n      getValue: function getValue () { return this.value },\n      getKey: function getKey () { return this.key }\n    };\n    this.size_ = 1;\n    return null\n  }\n  var t = this.root_;\n  var parent;\n  var cmp;\n  do {\n    parent = t;\n    cmp = key['compareTo'](t.key);\n    if (cmp < 0) {\n      t = t.left;\n    } else if (cmp > 0) {\n      t = t.right;\n    } else {\n      var oldValue = t.value;\n      t.value = value;\n      return oldValue\n    }\n  } while (t !== null)\n  var e = {\n    key: key,\n    left: null,\n    right: null,\n    value: value,\n    parent: parent,\n    color: BLACK,\n    getValue: function getValue () { return this.value },\n    getKey: function getKey () { return this.key }\n  };\n  if (cmp < 0) {\n    parent.left = e;\n  } else {\n    parent.right = e;\n  }\n  this.fixAfterInsertion(e);\n  this.size_++;\n  return null\n};\n\n/**\n * @param {Object} x\n */\nTreeMap.prototype.fixAfterInsertion = function (x) {\n  var this$1 = this;\n\n  x.color = RED;\n  while (x != null && x !== this.root_ && x.parent.color === RED) {\n    if (parentOf(x) === leftOf(parentOf(parentOf(x)))) {\n      var y = rightOf(parentOf(parentOf(x)));\n      if (colorOf(y) === RED) {\n        setColor(parentOf(x), BLACK);\n        setColor(y, BLACK);\n        setColor(parentOf(parentOf(x)), RED);\n        x = parentOf(parentOf(x));\n      } else {\n        if (x === rightOf(parentOf(x))) {\n          x = parentOf(x);\n          this$1.rotateLeft(x);\n        }\n        setColor(parentOf(x), BLACK);\n        setColor(parentOf(parentOf(x)), RED);\n        this$1.rotateRight(parentOf(parentOf(x)));\n      }\n    } else {\n      var y$1 = leftOf(parentOf(parentOf(x)));\n      if (colorOf(y$1) === RED) {\n        setColor(parentOf(x), BLACK);\n        setColor(y$1, BLACK);\n        setColor(parentOf(parentOf(x)), RED);\n        x = parentOf(parentOf(x));\n      } else {\n        if (x === leftOf(parentOf(x))) {\n          x = parentOf(x);\n          this$1.rotateRight(x);\n        }\n        setColor(parentOf(x), BLACK);\n        setColor(parentOf(parentOf(x)), RED);\n        this$1.rotateLeft(parentOf(parentOf(x)));\n      }\n    }\n  }\n  this.root_.color = BLACK;\n};\n\n/**\n * @override\n */\nTreeMap.prototype.values = function () {\n  var arrayList = new ArrayList();\n  var p = this.getFirstEntry();\n  if (p !== null) {\n    arrayList.add(p.value);\n    while ((p = TreeMap.successor(p)) !== null) {\n      arrayList.add(p.value);\n    }\n  }\n  return arrayList\n};\n\n/**\n * @override\n */\nTreeMap.prototype.entrySet = function () {\n  var hashSet = new HashSet();\n  var p = this.getFirstEntry();\n  if (p !== null) {\n    hashSet.add(p);\n    while ((p = TreeMap.successor(p)) !== null) {\n      hashSet.add(p);\n    }\n  }\n  return hashSet\n};\n\n/**\n * @param {Object} p\n */\nTreeMap.prototype.rotateLeft = function (p) {\n  if (p != null) {\n    var r = p.right;\n    p.right = r.left;\n    if (r.left != null) { r.left.parent = p; }\n    r.parent = p.parent;\n    if (p.parent === null) { this.root_ = r; } else if (p.parent.left === p) { p.parent.left = r; } else { p.parent.right = r; }\n    r.left = p;\n    p.parent = r;\n  }\n};\n\n/**\n * @param {Object} p\n */\nTreeMap.prototype.rotateRight = function (p) {\n  if (p != null) {\n    var l = p.left;\n    p.left = l.right;\n    if (l.right != null) { l.right.parent = p; }\n    l.parent = p.parent;\n    if (p.parent === null) { this.root_ = l; } else if (p.parent.right === p) { p.parent.right = l; } else { p.parent.left = l; }\n    l.right = p;\n    p.parent = l;\n  }\n};\n\n/**\n * @return {Object}\n */\nTreeMap.prototype.getFirstEntry = function () {\n  var p = this.root_;\n  if (p != null) {\n    while (p.left != null) {\n      p = p.left;\n    }\n  }\n  return p\n};\n\n/**\n * @param {Object} t\n * @return {Object}\n * @private\n */\nTreeMap.successor = function (t) {\n  if (t === null) { return null } else if (t.right !== null) {\n    var p = t.right;\n    while (p.left !== null) {\n      p = p.left;\n    }\n    return p\n  } else {\n    var p$1 = t.parent;\n    var ch = t;\n    while (p$1 !== null && ch === p$1.right) {\n      ch = p$1;\n      p$1 = p$1.parent;\n    }\n    return p$1\n  }\n};\n\n/**\n * @override\n */\nTreeMap.prototype.size = function () {\n  return this.size_\n};\n\nvar Lineal = function Lineal () {};\n\nLineal.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nLineal.prototype.getClass = function getClass () {\n  return Lineal\n};\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/SortedSet.html\n *\n * @extends {Set}\n * @constructor\n * @private\n */\nfunction SortedSet () {}\nSortedSet.prototype = new Set();\n\n// import Iterator from './Iterator'\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/TreeSet.html\n *\n * @extends {SortedSet}\n * @constructor\n * @private\n */\nfunction TreeSet () {\n  /**\n   * @type {Array}\n   * @private\n  */\n  this.array_ = [];\n\n  if (arguments[0] instanceof Collection) {\n    this.addAll(arguments[0]);\n  }\n}\nTreeSet.prototype = new SortedSet();\n\n/**\n * @override\n */\nTreeSet.prototype.contains = function (o) {\n  var this$1 = this;\n\n  for (var i = 0, len = this.array_.length; i < len; i++) {\n    var e = this$1.array_[i];\n    if (e['compareTo'](o) === 0) {\n      return true\n    }\n  }\n  return false\n};\n\n/**\n * @override\n */\nTreeSet.prototype.add = function (o) {\n  var this$1 = this;\n\n  if (this.contains(o)) {\n    return false\n  }\n\n  for (var i = 0, len = this.array_.length; i < len; i++) {\n    var e = this$1.array_[i];\n    if (e['compareTo'](o) === 1) {\n      this$1.array_.splice(i, 0, o);\n      return true\n    }\n  }\n\n  this.array_.push(o);\n\n  return true\n};\n\n/**\n * @override\n */\nTreeSet.prototype.addAll = function (c) {\n  var this$1 = this;\n\n  for (var i = c.iterator(); i.hasNext();) {\n    this$1.add(i.next());\n  }\n  return true\n};\n\n/**\n * @override\n */\nTreeSet.prototype.remove = function (e) {\n  throw new OperationNotSupported()\n};\n\n/**\n * @override\n */\nTreeSet.prototype.size = function () {\n  return this.array_.length\n};\n\n/**\n * @override\n */\nTreeSet.prototype.isEmpty = function () {\n  return this.array_.length === 0\n};\n\n/**\n * @override\n */\nTreeSet.prototype.toArray = function () {\n  var this$1 = this;\n\n  var array = [];\n\n  for (var i = 0, len = this.array_.length; i < len; i++) {\n    array.push(this$1.array_[i]);\n  }\n\n  return array\n};\n\n/**\n * @override\n */\nTreeSet.prototype.iterator = function () {\n  return new Iterator_$2(this)\n};\n\n/**\n * @extends {javascript.util.Iterator}\n * @param {javascript.util.TreeSet} treeSet\n * @constructor\n * @private\n */\nvar Iterator_$2 = function (treeSet) {\n  /**\n   * @type {javascript.util.TreeSet}\n   * @private\n   */\n  this.treeSet_ = treeSet;\n  /**\n   * @type {number}\n   * @private\n   */\n  this.position_ = 0;\n};\n\n/**\n * @override\n */\nIterator_$2.prototype.next = function () {\n  if (this.position_ === this.treeSet_.size()) {\n    throw new NoSuchElementException()\n  }\n  return this.treeSet_.array_[this.position_++]\n};\n\n/**\n * @override\n */\nIterator_$2.prototype.hasNext = function () {\n  if (this.position_ < this.treeSet_.size()) {\n    return true\n  } else {\n    return false\n  }\n};\n\n/**\n * @override\n */\nIterator_$2.prototype.remove = function () {\n  throw new OperationNotSupported()\n};\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/Arrays.html\n *\n * @constructor\n * @private\n */\nvar Arrays = function Arrays () {};\n\nArrays.sort = function sort () {\n  var a = arguments[0];\n  var i;\n  var t;\n  var comparator;\n  var compare;\n  if (arguments.length === 1) {\n    compare = function (a, b) {\n      return a.compareTo(b)\n    };\n    a.sort(compare);\n  } else if (arguments.length === 2) {\n    comparator = arguments[1];\n    compare = function (a, b) {\n      return comparator['compare'](a, b)\n    };\n    a.sort(compare);\n  } else if (arguments.length === 3) {\n    t = a.slice(arguments[1], arguments[2]);\n    t.sort();\n    var r = a.slice(0, arguments[1]).concat(t, a.slice(arguments[2], a.length));\n    a.splice(0, a.length);\n    for (i = 0; i < r.length; i++) {\n      a.push(r[i]);\n    }\n  } else if (arguments.length === 4) {\n    t = a.slice(arguments[1], arguments[2]);\n    comparator = arguments[3];\n    compare = function (a, b) {\n      return comparator['compare'](a, b)\n    };\n    t.sort(compare);\n    r = a.slice(0, arguments[1]).concat(t, a.slice(arguments[2], a.length));\n    a.splice(0, a.length);\n    for (i = 0; i < r.length; i++) {\n      a.push(r[i]);\n    }\n  }\n};\n/**\n * @param {Array} array\n * @return {ArrayList}\n */\nArrays.asList = function asList (array) {\n  var arrayList = new ArrayList();\n  for (var i = 0, len = array.length; i < len; i++) {\n    arrayList.add(array[i]);\n  }\n  return arrayList\n};\n\nvar Dimension = function Dimension () {};\n\nvar staticAccessors$14 = { P: { configurable: true },L: { configurable: true },A: { configurable: true },FALSE: { configurable: true },TRUE: { configurable: true },DONTCARE: { configurable: true },SYM_FALSE: { configurable: true },SYM_TRUE: { configurable: true },SYM_DONTCARE: { configurable: true },SYM_P: { configurable: true },SYM_L: { configurable: true },SYM_A: { configurable: true } };\n\nstaticAccessors$14.P.get = function () { return 0 };\nstaticAccessors$14.L.get = function () { return 1 };\nstaticAccessors$14.A.get = function () { return 2 };\nstaticAccessors$14.FALSE.get = function () { return -1 };\nstaticAccessors$14.TRUE.get = function () { return -2 };\nstaticAccessors$14.DONTCARE.get = function () { return -3 };\nstaticAccessors$14.SYM_FALSE.get = function () { return 'F' };\nstaticAccessors$14.SYM_TRUE.get = function () { return 'T' };\nstaticAccessors$14.SYM_DONTCARE.get = function () { return '*' };\nstaticAccessors$14.SYM_P.get = function () { return '0' };\nstaticAccessors$14.SYM_L.get = function () { return '1' };\nstaticAccessors$14.SYM_A.get = function () { return '2' };\n\nDimension.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nDimension.prototype.getClass = function getClass () {\n  return Dimension\n};\nDimension.toDimensionSymbol = function toDimensionSymbol (dimensionValue) {\n  switch (dimensionValue) {\n    case Dimension.FALSE:\n      return Dimension.SYM_FALSE\n    case Dimension.TRUE:\n      return Dimension.SYM_TRUE\n    case Dimension.DONTCARE:\n      return Dimension.SYM_DONTCARE\n    case Dimension.P:\n      return Dimension.SYM_P\n    case Dimension.L:\n      return Dimension.SYM_L\n    case Dimension.A:\n      return Dimension.SYM_A\n    default:\n  }\n  throw new IllegalArgumentException('Unknown dimension value: ' + dimensionValue)\n};\nDimension.toDimensionValue = function toDimensionValue (dimensionSymbol) {\n  switch (Character.toUpperCase(dimensionSymbol)) {\n    case Dimension.SYM_FALSE:\n      return Dimension.FALSE\n    case Dimension.SYM_TRUE:\n      return Dimension.TRUE\n    case Dimension.SYM_DONTCARE:\n      return Dimension.DONTCARE\n    case Dimension.SYM_P:\n      return Dimension.P\n    case Dimension.SYM_L:\n      return Dimension.L\n    case Dimension.SYM_A:\n      return Dimension.A\n    default:\n  }\n  throw new IllegalArgumentException('Unknown dimension symbol: ' + dimensionSymbol)\n};\n\nObject.defineProperties( Dimension, staticAccessors$14 );\n\nvar GeometryFilter = function GeometryFilter () {};\n\nGeometryFilter.prototype.filter = function filter (geom) {};\nGeometryFilter.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nGeometryFilter.prototype.getClass = function getClass () {\n  return GeometryFilter\n};\n\nvar CoordinateSequenceFilter = function CoordinateSequenceFilter () {};\n\nCoordinateSequenceFilter.prototype.filter = function filter (seq, i) {};\nCoordinateSequenceFilter.prototype.isDone = function isDone () {};\nCoordinateSequenceFilter.prototype.isGeometryChanged = function isGeometryChanged () {};\nCoordinateSequenceFilter.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nCoordinateSequenceFilter.prototype.getClass = function getClass () {\n  return CoordinateSequenceFilter\n};\n\nvar GeometryCollection = (function (Geometry$$1) {\n  function GeometryCollection (geometries, factory) {\n    Geometry$$1.call(this, factory);\n    this._geometries = geometries || [];\n\n    if (Geometry$$1.hasNullElements(this._geometries)) {\n      throw new IllegalArgumentException('geometries must not contain null elements')\n    }\n  }\n\n  if ( Geometry$$1 ) GeometryCollection.__proto__ = Geometry$$1;\n  GeometryCollection.prototype = Object.create( Geometry$$1 && Geometry$$1.prototype );\n  GeometryCollection.prototype.constructor = GeometryCollection;\n\n  var staticAccessors = { serialVersionUID: { configurable: true } };\n  GeometryCollection.prototype.computeEnvelopeInternal = function computeEnvelopeInternal () {\n    var this$1 = this;\n\n    var envelope = new Envelope();\n    for (var i = 0; i < this._geometries.length; i++) {\n      envelope.expandToInclude(this$1._geometries[i].getEnvelopeInternal());\n    }\n    return envelope\n  };\n  GeometryCollection.prototype.getGeometryN = function getGeometryN (n) {\n    return this._geometries[n]\n  };\n  GeometryCollection.prototype.getSortIndex = function getSortIndex () {\n    return Geometry$$1.SORTINDEX_GEOMETRYCOLLECTION\n  };\n  GeometryCollection.prototype.getCoordinates = function getCoordinates () {\n    var this$1 = this;\n\n    var coordinates = new Array(this.getNumPoints()).fill(null);\n    var k = -1;\n    for (var i = 0; i < this._geometries.length; i++) {\n      var childCoordinates = this$1._geometries[i].getCoordinates();\n      for (var j = 0; j < childCoordinates.length; j++) {\n        k++;\n        coordinates[k] = childCoordinates[j];\n      }\n    }\n    return coordinates\n  };\n  GeometryCollection.prototype.getArea = function getArea () {\n    var this$1 = this;\n\n    var area = 0.0;\n    for (var i = 0; i < this._geometries.length; i++) {\n      area += this$1._geometries[i].getArea();\n    }\n    return area\n  };\n  GeometryCollection.prototype.equalsExact = function equalsExact () {\n    var this$1 = this;\n\n    if (arguments.length === 2) {\n      var other = arguments[0];\n      var tolerance = arguments[1];\n      if (!this.isEquivalentClass(other)) {\n        return false\n      }\n      var otherCollection = other;\n      if (this._geometries.length !== otherCollection._geometries.length) {\n        return false\n      }\n      for (var i = 0; i < this._geometries.length; i++) {\n        if (!this$1._geometries[i].equalsExact(otherCollection._geometries[i], tolerance)) {\n          return false\n        }\n      }\n      return true\n    } else { return Geometry$$1.prototype.equalsExact.apply(this, arguments) }\n  };\n  GeometryCollection.prototype.normalize = function normalize () {\n    var this$1 = this;\n\n    for (var i = 0; i < this._geometries.length; i++) {\n      this$1._geometries[i].normalize();\n    }\n    Arrays.sort(this._geometries);\n  };\n  GeometryCollection.prototype.getCoordinate = function getCoordinate () {\n    if (this.isEmpty()) { return null }\n    return this._geometries[0].getCoordinate()\n  };\n  GeometryCollection.prototype.getBoundaryDimension = function getBoundaryDimension () {\n    var this$1 = this;\n\n    var dimension = Dimension.FALSE;\n    for (var i = 0; i < this._geometries.length; i++) {\n      dimension = Math.max(dimension, this$1._geometries[i].getBoundaryDimension());\n    }\n    return dimension\n  };\n  GeometryCollection.prototype.getDimension = function getDimension () {\n    var this$1 = this;\n\n    var dimension = Dimension.FALSE;\n    for (var i = 0; i < this._geometries.length; i++) {\n      dimension = Math.max(dimension, this$1._geometries[i].getDimension());\n    }\n    return dimension\n  };\n  GeometryCollection.prototype.getLength = function getLength () {\n    var this$1 = this;\n\n    var sum = 0.0;\n    for (var i = 0; i < this._geometries.length; i++) {\n      sum += this$1._geometries[i].getLength();\n    }\n    return sum\n  };\n  GeometryCollection.prototype.getNumPoints = function getNumPoints () {\n    var this$1 = this;\n\n    var numPoints = 0;\n    for (var i = 0; i < this._geometries.length; i++) {\n      numPoints += this$1._geometries[i].getNumPoints();\n    }\n    return numPoints\n  };\n  GeometryCollection.prototype.getNumGeometries = function getNumGeometries () {\n    return this._geometries.length\n  };\n  GeometryCollection.prototype.reverse = function reverse () {\n    var this$1 = this;\n\n    var n = this._geometries.length;\n    var revGeoms = new Array(n).fill(null);\n    for (var i = 0; i < this._geometries.length; i++) {\n      revGeoms[i] = this$1._geometries[i].reverse();\n    }\n    return this.getFactory().createGeometryCollection(revGeoms)\n  };\n  GeometryCollection.prototype.compareToSameClass = function compareToSameClass () {\n    var this$1 = this;\n\n    if (arguments.length === 1) {\n      var o = arguments[0];\n      var theseElements = new TreeSet(Arrays.asList(this._geometries));\n      var otherElements = new TreeSet(Arrays.asList(o._geometries));\n      return this.compare(theseElements, otherElements)\n    } else if (arguments.length === 2) {\n      var o$1 = arguments[0];\n      var comp = arguments[1];\n      var gc = o$1;\n      var n1 = this.getNumGeometries();\n      var n2 = gc.getNumGeometries();\n      var i = 0;\n      while (i < n1 && i < n2) {\n        var thisGeom = this$1.getGeometryN(i);\n        var otherGeom = gc.getGeometryN(i);\n        var holeComp = thisGeom.compareToSameClass(otherGeom, comp);\n        if (holeComp !== 0) { return holeComp }\n        i++;\n      }\n      if (i < n1) { return 1 }\n      if (i < n2) { return -1 }\n      return 0\n    }\n  };\n  GeometryCollection.prototype.apply = function apply () {\n    var this$1 = this;\n\n    if (hasInterface(arguments[0], CoordinateFilter)) {\n      var filter = arguments[0];\n      for (var i = 0; i < this._geometries.length; i++) {\n        this$1._geometries[i].apply(filter);\n      }\n    } else if (hasInterface(arguments[0], CoordinateSequenceFilter)) {\n      var filter$1 = arguments[0];\n      if (this._geometries.length === 0) { return null }\n      for (var i$1 = 0; i$1 < this._geometries.length; i$1++) {\n        this$1._geometries[i$1].apply(filter$1);\n        if (filter$1.isDone()) {\n          break\n        }\n      }\n      if (filter$1.isGeometryChanged()) { this.geometryChanged(); }\n    } else if (hasInterface(arguments[0], GeometryFilter)) {\n      var filter$2 = arguments[0];\n      filter$2.filter(this);\n      for (var i$2 = 0; i$2 < this._geometries.length; i$2++) {\n        this$1._geometries[i$2].apply(filter$2);\n      }\n    } else if (hasInterface(arguments[0], GeometryComponentFilter)) {\n      var filter$3 = arguments[0];\n      filter$3.filter(this);\n      for (var i$3 = 0; i$3 < this._geometries.length; i$3++) {\n        this$1._geometries[i$3].apply(filter$3);\n      }\n    }\n  };\n  GeometryCollection.prototype.getBoundary = function getBoundary () {\n    this.checkNotGeometryCollection(this);\n    Assert.shouldNeverReachHere();\n    return null\n  };\n  GeometryCollection.prototype.clone = function clone () {\n    var this$1 = this;\n\n    var gc = Geometry$$1.prototype.clone.call(this);\n    gc._geometries = new Array(this._geometries.length).fill(null);\n    for (var i = 0; i < this._geometries.length; i++) {\n      gc._geometries[i] = this$1._geometries[i].clone();\n    }\n    return gc\n  };\n  GeometryCollection.prototype.getGeometryType = function getGeometryType () {\n    return 'GeometryCollection'\n  };\n  GeometryCollection.prototype.copy = function copy () {\n    var this$1 = this;\n\n    var geometries = new Array(this._geometries.length).fill(null);\n    for (var i = 0; i < geometries.length; i++) {\n      geometries[i] = this$1._geometries[i].copy();\n    }\n    return new GeometryCollection(geometries, this._factory)\n  };\n  GeometryCollection.prototype.isEmpty = function isEmpty () {\n    var this$1 = this;\n\n    for (var i = 0; i < this._geometries.length; i++) {\n      if (!this$1._geometries[i].isEmpty()) {\n        return false\n      }\n    }\n    return true\n  };\n  GeometryCollection.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  GeometryCollection.prototype.getClass = function getClass () {\n    return GeometryCollection\n  };\n  staticAccessors.serialVersionUID.get = function () { return -5694727726395021467 };\n\n  Object.defineProperties( GeometryCollection, staticAccessors );\n\n  return GeometryCollection;\n}(Geometry));\n\nvar MultiLineString = (function (GeometryCollection$$1) {\n  function MultiLineString () {\n    GeometryCollection$$1.apply(this, arguments);\n  }\n\n  if ( GeometryCollection$$1 ) MultiLineString.__proto__ = GeometryCollection$$1;\n  MultiLineString.prototype = Object.create( GeometryCollection$$1 && GeometryCollection$$1.prototype );\n  MultiLineString.prototype.constructor = MultiLineString;\n\n  var staticAccessors = { serialVersionUID: { configurable: true } };\n\n  MultiLineString.prototype.getSortIndex = function getSortIndex () {\n    return Geometry.SORTINDEX_MULTILINESTRING\n  };\n  MultiLineString.prototype.equalsExact = function equalsExact () {\n    if (arguments.length === 2) {\n      var other = arguments[0];\n      var tolerance = arguments[1];\n      if (!this.isEquivalentClass(other)) {\n        return false\n      }\n      return GeometryCollection$$1.prototype.equalsExact.call(this, other, tolerance)\n    } else { return GeometryCollection$$1.prototype.equalsExact.apply(this, arguments) }\n  };\n  MultiLineString.prototype.getBoundaryDimension = function getBoundaryDimension () {\n    if (this.isClosed()) {\n      return Dimension.FALSE\n    }\n    return 0\n  };\n  MultiLineString.prototype.isClosed = function isClosed () {\n    var this$1 = this;\n\n    if (this.isEmpty()) {\n      return false\n    }\n    for (var i = 0; i < this._geometries.length; i++) {\n      if (!this$1._geometries[i].isClosed()) {\n        return false\n      }\n    }\n    return true\n  };\n  MultiLineString.prototype.getDimension = function getDimension () {\n    return 1\n  };\n  MultiLineString.prototype.reverse = function reverse () {\n    var this$1 = this;\n\n    var nLines = this._geometries.length;\n    var revLines = new Array(nLines).fill(null);\n    for (var i = 0; i < this._geometries.length; i++) {\n      revLines[nLines - 1 - i] = this$1._geometries[i].reverse();\n    }\n    return this.getFactory().createMultiLineString(revLines)\n  };\n  MultiLineString.prototype.getBoundary = function getBoundary () {\n    return new BoundaryOp(this).getBoundary()\n  };\n  MultiLineString.prototype.getGeometryType = function getGeometryType () {\n    return 'MultiLineString'\n  };\n  MultiLineString.prototype.copy = function copy () {\n    var this$1 = this;\n\n    var lineStrings = new Array(this._geometries.length).fill(null);\n    for (var i = 0; i < lineStrings.length; i++) {\n      lineStrings[i] = this$1._geometries[i].copy();\n    }\n    return new MultiLineString(lineStrings, this._factory)\n  };\n  MultiLineString.prototype.interfaces_ = function interfaces_ () {\n    return [Lineal]\n  };\n  MultiLineString.prototype.getClass = function getClass () {\n    return MultiLineString\n  };\n  staticAccessors.serialVersionUID.get = function () { return 8166665132445433741 };\n\n  Object.defineProperties( MultiLineString, staticAccessors );\n\n  return MultiLineString;\n}(GeometryCollection));\n\nvar BoundaryOp = function BoundaryOp () {\n  this._geom = null;\n  this._geomFact = null;\n  this._bnRule = null;\n  this._endpointMap = null;\n  if (arguments.length === 1) {\n    var geom = arguments[0];\n    var bnRule = BoundaryNodeRule.MOD2_BOUNDARY_RULE;\n    this._geom = geom;\n    this._geomFact = geom.getFactory();\n    this._bnRule = bnRule;\n  } else if (arguments.length === 2) {\n    var geom$1 = arguments[0];\n    var bnRule$1 = arguments[1];\n    this._geom = geom$1;\n    this._geomFact = geom$1.getFactory();\n    this._bnRule = bnRule$1;\n  }\n};\nBoundaryOp.prototype.boundaryMultiLineString = function boundaryMultiLineString (mLine) {\n  if (this._geom.isEmpty()) {\n    return this.getEmptyMultiPoint()\n  }\n  var bdyPts = this.computeBoundaryCoordinates(mLine);\n  if (bdyPts.length === 1) {\n    return this._geomFact.createPoint(bdyPts[0])\n  }\n  return this._geomFact.createMultiPointFromCoords(bdyPts)\n};\nBoundaryOp.prototype.getBoundary = function getBoundary () {\n  if (this._geom instanceof LineString) { return this.boundaryLineString(this._geom) }\n  if (this._geom instanceof MultiLineString) { return this.boundaryMultiLineString(this._geom) }\n  return this._geom.getBoundary()\n};\nBoundaryOp.prototype.boundaryLineString = function boundaryLineString (line) {\n  if (this._geom.isEmpty()) {\n    return this.getEmptyMultiPoint()\n  }\n  if (line.isClosed()) {\n    var closedEndpointOnBoundary = this._bnRule.isInBoundary(2);\n    if (closedEndpointOnBoundary) {\n      return line.getStartPoint()\n    } else {\n      return this._geomFact.createMultiPoint()\n    }\n  }\n  return this._geomFact.createMultiPoint([line.getStartPoint(), line.getEndPoint()])\n};\nBoundaryOp.prototype.getEmptyMultiPoint = function getEmptyMultiPoint () {\n  return this._geomFact.createMultiPoint()\n};\nBoundaryOp.prototype.computeBoundaryCoordinates = function computeBoundaryCoordinates (mLine) {\n    var this$1 = this;\n\n  var bdyPts = new ArrayList();\n  this._endpointMap = new TreeMap();\n  for (var i = 0; i < mLine.getNumGeometries(); i++) {\n    var line = mLine.getGeometryN(i);\n    if (line.getNumPoints() === 0) { continue }\n    this$1.addEndpoint(line.getCoordinateN(0));\n    this$1.addEndpoint(line.getCoordinateN(line.getNumPoints() - 1));\n  }\n  for (var it = this._endpointMap.entrySet().iterator(); it.hasNext();) {\n    var entry = it.next();\n    var counter = entry.getValue();\n    var valence = counter.count;\n    if (this$1._bnRule.isInBoundary(valence)) {\n      bdyPts.add(entry.getKey());\n    }\n  }\n  return CoordinateArrays.toCoordinateArray(bdyPts)\n};\nBoundaryOp.prototype.addEndpoint = function addEndpoint (pt) {\n  var counter = this._endpointMap.get(pt);\n  if (counter === null) {\n    counter = new Counter();\n    this._endpointMap.put(pt, counter);\n  }\n  counter.count++;\n};\nBoundaryOp.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nBoundaryOp.prototype.getClass = function getClass () {\n  return BoundaryOp\n};\nBoundaryOp.getBoundary = function getBoundary () {\n  if (arguments.length === 1) {\n    var g = arguments[0];\n    var bop = new BoundaryOp(g);\n    return bop.getBoundary()\n  } else if (arguments.length === 2) {\n    var g$1 = arguments[0];\n    var bnRule = arguments[1];\n    var bop$1 = new BoundaryOp(g$1, bnRule);\n    return bop$1.getBoundary()\n  }\n};\n\nvar Counter = function Counter () {\n  this.count = null;\n};\nCounter.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nCounter.prototype.getClass = function getClass () {\n  return Counter\n};\n\n// boundary\n\nfunction PrintStream () {}\n\nfunction StringReader () {}\n\nvar DecimalFormat = function DecimalFormat () {};\n\nfunction ByteArrayOutputStream () {}\n\nfunction IOException () {}\n\nfunction LineNumberReader () {}\n\nvar StringUtil = function StringUtil () {};\n\nvar staticAccessors$15 = { NEWLINE: { configurable: true },SIMPLE_ORDINATE_FORMAT: { configurable: true } };\n\nStringUtil.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nStringUtil.prototype.getClass = function getClass () {\n  return StringUtil\n};\nStringUtil.chars = function chars (c, n) {\n  var ch = new Array(n).fill(null);\n  for (var i = 0; i < n; i++) {\n    ch[i] = c;\n  }\n  return String(ch)\n};\nStringUtil.getStackTrace = function getStackTrace () {\n  if (arguments.length === 1) {\n    var t = arguments[0];\n    var os = new ByteArrayOutputStream();\n    var ps = new PrintStream(os);\n    t.printStackTrace(ps);\n    return os.toString()\n  } else if (arguments.length === 2) {\n    var t$1 = arguments[0];\n    var depth = arguments[1];\n    var stackTrace = '';\n    var stringReader = new StringReader(StringUtil.getStackTrace(t$1));\n    var lineNumberReader = new LineNumberReader(stringReader);\n    for (var i = 0; i < depth; i++) {\n      try {\n        stackTrace += lineNumberReader.readLine() + StringUtil.NEWLINE;\n      } catch (e) {\n        if (e instanceof IOException) {\n          Assert.shouldNeverReachHere();\n        } else { throw e }\n      } finally {}\n    }\n    return stackTrace\n  }\n};\nStringUtil.split = function split (s, separator) {\n  var separatorlen = separator.length;\n  var tokenList = new ArrayList();\n  var tmpString = '' + s;\n  var pos = tmpString.indexOf(separator);\n  while (pos >= 0) {\n    var token = tmpString.substring(0, pos);\n    tokenList.add(token);\n    tmpString = tmpString.substring(pos + separatorlen);\n    pos = tmpString.indexOf(separator);\n  }\n  if (tmpString.length > 0) { tokenList.add(tmpString); }\n  var res = new Array(tokenList.size()).fill(null);\n  for (var i = 0; i < res.length; i++) {\n    res[i] = tokenList.get(i);\n  }\n  return res\n};\nStringUtil.toString = function toString () {\n  if (arguments.length === 1) {\n    var d = arguments[0];\n    return StringUtil.SIMPLE_ORDINATE_FORMAT.format(d)\n  }\n};\nStringUtil.spaces = function spaces (n) {\n  return StringUtil.chars(' ', n)\n};\nstaticAccessors$15.NEWLINE.get = function () { return System.getProperty('line.separator') };\nstaticAccessors$15.SIMPLE_ORDINATE_FORMAT.get = function () { return new DecimalFormat('0.#') };\n\nObject.defineProperties( StringUtil, staticAccessors$15 );\n\nvar CoordinateSequences = function CoordinateSequences () {};\n\nCoordinateSequences.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nCoordinateSequences.prototype.getClass = function getClass () {\n  return CoordinateSequences\n};\nCoordinateSequences.copyCoord = function copyCoord (src, srcPos, dest, destPos) {\n  var minDim = Math.min(src.getDimension(), dest.getDimension());\n  for (var dim = 0; dim < minDim; dim++) {\n    dest.setOrdinate(destPos, dim, src.getOrdinate(srcPos, dim));\n  }\n};\nCoordinateSequences.isRing = function isRing (seq) {\n  var n = seq.size();\n  if (n === 0) { return true }\n  if (n <= 3) { return false }\n  return seq.getOrdinate(0, CoordinateSequence.X) === seq.getOrdinate(n - 1, CoordinateSequence.X) && seq.getOrdinate(0, CoordinateSequence.Y) === seq.getOrdinate(n - 1, CoordinateSequence.Y)\n};\nCoordinateSequences.isEqual = function isEqual (cs1, cs2) {\n  var cs1Size = cs1.size();\n  var cs2Size = cs2.size();\n  if (cs1Size !== cs2Size) { return false }\n  var dim = Math.min(cs1.getDimension(), cs2.getDimension());\n  for (var i = 0; i < cs1Size; i++) {\n    for (var d = 0; d < dim; d++) {\n      var v1 = cs1.getOrdinate(i, d);\n      var v2 = cs2.getOrdinate(i, d);\n      if (cs1.getOrdinate(i, d) === cs2.getOrdinate(i, d)) { continue }\n      if (Double.isNaN(v1) && Double.isNaN(v2)) { continue }\n      return false\n    }\n  }\n  return true\n};\nCoordinateSequences.extend = function extend (fact, seq, size) {\n  var newseq = fact.create(size, seq.getDimension());\n  var n = seq.size();\n  CoordinateSequences.copy(seq, 0, newseq, 0, n);\n  if (n > 0) {\n    for (var i = n; i < size; i++) { CoordinateSequences.copy(seq, n - 1, newseq, i, 1); }\n  }\n  return newseq\n};\nCoordinateSequences.reverse = function reverse (seq) {\n  var last = seq.size() - 1;\n  var mid = Math.trunc(last / 2);\n  for (var i = 0; i <= mid; i++) {\n    CoordinateSequences.swap(seq, i, last - i);\n  }\n};\nCoordinateSequences.swap = function swap (seq, i, j) {\n  if (i === j) { return null }\n  for (var dim = 0; dim < seq.getDimension(); dim++) {\n    var tmp = seq.getOrdinate(i, dim);\n    seq.setOrdinate(i, dim, seq.getOrdinate(j, dim));\n    seq.setOrdinate(j, dim, tmp);\n  }\n};\nCoordinateSequences.copy = function copy (src, srcPos, dest, destPos, length) {\n  for (var i = 0; i < length; i++) {\n    CoordinateSequences.copyCoord(src, srcPos + i, dest, destPos + i);\n  }\n};\nCoordinateSequences.toString = function toString () {\n  if (arguments.length === 1) {\n    var cs = arguments[0];\n    var size = cs.size();\n    if (size === 0) { return '()' }\n    var dim = cs.getDimension();\n    var buf = new StringBuffer();\n    buf.append('(');\n    for (var i = 0; i < size; i++) {\n      if (i > 0) { buf.append(' '); }\n      for (var d = 0; d < dim; d++) {\n        if (d > 0) { buf.append(','); }\n        buf.append(StringUtil.toString(cs.getOrdinate(i, d)));\n      }\n    }\n    buf.append(')');\n    return buf.toString()\n  }\n};\nCoordinateSequences.ensureValidRing = function ensureValidRing (fact, seq) {\n  var n = seq.size();\n  if (n === 0) { return seq }\n  if (n <= 3) { return CoordinateSequences.createClosedRing(fact, seq, 4) }\n  var isClosed = seq.getOrdinate(0, CoordinateSequence.X) === seq.getOrdinate(n - 1, CoordinateSequence.X) && seq.getOrdinate(0, CoordinateSequence.Y) === seq.getOrdinate(n - 1, CoordinateSequence.Y);\n  if (isClosed) { return seq }\n  return CoordinateSequences.createClosedRing(fact, seq, n + 1)\n};\nCoordinateSequences.createClosedRing = function createClosedRing (fact, seq, size) {\n  var newseq = fact.create(size, seq.getDimension());\n  var n = seq.size();\n  CoordinateSequences.copy(seq, 0, newseq, 0, n);\n  for (var i = n; i < size; i++) { CoordinateSequences.copy(seq, 0, newseq, i, 1); }\n  return newseq\n};\n\nvar LineString = (function (Geometry$$1) {\n  function LineString (points, factory) {\n    Geometry$$1.call(this, factory);\n    this._points = null;\n    this.init(points);\n  }\n\n  if ( Geometry$$1 ) LineString.__proto__ = Geometry$$1;\n  LineString.prototype = Object.create( Geometry$$1 && Geometry$$1.prototype );\n  LineString.prototype.constructor = LineString;\n\n  var staticAccessors = { serialVersionUID: { configurable: true } };\n  LineString.prototype.computeEnvelopeInternal = function computeEnvelopeInternal () {\n    if (this.isEmpty()) {\n      return new Envelope()\n    }\n    return this._points.expandEnvelope(new Envelope())\n  };\n  LineString.prototype.isRing = function isRing () {\n    return this.isClosed() && this.isSimple()\n  };\n  LineString.prototype.getSortIndex = function getSortIndex () {\n    return Geometry$$1.SORTINDEX_LINESTRING\n  };\n  LineString.prototype.getCoordinates = function getCoordinates () {\n    return this._points.toCoordinateArray()\n  };\n  LineString.prototype.equalsExact = function equalsExact () {\n    var this$1 = this;\n\n    if (arguments.length === 2) {\n      var other = arguments[0];\n      var tolerance = arguments[1];\n      if (!this.isEquivalentClass(other)) {\n        return false\n      }\n      var otherLineString = other;\n      if (this._points.size() !== otherLineString._points.size()) {\n        return false\n      }\n      for (var i = 0; i < this._points.size(); i++) {\n        if (!this$1.equal(this$1._points.getCoordinate(i), otherLineString._points.getCoordinate(i), tolerance)) {\n          return false\n        }\n      }\n      return true\n    } else { return Geometry$$1.prototype.equalsExact.apply(this, arguments) }\n  };\n  LineString.prototype.normalize = function normalize () {\n    var this$1 = this;\n\n    for (var i = 0; i < Math.trunc(this._points.size() / 2); i++) {\n      var j = this$1._points.size() - 1 - i;\n      if (!this$1._points.getCoordinate(i).equals(this$1._points.getCoordinate(j))) {\n        if (this$1._points.getCoordinate(i).compareTo(this$1._points.getCoordinate(j)) > 0) {\n          CoordinateSequences.reverse(this$1._points);\n        }\n        return null\n      }\n    }\n  };\n  LineString.prototype.getCoordinate = function getCoordinate () {\n    if (this.isEmpty()) { return null }\n    return this._points.getCoordinate(0)\n  };\n  LineString.prototype.getBoundaryDimension = function getBoundaryDimension () {\n    if (this.isClosed()) {\n      return Dimension.FALSE\n    }\n    return 0\n  };\n  LineString.prototype.isClosed = function isClosed () {\n    if (this.isEmpty()) {\n      return false\n    }\n    return this.getCoordinateN(0).equals2D(this.getCoordinateN(this.getNumPoints() - 1))\n  };\n  LineString.prototype.getEndPoint = function getEndPoint () {\n    if (this.isEmpty()) {\n      return null\n    }\n    return this.getPointN(this.getNumPoints() - 1)\n  };\n  LineString.prototype.getDimension = function getDimension () {\n    return 1\n  };\n  LineString.prototype.getLength = function getLength () {\n    return CGAlgorithms.computeLength(this._points)\n  };\n  LineString.prototype.getNumPoints = function getNumPoints () {\n    return this._points.size()\n  };\n  LineString.prototype.reverse = function reverse () {\n    var seq = this._points.copy();\n    CoordinateSequences.reverse(seq);\n    var revLine = this.getFactory().createLineString(seq);\n    return revLine\n  };\n  LineString.prototype.compareToSameClass = function compareToSameClass () {\n    var this$1 = this;\n\n    if (arguments.length === 1) {\n      var o = arguments[0];\n      var line = o;\n      var i = 0;\n      var j = 0;\n      while (i < this._points.size() && j < line._points.size()) {\n        var comparison = this$1._points.getCoordinate(i).compareTo(line._points.getCoordinate(j));\n        if (comparison !== 0) {\n          return comparison\n        }\n        i++;\n        j++;\n      }\n      if (i < this._points.size()) {\n        return 1\n      }\n      if (j < line._points.size()) {\n        return -1\n      }\n      return 0\n    } else if (arguments.length === 2) {\n      var o$1 = arguments[0];\n      var comp = arguments[1];\n      var line$1 = o$1;\n      return comp.compare(this._points, line$1._points)\n    }\n  };\n  LineString.prototype.apply = function apply () {\n    var this$1 = this;\n\n    if (hasInterface(arguments[0], CoordinateFilter)) {\n      var filter = arguments[0];\n      for (var i = 0; i < this._points.size(); i++) {\n        filter.filter(this$1._points.getCoordinate(i));\n      }\n    } else if (hasInterface(arguments[0], CoordinateSequenceFilter)) {\n      var filter$1 = arguments[0];\n      if (this._points.size() === 0) { return null }\n      for (var i$1 = 0; i$1 < this._points.size(); i$1++) {\n        filter$1.filter(this$1._points, i$1);\n        if (filter$1.isDone()) { break }\n      }\n      if (filter$1.isGeometryChanged()) { this.geometryChanged(); }\n    } else if (hasInterface(arguments[0], GeometryFilter)) {\n      var filter$2 = arguments[0];\n      filter$2.filter(this);\n    } else if (hasInterface(arguments[0], GeometryComponentFilter)) {\n      var filter$3 = arguments[0];\n      filter$3.filter(this);\n    }\n  };\n  LineString.prototype.getBoundary = function getBoundary () {\n    return new BoundaryOp(this).getBoundary()\n  };\n  LineString.prototype.isEquivalentClass = function isEquivalentClass (other) {\n    return other instanceof LineString\n  };\n  LineString.prototype.clone = function clone () {\n    var ls = Geometry$$1.prototype.clone.call(this);\n    ls._points = this._points.clone();\n    return ls\n  };\n  LineString.prototype.getCoordinateN = function getCoordinateN (n) {\n    return this._points.getCoordinate(n)\n  };\n  LineString.prototype.getGeometryType = function getGeometryType () {\n    return 'LineString'\n  };\n  LineString.prototype.copy = function copy () {\n    return new LineString(this._points.copy(), this._factory)\n  };\n  LineString.prototype.getCoordinateSequence = function getCoordinateSequence () {\n    return this._points\n  };\n  LineString.prototype.isEmpty = function isEmpty () {\n    return this._points.size() === 0\n  };\n  LineString.prototype.init = function init (points) {\n    if (points === null) {\n      points = this.getFactory().getCoordinateSequenceFactory().create([]);\n    }\n    if (points.size() === 1) {\n      throw new IllegalArgumentException('Invalid number of points in LineString (found ' + points.size() + ' - must be 0 or >= 2)')\n    }\n    this._points = points;\n  };\n  LineString.prototype.isCoordinate = function isCoordinate (pt) {\n    var this$1 = this;\n\n    for (var i = 0; i < this._points.size(); i++) {\n      if (this$1._points.getCoordinate(i).equals(pt)) {\n        return true\n      }\n    }\n    return false\n  };\n  LineString.prototype.getStartPoint = function getStartPoint () {\n    if (this.isEmpty()) {\n      return null\n    }\n    return this.getPointN(0)\n  };\n  LineString.prototype.getPointN = function getPointN (n) {\n    return this.getFactory().createPoint(this._points.getCoordinate(n))\n  };\n  LineString.prototype.interfaces_ = function interfaces_ () {\n    return [Lineal]\n  };\n  LineString.prototype.getClass = function getClass () {\n    return LineString\n  };\n  staticAccessors.serialVersionUID.get = function () { return 3110669828065365560 };\n\n  Object.defineProperties( LineString, staticAccessors );\n\n  return LineString;\n}(Geometry));\n\nvar Puntal = function Puntal () {};\n\nPuntal.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nPuntal.prototype.getClass = function getClass () {\n  return Puntal\n};\n\nvar Point = (function (Geometry$$1) {\n  function Point (coordinates, factory) {\n    Geometry$$1.call(this, factory);\n    this._coordinates = coordinates || null;\n    this.init(this._coordinates);\n  }\n\n  if ( Geometry$$1 ) Point.__proto__ = Geometry$$1;\n  Point.prototype = Object.create( Geometry$$1 && Geometry$$1.prototype );\n  Point.prototype.constructor = Point;\n\n  var staticAccessors = { serialVersionUID: { configurable: true } };\n  Point.prototype.computeEnvelopeInternal = function computeEnvelopeInternal () {\n    if (this.isEmpty()) {\n      return new Envelope()\n    }\n    var env = new Envelope();\n    env.expandToInclude(this._coordinates.getX(0), this._coordinates.getY(0));\n    return env\n  };\n  Point.prototype.getSortIndex = function getSortIndex () {\n    return Geometry$$1.SORTINDEX_POINT\n  };\n  Point.prototype.getCoordinates = function getCoordinates () {\n    return this.isEmpty() ? [] : [this.getCoordinate()]\n  };\n  Point.prototype.equalsExact = function equalsExact () {\n    if (arguments.length === 2) {\n      var other = arguments[0];\n      var tolerance = arguments[1];\n      if (!this.isEquivalentClass(other)) {\n        return false\n      }\n      if (this.isEmpty() && other.isEmpty()) {\n        return true\n      }\n      if (this.isEmpty() !== other.isEmpty()) {\n        return false\n      }\n      return this.equal(other.getCoordinate(), this.getCoordinate(), tolerance)\n    } else { return Geometry$$1.prototype.equalsExact.apply(this, arguments) }\n  };\n  Point.prototype.normalize = function normalize () {};\n  Point.prototype.getCoordinate = function getCoordinate () {\n    return this._coordinates.size() !== 0 ? this._coordinates.getCoordinate(0) : null\n  };\n  Point.prototype.getBoundaryDimension = function getBoundaryDimension () {\n    return Dimension.FALSE\n  };\n  Point.prototype.getDimension = function getDimension () {\n    return 0\n  };\n  Point.prototype.getNumPoints = function getNumPoints () {\n    return this.isEmpty() ? 0 : 1\n  };\n  Point.prototype.reverse = function reverse () {\n    return this.copy()\n  };\n  Point.prototype.getX = function getX () {\n    if (this.getCoordinate() === null) {\n      throw new Error('getX called on empty Point')\n    }\n    return this.getCoordinate().x\n  };\n  Point.prototype.compareToSameClass = function compareToSameClass () {\n    if (arguments.length === 1) {\n      var other = arguments[0];\n      var point$1 = other;\n      return this.getCoordinate().compareTo(point$1.getCoordinate())\n    } else if (arguments.length === 2) {\n      var other$1 = arguments[0];\n      var comp = arguments[1];\n      var point = other$1;\n      return comp.compare(this._coordinates, point._coordinates)\n    }\n  };\n  Point.prototype.apply = function apply () {\n    if (hasInterface(arguments[0], CoordinateFilter)) {\n      var filter = arguments[0];\n      if (this.isEmpty()) {\n        return null\n      }\n      filter.filter(this.getCoordinate());\n    } else if (hasInterface(arguments[0], CoordinateSequenceFilter)) {\n      var filter$1 = arguments[0];\n      if (this.isEmpty()) { return null }\n      filter$1.filter(this._coordinates, 0);\n      if (filter$1.isGeometryChanged()) { this.geometryChanged(); }\n    } else if (hasInterface(arguments[0], GeometryFilter)) {\n      var filter$2 = arguments[0];\n      filter$2.filter(this);\n    } else if (hasInterface(arguments[0], GeometryComponentFilter)) {\n      var filter$3 = arguments[0];\n      filter$3.filter(this);\n    }\n  };\n  Point.prototype.getBoundary = function getBoundary () {\n    return this.getFactory().createGeometryCollection(null)\n  };\n  Point.prototype.clone = function clone () {\n    var p = Geometry$$1.prototype.clone.call(this);\n    p._coordinates = this._coordinates.clone();\n    return p\n  };\n  Point.prototype.getGeometryType = function getGeometryType () {\n    return 'Point'\n  };\n  Point.prototype.copy = function copy () {\n    return new Point(this._coordinates.copy(), this._factory)\n  };\n  Point.prototype.getCoordinateSequence = function getCoordinateSequence () {\n    return this._coordinates\n  };\n  Point.prototype.getY = function getY () {\n    if (this.getCoordinate() === null) {\n      throw new Error('getY called on empty Point')\n    }\n    return this.getCoordinate().y\n  };\n  Point.prototype.isEmpty = function isEmpty () {\n    return this._coordinates.size() === 0\n  };\n  Point.prototype.init = function init (coordinates) {\n    if (coordinates === null) {\n      coordinates = this.getFactory().getCoordinateSequenceFactory().create([]);\n    }\n    Assert.isTrue(coordinates.size() <= 1);\n    this._coordinates = coordinates;\n  };\n  Point.prototype.isSimple = function isSimple () {\n    return true\n  };\n  Point.prototype.interfaces_ = function interfaces_ () {\n    return [Puntal]\n  };\n  Point.prototype.getClass = function getClass () {\n    return Point\n  };\n  staticAccessors.serialVersionUID.get = function () { return 4902022702746614570 };\n\n  Object.defineProperties( Point, staticAccessors );\n\n  return Point;\n}(Geometry));\n\nvar Polygonal = function Polygonal () {};\n\nPolygonal.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nPolygonal.prototype.getClass = function getClass () {\n  return Polygonal\n};\n\nvar Polygon = (function (Geometry$$1) {\n  function Polygon (shell, holes, factory) {\n    Geometry$$1.call(this, factory);\n    this._shell = null;\n    this._holes = null;\n    if (shell === null) {\n      shell = this.getFactory().createLinearRing();\n    }\n    if (holes === null) {\n      holes = [];\n    }\n    if (Geometry$$1.hasNullElements(holes)) {\n      throw new IllegalArgumentException('holes must not contain null elements')\n    }\n    if (shell.isEmpty() && Geometry$$1.hasNonEmptyElements(holes)) {\n      throw new IllegalArgumentException('shell is empty but holes are not')\n    }\n    this._shell = shell;\n    this._holes = holes;\n  }\n\n  if ( Geometry$$1 ) Polygon.__proto__ = Geometry$$1;\n  Polygon.prototype = Object.create( Geometry$$1 && Geometry$$1.prototype );\n  Polygon.prototype.constructor = Polygon;\n\n  var staticAccessors = { serialVersionUID: { configurable: true } };\n  Polygon.prototype.computeEnvelopeInternal = function computeEnvelopeInternal () {\n    return this._shell.getEnvelopeInternal()\n  };\n  Polygon.prototype.getSortIndex = function getSortIndex () {\n    return Geometry$$1.SORTINDEX_POLYGON\n  };\n  Polygon.prototype.getCoordinates = function getCoordinates () {\n    var this$1 = this;\n\n    if (this.isEmpty()) {\n      return []\n    }\n    var coordinates = new Array(this.getNumPoints()).fill(null);\n    var k = -1;\n    var shellCoordinates = this._shell.getCoordinates();\n    for (var x = 0; x < shellCoordinates.length; x++) {\n      k++;\n      coordinates[k] = shellCoordinates[x];\n    }\n    for (var i = 0; i < this._holes.length; i++) {\n      var childCoordinates = this$1._holes[i].getCoordinates();\n      for (var j = 0; j < childCoordinates.length; j++) {\n        k++;\n        coordinates[k] = childCoordinates[j];\n      }\n    }\n    return coordinates\n  };\n  Polygon.prototype.getArea = function getArea () {\n    var this$1 = this;\n\n    var area = 0.0;\n    area += Math.abs(CGAlgorithms.signedArea(this._shell.getCoordinateSequence()));\n    for (var i = 0; i < this._holes.length; i++) {\n      area -= Math.abs(CGAlgorithms.signedArea(this$1._holes[i].getCoordinateSequence()));\n    }\n    return area\n  };\n  Polygon.prototype.isRectangle = function isRectangle () {\n    if (this.getNumInteriorRing() !== 0) { return false }\n    if (this._shell === null) { return false }\n    if (this._shell.getNumPoints() !== 5) { return false }\n    var seq = this._shell.getCoordinateSequence();\n    var env = this.getEnvelopeInternal();\n    for (var i = 0; i < 5; i++) {\n      var x = seq.getX(i);\n      if (!(x === env.getMinX() || x === env.getMaxX())) { return false }\n      var y = seq.getY(i);\n      if (!(y === env.getMinY() || y === env.getMaxY())) { return false }\n    }\n    var prevX = seq.getX(0);\n    var prevY = seq.getY(0);\n    for (var i$1 = 1; i$1 <= 4; i$1++) {\n      var x$1 = seq.getX(i$1);\n      var y$1 = seq.getY(i$1);\n      var xChanged = x$1 !== prevX;\n      var yChanged = y$1 !== prevY;\n      if (xChanged === yChanged) { return false }\n      prevX = x$1;\n      prevY = y$1;\n    }\n    return true\n  };\n  Polygon.prototype.equalsExact = function equalsExact () {\n    var this$1 = this;\n\n    if (arguments.length === 2) {\n      var other = arguments[0];\n      var tolerance = arguments[1];\n      if (!this.isEquivalentClass(other)) {\n        return false\n      }\n      var otherPolygon = other;\n      var thisShell = this._shell;\n      var otherPolygonShell = otherPolygon._shell;\n      if (!thisShell.equalsExact(otherPolygonShell, tolerance)) {\n        return false\n      }\n      if (this._holes.length !== otherPolygon._holes.length) {\n        return false\n      }\n      for (var i = 0; i < this._holes.length; i++) {\n        if (!this$1._holes[i].equalsExact(otherPolygon._holes[i], tolerance)) {\n          return false\n        }\n      }\n      return true\n    } else { return Geometry$$1.prototype.equalsExact.apply(this, arguments) }\n  };\n  Polygon.prototype.normalize = function normalize () {\n    var this$1 = this;\n\n    if (arguments.length === 0) {\n      this.normalize(this._shell, true);\n      for (var i = 0; i < this._holes.length; i++) {\n        this$1.normalize(this$1._holes[i], false);\n      }\n      Arrays.sort(this._holes);\n    } else if (arguments.length === 2) {\n      var ring = arguments[0];\n      var clockwise = arguments[1];\n      if (ring.isEmpty()) {\n        return null\n      }\n      var uniqueCoordinates = new Array(ring.getCoordinates().length - 1).fill(null);\n      System.arraycopy(ring.getCoordinates(), 0, uniqueCoordinates, 0, uniqueCoordinates.length);\n      var minCoordinate = CoordinateArrays.minCoordinate(ring.getCoordinates());\n      CoordinateArrays.scroll(uniqueCoordinates, minCoordinate);\n      System.arraycopy(uniqueCoordinates, 0, ring.getCoordinates(), 0, uniqueCoordinates.length);\n      ring.getCoordinates()[uniqueCoordinates.length] = uniqueCoordinates[0];\n      if (CGAlgorithms.isCCW(ring.getCoordinates()) === clockwise) {\n        CoordinateArrays.reverse(ring.getCoordinates());\n      }\n    }\n  };\n  Polygon.prototype.getCoordinate = function getCoordinate () {\n    return this._shell.getCoordinate()\n  };\n  Polygon.prototype.getNumInteriorRing = function getNumInteriorRing () {\n    return this._holes.length\n  };\n  Polygon.prototype.getBoundaryDimension = function getBoundaryDimension () {\n    return 1\n  };\n  Polygon.prototype.getDimension = function getDimension () {\n    return 2\n  };\n  Polygon.prototype.getLength = function getLength () {\n    var this$1 = this;\n\n    var len = 0.0;\n    len += this._shell.getLength();\n    for (var i = 0; i < this._holes.length; i++) {\n      len += this$1._holes[i].getLength();\n    }\n    return len\n  };\n  Polygon.prototype.getNumPoints = function getNumPoints () {\n    var this$1 = this;\n\n    var numPoints = this._shell.getNumPoints();\n    for (var i = 0; i < this._holes.length; i++) {\n      numPoints += this$1._holes[i].getNumPoints();\n    }\n    return numPoints\n  };\n  Polygon.prototype.reverse = function reverse () {\n    var this$1 = this;\n\n    var poly = this.copy();\n    poly._shell = this._shell.copy().reverse();\n    poly._holes = new Array(this._holes.length).fill(null);\n    for (var i = 0; i < this._holes.length; i++) {\n      poly._holes[i] = this$1._holes[i].copy().reverse();\n    }\n    return poly\n  };\n  Polygon.prototype.convexHull = function convexHull () {\n    return this.getExteriorRing().convexHull()\n  };\n  Polygon.prototype.compareToSameClass = function compareToSameClass () {\n    var this$1 = this;\n\n    if (arguments.length === 1) {\n      var o = arguments[0];\n      var thisShell = this._shell;\n      var otherShell = o._shell;\n      return thisShell.compareToSameClass(otherShell)\n    } else if (arguments.length === 2) {\n      var o$1 = arguments[0];\n      var comp = arguments[1];\n      var poly = o$1;\n      var thisShell$1 = this._shell;\n      var otherShell$1 = poly._shell;\n      var shellComp = thisShell$1.compareToSameClass(otherShell$1, comp);\n      if (shellComp !== 0) { return shellComp }\n      var nHole1 = this.getNumInteriorRing();\n      var nHole2 = poly.getNumInteriorRing();\n      var i = 0;\n      while (i < nHole1 && i < nHole2) {\n        var thisHole = this$1.getInteriorRingN(i);\n        var otherHole = poly.getInteriorRingN(i);\n        var holeComp = thisHole.compareToSameClass(otherHole, comp);\n        if (holeComp !== 0) { return holeComp }\n        i++;\n      }\n      if (i < nHole1) { return 1 }\n      if (i < nHole2) { return -1 }\n      return 0\n    }\n  };\n  Polygon.prototype.apply = function apply (filter) {\n    var this$1 = this;\n\n    if (hasInterface(filter, CoordinateFilter)) {\n      this._shell.apply(filter);\n      for (var i$1 = 0; i$1 < this._holes.length; i$1++) {\n        this$1._holes[i$1].apply(filter);\n      }\n    } else if (hasInterface(filter, CoordinateSequenceFilter)) {\n      this._shell.apply(filter);\n      if (!filter.isDone()) {\n        for (var i$2 = 0; i$2 < this._holes.length; i$2++) {\n          this$1._holes[i$2].apply(filter);\n          if (filter.isDone()) { break }\n        }\n      }\n      if (filter.isGeometryChanged()) { this.geometryChanged(); }\n    } else if (hasInterface(filter, GeometryFilter)) {\n      filter.filter(this);\n    } else if (hasInterface(filter, GeometryComponentFilter)) {\n      filter.filter(this);\n      this._shell.apply(filter);\n      for (var i = 0; i < this._holes.length; i++) {\n        this$1._holes[i].apply(filter);\n      }\n    }\n  };\n  Polygon.prototype.getBoundary = function getBoundary () {\n    var this$1 = this;\n\n    if (this.isEmpty()) {\n      return this.getFactory().createMultiLineString()\n    }\n    var rings = new Array(this._holes.length + 1).fill(null);\n    rings[0] = this._shell;\n    for (var i = 0; i < this._holes.length; i++) {\n      rings[i + 1] = this$1._holes[i];\n    }\n    if (rings.length <= 1) { return this.getFactory().createLinearRing(rings[0].getCoordinateSequence()) }\n    return this.getFactory().createMultiLineString(rings)\n  };\n  Polygon.prototype.clone = function clone () {\n    var this$1 = this;\n\n    var poly = Geometry$$1.prototype.clone.call(this);\n    poly._shell = this._shell.clone();\n    poly._holes = new Array(this._holes.length).fill(null);\n    for (var i = 0; i < this._holes.length; i++) {\n      poly._holes[i] = this$1._holes[i].clone();\n    }\n    return poly\n  };\n  Polygon.prototype.getGeometryType = function getGeometryType () {\n    return 'Polygon'\n  };\n  Polygon.prototype.copy = function copy () {\n    var this$1 = this;\n\n    var shell = this._shell.copy();\n    var holes = new Array(this._holes.length).fill(null);\n    for (var i = 0; i < holes.length; i++) {\n      holes[i] = this$1._holes[i].copy();\n    }\n    return new Polygon(shell, holes, this._factory)\n  };\n  Polygon.prototype.getExteriorRing = function getExteriorRing () {\n    return this._shell\n  };\n  Polygon.prototype.isEmpty = function isEmpty () {\n    return this._shell.isEmpty()\n  };\n  Polygon.prototype.getInteriorRingN = function getInteriorRingN (n) {\n    return this._holes[n]\n  };\n  Polygon.prototype.interfaces_ = function interfaces_ () {\n    return [Polygonal]\n  };\n  Polygon.prototype.getClass = function getClass () {\n    return Polygon\n  };\n  staticAccessors.serialVersionUID.get = function () { return -3494792200821764533 };\n\n  Object.defineProperties( Polygon, staticAccessors );\n\n  return Polygon;\n}(Geometry));\n\nvar MultiPoint = (function (GeometryCollection$$1) {\n  function MultiPoint () {\n    GeometryCollection$$1.apply(this, arguments);\n  }\n\n  if ( GeometryCollection$$1 ) MultiPoint.__proto__ = GeometryCollection$$1;\n  MultiPoint.prototype = Object.create( GeometryCollection$$1 && GeometryCollection$$1.prototype );\n  MultiPoint.prototype.constructor = MultiPoint;\n\n  var staticAccessors = { serialVersionUID: { configurable: true } };\n\n  MultiPoint.prototype.getSortIndex = function getSortIndex () {\n    return Geometry.SORTINDEX_MULTIPOINT\n  };\n  MultiPoint.prototype.isValid = function isValid () {\n    return true\n  };\n  MultiPoint.prototype.equalsExact = function equalsExact () {\n    if (arguments.length === 2) {\n      var other = arguments[0];\n      var tolerance = arguments[1];\n      if (!this.isEquivalentClass(other)) {\n        return false\n      }\n      return GeometryCollection$$1.prototype.equalsExact.call(this, other, tolerance)\n    } else { return GeometryCollection$$1.prototype.equalsExact.apply(this, arguments) }\n  };\n  MultiPoint.prototype.getCoordinate = function getCoordinate () {\n    if (arguments.length === 1) {\n      var n = arguments[0];\n      return this._geometries[n].getCoordinate()\n    } else { return GeometryCollection$$1.prototype.getCoordinate.apply(this, arguments) }\n  };\n  MultiPoint.prototype.getBoundaryDimension = function getBoundaryDimension () {\n    return Dimension.FALSE\n  };\n  MultiPoint.prototype.getDimension = function getDimension () {\n    return 0\n  };\n  MultiPoint.prototype.getBoundary = function getBoundary () {\n    return this.getFactory().createGeometryCollection(null)\n  };\n  MultiPoint.prototype.getGeometryType = function getGeometryType () {\n    return 'MultiPoint'\n  };\n  MultiPoint.prototype.copy = function copy () {\n    var this$1 = this;\n\n    var points = new Array(this._geometries.length).fill(null);\n    for (var i = 0; i < points.length; i++) {\n      points[i] = this$1._geometries[i].copy();\n    }\n    return new MultiPoint(points, this._factory)\n  };\n  MultiPoint.prototype.interfaces_ = function interfaces_ () {\n    return [Puntal]\n  };\n  MultiPoint.prototype.getClass = function getClass () {\n    return MultiPoint\n  };\n  staticAccessors.serialVersionUID.get = function () { return -8048474874175355449 };\n\n  Object.defineProperties( MultiPoint, staticAccessors );\n\n  return MultiPoint;\n}(GeometryCollection));\n\nvar LinearRing = (function (LineString$$1) {\n  function LinearRing (points, factory) {\n    if (points instanceof Coordinate && factory instanceof GeometryFactory) {\n      points = factory.getCoordinateSequenceFactory().create(points);\n    }\n    LineString$$1.call(this, points, factory);\n    this.validateConstruction();\n  }\n\n  if ( LineString$$1 ) LinearRing.__proto__ = LineString$$1;\n  LinearRing.prototype = Object.create( LineString$$1 && LineString$$1.prototype );\n  LinearRing.prototype.constructor = LinearRing;\n\n  var staticAccessors = { MINIMUM_VALID_SIZE: { configurable: true },serialVersionUID: { configurable: true } };\n  LinearRing.prototype.getSortIndex = function getSortIndex () {\n    return Geometry.SORTINDEX_LINEARRING\n  };\n  LinearRing.prototype.getBoundaryDimension = function getBoundaryDimension () {\n    return Dimension.FALSE\n  };\n  LinearRing.prototype.isClosed = function isClosed () {\n    if (this.isEmpty()) {\n      return true\n    }\n    return LineString$$1.prototype.isClosed.call(this)\n  };\n  LinearRing.prototype.reverse = function reverse () {\n    var seq = this._points.copy();\n    CoordinateSequences.reverse(seq);\n    var rev = this.getFactory().createLinearRing(seq);\n    return rev\n  };\n  LinearRing.prototype.validateConstruction = function validateConstruction () {\n    if (!this.isEmpty() && !LineString$$1.prototype.isClosed.call(this)) {\n      throw new IllegalArgumentException('Points of LinearRing do not form a closed linestring')\n    }\n    if (this.getCoordinateSequence().size() >= 1 && this.getCoordinateSequence().size() < LinearRing.MINIMUM_VALID_SIZE) {\n      throw new IllegalArgumentException('Invalid number of points in LinearRing (found ' + this.getCoordinateSequence().size() + ' - must be 0 or >= 4)')\n    }\n  };\n  LinearRing.prototype.getGeometryType = function getGeometryType () {\n    return 'LinearRing'\n  };\n  LinearRing.prototype.copy = function copy () {\n    return new LinearRing(this._points.copy(), this._factory)\n  };\n  LinearRing.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  LinearRing.prototype.getClass = function getClass () {\n    return LinearRing\n  };\n  staticAccessors.MINIMUM_VALID_SIZE.get = function () { return 4 };\n  staticAccessors.serialVersionUID.get = function () { return -4261142084085851829 };\n\n  Object.defineProperties( LinearRing, staticAccessors );\n\n  return LinearRing;\n}(LineString));\n\nvar MultiPolygon = (function (GeometryCollection$$1) {\n  function MultiPolygon () {\n    GeometryCollection$$1.apply(this, arguments);\n  }\n\n  if ( GeometryCollection$$1 ) MultiPolygon.__proto__ = GeometryCollection$$1;\n  MultiPolygon.prototype = Object.create( GeometryCollection$$1 && GeometryCollection$$1.prototype );\n  MultiPolygon.prototype.constructor = MultiPolygon;\n\n  var staticAccessors = { serialVersionUID: { configurable: true } };\n\n  MultiPolygon.prototype.getSortIndex = function getSortIndex () {\n    return Geometry.SORTINDEX_MULTIPOLYGON\n  };\n  MultiPolygon.prototype.equalsExact = function equalsExact () {\n    if (arguments.length === 2) {\n      var other = arguments[0];\n      var tolerance = arguments[1];\n      if (!this.isEquivalentClass(other)) {\n        return false\n      }\n      return GeometryCollection$$1.prototype.equalsExact.call(this, other, tolerance)\n    } else { return GeometryCollection$$1.prototype.equalsExact.apply(this, arguments) }\n  };\n  MultiPolygon.prototype.getBoundaryDimension = function getBoundaryDimension () {\n    return 1\n  };\n  MultiPolygon.prototype.getDimension = function getDimension () {\n    return 2\n  };\n  MultiPolygon.prototype.reverse = function reverse () {\n    var this$1 = this;\n\n    var n = this._geometries.length;\n    var revGeoms = new Array(n).fill(null);\n    for (var i = 0; i < this._geometries.length; i++) {\n      revGeoms[i] = this$1._geometries[i].reverse();\n    }\n    return this.getFactory().createMultiPolygon(revGeoms)\n  };\n  MultiPolygon.prototype.getBoundary = function getBoundary () {\n    var this$1 = this;\n\n    if (this.isEmpty()) {\n      return this.getFactory().createMultiLineString()\n    }\n    var allRings = new ArrayList();\n    for (var i = 0; i < this._geometries.length; i++) {\n      var polygon = this$1._geometries[i];\n      var rings = polygon.getBoundary();\n      for (var j = 0; j < rings.getNumGeometries(); j++) {\n        allRings.add(rings.getGeometryN(j));\n      }\n    }\n    var allRingsArray = new Array(allRings.size()).fill(null);\n    return this.getFactory().createMultiLineString(allRings.toArray(allRingsArray))\n  };\n  MultiPolygon.prototype.getGeometryType = function getGeometryType () {\n    return 'MultiPolygon'\n  };\n  MultiPolygon.prototype.copy = function copy () {\n    var this$1 = this;\n\n    var polygons = new Array(this._geometries.length).fill(null);\n    for (var i = 0; i < polygons.length; i++) {\n      polygons[i] = this$1._geometries[i].copy();\n    }\n    return new MultiPolygon(polygons, this._factory)\n  };\n  MultiPolygon.prototype.interfaces_ = function interfaces_ () {\n    return [Polygonal]\n  };\n  MultiPolygon.prototype.getClass = function getClass () {\n    return MultiPolygon\n  };\n  staticAccessors.serialVersionUID.get = function () { return -551033529766975875 };\n\n  Object.defineProperties( MultiPolygon, staticAccessors );\n\n  return MultiPolygon;\n}(GeometryCollection));\n\nvar GeometryEditor = function GeometryEditor (factory) {\n  this._factory = factory || null;\n  this._isUserDataCopied = false;\n};\n\nvar staticAccessors$16 = { NoOpGeometryOperation: { configurable: true },CoordinateOperation: { configurable: true },CoordinateSequenceOperation: { configurable: true } };\nGeometryEditor.prototype.setCopyUserData = function setCopyUserData (isUserDataCopied) {\n  this._isUserDataCopied = isUserDataCopied;\n};\nGeometryEditor.prototype.edit = function edit (geometry, operation) {\n  if (geometry === null) { return null }\n  var result = this.editInternal(geometry, operation);\n  if (this._isUserDataCopied) {\n    result.setUserData(geometry.getUserData());\n  }\n  return result\n};\nGeometryEditor.prototype.editInternal = function editInternal (geometry, operation) {\n  if (this._factory === null) { this._factory = geometry.getFactory(); }\n  if (geometry instanceof GeometryCollection) {\n    return this.editGeometryCollection(geometry, operation)\n  }\n  if (geometry instanceof Polygon) {\n    return this.editPolygon(geometry, operation)\n  }\n  if (geometry instanceof Point) {\n    return operation.edit(geometry, this._factory)\n  }\n  if (geometry instanceof LineString) {\n    return operation.edit(geometry, this._factory)\n  }\n  Assert.shouldNeverReachHere('Unsupported Geometry class: ' + geometry.getClass().getName());\n  return null\n};\nGeometryEditor.prototype.editGeometryCollection = function editGeometryCollection (collection, operation) {\n    var this$1 = this;\n\n  var collectionForType = operation.edit(collection, this._factory);\n  var geometries = new ArrayList();\n  for (var i = 0; i < collectionForType.getNumGeometries(); i++) {\n    var geometry = this$1.edit(collectionForType.getGeometryN(i), operation);\n    if (geometry === null || geometry.isEmpty()) {\n      continue\n    }\n    geometries.add(geometry);\n  }\n  if (collectionForType.getClass() === MultiPoint) {\n    return this._factory.createMultiPoint(geometries.toArray([]))\n  }\n  if (collectionForType.getClass() === MultiLineString) {\n    return this._factory.createMultiLineString(geometries.toArray([]))\n  }\n  if (collectionForType.getClass() === MultiPolygon) {\n    return this._factory.createMultiPolygon(geometries.toArray([]))\n  }\n  return this._factory.createGeometryCollection(geometries.toArray([]))\n};\nGeometryEditor.prototype.editPolygon = function editPolygon (polygon, operation) {\n    var this$1 = this;\n\n  var newPolygon = operation.edit(polygon, this._factory);\n  if (newPolygon === null) { newPolygon = this._factory.createPolygon(null); }\n  if (newPolygon.isEmpty()) {\n    return newPolygon\n  }\n  var shell = this.edit(newPolygon.getExteriorRing(), operation);\n  if (shell === null || shell.isEmpty()) {\n    return this._factory.createPolygon()\n  }\n  var holes = new ArrayList();\n  for (var i = 0; i < newPolygon.getNumInteriorRing(); i++) {\n    var hole = this$1.edit(newPolygon.getInteriorRingN(i), operation);\n    if (hole === null || hole.isEmpty()) {\n      continue\n    }\n    holes.add(hole);\n  }\n  return this._factory.createPolygon(shell, holes.toArray([]))\n};\nGeometryEditor.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nGeometryEditor.prototype.getClass = function getClass () {\n  return GeometryEditor\n};\nGeometryEditor.GeometryEditorOperation = function GeometryEditorOperation () {};\nstaticAccessors$16.NoOpGeometryOperation.get = function () { return NoOpGeometryOperation };\nstaticAccessors$16.CoordinateOperation.get = function () { return CoordinateOperation };\nstaticAccessors$16.CoordinateSequenceOperation.get = function () { return CoordinateSequenceOperation };\n\nObject.defineProperties( GeometryEditor, staticAccessors$16 );\n\nvar NoOpGeometryOperation = function NoOpGeometryOperation () {};\n\nNoOpGeometryOperation.prototype.edit = function edit (geometry, factory) {\n  return geometry\n};\nNoOpGeometryOperation.prototype.interfaces_ = function interfaces_ () {\n  return [GeometryEditor.GeometryEditorOperation]\n};\nNoOpGeometryOperation.prototype.getClass = function getClass () {\n  return NoOpGeometryOperation\n};\n\nvar CoordinateOperation = function CoordinateOperation () {};\n\nCoordinateOperation.prototype.edit = function edit (geometry, factory) {\n  var coords = this.editCoordinates(geometry.getCoordinates(), geometry);\n  if (coords === null) { return geometry }\n  if (geometry instanceof LinearRing) {\n    return factory.createLinearRing(coords)\n  }\n  if (geometry instanceof LineString) {\n    return factory.createLineString(coords)\n  }\n  if (geometry instanceof Point) {\n    if (coords.length > 0) {\n      return factory.createPoint(coords[0])\n    } else {\n      return factory.createPoint()\n    }\n  }\n  return geometry\n};\nCoordinateOperation.prototype.interfaces_ = function interfaces_ () {\n  return [GeometryEditor.GeometryEditorOperation]\n};\nCoordinateOperation.prototype.getClass = function getClass () {\n  return CoordinateOperation\n};\n\nvar CoordinateSequenceOperation = function CoordinateSequenceOperation () {};\n\nCoordinateSequenceOperation.prototype.edit = function edit (geometry, factory) {\n  if (geometry instanceof LinearRing) {\n    return factory.createLinearRing(this.edit(geometry.getCoordinateSequence(), geometry))\n  }\n  if (geometry instanceof LineString) {\n    return factory.createLineString(this.edit(geometry.getCoordinateSequence(), geometry))\n  }\n  if (geometry instanceof Point) {\n    return factory.createPoint(this.edit(geometry.getCoordinateSequence(), geometry))\n  }\n  return geometry\n};\nCoordinateSequenceOperation.prototype.interfaces_ = function interfaces_ () {\n  return [GeometryEditor.GeometryEditorOperation]\n};\nCoordinateSequenceOperation.prototype.getClass = function getClass () {\n  return CoordinateSequenceOperation\n};\n\nvar CoordinateArraySequence = function CoordinateArraySequence () {\n  var this$1 = this;\n\n  this._dimension = 3;\n  this._coordinates = null;\n  if (arguments.length === 1) {\n    if (arguments[0] instanceof Array) {\n      this._coordinates = arguments[0];\n      this._dimension = 3;\n    } else if (Number.isInteger(arguments[0])) {\n      var size = arguments[0];\n      this._coordinates = new Array(size).fill(null);\n      for (var i = 0; i < size; i++) {\n        this$1._coordinates[i] = new Coordinate();\n      }\n    } else if (hasInterface(arguments[0], CoordinateSequence)) {\n      var coordSeq = arguments[0];\n      if (coordSeq === null) {\n        this._coordinates = new Array(0).fill(null);\n        return null\n      }\n      this._dimension = coordSeq.getDimension();\n      this._coordinates = new Array(coordSeq.size()).fill(null);\n      for (var i$1 = 0; i$1 < this._coordinates.length; i$1++) {\n        this$1._coordinates[i$1] = coordSeq.getCoordinateCopy(i$1);\n      }\n    }\n  } else if (arguments.length === 2) {\n    if (arguments[0] instanceof Array && Number.isInteger(arguments[1])) {\n      var coordinates = arguments[0];\n      var dimension = arguments[1];\n      this._coordinates = coordinates;\n      this._dimension = dimension;\n      if (coordinates === null) { this._coordinates = new Array(0).fill(null); }\n    } else if (Number.isInteger(arguments[0]) && Number.isInteger(arguments[1])) {\n      var size$1 = arguments[0];\n      var dimension$1 = arguments[1];\n      this._coordinates = new Array(size$1).fill(null);\n      this._dimension = dimension$1;\n      for (var i$2 = 0; i$2 < size$1; i$2++) {\n        this$1._coordinates[i$2] = new Coordinate();\n      }\n    }\n  }\n};\n\nvar staticAccessors$18 = { serialVersionUID: { configurable: true } };\nCoordinateArraySequence.prototype.setOrdinate = function setOrdinate (index, ordinateIndex, value) {\n  switch (ordinateIndex) {\n    case CoordinateSequence.X:\n      this._coordinates[index].x = value;\n      break\n    case CoordinateSequence.Y:\n      this._coordinates[index].y = value;\n      break\n    case CoordinateSequence.Z:\n      this._coordinates[index].z = value;\n      break\n    default:\n      throw new IllegalArgumentException('invalid ordinateIndex')\n  }\n};\nCoordinateArraySequence.prototype.size = function size () {\n  return this._coordinates.length\n};\nCoordinateArraySequence.prototype.getOrdinate = function getOrdinate (index, ordinateIndex) {\n  switch (ordinateIndex) {\n    case CoordinateSequence.X:\n      return this._coordinates[index].x\n    case CoordinateSequence.Y:\n      return this._coordinates[index].y\n    case CoordinateSequence.Z:\n      return this._coordinates[index].z\n    default:\n  }\n  return Double.NaN\n};\nCoordinateArraySequence.prototype.getCoordinate = function getCoordinate () {\n  if (arguments.length === 1) {\n    var i = arguments[0];\n    return this._coordinates[i]\n  } else if (arguments.length === 2) {\n    var index = arguments[0];\n    var coord = arguments[1];\n    coord.x = this._coordinates[index].x;\n    coord.y = this._coordinates[index].y;\n    coord.z = this._coordinates[index].z;\n  }\n};\nCoordinateArraySequence.prototype.getCoordinateCopy = function getCoordinateCopy (i) {\n  return new Coordinate(this._coordinates[i])\n};\nCoordinateArraySequence.prototype.getDimension = function getDimension () {\n  return this._dimension\n};\nCoordinateArraySequence.prototype.getX = function getX (index) {\n  return this._coordinates[index].x\n};\nCoordinateArraySequence.prototype.clone = function clone () {\n    var this$1 = this;\n\n  var cloneCoordinates = new Array(this.size()).fill(null);\n  for (var i = 0; i < this._coordinates.length; i++) {\n    cloneCoordinates[i] = this$1._coordinates[i].clone();\n  }\n  return new CoordinateArraySequence(cloneCoordinates, this._dimension)\n};\nCoordinateArraySequence.prototype.expandEnvelope = function expandEnvelope (env) {\n    var this$1 = this;\n\n  for (var i = 0; i < this._coordinates.length; i++) {\n    env.expandToInclude(this$1._coordinates[i]);\n  }\n  return env\n};\nCoordinateArraySequence.prototype.copy = function copy () {\n    var this$1 = this;\n\n  var cloneCoordinates = new Array(this.size()).fill(null);\n  for (var i = 0; i < this._coordinates.length; i++) {\n    cloneCoordinates[i] = this$1._coordinates[i].copy();\n  }\n  return new CoordinateArraySequence(cloneCoordinates, this._dimension)\n};\nCoordinateArraySequence.prototype.toString = function toString () {\n    var this$1 = this;\n\n  if (this._coordinates.length > 0) {\n    var strBuf = new StringBuffer(17 * this._coordinates.length);\n    strBuf.append('(');\n    strBuf.append(this._coordinates[0]);\n    for (var i = 1; i < this._coordinates.length; i++) {\n      strBuf.append(', ');\n      strBuf.append(this$1._coordinates[i]);\n    }\n    strBuf.append(')');\n    return strBuf.toString()\n  } else {\n    return '()'\n  }\n};\nCoordinateArraySequence.prototype.getY = function getY (index) {\n  return this._coordinates[index].y\n};\nCoordinateArraySequence.prototype.toCoordinateArray = function toCoordinateArray () {\n  return this._coordinates\n};\nCoordinateArraySequence.prototype.interfaces_ = function interfaces_ () {\n  return [CoordinateSequence, Serializable]\n};\nCoordinateArraySequence.prototype.getClass = function getClass () {\n  return CoordinateArraySequence\n};\nstaticAccessors$18.serialVersionUID.get = function () { return -915438501601840650 };\n\nObject.defineProperties( CoordinateArraySequence, staticAccessors$18 );\n\nvar CoordinateArraySequenceFactory = function CoordinateArraySequenceFactory () {};\n\nvar staticAccessors$17 = { serialVersionUID: { configurable: true },instanceObject: { configurable: true } };\n\nCoordinateArraySequenceFactory.prototype.readResolve = function readResolve () {\n  return CoordinateArraySequenceFactory.instance()\n};\nCoordinateArraySequenceFactory.prototype.create = function create () {\n  if (arguments.length === 1) {\n    if (arguments[0] instanceof Array) {\n      var coordinates = arguments[0];\n      return new CoordinateArraySequence(coordinates)\n    } else if (hasInterface(arguments[0], CoordinateSequence)) {\n      var coordSeq = arguments[0];\n      return new CoordinateArraySequence(coordSeq)\n    }\n  } else if (arguments.length === 2) {\n    var size = arguments[0];\n    var dimension = arguments[1];\n    if (dimension > 3) { dimension = 3; }\n    if (dimension < 2) { return new CoordinateArraySequence(size) }\n    return new CoordinateArraySequence(size, dimension)\n  }\n};\nCoordinateArraySequenceFactory.prototype.interfaces_ = function interfaces_ () {\n  return [CoordinateSequenceFactory, Serializable]\n};\nCoordinateArraySequenceFactory.prototype.getClass = function getClass () {\n  return CoordinateArraySequenceFactory\n};\nCoordinateArraySequenceFactory.instance = function instance () {\n  return CoordinateArraySequenceFactory.instanceObject\n};\n\nstaticAccessors$17.serialVersionUID.get = function () { return -4099577099607551657 };\nstaticAccessors$17.instanceObject.get = function () { return new CoordinateArraySequenceFactory() };\n\nObject.defineProperties( CoordinateArraySequenceFactory, staticAccessors$17 );\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/HashMap.html\n *\n * @extends {javascript.util.Map}\n * @constructor\n * @private\n */\nvar HashMap = (function (MapInterface) {\n  function HashMap () {\n    MapInterface.call(this);\n    this.map_ = new Map();\n  }\n\n  if ( MapInterface ) HashMap.__proto__ = MapInterface;\n  HashMap.prototype = Object.create( MapInterface && MapInterface.prototype );\n  HashMap.prototype.constructor = HashMap;\n  /**\n   * @override\n   */\n  HashMap.prototype.get = function get (key) {\n    return this.map_.get(key) || null\n  };\n\n  /**\n   * @override\n   */\n  HashMap.prototype.put = function put (key, value) {\n    this.map_.set(key, value);\n    return value\n  };\n\n  /**\n   * @override\n   */\n  HashMap.prototype.values = function values () {\n    var arrayList = new ArrayList();\n    var it = this.map_.values();\n    var o = it.next();\n    while (!o.done) {\n      arrayList.add(o.value);\n      o = it.next();\n    }\n    return arrayList\n  };\n\n  /**\n   * @override\n   */\n  HashMap.prototype.entrySet = function entrySet () {\n    var hashSet = new HashSet();\n    this.map_.entries().forEach(function (entry) { return hashSet.add(entry); });\n    return hashSet\n  };\n\n  /**\n   * @override\n   */\n  HashMap.prototype.size = function size () {\n    return this.map_.size()\n  };\n\n  return HashMap;\n}(Map$1));\n\nvar PrecisionModel = function PrecisionModel () {\n  this._modelType = null;\n  this._scale = null;\n  if (arguments.length === 0) {\n    this._modelType = PrecisionModel.FLOATING;\n  } else if (arguments.length === 1) {\n    if (arguments[0] instanceof Type) {\n      var modelType = arguments[0];\n      this._modelType = modelType;\n      if (modelType === PrecisionModel.FIXED) {\n        this.setScale(1.0);\n      }\n    } else if (typeof arguments[0] === 'number') {\n      var scale = arguments[0];\n      this._modelType = PrecisionModel.FIXED;\n      this.setScale(scale);\n    } else if (arguments[0] instanceof PrecisionModel) {\n      var pm = arguments[0];\n      this._modelType = pm._modelType;\n      this._scale = pm._scale;\n    }\n  }\n};\n\nvar staticAccessors$19 = { serialVersionUID: { configurable: true },maximumPreciseValue: { configurable: true } };\nPrecisionModel.prototype.equals = function equals (other) {\n  if (!(other instanceof PrecisionModel)) {\n    return false\n  }\n  var otherPrecisionModel = other;\n  return this._modelType === otherPrecisionModel._modelType && this._scale === otherPrecisionModel._scale\n};\nPrecisionModel.prototype.compareTo = function compareTo (o) {\n  var other = o;\n  var sigDigits = this.getMaximumSignificantDigits();\n  var otherSigDigits = other.getMaximumSignificantDigits();\n  return new Integer(sigDigits).compareTo(new Integer(otherSigDigits))\n};\nPrecisionModel.prototype.getScale = function getScale () {\n  return this._scale\n};\nPrecisionModel.prototype.isFloating = function isFloating () {\n  return this._modelType === PrecisionModel.FLOATING || this._modelType === PrecisionModel.FLOATING_SINGLE\n};\nPrecisionModel.prototype.getType = function getType () {\n  return this._modelType\n};\nPrecisionModel.prototype.toString = function toString () {\n  var description = 'UNKNOWN';\n  if (this._modelType === PrecisionModel.FLOATING) {\n    description = 'Floating';\n  } else if (this._modelType === PrecisionModel.FLOATING_SINGLE) {\n    description = 'Floating-Single';\n  } else if (this._modelType === PrecisionModel.FIXED) {\n    description = 'Fixed (Scale=' + this.getScale() + ')';\n  }\n  return description\n};\nPrecisionModel.prototype.makePrecise = function makePrecise () {\n  if (typeof arguments[0] === 'number') {\n    var val = arguments[0];\n    if (Double.isNaN(val)) { return val }\n    if (this._modelType === PrecisionModel.FLOATING_SINGLE) {\n      var floatSingleVal = val;\n      return floatSingleVal\n    }\n    if (this._modelType === PrecisionModel.FIXED) {\n      return Math.round(val * this._scale) / this._scale\n    }\n    return val\n  } else if (arguments[0] instanceof Coordinate) {\n    var coord = arguments[0];\n    if (this._modelType === PrecisionModel.FLOATING) { return null }\n    coord.x = this.makePrecise(coord.x);\n    coord.y = this.makePrecise(coord.y);\n  }\n};\nPrecisionModel.prototype.getMaximumSignificantDigits = function getMaximumSignificantDigits () {\n  var maxSigDigits = 16;\n  if (this._modelType === PrecisionModel.FLOATING) {\n    maxSigDigits = 16;\n  } else if (this._modelType === PrecisionModel.FLOATING_SINGLE) {\n    maxSigDigits = 6;\n  } else if (this._modelType === PrecisionModel.FIXED) {\n    maxSigDigits = 1 + Math.trunc(Math.ceil(Math.log(this.getScale()) / Math.log(10)));\n  }\n  return maxSigDigits\n};\nPrecisionModel.prototype.setScale = function setScale (scale) {\n  this._scale = Math.abs(scale);\n};\nPrecisionModel.prototype.interfaces_ = function interfaces_ () {\n  return [Serializable, Comparable]\n};\nPrecisionModel.prototype.getClass = function getClass () {\n  return PrecisionModel\n};\nPrecisionModel.mostPrecise = function mostPrecise (pm1, pm2) {\n  if (pm1.compareTo(pm2) >= 0) { return pm1 }\n  return pm2\n};\nstaticAccessors$19.serialVersionUID.get = function () { return 7777263578777803835 };\nstaticAccessors$19.maximumPreciseValue.get = function () { return 9007199254740992.0 };\n\nObject.defineProperties( PrecisionModel, staticAccessors$19 );\n\nvar Type = function Type (name) {\n  this._name = name || null;\n  Type.nameToTypeMap.put(name, this);\n};\n\nvar staticAccessors$1$1 = { serialVersionUID: { configurable: true },nameToTypeMap: { configurable: true } };\nType.prototype.readResolve = function readResolve () {\n  return Type.nameToTypeMap.get(this._name)\n};\nType.prototype.toString = function toString () {\n  return this._name\n};\nType.prototype.interfaces_ = function interfaces_ () {\n  return [Serializable]\n};\nType.prototype.getClass = function getClass () {\n  return Type\n};\nstaticAccessors$1$1.serialVersionUID.get = function () { return -5528602631731589822 };\nstaticAccessors$1$1.nameToTypeMap.get = function () { return new HashMap() };\n\nObject.defineProperties( Type, staticAccessors$1$1 );\n\nPrecisionModel.Type = Type;\nPrecisionModel.FIXED = new Type('FIXED');\nPrecisionModel.FLOATING = new Type('FLOATING');\nPrecisionModel.FLOATING_SINGLE = new Type('FLOATING SINGLE');\n\nvar GeometryFactory = function GeometryFactory () {\n  this._precisionModel = new PrecisionModel();\n  this._SRID = 0;\n  this._coordinateSequenceFactory = GeometryFactory.getDefaultCoordinateSequenceFactory();\n\n  if (arguments.length === 0) {\n  } else if (arguments.length === 1) {\n    if (hasInterface(arguments[0], CoordinateSequenceFactory)) {\n      this._coordinateSequenceFactory = arguments[0];\n    } else if (arguments[0] instanceof PrecisionModel) {\n      this._precisionModel = arguments[0];\n    }\n  } else if (arguments.length === 2) {\n    this._precisionModel = arguments[0];\n    this._SRID = arguments[1];\n  } else if (arguments.length === 3) {\n    this._precisionModel = arguments[0];\n    this._SRID = arguments[1];\n    this._coordinateSequenceFactory = arguments[2];\n  }\n};\n\nvar staticAccessors$2 = { serialVersionUID: { configurable: true } };\nGeometryFactory.prototype.toGeometry = function toGeometry (envelope) {\n  if (envelope.isNull()) {\n    return this.createPoint(null)\n  }\n  if (envelope.getMinX() === envelope.getMaxX() && envelope.getMinY() === envelope.getMaxY()) {\n    return this.createPoint(new Coordinate(envelope.getMinX(), envelope.getMinY()))\n  }\n  if (envelope.getMinX() === envelope.getMaxX() || envelope.getMinY() === envelope.getMaxY()) {\n    return this.createLineString([new Coordinate(envelope.getMinX(), envelope.getMinY()), new Coordinate(envelope.getMaxX(), envelope.getMaxY())])\n  }\n  return this.createPolygon(this.createLinearRing([new Coordinate(envelope.getMinX(), envelope.getMinY()), new Coordinate(envelope.getMinX(), envelope.getMaxY()), new Coordinate(envelope.getMaxX(), envelope.getMaxY()), new Coordinate(envelope.getMaxX(), envelope.getMinY()), new Coordinate(envelope.getMinX(), envelope.getMinY())]), null)\n};\nGeometryFactory.prototype.createLineString = function createLineString (coordinates) {\n  if (!coordinates) { return new LineString(this.getCoordinateSequenceFactory().create([]), this) }\n  else if (coordinates instanceof Array) { return new LineString(this.getCoordinateSequenceFactory().create(coordinates), this) }\n  else if (hasInterface(coordinates, CoordinateSequence)) { return new LineString(coordinates, this) }\n};\nGeometryFactory.prototype.createMultiLineString = function createMultiLineString () {\n  if (arguments.length === 0) {\n    return new MultiLineString(null, this)\n  } else if (arguments.length === 1) {\n    var lineStrings = arguments[0];\n    return new MultiLineString(lineStrings, this)\n  }\n};\nGeometryFactory.prototype.buildGeometry = function buildGeometry (geomList) {\n  var geomClass = null;\n  var isHeterogeneous = false;\n  var hasGeometryCollection = false;\n  for (var i = geomList.iterator(); i.hasNext();) {\n    var geom = i.next();\n    var partClass = geom.getClass();\n    if (geomClass === null) {\n      geomClass = partClass;\n    }\n    if (partClass !== geomClass) {\n      isHeterogeneous = true;\n    }\n    if (geom.isGeometryCollectionOrDerived()) { hasGeometryCollection = true; }\n  }\n  if (geomClass === null) {\n    return this.createGeometryCollection()\n  }\n  if (isHeterogeneous || hasGeometryCollection) {\n    return this.createGeometryCollection(GeometryFactory.toGeometryArray(geomList))\n  }\n  var geom0 = geomList.iterator().next();\n  var isCollection = geomList.size() > 1;\n  if (isCollection) {\n    if (geom0 instanceof Polygon) {\n      return this.createMultiPolygon(GeometryFactory.toPolygonArray(geomList))\n    } else if (geom0 instanceof LineString) {\n      return this.createMultiLineString(GeometryFactory.toLineStringArray(geomList))\n    } else if (geom0 instanceof Point) {\n      return this.createMultiPoint(GeometryFactory.toPointArray(geomList))\n    }\n    Assert.shouldNeverReachHere('Unhandled class: ' + geom0.getClass().getName());\n  }\n  return geom0\n};\nGeometryFactory.prototype.createMultiPointFromCoords = function createMultiPointFromCoords (coordinates) {\n  return this.createMultiPoint(coordinates !== null ? this.getCoordinateSequenceFactory().create(coordinates) : null)\n};\nGeometryFactory.prototype.createPoint = function createPoint () {\n  if (arguments.length === 0) {\n    return this.createPoint(this.getCoordinateSequenceFactory().create([]))\n  } else if (arguments.length === 1) {\n    if (arguments[0] instanceof Coordinate) {\n      var coordinate = arguments[0];\n      return this.createPoint(coordinate !== null ? this.getCoordinateSequenceFactory().create([coordinate]) : null)\n    } else if (hasInterface(arguments[0], CoordinateSequence)) {\n      var coordinates = arguments[0];\n      return new Point(coordinates, this)\n    }\n  }\n};\nGeometryFactory.prototype.getCoordinateSequenceFactory = function getCoordinateSequenceFactory () {\n  return this._coordinateSequenceFactory\n};\nGeometryFactory.prototype.createPolygon = function createPolygon () {\n  if (arguments.length === 0) {\n    return new Polygon(null, null, this)\n  } else if (arguments.length === 1) {\n    if (hasInterface(arguments[0], CoordinateSequence)) {\n      var coordinates = arguments[0];\n      return this.createPolygon(this.createLinearRing(coordinates))\n    } else if (arguments[0] instanceof Array) {\n      var coordinates$1 = arguments[0];\n      return this.createPolygon(this.createLinearRing(coordinates$1))\n    } else if (arguments[0] instanceof LinearRing) {\n      var shell = arguments[0];\n      return this.createPolygon(shell, null)\n    }\n  } else if (arguments.length === 2) {\n    var shell$1 = arguments[0];\n    var holes = arguments[1];\n    return new Polygon(shell$1, holes, this)\n  }\n};\nGeometryFactory.prototype.getSRID = function getSRID () {\n  return this._SRID\n};\nGeometryFactory.prototype.createGeometryCollection = function createGeometryCollection () {\n  if (arguments.length === 0) {\n    return new GeometryCollection(null, this)\n  } else if (arguments.length === 1) {\n    var geometries = arguments[0];\n    return new GeometryCollection(geometries, this)\n  }\n};\nGeometryFactory.prototype.createGeometry = function createGeometry (g) {\n  var editor = new GeometryEditor(this);\n  return editor.edit(g, {\n    edit: function () {\n      if (arguments.length === 2) {\n        var coordSeq = arguments[0];\n        // const geometry = arguments[1]\n        return this._coordinateSequenceFactory.create(coordSeq)\n      }\n    }\n  })\n};\nGeometryFactory.prototype.getPrecisionModel = function getPrecisionModel () {\n  return this._precisionModel\n};\nGeometryFactory.prototype.createLinearRing = function createLinearRing () {\n  if (arguments.length === 0) {\n    return this.createLinearRing(this.getCoordinateSequenceFactory().create([]))\n  } else if (arguments.length === 1) {\n    if (arguments[0] instanceof Array) {\n      var coordinates = arguments[0];\n      return this.createLinearRing(coordinates !== null ? this.getCoordinateSequenceFactory().create(coordinates) : null)\n    } else if (hasInterface(arguments[0], CoordinateSequence)) {\n      var coordinates$1 = arguments[0];\n      return new LinearRing(coordinates$1, this)\n    }\n  }\n};\nGeometryFactory.prototype.createMultiPolygon = function createMultiPolygon () {\n  if (arguments.length === 0) {\n    return new MultiPolygon(null, this)\n  } else if (arguments.length === 1) {\n    var polygons = arguments[0];\n    return new MultiPolygon(polygons, this)\n  }\n};\nGeometryFactory.prototype.createMultiPoint = function createMultiPoint () {\n    var this$1 = this;\n\n  if (arguments.length === 0) {\n    return new MultiPoint(null, this)\n  } else if (arguments.length === 1) {\n    if (arguments[0] instanceof Array) {\n      var point = arguments[0];\n      return new MultiPoint(point, this)\n    } else if (arguments[0] instanceof Array) {\n      var coordinates = arguments[0];\n      return this.createMultiPoint(coordinates !== null ? this.getCoordinateSequenceFactory().create(coordinates) : null)\n    } else if (hasInterface(arguments[0], CoordinateSequence)) {\n      var coordinates$1 = arguments[0];\n      if (coordinates$1 === null) {\n        return this.createMultiPoint(new Array(0).fill(null))\n      }\n      var points = new Array(coordinates$1.size()).fill(null);\n      for (var i = 0; i < coordinates$1.size(); i++) {\n        var ptSeq = this$1.getCoordinateSequenceFactory().create(1, coordinates$1.getDimension());\n        CoordinateSequences.copy(coordinates$1, i, ptSeq, 0, 1);\n        points[i] = this$1.createPoint(ptSeq);\n      }\n      return this.createMultiPoint(points)\n    }\n  }\n};\nGeometryFactory.prototype.interfaces_ = function interfaces_ () {\n  return [Serializable]\n};\nGeometryFactory.prototype.getClass = function getClass () {\n  return GeometryFactory\n};\nGeometryFactory.toMultiPolygonArray = function toMultiPolygonArray (multiPolygons) {\n  var multiPolygonArray = new Array(multiPolygons.size()).fill(null);\n  return multiPolygons.toArray(multiPolygonArray)\n};\nGeometryFactory.toGeometryArray = function toGeometryArray (geometries) {\n  if (geometries === null) { return null }\n  var geometryArray = new Array(geometries.size()).fill(null);\n  return geometries.toArray(geometryArray)\n};\nGeometryFactory.getDefaultCoordinateSequenceFactory = function getDefaultCoordinateSequenceFactory () {\n  return CoordinateArraySequenceFactory.instance()\n};\nGeometryFactory.toMultiLineStringArray = function toMultiLineStringArray (multiLineStrings) {\n  var multiLineStringArray = new Array(multiLineStrings.size()).fill(null);\n  return multiLineStrings.toArray(multiLineStringArray)\n};\nGeometryFactory.toLineStringArray = function toLineStringArray (lineStrings) {\n  var lineStringArray = new Array(lineStrings.size()).fill(null);\n  return lineStrings.toArray(lineStringArray)\n};\nGeometryFactory.toMultiPointArray = function toMultiPointArray (multiPoints) {\n  var multiPointArray = new Array(multiPoints.size()).fill(null);\n  return multiPoints.toArray(multiPointArray)\n};\nGeometryFactory.toLinearRingArray = function toLinearRingArray (linearRings) {\n  var linearRingArray = new Array(linearRings.size()).fill(null);\n  return linearRings.toArray(linearRingArray)\n};\nGeometryFactory.toPointArray = function toPointArray (points) {\n  var pointArray = new Array(points.size()).fill(null);\n  return points.toArray(pointArray)\n};\nGeometryFactory.toPolygonArray = function toPolygonArray (polygons) {\n  var polygonArray = new Array(polygons.size()).fill(null);\n  return polygons.toArray(polygonArray)\n};\nGeometryFactory.createPointFromInternalCoord = function createPointFromInternalCoord (coord, exemplar) {\n  exemplar.getPrecisionModel().makePrecise(coord);\n  return exemplar.getFactory().createPoint(coord)\n};\nstaticAccessors$2.serialVersionUID.get = function () { return -6820524753094095635 };\n\nObject.defineProperties( GeometryFactory, staticAccessors$2 );\n\nvar geometryTypes = ['Point', 'MultiPoint', 'LineString', 'MultiLineString', 'Polygon', 'MultiPolygon'];\n\n/**\n * Class for reading and writing Well-Known Text.Create a new parser for GeoJSON\n * NOTE: Adapted from OpenLayers 2.11 implementation.\n */\n\n/**\n * Create a new parser for GeoJSON\n *\n * @param {GeometryFactory} geometryFactory\n * @return An instance of GeoJsonParser.\n * @constructor\n * @private\n */\nvar GeoJSONParser = function GeoJSONParser (geometryFactory) {\n  this.geometryFactory = geometryFactory || new GeometryFactory();\n};\n/**\n * Deserialize a GeoJSON object and return the Geometry or Feature(Collection) with JSTS Geometries\n *\n * @param {}\n *        A GeoJSON object.\n * @return {} A Geometry instance or object representing a Feature(Collection) with Geometry instances.\n * @private\n */\nGeoJSONParser.prototype.read = function read (json) {\n  var obj;\n  if (typeof json === 'string') {\n    obj = JSON.parse(json);\n  } else {\n    obj = json;\n  }\n\n  var type = obj.type;\n\n  if (!parse[type]) {\n    throw new Error('Unknown GeoJSON type: ' + obj.type)\n  }\n\n  if (geometryTypes.indexOf(type) !== -1) {\n    return parse[type].apply(this, [obj.coordinates])\n  } else if (type === 'GeometryCollection') {\n    return parse[type].apply(this, [obj.geometries])\n  }\n\n  // feature or feature collection\n  return parse[type].apply(this, [obj])\n};\n\n/**\n * Serialize a Geometry object into GeoJSON\n *\n * @param {Geometry}\n *        geometry A Geometry or array of Geometries.\n * @return {Object} A GeoJSON object represting the input Geometry/Geometries.\n * @private\n */\nGeoJSONParser.prototype.write = function write (geometry) {\n  var type = geometry.getGeometryType();\n\n  if (!extract[type]) {\n    throw new Error('Geometry is not supported')\n  }\n\n  return extract[type].apply(this, [geometry])\n};\n\nvar parse = {\n  /**\n   * Parse a GeoJSON Feature object\n   *\n   * @param {Object}\n   *          obj Object to parse.\n   *\n   * @return {Object} Feature with geometry/bbox converted to JSTS Geometries.\n   */\n  Feature: function (obj) {\n    var feature = {};\n\n    // copy features\n    for (var key in obj) {\n      feature[key] = obj[key];\n    }\n\n    // parse geometry\n    if (obj.geometry) {\n      var type = obj.geometry.type;\n      if (!parse[type]) {\n        throw new Error('Unknown GeoJSON type: ' + obj.type)\n      }\n      feature.geometry = this.read(obj.geometry);\n    }\n\n    // bbox\n    if (obj.bbox) {\n      feature.bbox = parse.bbox.apply(this, [obj.bbox]);\n    }\n\n    return feature\n  },\n\n  /**\n   * Parse a GeoJSON FeatureCollection object\n   *\n   * @param {Object}\n   *          obj Object to parse.\n   *\n   * @return {Object} FeatureCollection with geometry/bbox converted to JSTS Geometries.\n   */\n  FeatureCollection: function (obj) {\n    var this$1 = this;\n\n    var featureCollection = {};\n\n    if (obj.features) {\n      featureCollection.features = [];\n\n      for (var i = 0; i < obj.features.length; ++i) {\n        featureCollection.features.push(this$1.read(obj.features[i]));\n      }\n    }\n\n    if (obj.bbox) {\n      featureCollection.bbox = this.parse.bbox.apply(this, [obj.bbox]);\n    }\n\n    return featureCollection\n  },\n\n  /**\n   * Convert the ordinates in an array to an array of Coordinates\n   *\n   * @param {Array}\n   *          array Array with {Number}s.\n   *\n   * @return {Array} Array with Coordinates.\n   */\n  coordinates: function (array) {\n    var coordinates = [];\n    for (var i = 0; i < array.length; ++i) {\n      var sub = array[i];\n      coordinates.push(new Coordinate(sub[0], sub[1]));\n    }\n    return coordinates\n  },\n\n  /**\n   * Convert the bbox to a LinearRing\n   *\n   * @param {Array}\n   *          array Array with [xMin, yMin, xMax, yMax].\n   *\n   * @return {Array} Array with Coordinates.\n   */\n  bbox: function (array) {\n    return this.geometryFactory.createLinearRing([\n      new Coordinate(array[0], array[1]),\n      new Coordinate(array[2], array[1]),\n      new Coordinate(array[2], array[3]),\n      new Coordinate(array[0], array[3]),\n      new Coordinate(array[0], array[1])\n    ])\n  },\n\n  /**\n   * Convert an Array with ordinates to a Point\n   *\n   * @param {Array}\n   *          array Array with ordinates.\n   *\n   * @return {Point} Point.\n   */\n  Point: function (array) {\n    var coordinate = new Coordinate(array[0], array[1]);\n    return this.geometryFactory.createPoint(coordinate)\n  },\n\n  /**\n   * Convert an Array with coordinates to a MultiPoint\n   *\n   * @param {Array}\n   *          array Array with coordinates.\n   *\n   * @return {MultiPoint} MultiPoint.\n   */\n  MultiPoint: function (array) {\n    var this$1 = this;\n\n    var points = [];\n    for (var i = 0; i < array.length; ++i) {\n      points.push(parse.Point.apply(this$1, [array[i]]));\n    }\n    return this.geometryFactory.createMultiPoint(points)\n  },\n\n  /**\n   * Convert an Array with coordinates to a LineString\n   *\n   * @param {Array}\n   *          array Array with coordinates.\n   *\n   * @return {LineString} LineString.\n   */\n  LineString: function (array) {\n    var coordinates = parse.coordinates.apply(this, [array]);\n    return this.geometryFactory.createLineString(coordinates)\n  },\n\n  /**\n   * Convert an Array with coordinates to a MultiLineString\n   *\n   * @param {Array}\n   *          array Array with coordinates.\n   *\n   * @return {MultiLineString} MultiLineString.\n   */\n  MultiLineString: function (array) {\n    var this$1 = this;\n\n    var lineStrings = [];\n    for (var i = 0; i < array.length; ++i) {\n      lineStrings.push(parse.LineString.apply(this$1, [array[i]]));\n    }\n    return this.geometryFactory.createMultiLineString(lineStrings)\n  },\n\n  /**\n   * Convert an Array to a Polygon\n   *\n   * @param {Array}\n   *          array Array with shell and holes.\n   *\n   * @return {Polygon} Polygon.\n   */\n  Polygon: function (array) {\n    var this$1 = this;\n\n    var shellCoordinates = parse.coordinates.apply(this, [array[0]]);\n    var shell = this.geometryFactory.createLinearRing(shellCoordinates);\n    var holes = [];\n    for (var i = 1; i < array.length; ++i) {\n      var hole = array[i];\n      var coordinates = parse.coordinates.apply(this$1, [hole]);\n      var linearRing = this$1.geometryFactory.createLinearRing(coordinates);\n      holes.push(linearRing);\n    }\n    return this.geometryFactory.createPolygon(shell, holes)\n  },\n\n  /**\n   * Convert an Array to a MultiPolygon\n   *\n   * @param {Array}\n   *          array Array of arrays with shell and rings.\n   *\n   * @return {MultiPolygon} MultiPolygon.\n   */\n  MultiPolygon: function (array) {\n    var this$1 = this;\n\n    var polygons = [];\n    for (var i = 0; i < array.length; ++i) {\n      var polygon = array[i];\n      polygons.push(parse.Polygon.apply(this$1, [polygon]));\n    }\n    return this.geometryFactory.createMultiPolygon(polygons)\n  },\n\n  /**\n   * Convert an Array to a GeometryCollection\n   *\n   * @param {Array}\n   *          array Array of GeoJSON geometries.\n   *\n   * @return {GeometryCollection} GeometryCollection.\n   */\n  GeometryCollection: function (array) {\n    var this$1 = this;\n\n    var geometries = [];\n    for (var i = 0; i < array.length; ++i) {\n      var geometry = array[i];\n      geometries.push(this$1.read(geometry));\n    }\n    return this.geometryFactory.createGeometryCollection(geometries)\n  }\n};\n\nvar extract = {\n  /**\n   * Convert a Coordinate to an Array\n   *\n   * @param {Coordinate}\n   *          coordinate Coordinate to convert.\n   *\n   * @return {Array} Array of ordinates.\n   */\n  coordinate: function (coordinate) {\n    return [coordinate.x, coordinate.y]\n  },\n\n  /**\n   * Convert a Point to a GeoJSON object\n   *\n   * @param {Point}\n   *          point Point to convert.\n   *\n   * @return {Array} Array of 2 ordinates (paired to a coordinate).\n   */\n  Point: function (point) {\n    var array = extract.coordinate.apply(this, [point.getCoordinate()]);\n    return {\n      type: 'Point',\n      coordinates: array\n    }\n  },\n\n  /**\n   * Convert a MultiPoint to a GeoJSON object\n   *\n   * @param {MultiPoint}\n   *          multipoint MultiPoint to convert.\n   *\n   * @return {Array} Array of coordinates.\n   */\n  MultiPoint: function (multipoint) {\n    var this$1 = this;\n\n    var array = [];\n    for (var i = 0; i < multipoint._geometries.length; ++i) {\n      var point = multipoint._geometries[i];\n      var geoJson = extract.Point.apply(this$1, [point]);\n      array.push(geoJson.coordinates);\n    }\n    return {\n      type: 'MultiPoint',\n      coordinates: array\n    }\n  },\n\n  /**\n   * Convert a LineString to a GeoJSON object\n   *\n   * @param {LineString}\n   *          linestring LineString to convert.\n   *\n   * @return {Array} Array of coordinates.\n   */\n  LineString: function (linestring) {\n    var this$1 = this;\n\n    var array = [];\n    var coordinates = linestring.getCoordinates();\n    for (var i = 0; i < coordinates.length; ++i) {\n      var coordinate = coordinates[i];\n      array.push(extract.coordinate.apply(this$1, [coordinate]));\n    }\n    return {\n      type: 'LineString',\n      coordinates: array\n    }\n  },\n\n  /**\n   * Convert a MultiLineString to a GeoJSON object\n   *\n   * @param {MultiLineString}\n   *          multilinestring MultiLineString to convert.\n   *\n   * @return {Array} Array of Array of coordinates.\n   */\n  MultiLineString: function (multilinestring) {\n    var this$1 = this;\n\n    var array = [];\n    for (var i = 0; i < multilinestring._geometries.length; ++i) {\n      var linestring = multilinestring._geometries[i];\n      var geoJson = extract.LineString.apply(this$1, [linestring]);\n      array.push(geoJson.coordinates);\n    }\n    return {\n      type: 'MultiLineString',\n      coordinates: array\n    }\n  },\n\n  /**\n   * Convert a Polygon to a GeoJSON object\n   *\n   * @param {Polygon}\n   *          polygon Polygon to convert.\n   *\n   * @return {Array} Array with shell, holes.\n   */\n  Polygon: function (polygon) {\n    var this$1 = this;\n\n    var array = [];\n    var shellGeoJson = extract.LineString.apply(this, [polygon._shell]);\n    array.push(shellGeoJson.coordinates);\n    for (var i = 0; i < polygon._holes.length; ++i) {\n      var hole = polygon._holes[i];\n      var holeGeoJson = extract.LineString.apply(this$1, [hole]);\n      array.push(holeGeoJson.coordinates);\n    }\n    return {\n      type: 'Polygon',\n      coordinates: array\n    }\n  },\n\n  /**\n   * Convert a MultiPolygon to a GeoJSON object\n   *\n   * @param {MultiPolygon}\n   *          multipolygon MultiPolygon to convert.\n   *\n   * @return {Array} Array of polygons.\n   */\n  MultiPolygon: function (multipolygon) {\n    var this$1 = this;\n\n    var array = [];\n    for (var i = 0; i < multipolygon._geometries.length; ++i) {\n      var polygon = multipolygon._geometries[i];\n      var geoJson = extract.Polygon.apply(this$1, [polygon]);\n      array.push(geoJson.coordinates);\n    }\n    return {\n      type: 'MultiPolygon',\n      coordinates: array\n    }\n  },\n\n  /**\n   * Convert a GeometryCollection to a GeoJSON object\n   *\n   * @param {GeometryCollection}\n   *          collection GeometryCollection to convert.\n   *\n   * @return {Array} Array of geometries.\n   */\n  GeometryCollection: function (collection) {\n    var this$1 = this;\n\n    var array = [];\n    for (var i = 0; i < collection._geometries.length; ++i) {\n      var geometry = collection._geometries[i];\n      var type = geometry.getGeometryType();\n      array.push(extract[type].apply(this$1, [geometry]));\n    }\n    return {\n      type: 'GeometryCollection',\n      geometries: array\n    }\n  }\n};\n\n/**\n * Converts a geometry in GeoJSON to a {@link Geometry}.\n */\n\n/**\n * A <code>GeoJSONReader</code> is parameterized by a <code>GeometryFactory</code>,\n * to allow it to create <code>Geometry</code> objects of the appropriate\n * implementation. In particular, the <code>GeometryFactory</code> determines\n * the <code>PrecisionModel</code> and <code>SRID</code> that is used.\n *\n * @param {GeometryFactory} geometryFactory\n * @constructor\n */\nvar GeoJSONReader = function GeoJSONReader (geometryFactory) {\n  this.geometryFactory = geometryFactory || new GeometryFactory();\n  this.precisionModel = this.geometryFactory.getPrecisionModel();\n  this.parser = new GeoJSONParser(this.geometryFactory);\n};\n/**\n * Reads a GeoJSON representation of a {@link Geometry}\n *\n * Will also parse GeoJSON Features/FeatureCollections as custom objects.\n *\n * @param {Object|String} geoJson a GeoJSON Object or String.\n * @return {Geometry|Object} a <code>Geometry or Feature/FeatureCollection representation.</code>\n * @memberof GeoJSONReader\n */\nGeoJSONReader.prototype.read = function read (geoJson) {\n  var geometry = this.parser.read(geoJson);\n\n  if (this.precisionModel.getType() === PrecisionModel.FIXED) {\n    this.reducePrecision(geometry);\n  }\n\n  return geometry\n};\n\n// NOTE: this is a hack\nGeoJSONReader.prototype.reducePrecision = function reducePrecision (geometry) {\n    var this$1 = this;\n\n  var i, len;\n\n  if (geometry.coordinate) {\n    this.precisionModel.makePrecise(geometry.coordinate);\n  } else if (geometry.points) {\n    for (i = 0, len = geometry.points.length; i < len; i++) {\n      this$1.precisionModel.makePrecise(geometry.points[i]);\n    }\n  } else if (geometry.geometries) {\n    for (i = 0, len = geometry.geometries.length; i < len; i++) {\n      this$1.reducePrecision(geometry.geometries[i]);\n    }\n  }\n};\n\n/**\n * @module GeoJSONWriter\n */\n\n/**\n * Writes the GeoJSON representation of a {@link Geometry}. The\n * The GeoJSON format is defined <A\n * HREF=\"http://geojson.org/geojson-spec.html\">here</A>.\n */\n\n/**\n * The <code>GeoJSONWriter</code> outputs coordinates rounded to the precision\n * model. Only the maximum number of decimal places necessary to represent the\n * ordinates to the required precision will be output.\n *\n * @param {GeometryFactory} geometryFactory\n * @constructor\n */\nvar GeoJSONWriter = function GeoJSONWriter () {\n  this.parser = new GeoJSONParser(this.geometryFactory);\n};\n/**\n * Converts a <code>Geometry</code> to its GeoJSON representation.\n *\n * @param {Geometry}\n *        geometry a <code>Geometry</code> to process.\n * @return {Object} The GeoJSON representation of the Geometry.\n * @memberof GeoJSONWriter\n */\nGeoJSONWriter.prototype.write = function write (geometry) {\n  return this.parser.write(geometry)\n};\n\n/* eslint-disable no-undef */\n\n// io\n\nvar Position = function Position () {};\n\nvar staticAccessors$20 = { ON: { configurable: true },LEFT: { configurable: true },RIGHT: { configurable: true } };\n\nPosition.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nPosition.prototype.getClass = function getClass () {\n  return Position\n};\nPosition.opposite = function opposite (position) {\n  if (position === Position.LEFT) { return Position.RIGHT }\n  if (position === Position.RIGHT) { return Position.LEFT }\n  return position\n};\nstaticAccessors$20.ON.get = function () { return 0 };\nstaticAccessors$20.LEFT.get = function () { return 1 };\nstaticAccessors$20.RIGHT.get = function () { return 2 };\n\nObject.defineProperties( Position, staticAccessors$20 );\n\n/**\n * @param {string=} message Optional message\n * @extends {Error}\n * @constructor\n * @private\n */\nfunction EmptyStackException (message) {\n  this.message = message || '';\n}\nEmptyStackException.prototype = new Error();\n\n/**\n * @type {string}\n */\nEmptyStackException.prototype.name = 'EmptyStackException';\n\n/**\n * @see http://download.oracle.com/javase/6/docs/api/java/util/Stack.html\n *\n * @extends {List}\n * @constructor\n * @private\n */\nfunction Stack () {\n  /**\n   * @type {Array}\n   * @private\n   */\n  this.array_ = [];\n}\nStack.prototype = new List();\n\n/**\n * @override\n */\nStack.prototype.add = function (e) {\n  this.array_.push(e);\n  return true\n};\n\n/**\n * @override\n */\nStack.prototype.get = function (index) {\n  if (index < 0 || index >= this.size()) {\n    throw new Error()\n  }\n\n  return this.array_[index]\n};\n\n/**\n * Pushes an item onto the top of this stack.\n * @param {Object} e\n * @return {Object}\n */\nStack.prototype.push = function (e) {\n  this.array_.push(e);\n  return e\n};\n\n/**\n * Pushes an item onto the top of this stack.\n * @param {Object} e\n * @return {Object}\n */\nStack.prototype.pop = function (e) {\n  if (this.array_.length === 0) {\n    throw new EmptyStackException()\n  }\n\n  return this.array_.pop()\n};\n\n/**\n * Looks at the object at the top of this stack without removing it from the\n * stack.\n * @return {Object}\n */\nStack.prototype.peek = function () {\n  if (this.array_.length === 0) {\n    throw new EmptyStackException()\n  }\n\n  return this.array_[this.array_.length - 1]\n};\n\n/**\n * Tests if this stack is empty.\n * @return {boolean} true if and only if this stack contains no items; false\n *         otherwise.\n */\nStack.prototype.empty = function () {\n  if (this.array_.length === 0) {\n    return true\n  } else {\n    return false\n  }\n};\n\n/**\n * @return {boolean}\n */\nStack.prototype.isEmpty = function () {\n  return this.empty()\n};\n\n/**\n * Returns the 1-based position where an object is on this stack. If the object\n * o occurs as an item in this stack, this method returns the distance from the\n * top of the stack of the occurrence nearest the top of the stack; the topmost\n * item on the stack is considered to be at distance 1. The equals method is\n * used to compare o to the items in this stack.\n *\n * NOTE: does not currently actually use equals. (=== is used)\n *\n * @param {Object} o\n * @return {number} the 1-based position from the top of the stack where the\n *         object is located; the return value -1 indicates that the object is\n *         not on the stack.\n */\nStack.prototype.search = function (o) {\n  return this.array_.indexOf(o)\n};\n\n/**\n * @return {number}\n * @export\n */\nStack.prototype.size = function () {\n  return this.array_.length\n};\n\n/**\n * @return {Array}\n */\nStack.prototype.toArray = function () {\n  var this$1 = this;\n\n  var array = [];\n\n  for (var i = 0, len = this.array_.length; i < len; i++) {\n    array.push(this$1.array_[i]);\n  }\n\n  return array\n};\n\nvar RightmostEdgeFinder = function RightmostEdgeFinder () {\n  this._minIndex = -1;\n  this._minCoord = null;\n  this._minDe = null;\n  this._orientedDe = null;\n};\nRightmostEdgeFinder.prototype.getCoordinate = function getCoordinate () {\n  return this._minCoord\n};\nRightmostEdgeFinder.prototype.getRightmostSide = function getRightmostSide (de, index) {\n  var side = this.getRightmostSideOfSegment(de, index);\n  if (side < 0) { side = this.getRightmostSideOfSegment(de, index - 1); }\n  if (side < 0) {\n    this._minCoord = null;\n    this.checkForRightmostCoordinate(de);\n  }\n  return side\n};\nRightmostEdgeFinder.prototype.findRightmostEdgeAtVertex = function findRightmostEdgeAtVertex () {\n  var pts = this._minDe.getEdge().getCoordinates();\n  Assert.isTrue(this._minIndex > 0 && this._minIndex < pts.length, 'rightmost point expected to be interior vertex of edge');\n  var pPrev = pts[this._minIndex - 1];\n  var pNext = pts[this._minIndex + 1];\n  var orientation = CGAlgorithms.computeOrientation(this._minCoord, pNext, pPrev);\n  var usePrev = false;\n  if (pPrev.y < this._minCoord.y && pNext.y < this._minCoord.y && orientation === CGAlgorithms.COUNTERCLOCKWISE) {\n    usePrev = true;\n  } else if (pPrev.y > this._minCoord.y && pNext.y > this._minCoord.y && orientation === CGAlgorithms.CLOCKWISE) {\n    usePrev = true;\n  }\n  if (usePrev) {\n    this._minIndex = this._minIndex - 1;\n  }\n};\nRightmostEdgeFinder.prototype.getRightmostSideOfSegment = function getRightmostSideOfSegment (de, i) {\n  var e = de.getEdge();\n  var coord = e.getCoordinates();\n  if (i < 0 || i + 1 >= coord.length) { return -1 }\n  if (coord[i].y === coord[i + 1].y) { return -1 }\n  var pos = Position.LEFT;\n  if (coord[i].y < coord[i + 1].y) { pos = Position.RIGHT; }\n  return pos\n};\nRightmostEdgeFinder.prototype.getEdge = function getEdge () {\n  return this._orientedDe\n};\nRightmostEdgeFinder.prototype.checkForRightmostCoordinate = function checkForRightmostCoordinate (de) {\n    var this$1 = this;\n\n  var coord = de.getEdge().getCoordinates();\n  for (var i = 0; i < coord.length - 1; i++) {\n    if (this$1._minCoord === null || coord[i].x > this$1._minCoord.x) {\n      this$1._minDe = de;\n      this$1._minIndex = i;\n      this$1._minCoord = coord[i];\n    }\n  }\n};\nRightmostEdgeFinder.prototype.findRightmostEdgeAtNode = function findRightmostEdgeAtNode () {\n  var node = this._minDe.getNode();\n  var star = node.getEdges();\n  this._minDe = star.getRightmostEdge();\n  if (!this._minDe.isForward()) {\n    this._minDe = this._minDe.getSym();\n    this._minIndex = this._minDe.getEdge().getCoordinates().length - 1;\n  }\n};\nRightmostEdgeFinder.prototype.findEdge = function findEdge (dirEdgeList) {\n    var this$1 = this;\n\n  for (var i = dirEdgeList.iterator(); i.hasNext();) {\n    var de = i.next();\n    if (!de.isForward()) { continue }\n    this$1.checkForRightmostCoordinate(de);\n  }\n  Assert.isTrue(this._minIndex !== 0 || this._minCoord.equals(this._minDe.getCoordinate()), 'inconsistency in rightmost processing');\n  if (this._minIndex === 0) {\n    this.findRightmostEdgeAtNode();\n  } else {\n    this.findRightmostEdgeAtVertex();\n  }\n  this._orientedDe = this._minDe;\n  var rightmostSide = this.getRightmostSide(this._minDe, this._minIndex);\n  if (rightmostSide === Position.LEFT) {\n    this._orientedDe = this._minDe.getSym();\n  }\n};\nRightmostEdgeFinder.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nRightmostEdgeFinder.prototype.getClass = function getClass () {\n  return RightmostEdgeFinder\n};\n\nvar TopologyException = (function (RuntimeException$$1) {\n  function TopologyException (msg, pt) {\n    RuntimeException$$1.call(this, TopologyException.msgWithCoord(msg, pt));\n    this.pt = pt ? new Coordinate(pt) : null;\n    this.name = 'TopologyException';\n  }\n\n  if ( RuntimeException$$1 ) TopologyException.__proto__ = RuntimeException$$1;\n  TopologyException.prototype = Object.create( RuntimeException$$1 && RuntimeException$$1.prototype );\n  TopologyException.prototype.constructor = TopologyException;\n  TopologyException.prototype.getCoordinate = function getCoordinate () {\n    return this.pt\n  };\n  TopologyException.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  TopologyException.prototype.getClass = function getClass () {\n    return TopologyException\n  };\n  TopologyException.msgWithCoord = function msgWithCoord (msg, pt) {\n    if (!pt) { return msg + ' [ ' + pt + ' ]' }\n    return msg\n  };\n\n  return TopologyException;\n}(RuntimeException));\n\nvar LinkedList = function LinkedList () {\n  this.array_ = [];\n};\nLinkedList.prototype.addLast = function addLast (e) {\n  this.array_.push(e);\n};\nLinkedList.prototype.removeFirst = function removeFirst () {\n  return this.array_.shift()\n};\nLinkedList.prototype.isEmpty = function isEmpty () {\n  return this.array_.length === 0\n};\n\nvar BufferSubgraph = function BufferSubgraph () {\n  this._finder = null;\n  this._dirEdgeList = new ArrayList();\n  this._nodes = new ArrayList();\n  this._rightMostCoord = null;\n  this._env = null;\n  this._finder = new RightmostEdgeFinder();\n};\nBufferSubgraph.prototype.clearVisitedEdges = function clearVisitedEdges () {\n  for (var it = this._dirEdgeList.iterator(); it.hasNext();) {\n    var de = it.next();\n    de.setVisited(false);\n  }\n};\nBufferSubgraph.prototype.getRightmostCoordinate = function getRightmostCoordinate () {\n  return this._rightMostCoord\n};\nBufferSubgraph.prototype.computeNodeDepth = function computeNodeDepth (n) {\n    var this$1 = this;\n\n  var startEdge = null;\n  for (var i = n.getEdges().iterator(); i.hasNext();) {\n    var de = i.next();\n    if (de.isVisited() || de.getSym().isVisited()) {\n      startEdge = de;\n      break\n    }\n  }\n  if (startEdge === null) { throw new TopologyException('unable to find edge to compute depths at ' + n.getCoordinate()) }\n  n.getEdges().computeDepths(startEdge);\n  for (var i$1 = n.getEdges().iterator(); i$1.hasNext();) {\n    var de$1 = i$1.next();\n    de$1.setVisited(true);\n    this$1.copySymDepths(de$1);\n  }\n};\nBufferSubgraph.prototype.computeDepth = function computeDepth (outsideDepth) {\n  this.clearVisitedEdges();\n  var de = this._finder.getEdge();\n  // const n = de.getNode()\n  // const label = de.getLabel()\n  de.setEdgeDepths(Position.RIGHT, outsideDepth);\n  this.copySymDepths(de);\n  this.computeDepths(de);\n};\nBufferSubgraph.prototype.create = function create (node) {\n  this.addReachable(node);\n  this._finder.findEdge(this._dirEdgeList);\n  this._rightMostCoord = this._finder.getCoordinate();\n};\nBufferSubgraph.prototype.findResultEdges = function findResultEdges () {\n  for (var it = this._dirEdgeList.iterator(); it.hasNext();) {\n    var de = it.next();\n    if (de.getDepth(Position.RIGHT) >= 1 && de.getDepth(Position.LEFT) <= 0 && !de.isInteriorAreaEdge()) {\n      de.setInResult(true);\n    }\n  }\n};\nBufferSubgraph.prototype.computeDepths = function computeDepths (startEdge) {\n    var this$1 = this;\n\n  var nodesVisited = new HashSet();\n  var nodeQueue = new LinkedList();\n  var startNode = startEdge.getNode();\n  nodeQueue.addLast(startNode);\n  nodesVisited.add(startNode);\n  startEdge.setVisited(true);\n  while (!nodeQueue.isEmpty()) {\n    var n = nodeQueue.removeFirst();\n    nodesVisited.add(n);\n    this$1.computeNodeDepth(n);\n    for (var i = n.getEdges().iterator(); i.hasNext();) {\n      var de = i.next();\n      var sym = de.getSym();\n      if (sym.isVisited()) { continue }\n      var adjNode = sym.getNode();\n      if (!nodesVisited.contains(adjNode)) {\n        nodeQueue.addLast(adjNode);\n        nodesVisited.add(adjNode);\n      }\n    }\n  }\n};\nBufferSubgraph.prototype.compareTo = function compareTo (o) {\n  var graph = o;\n  if (this._rightMostCoord.x < graph._rightMostCoord.x) {\n    return -1\n  }\n  if (this._rightMostCoord.x > graph._rightMostCoord.x) {\n    return 1\n  }\n  return 0\n};\nBufferSubgraph.prototype.getEnvelope = function getEnvelope () {\n  if (this._env === null) {\n    var edgeEnv = new Envelope();\n    for (var it = this._dirEdgeList.iterator(); it.hasNext();) {\n      var dirEdge = it.next();\n      var pts = dirEdge.getEdge().getCoordinates();\n      for (var i = 0; i < pts.length - 1; i++) {\n        edgeEnv.expandToInclude(pts[i]);\n      }\n    }\n    this._env = edgeEnv;\n  }\n  return this._env\n};\nBufferSubgraph.prototype.addReachable = function addReachable (startNode) {\n    var this$1 = this;\n\n  var nodeStack = new Stack();\n  nodeStack.add(startNode);\n  while (!nodeStack.empty()) {\n    var node = nodeStack.pop();\n    this$1.add(node, nodeStack);\n  }\n};\nBufferSubgraph.prototype.copySymDepths = function copySymDepths (de) {\n  var sym = de.getSym();\n  sym.setDepth(Position.LEFT, de.getDepth(Position.RIGHT));\n  sym.setDepth(Position.RIGHT, de.getDepth(Position.LEFT));\n};\nBufferSubgraph.prototype.add = function add (node, nodeStack) {\n    var this$1 = this;\n\n  node.setVisited(true);\n  this._nodes.add(node);\n  for (var i = node.getEdges().iterator(); i.hasNext();) {\n    var de = i.next();\n    this$1._dirEdgeList.add(de);\n    var sym = de.getSym();\n    var symNode = sym.getNode();\n    if (!symNode.isVisited()) { nodeStack.push(symNode); }\n  }\n};\nBufferSubgraph.prototype.getNodes = function getNodes () {\n  return this._nodes\n};\nBufferSubgraph.prototype.getDirectedEdges = function getDirectedEdges () {\n  return this._dirEdgeList\n};\nBufferSubgraph.prototype.interfaces_ = function interfaces_ () {\n  return [Comparable]\n};\nBufferSubgraph.prototype.getClass = function getClass () {\n  return BufferSubgraph\n};\n\nvar TopologyLocation = function TopologyLocation () {\n  var this$1 = this;\n\n  this.location = null;\n  if (arguments.length === 1) {\n    if (arguments[0] instanceof Array) {\n      var location = arguments[0];\n      this.init(location.length);\n    } else if (Number.isInteger(arguments[0])) {\n      var on = arguments[0];\n      this.init(1);\n      this.location[Position.ON] = on;\n    } else if (arguments[0] instanceof TopologyLocation) {\n      var gl = arguments[0];\n      this.init(gl.location.length);\n      if (gl !== null) {\n        for (var i = 0; i < this.location.length; i++) {\n          this$1.location[i] = gl.location[i];\n        }\n      }\n    }\n  } else if (arguments.length === 3) {\n    var on$1 = arguments[0];\n    var left = arguments[1];\n    var right = arguments[2];\n    this.init(3);\n    this.location[Position.ON] = on$1;\n    this.location[Position.LEFT] = left;\n    this.location[Position.RIGHT] = right;\n  }\n};\nTopologyLocation.prototype.setAllLocations = function setAllLocations (locValue) {\n    var this$1 = this;\n\n  for (var i = 0; i < this.location.length; i++) {\n    this$1.location[i] = locValue;\n  }\n};\nTopologyLocation.prototype.isNull = function isNull () {\n    var this$1 = this;\n\n  for (var i = 0; i < this.location.length; i++) {\n    if (this$1.location[i] !== Location.NONE) { return false }\n  }\n  return true\n};\nTopologyLocation.prototype.setAllLocationsIfNull = function setAllLocationsIfNull (locValue) {\n    var this$1 = this;\n\n  for (var i = 0; i < this.location.length; i++) {\n    if (this$1.location[i] === Location.NONE) { this$1.location[i] = locValue; }\n  }\n};\nTopologyLocation.prototype.isLine = function isLine () {\n  return this.location.length === 1\n};\nTopologyLocation.prototype.merge = function merge (gl) {\n    var this$1 = this;\n\n  if (gl.location.length > this.location.length) {\n    var newLoc = new Array(3).fill(null);\n    newLoc[Position.ON] = this.location[Position.ON];\n    newLoc[Position.LEFT] = Location.NONE;\n    newLoc[Position.RIGHT] = Location.NONE;\n    this.location = newLoc;\n  }\n  for (var i = 0; i < this.location.length; i++) {\n    if (this$1.location[i] === Location.NONE && i < gl.location.length) { this$1.location[i] = gl.location[i]; }\n  }\n};\nTopologyLocation.prototype.getLocations = function getLocations () {\n  return this.location\n};\nTopologyLocation.prototype.flip = function flip () {\n  if (this.location.length <= 1) { return null }\n  var temp = this.location[Position.LEFT];\n  this.location[Position.LEFT] = this.location[Position.RIGHT];\n  this.location[Position.RIGHT] = temp;\n};\nTopologyLocation.prototype.toString = function toString () {\n  var buf = new StringBuffer();\n  if (this.location.length > 1) { buf.append(Location.toLocationSymbol(this.location[Position.LEFT])); }\n  buf.append(Location.toLocationSymbol(this.location[Position.ON]));\n  if (this.location.length > 1) { buf.append(Location.toLocationSymbol(this.location[Position.RIGHT])); }\n  return buf.toString()\n};\nTopologyLocation.prototype.setLocations = function setLocations (on, left, right) {\n  this.location[Position.ON] = on;\n  this.location[Position.LEFT] = left;\n  this.location[Position.RIGHT] = right;\n};\nTopologyLocation.prototype.get = function get (posIndex) {\n  if (posIndex < this.location.length) { return this.location[posIndex] }\n  return Location.NONE\n};\nTopologyLocation.prototype.isArea = function isArea () {\n  return this.location.length > 1\n};\nTopologyLocation.prototype.isAnyNull = function isAnyNull () {\n    var this$1 = this;\n\n  for (var i = 0; i < this.location.length; i++) {\n    if (this$1.location[i] === Location.NONE) { return true }\n  }\n  return false\n};\nTopologyLocation.prototype.setLocation = function setLocation () {\n  if (arguments.length === 1) {\n    var locValue = arguments[0];\n    this.setLocation(Position.ON, locValue);\n  } else if (arguments.length === 2) {\n    var locIndex = arguments[0];\n    var locValue$1 = arguments[1];\n    this.location[locIndex] = locValue$1;\n  }\n};\nTopologyLocation.prototype.init = function init (size) {\n  this.location = new Array(size).fill(null);\n  this.setAllLocations(Location.NONE);\n};\nTopologyLocation.prototype.isEqualOnSide = function isEqualOnSide (le, locIndex) {\n  return this.location[locIndex] === le.location[locIndex]\n};\nTopologyLocation.prototype.allPositionsEqual = function allPositionsEqual (loc) {\n    var this$1 = this;\n\n  for (var i = 0; i < this.location.length; i++) {\n    if (this$1.location[i] !== loc) { return false }\n  }\n  return true\n};\nTopologyLocation.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nTopologyLocation.prototype.getClass = function getClass () {\n  return TopologyLocation\n};\n\nvar Label = function Label () {\n  this.elt = new Array(2).fill(null);\n  if (arguments.length === 1) {\n    if (Number.isInteger(arguments[0])) {\n      var onLoc = arguments[0];\n      this.elt[0] = new TopologyLocation(onLoc);\n      this.elt[1] = new TopologyLocation(onLoc);\n    } else if (arguments[0] instanceof Label) {\n      var lbl = arguments[0];\n      this.elt[0] = new TopologyLocation(lbl.elt[0]);\n      this.elt[1] = new TopologyLocation(lbl.elt[1]);\n    }\n  } else if (arguments.length === 2) {\n    var geomIndex = arguments[0];\n    var onLoc$1 = arguments[1];\n    this.elt[0] = new TopologyLocation(Location.NONE);\n    this.elt[1] = new TopologyLocation(Location.NONE);\n    this.elt[geomIndex].setLocation(onLoc$1);\n  } else if (arguments.length === 3) {\n    var onLoc$2 = arguments[0];\n    var leftLoc = arguments[1];\n    var rightLoc = arguments[2];\n    this.elt[0] = new TopologyLocation(onLoc$2, leftLoc, rightLoc);\n    this.elt[1] = new TopologyLocation(onLoc$2, leftLoc, rightLoc);\n  } else if (arguments.length === 4) {\n    var geomIndex$1 = arguments[0];\n    var onLoc$3 = arguments[1];\n    var leftLoc$1 = arguments[2];\n    var rightLoc$1 = arguments[3];\n    this.elt[0] = new TopologyLocation(Location.NONE, Location.NONE, Location.NONE);\n    this.elt[1] = new TopologyLocation(Location.NONE, Location.NONE, Location.NONE);\n    this.elt[geomIndex$1].setLocations(onLoc$3, leftLoc$1, rightLoc$1);\n  }\n};\nLabel.prototype.getGeometryCount = function getGeometryCount () {\n  var count = 0;\n  if (!this.elt[0].isNull()) { count++; }\n  if (!this.elt[1].isNull()) { count++; }\n  return count\n};\nLabel.prototype.setAllLocations = function setAllLocations (geomIndex, location) {\n  this.elt[geomIndex].setAllLocations(location);\n};\nLabel.prototype.isNull = function isNull (geomIndex) {\n  return this.elt[geomIndex].isNull()\n};\nLabel.prototype.setAllLocationsIfNull = function setAllLocationsIfNull () {\n  if (arguments.length === 1) {\n    var location = arguments[0];\n    this.setAllLocationsIfNull(0, location);\n    this.setAllLocationsIfNull(1, location);\n  } else if (arguments.length === 2) {\n    var geomIndex = arguments[0];\n    var location$1 = arguments[1];\n    this.elt[geomIndex].setAllLocationsIfNull(location$1);\n  }\n};\nLabel.prototype.isLine = function isLine (geomIndex) {\n  return this.elt[geomIndex].isLine()\n};\nLabel.prototype.merge = function merge (lbl) {\n    var this$1 = this;\n\n  for (var i = 0; i < 2; i++) {\n    if (this$1.elt[i] === null && lbl.elt[i] !== null) {\n      this$1.elt[i] = new TopologyLocation(lbl.elt[i]);\n    } else {\n      this$1.elt[i].merge(lbl.elt[i]);\n    }\n  }\n};\nLabel.prototype.flip = function flip () {\n  this.elt[0].flip();\n  this.elt[1].flip();\n};\nLabel.prototype.getLocation = function getLocation () {\n  if (arguments.length === 1) {\n    var geomIndex = arguments[0];\n    return this.elt[geomIndex].get(Position.ON)\n  } else if (arguments.length === 2) {\n    var geomIndex$1 = arguments[0];\n    var posIndex = arguments[1];\n    return this.elt[geomIndex$1].get(posIndex)\n  }\n};\nLabel.prototype.toString = function toString () {\n  var buf = new StringBuffer();\n  if (this.elt[0] !== null) {\n    buf.append('A:');\n    buf.append(this.elt[0].toString());\n  }\n  if (this.elt[1] !== null) {\n    buf.append(' B:');\n    buf.append(this.elt[1].toString());\n  }\n  return buf.toString()\n};\nLabel.prototype.isArea = function isArea () {\n  if (arguments.length === 0) {\n    return this.elt[0].isArea() || this.elt[1].isArea()\n  } else if (arguments.length === 1) {\n    var geomIndex = arguments[0];\n    return this.elt[geomIndex].isArea()\n  }\n};\nLabel.prototype.isAnyNull = function isAnyNull (geomIndex) {\n  return this.elt[geomIndex].isAnyNull()\n};\nLabel.prototype.setLocation = function setLocation () {\n  if (arguments.length === 2) {\n    var geomIndex = arguments[0];\n    var location = arguments[1];\n    this.elt[geomIndex].setLocation(Position.ON, location);\n  } else if (arguments.length === 3) {\n    var geomIndex$1 = arguments[0];\n    var posIndex = arguments[1];\n    var location$1 = arguments[2];\n    this.elt[geomIndex$1].setLocation(posIndex, location$1);\n  }\n};\nLabel.prototype.isEqualOnSide = function isEqualOnSide (lbl, side) {\n  return this.elt[0].isEqualOnSide(lbl.elt[0], side) && this.elt[1].isEqualOnSide(lbl.elt[1], side)\n};\nLabel.prototype.allPositionsEqual = function allPositionsEqual (geomIndex, loc) {\n  return this.elt[geomIndex].allPositionsEqual(loc)\n};\nLabel.prototype.toLine = function toLine (geomIndex) {\n  if (this.elt[geomIndex].isArea()) { this.elt[geomIndex] = new TopologyLocation(this.elt[geomIndex].location[0]); }\n};\nLabel.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nLabel.prototype.getClass = function getClass () {\n  return Label\n};\nLabel.toLineLabel = function toLineLabel (label) {\n  var lineLabel = new Label(Location.NONE);\n  for (var i = 0; i < 2; i++) {\n    lineLabel.setLocation(i, label.getLocation(i));\n  }\n  return lineLabel\n};\n\nvar EdgeRing = function EdgeRing () {\n  this._startDe = null;\n  this._maxNodeDegree = -1;\n  this._edges = new ArrayList();\n  this._pts = new ArrayList();\n  this._label = new Label(Location.NONE);\n  this._ring = null;\n  this._isHole = null;\n  this._shell = null;\n  this._holes = new ArrayList();\n  this._geometryFactory = null;\n  var start = arguments[0];\n  var geometryFactory = arguments[1];\n  this._geometryFactory = geometryFactory;\n  this.computePoints(start);\n  this.computeRing();\n};\nEdgeRing.prototype.computeRing = function computeRing () {\n    var this$1 = this;\n\n  if (this._ring !== null) { return null }\n  var coord = new Array(this._pts.size()).fill(null);\n  for (var i = 0; i < this._pts.size(); i++) {\n    coord[i] = this$1._pts.get(i);\n  }\n  this._ring = this._geometryFactory.createLinearRing(coord);\n  this._isHole = CGAlgorithms.isCCW(this._ring.getCoordinates());\n};\nEdgeRing.prototype.isIsolated = function isIsolated () {\n  return this._label.getGeometryCount() === 1\n};\nEdgeRing.prototype.computePoints = function computePoints (start) {\n    var this$1 = this;\n\n  this._startDe = start;\n  var de = start;\n  var isFirstEdge = true;\n  do {\n    if (de === null) { throw new TopologyException('Found null DirectedEdge') }\n    if (de.getEdgeRing() === this$1) { throw new TopologyException('Directed Edge visited twice during ring-building at ' + de.getCoordinate()) }\n    this$1._edges.add(de);\n    var label = de.getLabel();\n    Assert.isTrue(label.isArea());\n    this$1.mergeLabel(label);\n    this$1.addPoints(de.getEdge(), de.isForward(), isFirstEdge);\n    isFirstEdge = false;\n    this$1.setEdgeRing(de, this$1);\n    de = this$1.getNext(de);\n  } while (de !== this._startDe)\n};\nEdgeRing.prototype.getLinearRing = function getLinearRing () {\n  return this._ring\n};\nEdgeRing.prototype.getCoordinate = function getCoordinate (i) {\n  return this._pts.get(i)\n};\nEdgeRing.prototype.computeMaxNodeDegree = function computeMaxNodeDegree () {\n    var this$1 = this;\n\n  this._maxNodeDegree = 0;\n  var de = this._startDe;\n  do {\n    var node = de.getNode();\n    var degree = node.getEdges().getOutgoingDegree(this$1);\n    if (degree > this$1._maxNodeDegree) { this$1._maxNodeDegree = degree; }\n    de = this$1.getNext(de);\n  } while (de !== this._startDe)\n  this._maxNodeDegree *= 2;\n};\nEdgeRing.prototype.addPoints = function addPoints (edge, isForward, isFirstEdge) {\n    var this$1 = this;\n\n  var edgePts = edge.getCoordinates();\n  if (isForward) {\n    var startIndex = 1;\n    if (isFirstEdge) { startIndex = 0; }\n    for (var i = startIndex; i < edgePts.length; i++) {\n      this$1._pts.add(edgePts[i]);\n    }\n  } else {\n    var startIndex$1 = edgePts.length - 2;\n    if (isFirstEdge) { startIndex$1 = edgePts.length - 1; }\n    for (var i$1 = startIndex$1; i$1 >= 0; i$1--) {\n      this$1._pts.add(edgePts[i$1]);\n    }\n  }\n};\nEdgeRing.prototype.isHole = function isHole () {\n  return this._isHole\n};\nEdgeRing.prototype.setInResult = function setInResult () {\n  var de = this._startDe;\n  do {\n    de.getEdge().setInResult(true);\n    de = de.getNext();\n  } while (de !== this._startDe)\n};\nEdgeRing.prototype.containsPoint = function containsPoint (p) {\n  var shell = this.getLinearRing();\n  var env = shell.getEnvelopeInternal();\n  if (!env.contains(p)) { return false }\n  if (!CGAlgorithms.isPointInRing(p, shell.getCoordinates())) { return false }\n  for (var i = this._holes.iterator(); i.hasNext();) {\n    var hole = i.next();\n    if (hole.containsPoint(p)) { return false }\n  }\n  return true\n};\nEdgeRing.prototype.addHole = function addHole (ring) {\n  this._holes.add(ring);\n};\nEdgeRing.prototype.isShell = function isShell () {\n  return this._shell === null\n};\nEdgeRing.prototype.getLabel = function getLabel () {\n  return this._label\n};\nEdgeRing.prototype.getEdges = function getEdges () {\n  return this._edges\n};\nEdgeRing.prototype.getMaxNodeDegree = function getMaxNodeDegree () {\n  if (this._maxNodeDegree < 0) { this.computeMaxNodeDegree(); }\n  return this._maxNodeDegree\n};\nEdgeRing.prototype.getShell = function getShell () {\n  return this._shell\n};\nEdgeRing.prototype.mergeLabel = function mergeLabel () {\n  if (arguments.length === 1) {\n    var deLabel = arguments[0];\n    this.mergeLabel(deLabel, 0);\n    this.mergeLabel(deLabel, 1);\n  } else if (arguments.length === 2) {\n    var deLabel$1 = arguments[0];\n    var geomIndex = arguments[1];\n    var loc = deLabel$1.getLocation(geomIndex, Position.RIGHT);\n    if (loc === Location.NONE) { return null }\n    if (this._label.getLocation(geomIndex) === Location.NONE) {\n      this._label.setLocation(geomIndex, loc);\n      return null\n    }\n  }\n};\nEdgeRing.prototype.setShell = function setShell (shell) {\n  this._shell = shell;\n  if (shell !== null) { shell.addHole(this); }\n};\nEdgeRing.prototype.toPolygon = function toPolygon (geometryFactory) {\n    var this$1 = this;\n\n  var holeLR = new Array(this._holes.size()).fill(null);\n  for (var i = 0; i < this._holes.size(); i++) {\n    holeLR[i] = this$1._holes.get(i).getLinearRing();\n  }\n  var poly = geometryFactory.createPolygon(this.getLinearRing(), holeLR);\n  return poly\n};\nEdgeRing.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nEdgeRing.prototype.getClass = function getClass () {\n  return EdgeRing\n};\n\nvar MinimalEdgeRing = (function (EdgeRing$$1) {\n  function MinimalEdgeRing () {\n    var start = arguments[0];\n    var geometryFactory = arguments[1];\n    EdgeRing$$1.call(this, start, geometryFactory);\n  }\n\n  if ( EdgeRing$$1 ) MinimalEdgeRing.__proto__ = EdgeRing$$1;\n  MinimalEdgeRing.prototype = Object.create( EdgeRing$$1 && EdgeRing$$1.prototype );\n  MinimalEdgeRing.prototype.constructor = MinimalEdgeRing;\n  MinimalEdgeRing.prototype.setEdgeRing = function setEdgeRing (de, er) {\n    de.setMinEdgeRing(er);\n  };\n  MinimalEdgeRing.prototype.getNext = function getNext (de) {\n    return de.getNextMin()\n  };\n  MinimalEdgeRing.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  MinimalEdgeRing.prototype.getClass = function getClass () {\n    return MinimalEdgeRing\n  };\n\n  return MinimalEdgeRing;\n}(EdgeRing));\n\nvar MaximalEdgeRing = (function (EdgeRing$$1) {\n  function MaximalEdgeRing () {\n    var start = arguments[0];\n    var geometryFactory = arguments[1];\n    EdgeRing$$1.call(this, start, geometryFactory);\n  }\n\n  if ( EdgeRing$$1 ) MaximalEdgeRing.__proto__ = EdgeRing$$1;\n  MaximalEdgeRing.prototype = Object.create( EdgeRing$$1 && EdgeRing$$1.prototype );\n  MaximalEdgeRing.prototype.constructor = MaximalEdgeRing;\n  MaximalEdgeRing.prototype.buildMinimalRings = function buildMinimalRings () {\n    var this$1 = this;\n\n    var minEdgeRings = new ArrayList();\n    var de = this._startDe;\n    do {\n      if (de.getMinEdgeRing() === null) {\n        var minEr = new MinimalEdgeRing(de, this$1._geometryFactory);\n        minEdgeRings.add(minEr);\n      }\n      de = de.getNext();\n    } while (de !== this._startDe)\n    return minEdgeRings\n  };\n  MaximalEdgeRing.prototype.setEdgeRing = function setEdgeRing (de, er) {\n    de.setEdgeRing(er);\n  };\n  MaximalEdgeRing.prototype.linkDirectedEdgesForMinimalEdgeRings = function linkDirectedEdgesForMinimalEdgeRings () {\n    var this$1 = this;\n\n    var de = this._startDe;\n    do {\n      var node = de.getNode();\n      node.getEdges().linkMinimalDirectedEdges(this$1);\n      de = de.getNext();\n    } while (de !== this._startDe)\n  };\n  MaximalEdgeRing.prototype.getNext = function getNext (de) {\n    return de.getNext()\n  };\n  MaximalEdgeRing.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  MaximalEdgeRing.prototype.getClass = function getClass () {\n    return MaximalEdgeRing\n  };\n\n  return MaximalEdgeRing;\n}(EdgeRing));\n\nvar GraphComponent = function GraphComponent () {\n  this._label = null;\n  this._isInResult = false;\n  this._isCovered = false;\n  this._isCoveredSet = false;\n  this._isVisited = false;\n  if (arguments.length === 0) {} else if (arguments.length === 1) {\n    var label = arguments[0];\n    this._label = label;\n  }\n};\nGraphComponent.prototype.setVisited = function setVisited (isVisited) {\n  this._isVisited = isVisited;\n};\nGraphComponent.prototype.setInResult = function setInResult (isInResult) {\n  this._isInResult = isInResult;\n};\nGraphComponent.prototype.isCovered = function isCovered () {\n  return this._isCovered\n};\nGraphComponent.prototype.isCoveredSet = function isCoveredSet () {\n  return this._isCoveredSet\n};\nGraphComponent.prototype.setLabel = function setLabel (label) {\n  this._label = label;\n};\nGraphComponent.prototype.getLabel = function getLabel () {\n  return this._label\n};\nGraphComponent.prototype.setCovered = function setCovered (isCovered) {\n  this._isCovered = isCovered;\n  this._isCoveredSet = true;\n};\nGraphComponent.prototype.updateIM = function updateIM (im) {\n  Assert.isTrue(this._label.getGeometryCount() >= 2, 'found partial label');\n  this.computeIM(im);\n};\nGraphComponent.prototype.isInResult = function isInResult () {\n  return this._isInResult\n};\nGraphComponent.prototype.isVisited = function isVisited () {\n  return this._isVisited\n};\nGraphComponent.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nGraphComponent.prototype.getClass = function getClass () {\n  return GraphComponent\n};\n\nvar Node = (function (GraphComponent$$1) {\n  function Node () {\n    GraphComponent$$1.call(this);\n    this._coord = null;\n    this._edges = null;\n    var coord = arguments[0];\n    var edges = arguments[1];\n    this._coord = coord;\n    this._edges = edges;\n    this._label = new Label(0, Location.NONE);\n  }\n\n  if ( GraphComponent$$1 ) Node.__proto__ = GraphComponent$$1;\n  Node.prototype = Object.create( GraphComponent$$1 && GraphComponent$$1.prototype );\n  Node.prototype.constructor = Node;\n  Node.prototype.isIncidentEdgeInResult = function isIncidentEdgeInResult () {\n    for (var it = this.getEdges().getEdges().iterator(); it.hasNext();) {\n      var de = it.next();\n      if (de.getEdge().isInResult()) { return true }\n    }\n    return false\n  };\n  Node.prototype.isIsolated = function isIsolated () {\n    return this._label.getGeometryCount() === 1\n  };\n  Node.prototype.getCoordinate = function getCoordinate () {\n    return this._coord\n  };\n  Node.prototype.print = function print (out) {\n    out.println('node ' + this._coord + ' lbl: ' + this._label);\n  };\n  Node.prototype.computeIM = function computeIM (im) {};\n  Node.prototype.computeMergedLocation = function computeMergedLocation (label2, eltIndex) {\n    var loc = Location.NONE;\n    loc = this._label.getLocation(eltIndex);\n    if (!label2.isNull(eltIndex)) {\n      var nLoc = label2.getLocation(eltIndex);\n      if (loc !== Location.BOUNDARY) { loc = nLoc; }\n    }\n    return loc\n  };\n  Node.prototype.setLabel = function setLabel () {\n    if (arguments.length === 2) {\n      var argIndex = arguments[0];\n      var onLocation = arguments[1];\n      if (this._label === null) {\n        this._label = new Label(argIndex, onLocation);\n      } else { this._label.setLocation(argIndex, onLocation); }\n    } else { return GraphComponent$$1.prototype.setLabel.apply(this, arguments) }\n  };\n  Node.prototype.getEdges = function getEdges () {\n    return this._edges\n  };\n  Node.prototype.mergeLabel = function mergeLabel () {\n    var this$1 = this;\n\n    if (arguments[0] instanceof Node) {\n      var n = arguments[0];\n      this.mergeLabel(n._label);\n    } else if (arguments[0] instanceof Label) {\n      var label2 = arguments[0];\n      for (var i = 0; i < 2; i++) {\n        var loc = this$1.computeMergedLocation(label2, i);\n        var thisLoc = this$1._label.getLocation(i);\n        if (thisLoc === Location.NONE) { this$1._label.setLocation(i, loc); }\n      }\n    }\n  };\n  Node.prototype.add = function add (e) {\n    this._edges.insert(e);\n    e.setNode(this);\n  };\n  Node.prototype.setLabelBoundary = function setLabelBoundary (argIndex) {\n    if (this._label === null) { return null }\n    var loc = Location.NONE;\n    if (this._label !== null) { loc = this._label.getLocation(argIndex); }\n    var newLoc = null;\n    switch (loc) {\n      case Location.BOUNDARY:\n        newLoc = Location.INTERIOR;\n        break\n      case Location.INTERIOR:\n        newLoc = Location.BOUNDARY;\n        break\n      default:\n        newLoc = Location.BOUNDARY;\n        break\n    }\n    this._label.setLocation(argIndex, newLoc);\n  };\n  Node.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  Node.prototype.getClass = function getClass () {\n    return Node\n  };\n\n  return Node;\n}(GraphComponent));\n\nvar NodeMap = function NodeMap () {\n  this.nodeMap = new TreeMap();\n  this.nodeFact = null;\n  var nodeFact = arguments[0];\n  this.nodeFact = nodeFact;\n};\nNodeMap.prototype.find = function find (coord) {\n  return this.nodeMap.get(coord)\n};\nNodeMap.prototype.addNode = function addNode () {\n  if (arguments[0] instanceof Coordinate) {\n    var coord = arguments[0];\n    var node = this.nodeMap.get(coord);\n    if (node === null) {\n      node = this.nodeFact.createNode(coord);\n      this.nodeMap.put(coord, node);\n    }\n    return node\n  } else if (arguments[0] instanceof Node) {\n    var n = arguments[0];\n    var node$1 = this.nodeMap.get(n.getCoordinate());\n    if (node$1 === null) {\n      this.nodeMap.put(n.getCoordinate(), n);\n      return n\n    }\n    node$1.mergeLabel(n);\n    return node$1\n  }\n};\nNodeMap.prototype.print = function print (out) {\n  for (var it = this.iterator(); it.hasNext();) {\n    var n = it.next();\n    n.print(out);\n  }\n};\nNodeMap.prototype.iterator = function iterator () {\n  return this.nodeMap.values().iterator()\n};\nNodeMap.prototype.values = function values () {\n  return this.nodeMap.values()\n};\nNodeMap.prototype.getBoundaryNodes = function getBoundaryNodes (geomIndex) {\n  var bdyNodes = new ArrayList();\n  for (var i = this.iterator(); i.hasNext();) {\n    var node = i.next();\n    if (node.getLabel().getLocation(geomIndex) === Location.BOUNDARY) { bdyNodes.add(node); }\n  }\n  return bdyNodes\n};\nNodeMap.prototype.add = function add (e) {\n  var p = e.getCoordinate();\n  var n = this.addNode(p);\n  n.add(e);\n};\nNodeMap.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nNodeMap.prototype.getClass = function getClass () {\n  return NodeMap\n};\n\nvar Quadrant = function Quadrant () {};\n\nvar staticAccessors$21 = { NE: { configurable: true },NW: { configurable: true },SW: { configurable: true },SE: { configurable: true } };\n\nQuadrant.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nQuadrant.prototype.getClass = function getClass () {\n  return Quadrant\n};\nQuadrant.isNorthern = function isNorthern (quad) {\n  return quad === Quadrant.NE || quad === Quadrant.NW\n};\nQuadrant.isOpposite = function isOpposite (quad1, quad2) {\n  if (quad1 === quad2) { return false }\n  var diff = (quad1 - quad2 + 4) % 4;\n  if (diff === 2) { return true }\n  return false\n};\nQuadrant.commonHalfPlane = function commonHalfPlane (quad1, quad2) {\n  if (quad1 === quad2) { return quad1 }\n  var diff = (quad1 - quad2 + 4) % 4;\n  if (diff === 2) { return -1 }\n  var min = quad1 < quad2 ? quad1 : quad2;\n  var max = quad1 > quad2 ? quad1 : quad2;\n  if (min === 0 && max === 3) { return 3 }\n  return min\n};\nQuadrant.isInHalfPlane = function isInHalfPlane (quad, halfPlane) {\n  if (halfPlane === Quadrant.SE) {\n    return quad === Quadrant.SE || quad === Quadrant.SW\n  }\n  return quad === halfPlane || quad === halfPlane + 1\n};\nQuadrant.quadrant = function quadrant () {\n  if (typeof arguments[0] === 'number' && typeof arguments[1] === 'number') {\n    var dx = arguments[0];\n    var dy = arguments[1];\n    if (dx === 0.0 && dy === 0.0) { throw new IllegalArgumentException('Cannot compute the quadrant for point ( ' + dx + ', ' + dy + ' )') }\n    if (dx >= 0.0) {\n      if (dy >= 0.0) { return Quadrant.NE; } else { return Quadrant.SE }\n    } else {\n      if (dy >= 0.0) { return Quadrant.NW; } else { return Quadrant.SW }\n    }\n  } else if (arguments[0] instanceof Coordinate && arguments[1] instanceof Coordinate) {\n    var p0 = arguments[0];\n    var p1 = arguments[1];\n    if (p1.x === p0.x && p1.y === p0.y) { throw new IllegalArgumentException('Cannot compute the quadrant for two identical points ' + p0) }\n    if (p1.x >= p0.x) {\n      if (p1.y >= p0.y) { return Quadrant.NE; } else { return Quadrant.SE }\n    } else {\n      if (p1.y >= p0.y) { return Quadrant.NW; } else { return Quadrant.SW }\n    }\n  }\n};\nstaticAccessors$21.NE.get = function () { return 0 };\nstaticAccessors$21.NW.get = function () { return 1 };\nstaticAccessors$21.SW.get = function () { return 2 };\nstaticAccessors$21.SE.get = function () { return 3 };\n\nObject.defineProperties( Quadrant, staticAccessors$21 );\n\nvar EdgeEnd = function EdgeEnd () {\n  this._edge = null;\n  this._label = null;\n  this._node = null;\n  this._p0 = null;\n  this._p1 = null;\n  this._dx = null;\n  this._dy = null;\n  this._quadrant = null;\n  if (arguments.length === 1) {\n    var edge = arguments[0];\n    this._edge = edge;\n  } else if (arguments.length === 3) {\n    var edge$1 = arguments[0];\n    var p0 = arguments[1];\n    var p1 = arguments[2];\n    var label = null;\n    this._edge = edge$1;\n    this.init(p0, p1);\n    this._label = label;\n  } else if (arguments.length === 4) {\n    var edge$2 = arguments[0];\n    var p0$1 = arguments[1];\n    var p1$1 = arguments[2];\n    var label$1 = arguments[3];\n    this._edge = edge$2;\n    this.init(p0$1, p1$1);\n    this._label = label$1;\n  }\n};\nEdgeEnd.prototype.compareDirection = function compareDirection (e) {\n  if (this._dx === e._dx && this._dy === e._dy) { return 0 }\n  if (this._quadrant > e._quadrant) { return 1 }\n  if (this._quadrant < e._quadrant) { return -1 }\n  return CGAlgorithms.computeOrientation(e._p0, e._p1, this._p1)\n};\nEdgeEnd.prototype.getDy = function getDy () {\n  return this._dy\n};\nEdgeEnd.prototype.getCoordinate = function getCoordinate () {\n  return this._p0\n};\nEdgeEnd.prototype.setNode = function setNode (node) {\n  this._node = node;\n};\nEdgeEnd.prototype.print = function print (out) {\n  var angle = Math.atan2(this._dy, this._dx);\n  var className = this.getClass().getName();\n  var lastDotPos = className.lastIndexOf('.');\n  var name = className.substring(lastDotPos + 1);\n  out.print('  ' + name + ': ' + this._p0 + ' - ' + this._p1 + ' ' + this._quadrant + ':' + angle + '   ' + this._label);\n};\nEdgeEnd.prototype.compareTo = function compareTo (obj) {\n  var e = obj;\n  return this.compareDirection(e)\n};\nEdgeEnd.prototype.getDirectedCoordinate = function getDirectedCoordinate () {\n  return this._p1\n};\nEdgeEnd.prototype.getDx = function getDx () {\n  return this._dx\n};\nEdgeEnd.prototype.getLabel = function getLabel () {\n  return this._label\n};\nEdgeEnd.prototype.getEdge = function getEdge () {\n  return this._edge\n};\nEdgeEnd.prototype.getQuadrant = function getQuadrant () {\n  return this._quadrant\n};\nEdgeEnd.prototype.getNode = function getNode () {\n  return this._node\n};\nEdgeEnd.prototype.toString = function toString () {\n  var angle = Math.atan2(this._dy, this._dx);\n  var className = this.getClass().getName();\n  var lastDotPos = className.lastIndexOf('.');\n  var name = className.substring(lastDotPos + 1);\n  return '  ' + name + ': ' + this._p0 + ' - ' + this._p1 + ' ' + this._quadrant + ':' + angle + '   ' + this._label\n};\nEdgeEnd.prototype.computeLabel = function computeLabel (boundaryNodeRule) {};\nEdgeEnd.prototype.init = function init (p0, p1) {\n  this._p0 = p0;\n  this._p1 = p1;\n  this._dx = p1.x - p0.x;\n  this._dy = p1.y - p0.y;\n  this._quadrant = Quadrant.quadrant(this._dx, this._dy);\n  Assert.isTrue(!(this._dx === 0 && this._dy === 0), 'EdgeEnd with identical endpoints found');\n};\nEdgeEnd.prototype.interfaces_ = function interfaces_ () {\n  return [Comparable]\n};\nEdgeEnd.prototype.getClass = function getClass () {\n  return EdgeEnd\n};\n\nvar DirectedEdge = (function (EdgeEnd$$1) {\n  function DirectedEdge () {\n    var edge = arguments[0];\n    var isForward = arguments[1];\n    EdgeEnd$$1.call(this, edge);\n    this._isForward = null;\n    this._isInResult = false;\n    this._isVisited = false;\n    this._sym = null;\n    this._next = null;\n    this._nextMin = null;\n    this._edgeRing = null;\n    this._minEdgeRing = null;\n    this._depth = [0, -999, -999];\n    this._isForward = isForward;\n    if (isForward) {\n      this.init(edge.getCoordinate(0), edge.getCoordinate(1));\n    } else {\n      var n = edge.getNumPoints() - 1;\n      this.init(edge.getCoordinate(n), edge.getCoordinate(n - 1));\n    }\n    this.computeDirectedLabel();\n  }\n\n  if ( EdgeEnd$$1 ) DirectedEdge.__proto__ = EdgeEnd$$1;\n  DirectedEdge.prototype = Object.create( EdgeEnd$$1 && EdgeEnd$$1.prototype );\n  DirectedEdge.prototype.constructor = DirectedEdge;\n  DirectedEdge.prototype.getNextMin = function getNextMin () {\n    return this._nextMin\n  };\n  DirectedEdge.prototype.getDepth = function getDepth (position) {\n    return this._depth[position]\n  };\n  DirectedEdge.prototype.setVisited = function setVisited (isVisited) {\n    this._isVisited = isVisited;\n  };\n  DirectedEdge.prototype.computeDirectedLabel = function computeDirectedLabel () {\n    this._label = new Label(this._edge.getLabel());\n    if (!this._isForward) { this._label.flip(); }\n  };\n  DirectedEdge.prototype.getNext = function getNext () {\n    return this._next\n  };\n  DirectedEdge.prototype.setDepth = function setDepth (position, depthVal) {\n    if (this._depth[position] !== -999) {\n      if (this._depth[position] !== depthVal) { throw new TopologyException('assigned depths do not match', this.getCoordinate()) }\n    }\n    this._depth[position] = depthVal;\n  };\n  DirectedEdge.prototype.isInteriorAreaEdge = function isInteriorAreaEdge () {\n    var this$1 = this;\n\n    var isInteriorAreaEdge = true;\n    for (var i = 0; i < 2; i++) {\n      if (!(this$1._label.isArea(i) && this$1._label.getLocation(i, Position.LEFT) === Location.INTERIOR && this$1._label.getLocation(i, Position.RIGHT) === Location.INTERIOR)) {\n        isInteriorAreaEdge = false;\n      }\n    }\n    return isInteriorAreaEdge\n  };\n  DirectedEdge.prototype.setNextMin = function setNextMin (nextMin) {\n    this._nextMin = nextMin;\n  };\n  DirectedEdge.prototype.print = function print (out) {\n    EdgeEnd$$1.prototype.print.call(this, out);\n    out.print(' ' + this._depth[Position.LEFT] + '/' + this._depth[Position.RIGHT]);\n    out.print(' (' + this.getDepthDelta() + ')');\n    if (this._isInResult) { out.print(' inResult'); }\n  };\n  DirectedEdge.prototype.setMinEdgeRing = function setMinEdgeRing (minEdgeRing) {\n    this._minEdgeRing = minEdgeRing;\n  };\n  DirectedEdge.prototype.isLineEdge = function isLineEdge () {\n    var isLine = this._label.isLine(0) || this._label.isLine(1);\n    var isExteriorIfArea0 = !this._label.isArea(0) || this._label.allPositionsEqual(0, Location.EXTERIOR);\n    var isExteriorIfArea1 = !this._label.isArea(1) || this._label.allPositionsEqual(1, Location.EXTERIOR);\n    return isLine && isExteriorIfArea0 && isExteriorIfArea1\n  };\n  DirectedEdge.prototype.setEdgeRing = function setEdgeRing (edgeRing) {\n    this._edgeRing = edgeRing;\n  };\n  DirectedEdge.prototype.getMinEdgeRing = function getMinEdgeRing () {\n    return this._minEdgeRing\n  };\n  DirectedEdge.prototype.getDepthDelta = function getDepthDelta () {\n    var depthDelta = this._edge.getDepthDelta();\n    if (!this._isForward) { depthDelta = -depthDelta; }\n    return depthDelta\n  };\n  DirectedEdge.prototype.setInResult = function setInResult (isInResult) {\n    this._isInResult = isInResult;\n  };\n  DirectedEdge.prototype.getSym = function getSym () {\n    return this._sym\n  };\n  DirectedEdge.prototype.isForward = function isForward () {\n    return this._isForward\n  };\n  DirectedEdge.prototype.getEdge = function getEdge () {\n    return this._edge\n  };\n  DirectedEdge.prototype.printEdge = function printEdge (out) {\n    this.print(out);\n    out.print(' ');\n    if (this._isForward) { this._edge.print(out); } else { this._edge.printReverse(out); }\n  };\n  DirectedEdge.prototype.setSym = function setSym (de) {\n    this._sym = de;\n  };\n  DirectedEdge.prototype.setVisitedEdge = function setVisitedEdge (isVisited) {\n    this.setVisited(isVisited);\n    this._sym.setVisited(isVisited);\n  };\n  DirectedEdge.prototype.setEdgeDepths = function setEdgeDepths (position, depth) {\n    var depthDelta = this.getEdge().getDepthDelta();\n    if (!this._isForward) { depthDelta = -depthDelta; }\n    var directionFactor = 1;\n    if (position === Position.LEFT) { directionFactor = -1; }\n    var oppositePos = Position.opposite(position);\n    var delta = depthDelta * directionFactor;\n    var oppositeDepth = depth + delta;\n    this.setDepth(position, depth);\n    this.setDepth(oppositePos, oppositeDepth);\n  };\n  DirectedEdge.prototype.getEdgeRing = function getEdgeRing () {\n    return this._edgeRing\n  };\n  DirectedEdge.prototype.isInResult = function isInResult () {\n    return this._isInResult\n  };\n  DirectedEdge.prototype.setNext = function setNext (next) {\n    this._next = next;\n  };\n  DirectedEdge.prototype.isVisited = function isVisited () {\n    return this._isVisited\n  };\n  DirectedEdge.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  DirectedEdge.prototype.getClass = function getClass () {\n    return DirectedEdge\n  };\n  DirectedEdge.depthFactor = function depthFactor (currLocation, nextLocation) {\n    if (currLocation === Location.EXTERIOR && nextLocation === Location.INTERIOR) { return 1; } else if (currLocation === Location.INTERIOR && nextLocation === Location.EXTERIOR) { return -1 }\n    return 0\n  };\n\n  return DirectedEdge;\n}(EdgeEnd));\n\nvar NodeFactory = function NodeFactory () {};\n\nNodeFactory.prototype.createNode = function createNode (coord) {\n  return new Node(coord, null)\n};\nNodeFactory.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nNodeFactory.prototype.getClass = function getClass () {\n  return NodeFactory\n};\n\nvar PlanarGraph = function PlanarGraph () {\n  this._edges = new ArrayList();\n  this._nodes = null;\n  this._edgeEndList = new ArrayList();\n  if (arguments.length === 0) {\n    this._nodes = new NodeMap(new NodeFactory());\n  } else if (arguments.length === 1) {\n    var nodeFact = arguments[0];\n    this._nodes = new NodeMap(nodeFact);\n  }\n};\nPlanarGraph.prototype.printEdges = function printEdges (out) {\n    var this$1 = this;\n\n  out.println('Edges:');\n  for (var i = 0; i < this._edges.size(); i++) {\n    out.println('edge ' + i + ':');\n    var e = this$1._edges.get(i);\n    e.print(out);\n    e.eiList.print(out);\n  }\n};\nPlanarGraph.prototype.find = function find (coord) {\n  return this._nodes.find(coord)\n};\nPlanarGraph.prototype.addNode = function addNode () {\n  if (arguments[0] instanceof Node) {\n    var node = arguments[0];\n    return this._nodes.addNode(node)\n  } else if (arguments[0] instanceof Coordinate) {\n    var coord = arguments[0];\n    return this._nodes.addNode(coord)\n  }\n};\nPlanarGraph.prototype.getNodeIterator = function getNodeIterator () {\n  return this._nodes.iterator()\n};\nPlanarGraph.prototype.linkResultDirectedEdges = function linkResultDirectedEdges () {\n  for (var nodeit = this._nodes.iterator(); nodeit.hasNext();) {\n    var node = nodeit.next();\n    node.getEdges().linkResultDirectedEdges();\n  }\n};\nPlanarGraph.prototype.debugPrintln = function debugPrintln (o) {\n  System.out.println(o);\n};\nPlanarGraph.prototype.isBoundaryNode = function isBoundaryNode (geomIndex, coord) {\n  var node = this._nodes.find(coord);\n  if (node === null) { return false }\n  var label = node.getLabel();\n  if (label !== null && label.getLocation(geomIndex) === Location.BOUNDARY) { return true }\n  return false\n};\nPlanarGraph.prototype.linkAllDirectedEdges = function linkAllDirectedEdges () {\n  for (var nodeit = this._nodes.iterator(); nodeit.hasNext();) {\n    var node = nodeit.next();\n    node.getEdges().linkAllDirectedEdges();\n  }\n};\nPlanarGraph.prototype.matchInSameDirection = function matchInSameDirection (p0, p1, ep0, ep1) {\n  if (!p0.equals(ep0)) { return false }\n  if (CGAlgorithms.computeOrientation(p0, p1, ep1) === CGAlgorithms.COLLINEAR && Quadrant.quadrant(p0, p1) === Quadrant.quadrant(ep0, ep1)) { return true }\n  return false\n};\nPlanarGraph.prototype.getEdgeEnds = function getEdgeEnds () {\n  return this._edgeEndList\n};\nPlanarGraph.prototype.debugPrint = function debugPrint (o) {\n  System.out.print(o);\n};\nPlanarGraph.prototype.getEdgeIterator = function getEdgeIterator () {\n  return this._edges.iterator()\n};\nPlanarGraph.prototype.findEdgeInSameDirection = function findEdgeInSameDirection (p0, p1) {\n    var this$1 = this;\n\n  for (var i = 0; i < this._edges.size(); i++) {\n    var e = this$1._edges.get(i);\n    var eCoord = e.getCoordinates();\n    if (this$1.matchInSameDirection(p0, p1, eCoord[0], eCoord[1])) { return e }\n    if (this$1.matchInSameDirection(p0, p1, eCoord[eCoord.length - 1], eCoord[eCoord.length - 2])) { return e }\n  }\n  return null\n};\nPlanarGraph.prototype.insertEdge = function insertEdge (e) {\n  this._edges.add(e);\n};\nPlanarGraph.prototype.findEdgeEnd = function findEdgeEnd (e) {\n  for (var i = this.getEdgeEnds().iterator(); i.hasNext();) {\n    var ee = i.next();\n    if (ee.getEdge() === e) { return ee }\n  }\n  return null\n};\nPlanarGraph.prototype.addEdges = function addEdges (edgesToAdd) {\n    var this$1 = this;\n\n  for (var it = edgesToAdd.iterator(); it.hasNext();) {\n    var e = it.next();\n    this$1._edges.add(e);\n    var de1 = new DirectedEdge(e, true);\n    var de2 = new DirectedEdge(e, false);\n    de1.setSym(de2);\n    de2.setSym(de1);\n    this$1.add(de1);\n    this$1.add(de2);\n  }\n};\nPlanarGraph.prototype.add = function add (e) {\n  this._nodes.add(e);\n  this._edgeEndList.add(e);\n};\nPlanarGraph.prototype.getNodes = function getNodes () {\n  return this._nodes.values()\n};\nPlanarGraph.prototype.findEdge = function findEdge (p0, p1) {\n    var this$1 = this;\n\n  for (var i = 0; i < this._edges.size(); i++) {\n    var e = this$1._edges.get(i);\n    var eCoord = e.getCoordinates();\n    if (p0.equals(eCoord[0]) && p1.equals(eCoord[1])) { return e }\n  }\n  return null\n};\nPlanarGraph.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nPlanarGraph.prototype.getClass = function getClass () {\n  return PlanarGraph\n};\nPlanarGraph.linkResultDirectedEdges = function linkResultDirectedEdges (nodes) {\n  for (var nodeit = nodes.iterator(); nodeit.hasNext();) {\n    var node = nodeit.next();\n    node.getEdges().linkResultDirectedEdges();\n  }\n};\n\nvar PolygonBuilder = function PolygonBuilder () {\n  this._geometryFactory = null;\n  this._shellList = new ArrayList();\n  var geometryFactory = arguments[0];\n  this._geometryFactory = geometryFactory;\n};\nPolygonBuilder.prototype.sortShellsAndHoles = function sortShellsAndHoles (edgeRings, shellList, freeHoleList) {\n  for (var it = edgeRings.iterator(); it.hasNext();) {\n    var er = it.next();\n    if (er.isHole()) {\n      freeHoleList.add(er);\n    } else {\n      shellList.add(er);\n    }\n  }\n};\nPolygonBuilder.prototype.computePolygons = function computePolygons (shellList) {\n    var this$1 = this;\n\n  var resultPolyList = new ArrayList();\n  for (var it = shellList.iterator(); it.hasNext();) {\n    var er = it.next();\n    var poly = er.toPolygon(this$1._geometryFactory);\n    resultPolyList.add(poly);\n  }\n  return resultPolyList\n};\nPolygonBuilder.prototype.placeFreeHoles = function placeFreeHoles (shellList, freeHoleList) {\n    var this$1 = this;\n\n  for (var it = freeHoleList.iterator(); it.hasNext();) {\n    var hole = it.next();\n    if (hole.getShell() === null) {\n      var shell = this$1.findEdgeRingContaining(hole, shellList);\n      if (shell === null) { throw new TopologyException('unable to assign hole to a shell', hole.getCoordinate(0)) }\n      hole.setShell(shell);\n    }\n  }\n};\nPolygonBuilder.prototype.buildMinimalEdgeRings = function buildMinimalEdgeRings (maxEdgeRings, shellList, freeHoleList) {\n    var this$1 = this;\n\n  var edgeRings = new ArrayList();\n  for (var it = maxEdgeRings.iterator(); it.hasNext();) {\n    var er = it.next();\n    if (er.getMaxNodeDegree() > 2) {\n      er.linkDirectedEdgesForMinimalEdgeRings();\n      var minEdgeRings = er.buildMinimalRings();\n      var shell = this$1.findShell(minEdgeRings);\n      if (shell !== null) {\n        this$1.placePolygonHoles(shell, minEdgeRings);\n        shellList.add(shell);\n      } else {\n        freeHoleList.addAll(minEdgeRings);\n      }\n    } else {\n      edgeRings.add(er);\n    }\n  }\n  return edgeRings\n};\nPolygonBuilder.prototype.containsPoint = function containsPoint (p) {\n  for (var it = this._shellList.iterator(); it.hasNext();) {\n    var er = it.next();\n    if (er.containsPoint(p)) { return true }\n  }\n  return false\n};\nPolygonBuilder.prototype.buildMaximalEdgeRings = function buildMaximalEdgeRings (dirEdges) {\n    var this$1 = this;\n\n  var maxEdgeRings = new ArrayList();\n  for (var it = dirEdges.iterator(); it.hasNext();) {\n    var de = it.next();\n    if (de.isInResult() && de.getLabel().isArea()) {\n      if (de.getEdgeRing() === null) {\n        var er = new MaximalEdgeRing(de, this$1._geometryFactory);\n        maxEdgeRings.add(er);\n        er.setInResult();\n      }\n    }\n  }\n  return maxEdgeRings\n};\nPolygonBuilder.prototype.placePolygonHoles = function placePolygonHoles (shell, minEdgeRings) {\n  for (var it = minEdgeRings.iterator(); it.hasNext();) {\n    var er = it.next();\n    if (er.isHole()) {\n      er.setShell(shell);\n    }\n  }\n};\nPolygonBuilder.prototype.getPolygons = function getPolygons () {\n  var resultPolyList = this.computePolygons(this._shellList);\n  return resultPolyList\n};\nPolygonBuilder.prototype.findEdgeRingContaining = function findEdgeRingContaining (testEr, shellList) {\n  var testRing = testEr.getLinearRing();\n  var testEnv = testRing.getEnvelopeInternal();\n  var testPt = testRing.getCoordinateN(0);\n  var minShell = null;\n  var minEnv = null;\n  for (var it = shellList.iterator(); it.hasNext();) {\n    var tryShell = it.next();\n    var tryRing = tryShell.getLinearRing();\n    var tryEnv = tryRing.getEnvelopeInternal();\n    if (minShell !== null) { minEnv = minShell.getLinearRing().getEnvelopeInternal(); }\n    var isContained = false;\n    if (tryEnv.contains(testEnv) && CGAlgorithms.isPointInRing(testPt, tryRing.getCoordinates())) { isContained = true; }\n    if (isContained) {\n      if (minShell === null || minEnv.contains(tryEnv)) {\n        minShell = tryShell;\n      }\n    }\n  }\n  return minShell\n};\nPolygonBuilder.prototype.findShell = function findShell (minEdgeRings) {\n  var shellCount = 0;\n  var shell = null;\n  for (var it = minEdgeRings.iterator(); it.hasNext();) {\n    var er = it.next();\n    if (!er.isHole()) {\n      shell = er;\n      shellCount++;\n    }\n  }\n  Assert.isTrue(shellCount <= 1, 'found two shells in MinimalEdgeRing list');\n  return shell\n};\nPolygonBuilder.prototype.add = function add () {\n  if (arguments.length === 1) {\n    var graph = arguments[0];\n    this.add(graph.getEdgeEnds(), graph.getNodes());\n  } else if (arguments.length === 2) {\n    var dirEdges = arguments[0];\n    var nodes = arguments[1];\n    PlanarGraph.linkResultDirectedEdges(nodes);\n    var maxEdgeRings = this.buildMaximalEdgeRings(dirEdges);\n    var freeHoleList = new ArrayList();\n    var edgeRings = this.buildMinimalEdgeRings(maxEdgeRings, this._shellList, freeHoleList);\n    this.sortShellsAndHoles(edgeRings, this._shellList, freeHoleList);\n    this.placeFreeHoles(this._shellList, freeHoleList);\n  }\n};\nPolygonBuilder.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nPolygonBuilder.prototype.getClass = function getClass () {\n  return PolygonBuilder\n};\n\nvar Boundable = function Boundable () {};\n\nBoundable.prototype.getBounds = function getBounds () {};\nBoundable.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nBoundable.prototype.getClass = function getClass () {\n  return Boundable\n};\n\nvar ItemBoundable = function ItemBoundable () {\n  this._bounds = null;\n  this._item = null;\n  var bounds = arguments[0];\n  var item = arguments[1];\n  this._bounds = bounds;\n  this._item = item;\n};\nItemBoundable.prototype.getItem = function getItem () {\n  return this._item\n};\nItemBoundable.prototype.getBounds = function getBounds () {\n  return this._bounds\n};\nItemBoundable.prototype.interfaces_ = function interfaces_ () {\n  return [Boundable, Serializable]\n};\nItemBoundable.prototype.getClass = function getClass () {\n  return ItemBoundable\n};\n\nvar PriorityQueue = function PriorityQueue () {\n  this._size = null;\n  this._items = null;\n  this._size = 0;\n  this._items = new ArrayList();\n  this._items.add(null);\n};\nPriorityQueue.prototype.poll = function poll () {\n  if (this.isEmpty()) { return null }\n  var minItem = this._items.get(1);\n  this._items.set(1, this._items.get(this._size));\n  this._size -= 1;\n  this.reorder(1);\n  return minItem\n};\nPriorityQueue.prototype.size = function size () {\n  return this._size\n};\nPriorityQueue.prototype.reorder = function reorder (hole) {\n    var this$1 = this;\n\n  var child = null;\n  var tmp = this._items.get(hole);\n  for (; hole * 2 <= this._size; hole = child) {\n    child = hole * 2;\n    if (child !== this$1._size && this$1._items.get(child + 1).compareTo(this$1._items.get(child)) < 0) { child++; }\n    if (this$1._items.get(child).compareTo(tmp) < 0) { this$1._items.set(hole, this$1._items.get(child)); } else { break }\n  }\n  this._items.set(hole, tmp);\n};\nPriorityQueue.prototype.clear = function clear () {\n  this._size = 0;\n  this._items.clear();\n};\nPriorityQueue.prototype.isEmpty = function isEmpty () {\n  return this._size === 0\n};\nPriorityQueue.prototype.add = function add (x) {\n    var this$1 = this;\n\n  this._items.add(null);\n  this._size += 1;\n  var hole = this._size;\n  this._items.set(0, x);\n  for (; x.compareTo(this._items.get(Math.trunc(hole / 2))) < 0; hole /= 2) {\n    this$1._items.set(hole, this$1._items.get(Math.trunc(hole / 2)));\n  }\n  this._items.set(hole, x);\n};\nPriorityQueue.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nPriorityQueue.prototype.getClass = function getClass () {\n  return PriorityQueue\n};\n\nvar ItemVisitor = function ItemVisitor () {};\n\nItemVisitor.prototype.visitItem = function visitItem (item) {};\nItemVisitor.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nItemVisitor.prototype.getClass = function getClass () {\n  return ItemVisitor\n};\n\nvar SpatialIndex = function SpatialIndex () {};\n\nSpatialIndex.prototype.insert = function insert (itemEnv, item) {};\nSpatialIndex.prototype.remove = function remove (itemEnv, item) {};\nSpatialIndex.prototype.query = function query () {\n  // if (arguments.length === 1) {\n  // const searchEnv = arguments[0]\n  // } else if (arguments.length === 2) {\n  // const searchEnv = arguments[0]\n  // const visitor = arguments[1]\n  // }\n};\nSpatialIndex.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nSpatialIndex.prototype.getClass = function getClass () {\n  return SpatialIndex\n};\n\nvar AbstractNode = function AbstractNode () {\n  this._childBoundables = new ArrayList();\n  this._bounds = null;\n  this._level = null;\n  if (arguments.length === 0) {} else if (arguments.length === 1) {\n    var level = arguments[0];\n    this._level = level;\n  }\n};\n\nvar staticAccessors$22 = { serialVersionUID: { configurable: true } };\nAbstractNode.prototype.getLevel = function getLevel () {\n  return this._level\n};\nAbstractNode.prototype.size = function size () {\n  return this._childBoundables.size()\n};\nAbstractNode.prototype.getChildBoundables = function getChildBoundables () {\n  return this._childBoundables\n};\nAbstractNode.prototype.addChildBoundable = function addChildBoundable (childBoundable) {\n  Assert.isTrue(this._bounds === null);\n  this._childBoundables.add(childBoundable);\n};\nAbstractNode.prototype.isEmpty = function isEmpty () {\n  return this._childBoundables.isEmpty()\n};\nAbstractNode.prototype.getBounds = function getBounds () {\n  if (this._bounds === null) {\n    this._bounds = this.computeBounds();\n  }\n  return this._bounds\n};\nAbstractNode.prototype.interfaces_ = function interfaces_ () {\n  return [Boundable, Serializable]\n};\nAbstractNode.prototype.getClass = function getClass () {\n  return AbstractNode\n};\nstaticAccessors$22.serialVersionUID.get = function () { return 6493722185909573708 };\n\nObject.defineProperties( AbstractNode, staticAccessors$22 );\n\nvar Collections = function Collections () {};\n\nCollections.reverseOrder = function reverseOrder () {\n  return {\n    compare: function compare (a, b) {\n      return b.compareTo(a)\n    }\n  }\n};\nCollections.min = function min (l) {\n  Collections.sort(l);\n  return l.get(0)\n};\nCollections.sort = function sort (l, c) {\n  var a = l.toArray();\n  if (c) {\n    Arrays.sort(a, c);\n  } else {\n    Arrays.sort(a);\n  }\n  var i = l.iterator();\n  for (var pos = 0, alen = a.length; pos < alen; pos++) {\n    i.next();\n    i.set(a[pos]);\n  }\n};\nCollections.singletonList = function singletonList (o) {\n  var arrayList = new ArrayList();\n  arrayList.add(o);\n  return arrayList\n};\n\nvar BoundablePair = function BoundablePair () {\n  this._boundable1 = null;\n  this._boundable2 = null;\n  this._distance = null;\n  this._itemDistance = null;\n  var boundable1 = arguments[0];\n  var boundable2 = arguments[1];\n  var itemDistance = arguments[2];\n  this._boundable1 = boundable1;\n  this._boundable2 = boundable2;\n  this._itemDistance = itemDistance;\n  this._distance = this.distance();\n};\nBoundablePair.prototype.expandToQueue = function expandToQueue (priQ, minDistance) {\n  var isComp1 = BoundablePair.isComposite(this._boundable1);\n  var isComp2 = BoundablePair.isComposite(this._boundable2);\n  if (isComp1 && isComp2) {\n    if (BoundablePair.area(this._boundable1) > BoundablePair.area(this._boundable2)) {\n      this.expand(this._boundable1, this._boundable2, priQ, minDistance);\n      return null\n    } else {\n      this.expand(this._boundable2, this._boundable1, priQ, minDistance);\n      return null\n    }\n  } else if (isComp1) {\n    this.expand(this._boundable1, this._boundable2, priQ, minDistance);\n    return null\n  } else if (isComp2) {\n    this.expand(this._boundable2, this._boundable1, priQ, minDistance);\n    return null\n  }\n  throw new IllegalArgumentException('neither boundable is composite')\n};\nBoundablePair.prototype.isLeaves = function isLeaves () {\n  return !(BoundablePair.isComposite(this._boundable1) || BoundablePair.isComposite(this._boundable2))\n};\nBoundablePair.prototype.compareTo = function compareTo (o) {\n  var nd = o;\n  if (this._distance < nd._distance) { return -1 }\n  if (this._distance > nd._distance) { return 1 }\n  return 0\n};\nBoundablePair.prototype.expand = function expand (bndComposite, bndOther, priQ, minDistance) {\n    var this$1 = this;\n\n  var children = bndComposite.getChildBoundables();\n  for (var i = children.iterator(); i.hasNext();) {\n    var child = i.next();\n    var bp = new BoundablePair(child, bndOther, this$1._itemDistance);\n    if (bp.getDistance() < minDistance) {\n      priQ.add(bp);\n    }\n  }\n};\nBoundablePair.prototype.getBoundable = function getBoundable (i) {\n  if (i === 0) { return this._boundable1 }\n  return this._boundable2\n};\nBoundablePair.prototype.getDistance = function getDistance () {\n  return this._distance\n};\nBoundablePair.prototype.distance = function distance () {\n  if (this.isLeaves()) {\n    return this._itemDistance.distance(this._boundable1, this._boundable2)\n  }\n  return this._boundable1.getBounds().distance(this._boundable2.getBounds())\n};\nBoundablePair.prototype.interfaces_ = function interfaces_ () {\n  return [Comparable]\n};\nBoundablePair.prototype.getClass = function getClass () {\n  return BoundablePair\n};\nBoundablePair.area = function area (b) {\n  return b.getBounds().getArea()\n};\nBoundablePair.isComposite = function isComposite (item) {\n  return item instanceof AbstractNode\n};\n\nvar AbstractSTRtree = function AbstractSTRtree () {\n  this._root = null;\n  this._built = false;\n  this._itemBoundables = new ArrayList();\n  this._nodeCapacity = null;\n  if (arguments.length === 0) {\n    var nodeCapacity = AbstractSTRtree.DEFAULT_NODE_CAPACITY;\n    this._nodeCapacity = nodeCapacity;\n  } else if (arguments.length === 1) {\n    var nodeCapacity$1 = arguments[0];\n    Assert.isTrue(nodeCapacity$1 > 1, 'Node capacity must be greater than 1');\n    this._nodeCapacity = nodeCapacity$1;\n  }\n};\n\nvar staticAccessors$23 = { IntersectsOp: { configurable: true },serialVersionUID: { configurable: true },DEFAULT_NODE_CAPACITY: { configurable: true } };\nAbstractSTRtree.prototype.getNodeCapacity = function getNodeCapacity () {\n  return this._nodeCapacity\n};\nAbstractSTRtree.prototype.lastNode = function lastNode (nodes) {\n  return nodes.get(nodes.size() - 1)\n};\nAbstractSTRtree.prototype.size = function size () {\n    var this$1 = this;\n\n  if (arguments.length === 0) {\n    if (this.isEmpty()) {\n      return 0\n    }\n    this.build();\n    return this.size(this._root)\n  } else if (arguments.length === 1) {\n    var node = arguments[0];\n    var size = 0;\n    for (var i = node.getChildBoundables().iterator(); i.hasNext();) {\n      var childBoundable = i.next();\n      if (childBoundable instanceof AbstractNode) {\n        size += this$1.size(childBoundable);\n      } else if (childBoundable instanceof ItemBoundable) {\n        size += 1;\n      }\n    }\n    return size\n  }\n};\nAbstractSTRtree.prototype.removeItem = function removeItem (node, item) {\n  var childToRemove = null;\n  for (var i = node.getChildBoundables().iterator(); i.hasNext();) {\n    var childBoundable = i.next();\n    if (childBoundable instanceof ItemBoundable) {\n      if (childBoundable.getItem() === item) { childToRemove = childBoundable; }\n    }\n  }\n  if (childToRemove !== null) {\n    node.getChildBoundables().remove(childToRemove);\n    return true\n  }\n  return false\n};\nAbstractSTRtree.prototype.itemsTree = function itemsTree () {\n    var this$1 = this;\n\n  if (arguments.length === 0) {\n    this.build();\n    var valuesTree = this.itemsTree(this._root);\n    if (valuesTree === null) { return new ArrayList() }\n    return valuesTree\n  } else if (arguments.length === 1) {\n    var node = arguments[0];\n    var valuesTreeForNode = new ArrayList();\n    for (var i = node.getChildBoundables().iterator(); i.hasNext();) {\n      var childBoundable = i.next();\n      if (childBoundable instanceof AbstractNode) {\n        var valuesTreeForChild = this$1.itemsTree(childBoundable);\n        if (valuesTreeForChild !== null) { valuesTreeForNode.add(valuesTreeForChild); }\n      } else if (childBoundable instanceof ItemBoundable) {\n        valuesTreeForNode.add(childBoundable.getItem());\n      } else {\n        Assert.shouldNeverReachHere();\n      }\n    }\n    if (valuesTreeForNode.size() <= 0) { return null }\n    return valuesTreeForNode\n  }\n};\nAbstractSTRtree.prototype.insert = function insert (bounds, item) {\n  Assert.isTrue(!this._built, 'Cannot insert items into an STR packed R-tree after it has been built.');\n  this._itemBoundables.add(new ItemBoundable(bounds, item));\n};\nAbstractSTRtree.prototype.boundablesAtLevel = function boundablesAtLevel () {\n    var this$1 = this;\n\n  if (arguments.length === 1) {\n    var level = arguments[0];\n    var boundables = new ArrayList();\n    this.boundablesAtLevel(level, this._root, boundables);\n    return boundables\n  } else if (arguments.length === 3) {\n    var level$1 = arguments[0];\n    var top = arguments[1];\n    var boundables$1 = arguments[2];\n    Assert.isTrue(level$1 > -2);\n    if (top.getLevel() === level$1) {\n      boundables$1.add(top);\n      return null\n    }\n    for (var i = top.getChildBoundables().iterator(); i.hasNext();) {\n      var boundable = i.next();\n      if (boundable instanceof AbstractNode) {\n        this$1.boundablesAtLevel(level$1, boundable, boundables$1);\n      } else {\n        Assert.isTrue(boundable instanceof ItemBoundable);\n        if (level$1 === -1) {\n          boundables$1.add(boundable);\n        }\n      }\n    }\n    return null\n  }\n};\nAbstractSTRtree.prototype.query = function query () {\n    var this$1 = this;\n\n  if (arguments.length === 1) {\n    var searchBounds = arguments[0];\n    this.build();\n    var matches = new ArrayList();\n    if (this.isEmpty()) {\n      return matches\n    }\n    if (this.getIntersectsOp().intersects(this._root.getBounds(), searchBounds)) {\n      this.query(searchBounds, this._root, matches);\n    }\n    return matches\n  } else if (arguments.length === 2) {\n    var searchBounds$1 = arguments[0];\n    var visitor = arguments[1];\n    this.build();\n    if (this.isEmpty()) {\n      return null\n    }\n    if (this.getIntersectsOp().intersects(this._root.getBounds(), searchBounds$1)) {\n      this.query(searchBounds$1, this._root, visitor);\n    }\n  } else if (arguments.length === 3) {\n    if (hasInterface(arguments[2], ItemVisitor) && (arguments[0] instanceof Object && arguments[1] instanceof AbstractNode)) {\n      var searchBounds$2 = arguments[0];\n      var node = arguments[1];\n      var visitor$1 = arguments[2];\n      var childBoundables = node.getChildBoundables();\n      for (var i = 0; i < childBoundables.size(); i++) {\n        var childBoundable = childBoundables.get(i);\n        if (!this$1.getIntersectsOp().intersects(childBoundable.getBounds(), searchBounds$2)) {\n          continue\n        }\n        if (childBoundable instanceof AbstractNode) {\n          this$1.query(searchBounds$2, childBoundable, visitor$1);\n        } else if (childBoundable instanceof ItemBoundable) {\n          visitor$1.visitItem(childBoundable.getItem());\n        } else {\n          Assert.shouldNeverReachHere();\n        }\n      }\n    } else if (hasInterface(arguments[2], List) && (arguments[0] instanceof Object && arguments[1] instanceof AbstractNode)) {\n      var searchBounds$3 = arguments[0];\n      var node$1 = arguments[1];\n      var matches$1 = arguments[2];\n      var childBoundables$1 = node$1.getChildBoundables();\n      for (var i$1 = 0; i$1 < childBoundables$1.size(); i$1++) {\n        var childBoundable$1 = childBoundables$1.get(i$1);\n        if (!this$1.getIntersectsOp().intersects(childBoundable$1.getBounds(), searchBounds$3)) {\n          continue\n        }\n        if (childBoundable$1 instanceof AbstractNode) {\n          this$1.query(searchBounds$3, childBoundable$1, matches$1);\n        } else if (childBoundable$1 instanceof ItemBoundable) {\n          matches$1.add(childBoundable$1.getItem());\n        } else {\n          Assert.shouldNeverReachHere();\n        }\n      }\n    }\n  }\n};\nAbstractSTRtree.prototype.build = function build () {\n  if (this._built) { return null }\n  this._root = this._itemBoundables.isEmpty() ? this.createNode(0) : this.createHigherLevels(this._itemBoundables, -1);\n  this._itemBoundables = null;\n  this._built = true;\n};\nAbstractSTRtree.prototype.getRoot = function getRoot () {\n  this.build();\n  return this._root\n};\nAbstractSTRtree.prototype.remove = function remove () {\n    var this$1 = this;\n\n  if (arguments.length === 2) {\n    var searchBounds = arguments[0];\n    var item = arguments[1];\n    this.build();\n    if (this.getIntersectsOp().intersects(this._root.getBounds(), searchBounds)) {\n      return this.remove(searchBounds, this._root, item)\n    }\n    return false\n  } else if (arguments.length === 3) {\n    var searchBounds$1 = arguments[0];\n    var node = arguments[1];\n    var item$1 = arguments[2];\n    var found = this.removeItem(node, item$1);\n    if (found) { return true }\n    var childToPrune = null;\n    for (var i = node.getChildBoundables().iterator(); i.hasNext();) {\n      var childBoundable = i.next();\n      if (!this$1.getIntersectsOp().intersects(childBoundable.getBounds(), searchBounds$1)) {\n        continue\n      }\n      if (childBoundable instanceof AbstractNode) {\n        found = this$1.remove(searchBounds$1, childBoundable, item$1);\n        if (found) {\n          childToPrune = childBoundable;\n          break\n        }\n      }\n    }\n    if (childToPrune !== null) {\n      if (childToPrune.getChildBoundables().isEmpty()) {\n        node.getChildBoundables().remove(childToPrune);\n      }\n    }\n    return found\n  }\n};\nAbstractSTRtree.prototype.createHigherLevels = function createHigherLevels (boundablesOfALevel, level) {\n  Assert.isTrue(!boundablesOfALevel.isEmpty());\n  var parentBoundables = this.createParentBoundables(boundablesOfALevel, level + 1);\n  if (parentBoundables.size() === 1) {\n    return parentBoundables.get(0)\n  }\n  return this.createHigherLevels(parentBoundables, level + 1)\n};\nAbstractSTRtree.prototype.depth = function depth () {\n    var this$1 = this;\n\n  if (arguments.length === 0) {\n    if (this.isEmpty()) {\n      return 0\n    }\n    this.build();\n    return this.depth(this._root)\n  } else if (arguments.length === 1) {\n    var node = arguments[0];\n    var maxChildDepth = 0;\n    for (var i = node.getChildBoundables().iterator(); i.hasNext();) {\n      var childBoundable = i.next();\n      if (childBoundable instanceof AbstractNode) {\n        var childDepth = this$1.depth(childBoundable);\n        if (childDepth > maxChildDepth) { maxChildDepth = childDepth; }\n      }\n    }\n    return maxChildDepth + 1\n  }\n};\nAbstractSTRtree.prototype.createParentBoundables = function createParentBoundables (childBoundables, newLevel) {\n    var this$1 = this;\n\n  Assert.isTrue(!childBoundables.isEmpty());\n  var parentBoundables = new ArrayList();\n  parentBoundables.add(this.createNode(newLevel));\n  var sortedChildBoundables = new ArrayList(childBoundables);\n  Collections.sort(sortedChildBoundables, this.getComparator());\n  for (var i = sortedChildBoundables.iterator(); i.hasNext();) {\n    var childBoundable = i.next();\n    if (this$1.lastNode(parentBoundables).getChildBoundables().size() === this$1.getNodeCapacity()) {\n      parentBoundables.add(this$1.createNode(newLevel));\n    }\n    this$1.lastNode(parentBoundables).addChildBoundable(childBoundable);\n  }\n  return parentBoundables\n};\nAbstractSTRtree.prototype.isEmpty = function isEmpty () {\n  if (!this._built) { return this._itemBoundables.isEmpty() }\n  return this._root.isEmpty()\n};\nAbstractSTRtree.prototype.interfaces_ = function interfaces_ () {\n  return [Serializable]\n};\nAbstractSTRtree.prototype.getClass = function getClass () {\n  return AbstractSTRtree\n};\nAbstractSTRtree.compareDoubles = function compareDoubles (a, b) {\n  return a > b ? 1 : a < b ? -1 : 0\n};\nstaticAccessors$23.IntersectsOp.get = function () { return IntersectsOp };\nstaticAccessors$23.serialVersionUID.get = function () { return -3886435814360241337 };\nstaticAccessors$23.DEFAULT_NODE_CAPACITY.get = function () { return 10 };\n\nObject.defineProperties( AbstractSTRtree, staticAccessors$23 );\n\nvar IntersectsOp = function IntersectsOp () {};\n\nvar ItemDistance = function ItemDistance () {};\n\nItemDistance.prototype.distance = function distance (item1, item2) {};\nItemDistance.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nItemDistance.prototype.getClass = function getClass () {\n  return ItemDistance\n};\n\nvar STRtree = (function (AbstractSTRtree$$1) {\n  function STRtree (nodeCapacity) {\n    nodeCapacity = nodeCapacity || STRtree.DEFAULT_NODE_CAPACITY;\n    AbstractSTRtree$$1.call(this, nodeCapacity);\n  }\n\n  if ( AbstractSTRtree$$1 ) STRtree.__proto__ = AbstractSTRtree$$1;\n  STRtree.prototype = Object.create( AbstractSTRtree$$1 && AbstractSTRtree$$1.prototype );\n  STRtree.prototype.constructor = STRtree;\n\n  var staticAccessors = { STRtreeNode: { configurable: true },serialVersionUID: { configurable: true },xComparator: { configurable: true },yComparator: { configurable: true },intersectsOp: { configurable: true },DEFAULT_NODE_CAPACITY: { configurable: true } };\n  STRtree.prototype.createParentBoundablesFromVerticalSlices = function createParentBoundablesFromVerticalSlices (verticalSlices, newLevel) {\n    var this$1 = this;\n\n    Assert.isTrue(verticalSlices.length > 0);\n    var parentBoundables = new ArrayList();\n    for (var i = 0; i < verticalSlices.length; i++) {\n      parentBoundables.addAll(this$1.createParentBoundablesFromVerticalSlice(verticalSlices[i], newLevel));\n    }\n    return parentBoundables\n  };\n  STRtree.prototype.createNode = function createNode (level) {\n    return new STRtreeNode(level)\n  };\n  STRtree.prototype.size = function size () {\n    if (arguments.length === 0) {\n      return AbstractSTRtree$$1.prototype.size.call(this)\n    } else { return AbstractSTRtree$$1.prototype.size.apply(this, arguments) }\n  };\n  STRtree.prototype.insert = function insert () {\n    if (arguments.length === 2) {\n      var itemEnv = arguments[0];\n      var item = arguments[1];\n      if (itemEnv.isNull()) {\n        return null\n      }\n      AbstractSTRtree$$1.prototype.insert.call(this, itemEnv, item);\n    } else { return AbstractSTRtree$$1.prototype.insert.apply(this, arguments) }\n  };\n  STRtree.prototype.getIntersectsOp = function getIntersectsOp () {\n    return STRtree.intersectsOp\n  };\n  STRtree.prototype.verticalSlices = function verticalSlices (childBoundables, sliceCount) {\n    var sliceCapacity = Math.trunc(Math.ceil(childBoundables.size() / sliceCount));\n    var slices = new Array(sliceCount).fill(null);\n    var i = childBoundables.iterator();\n    for (var j = 0; j < sliceCount; j++) {\n      slices[j] = new ArrayList();\n      var boundablesAddedToSlice = 0;\n      while (i.hasNext() && boundablesAddedToSlice < sliceCapacity) {\n        var childBoundable = i.next();\n        slices[j].add(childBoundable);\n        boundablesAddedToSlice++;\n      }\n    }\n    return slices\n  };\n  STRtree.prototype.query = function query () {\n    if (arguments.length === 1) {\n      var searchEnv = arguments[0];\n      return AbstractSTRtree$$1.prototype.query.call(this, searchEnv)\n    } else if (arguments.length === 2) {\n      var searchEnv$1 = arguments[0];\n      var visitor = arguments[1];\n      AbstractSTRtree$$1.prototype.query.call(this, searchEnv$1, visitor);\n    } else if (arguments.length === 3) {\n      if (hasInterface(arguments[2], ItemVisitor) && (arguments[0] instanceof Object && arguments[1] instanceof AbstractNode)) {\n        var searchBounds = arguments[0];\n        var node = arguments[1];\n        var visitor$1 = arguments[2];\n        AbstractSTRtree$$1.prototype.query.call(this, searchBounds, node, visitor$1);\n      } else if (hasInterface(arguments[2], List) && (arguments[0] instanceof Object && arguments[1] instanceof AbstractNode)) {\n        var searchBounds$1 = arguments[0];\n        var node$1 = arguments[1];\n        var matches = arguments[2];\n        AbstractSTRtree$$1.prototype.query.call(this, searchBounds$1, node$1, matches);\n      }\n    }\n  };\n  STRtree.prototype.getComparator = function getComparator () {\n    return STRtree.yComparator\n  };\n  STRtree.prototype.createParentBoundablesFromVerticalSlice = function createParentBoundablesFromVerticalSlice (childBoundables, newLevel) {\n    return AbstractSTRtree$$1.prototype.createParentBoundables.call(this, childBoundables, newLevel)\n  };\n  STRtree.prototype.remove = function remove () {\n    if (arguments.length === 2) {\n      var itemEnv = arguments[0];\n      var item = arguments[1];\n      return AbstractSTRtree$$1.prototype.remove.call(this, itemEnv, item)\n    } else { return AbstractSTRtree$$1.prototype.remove.apply(this, arguments) }\n  };\n  STRtree.prototype.depth = function depth () {\n    if (arguments.length === 0) {\n      return AbstractSTRtree$$1.prototype.depth.call(this)\n    } else { return AbstractSTRtree$$1.prototype.depth.apply(this, arguments) }\n  };\n  STRtree.prototype.createParentBoundables = function createParentBoundables (childBoundables, newLevel) {\n    Assert.isTrue(!childBoundables.isEmpty());\n    var minLeafCount = Math.trunc(Math.ceil(childBoundables.size() / this.getNodeCapacity()));\n    var sortedChildBoundables = new ArrayList(childBoundables);\n    Collections.sort(sortedChildBoundables, STRtree.xComparator);\n    var verticalSlices = this.verticalSlices(sortedChildBoundables, Math.trunc(Math.ceil(Math.sqrt(minLeafCount))));\n    return this.createParentBoundablesFromVerticalSlices(verticalSlices, newLevel)\n  };\n  STRtree.prototype.nearestNeighbour = function nearestNeighbour () {\n    if (arguments.length === 1) {\n      if (hasInterface(arguments[0], ItemDistance)) {\n        var itemDist = arguments[0];\n        var bp = new BoundablePair(this.getRoot(), this.getRoot(), itemDist);\n        return this.nearestNeighbour(bp)\n      } else if (arguments[0] instanceof BoundablePair) {\n        var initBndPair = arguments[0];\n        return this.nearestNeighbour(initBndPair, Double.POSITIVE_INFINITY)\n      }\n    } else if (arguments.length === 2) {\n      if (arguments[0] instanceof STRtree && hasInterface(arguments[1], ItemDistance)) {\n        var tree = arguments[0];\n        var itemDist$1 = arguments[1];\n        var bp$1 = new BoundablePair(this.getRoot(), tree.getRoot(), itemDist$1);\n        return this.nearestNeighbour(bp$1)\n      } else if (arguments[0] instanceof BoundablePair && typeof arguments[1] === 'number') {\n        var initBndPair$1 = arguments[0];\n        var maxDistance = arguments[1];\n        var distanceLowerBound = maxDistance;\n        var minPair = null;\n        var priQ = new PriorityQueue();\n        priQ.add(initBndPair$1);\n        while (!priQ.isEmpty() && distanceLowerBound > 0.0) {\n          var bndPair = priQ.poll();\n          var currentDistance = bndPair.getDistance();\n          if (currentDistance >= distanceLowerBound) { break }\n          if (bndPair.isLeaves()) {\n            distanceLowerBound = currentDistance;\n            minPair = bndPair;\n          } else {\n            bndPair.expandToQueue(priQ, distanceLowerBound);\n          }\n        }\n        return [minPair.getBoundable(0).getItem(), minPair.getBoundable(1).getItem()]\n      }\n    } else if (arguments.length === 3) {\n      var env = arguments[0];\n      var item = arguments[1];\n      var itemDist$2 = arguments[2];\n      var bnd = new ItemBoundable(env, item);\n      var bp$2 = new BoundablePair(this.getRoot(), bnd, itemDist$2);\n      return this.nearestNeighbour(bp$2)[0]\n    }\n  };\n  STRtree.prototype.interfaces_ = function interfaces_ () {\n    return [SpatialIndex, Serializable]\n  };\n  STRtree.prototype.getClass = function getClass () {\n    return STRtree\n  };\n  STRtree.centreX = function centreX (e) {\n    return STRtree.avg(e.getMinX(), e.getMaxX())\n  };\n  STRtree.avg = function avg (a, b) {\n    return (a + b) / 2\n  };\n  STRtree.centreY = function centreY (e) {\n    return STRtree.avg(e.getMinY(), e.getMaxY())\n  };\n  staticAccessors.STRtreeNode.get = function () { return STRtreeNode };\n  staticAccessors.serialVersionUID.get = function () { return 259274702368956900 };\n  staticAccessors.xComparator.get = function () {\n    return {\n      interfaces_: function () {\n        return [Comparator]\n      },\n      compare: function (o1, o2) {\n        return AbstractSTRtree$$1.compareDoubles(STRtree.centreX(o1.getBounds()), STRtree.centreX(o2.getBounds()))\n      }\n    }\n  };\n  staticAccessors.yComparator.get = function () {\n    return {\n      interfaces_: function () {\n        return [Comparator]\n      },\n      compare: function (o1, o2) {\n        return AbstractSTRtree$$1.compareDoubles(STRtree.centreY(o1.getBounds()), STRtree.centreY(o2.getBounds()))\n      }\n    }\n  };\n  staticAccessors.intersectsOp.get = function () {\n    return {\n      interfaces_: function () {\n        return [AbstractSTRtree$$1.IntersectsOp]\n      },\n      intersects: function (aBounds, bBounds) {\n        return aBounds.intersects(bBounds)\n      }\n    }\n  };\n  staticAccessors.DEFAULT_NODE_CAPACITY.get = function () { return 10 };\n\n  Object.defineProperties( STRtree, staticAccessors );\n\n  return STRtree;\n}(AbstractSTRtree));\n\nvar STRtreeNode = (function (AbstractNode$$1) {\n  function STRtreeNode () {\n    var level = arguments[0];\n    AbstractNode$$1.call(this, level);\n  }\n\n  if ( AbstractNode$$1 ) STRtreeNode.__proto__ = AbstractNode$$1;\n  STRtreeNode.prototype = Object.create( AbstractNode$$1 && AbstractNode$$1.prototype );\n  STRtreeNode.prototype.constructor = STRtreeNode;\n  STRtreeNode.prototype.computeBounds = function computeBounds () {\n    var bounds = null;\n    for (var i = this.getChildBoundables().iterator(); i.hasNext();) {\n      var childBoundable = i.next();\n      if (bounds === null) {\n        bounds = new Envelope(childBoundable.getBounds());\n      } else {\n        bounds.expandToInclude(childBoundable.getBounds());\n      }\n    }\n    return bounds\n  };\n  STRtreeNode.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  STRtreeNode.prototype.getClass = function getClass () {\n    return STRtreeNode\n  };\n\n  return STRtreeNode;\n}(AbstractNode));\n\nvar SegmentPointComparator = function SegmentPointComparator () {};\n\nSegmentPointComparator.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nSegmentPointComparator.prototype.getClass = function getClass () {\n  return SegmentPointComparator\n};\nSegmentPointComparator.relativeSign = function relativeSign (x0, x1) {\n  if (x0 < x1) { return -1 }\n  if (x0 > x1) { return 1 }\n  return 0\n};\nSegmentPointComparator.compare = function compare (octant, p0, p1) {\n  if (p0.equals2D(p1)) { return 0 }\n  var xSign = SegmentPointComparator.relativeSign(p0.x, p1.x);\n  var ySign = SegmentPointComparator.relativeSign(p0.y, p1.y);\n  switch (octant) {\n    case 0:\n      return SegmentPointComparator.compareValue(xSign, ySign)\n    case 1:\n      return SegmentPointComparator.compareValue(ySign, xSign)\n    case 2:\n      return SegmentPointComparator.compareValue(ySign, -xSign)\n    case 3:\n      return SegmentPointComparator.compareValue(-xSign, ySign)\n    case 4:\n      return SegmentPointComparator.compareValue(-xSign, -ySign)\n    case 5:\n      return SegmentPointComparator.compareValue(-ySign, -xSign)\n    case 6:\n      return SegmentPointComparator.compareValue(-ySign, xSign)\n    case 7:\n      return SegmentPointComparator.compareValue(xSign, -ySign)\n    default:\n  }\n  Assert.shouldNeverReachHere('invalid octant value');\n  return 0\n};\nSegmentPointComparator.compareValue = function compareValue (compareSign0, compareSign1) {\n  if (compareSign0 < 0) { return -1 }\n  if (compareSign0 > 0) { return 1 }\n  if (compareSign1 < 0) { return -1 }\n  if (compareSign1 > 0) { return 1 }\n  return 0\n};\n\nvar SegmentNode = function SegmentNode () {\n  this._segString = null;\n  this.coord = null;\n  this.segmentIndex = null;\n  this._segmentOctant = null;\n  this._isInterior = null;\n  var segString = arguments[0];\n  var coord = arguments[1];\n  var segmentIndex = arguments[2];\n  var segmentOctant = arguments[3];\n  this._segString = segString;\n  this.coord = new Coordinate(coord);\n  this.segmentIndex = segmentIndex;\n  this._segmentOctant = segmentOctant;\n  this._isInterior = !coord.equals2D(segString.getCoordinate(segmentIndex));\n};\nSegmentNode.prototype.getCoordinate = function getCoordinate () {\n  return this.coord\n};\nSegmentNode.prototype.print = function print (out) {\n  out.print(this.coord);\n  out.print(' seg # = ' + this.segmentIndex);\n};\nSegmentNode.prototype.compareTo = function compareTo (obj) {\n  var other = obj;\n  if (this.segmentIndex < other.segmentIndex) { return -1 }\n  if (this.segmentIndex > other.segmentIndex) { return 1 }\n  if (this.coord.equals2D(other.coord)) { return 0 }\n  return SegmentPointComparator.compare(this._segmentOctant, this.coord, other.coord)\n};\nSegmentNode.prototype.isEndPoint = function isEndPoint (maxSegmentIndex) {\n  if (this.segmentIndex === 0 && !this._isInterior) { return true }\n  if (this.segmentIndex === maxSegmentIndex) { return true }\n  return false\n};\nSegmentNode.prototype.isInterior = function isInterior () {\n  return this._isInterior\n};\nSegmentNode.prototype.interfaces_ = function interfaces_ () {\n  return [Comparable]\n};\nSegmentNode.prototype.getClass = function getClass () {\n  return SegmentNode\n};\n\n// import Iterator from '../../../../java/util/Iterator'\nvar SegmentNodeList = function SegmentNodeList () {\n  this._nodeMap = new TreeMap();\n  this._edge = null;\n  var edge = arguments[0];\n  this._edge = edge;\n};\nSegmentNodeList.prototype.getSplitCoordinates = function getSplitCoordinates () {\n    var this$1 = this;\n\n  var coordList = new CoordinateList();\n  this.addEndpoints();\n  var it = this.iterator();\n  var eiPrev = it.next();\n  while (it.hasNext()) {\n    var ei = it.next();\n    this$1.addEdgeCoordinates(eiPrev, ei, coordList);\n    eiPrev = ei;\n  }\n  return coordList.toCoordinateArray()\n};\nSegmentNodeList.prototype.addCollapsedNodes = function addCollapsedNodes () {\n    var this$1 = this;\n\n  var collapsedVertexIndexes = new ArrayList();\n  this.findCollapsesFromInsertedNodes(collapsedVertexIndexes);\n  this.findCollapsesFromExistingVertices(collapsedVertexIndexes);\n  for (var it = collapsedVertexIndexes.iterator(); it.hasNext();) {\n    var vertexIndex = it.next().intValue();\n    this$1.add(this$1._edge.getCoordinate(vertexIndex), vertexIndex);\n  }\n};\nSegmentNodeList.prototype.print = function print (out) {\n  out.println('Intersections:');\n  for (var it = this.iterator(); it.hasNext();) {\n    var ei = it.next();\n    ei.print(out);\n  }\n};\nSegmentNodeList.prototype.findCollapsesFromExistingVertices = function findCollapsesFromExistingVertices (collapsedVertexIndexes) {\n    var this$1 = this;\n\n  for (var i = 0; i < this._edge.size() - 2; i++) {\n    var p0 = this$1._edge.getCoordinate(i);\n    // const p1 = this._edge.getCoordinate(i + 1)\n    var p2 = this$1._edge.getCoordinate(i + 2);\n    if (p0.equals2D(p2)) {\n      collapsedVertexIndexes.add(new Integer(i + 1));\n    }\n  }\n};\nSegmentNodeList.prototype.addEdgeCoordinates = function addEdgeCoordinates (ei0, ei1, coordList) {\n    var this$1 = this;\n\n  // let npts = ei1.segmentIndex - ei0.segmentIndex + 2\n  var lastSegStartPt = this._edge.getCoordinate(ei1.segmentIndex);\n  var useIntPt1 = ei1.isInterior() || !ei1.coord.equals2D(lastSegStartPt);\n  // if (!useIntPt1) {\n  // npts--\n  // }\n  // const ipt = 0\n  coordList.add(new Coordinate(ei0.coord), false);\n  for (var i = ei0.segmentIndex + 1; i <= ei1.segmentIndex; i++) {\n    coordList.add(this$1._edge.getCoordinate(i));\n  }\n  if (useIntPt1) {\n    coordList.add(new Coordinate(ei1.coord));\n  }\n};\nSegmentNodeList.prototype.iterator = function iterator () {\n  return this._nodeMap.values().iterator()\n};\nSegmentNodeList.prototype.addSplitEdges = function addSplitEdges (edgeList) {\n    var this$1 = this;\n\n  this.addEndpoints();\n  this.addCollapsedNodes();\n  var it = this.iterator();\n  var eiPrev = it.next();\n  while (it.hasNext()) {\n    var ei = it.next();\n    var newEdge = this$1.createSplitEdge(eiPrev, ei);\n    edgeList.add(newEdge);\n    eiPrev = ei;\n  }\n};\nSegmentNodeList.prototype.findCollapseIndex = function findCollapseIndex (ei0, ei1, collapsedVertexIndex) {\n  if (!ei0.coord.equals2D(ei1.coord)) { return false }\n  var numVerticesBetween = ei1.segmentIndex - ei0.segmentIndex;\n  if (!ei1.isInterior()) {\n    numVerticesBetween--;\n  }\n  if (numVerticesBetween === 1) {\n    collapsedVertexIndex[0] = ei0.segmentIndex + 1;\n    return true\n  }\n  return false\n};\nSegmentNodeList.prototype.findCollapsesFromInsertedNodes = function findCollapsesFromInsertedNodes (collapsedVertexIndexes) {\n    var this$1 = this;\n\n  var collapsedVertexIndex = new Array(1).fill(null);\n  var it = this.iterator();\n  var eiPrev = it.next();\n  while (it.hasNext()) {\n    var ei = it.next();\n    var isCollapsed = this$1.findCollapseIndex(eiPrev, ei, collapsedVertexIndex);\n    if (isCollapsed) { collapsedVertexIndexes.add(new Integer(collapsedVertexIndex[0])); }\n    eiPrev = ei;\n  }\n};\nSegmentNodeList.prototype.getEdge = function getEdge () {\n  return this._edge\n};\nSegmentNodeList.prototype.addEndpoints = function addEndpoints () {\n  var maxSegIndex = this._edge.size() - 1;\n  this.add(this._edge.getCoordinate(0), 0);\n  this.add(this._edge.getCoordinate(maxSegIndex), maxSegIndex);\n};\nSegmentNodeList.prototype.createSplitEdge = function createSplitEdge (ei0, ei1) {\n    var this$1 = this;\n\n  var npts = ei1.segmentIndex - ei0.segmentIndex + 2;\n  var lastSegStartPt = this._edge.getCoordinate(ei1.segmentIndex);\n  var useIntPt1 = ei1.isInterior() || !ei1.coord.equals2D(lastSegStartPt);\n  if (!useIntPt1) {\n    npts--;\n  }\n  var pts = new Array(npts).fill(null);\n  var ipt = 0;\n  pts[ipt++] = new Coordinate(ei0.coord);\n  for (var i = ei0.segmentIndex + 1; i <= ei1.segmentIndex; i++) {\n    pts[ipt++] = this$1._edge.getCoordinate(i);\n  }\n  if (useIntPt1) { pts[ipt] = new Coordinate(ei1.coord); }\n  return new NodedSegmentString(pts, this._edge.getData())\n};\nSegmentNodeList.prototype.add = function add (intPt, segmentIndex) {\n  var eiNew = new SegmentNode(this._edge, intPt, segmentIndex, this._edge.getSegmentOctant(segmentIndex));\n  var ei = this._nodeMap.get(eiNew);\n  if (ei !== null) {\n    Assert.isTrue(ei.coord.equals2D(intPt), 'Found equal nodes with different coordinates');\n    return ei\n  }\n  this._nodeMap.put(eiNew, eiNew);\n  return eiNew\n};\nSegmentNodeList.prototype.checkSplitEdgesCorrectness = function checkSplitEdgesCorrectness (splitEdges) {\n  var edgePts = this._edge.getCoordinates();\n  var split0 = splitEdges.get(0);\n  var pt0 = split0.getCoordinate(0);\n  if (!pt0.equals2D(edgePts[0])) { throw new RuntimeException('bad split edge start point at ' + pt0) }\n  var splitn = splitEdges.get(splitEdges.size() - 1);\n  var splitnPts = splitn.getCoordinates();\n  var ptn = splitnPts[splitnPts.length - 1];\n  if (!ptn.equals2D(edgePts[edgePts.length - 1])) { throw new RuntimeException('bad split edge end point at ' + ptn) }\n};\nSegmentNodeList.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nSegmentNodeList.prototype.getClass = function getClass () {\n  return SegmentNodeList\n};\n\n\n\n// class NodeVertexIterator {\n//   constructor () {\n//     this._nodeList = null\n//     this._edge = null\n//     this._nodeIt = null\n//     this._currNode = null\n//     this._nextNode = null\n//     this._currSegIndex = 0\n//     let nodeList = arguments[0]\n//     this._nodeList = nodeList\n//     this._edge = nodeList.getEdge()\n//     this._nodeIt = nodeList.iterator()\n//     this.readNextNode()\n//   }\n//   next () {\n//     if (this._currNode === null) {\n//       this._currNode = this._nextNode\n//       this._currSegIndex = this._currNode.segmentIndex\n//       this.readNextNode()\n//       return this._currNode\n//     }\n//     if (this._nextNode === null) return null\n//     if (this._nextNode.segmentIndex === this._currNode.segmentIndex) {\n//       this._currNode = this._nextNode\n//       this._currSegIndex = this._currNode.segmentIndex\n//       this.readNextNode()\n//       return this._currNode\n//     }\n//     if (this._nextNode.segmentIndex > this._currNode.segmentIndex) {}\n//     return null\n//   }\n//   remove () {\n//     // throw new UnsupportedOperationException(this.getClass().getName())\n//   }\n//   hasNext () {\n//     if (this._nextNode === null) return false\n//     return true\n//   }\n//   readNextNode () {\n//     if (this._nodeIt.hasNext()) this._nextNode = this._nodeIt.next(); else this._nextNode = null\n//   }\n//   interfaces_ () {\n//     return [Iterator]\n//   }\n//   getClass () {\n//     return NodeVertexIterator\n//   }\n// }\n\nvar Octant = function Octant () {};\n\nOctant.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nOctant.prototype.getClass = function getClass () {\n  return Octant\n};\nOctant.octant = function octant () {\n  if (typeof arguments[0] === 'number' && typeof arguments[1] === 'number') {\n    var dx = arguments[0];\n    var dy = arguments[1];\n    if (dx === 0.0 && dy === 0.0) { throw new IllegalArgumentException('Cannot compute the octant for point ( ' + dx + ', ' + dy + ' )') }\n    var adx = Math.abs(dx);\n    var ady = Math.abs(dy);\n    if (dx >= 0) {\n      if (dy >= 0) {\n        if (adx >= ady) { return 0; } else { return 1 }\n      } else {\n        if (adx >= ady) { return 7; } else { return 6 }\n      }\n    } else {\n      if (dy >= 0) {\n        if (adx >= ady) { return 3; } else { return 2 }\n      } else {\n        if (adx >= ady) { return 4; } else { return 5 }\n      }\n    }\n  } else if (arguments[0] instanceof Coordinate && arguments[1] instanceof Coordinate) {\n    var p0 = arguments[0];\n    var p1 = arguments[1];\n    var dx$1 = p1.x - p0.x;\n    var dy$1 = p1.y - p0.y;\n    if (dx$1 === 0.0 && dy$1 === 0.0) { throw new IllegalArgumentException('Cannot compute the octant for two identical points ' + p0) }\n    return Octant.octant(dx$1, dy$1)\n  }\n};\n\nvar SegmentString = function SegmentString () {};\n\nSegmentString.prototype.getCoordinates = function getCoordinates () {};\nSegmentString.prototype.size = function size () {};\nSegmentString.prototype.getCoordinate = function getCoordinate (i) {};\nSegmentString.prototype.isClosed = function isClosed () {};\nSegmentString.prototype.setData = function setData (data) {};\nSegmentString.prototype.getData = function getData () {};\nSegmentString.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nSegmentString.prototype.getClass = function getClass () {\n  return SegmentString\n};\n\nvar NodableSegmentString = function NodableSegmentString () {};\n\nNodableSegmentString.prototype.addIntersection = function addIntersection (intPt, segmentIndex) {};\nNodableSegmentString.prototype.interfaces_ = function interfaces_ () {\n  return [SegmentString]\n};\nNodableSegmentString.prototype.getClass = function getClass () {\n  return NodableSegmentString\n};\n\nvar NodedSegmentString = function NodedSegmentString () {\n  this._nodeList = new SegmentNodeList(this);\n  this._pts = null;\n  this._data = null;\n  var pts = arguments[0];\n  var data = arguments[1];\n  this._pts = pts;\n  this._data = data;\n};\nNodedSegmentString.prototype.getCoordinates = function getCoordinates () {\n  return this._pts\n};\nNodedSegmentString.prototype.size = function size () {\n  return this._pts.length\n};\nNodedSegmentString.prototype.getCoordinate = function getCoordinate (i) {\n  return this._pts[i]\n};\nNodedSegmentString.prototype.isClosed = function isClosed () {\n  return this._pts[0].equals(this._pts[this._pts.length - 1])\n};\nNodedSegmentString.prototype.getSegmentOctant = function getSegmentOctant (index) {\n  if (index === this._pts.length - 1) { return -1 }\n  return this.safeOctant(this.getCoordinate(index), this.getCoordinate(index + 1))\n};\nNodedSegmentString.prototype.setData = function setData (data) {\n  this._data = data;\n};\nNodedSegmentString.prototype.safeOctant = function safeOctant (p0, p1) {\n  if (p0.equals2D(p1)) { return 0 }\n  return Octant.octant(p0, p1)\n};\nNodedSegmentString.prototype.getData = function getData () {\n  return this._data\n};\nNodedSegmentString.prototype.addIntersection = function addIntersection () {\n  if (arguments.length === 2) {\n    var intPt$1 = arguments[0];\n    var segmentIndex = arguments[1];\n    this.addIntersectionNode(intPt$1, segmentIndex);\n  } else if (arguments.length === 4) {\n    var li = arguments[0];\n    var segmentIndex$1 = arguments[1];\n    // const geomIndex = arguments[2]\n    var intIndex = arguments[3];\n    var intPt = new Coordinate(li.getIntersection(intIndex));\n    this.addIntersection(intPt, segmentIndex$1);\n  }\n};\nNodedSegmentString.prototype.toString = function toString () {\n  return WKTWriter.toLineString(new CoordinateArraySequence(this._pts))\n};\nNodedSegmentString.prototype.getNodeList = function getNodeList () {\n  return this._nodeList\n};\nNodedSegmentString.prototype.addIntersectionNode = function addIntersectionNode (intPt, segmentIndex) {\n  var normalizedSegmentIndex = segmentIndex;\n  var nextSegIndex = normalizedSegmentIndex + 1;\n  if (nextSegIndex < this._pts.length) {\n    var nextPt = this._pts[nextSegIndex];\n    if (intPt.equals2D(nextPt)) {\n      normalizedSegmentIndex = nextSegIndex;\n    }\n  }\n  var ei = this._nodeList.add(intPt, normalizedSegmentIndex);\n  return ei\n};\nNodedSegmentString.prototype.addIntersections = function addIntersections (li, segmentIndex, geomIndex) {\n    var this$1 = this;\n\n  for (var i = 0; i < li.getIntersectionNum(); i++) {\n    this$1.addIntersection(li, segmentIndex, geomIndex, i);\n  }\n};\nNodedSegmentString.prototype.interfaces_ = function interfaces_ () {\n  return [NodableSegmentString]\n};\nNodedSegmentString.prototype.getClass = function getClass () {\n  return NodedSegmentString\n};\nNodedSegmentString.getNodedSubstrings = function getNodedSubstrings () {\n  if (arguments.length === 1) {\n    var segStrings = arguments[0];\n    var resultEdgelist = new ArrayList();\n    NodedSegmentString.getNodedSubstrings(segStrings, resultEdgelist);\n    return resultEdgelist\n  } else if (arguments.length === 2) {\n    var segStrings$1 = arguments[0];\n    var resultEdgelist$1 = arguments[1];\n    for (var i = segStrings$1.iterator(); i.hasNext();) {\n      var ss = i.next();\n      ss.getNodeList().addSplitEdges(resultEdgelist$1);\n    }\n  }\n};\n\nvar LineSegment = function LineSegment () {\n  this.p0 = null;\n  this.p1 = null;\n  if (arguments.length === 0) {\n    this.p0 = new Coordinate();\n    this.p1 = new Coordinate();\n  } else if (arguments.length === 1) {\n    var ls = arguments[0];\n    this.p0 = new Coordinate(ls.p0);\n    this.p1 = new Coordinate(ls.p1);\n  } else if (arguments.length === 2) {\n    this.p0 = arguments[0];\n    this.p1 = arguments[1];\n  } else if (arguments.length === 4) {\n    var x0 = arguments[0];\n    var y0 = arguments[1];\n    var x1 = arguments[2];\n    var y1 = arguments[3];\n    this.p0 = new Coordinate(x0, y0);\n    this.p1 = new Coordinate(x1, y1);\n  }\n};\n\nvar staticAccessors$24 = { serialVersionUID: { configurable: true } };\nLineSegment.prototype.minX = function minX () {\n  return Math.min(this.p0.x, this.p1.x)\n};\nLineSegment.prototype.orientationIndex = function orientationIndex () {\n  if (arguments[0] instanceof LineSegment) {\n    var seg = arguments[0];\n    var orient0 = CGAlgorithms.orientationIndex(this.p0, this.p1, seg.p0);\n    var orient1 = CGAlgorithms.orientationIndex(this.p0, this.p1, seg.p1);\n    if (orient0 >= 0 && orient1 >= 0) { return Math.max(orient0, orient1) }\n    if (orient0 <= 0 && orient1 <= 0) { return Math.max(orient0, orient1) }\n    return 0\n  } else if (arguments[0] instanceof Coordinate) {\n    var p = arguments[0];\n    return CGAlgorithms.orientationIndex(this.p0, this.p1, p)\n  }\n};\nLineSegment.prototype.toGeometry = function toGeometry (geomFactory) {\n  return geomFactory.createLineString([this.p0, this.p1])\n};\nLineSegment.prototype.isVertical = function isVertical () {\n  return this.p0.x === this.p1.x\n};\nLineSegment.prototype.equals = function equals (o) {\n  if (!(o instanceof LineSegment)) {\n    return false\n  }\n  var other = o;\n  return this.p0.equals(other.p0) && this.p1.equals(other.p1)\n};\nLineSegment.prototype.intersection = function intersection (line) {\n  var li = new RobustLineIntersector();\n  li.computeIntersection(this.p0, this.p1, line.p0, line.p1);\n  if (li.hasIntersection()) { return li.getIntersection(0) }\n  return null\n};\nLineSegment.prototype.project = function project () {\n  if (arguments[0] instanceof Coordinate) {\n    var p = arguments[0];\n    if (p.equals(this.p0) || p.equals(this.p1)) { return new Coordinate(p) }\n    var r = this.projectionFactor(p);\n    var coord = new Coordinate();\n    coord.x = this.p0.x + r * (this.p1.x - this.p0.x);\n    coord.y = this.p0.y + r * (this.p1.y - this.p0.y);\n    return coord\n  } else if (arguments[0] instanceof LineSegment) {\n    var seg = arguments[0];\n    var pf0 = this.projectionFactor(seg.p0);\n    var pf1 = this.projectionFactor(seg.p1);\n    if (pf0 >= 1.0 && pf1 >= 1.0) { return null }\n    if (pf0 <= 0.0 && pf1 <= 0.0) { return null }\n    var newp0 = this.project(seg.p0);\n    if (pf0 < 0.0) { newp0 = this.p0; }\n    if (pf0 > 1.0) { newp0 = this.p1; }\n    var newp1 = this.project(seg.p1);\n    if (pf1 < 0.0) { newp1 = this.p0; }\n    if (pf1 > 1.0) { newp1 = this.p1; }\n    return new LineSegment(newp0, newp1)\n  }\n};\nLineSegment.prototype.normalize = function normalize () {\n  if (this.p1.compareTo(this.p0) < 0) { this.reverse(); }\n};\nLineSegment.prototype.angle = function angle () {\n  return Math.atan2(this.p1.y - this.p0.y, this.p1.x - this.p0.x)\n};\nLineSegment.prototype.getCoordinate = function getCoordinate (i) {\n  if (i === 0) { return this.p0 }\n  return this.p1\n};\nLineSegment.prototype.distancePerpendicular = function distancePerpendicular (p) {\n  return CGAlgorithms.distancePointLinePerpendicular(p, this.p0, this.p1)\n};\nLineSegment.prototype.minY = function minY () {\n  return Math.min(this.p0.y, this.p1.y)\n};\nLineSegment.prototype.midPoint = function midPoint () {\n  return LineSegment.midPoint(this.p0, this.p1)\n};\nLineSegment.prototype.projectionFactor = function projectionFactor (p) {\n  if (p.equals(this.p0)) { return 0.0 }\n  if (p.equals(this.p1)) { return 1.0 }\n  var dx = this.p1.x - this.p0.x;\n  var dy = this.p1.y - this.p0.y;\n  var len = dx * dx + dy * dy;\n  if (len <= 0.0) { return Double.NaN }\n  var r = ((p.x - this.p0.x) * dx + (p.y - this.p0.y) * dy) / len;\n  return r\n};\nLineSegment.prototype.closestPoints = function closestPoints (line) {\n  var intPt = this.intersection(line);\n  if (intPt !== null) {\n    return [intPt, intPt]\n  }\n  var closestPt = new Array(2).fill(null);\n  var minDistance = Double.MAX_VALUE;\n  var dist = null;\n  var close00 = this.closestPoint(line.p0);\n  minDistance = close00.distance(line.p0);\n  closestPt[0] = close00;\n  closestPt[1] = line.p0;\n  var close01 = this.closestPoint(line.p1);\n  dist = close01.distance(line.p1);\n  if (dist < minDistance) {\n    minDistance = dist;\n    closestPt[0] = close01;\n    closestPt[1] = line.p1;\n  }\n  var close10 = line.closestPoint(this.p0);\n  dist = close10.distance(this.p0);\n  if (dist < minDistance) {\n    minDistance = dist;\n    closestPt[0] = this.p0;\n    closestPt[1] = close10;\n  }\n  var close11 = line.closestPoint(this.p1);\n  dist = close11.distance(this.p1);\n  if (dist < minDistance) {\n    minDistance = dist;\n    closestPt[0] = this.p1;\n    closestPt[1] = close11;\n  }\n  return closestPt\n};\nLineSegment.prototype.closestPoint = function closestPoint (p) {\n  var factor = this.projectionFactor(p);\n  if (factor > 0 && factor < 1) {\n    return this.project(p)\n  }\n  var dist0 = this.p0.distance(p);\n  var dist1 = this.p1.distance(p);\n  if (dist0 < dist1) { return this.p0 }\n  return this.p1\n};\nLineSegment.prototype.maxX = function maxX () {\n  return Math.max(this.p0.x, this.p1.x)\n};\nLineSegment.prototype.getLength = function getLength () {\n  return this.p0.distance(this.p1)\n};\nLineSegment.prototype.compareTo = function compareTo (o) {\n  var other = o;\n  var comp0 = this.p0.compareTo(other.p0);\n  if (comp0 !== 0) { return comp0 }\n  return this.p1.compareTo(other.p1)\n};\nLineSegment.prototype.reverse = function reverse () {\n  var temp = this.p0;\n  this.p0 = this.p1;\n  this.p1 = temp;\n};\nLineSegment.prototype.equalsTopo = function equalsTopo (other) {\n  return this.p0.equals(other.p0) &&\n        (this.p1.equals(other.p1) || this.p0.equals(other.p1)) &&\n         this.p1.equals(other.p0)\n};\nLineSegment.prototype.lineIntersection = function lineIntersection (line) {\n  try {\n    var intPt = HCoordinate.intersection(this.p0, this.p1, line.p0, line.p1);\n    return intPt\n  } catch (ex) {\n    if (ex instanceof NotRepresentableException) {} else { throw ex }\n  } finally {}\n  return null\n};\nLineSegment.prototype.maxY = function maxY () {\n  return Math.max(this.p0.y, this.p1.y)\n};\nLineSegment.prototype.pointAlongOffset = function pointAlongOffset (segmentLengthFraction, offsetDistance) {\n  var segx = this.p0.x + segmentLengthFraction * (this.p1.x - this.p0.x);\n  var segy = this.p0.y + segmentLengthFraction * (this.p1.y - this.p0.y);\n  var dx = this.p1.x - this.p0.x;\n  var dy = this.p1.y - this.p0.y;\n  var len = Math.sqrt(dx * dx + dy * dy);\n  var ux = 0.0;\n  var uy = 0.0;\n  if (offsetDistance !== 0.0) {\n    if (len <= 0.0) { throw new Error('Cannot compute offset from zero-length line segment') }\n    ux = offsetDistance * dx / len;\n    uy = offsetDistance * dy / len;\n  }\n  var offsetx = segx - uy;\n  var offsety = segy + ux;\n  var coord = new Coordinate(offsetx, offsety);\n  return coord\n};\nLineSegment.prototype.setCoordinates = function setCoordinates () {\n  if (arguments.length === 1) {\n    var ls = arguments[0];\n    this.setCoordinates(ls.p0, ls.p1);\n  } else if (arguments.length === 2) {\n    var p0 = arguments[0];\n    var p1 = arguments[1];\n    this.p0.x = p0.x;\n    this.p0.y = p0.y;\n    this.p1.x = p1.x;\n    this.p1.y = p1.y;\n  }\n};\nLineSegment.prototype.segmentFraction = function segmentFraction (inputPt) {\n  var segFrac = this.projectionFactor(inputPt);\n  if (segFrac < 0.0) { segFrac = 0.0; } else if (segFrac > 1.0 || Double.isNaN(segFrac)) { segFrac = 1.0; }\n  return segFrac\n};\nLineSegment.prototype.toString = function toString () {\n  return 'LINESTRING( ' + this.p0.x + ' ' + this.p0.y + ', ' + this.p1.x + ' ' + this.p1.y + ')'\n};\nLineSegment.prototype.isHorizontal = function isHorizontal () {\n  return this.p0.y === this.p1.y\n};\nLineSegment.prototype.distance = function distance () {\n  if (arguments[0] instanceof LineSegment) {\n    var ls = arguments[0];\n    return CGAlgorithms.distanceLineLine(this.p0, this.p1, ls.p0, ls.p1)\n  } else if (arguments[0] instanceof Coordinate) {\n    var p = arguments[0];\n    return CGAlgorithms.distancePointLine(p, this.p0, this.p1)\n  }\n};\nLineSegment.prototype.pointAlong = function pointAlong (segmentLengthFraction) {\n  var coord = new Coordinate();\n  coord.x = this.p0.x + segmentLengthFraction * (this.p1.x - this.p0.x);\n  coord.y = this.p0.y + segmentLengthFraction * (this.p1.y - this.p0.y);\n  return coord\n};\nLineSegment.prototype.hashCode = function hashCode () {\n  var bits0 = Double.doubleToLongBits(this.p0.x);\n  bits0 ^= Double.doubleToLongBits(this.p0.y) * 31;\n  var hash0 = Math.trunc(bits0) ^ Math.trunc(bits0 >> 32);\n  var bits1 = Double.doubleToLongBits(this.p1.x);\n  bits1 ^= Double.doubleToLongBits(this.p1.y) * 31;\n  var hash1 = Math.trunc(bits1) ^ Math.trunc(bits1 >> 32);\n  return hash0 ^ hash1\n};\nLineSegment.prototype.interfaces_ = function interfaces_ () {\n  return [Comparable, Serializable]\n};\nLineSegment.prototype.getClass = function getClass () {\n  return LineSegment\n};\nLineSegment.midPoint = function midPoint (p0, p1) {\n  return new Coordinate((p0.x + p1.x) / 2, (p0.y + p1.y) / 2)\n};\nstaticAccessors$24.serialVersionUID.get = function () { return 3252005833466256227 };\n\nObject.defineProperties( LineSegment, staticAccessors$24 );\n\nvar MonotoneChainOverlapAction = function MonotoneChainOverlapAction () {\n  this.tempEnv1 = new Envelope();\n  this.tempEnv2 = new Envelope();\n  this._overlapSeg1 = new LineSegment();\n  this._overlapSeg2 = new LineSegment();\n};\nMonotoneChainOverlapAction.prototype.overlap = function overlap () {\n  if (arguments.length === 2) {\n    // const seg1 = arguments[0]\n    // const seg2 = arguments[1]\n  } else if (arguments.length === 4) {\n    var mc1 = arguments[0];\n    var start1 = arguments[1];\n    var mc2 = arguments[2];\n    var start2 = arguments[3];\n    mc1.getLineSegment(start1, this._overlapSeg1);\n    mc2.getLineSegment(start2, this._overlapSeg2);\n    this.overlap(this._overlapSeg1, this._overlapSeg2);\n  }\n};\nMonotoneChainOverlapAction.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nMonotoneChainOverlapAction.prototype.getClass = function getClass () {\n  return MonotoneChainOverlapAction\n};\n\nvar MonotoneChain = function MonotoneChain () {\n  this._pts = null;\n  this._start = null;\n  this._end = null;\n  this._env = null;\n  this._context = null;\n  this._id = null;\n  var pts = arguments[0];\n  var start = arguments[1];\n  var end = arguments[2];\n  var context = arguments[3];\n  this._pts = pts;\n  this._start = start;\n  this._end = end;\n  this._context = context;\n};\nMonotoneChain.prototype.getLineSegment = function getLineSegment (index, ls) {\n  ls.p0 = this._pts[index];\n  ls.p1 = this._pts[index + 1];\n};\nMonotoneChain.prototype.computeSelect = function computeSelect (searchEnv, start0, end0, mcs) {\n  var p0 = this._pts[start0];\n  var p1 = this._pts[end0];\n  mcs.tempEnv1.init(p0, p1);\n  if (end0 - start0 === 1) {\n    mcs.select(this, start0);\n    return null\n  }\n  if (!searchEnv.intersects(mcs.tempEnv1)) { return null }\n  var mid = Math.trunc((start0 + end0) / 2);\n  if (start0 < mid) {\n    this.computeSelect(searchEnv, start0, mid, mcs);\n  }\n  if (mid < end0) {\n    this.computeSelect(searchEnv, mid, end0, mcs);\n  }\n};\nMonotoneChain.prototype.getCoordinates = function getCoordinates () {\n    var this$1 = this;\n\n  var coord = new Array(this._end - this._start + 1).fill(null);\n  var index = 0;\n  for (var i = this._start; i <= this._end; i++) {\n    coord[index++] = this$1._pts[i];\n  }\n  return coord\n};\nMonotoneChain.prototype.computeOverlaps = function computeOverlaps (mc, mco) {\n  this.computeOverlapsInternal(this._start, this._end, mc, mc._start, mc._end, mco);\n};\nMonotoneChain.prototype.setId = function setId (id) {\n  this._id = id;\n};\nMonotoneChain.prototype.select = function select (searchEnv, mcs) {\n  this.computeSelect(searchEnv, this._start, this._end, mcs);\n};\nMonotoneChain.prototype.getEnvelope = function getEnvelope () {\n  if (this._env === null) {\n    var p0 = this._pts[this._start];\n    var p1 = this._pts[this._end];\n    this._env = new Envelope(p0, p1);\n  }\n  return this._env\n};\nMonotoneChain.prototype.getEndIndex = function getEndIndex () {\n  return this._end\n};\nMonotoneChain.prototype.getStartIndex = function getStartIndex () {\n  return this._start\n};\nMonotoneChain.prototype.getContext = function getContext () {\n  return this._context\n};\nMonotoneChain.prototype.getId = function getId () {\n  return this._id\n};\nMonotoneChain.prototype.computeOverlapsInternal = function computeOverlapsInternal (start0, end0, mc, start1, end1, mco) {\n  var p00 = this._pts[start0];\n  var p01 = this._pts[end0];\n  var p10 = mc._pts[start1];\n  var p11 = mc._pts[end1];\n  if (end0 - start0 === 1 && end1 - start1 === 1) {\n    mco.overlap(this, start0, mc, start1);\n    return null\n  }\n  mco.tempEnv1.init(p00, p01);\n  mco.tempEnv2.init(p10, p11);\n  if (!mco.tempEnv1.intersects(mco.tempEnv2)) { return null }\n  var mid0 = Math.trunc((start0 + end0) / 2);\n  var mid1 = Math.trunc((start1 + end1) / 2);\n  if (start0 < mid0) {\n    if (start1 < mid1) { this.computeOverlapsInternal(start0, mid0, mc, start1, mid1, mco); }\n    if (mid1 < end1) { this.computeOverlapsInternal(start0, mid0, mc, mid1, end1, mco); }\n  }\n  if (mid0 < end0) {\n    if (start1 < mid1) { this.computeOverlapsInternal(mid0, end0, mc, start1, mid1, mco); }\n    if (mid1 < end1) { this.computeOverlapsInternal(mid0, end0, mc, mid1, end1, mco); }\n  }\n};\nMonotoneChain.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nMonotoneChain.prototype.getClass = function getClass () {\n  return MonotoneChain\n};\n\nvar MonotoneChainBuilder = function MonotoneChainBuilder () {};\n\nMonotoneChainBuilder.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nMonotoneChainBuilder.prototype.getClass = function getClass () {\n  return MonotoneChainBuilder\n};\nMonotoneChainBuilder.getChainStartIndices = function getChainStartIndices (pts) {\n  var start = 0;\n  var startIndexList = new ArrayList();\n  startIndexList.add(new Integer(start));\n  do {\n    var last = MonotoneChainBuilder.findChainEnd(pts, start);\n    startIndexList.add(new Integer(last));\n    start = last;\n  } while (start < pts.length - 1)\n  var startIndex = MonotoneChainBuilder.toIntArray(startIndexList);\n  return startIndex\n};\nMonotoneChainBuilder.findChainEnd = function findChainEnd (pts, start) {\n  var safeStart = start;\n  while (safeStart < pts.length - 1 && pts[safeStart].equals2D(pts[safeStart + 1])) {\n    safeStart++;\n  }\n  if (safeStart >= pts.length - 1) {\n    return pts.length - 1\n  }\n  var chainQuad = Quadrant.quadrant(pts[safeStart], pts[safeStart + 1]);\n  var last = start + 1;\n  while (last < pts.length) {\n    if (!pts[last - 1].equals2D(pts[last])) {\n      var quad = Quadrant.quadrant(pts[last - 1], pts[last]);\n      if (quad !== chainQuad) { break }\n    }\n    last++;\n  }\n  return last - 1\n};\nMonotoneChainBuilder.getChains = function getChains () {\n  if (arguments.length === 1) {\n    var pts = arguments[0];\n    return MonotoneChainBuilder.getChains(pts, null)\n  } else if (arguments.length === 2) {\n    var pts$1 = arguments[0];\n    var context = arguments[1];\n    var mcList = new ArrayList();\n    var startIndex = MonotoneChainBuilder.getChainStartIndices(pts$1);\n    for (var i = 0; i < startIndex.length - 1; i++) {\n      var mc = new MonotoneChain(pts$1, startIndex[i], startIndex[i + 1], context);\n      mcList.add(mc);\n    }\n    return mcList\n  }\n};\nMonotoneChainBuilder.toIntArray = function toIntArray (list) {\n  var array = new Array(list.size()).fill(null);\n  for (var i = 0; i < array.length; i++) {\n    array[i] = list.get(i).intValue();\n  }\n  return array\n};\n\nvar Noder = function Noder () {};\n\nNoder.prototype.computeNodes = function computeNodes (segStrings) {};\nNoder.prototype.getNodedSubstrings = function getNodedSubstrings () {};\nNoder.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nNoder.prototype.getClass = function getClass () {\n  return Noder\n};\n\nvar SinglePassNoder = function SinglePassNoder () {\n  this._segInt = null;\n  if (arguments.length === 0) {} else if (arguments.length === 1) {\n    var segInt = arguments[0];\n    this.setSegmentIntersector(segInt);\n  }\n};\nSinglePassNoder.prototype.setSegmentIntersector = function setSegmentIntersector (segInt) {\n  this._segInt = segInt;\n};\nSinglePassNoder.prototype.interfaces_ = function interfaces_ () {\n  return [Noder]\n};\nSinglePassNoder.prototype.getClass = function getClass () {\n  return SinglePassNoder\n};\n\nvar MCIndexNoder = (function (SinglePassNoder$$1) {\n  function MCIndexNoder (si) {\n    if (si) { SinglePassNoder$$1.call(this, si); }\n    else { SinglePassNoder$$1.call(this); }\n    this._monoChains = new ArrayList();\n    this._index = new STRtree();\n    this._idCounter = 0;\n    this._nodedSegStrings = null;\n    this._nOverlaps = 0;\n  }\n\n  if ( SinglePassNoder$$1 ) MCIndexNoder.__proto__ = SinglePassNoder$$1;\n  MCIndexNoder.prototype = Object.create( SinglePassNoder$$1 && SinglePassNoder$$1.prototype );\n  MCIndexNoder.prototype.constructor = MCIndexNoder;\n\n  var staticAccessors = { SegmentOverlapAction: { configurable: true } };\n  MCIndexNoder.prototype.getMonotoneChains = function getMonotoneChains () {\n    return this._monoChains\n  };\n  MCIndexNoder.prototype.getNodedSubstrings = function getNodedSubstrings () {\n    return NodedSegmentString.getNodedSubstrings(this._nodedSegStrings)\n  };\n  MCIndexNoder.prototype.getIndex = function getIndex () {\n    return this._index\n  };\n  MCIndexNoder.prototype.add = function add (segStr) {\n    var this$1 = this;\n\n    var segChains = MonotoneChainBuilder.getChains(segStr.getCoordinates(), segStr);\n    for (var i = segChains.iterator(); i.hasNext();) {\n      var mc = i.next();\n      mc.setId(this$1._idCounter++);\n      this$1._index.insert(mc.getEnvelope(), mc);\n      this$1._monoChains.add(mc);\n    }\n  };\n  MCIndexNoder.prototype.computeNodes = function computeNodes (inputSegStrings) {\n    var this$1 = this;\n\n    this._nodedSegStrings = inputSegStrings;\n    for (var i = inputSegStrings.iterator(); i.hasNext();) {\n      this$1.add(i.next());\n    }\n    this.intersectChains();\n  };\n  MCIndexNoder.prototype.intersectChains = function intersectChains () {\n    var this$1 = this;\n\n    var overlapAction = new SegmentOverlapAction(this._segInt);\n    for (var i = this._monoChains.iterator(); i.hasNext();) {\n      var queryChain = i.next();\n      var overlapChains = this$1._index.query(queryChain.getEnvelope());\n      for (var j = overlapChains.iterator(); j.hasNext();) {\n        var testChain = j.next();\n        if (testChain.getId() > queryChain.getId()) {\n          queryChain.computeOverlaps(testChain, overlapAction);\n          this$1._nOverlaps++;\n        }\n        if (this$1._segInt.isDone()) { return null }\n      }\n    }\n  };\n  MCIndexNoder.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  MCIndexNoder.prototype.getClass = function getClass () {\n    return MCIndexNoder\n  };\n  staticAccessors.SegmentOverlapAction.get = function () { return SegmentOverlapAction };\n\n  Object.defineProperties( MCIndexNoder, staticAccessors );\n\n  return MCIndexNoder;\n}(SinglePassNoder));\n\nvar SegmentOverlapAction = (function (MonotoneChainOverlapAction$$1) {\n  function SegmentOverlapAction () {\n    MonotoneChainOverlapAction$$1.call(this);\n    this._si = null;\n    var si = arguments[0];\n    this._si = si;\n  }\n\n  if ( MonotoneChainOverlapAction$$1 ) SegmentOverlapAction.__proto__ = MonotoneChainOverlapAction$$1;\n  SegmentOverlapAction.prototype = Object.create( MonotoneChainOverlapAction$$1 && MonotoneChainOverlapAction$$1.prototype );\n  SegmentOverlapAction.prototype.constructor = SegmentOverlapAction;\n  SegmentOverlapAction.prototype.overlap = function overlap () {\n    if (arguments.length === 4) {\n      var mc1 = arguments[0];\n      var start1 = arguments[1];\n      var mc2 = arguments[2];\n      var start2 = arguments[3];\n      var ss1 = mc1.getContext();\n      var ss2 = mc2.getContext();\n      this._si.processIntersections(ss1, start1, ss2, start2);\n    } else { return MonotoneChainOverlapAction$$1.prototype.overlap.apply(this, arguments) }\n  };\n  SegmentOverlapAction.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  SegmentOverlapAction.prototype.getClass = function getClass () {\n    return SegmentOverlapAction\n  };\n\n  return SegmentOverlapAction;\n}(MonotoneChainOverlapAction));\n\nvar BufferParameters = function BufferParameters () {\n  this._quadrantSegments = BufferParameters.DEFAULT_QUADRANT_SEGMENTS;\n  this._endCapStyle = BufferParameters.CAP_ROUND;\n  this._joinStyle = BufferParameters.JOIN_ROUND;\n  this._mitreLimit = BufferParameters.DEFAULT_MITRE_LIMIT;\n  this._isSingleSided = false;\n  this._simplifyFactor = BufferParameters.DEFAULT_SIMPLIFY_FACTOR;\n\n  if (arguments.length === 0) {} else if (arguments.length === 1) {\n    var quadrantSegments = arguments[0];\n    this.setQuadrantSegments(quadrantSegments);\n  } else if (arguments.length === 2) {\n    var quadrantSegments$1 = arguments[0];\n    var endCapStyle = arguments[1];\n    this.setQuadrantSegments(quadrantSegments$1);\n    this.setEndCapStyle(endCapStyle);\n  } else if (arguments.length === 4) {\n    var quadrantSegments$2 = arguments[0];\n    var endCapStyle$1 = arguments[1];\n    var joinStyle = arguments[2];\n    var mitreLimit = arguments[3];\n    this.setQuadrantSegments(quadrantSegments$2);\n    this.setEndCapStyle(endCapStyle$1);\n    this.setJoinStyle(joinStyle);\n    this.setMitreLimit(mitreLimit);\n  }\n};\n\nvar staticAccessors$25 = { CAP_ROUND: { configurable: true },CAP_FLAT: { configurable: true },CAP_SQUARE: { configurable: true },JOIN_ROUND: { configurable: true },JOIN_MITRE: { configurable: true },JOIN_BEVEL: { configurable: true },DEFAULT_QUADRANT_SEGMENTS: { configurable: true },DEFAULT_MITRE_LIMIT: { configurable: true },DEFAULT_SIMPLIFY_FACTOR: { configurable: true } };\nBufferParameters.prototype.getEndCapStyle = function getEndCapStyle () {\n  return this._endCapStyle\n};\nBufferParameters.prototype.isSingleSided = function isSingleSided () {\n  return this._isSingleSided\n};\nBufferParameters.prototype.setQuadrantSegments = function setQuadrantSegments (quadSegs) {\n  this._quadrantSegments = quadSegs;\n  if (this._quadrantSegments === 0) { this._joinStyle = BufferParameters.JOIN_BEVEL; }\n  if (this._quadrantSegments < 0) {\n    this._joinStyle = BufferParameters.JOIN_MITRE;\n    this._mitreLimit = Math.abs(this._quadrantSegments);\n  }\n  if (quadSegs <= 0) {\n    this._quadrantSegments = 1;\n  }\n  if (this._joinStyle !== BufferParameters.JOIN_ROUND) {\n    this._quadrantSegments = BufferParameters.DEFAULT_QUADRANT_SEGMENTS;\n  }\n};\nBufferParameters.prototype.getJoinStyle = function getJoinStyle () {\n  return this._joinStyle\n};\nBufferParameters.prototype.setJoinStyle = function setJoinStyle (joinStyle) {\n  this._joinStyle = joinStyle;\n};\nBufferParameters.prototype.setSimplifyFactor = function setSimplifyFactor (simplifyFactor) {\n  this._simplifyFactor = simplifyFactor < 0 ? 0 : simplifyFactor;\n};\nBufferParameters.prototype.getSimplifyFactor = function getSimplifyFactor () {\n  return this._simplifyFactor\n};\nBufferParameters.prototype.getQuadrantSegments = function getQuadrantSegments () {\n  return this._quadrantSegments\n};\nBufferParameters.prototype.setEndCapStyle = function setEndCapStyle (endCapStyle) {\n  this._endCapStyle = endCapStyle;\n};\nBufferParameters.prototype.getMitreLimit = function getMitreLimit () {\n  return this._mitreLimit\n};\nBufferParameters.prototype.setMitreLimit = function setMitreLimit (mitreLimit) {\n  this._mitreLimit = mitreLimit;\n};\nBufferParameters.prototype.setSingleSided = function setSingleSided (isSingleSided) {\n  this._isSingleSided = isSingleSided;\n};\nBufferParameters.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nBufferParameters.prototype.getClass = function getClass () {\n  return BufferParameters\n};\nBufferParameters.bufferDistanceError = function bufferDistanceError (quadSegs) {\n  var alpha = Math.PI / 2.0 / quadSegs;\n  return 1 - Math.cos(alpha / 2.0)\n};\nstaticAccessors$25.CAP_ROUND.get = function () { return 1 };\nstaticAccessors$25.CAP_FLAT.get = function () { return 2 };\nstaticAccessors$25.CAP_SQUARE.get = function () { return 3 };\nstaticAccessors$25.JOIN_ROUND.get = function () { return 1 };\nstaticAccessors$25.JOIN_MITRE.get = function () { return 2 };\nstaticAccessors$25.JOIN_BEVEL.get = function () { return 3 };\nstaticAccessors$25.DEFAULT_QUADRANT_SEGMENTS.get = function () { return 8 };\nstaticAccessors$25.DEFAULT_MITRE_LIMIT.get = function () { return 5.0 };\nstaticAccessors$25.DEFAULT_SIMPLIFY_FACTOR.get = function () { return 0.01 };\n\nObject.defineProperties( BufferParameters, staticAccessors$25 );\n\nvar BufferInputLineSimplifier = function BufferInputLineSimplifier (inputLine) {\n  this._distanceTol = null;\n  this._isDeleted = null;\n  this._angleOrientation = CGAlgorithms.COUNTERCLOCKWISE;\n  this._inputLine = inputLine || null;\n};\n\nvar staticAccessors$26 = { INIT: { configurable: true },DELETE: { configurable: true },KEEP: { configurable: true },NUM_PTS_TO_CHECK: { configurable: true } };\nBufferInputLineSimplifier.prototype.isDeletable = function isDeletable (i0, i1, i2, distanceTol) {\n  var p0 = this._inputLine[i0];\n  var p1 = this._inputLine[i1];\n  var p2 = this._inputLine[i2];\n  if (!this.isConcave(p0, p1, p2)) { return false }\n  if (!this.isShallow(p0, p1, p2, distanceTol)) { return false }\n  return this.isShallowSampled(p0, p1, i0, i2, distanceTol)\n};\nBufferInputLineSimplifier.prototype.deleteShallowConcavities = function deleteShallowConcavities () {\n    var this$1 = this;\n\n  var index = 1;\n  // const maxIndex = this._inputLine.length - 1\n  var midIndex = this.findNextNonDeletedIndex(index);\n  var lastIndex = this.findNextNonDeletedIndex(midIndex);\n  var isChanged = false;\n  while (lastIndex < this._inputLine.length) {\n    var isMiddleVertexDeleted = false;\n    if (this$1.isDeletable(index, midIndex, lastIndex, this$1._distanceTol)) {\n      this$1._isDeleted[midIndex] = BufferInputLineSimplifier.DELETE;\n      isMiddleVertexDeleted = true;\n      isChanged = true;\n    }\n    if (isMiddleVertexDeleted) { index = lastIndex; } else { index = midIndex; }\n    midIndex = this$1.findNextNonDeletedIndex(index);\n    lastIndex = this$1.findNextNonDeletedIndex(midIndex);\n  }\n  return isChanged\n};\nBufferInputLineSimplifier.prototype.isShallowConcavity = function isShallowConcavity (p0, p1, p2, distanceTol) {\n  var orientation = CGAlgorithms.computeOrientation(p0, p1, p2);\n  var isAngleToSimplify = orientation === this._angleOrientation;\n  if (!isAngleToSimplify) { return false }\n  var dist = CGAlgorithms.distancePointLine(p1, p0, p2);\n  return dist < distanceTol\n};\nBufferInputLineSimplifier.prototype.isShallowSampled = function isShallowSampled (p0, p2, i0, i2, distanceTol) {\n    var this$1 = this;\n\n  var inc = Math.trunc((i2 - i0) / BufferInputLineSimplifier.NUM_PTS_TO_CHECK);\n  if (inc <= 0) { inc = 1; }\n  for (var i = i0; i < i2; i += inc) {\n    if (!this$1.isShallow(p0, p2, this$1._inputLine[i], distanceTol)) { return false }\n  }\n  return true\n};\nBufferInputLineSimplifier.prototype.isConcave = function isConcave (p0, p1, p2) {\n  var orientation = CGAlgorithms.computeOrientation(p0, p1, p2);\n  var isConcave = orientation === this._angleOrientation;\n  return isConcave\n};\nBufferInputLineSimplifier.prototype.simplify = function simplify (distanceTol) {\n    var this$1 = this;\n\n  this._distanceTol = Math.abs(distanceTol);\n  if (distanceTol < 0) { this._angleOrientation = CGAlgorithms.CLOCKWISE; }\n  this._isDeleted = new Array(this._inputLine.length).fill(null);\n  var isChanged = false;\n  do {\n    isChanged = this$1.deleteShallowConcavities();\n  } while (isChanged)\n  return this.collapseLine()\n};\nBufferInputLineSimplifier.prototype.findNextNonDeletedIndex = function findNextNonDeletedIndex (index) {\n  var next = index + 1;\n  while (next < this._inputLine.length && this._isDeleted[next] === BufferInputLineSimplifier.DELETE) { next++; }\n  return next\n};\nBufferInputLineSimplifier.prototype.isShallow = function isShallow (p0, p1, p2, distanceTol) {\n  var dist = CGAlgorithms.distancePointLine(p1, p0, p2);\n  return dist < distanceTol\n};\nBufferInputLineSimplifier.prototype.collapseLine = function collapseLine () {\n    var this$1 = this;\n\n  var coordList = new CoordinateList();\n  for (var i = 0; i < this._inputLine.length; i++) {\n    if (this$1._isDeleted[i] !== BufferInputLineSimplifier.DELETE) { coordList.add(this$1._inputLine[i]); }\n  }\n  return coordList.toCoordinateArray()\n};\nBufferInputLineSimplifier.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nBufferInputLineSimplifier.prototype.getClass = function getClass () {\n  return BufferInputLineSimplifier\n};\nBufferInputLineSimplifier.simplify = function simplify (inputLine, distanceTol) {\n  var simp = new BufferInputLineSimplifier(inputLine);\n  return simp.simplify(distanceTol)\n};\nstaticAccessors$26.INIT.get = function () { return 0 };\nstaticAccessors$26.DELETE.get = function () { return 1 };\nstaticAccessors$26.KEEP.get = function () { return 1 };\nstaticAccessors$26.NUM_PTS_TO_CHECK.get = function () { return 10 };\n\nObject.defineProperties( BufferInputLineSimplifier, staticAccessors$26 );\n\nvar OffsetSegmentString = function OffsetSegmentString () {\n  this._ptList = null;\n  this._precisionModel = null;\n  this._minimimVertexDistance = 0.0;\n  this._ptList = new ArrayList();\n};\n\nvar staticAccessors$28 = { COORDINATE_ARRAY_TYPE: { configurable: true } };\nOffsetSegmentString.prototype.getCoordinates = function getCoordinates () {\n  var coord = this._ptList.toArray(OffsetSegmentString.COORDINATE_ARRAY_TYPE);\n  return coord\n};\nOffsetSegmentString.prototype.setPrecisionModel = function setPrecisionModel (precisionModel) {\n  this._precisionModel = precisionModel;\n};\nOffsetSegmentString.prototype.addPt = function addPt (pt) {\n  var bufPt = new Coordinate(pt);\n  this._precisionModel.makePrecise(bufPt);\n  if (this.isRedundant(bufPt)) { return null }\n  this._ptList.add(bufPt);\n};\nOffsetSegmentString.prototype.revere = function revere () {};\nOffsetSegmentString.prototype.addPts = function addPts (pt, isForward) {\n    var this$1 = this;\n\n  if (isForward) {\n    for (var i = 0; i < pt.length; i++) {\n      this$1.addPt(pt[i]);\n    }\n  } else {\n    for (var i$1 = pt.length - 1; i$1 >= 0; i$1--) {\n      this$1.addPt(pt[i$1]);\n    }\n  }\n};\nOffsetSegmentString.prototype.isRedundant = function isRedundant (pt) {\n  if (this._ptList.size() < 1) { return false }\n  var lastPt = this._ptList.get(this._ptList.size() - 1);\n  var ptDist = pt.distance(lastPt);\n  if (ptDist < this._minimimVertexDistance) { return true }\n  return false\n};\nOffsetSegmentString.prototype.toString = function toString () {\n  var fact = new GeometryFactory();\n  var line = fact.createLineString(this.getCoordinates());\n  return line.toString()\n};\nOffsetSegmentString.prototype.closeRing = function closeRing () {\n  if (this._ptList.size() < 1) { return null }\n  var startPt = new Coordinate(this._ptList.get(0));\n  var lastPt = this._ptList.get(this._ptList.size() - 1);\n  // const last2Pt = null\n  // if (this._ptList.size() >= 2) last2Pt = this._ptList.get(this._ptList.size() - 2)\n  if (startPt.equals(lastPt)) { return null }\n  this._ptList.add(startPt);\n};\nOffsetSegmentString.prototype.setMinimumVertexDistance = function setMinimumVertexDistance (minimimVertexDistance) {\n  this._minimimVertexDistance = minimimVertexDistance;\n};\nOffsetSegmentString.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nOffsetSegmentString.prototype.getClass = function getClass () {\n  return OffsetSegmentString\n};\nstaticAccessors$28.COORDINATE_ARRAY_TYPE.get = function () { return new Array(0).fill(null) };\n\nObject.defineProperties( OffsetSegmentString, staticAccessors$28 );\n\nvar Angle = function Angle () {};\n\nvar staticAccessors$29 = { PI_TIMES_2: { configurable: true },PI_OVER_2: { configurable: true },PI_OVER_4: { configurable: true },COUNTERCLOCKWISE: { configurable: true },CLOCKWISE: { configurable: true },NONE: { configurable: true } };\n\nAngle.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nAngle.prototype.getClass = function getClass () {\n  return Angle\n};\nAngle.toDegrees = function toDegrees (radians) {\n  return radians * 180 / Math.PI\n};\nAngle.normalize = function normalize (angle) {\n  while (angle > Math.PI) { angle -= Angle.PI_TIMES_2; }\n  while (angle <= -Math.PI) { angle += Angle.PI_TIMES_2; }\n  return angle\n};\nAngle.angle = function angle () {\n  if (arguments.length === 1) {\n    var p = arguments[0];\n    return Math.atan2(p.y, p.x)\n  } else if (arguments.length === 2) {\n    var p0 = arguments[0];\n    var p1 = arguments[1];\n    var dx = p1.x - p0.x;\n    var dy = p1.y - p0.y;\n    return Math.atan2(dy, dx)\n  }\n};\nAngle.isAcute = function isAcute (p0, p1, p2) {\n  var dx0 = p0.x - p1.x;\n  var dy0 = p0.y - p1.y;\n  var dx1 = p2.x - p1.x;\n  var dy1 = p2.y - p1.y;\n  var dotprod = dx0 * dx1 + dy0 * dy1;\n  return dotprod > 0\n};\nAngle.isObtuse = function isObtuse (p0, p1, p2) {\n  var dx0 = p0.x - p1.x;\n  var dy0 = p0.y - p1.y;\n  var dx1 = p2.x - p1.x;\n  var dy1 = p2.y - p1.y;\n  var dotprod = dx0 * dx1 + dy0 * dy1;\n  return dotprod < 0\n};\nAngle.interiorAngle = function interiorAngle (p0, p1, p2) {\n  var anglePrev = Angle.angle(p1, p0);\n  var angleNext = Angle.angle(p1, p2);\n  return Math.abs(angleNext - anglePrev)\n};\nAngle.normalizePositive = function normalizePositive (angle) {\n  if (angle < 0.0) {\n    while (angle < 0.0) { angle += Angle.PI_TIMES_2; }\n    if (angle >= Angle.PI_TIMES_2) { angle = 0.0; }\n  } else {\n    while (angle >= Angle.PI_TIMES_2) { angle -= Angle.PI_TIMES_2; }\n    if (angle < 0.0) { angle = 0.0; }\n  }\n  return angle\n};\nAngle.angleBetween = function angleBetween (tip1, tail, tip2) {\n  var a1 = Angle.angle(tail, tip1);\n  var a2 = Angle.angle(tail, tip2);\n  return Angle.diff(a1, a2)\n};\nAngle.diff = function diff (ang1, ang2) {\n  var delAngle = null;\n  if (ang1 < ang2) {\n    delAngle = ang2 - ang1;\n  } else {\n    delAngle = ang1 - ang2;\n  }\n  if (delAngle > Math.PI) {\n    delAngle = 2 * Math.PI - delAngle;\n  }\n  return delAngle\n};\nAngle.toRadians = function toRadians (angleDegrees) {\n  return angleDegrees * Math.PI / 180.0\n};\nAngle.getTurn = function getTurn (ang1, ang2) {\n  var crossproduct = Math.sin(ang2 - ang1);\n  if (crossproduct > 0) {\n    return Angle.COUNTERCLOCKWISE\n  }\n  if (crossproduct < 0) {\n    return Angle.CLOCKWISE\n  }\n  return Angle.NONE\n};\nAngle.angleBetweenOriented = function angleBetweenOriented (tip1, tail, tip2) {\n  var a1 = Angle.angle(tail, tip1);\n  var a2 = Angle.angle(tail, tip2);\n  var angDel = a2 - a1;\n  if (angDel <= -Math.PI) { return angDel + Angle.PI_TIMES_2 }\n  if (angDel > Math.PI) { return angDel - Angle.PI_TIMES_2 }\n  return angDel\n};\nstaticAccessors$29.PI_TIMES_2.get = function () { return 2.0 * Math.PI };\nstaticAccessors$29.PI_OVER_2.get = function () { return Math.PI / 2.0 };\nstaticAccessors$29.PI_OVER_4.get = function () { return Math.PI / 4.0 };\nstaticAccessors$29.COUNTERCLOCKWISE.get = function () { return CGAlgorithms.COUNTERCLOCKWISE };\nstaticAccessors$29.CLOCKWISE.get = function () { return CGAlgorithms.CLOCKWISE };\nstaticAccessors$29.NONE.get = function () { return CGAlgorithms.COLLINEAR };\n\nObject.defineProperties( Angle, staticAccessors$29 );\n\nvar OffsetSegmentGenerator = function OffsetSegmentGenerator () {\n  this._maxCurveSegmentError = 0.0;\n  this._filletAngleQuantum = null;\n  this._closingSegLengthFactor = 1;\n  this._segList = null;\n  this._distance = 0.0;\n  this._precisionModel = null;\n  this._bufParams = null;\n  this._li = null;\n  this._s0 = null;\n  this._s1 = null;\n  this._s2 = null;\n  this._seg0 = new LineSegment();\n  this._seg1 = new LineSegment();\n  this._offset0 = new LineSegment();\n  this._offset1 = new LineSegment();\n  this._side = 0;\n  this._hasNarrowConcaveAngle = false;\n  var precisionModel = arguments[0];\n  var bufParams = arguments[1];\n  var distance = arguments[2];\n  this._precisionModel = precisionModel;\n  this._bufParams = bufParams;\n  this._li = new RobustLineIntersector();\n  this._filletAngleQuantum = Math.PI / 2.0 / bufParams.getQuadrantSegments();\n  if (bufParams.getQuadrantSegments() >= 8 && bufParams.getJoinStyle() === BufferParameters.JOIN_ROUND) { this._closingSegLengthFactor = OffsetSegmentGenerator.MAX_CLOSING_SEG_LEN_FACTOR; }\n  this.init(distance);\n};\n\nvar staticAccessors$27 = { OFFSET_SEGMENT_SEPARATION_FACTOR: { configurable: true },INSIDE_TURN_VERTEX_SNAP_DISTANCE_FACTOR: { configurable: true },CURVE_VERTEX_SNAP_DISTANCE_FACTOR: { configurable: true },MAX_CLOSING_SEG_LEN_FACTOR: { configurable: true } };\nOffsetSegmentGenerator.prototype.addNextSegment = function addNextSegment (p, addStartPoint) {\n  this._s0 = this._s1;\n  this._s1 = this._s2;\n  this._s2 = p;\n  this._seg0.setCoordinates(this._s0, this._s1);\n  this.computeOffsetSegment(this._seg0, this._side, this._distance, this._offset0);\n  this._seg1.setCoordinates(this._s1, this._s2);\n  this.computeOffsetSegment(this._seg1, this._side, this._distance, this._offset1);\n  if (this._s1.equals(this._s2)) { return null }\n  var orientation = CGAlgorithms.computeOrientation(this._s0, this._s1, this._s2);\n  var outsideTurn = (orientation === CGAlgorithms.CLOCKWISE && this._side === Position.LEFT) || (orientation === CGAlgorithms.COUNTERCLOCKWISE && this._side === Position.RIGHT);\n  if (orientation === 0) {\n    this.addCollinear(addStartPoint);\n  } else if (outsideTurn) {\n    this.addOutsideTurn(orientation, addStartPoint);\n  } else {\n    this.addInsideTurn(orientation, addStartPoint);\n  }\n};\nOffsetSegmentGenerator.prototype.addLineEndCap = function addLineEndCap (p0, p1) {\n  var seg = new LineSegment(p0, p1);\n  var offsetL = new LineSegment();\n  this.computeOffsetSegment(seg, Position.LEFT, this._distance, offsetL);\n  var offsetR = new LineSegment();\n  this.computeOffsetSegment(seg, Position.RIGHT, this._distance, offsetR);\n  var dx = p1.x - p0.x;\n  var dy = p1.y - p0.y;\n  var angle = Math.atan2(dy, dx);\n  switch (this._bufParams.getEndCapStyle()) {\n    case BufferParameters.CAP_ROUND:\n      this._segList.addPt(offsetL.p1);\n      this.addFilletArc(p1, angle + Math.PI / 2, angle - Math.PI / 2, CGAlgorithms.CLOCKWISE, this._distance);\n      this._segList.addPt(offsetR.p1);\n      break\n    case BufferParameters.CAP_FLAT:\n      this._segList.addPt(offsetL.p1);\n      this._segList.addPt(offsetR.p1);\n      break\n    case BufferParameters.CAP_SQUARE:\n      var squareCapSideOffset = new Coordinate();\n      squareCapSideOffset.x = Math.abs(this._distance) * Math.cos(angle);\n      squareCapSideOffset.y = Math.abs(this._distance) * Math.sin(angle);\n      var squareCapLOffset = new Coordinate(offsetL.p1.x + squareCapSideOffset.x, offsetL.p1.y + squareCapSideOffset.y);\n      var squareCapROffset = new Coordinate(offsetR.p1.x + squareCapSideOffset.x, offsetR.p1.y + squareCapSideOffset.y);\n      this._segList.addPt(squareCapLOffset);\n      this._segList.addPt(squareCapROffset);\n      break\n    default:\n  }\n};\nOffsetSegmentGenerator.prototype.getCoordinates = function getCoordinates () {\n  var pts = this._segList.getCoordinates();\n  return pts\n};\nOffsetSegmentGenerator.prototype.addMitreJoin = function addMitreJoin (p, offset0, offset1, distance) {\n  var isMitreWithinLimit = true;\n  var intPt = null;\n  try {\n    intPt = HCoordinate.intersection(offset0.p0, offset0.p1, offset1.p0, offset1.p1);\n    var mitreRatio = distance <= 0.0 ? 1.0 : intPt.distance(p) / Math.abs(distance);\n    if (mitreRatio > this._bufParams.getMitreLimit()) { isMitreWithinLimit = false; }\n  } catch (ex) {\n    if (ex instanceof NotRepresentableException) {\n      intPt = new Coordinate(0, 0);\n      isMitreWithinLimit = false;\n    } else { throw ex }\n  } finally {}\n  if (isMitreWithinLimit) {\n    this._segList.addPt(intPt);\n  } else {\n    this.addLimitedMitreJoin(offset0, offset1, distance, this._bufParams.getMitreLimit());\n  }\n};\nOffsetSegmentGenerator.prototype.addFilletCorner = function addFilletCorner (p, p0, p1, direction, radius) {\n  var dx0 = p0.x - p.x;\n  var dy0 = p0.y - p.y;\n  var startAngle = Math.atan2(dy0, dx0);\n  var dx1 = p1.x - p.x;\n  var dy1 = p1.y - p.y;\n  var endAngle = Math.atan2(dy1, dx1);\n  if (direction === CGAlgorithms.CLOCKWISE) {\n    if (startAngle <= endAngle) { startAngle += 2.0 * Math.PI; }\n  } else {\n    if (startAngle >= endAngle) { startAngle -= 2.0 * Math.PI; }\n  }\n  this._segList.addPt(p0);\n  this.addFilletArc(p, startAngle, endAngle, direction, radius);\n  this._segList.addPt(p1);\n};\nOffsetSegmentGenerator.prototype.addOutsideTurn = function addOutsideTurn (orientation, addStartPoint) {\n  if (this._offset0.p1.distance(this._offset1.p0) < this._distance * OffsetSegmentGenerator.OFFSET_SEGMENT_SEPARATION_FACTOR) {\n    this._segList.addPt(this._offset0.p1);\n    return null\n  }\n  if (this._bufParams.getJoinStyle() === BufferParameters.JOIN_MITRE) {\n    this.addMitreJoin(this._s1, this._offset0, this._offset1, this._distance);\n  } else if (this._bufParams.getJoinStyle() === BufferParameters.JOIN_BEVEL) {\n    this.addBevelJoin(this._offset0, this._offset1);\n  } else {\n    if (addStartPoint) { this._segList.addPt(this._offset0.p1); }\n    this.addFilletCorner(this._s1, this._offset0.p1, this._offset1.p0, orientation, this._distance);\n    this._segList.addPt(this._offset1.p0);\n  }\n};\nOffsetSegmentGenerator.prototype.createSquare = function createSquare (p) {\n  this._segList.addPt(new Coordinate(p.x + this._distance, p.y + this._distance));\n  this._segList.addPt(new Coordinate(p.x + this._distance, p.y - this._distance));\n  this._segList.addPt(new Coordinate(p.x - this._distance, p.y - this._distance));\n  this._segList.addPt(new Coordinate(p.x - this._distance, p.y + this._distance));\n  this._segList.closeRing();\n};\nOffsetSegmentGenerator.prototype.addSegments = function addSegments (pt, isForward) {\n  this._segList.addPts(pt, isForward);\n};\nOffsetSegmentGenerator.prototype.addFirstSegment = function addFirstSegment () {\n  this._segList.addPt(this._offset1.p0);\n};\nOffsetSegmentGenerator.prototype.addLastSegment = function addLastSegment () {\n  this._segList.addPt(this._offset1.p1);\n};\nOffsetSegmentGenerator.prototype.initSideSegments = function initSideSegments (s1, s2, side) {\n  this._s1 = s1;\n  this._s2 = s2;\n  this._side = side;\n  this._seg1.setCoordinates(s1, s2);\n  this.computeOffsetSegment(this._seg1, side, this._distance, this._offset1);\n};\nOffsetSegmentGenerator.prototype.addLimitedMitreJoin = function addLimitedMitreJoin (offset0, offset1, distance, mitreLimit) {\n  var basePt = this._seg0.p1;\n  var ang0 = Angle.angle(basePt, this._seg0.p0);\n  // const ang1 = Angle.angle(basePt, this._seg1.p1)\n  var angDiff = Angle.angleBetweenOriented(this._seg0.p0, basePt, this._seg1.p1);\n  var angDiffHalf = angDiff / 2;\n  var midAng = Angle.normalize(ang0 + angDiffHalf);\n  var mitreMidAng = Angle.normalize(midAng + Math.PI);\n  var mitreDist = mitreLimit * distance;\n  var bevelDelta = mitreDist * Math.abs(Math.sin(angDiffHalf));\n  var bevelHalfLen = distance - bevelDelta;\n  var bevelMidX = basePt.x + mitreDist * Math.cos(mitreMidAng);\n  var bevelMidY = basePt.y + mitreDist * Math.sin(mitreMidAng);\n  var bevelMidPt = new Coordinate(bevelMidX, bevelMidY);\n  var mitreMidLine = new LineSegment(basePt, bevelMidPt);\n  var bevelEndLeft = mitreMidLine.pointAlongOffset(1.0, bevelHalfLen);\n  var bevelEndRight = mitreMidLine.pointAlongOffset(1.0, -bevelHalfLen);\n  if (this._side === Position.LEFT) {\n    this._segList.addPt(bevelEndLeft);\n    this._segList.addPt(bevelEndRight);\n  } else {\n    this._segList.addPt(bevelEndRight);\n    this._segList.addPt(bevelEndLeft);\n  }\n};\nOffsetSegmentGenerator.prototype.computeOffsetSegment = function computeOffsetSegment (seg, side, distance, offset) {\n  var sideSign = side === Position.LEFT ? 1 : -1;\n  var dx = seg.p1.x - seg.p0.x;\n  var dy = seg.p1.y - seg.p0.y;\n  var len = Math.sqrt(dx * dx + dy * dy);\n  var ux = sideSign * distance * dx / len;\n  var uy = sideSign * distance * dy / len;\n  offset.p0.x = seg.p0.x - uy;\n  offset.p0.y = seg.p0.y + ux;\n  offset.p1.x = seg.p1.x - uy;\n  offset.p1.y = seg.p1.y + ux;\n};\nOffsetSegmentGenerator.prototype.addFilletArc = function addFilletArc (p, startAngle, endAngle, direction, radius) {\n    var this$1 = this;\n\n  var directionFactor = direction === CGAlgorithms.CLOCKWISE ? -1 : 1;\n  var totalAngle = Math.abs(startAngle - endAngle);\n  var nSegs = Math.trunc(totalAngle / this._filletAngleQuantum + 0.5);\n  if (nSegs < 1) { return null }\n  var initAngle = 0.0;\n  var currAngleInc = totalAngle / nSegs;\n  var currAngle = initAngle;\n  var pt = new Coordinate();\n  while (currAngle < totalAngle) {\n    var angle = startAngle + directionFactor * currAngle;\n    pt.x = p.x + radius * Math.cos(angle);\n    pt.y = p.y + radius * Math.sin(angle);\n    this$1._segList.addPt(pt);\n    currAngle += currAngleInc;\n  }\n};\nOffsetSegmentGenerator.prototype.addInsideTurn = function addInsideTurn (orientation, addStartPoint) {\n  this._li.computeIntersection(this._offset0.p0, this._offset0.p1, this._offset1.p0, this._offset1.p1);\n  if (this._li.hasIntersection()) {\n    this._segList.addPt(this._li.getIntersection(0));\n  } else {\n    this._hasNarrowConcaveAngle = true;\n    if (this._offset0.p1.distance(this._offset1.p0) < this._distance * OffsetSegmentGenerator.INSIDE_TURN_VERTEX_SNAP_DISTANCE_FACTOR) {\n      this._segList.addPt(this._offset0.p1);\n    } else {\n      this._segList.addPt(this._offset0.p1);\n      if (this._closingSegLengthFactor > 0) {\n        var mid0 = new Coordinate((this._closingSegLengthFactor * this._offset0.p1.x + this._s1.x) / (this._closingSegLengthFactor + 1), (this._closingSegLengthFactor * this._offset0.p1.y + this._s1.y) / (this._closingSegLengthFactor + 1));\n        this._segList.addPt(mid0);\n        var mid1 = new Coordinate((this._closingSegLengthFactor * this._offset1.p0.x + this._s1.x) / (this._closingSegLengthFactor + 1), (this._closingSegLengthFactor * this._offset1.p0.y + this._s1.y) / (this._closingSegLengthFactor + 1));\n        this._segList.addPt(mid1);\n      } else {\n        this._segList.addPt(this._s1);\n      }\n      this._segList.addPt(this._offset1.p0);\n    }\n  }\n};\nOffsetSegmentGenerator.prototype.createCircle = function createCircle (p) {\n  var pt = new Coordinate(p.x + this._distance, p.y);\n  this._segList.addPt(pt);\n  this.addFilletArc(p, 0.0, 2.0 * Math.PI, -1, this._distance);\n  this._segList.closeRing();\n};\nOffsetSegmentGenerator.prototype.addBevelJoin = function addBevelJoin (offset0, offset1) {\n  this._segList.addPt(offset0.p1);\n  this._segList.addPt(offset1.p0);\n};\nOffsetSegmentGenerator.prototype.init = function init (distance) {\n  this._distance = distance;\n  this._maxCurveSegmentError = distance * (1 - Math.cos(this._filletAngleQuantum / 2.0));\n  this._segList = new OffsetSegmentString();\n  this._segList.setPrecisionModel(this._precisionModel);\n  this._segList.setMinimumVertexDistance(distance * OffsetSegmentGenerator.CURVE_VERTEX_SNAP_DISTANCE_FACTOR);\n};\nOffsetSegmentGenerator.prototype.addCollinear = function addCollinear (addStartPoint) {\n  this._li.computeIntersection(this._s0, this._s1, this._s1, this._s2);\n  var numInt = this._li.getIntersectionNum();\n  if (numInt >= 2) {\n    if (this._bufParams.getJoinStyle() === BufferParameters.JOIN_BEVEL || this._bufParams.getJoinStyle() === BufferParameters.JOIN_MITRE) {\n      if (addStartPoint) { this._segList.addPt(this._offset0.p1); }\n      this._segList.addPt(this._offset1.p0);\n    } else {\n      this.addFilletCorner(this._s1, this._offset0.p1, this._offset1.p0, CGAlgorithms.CLOCKWISE, this._distance);\n    }\n  }\n};\nOffsetSegmentGenerator.prototype.closeRing = function closeRing () {\n  this._segList.closeRing();\n};\nOffsetSegmentGenerator.prototype.hasNarrowConcaveAngle = function hasNarrowConcaveAngle () {\n  return this._hasNarrowConcaveAngle\n};\nOffsetSegmentGenerator.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nOffsetSegmentGenerator.prototype.getClass = function getClass () {\n  return OffsetSegmentGenerator\n};\nstaticAccessors$27.OFFSET_SEGMENT_SEPARATION_FACTOR.get = function () { return 1.0E-3 };\nstaticAccessors$27.INSIDE_TURN_VERTEX_SNAP_DISTANCE_FACTOR.get = function () { return 1.0E-3 };\nstaticAccessors$27.CURVE_VERTEX_SNAP_DISTANCE_FACTOR.get = function () { return 1.0E-6 };\nstaticAccessors$27.MAX_CLOSING_SEG_LEN_FACTOR.get = function () { return 80 };\n\nObject.defineProperties( OffsetSegmentGenerator, staticAccessors$27 );\n\nvar OffsetCurveBuilder = function OffsetCurveBuilder () {\n  this._distance = 0.0;\n  this._precisionModel = null;\n  this._bufParams = null;\n  var precisionModel = arguments[0];\n  var bufParams = arguments[1];\n  this._precisionModel = precisionModel;\n  this._bufParams = bufParams;\n};\nOffsetCurveBuilder.prototype.getOffsetCurve = function getOffsetCurve (inputPts, distance) {\n  this._distance = distance;\n  if (distance === 0.0) { return null }\n  var isRightSide = distance < 0.0;\n  var posDistance = Math.abs(distance);\n  var segGen = this.getSegGen(posDistance);\n  if (inputPts.length <= 1) {\n    this.computePointCurve(inputPts[0], segGen);\n  } else {\n    this.computeOffsetCurve(inputPts, isRightSide, segGen);\n  }\n  var curvePts = segGen.getCoordinates();\n  if (isRightSide) { CoordinateArrays.reverse(curvePts); }\n  return curvePts\n};\nOffsetCurveBuilder.prototype.computeSingleSidedBufferCurve = function computeSingleSidedBufferCurve (inputPts, isRightSide, segGen) {\n  var distTol = this.simplifyTolerance(this._distance);\n  if (isRightSide) {\n    segGen.addSegments(inputPts, true);\n    var simp2 = BufferInputLineSimplifier.simplify(inputPts, -distTol);\n    var n2 = simp2.length - 1;\n    segGen.initSideSegments(simp2[n2], simp2[n2 - 1], Position.LEFT);\n    segGen.addFirstSegment();\n    for (var i = n2 - 2; i >= 0; i--) {\n      segGen.addNextSegment(simp2[i], true);\n    }\n  } else {\n    segGen.addSegments(inputPts, false);\n    var simp1 = BufferInputLineSimplifier.simplify(inputPts, distTol);\n    var n1 = simp1.length - 1;\n    segGen.initSideSegments(simp1[0], simp1[1], Position.LEFT);\n    segGen.addFirstSegment();\n    for (var i$1 = 2; i$1 <= n1; i$1++) {\n      segGen.addNextSegment(simp1[i$1], true);\n    }\n  }\n  segGen.addLastSegment();\n  segGen.closeRing();\n};\nOffsetCurveBuilder.prototype.computeRingBufferCurve = function computeRingBufferCurve (inputPts, side, segGen) {\n  var distTol = this.simplifyTolerance(this._distance);\n  if (side === Position.RIGHT) { distTol = -distTol; }\n  var simp = BufferInputLineSimplifier.simplify(inputPts, distTol);\n  var n = simp.length - 1;\n  segGen.initSideSegments(simp[n - 1], simp[0], side);\n  for (var i = 1; i <= n; i++) {\n    var addStartPoint = i !== 1;\n    segGen.addNextSegment(simp[i], addStartPoint);\n  }\n  segGen.closeRing();\n};\nOffsetCurveBuilder.prototype.computeLineBufferCurve = function computeLineBufferCurve (inputPts, segGen) {\n  var distTol = this.simplifyTolerance(this._distance);\n  var simp1 = BufferInputLineSimplifier.simplify(inputPts, distTol);\n  var n1 = simp1.length - 1;\n  segGen.initSideSegments(simp1[0], simp1[1], Position.LEFT);\n  for (var i = 2; i <= n1; i++) {\n    segGen.addNextSegment(simp1[i], true);\n  }\n  segGen.addLastSegment();\n  segGen.addLineEndCap(simp1[n1 - 1], simp1[n1]);\n  var simp2 = BufferInputLineSimplifier.simplify(inputPts, -distTol);\n  var n2 = simp2.length - 1;\n  segGen.initSideSegments(simp2[n2], simp2[n2 - 1], Position.LEFT);\n  for (var i$1 = n2 - 2; i$1 >= 0; i$1--) {\n    segGen.addNextSegment(simp2[i$1], true);\n  }\n  segGen.addLastSegment();\n  segGen.addLineEndCap(simp2[1], simp2[0]);\n  segGen.closeRing();\n};\nOffsetCurveBuilder.prototype.computePointCurve = function computePointCurve (pt, segGen) {\n  switch (this._bufParams.getEndCapStyle()) {\n    case BufferParameters.CAP_ROUND:\n      segGen.createCircle(pt);\n      break\n    case BufferParameters.CAP_SQUARE:\n      segGen.createSquare(pt);\n      break\n    default:\n  }\n};\nOffsetCurveBuilder.prototype.getLineCurve = function getLineCurve (inputPts, distance) {\n  this._distance = distance;\n  if (distance < 0.0 && !this._bufParams.isSingleSided()) { return null }\n  if (distance === 0.0) { return null }\n  var posDistance = Math.abs(distance);\n  var segGen = this.getSegGen(posDistance);\n  if (inputPts.length <= 1) {\n    this.computePointCurve(inputPts[0], segGen);\n  } else {\n    if (this._bufParams.isSingleSided()) {\n      var isRightSide = distance < 0.0;\n      this.computeSingleSidedBufferCurve(inputPts, isRightSide, segGen);\n    } else { this.computeLineBufferCurve(inputPts, segGen); }\n  }\n  var lineCoord = segGen.getCoordinates();\n  return lineCoord\n};\nOffsetCurveBuilder.prototype.getBufferParameters = function getBufferParameters () {\n  return this._bufParams\n};\nOffsetCurveBuilder.prototype.simplifyTolerance = function simplifyTolerance (bufDistance) {\n  return bufDistance * this._bufParams.getSimplifyFactor()\n};\nOffsetCurveBuilder.prototype.getRingCurve = function getRingCurve (inputPts, side, distance) {\n  this._distance = distance;\n  if (inputPts.length <= 2) { return this.getLineCurve(inputPts, distance) }\n  if (distance === 0.0) {\n    return OffsetCurveBuilder.copyCoordinates(inputPts)\n  }\n  var segGen = this.getSegGen(distance);\n  this.computeRingBufferCurve(inputPts, side, segGen);\n  return segGen.getCoordinates()\n};\nOffsetCurveBuilder.prototype.computeOffsetCurve = function computeOffsetCurve (inputPts, isRightSide, segGen) {\n  var distTol = this.simplifyTolerance(this._distance);\n  if (isRightSide) {\n    var simp2 = BufferInputLineSimplifier.simplify(inputPts, -distTol);\n    var n2 = simp2.length - 1;\n    segGen.initSideSegments(simp2[n2], simp2[n2 - 1], Position.LEFT);\n    segGen.addFirstSegment();\n    for (var i = n2 - 2; i >= 0; i--) {\n      segGen.addNextSegment(simp2[i], true);\n    }\n  } else {\n    var simp1 = BufferInputLineSimplifier.simplify(inputPts, distTol);\n    var n1 = simp1.length - 1;\n    segGen.initSideSegments(simp1[0], simp1[1], Position.LEFT);\n    segGen.addFirstSegment();\n    for (var i$1 = 2; i$1 <= n1; i$1++) {\n      segGen.addNextSegment(simp1[i$1], true);\n    }\n  }\n  segGen.addLastSegment();\n};\nOffsetCurveBuilder.prototype.getSegGen = function getSegGen (distance) {\n  return new OffsetSegmentGenerator(this._precisionModel, this._bufParams, distance)\n};\nOffsetCurveBuilder.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nOffsetCurveBuilder.prototype.getClass = function getClass () {\n  return OffsetCurveBuilder\n};\nOffsetCurveBuilder.copyCoordinates = function copyCoordinates (pts) {\n  var copy = new Array(pts.length).fill(null);\n  for (var i = 0; i < copy.length; i++) {\n    copy[i] = new Coordinate(pts[i]);\n  }\n  return copy\n};\n\nvar SubgraphDepthLocater = function SubgraphDepthLocater () {\n  this._subgraphs = null;\n  this._seg = new LineSegment();\n  this._cga = new CGAlgorithms();\n  var subgraphs = arguments[0];\n  this._subgraphs = subgraphs;\n};\n\nvar staticAccessors$30 = { DepthSegment: { configurable: true } };\nSubgraphDepthLocater.prototype.findStabbedSegments = function findStabbedSegments () {\n    var this$1 = this;\n\n  if (arguments.length === 1) {\n    var stabbingRayLeftPt = arguments[0];\n    var stabbedSegments = new ArrayList();\n    for (var i = this._subgraphs.iterator(); i.hasNext();) {\n      var bsg = i.next();\n      var env = bsg.getEnvelope();\n      if (stabbingRayLeftPt.y < env.getMinY() || stabbingRayLeftPt.y > env.getMaxY()) { continue }\n      this$1.findStabbedSegments(stabbingRayLeftPt, bsg.getDirectedEdges(), stabbedSegments);\n    }\n    return stabbedSegments\n  } else if (arguments.length === 3) {\n    if (hasInterface(arguments[2], List) && (arguments[0] instanceof Coordinate && arguments[1] instanceof DirectedEdge)) {\n      var stabbingRayLeftPt$1 = arguments[0];\n      var dirEdge = arguments[1];\n      var stabbedSegments$1 = arguments[2];\n      var pts = dirEdge.getEdge().getCoordinates();\n      for (var i$1 = 0; i$1 < pts.length - 1; i$1++) {\n        this$1._seg.p0 = pts[i$1];\n        this$1._seg.p1 = pts[i$1 + 1];\n        if (this$1._seg.p0.y > this$1._seg.p1.y) { this$1._seg.reverse(); }\n        var maxx = Math.max(this$1._seg.p0.x, this$1._seg.p1.x);\n        if (maxx < stabbingRayLeftPt$1.x) { continue }\n        if (this$1._seg.isHorizontal()) { continue }\n        if (stabbingRayLeftPt$1.y < this$1._seg.p0.y || stabbingRayLeftPt$1.y > this$1._seg.p1.y) { continue }\n        if (CGAlgorithms.computeOrientation(this$1._seg.p0, this$1._seg.p1, stabbingRayLeftPt$1) === CGAlgorithms.RIGHT) { continue }\n        var depth = dirEdge.getDepth(Position.LEFT);\n        if (!this$1._seg.p0.equals(pts[i$1])) { depth = dirEdge.getDepth(Position.RIGHT); }\n        var ds = new DepthSegment(this$1._seg, depth);\n        stabbedSegments$1.add(ds);\n      }\n    } else if (hasInterface(arguments[2], List) && (arguments[0] instanceof Coordinate && hasInterface(arguments[1], List))) {\n      var stabbingRayLeftPt$2 = arguments[0];\n      var dirEdges = arguments[1];\n      var stabbedSegments$2 = arguments[2];\n      for (var i$2 = dirEdges.iterator(); i$2.hasNext();) {\n        var de = i$2.next();\n        if (!de.isForward()) { continue }\n        this$1.findStabbedSegments(stabbingRayLeftPt$2, de, stabbedSegments$2);\n      }\n    }\n  }\n};\nSubgraphDepthLocater.prototype.getDepth = function getDepth (p) {\n  var stabbedSegments = this.findStabbedSegments(p);\n  if (stabbedSegments.size() === 0) { return 0 }\n  var ds = Collections.min(stabbedSegments);\n  return ds._leftDepth\n};\nSubgraphDepthLocater.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nSubgraphDepthLocater.prototype.getClass = function getClass () {\n  return SubgraphDepthLocater\n};\nstaticAccessors$30.DepthSegment.get = function () { return DepthSegment };\n\nObject.defineProperties( SubgraphDepthLocater, staticAccessors$30 );\n\nvar DepthSegment = function DepthSegment () {\n  this._upwardSeg = null;\n  this._leftDepth = null;\n  var seg = arguments[0];\n  var depth = arguments[1];\n  this._upwardSeg = new LineSegment(seg);\n  this._leftDepth = depth;\n};\nDepthSegment.prototype.compareTo = function compareTo (obj) {\n  var other = obj;\n  if (this._upwardSeg.minX() >= other._upwardSeg.maxX()) { return 1 }\n  if (this._upwardSeg.maxX() <= other._upwardSeg.minX()) { return -1 }\n  var orientIndex = this._upwardSeg.orientationIndex(other._upwardSeg);\n  if (orientIndex !== 0) { return orientIndex }\n  orientIndex = -1 * other._upwardSeg.orientationIndex(this._upwardSeg);\n  if (orientIndex !== 0) { return orientIndex }\n  return this._upwardSeg.compareTo(other._upwardSeg)\n};\nDepthSegment.prototype.compareX = function compareX (seg0, seg1) {\n  var compare0 = seg0.p0.compareTo(seg1.p0);\n  if (compare0 !== 0) { return compare0 }\n  return seg0.p1.compareTo(seg1.p1)\n};\nDepthSegment.prototype.toString = function toString () {\n  return this._upwardSeg.toString()\n};\nDepthSegment.prototype.interfaces_ = function interfaces_ () {\n  return [Comparable]\n};\nDepthSegment.prototype.getClass = function getClass () {\n  return DepthSegment\n};\n\nvar Triangle = function Triangle (p0, p1, p2) {\n  this.p0 = p0 || null;\n  this.p1 = p1 || null;\n  this.p2 = p2 || null;\n};\nTriangle.prototype.area = function area () {\n  return Triangle.area(this.p0, this.p1, this.p2)\n};\nTriangle.prototype.signedArea = function signedArea () {\n  return Triangle.signedArea(this.p0, this.p1, this.p2)\n};\nTriangle.prototype.interpolateZ = function interpolateZ (p) {\n  if (p === null) { throw new IllegalArgumentException('Supplied point is null.') }\n  return Triangle.interpolateZ(p, this.p0, this.p1, this.p2)\n};\nTriangle.prototype.longestSideLength = function longestSideLength () {\n  return Triangle.longestSideLength(this.p0, this.p1, this.p2)\n};\nTriangle.prototype.isAcute = function isAcute () {\n  return Triangle.isAcute(this.p0, this.p1, this.p2)\n};\nTriangle.prototype.circumcentre = function circumcentre () {\n  return Triangle.circumcentre(this.p0, this.p1, this.p2)\n};\nTriangle.prototype.area3D = function area3D () {\n  return Triangle.area3D(this.p0, this.p1, this.p2)\n};\nTriangle.prototype.centroid = function centroid () {\n  return Triangle.centroid(this.p0, this.p1, this.p2)\n};\nTriangle.prototype.inCentre = function inCentre () {\n  return Triangle.inCentre(this.p0, this.p1, this.p2)\n};\nTriangle.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nTriangle.prototype.getClass = function getClass () {\n  return Triangle\n};\nTriangle.area = function area (a, b, c) {\n  return Math.abs(((c.x - a.x) * (b.y - a.y) - (b.x - a.x) * (c.y - a.y)) / 2)\n};\nTriangle.signedArea = function signedArea (a, b, c) {\n  return ((c.x - a.x) * (b.y - a.y) - (b.x - a.x) * (c.y - a.y)) / 2\n};\nTriangle.det = function det (m00, m01, m10, m11) {\n  return m00 * m11 - m01 * m10\n};\nTriangle.interpolateZ = function interpolateZ (p, v0, v1, v2) {\n  var x0 = v0.x;\n  var y0 = v0.y;\n  var a = v1.x - x0;\n  var b = v2.x - x0;\n  var c = v1.y - y0;\n  var d = v2.y - y0;\n  var det = a * d - b * c;\n  var dx = p.x - x0;\n  var dy = p.y - y0;\n  var t = (d * dx - b * dy) / det;\n  var u = (-c * dx + a * dy) / det;\n  var z = v0.z + t * (v1.z - v0.z) + u * (v2.z - v0.z);\n  return z\n};\nTriangle.longestSideLength = function longestSideLength (a, b, c) {\n  var lenAB = a.distance(b);\n  var lenBC = b.distance(c);\n  var lenCA = c.distance(a);\n  var maxLen = lenAB;\n  if (lenBC > maxLen) { maxLen = lenBC; }\n  if (lenCA > maxLen) { maxLen = lenCA; }\n  return maxLen\n};\nTriangle.isAcute = function isAcute (a, b, c) {\n  if (!Angle.isAcute(a, b, c)) { return false }\n  if (!Angle.isAcute(b, c, a)) { return false }\n  if (!Angle.isAcute(c, a, b)) { return false }\n  return true\n};\nTriangle.circumcentre = function circumcentre (a, b, c) {\n  var cx = c.x;\n  var cy = c.y;\n  var ax = a.x - cx;\n  var ay = a.y - cy;\n  var bx = b.x - cx;\n  var by = b.y - cy;\n  var denom = 2 * Triangle.det(ax, ay, bx, by);\n  var numx = Triangle.det(ay, ax * ax + ay * ay, by, bx * bx + by * by);\n  var numy = Triangle.det(ax, ax * ax + ay * ay, bx, bx * bx + by * by);\n  var ccx = cx - numx / denom;\n  var ccy = cy + numy / denom;\n  return new Coordinate(ccx, ccy)\n};\nTriangle.perpendicularBisector = function perpendicularBisector (a, b) {\n  var dx = b.x - a.x;\n  var dy = b.y - a.y;\n  var l1 = new HCoordinate(a.x + dx / 2.0, a.y + dy / 2.0, 1.0);\n  var l2 = new HCoordinate(a.x - dy + dx / 2.0, a.y + dx + dy / 2.0, 1.0);\n  return new HCoordinate(l1, l2)\n};\nTriangle.angleBisector = function angleBisector (a, b, c) {\n  var len0 = b.distance(a);\n  var len2 = b.distance(c);\n  var frac = len0 / (len0 + len2);\n  var dx = c.x - a.x;\n  var dy = c.y - a.y;\n  var splitPt = new Coordinate(a.x + frac * dx, a.y + frac * dy);\n  return splitPt\n};\nTriangle.area3D = function area3D (a, b, c) {\n  var ux = b.x - a.x;\n  var uy = b.y - a.y;\n  var uz = b.z - a.z;\n  var vx = c.x - a.x;\n  var vy = c.y - a.y;\n  var vz = c.z - a.z;\n  var crossx = uy * vz - uz * vy;\n  var crossy = uz * vx - ux * vz;\n  var crossz = ux * vy - uy * vx;\n  var absSq = crossx * crossx + crossy * crossy + crossz * crossz;\n  var area3D = Math.sqrt(absSq) / 2;\n  return area3D\n};\nTriangle.centroid = function centroid (a, b, c) {\n  var x = (a.x + b.x + c.x) / 3;\n  var y = (a.y + b.y + c.y) / 3;\n  return new Coordinate(x, y)\n};\nTriangle.inCentre = function inCentre (a, b, c) {\n  var len0 = b.distance(c);\n  var len1 = a.distance(c);\n  var len2 = a.distance(b);\n  var circum = len0 + len1 + len2;\n  var inCentreX = (len0 * a.x + len1 * b.x + len2 * c.x) / circum;\n  var inCentreY = (len0 * a.y + len1 * b.y + len2 * c.y) / circum;\n  return new Coordinate(inCentreX, inCentreY)\n};\n\nvar OffsetCurveSetBuilder = function OffsetCurveSetBuilder () {\n  this._inputGeom = null;\n  this._distance = null;\n  this._curveBuilder = null;\n  this._curveList = new ArrayList();\n  var inputGeom = arguments[0];\n  var distance = arguments[1];\n  var curveBuilder = arguments[2];\n  this._inputGeom = inputGeom;\n  this._distance = distance;\n  this._curveBuilder = curveBuilder;\n};\nOffsetCurveSetBuilder.prototype.addPoint = function addPoint (p) {\n  if (this._distance <= 0.0) { return null }\n  var coord = p.getCoordinates();\n  var curve = this._curveBuilder.getLineCurve(coord, this._distance);\n  this.addCurve(curve, Location.EXTERIOR, Location.INTERIOR);\n};\nOffsetCurveSetBuilder.prototype.addPolygon = function addPolygon (p) {\n    var this$1 = this;\n\n  var offsetDistance = this._distance;\n  var offsetSide = Position.LEFT;\n  if (this._distance < 0.0) {\n    offsetDistance = -this._distance;\n    offsetSide = Position.RIGHT;\n  }\n  var shell = p.getExteriorRing();\n  var shellCoord = CoordinateArrays.removeRepeatedPoints(shell.getCoordinates());\n  if (this._distance < 0.0 && this.isErodedCompletely(shell, this._distance)) { return null }\n  if (this._distance <= 0.0 && shellCoord.length < 3) { return null }\n  this.addPolygonRing(shellCoord, offsetDistance, offsetSide, Location.EXTERIOR, Location.INTERIOR);\n  for (var i = 0; i < p.getNumInteriorRing(); i++) {\n    var hole = p.getInteriorRingN(i);\n    var holeCoord = CoordinateArrays.removeRepeatedPoints(hole.getCoordinates());\n    if (this$1._distance > 0.0 && this$1.isErodedCompletely(hole, -this$1._distance)) { continue }\n    this$1.addPolygonRing(holeCoord, offsetDistance, Position.opposite(offsetSide), Location.INTERIOR, Location.EXTERIOR);\n  }\n};\nOffsetCurveSetBuilder.prototype.isTriangleErodedCompletely = function isTriangleErodedCompletely (triangleCoord, bufferDistance) {\n  var tri = new Triangle(triangleCoord[0], triangleCoord[1], triangleCoord[2]);\n  var inCentre = tri.inCentre();\n  var distToCentre = CGAlgorithms.distancePointLine(inCentre, tri.p0, tri.p1);\n  return distToCentre < Math.abs(bufferDistance)\n};\nOffsetCurveSetBuilder.prototype.addLineString = function addLineString (line) {\n  if (this._distance <= 0.0 && !this._curveBuilder.getBufferParameters().isSingleSided()) { return null }\n  var coord = CoordinateArrays.removeRepeatedPoints(line.getCoordinates());\n  var curve = this._curveBuilder.getLineCurve(coord, this._distance);\n  this.addCurve(curve, Location.EXTERIOR, Location.INTERIOR);\n};\nOffsetCurveSetBuilder.prototype.addCurve = function addCurve (coord, leftLoc, rightLoc) {\n  if (coord === null || coord.length < 2) { return null }\n  var e = new NodedSegmentString(coord, new Label(0, Location.BOUNDARY, leftLoc, rightLoc));\n  this._curveList.add(e);\n};\nOffsetCurveSetBuilder.prototype.getCurves = function getCurves () {\n  this.add(this._inputGeom);\n  return this._curveList\n};\nOffsetCurveSetBuilder.prototype.addPolygonRing = function addPolygonRing (coord, offsetDistance, side, cwLeftLoc, cwRightLoc) {\n  if (offsetDistance === 0.0 && coord.length < LinearRing.MINIMUM_VALID_SIZE) { return null }\n  var leftLoc = cwLeftLoc;\n  var rightLoc = cwRightLoc;\n  if (coord.length >= LinearRing.MINIMUM_VALID_SIZE && CGAlgorithms.isCCW(coord)) {\n    leftLoc = cwRightLoc;\n    rightLoc = cwLeftLoc;\n    side = Position.opposite(side);\n  }\n  var curve = this._curveBuilder.getRingCurve(coord, side, offsetDistance);\n  this.addCurve(curve, leftLoc, rightLoc);\n};\nOffsetCurveSetBuilder.prototype.add = function add (g) {\n  if (g.isEmpty()) { return null }\n  if (g instanceof Polygon) { this.addPolygon(g); }\n  else if (g instanceof LineString) { this.addLineString(g); }\n  else if (g instanceof Point) { this.addPoint(g); }\n  else if (g instanceof MultiPoint) { this.addCollection(g); }\n  else if (g instanceof MultiLineString) { this.addCollection(g); }\n  else if (g instanceof MultiPolygon) { this.addCollection(g); }\n  else if (g instanceof GeometryCollection) { this.addCollection(g); }\n  // else throw new UnsupportedOperationException(g.getClass().getName())\n};\nOffsetCurveSetBuilder.prototype.isErodedCompletely = function isErodedCompletely (ring, bufferDistance) {\n  var ringCoord = ring.getCoordinates();\n  // const minDiam = 0.0\n  if (ringCoord.length < 4) { return bufferDistance < 0 }\n  if (ringCoord.length === 4) { return this.isTriangleErodedCompletely(ringCoord, bufferDistance) }\n  var env = ring.getEnvelopeInternal();\n  var envMinDimension = Math.min(env.getHeight(), env.getWidth());\n  if (bufferDistance < 0.0 && 2 * Math.abs(bufferDistance) > envMinDimension) { return true }\n  return false\n};\nOffsetCurveSetBuilder.prototype.addCollection = function addCollection (gc) {\n    var this$1 = this;\n\n  for (var i = 0; i < gc.getNumGeometries(); i++) {\n    var g = gc.getGeometryN(i);\n    this$1.add(g);\n  }\n};\nOffsetCurveSetBuilder.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nOffsetCurveSetBuilder.prototype.getClass = function getClass () {\n  return OffsetCurveSetBuilder\n};\n\nvar PointOnGeometryLocator = function PointOnGeometryLocator () {};\n\nPointOnGeometryLocator.prototype.locate = function locate (p) {};\nPointOnGeometryLocator.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nPointOnGeometryLocator.prototype.getClass = function getClass () {\n  return PointOnGeometryLocator\n};\n\nvar GeometryCollectionIterator = function GeometryCollectionIterator () {\n  this._parent = null;\n  this._atStart = null;\n  this._max = null;\n  this._index = null;\n  this._subcollectionIterator = null;\n  var parent = arguments[0];\n  this._parent = parent;\n  this._atStart = true;\n  this._index = 0;\n  this._max = parent.getNumGeometries();\n};\nGeometryCollectionIterator.prototype.next = function next () {\n  if (this._atStart) {\n    this._atStart = false;\n    if (GeometryCollectionIterator.isAtomic(this._parent)) { this._index++; }\n    return this._parent\n  }\n  if (this._subcollectionIterator !== null) {\n    if (this._subcollectionIterator.hasNext()) {\n      return this._subcollectionIterator.next()\n    } else {\n      this._subcollectionIterator = null;\n    }\n  }\n  if (this._index >= this._max) {\n    throw new NoSuchElementException()\n  }\n  var obj = this._parent.getGeometryN(this._index++);\n  if (obj instanceof GeometryCollection) {\n    this._subcollectionIterator = new GeometryCollectionIterator(obj);\n    return this._subcollectionIterator.next()\n  }\n  return obj\n};\nGeometryCollectionIterator.prototype.remove = function remove () {\n  throw new Error(this.getClass().getName())\n};\nGeometryCollectionIterator.prototype.hasNext = function hasNext () {\n  if (this._atStart) {\n    return true\n  }\n  if (this._subcollectionIterator !== null) {\n    if (this._subcollectionIterator.hasNext()) {\n      return true\n    }\n    this._subcollectionIterator = null;\n  }\n  if (this._index >= this._max) {\n    return false\n  }\n  return true\n};\nGeometryCollectionIterator.prototype.interfaces_ = function interfaces_ () {\n  return [Iterator]\n};\nGeometryCollectionIterator.prototype.getClass = function getClass () {\n  return GeometryCollectionIterator\n};\nGeometryCollectionIterator.isAtomic = function isAtomic (geom) {\n  return !(geom instanceof GeometryCollection)\n};\n\nvar SimplePointInAreaLocator = function SimplePointInAreaLocator () {\n  this._geom = null;\n  var geom = arguments[0];\n  this._geom = geom;\n};\nSimplePointInAreaLocator.prototype.locate = function locate (p) {\n  return SimplePointInAreaLocator.locate(p, this._geom)\n};\nSimplePointInAreaLocator.prototype.interfaces_ = function interfaces_ () {\n  return [PointOnGeometryLocator]\n};\nSimplePointInAreaLocator.prototype.getClass = function getClass () {\n  return SimplePointInAreaLocator\n};\nSimplePointInAreaLocator.isPointInRing = function isPointInRing (p, ring) {\n  if (!ring.getEnvelopeInternal().intersects(p)) { return false }\n  return CGAlgorithms.isPointInRing(p, ring.getCoordinates())\n};\nSimplePointInAreaLocator.containsPointInPolygon = function containsPointInPolygon (p, poly) {\n  if (poly.isEmpty()) { return false }\n  var shell = poly.getExteriorRing();\n  if (!SimplePointInAreaLocator.isPointInRing(p, shell)) { return false }\n  for (var i = 0; i < poly.getNumInteriorRing(); i++) {\n    var hole = poly.getInteriorRingN(i);\n    if (SimplePointInAreaLocator.isPointInRing(p, hole)) { return false }\n  }\n  return true\n};\nSimplePointInAreaLocator.containsPoint = function containsPoint (p, geom) {\n  if (geom instanceof Polygon) {\n    return SimplePointInAreaLocator.containsPointInPolygon(p, geom)\n  } else if (geom instanceof GeometryCollection) {\n    var geomi = new GeometryCollectionIterator(geom);\n    while (geomi.hasNext()) {\n      var g2 = geomi.next();\n      if (g2 !== geom) { if (SimplePointInAreaLocator.containsPoint(p, g2)) { return true } }\n    }\n  }\n  return false\n};\nSimplePointInAreaLocator.locate = function locate (p, geom) {\n  if (geom.isEmpty()) { return Location.EXTERIOR }\n  if (SimplePointInAreaLocator.containsPoint(p, geom)) { return Location.INTERIOR }\n  return Location.EXTERIOR\n};\n\nvar EdgeEndStar = function EdgeEndStar () {\n  this._edgeMap = new TreeMap();\n  this._edgeList = null;\n  this._ptInAreaLocation = [Location.NONE, Location.NONE];\n};\nEdgeEndStar.prototype.getNextCW = function getNextCW (ee) {\n  this.getEdges();\n  var i = this._edgeList.indexOf(ee);\n  var iNextCW = i - 1;\n  if (i === 0) { iNextCW = this._edgeList.size() - 1; }\n  return this._edgeList.get(iNextCW)\n};\nEdgeEndStar.prototype.propagateSideLabels = function propagateSideLabels (geomIndex) {\n  var startLoc = Location.NONE;\n  for (var it = this.iterator(); it.hasNext();) {\n    var e = it.next();\n    var label = e.getLabel();\n    if (label.isArea(geomIndex) && label.getLocation(geomIndex, Position.LEFT) !== Location.NONE) { startLoc = label.getLocation(geomIndex, Position.LEFT); }\n  }\n  if (startLoc === Location.NONE) { return null }\n  var currLoc = startLoc;\n  for (var it$1 = this.iterator(); it$1.hasNext();) {\n    var e$1 = it$1.next();\n    var label$1 = e$1.getLabel();\n    if (label$1.getLocation(geomIndex, Position.ON) === Location.NONE) { label$1.setLocation(geomIndex, Position.ON, currLoc); }\n    if (label$1.isArea(geomIndex)) {\n      var leftLoc = label$1.getLocation(geomIndex, Position.LEFT);\n      var rightLoc = label$1.getLocation(geomIndex, Position.RIGHT);\n      if (rightLoc !== Location.NONE) {\n        if (rightLoc !== currLoc) { throw new TopologyException('side location conflict', e$1.getCoordinate()) }\n        if (leftLoc === Location.NONE) {\n          Assert.shouldNeverReachHere('found single null side (at ' + e$1.getCoordinate() + ')');\n        }\n        currLoc = leftLoc;\n      } else {\n        Assert.isTrue(label$1.getLocation(geomIndex, Position.LEFT) === Location.NONE, 'found single null side');\n        label$1.setLocation(geomIndex, Position.RIGHT, currLoc);\n        label$1.setLocation(geomIndex, Position.LEFT, currLoc);\n      }\n    }\n  }\n};\nEdgeEndStar.prototype.getCoordinate = function getCoordinate () {\n  var it = this.iterator();\n  if (!it.hasNext()) { return null }\n  var e = it.next();\n  return e.getCoordinate()\n};\nEdgeEndStar.prototype.print = function print (out) {\n  System.out.println('EdgeEndStar:   ' + this.getCoordinate());\n  for (var it = this.iterator(); it.hasNext();) {\n    var e = it.next();\n    e.print(out);\n  }\n};\nEdgeEndStar.prototype.isAreaLabelsConsistent = function isAreaLabelsConsistent (geomGraph) {\n  this.computeEdgeEndLabels(geomGraph.getBoundaryNodeRule());\n  return this.checkAreaLabelsConsistent(0)\n};\nEdgeEndStar.prototype.checkAreaLabelsConsistent = function checkAreaLabelsConsistent (geomIndex) {\n  var edges = this.getEdges();\n  if (edges.size() <= 0) { return true }\n  var lastEdgeIndex = edges.size() - 1;\n  var startLabel = edges.get(lastEdgeIndex).getLabel();\n  var startLoc = startLabel.getLocation(geomIndex, Position.LEFT);\n  Assert.isTrue(startLoc !== Location.NONE, 'Found unlabelled area edge');\n  var currLoc = startLoc;\n  for (var it = this.iterator(); it.hasNext();) {\n    var e = it.next();\n    var label = e.getLabel();\n    Assert.isTrue(label.isArea(geomIndex), 'Found non-area edge');\n    var leftLoc = label.getLocation(geomIndex, Position.LEFT);\n    var rightLoc = label.getLocation(geomIndex, Position.RIGHT);\n    if (leftLoc === rightLoc) {\n      return false\n    }\n    if (rightLoc !== currLoc) {\n      return false\n    }\n    currLoc = leftLoc;\n  }\n  return true\n};\nEdgeEndStar.prototype.findIndex = function findIndex (eSearch) {\n    var this$1 = this;\n\n  this.iterator();\n  for (var i = 0; i < this._edgeList.size(); i++) {\n    var e = this$1._edgeList.get(i);\n    if (e === eSearch) { return i }\n  }\n  return -1\n};\nEdgeEndStar.prototype.iterator = function iterator () {\n  return this.getEdges().iterator()\n};\nEdgeEndStar.prototype.getEdges = function getEdges () {\n  if (this._edgeList === null) {\n    this._edgeList = new ArrayList(this._edgeMap.values());\n  }\n  return this._edgeList\n};\nEdgeEndStar.prototype.getLocation = function getLocation (geomIndex, p, geom) {\n  if (this._ptInAreaLocation[geomIndex] === Location.NONE) {\n    this._ptInAreaLocation[geomIndex] = SimplePointInAreaLocator.locate(p, geom[geomIndex].getGeometry());\n  }\n  return this._ptInAreaLocation[geomIndex]\n};\nEdgeEndStar.prototype.toString = function toString () {\n  var buf = new StringBuffer();\n  buf.append('EdgeEndStar:   ' + this.getCoordinate());\n  buf.append('\\n');\n  for (var it = this.iterator(); it.hasNext();) {\n    var e = it.next();\n    buf.append(e);\n    buf.append('\\n');\n  }\n  return buf.toString()\n};\nEdgeEndStar.prototype.computeEdgeEndLabels = function computeEdgeEndLabels (boundaryNodeRule) {\n  for (var it = this.iterator(); it.hasNext();) {\n    var ee = it.next();\n    ee.computeLabel(boundaryNodeRule);\n  }\n};\nEdgeEndStar.prototype.computeLabelling = function computeLabelling (geomGraph) {\n    var this$1 = this;\n\n  this.computeEdgeEndLabels(geomGraph[0].getBoundaryNodeRule());\n  this.propagateSideLabels(0);\n  this.propagateSideLabels(1);\n  var hasDimensionalCollapseEdge = [false, false];\n  for (var it = this.iterator(); it.hasNext();) {\n    var e = it.next();\n    var label = e.getLabel();\n    for (var geomi = 0; geomi < 2; geomi++) {\n      if (label.isLine(geomi) && label.getLocation(geomi) === Location.BOUNDARY) { hasDimensionalCollapseEdge[geomi] = true; }\n    }\n  }\n  for (var it$1 = this.iterator(); it$1.hasNext();) {\n    var e$1 = it$1.next();\n    var label$1 = e$1.getLabel();\n    for (var geomi$1 = 0; geomi$1 < 2; geomi$1++) {\n      if (label$1.isAnyNull(geomi$1)) {\n        var loc = Location.NONE;\n        if (hasDimensionalCollapseEdge[geomi$1]) {\n          loc = Location.EXTERIOR;\n        } else {\n          var p = e$1.getCoordinate();\n          loc = this$1.getLocation(geomi$1, p, geomGraph);\n        }\n        label$1.setAllLocationsIfNull(geomi$1, loc);\n      }\n    }\n  }\n};\nEdgeEndStar.prototype.getDegree = function getDegree () {\n  return this._edgeMap.size()\n};\nEdgeEndStar.prototype.insertEdgeEnd = function insertEdgeEnd (e, obj) {\n  this._edgeMap.put(e, obj);\n  this._edgeList = null;\n};\nEdgeEndStar.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nEdgeEndStar.prototype.getClass = function getClass () {\n  return EdgeEndStar\n};\n\nvar DirectedEdgeStar = (function (EdgeEndStar$$1) {\n  function DirectedEdgeStar () {\n    EdgeEndStar$$1.call(this);\n    this._resultAreaEdgeList = null;\n    this._label = null;\n    this._SCANNING_FOR_INCOMING = 1;\n    this._LINKING_TO_OUTGOING = 2;\n  }\n\n  if ( EdgeEndStar$$1 ) DirectedEdgeStar.__proto__ = EdgeEndStar$$1;\n  DirectedEdgeStar.prototype = Object.create( EdgeEndStar$$1 && EdgeEndStar$$1.prototype );\n  DirectedEdgeStar.prototype.constructor = DirectedEdgeStar;\n  DirectedEdgeStar.prototype.linkResultDirectedEdges = function linkResultDirectedEdges () {\n    var this$1 = this;\n\n    this.getResultAreaEdges();\n    var firstOut = null;\n    var incoming = null;\n    var state = this._SCANNING_FOR_INCOMING;\n    for (var i = 0; i < this._resultAreaEdgeList.size(); i++) {\n      var nextOut = this$1._resultAreaEdgeList.get(i);\n      var nextIn = nextOut.getSym();\n      if (!nextOut.getLabel().isArea()) { continue }\n      if (firstOut === null && nextOut.isInResult()) { firstOut = nextOut; }\n      switch (state) {\n        case this$1._SCANNING_FOR_INCOMING:\n          if (!nextIn.isInResult()) { continue }\n          incoming = nextIn;\n          state = this$1._LINKING_TO_OUTGOING;\n          break\n        case this$1._LINKING_TO_OUTGOING:\n          if (!nextOut.isInResult()) { continue }\n          incoming.setNext(nextOut);\n          state = this$1._SCANNING_FOR_INCOMING;\n          break\n        default:\n      }\n    }\n    if (state === this._LINKING_TO_OUTGOING) {\n      if (firstOut === null) { throw new TopologyException('no outgoing dirEdge found', this.getCoordinate()) }\n      Assert.isTrue(firstOut.isInResult(), 'unable to link last incoming dirEdge');\n      incoming.setNext(firstOut);\n    }\n  };\n  DirectedEdgeStar.prototype.insert = function insert (ee) {\n    var de = ee;\n    this.insertEdgeEnd(de, de);\n  };\n  DirectedEdgeStar.prototype.getRightmostEdge = function getRightmostEdge () {\n    var edges = this.getEdges();\n    var size = edges.size();\n    if (size < 1) { return null }\n    var de0 = edges.get(0);\n    if (size === 1) { return de0 }\n    var deLast = edges.get(size - 1);\n    var quad0 = de0.getQuadrant();\n    var quad1 = deLast.getQuadrant();\n    if (Quadrant.isNorthern(quad0) && Quadrant.isNorthern(quad1)) { return de0; } else if (!Quadrant.isNorthern(quad0) && !Quadrant.isNorthern(quad1)) { return deLast; } else {\n      // const nonHorizontalEdge = null\n      if (de0.getDy() !== 0) { return de0; } else if (deLast.getDy() !== 0) { return deLast }\n    }\n    Assert.shouldNeverReachHere('found two horizontal edges incident on node');\n    return null\n  };\n  DirectedEdgeStar.prototype.print = function print (out) {\n    System.out.println('DirectedEdgeStar: ' + this.getCoordinate());\n    for (var it = this.iterator(); it.hasNext();) {\n      var de = it.next();\n      out.print('out ');\n      de.print(out);\n      out.println();\n      out.print('in ');\n      de.getSym().print(out);\n      out.println();\n    }\n  };\n  DirectedEdgeStar.prototype.getResultAreaEdges = function getResultAreaEdges () {\n    var this$1 = this;\n\n    if (this._resultAreaEdgeList !== null) { return this._resultAreaEdgeList }\n    this._resultAreaEdgeList = new ArrayList();\n    for (var it = this.iterator(); it.hasNext();) {\n      var de = it.next();\n      if (de.isInResult() || de.getSym().isInResult()) { this$1._resultAreaEdgeList.add(de); }\n    }\n    return this._resultAreaEdgeList\n  };\n  DirectedEdgeStar.prototype.updateLabelling = function updateLabelling (nodeLabel) {\n    for (var it = this.iterator(); it.hasNext();) {\n      var de = it.next();\n      var label = de.getLabel();\n      label.setAllLocationsIfNull(0, nodeLabel.getLocation(0));\n      label.setAllLocationsIfNull(1, nodeLabel.getLocation(1));\n    }\n  };\n  DirectedEdgeStar.prototype.linkAllDirectedEdges = function linkAllDirectedEdges () {\n    var this$1 = this;\n\n    this.getEdges();\n    var prevOut = null;\n    var firstIn = null;\n    for (var i = this._edgeList.size() - 1; i >= 0; i--) {\n      var nextOut = this$1._edgeList.get(i);\n      var nextIn = nextOut.getSym();\n      if (firstIn === null) { firstIn = nextIn; }\n      if (prevOut !== null) { nextIn.setNext(prevOut); }\n      prevOut = nextOut;\n    }\n    firstIn.setNext(prevOut);\n  };\n  DirectedEdgeStar.prototype.computeDepths = function computeDepths () {\n    var this$1 = this;\n\n    if (arguments.length === 1) {\n      var de = arguments[0];\n      var edgeIndex = this.findIndex(de);\n      // const label = de.getLabel()\n      var startDepth = de.getDepth(Position.LEFT);\n      var targetLastDepth = de.getDepth(Position.RIGHT);\n      var nextDepth = this.computeDepths(edgeIndex + 1, this._edgeList.size(), startDepth);\n      var lastDepth = this.computeDepths(0, edgeIndex, nextDepth);\n      if (lastDepth !== targetLastDepth) { throw new TopologyException('depth mismatch at ' + de.getCoordinate()) }\n    } else if (arguments.length === 3) {\n      var startIndex = arguments[0];\n      var endIndex = arguments[1];\n      var startDepth$1 = arguments[2];\n      var currDepth = startDepth$1;\n      for (var i = startIndex; i < endIndex; i++) {\n        var nextDe = this$1._edgeList.get(i);\n        // const label = nextDe.getLabel()\n        nextDe.setEdgeDepths(Position.RIGHT, currDepth);\n        currDepth = nextDe.getDepth(Position.LEFT);\n      }\n      return currDepth\n    }\n  };\n  DirectedEdgeStar.prototype.mergeSymLabels = function mergeSymLabels () {\n    for (var it = this.iterator(); it.hasNext();) {\n      var de = it.next();\n      var label = de.getLabel();\n      label.merge(de.getSym().getLabel());\n    }\n  };\n  DirectedEdgeStar.prototype.linkMinimalDirectedEdges = function linkMinimalDirectedEdges (er) {\n    var this$1 = this;\n\n    var firstOut = null;\n    var incoming = null;\n    var state = this._SCANNING_FOR_INCOMING;\n    for (var i = this._resultAreaEdgeList.size() - 1; i >= 0; i--) {\n      var nextOut = this$1._resultAreaEdgeList.get(i);\n      var nextIn = nextOut.getSym();\n      if (firstOut === null && nextOut.getEdgeRing() === er) { firstOut = nextOut; }\n      switch (state) {\n        case this$1._SCANNING_FOR_INCOMING:\n          if (nextIn.getEdgeRing() !== er) { continue }\n          incoming = nextIn;\n          state = this$1._LINKING_TO_OUTGOING;\n          break\n        case this$1._LINKING_TO_OUTGOING:\n          if (nextOut.getEdgeRing() !== er) { continue }\n          incoming.setNextMin(nextOut);\n          state = this$1._SCANNING_FOR_INCOMING;\n          break\n        default:\n      }\n    }\n    if (state === this._LINKING_TO_OUTGOING) {\n      Assert.isTrue(firstOut !== null, 'found null for first outgoing dirEdge');\n      Assert.isTrue(firstOut.getEdgeRing() === er, 'unable to link last incoming dirEdge');\n      incoming.setNextMin(firstOut);\n    }\n  };\n  DirectedEdgeStar.prototype.getOutgoingDegree = function getOutgoingDegree () {\n    if (arguments.length === 0) {\n      var degree = 0;\n      for (var it = this.iterator(); it.hasNext();) {\n        var de = it.next();\n        if (de.isInResult()) { degree++; }\n      }\n      return degree\n    } else if (arguments.length === 1) {\n      var er = arguments[0];\n      var degree$1 = 0;\n      for (var it$1 = this.iterator(); it$1.hasNext();) {\n        var de$1 = it$1.next();\n        if (de$1.getEdgeRing() === er) { degree$1++; }\n      }\n      return degree$1\n    }\n  };\n  DirectedEdgeStar.prototype.getLabel = function getLabel () {\n    return this._label\n  };\n  DirectedEdgeStar.prototype.findCoveredLineEdges = function findCoveredLineEdges () {\n    var startLoc = Location.NONE;\n    for (var it = this.iterator(); it.hasNext();) {\n      var nextOut = it.next();\n      var nextIn = nextOut.getSym();\n      if (!nextOut.isLineEdge()) {\n        if (nextOut.isInResult()) {\n          startLoc = Location.INTERIOR;\n          break\n        }\n        if (nextIn.isInResult()) {\n          startLoc = Location.EXTERIOR;\n          break\n        }\n      }\n    }\n    if (startLoc === Location.NONE) { return null }\n    var currLoc = startLoc;\n    for (var it$1 = this.iterator(); it$1.hasNext();) {\n      var nextOut$1 = it$1.next();\n      var nextIn$1 = nextOut$1.getSym();\n      if (nextOut$1.isLineEdge()) {\n        nextOut$1.getEdge().setCovered(currLoc === Location.INTERIOR);\n      } else {\n        if (nextOut$1.isInResult()) { currLoc = Location.EXTERIOR; }\n        if (nextIn$1.isInResult()) { currLoc = Location.INTERIOR; }\n      }\n    }\n  };\n  DirectedEdgeStar.prototype.computeLabelling = function computeLabelling (geom) {\n    var this$1 = this;\n\n    EdgeEndStar$$1.prototype.computeLabelling.call(this, geom);\n    this._label = new Label(Location.NONE);\n    for (var it = this.iterator(); it.hasNext();) {\n      var ee = it.next();\n      var e = ee.getEdge();\n      var eLabel = e.getLabel();\n      for (var i = 0; i < 2; i++) {\n        var eLoc = eLabel.getLocation(i);\n        if (eLoc === Location.INTERIOR || eLoc === Location.BOUNDARY) { this$1._label.setLocation(i, Location.INTERIOR); }\n      }\n    }\n  };\n  DirectedEdgeStar.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  DirectedEdgeStar.prototype.getClass = function getClass () {\n    return DirectedEdgeStar\n  };\n\n  return DirectedEdgeStar;\n}(EdgeEndStar));\n\nvar OverlayNodeFactory = (function (NodeFactory$$1) {\n  function OverlayNodeFactory () {\n    NodeFactory$$1.apply(this, arguments);\n  }\n\n  if ( NodeFactory$$1 ) OverlayNodeFactory.__proto__ = NodeFactory$$1;\n  OverlayNodeFactory.prototype = Object.create( NodeFactory$$1 && NodeFactory$$1.prototype );\n  OverlayNodeFactory.prototype.constructor = OverlayNodeFactory;\n\n  OverlayNodeFactory.prototype.createNode = function createNode (coord) {\n    return new Node(coord, new DirectedEdgeStar())\n  };\n  OverlayNodeFactory.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  OverlayNodeFactory.prototype.getClass = function getClass () {\n    return OverlayNodeFactory\n  };\n\n  return OverlayNodeFactory;\n}(NodeFactory));\n\nvar OrientedCoordinateArray = function OrientedCoordinateArray () {\n  this._pts = null;\n  this._orientation = null;\n  var pts = arguments[0];\n  this._pts = pts;\n  this._orientation = OrientedCoordinateArray.orientation(pts);\n};\nOrientedCoordinateArray.prototype.compareTo = function compareTo (o1) {\n  var oca = o1;\n  var comp = OrientedCoordinateArray.compareOriented(this._pts, this._orientation, oca._pts, oca._orientation);\n  return comp\n};\nOrientedCoordinateArray.prototype.interfaces_ = function interfaces_ () {\n  return [Comparable]\n};\nOrientedCoordinateArray.prototype.getClass = function getClass () {\n  return OrientedCoordinateArray\n};\nOrientedCoordinateArray.orientation = function orientation (pts) {\n  return CoordinateArrays.increasingDirection(pts) === 1\n};\nOrientedCoordinateArray.compareOriented = function compareOriented (pts1, orientation1, pts2, orientation2) {\n  var dir1 = orientation1 ? 1 : -1;\n  var dir2 = orientation2 ? 1 : -1;\n  var limit1 = orientation1 ? pts1.length : -1;\n  var limit2 = orientation2 ? pts2.length : -1;\n  var i1 = orientation1 ? 0 : pts1.length - 1;\n  var i2 = orientation2 ? 0 : pts2.length - 1;\n  // const comp = 0\n  while (true) {\n    var compPt = pts1[i1].compareTo(pts2[i2]);\n    if (compPt !== 0) { return compPt }\n    i1 += dir1;\n    i2 += dir2;\n    var done1 = i1 === limit1;\n    var done2 = i2 === limit2;\n    if (done1 && !done2) { return -1 }\n    if (!done1 && done2) { return 1 }\n    if (done1 && done2) { return 0 }\n  }\n};\n\nvar EdgeList = function EdgeList () {\n  this._edges = new ArrayList();\n  this._ocaMap = new TreeMap();\n};\nEdgeList.prototype.print = function print (out) {\n    var this$1 = this;\n\n  out.print('MULTILINESTRING ( ');\n  for (var j = 0; j < this._edges.size(); j++) {\n    var e = this$1._edges.get(j);\n    if (j > 0) { out.print(','); }\n    out.print('(');\n    var pts = e.getCoordinates();\n    for (var i = 0; i < pts.length; i++) {\n      if (i > 0) { out.print(','); }\n      out.print(pts[i].x + ' ' + pts[i].y);\n    }\n    out.println(')');\n  }\n  out.print(')  ');\n};\nEdgeList.prototype.addAll = function addAll (edgeColl) {\n    var this$1 = this;\n\n  for (var i = edgeColl.iterator(); i.hasNext();) {\n    this$1.add(i.next());\n  }\n};\nEdgeList.prototype.findEdgeIndex = function findEdgeIndex (e) {\n    var this$1 = this;\n\n  for (var i = 0; i < this._edges.size(); i++) {\n    if (this$1._edges.get(i).equals(e)) { return i }\n  }\n  return -1\n};\nEdgeList.prototype.iterator = function iterator () {\n  return this._edges.iterator()\n};\nEdgeList.prototype.getEdges = function getEdges () {\n  return this._edges\n};\nEdgeList.prototype.get = function get (i) {\n  return this._edges.get(i)\n};\nEdgeList.prototype.findEqualEdge = function findEqualEdge (e) {\n  var oca = new OrientedCoordinateArray(e.getCoordinates());\n  var matchEdge = this._ocaMap.get(oca);\n  return matchEdge\n};\nEdgeList.prototype.add = function add (e) {\n  this._edges.add(e);\n  var oca = new OrientedCoordinateArray(e.getCoordinates());\n  this._ocaMap.put(oca, e);\n};\nEdgeList.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nEdgeList.prototype.getClass = function getClass () {\n  return EdgeList\n};\n\nvar SegmentIntersector = function SegmentIntersector () {};\n\nSegmentIntersector.prototype.processIntersections = function processIntersections (e0, segIndex0, e1, segIndex1) {};\nSegmentIntersector.prototype.isDone = function isDone () {};\nSegmentIntersector.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nSegmentIntersector.prototype.getClass = function getClass () {\n  return SegmentIntersector\n};\n\nvar IntersectionAdder = function IntersectionAdder () {\n  this._hasIntersection = false;\n  this._hasProper = false;\n  this._hasProperInterior = false;\n  this._hasInterior = false;\n  this._properIntersectionPoint = null;\n  this._li = null;\n  this._isSelfIntersection = null;\n  this.numIntersections = 0;\n  this.numInteriorIntersections = 0;\n  this.numProperIntersections = 0;\n  this.numTests = 0;\n  var li = arguments[0];\n  this._li = li;\n};\nIntersectionAdder.prototype.isTrivialIntersection = function isTrivialIntersection (e0, segIndex0, e1, segIndex1) {\n  if (e0 === e1) {\n    if (this._li.getIntersectionNum() === 1) {\n      if (IntersectionAdder.isAdjacentSegments(segIndex0, segIndex1)) { return true }\n      if (e0.isClosed()) {\n        var maxSegIndex = e0.size() - 1;\n        if ((segIndex0 === 0 && segIndex1 === maxSegIndex) ||\n            (segIndex1 === 0 && segIndex0 === maxSegIndex)) {\n          return true\n        }\n      }\n    }\n  }\n  return false\n};\nIntersectionAdder.prototype.getProperIntersectionPoint = function getProperIntersectionPoint () {\n  return this._properIntersectionPoint\n};\nIntersectionAdder.prototype.hasProperInteriorIntersection = function hasProperInteriorIntersection () {\n  return this._hasProperInterior\n};\nIntersectionAdder.prototype.getLineIntersector = function getLineIntersector () {\n  return this._li\n};\nIntersectionAdder.prototype.hasProperIntersection = function hasProperIntersection () {\n  return this._hasProper\n};\nIntersectionAdder.prototype.processIntersections = function processIntersections (e0, segIndex0, e1, segIndex1) {\n  if (e0 === e1 && segIndex0 === segIndex1) { return null }\n  this.numTests++;\n  var p00 = e0.getCoordinates()[segIndex0];\n  var p01 = e0.getCoordinates()[segIndex0 + 1];\n  var p10 = e1.getCoordinates()[segIndex1];\n  var p11 = e1.getCoordinates()[segIndex1 + 1];\n  this._li.computeIntersection(p00, p01, p10, p11);\n  if (this._li.hasIntersection()) {\n    this.numIntersections++;\n    if (this._li.isInteriorIntersection()) {\n      this.numInteriorIntersections++;\n      this._hasInterior = true;\n    }\n    if (!this.isTrivialIntersection(e0, segIndex0, e1, segIndex1)) {\n      this._hasIntersection = true;\n      e0.addIntersections(this._li, segIndex0, 0);\n      e1.addIntersections(this._li, segIndex1, 1);\n      if (this._li.isProper()) {\n        this.numProperIntersections++;\n        this._hasProper = true;\n        this._hasProperInterior = true;\n      }\n    }\n  }\n};\nIntersectionAdder.prototype.hasIntersection = function hasIntersection () {\n  return this._hasIntersection\n};\nIntersectionAdder.prototype.isDone = function isDone () {\n  return false\n};\nIntersectionAdder.prototype.hasInteriorIntersection = function hasInteriorIntersection () {\n  return this._hasInterior\n};\nIntersectionAdder.prototype.interfaces_ = function interfaces_ () {\n  return [SegmentIntersector]\n};\nIntersectionAdder.prototype.getClass = function getClass () {\n  return IntersectionAdder\n};\nIntersectionAdder.isAdjacentSegments = function isAdjacentSegments (i1, i2) {\n  return Math.abs(i1 - i2) === 1\n};\n\nvar EdgeIntersection = function EdgeIntersection () {\n  this.coord = null;\n  this.segmentIndex = null;\n  this.dist = null;\n  var coord = arguments[0];\n  var segmentIndex = arguments[1];\n  var dist = arguments[2];\n  this.coord = new Coordinate(coord);\n  this.segmentIndex = segmentIndex;\n  this.dist = dist;\n};\nEdgeIntersection.prototype.getSegmentIndex = function getSegmentIndex () {\n  return this.segmentIndex\n};\nEdgeIntersection.prototype.getCoordinate = function getCoordinate () {\n  return this.coord\n};\nEdgeIntersection.prototype.print = function print (out) {\n  out.print(this.coord);\n  out.print(' seg # = ' + this.segmentIndex);\n  out.println(' dist = ' + this.dist);\n};\nEdgeIntersection.prototype.compareTo = function compareTo (obj) {\n  var other = obj;\n  return this.compare(other.segmentIndex, other.dist)\n};\nEdgeIntersection.prototype.isEndPoint = function isEndPoint (maxSegmentIndex) {\n  if (this.segmentIndex === 0 && this.dist === 0.0) { return true }\n  if (this.segmentIndex === maxSegmentIndex) { return true }\n  return false\n};\nEdgeIntersection.prototype.toString = function toString () {\n  return this.coord + ' seg # = ' + this.segmentIndex + ' dist = ' + this.dist\n};\nEdgeIntersection.prototype.getDistance = function getDistance () {\n  return this.dist\n};\nEdgeIntersection.prototype.compare = function compare (segmentIndex, dist) {\n  if (this.segmentIndex < segmentIndex) { return -1 }\n  if (this.segmentIndex > segmentIndex) { return 1 }\n  if (this.dist < dist) { return -1 }\n  if (this.dist > dist) { return 1 }\n  return 0\n};\nEdgeIntersection.prototype.interfaces_ = function interfaces_ () {\n  return [Comparable]\n};\nEdgeIntersection.prototype.getClass = function getClass () {\n  return EdgeIntersection\n};\n\nvar EdgeIntersectionList = function EdgeIntersectionList () {\n  this._nodeMap = new TreeMap();\n  this.edge = null;\n  var edge = arguments[0];\n  this.edge = edge;\n};\nEdgeIntersectionList.prototype.print = function print (out) {\n  out.println('Intersections:');\n  for (var it = this.iterator(); it.hasNext();) {\n    var ei = it.next();\n    ei.print(out);\n  }\n};\nEdgeIntersectionList.prototype.iterator = function iterator () {\n  return this._nodeMap.values().iterator()\n};\nEdgeIntersectionList.prototype.addSplitEdges = function addSplitEdges (edgeList) {\n    var this$1 = this;\n\n  this.addEndpoints();\n  var it = this.iterator();\n  var eiPrev = it.next();\n  while (it.hasNext()) {\n    var ei = it.next();\n    var newEdge = this$1.createSplitEdge(eiPrev, ei);\n    edgeList.add(newEdge);\n    eiPrev = ei;\n  }\n};\nEdgeIntersectionList.prototype.addEndpoints = function addEndpoints () {\n  var maxSegIndex = this.edge.pts.length - 1;\n  this.add(this.edge.pts[0], 0, 0.0);\n  this.add(this.edge.pts[maxSegIndex], maxSegIndex, 0.0);\n};\nEdgeIntersectionList.prototype.createSplitEdge = function createSplitEdge (ei0, ei1) {\n    var this$1 = this;\n\n  var npts = ei1.segmentIndex - ei0.segmentIndex + 2;\n  var lastSegStartPt = this.edge.pts[ei1.segmentIndex];\n  var useIntPt1 = ei1.dist > 0.0 || !ei1.coord.equals2D(lastSegStartPt);\n  if (!useIntPt1) {\n    npts--;\n  }\n  var pts = new Array(npts).fill(null);\n  var ipt = 0;\n  pts[ipt++] = new Coordinate(ei0.coord);\n  for (var i = ei0.segmentIndex + 1; i <= ei1.segmentIndex; i++) {\n    pts[ipt++] = this$1.edge.pts[i];\n  }\n  if (useIntPt1) { pts[ipt] = ei1.coord; }\n  return new Edge(pts, new Label(this.edge._label))\n};\nEdgeIntersectionList.prototype.add = function add (intPt, segmentIndex, dist) {\n  var eiNew = new EdgeIntersection(intPt, segmentIndex, dist);\n  var ei = this._nodeMap.get(eiNew);\n  if (ei !== null) {\n    return ei\n  }\n  this._nodeMap.put(eiNew, eiNew);\n  return eiNew\n};\nEdgeIntersectionList.prototype.isIntersection = function isIntersection (pt) {\n  for (var it = this.iterator(); it.hasNext();) {\n    var ei = it.next();\n    if (ei.coord.equals(pt)) { return true }\n  }\n  return false\n};\nEdgeIntersectionList.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nEdgeIntersectionList.prototype.getClass = function getClass () {\n  return EdgeIntersectionList\n};\n\nvar MonotoneChainIndexer = function MonotoneChainIndexer () {};\n\nMonotoneChainIndexer.prototype.getChainStartIndices = function getChainStartIndices (pts) {\n    var this$1 = this;\n\n  var start = 0;\n  var startIndexList = new ArrayList();\n  startIndexList.add(new Integer(start));\n  do {\n    var last = this$1.findChainEnd(pts, start);\n    startIndexList.add(new Integer(last));\n    start = last;\n  } while (start < pts.length - 1)\n  var startIndex = MonotoneChainIndexer.toIntArray(startIndexList);\n  return startIndex\n};\nMonotoneChainIndexer.prototype.findChainEnd = function findChainEnd (pts, start) {\n  var chainQuad = Quadrant.quadrant(pts[start], pts[start + 1]);\n  var last = start + 1;\n  while (last < pts.length) {\n    var quad = Quadrant.quadrant(pts[last - 1], pts[last]);\n    if (quad !== chainQuad) { break }\n    last++;\n  }\n  return last - 1\n};\nMonotoneChainIndexer.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nMonotoneChainIndexer.prototype.getClass = function getClass () {\n  return MonotoneChainIndexer\n};\nMonotoneChainIndexer.toIntArray = function toIntArray (list) {\n  var array = new Array(list.size()).fill(null);\n  for (var i = 0; i < array.length; i++) {\n    array[i] = list.get(i).intValue();\n  }\n  return array\n};\n\nvar MonotoneChainEdge = function MonotoneChainEdge () {\n  this.e = null;\n  this.pts = null;\n  this.startIndex = null;\n  this.env1 = new Envelope();\n  this.env2 = new Envelope();\n  var e = arguments[0];\n  this.e = e;\n  this.pts = e.getCoordinates();\n  var mcb = new MonotoneChainIndexer();\n  this.startIndex = mcb.getChainStartIndices(this.pts);\n};\nMonotoneChainEdge.prototype.getCoordinates = function getCoordinates () {\n  return this.pts\n};\nMonotoneChainEdge.prototype.getMaxX = function getMaxX (chainIndex) {\n  var x1 = this.pts[this.startIndex[chainIndex]].x;\n  var x2 = this.pts[this.startIndex[chainIndex + 1]].x;\n  return x1 > x2 ? x1 : x2\n};\nMonotoneChainEdge.prototype.getMinX = function getMinX (chainIndex) {\n  var x1 = this.pts[this.startIndex[chainIndex]].x;\n  var x2 = this.pts[this.startIndex[chainIndex + 1]].x;\n  return x1 < x2 ? x1 : x2\n};\nMonotoneChainEdge.prototype.computeIntersectsForChain = function computeIntersectsForChain () {\n  if (arguments.length === 4) {\n    var chainIndex0 = arguments[0];\n    var mce = arguments[1];\n    var chainIndex1 = arguments[2];\n    var si = arguments[3];\n    this.computeIntersectsForChain(this.startIndex[chainIndex0], this.startIndex[chainIndex0 + 1], mce, mce.startIndex[chainIndex1], mce.startIndex[chainIndex1 + 1], si);\n  } else if (arguments.length === 6) {\n    var start0 = arguments[0];\n    var end0 = arguments[1];\n    var mce$1 = arguments[2];\n    var start1 = arguments[3];\n    var end1 = arguments[4];\n    var ei = arguments[5];\n    var p00 = this.pts[start0];\n    var p01 = this.pts[end0];\n    var p10 = mce$1.pts[start1];\n    var p11 = mce$1.pts[end1];\n    if (end0 - start0 === 1 && end1 - start1 === 1) {\n      ei.addIntersections(this.e, start0, mce$1.e, start1);\n      return null\n    }\n    this.env1.init(p00, p01);\n    this.env2.init(p10, p11);\n    if (!this.env1.intersects(this.env2)) { return null }\n    var mid0 = Math.trunc((start0 + end0) / 2);\n    var mid1 = Math.trunc((start1 + end1) / 2);\n    if (start0 < mid0) {\n      if (start1 < mid1) { this.computeIntersectsForChain(start0, mid0, mce$1, start1, mid1, ei); }\n      if (mid1 < end1) { this.computeIntersectsForChain(start0, mid0, mce$1, mid1, end1, ei); }\n    }\n    if (mid0 < end0) {\n      if (start1 < mid1) { this.computeIntersectsForChain(mid0, end0, mce$1, start1, mid1, ei); }\n      if (mid1 < end1) { this.computeIntersectsForChain(mid0, end0, mce$1, mid1, end1, ei); }\n    }\n  }\n};\nMonotoneChainEdge.prototype.getStartIndexes = function getStartIndexes () {\n  return this.startIndex\n};\nMonotoneChainEdge.prototype.computeIntersects = function computeIntersects (mce, si) {\n    var this$1 = this;\n\n  for (var i = 0; i < this.startIndex.length - 1; i++) {\n    for (var j = 0; j < mce.startIndex.length - 1; j++) {\n      this$1.computeIntersectsForChain(i, mce, j, si);\n    }\n  }\n};\nMonotoneChainEdge.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nMonotoneChainEdge.prototype.getClass = function getClass () {\n  return MonotoneChainEdge\n};\n\nvar Depth = function Depth () {\n  var this$1 = this;\n\n  this._depth = Array(2).fill().map(function () { return Array(3); });\n  for (var i = 0; i < 2; i++) {\n    for (var j = 0; j < 3; j++) {\n      this$1._depth[i][j] = Depth.NULL_VALUE;\n    }\n  }\n};\n\nvar staticAccessors$31 = { NULL_VALUE: { configurable: true } };\nDepth.prototype.getDepth = function getDepth (geomIndex, posIndex) {\n  return this._depth[geomIndex][posIndex]\n};\nDepth.prototype.setDepth = function setDepth (geomIndex, posIndex, depthValue) {\n  this._depth[geomIndex][posIndex] = depthValue;\n};\nDepth.prototype.isNull = function isNull () {\n    var this$1 = this;\n\n  if (arguments.length === 0) {\n    for (var i = 0; i < 2; i++) {\n      for (var j = 0; j < 3; j++) {\n        if (this$1._depth[i][j] !== Depth.NULL_VALUE) { return false }\n      }\n    }\n    return true\n  } else if (arguments.length === 1) {\n    var geomIndex = arguments[0];\n    return this._depth[geomIndex][1] === Depth.NULL_VALUE\n  } else if (arguments.length === 2) {\n    var geomIndex$1 = arguments[0];\n    var posIndex = arguments[1];\n    return this._depth[geomIndex$1][posIndex] === Depth.NULL_VALUE\n  }\n};\nDepth.prototype.normalize = function normalize () {\n    var this$1 = this;\n\n  for (var i = 0; i < 2; i++) {\n    if (!this$1.isNull(i)) {\n      var minDepth = this$1._depth[i][1];\n      if (this$1._depth[i][2] < minDepth) { minDepth = this$1._depth[i][2]; }\n      if (minDepth < 0) { minDepth = 0; }\n      for (var j = 1; j < 3; j++) {\n        var newValue = 0;\n        if (this$1._depth[i][j] > minDepth) { newValue = 1; }\n        this$1._depth[i][j] = newValue;\n      }\n    }\n  }\n};\nDepth.prototype.getDelta = function getDelta (geomIndex) {\n  return this._depth[geomIndex][Position.RIGHT] - this._depth[geomIndex][Position.LEFT]\n};\nDepth.prototype.getLocation = function getLocation (geomIndex, posIndex) {\n  if (this._depth[geomIndex][posIndex] <= 0) { return Location.EXTERIOR }\n  return Location.INTERIOR\n};\nDepth.prototype.toString = function toString () {\n  return 'A: ' + this._depth[0][1] + ',' + this._depth[0][2] + ' B: ' + this._depth[1][1] + ',' + this._depth[1][2]\n};\nDepth.prototype.add = function add () {\n    var this$1 = this;\n\n  if (arguments.length === 1) {\n    var lbl = arguments[0];\n    for (var i = 0; i < 2; i++) {\n      for (var j = 1; j < 3; j++) {\n        var loc = lbl.getLocation(i, j);\n        if (loc === Location.EXTERIOR || loc === Location.INTERIOR) {\n          if (this$1.isNull(i, j)) {\n            this$1._depth[i][j] = Depth.depthAtLocation(loc);\n          } else { this$1._depth[i][j] += Depth.depthAtLocation(loc); }\n        }\n      }\n    }\n  } else if (arguments.length === 3) {\n    var geomIndex = arguments[0];\n    var posIndex = arguments[1];\n    var location = arguments[2];\n    if (location === Location.INTERIOR) { this._depth[geomIndex][posIndex]++; }\n  }\n};\nDepth.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nDepth.prototype.getClass = function getClass () {\n  return Depth\n};\nDepth.depthAtLocation = function depthAtLocation (location) {\n  if (location === Location.EXTERIOR) { return 0 }\n  if (location === Location.INTERIOR) { return 1 }\n  return Depth.NULL_VALUE\n};\nstaticAccessors$31.NULL_VALUE.get = function () { return -1 };\n\nObject.defineProperties( Depth, staticAccessors$31 );\n\nvar Edge = (function (GraphComponent$$1) {\n  function Edge () {\n    GraphComponent$$1.call(this);\n    this.pts = null;\n    this._env = null;\n    this.eiList = new EdgeIntersectionList(this);\n    this._name = null;\n    this._mce = null;\n    this._isIsolated = true;\n    this._depth = new Depth();\n    this._depthDelta = 0;\n    if (arguments.length === 1) {\n      var pts = arguments[0];\n      Edge.call(this, pts, null);\n    } else if (arguments.length === 2) {\n      var pts$1 = arguments[0];\n      var label = arguments[1];\n      this.pts = pts$1;\n      this._label = label;\n    }\n  }\n\n  if ( GraphComponent$$1 ) Edge.__proto__ = GraphComponent$$1;\n  Edge.prototype = Object.create( GraphComponent$$1 && GraphComponent$$1.prototype );\n  Edge.prototype.constructor = Edge;\n  Edge.prototype.getDepth = function getDepth () {\n    return this._depth\n  };\n  Edge.prototype.getCollapsedEdge = function getCollapsedEdge () {\n    var newPts = new Array(2).fill(null);\n    newPts[0] = this.pts[0];\n    newPts[1] = this.pts[1];\n    var newe = new Edge(newPts, Label.toLineLabel(this._label));\n    return newe\n  };\n  Edge.prototype.isIsolated = function isIsolated () {\n    return this._isIsolated\n  };\n  Edge.prototype.getCoordinates = function getCoordinates () {\n    return this.pts\n  };\n  Edge.prototype.setIsolated = function setIsolated (isIsolated) {\n    this._isIsolated = isIsolated;\n  };\n  Edge.prototype.setName = function setName (name) {\n    this._name = name;\n  };\n  Edge.prototype.equals = function equals (o) {\n    var this$1 = this;\n\n    if (!(o instanceof Edge)) { return false }\n    var e = o;\n    if (this.pts.length !== e.pts.length) { return false }\n    var isEqualForward = true;\n    var isEqualReverse = true;\n    var iRev = this.pts.length;\n    for (var i = 0; i < this.pts.length; i++) {\n      if (!this$1.pts[i].equals2D(e.pts[i])) {\n        isEqualForward = false;\n      }\n      if (!this$1.pts[i].equals2D(e.pts[--iRev])) {\n        isEqualReverse = false;\n      }\n      if (!isEqualForward && !isEqualReverse) { return false }\n    }\n    return true\n  };\n  Edge.prototype.getCoordinate = function getCoordinate () {\n    if (arguments.length === 0) {\n      if (this.pts.length > 0) { return this.pts[0] }\n      return null\n    } else if (arguments.length === 1) {\n      var i = arguments[0];\n      return this.pts[i]\n    }\n  };\n  Edge.prototype.print = function print (out) {\n    var this$1 = this;\n\n    out.print('edge ' + this._name + ': ');\n    out.print('LINESTRING (');\n    for (var i = 0; i < this.pts.length; i++) {\n      if (i > 0) { out.print(','); }\n      out.print(this$1.pts[i].x + ' ' + this$1.pts[i].y);\n    }\n    out.print(')  ' + this._label + ' ' + this._depthDelta);\n  };\n  Edge.prototype.computeIM = function computeIM (im) {\n    Edge.updateIM(this._label, im);\n  };\n  Edge.prototype.isCollapsed = function isCollapsed () {\n    if (!this._label.isArea()) { return false }\n    if (this.pts.length !== 3) { return false }\n    if (this.pts[0].equals(this.pts[2])) { return true }\n    return false\n  };\n  Edge.prototype.isClosed = function isClosed () {\n    return this.pts[0].equals(this.pts[this.pts.length - 1])\n  };\n  Edge.prototype.getMaximumSegmentIndex = function getMaximumSegmentIndex () {\n    return this.pts.length - 1\n  };\n  Edge.prototype.getDepthDelta = function getDepthDelta () {\n    return this._depthDelta\n  };\n  Edge.prototype.getNumPoints = function getNumPoints () {\n    return this.pts.length\n  };\n  Edge.prototype.printReverse = function printReverse (out) {\n    var this$1 = this;\n\n    out.print('edge ' + this._name + ': ');\n    for (var i = this.pts.length - 1; i >= 0; i--) {\n      out.print(this$1.pts[i] + ' ');\n    }\n    out.println('');\n  };\n  Edge.prototype.getMonotoneChainEdge = function getMonotoneChainEdge () {\n    if (this._mce === null) { this._mce = new MonotoneChainEdge(this); }\n    return this._mce\n  };\n  Edge.prototype.getEnvelope = function getEnvelope () {\n    var this$1 = this;\n\n    if (this._env === null) {\n      this._env = new Envelope();\n      for (var i = 0; i < this.pts.length; i++) {\n        this$1._env.expandToInclude(this$1.pts[i]);\n      }\n    }\n    return this._env\n  };\n  Edge.prototype.addIntersection = function addIntersection (li, segmentIndex, geomIndex, intIndex) {\n    var intPt = new Coordinate(li.getIntersection(intIndex));\n    var normalizedSegmentIndex = segmentIndex;\n    var dist = li.getEdgeDistance(geomIndex, intIndex);\n    var nextSegIndex = normalizedSegmentIndex + 1;\n    if (nextSegIndex < this.pts.length) {\n      var nextPt = this.pts[nextSegIndex];\n      if (intPt.equals2D(nextPt)) {\n        normalizedSegmentIndex = nextSegIndex;\n        dist = 0.0;\n      }\n    }\n    this.eiList.add(intPt, normalizedSegmentIndex, dist);\n  };\n  Edge.prototype.toString = function toString () {\n    var this$1 = this;\n\n    var buf = new StringBuffer();\n    buf.append('edge ' + this._name + ': ');\n    buf.append('LINESTRING (');\n    for (var i = 0; i < this.pts.length; i++) {\n      if (i > 0) { buf.append(','); }\n      buf.append(this$1.pts[i].x + ' ' + this$1.pts[i].y);\n    }\n    buf.append(')  ' + this._label + ' ' + this._depthDelta);\n    return buf.toString()\n  };\n  Edge.prototype.isPointwiseEqual = function isPointwiseEqual (e) {\n    var this$1 = this;\n\n    if (this.pts.length !== e.pts.length) { return false }\n    for (var i = 0; i < this.pts.length; i++) {\n      if (!this$1.pts[i].equals2D(e.pts[i])) {\n        return false\n      }\n    }\n    return true\n  };\n  Edge.prototype.setDepthDelta = function setDepthDelta (depthDelta) {\n    this._depthDelta = depthDelta;\n  };\n  Edge.prototype.getEdgeIntersectionList = function getEdgeIntersectionList () {\n    return this.eiList\n  };\n  Edge.prototype.addIntersections = function addIntersections (li, segmentIndex, geomIndex) {\n    var this$1 = this;\n\n    for (var i = 0; i < li.getIntersectionNum(); i++) {\n      this$1.addIntersection(li, segmentIndex, geomIndex, i);\n    }\n  };\n  Edge.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  Edge.prototype.getClass = function getClass () {\n    return Edge\n  };\n  Edge.updateIM = function updateIM () {\n    if (arguments.length === 2) {\n      var label = arguments[0];\n      var im = arguments[1];\n      im.setAtLeastIfValid(label.getLocation(0, Position.ON), label.getLocation(1, Position.ON), 1);\n      if (label.isArea()) {\n        im.setAtLeastIfValid(label.getLocation(0, Position.LEFT), label.getLocation(1, Position.LEFT), 2);\n        im.setAtLeastIfValid(label.getLocation(0, Position.RIGHT), label.getLocation(1, Position.RIGHT), 2);\n      }\n    } else { return GraphComponent$$1.prototype.updateIM.apply(this, arguments) }\n  };\n\n  return Edge;\n}(GraphComponent));\n\nvar BufferBuilder = function BufferBuilder (bufParams) {\n  this._workingPrecisionModel = null;\n  this._workingNoder = null;\n  this._geomFact = null;\n  this._graph = null;\n  this._edgeList = new EdgeList();\n  this._bufParams = bufParams || null;\n};\nBufferBuilder.prototype.setWorkingPrecisionModel = function setWorkingPrecisionModel (pm) {\n  this._workingPrecisionModel = pm;\n};\nBufferBuilder.prototype.insertUniqueEdge = function insertUniqueEdge (e) {\n  var existingEdge = this._edgeList.findEqualEdge(e);\n  if (existingEdge !== null) {\n    var existingLabel = existingEdge.getLabel();\n    var labelToMerge = e.getLabel();\n    if (!existingEdge.isPointwiseEqual(e)) {\n      labelToMerge = new Label(e.getLabel());\n      labelToMerge.flip();\n    }\n    existingLabel.merge(labelToMerge);\n    var mergeDelta = BufferBuilder.depthDelta(labelToMerge);\n    var existingDelta = existingEdge.getDepthDelta();\n    var newDelta = existingDelta + mergeDelta;\n    existingEdge.setDepthDelta(newDelta);\n  } else {\n    this._edgeList.add(e);\n    e.setDepthDelta(BufferBuilder.depthDelta(e.getLabel()));\n  }\n};\nBufferBuilder.prototype.buildSubgraphs = function buildSubgraphs (subgraphList, polyBuilder) {\n  var processedGraphs = new ArrayList();\n  for (var i = subgraphList.iterator(); i.hasNext();) {\n    var subgraph = i.next();\n    var p = subgraph.getRightmostCoordinate();\n    var locater = new SubgraphDepthLocater(processedGraphs);\n    var outsideDepth = locater.getDepth(p);\n    subgraph.computeDepth(outsideDepth);\n    subgraph.findResultEdges();\n    processedGraphs.add(subgraph);\n    polyBuilder.add(subgraph.getDirectedEdges(), subgraph.getNodes());\n  }\n};\nBufferBuilder.prototype.createSubgraphs = function createSubgraphs (graph) {\n  var subgraphList = new ArrayList();\n  for (var i = graph.getNodes().iterator(); i.hasNext();) {\n    var node = i.next();\n    if (!node.isVisited()) {\n      var subgraph = new BufferSubgraph();\n      subgraph.create(node);\n      subgraphList.add(subgraph);\n    }\n  }\n  Collections.sort(subgraphList, Collections.reverseOrder());\n  return subgraphList\n};\nBufferBuilder.prototype.createEmptyResultGeometry = function createEmptyResultGeometry () {\n  var emptyGeom = this._geomFact.createPolygon();\n  return emptyGeom\n};\nBufferBuilder.prototype.getNoder = function getNoder (precisionModel) {\n  if (this._workingNoder !== null) { return this._workingNoder }\n  var noder = new MCIndexNoder();\n  var li = new RobustLineIntersector();\n  li.setPrecisionModel(precisionModel);\n  noder.setSegmentIntersector(new IntersectionAdder(li));\n  return noder\n};\nBufferBuilder.prototype.buffer = function buffer (g, distance) {\n  var precisionModel = this._workingPrecisionModel;\n  if (precisionModel === null) { precisionModel = g.getPrecisionModel(); }\n  this._geomFact = g.getFactory();\n  var curveBuilder = new OffsetCurveBuilder(precisionModel, this._bufParams);\n  var curveSetBuilder = new OffsetCurveSetBuilder(g, distance, curveBuilder);\n  var bufferSegStrList = curveSetBuilder.getCurves();\n  if (bufferSegStrList.size() <= 0) {\n    return this.createEmptyResultGeometry()\n  }\n  this.computeNodedEdges(bufferSegStrList, precisionModel);\n  this._graph = new PlanarGraph(new OverlayNodeFactory());\n  this._graph.addEdges(this._edgeList.getEdges());\n  var subgraphList = this.createSubgraphs(this._graph);\n  var polyBuilder = new PolygonBuilder(this._geomFact);\n  this.buildSubgraphs(subgraphList, polyBuilder);\n  var resultPolyList = polyBuilder.getPolygons();\n  if (resultPolyList.size() <= 0) {\n    return this.createEmptyResultGeometry()\n  }\n  var resultGeom = this._geomFact.buildGeometry(resultPolyList);\n  return resultGeom\n};\nBufferBuilder.prototype.computeNodedEdges = function computeNodedEdges (bufferSegStrList, precisionModel) {\n    var this$1 = this;\n\n  var noder = this.getNoder(precisionModel);\n  noder.computeNodes(bufferSegStrList);\n  var nodedSegStrings = noder.getNodedSubstrings();\n  for (var i = nodedSegStrings.iterator(); i.hasNext();) {\n    var segStr = i.next();\n    var pts = segStr.getCoordinates();\n    if (pts.length === 2 && pts[0].equals2D(pts[1])) { continue }\n    var oldLabel = segStr.getData();\n    var edge = new Edge(segStr.getCoordinates(), new Label(oldLabel));\n    this$1.insertUniqueEdge(edge);\n  }\n};\nBufferBuilder.prototype.setNoder = function setNoder (noder) {\n  this._workingNoder = noder;\n};\nBufferBuilder.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nBufferBuilder.prototype.getClass = function getClass () {\n  return BufferBuilder\n};\nBufferBuilder.depthDelta = function depthDelta (label) {\n  var lLoc = label.getLocation(0, Position.LEFT);\n  var rLoc = label.getLocation(0, Position.RIGHT);\n  if (lLoc === Location.INTERIOR && rLoc === Location.EXTERIOR) { return 1; } else if (lLoc === Location.EXTERIOR && rLoc === Location.INTERIOR) { return -1 }\n  return 0\n};\nBufferBuilder.convertSegStrings = function convertSegStrings (it) {\n  var fact = new GeometryFactory();\n  var lines = new ArrayList();\n  while (it.hasNext()) {\n    var ss = it.next();\n    var line = fact.createLineString(ss.getCoordinates());\n    lines.add(line);\n  }\n  return fact.buildGeometry(lines)\n};\n\nvar ScaledNoder = function ScaledNoder () {\n  this._noder = null;\n  this._scaleFactor = null;\n  this._offsetX = null;\n  this._offsetY = null;\n  this._isScaled = false;\n  if (arguments.length === 2) {\n    var noder = arguments[0];\n    var scaleFactor = arguments[1];\n    this._noder = noder;\n    this._scaleFactor = scaleFactor;\n    this._offsetX = 0.0;\n    this._offsetY = 0.0;\n    this._isScaled = !this.isIntegerPrecision();\n  } else if (arguments.length === 4) {\n    var noder$1 = arguments[0];\n    var scaleFactor$1 = arguments[1];\n    var offsetX = arguments[2];\n    var offsetY = arguments[3];\n    this._noder = noder$1;\n    this._scaleFactor = scaleFactor$1;\n    this._offsetX = offsetX;\n    this._offsetY = offsetY;\n    this._isScaled = !this.isIntegerPrecision();\n  }\n};\nScaledNoder.prototype.rescale = function rescale () {\n    var this$1 = this;\n\n  if (hasInterface(arguments[0], Collection)) {\n    var segStrings = arguments[0];\n    for (var i = segStrings.iterator(); i.hasNext();) {\n      var ss = i.next();\n      this$1.rescale(ss.getCoordinates());\n    }\n  } else if (arguments[0] instanceof Array) {\n    var pts = arguments[0];\n    // let p0 = null\n    // let p1 = null\n    // if (pts.length === 2) {\n    // p0 = new Coordinate(pts[0])\n    // p1 = new Coordinate(pts[1])\n    // }\n    for (var i$1 = 0; i$1 < pts.length; i$1++) {\n      pts[i$1].x = pts[i$1].x / this$1._scaleFactor + this$1._offsetX;\n      pts[i$1].y = pts[i$1].y / this$1._scaleFactor + this$1._offsetY;\n    }\n    if (pts.length === 2 && pts[0].equals2D(pts[1])) {\n      System.out.println(pts);\n    }\n  }\n};\nScaledNoder.prototype.scale = function scale () {\n    var this$1 = this;\n\n  if (hasInterface(arguments[0], Collection)) {\n    var segStrings = arguments[0];\n    var nodedSegmentStrings = new ArrayList();\n    for (var i = segStrings.iterator(); i.hasNext();) {\n      var ss = i.next();\n      nodedSegmentStrings.add(new NodedSegmentString(this$1.scale(ss.getCoordinates()), ss.getData()));\n    }\n    return nodedSegmentStrings\n  } else if (arguments[0] instanceof Array) {\n    var pts = arguments[0];\n    var roundPts = new Array(pts.length).fill(null);\n    for (var i$1 = 0; i$1 < pts.length; i$1++) {\n      roundPts[i$1] = new Coordinate(Math.round((pts[i$1].x - this$1._offsetX) * this$1._scaleFactor), Math.round((pts[i$1].y - this$1._offsetY) * this$1._scaleFactor), pts[i$1].z);\n    }\n    var roundPtsNoDup = CoordinateArrays.removeRepeatedPoints(roundPts);\n    return roundPtsNoDup\n  }\n};\nScaledNoder.prototype.isIntegerPrecision = function isIntegerPrecision () {\n  return this._scaleFactor === 1.0\n};\nScaledNoder.prototype.getNodedSubstrings = function getNodedSubstrings () {\n  var splitSS = this._noder.getNodedSubstrings();\n  if (this._isScaled) { this.rescale(splitSS); }\n  return splitSS\n};\nScaledNoder.prototype.computeNodes = function computeNodes (inputSegStrings) {\n  var intSegStrings = inputSegStrings;\n  if (this._isScaled) { intSegStrings = this.scale(inputSegStrings); }\n  this._noder.computeNodes(intSegStrings);\n};\nScaledNoder.prototype.interfaces_ = function interfaces_ () {\n  return [Noder]\n};\nScaledNoder.prototype.getClass = function getClass () {\n  return ScaledNoder\n};\n\nvar NodingValidator = function NodingValidator () {\n  this._li = new RobustLineIntersector();\n  this._segStrings = null;\n  var segStrings = arguments[0];\n  this._segStrings = segStrings;\n};\n\nvar staticAccessors$33 = { fact: { configurable: true } };\nNodingValidator.prototype.checkEndPtVertexIntersections = function checkEndPtVertexIntersections () {\n    var this$1 = this;\n\n  if (arguments.length === 0) {\n    for (var i = this._segStrings.iterator(); i.hasNext();) {\n      var ss = i.next();\n      var pts = ss.getCoordinates();\n      this$1.checkEndPtVertexIntersections(pts[0], this$1._segStrings);\n      this$1.checkEndPtVertexIntersections(pts[pts.length - 1], this$1._segStrings);\n    }\n  } else if (arguments.length === 2) {\n    var testPt = arguments[0];\n    var segStrings = arguments[1];\n    for (var i$1 = segStrings.iterator(); i$1.hasNext();) {\n      var ss$1 = i$1.next();\n      var pts$1 = ss$1.getCoordinates();\n      for (var j = 1; j < pts$1.length - 1; j++) {\n        if (pts$1[j].equals(testPt)) { throw new RuntimeException('found endpt/interior pt intersection at index ' + j + ' :pt ' + testPt) }\n      }\n    }\n  }\n};\nNodingValidator.prototype.checkInteriorIntersections = function checkInteriorIntersections () {\n    var this$1 = this;\n\n  if (arguments.length === 0) {\n    for (var i = this._segStrings.iterator(); i.hasNext();) {\n      var ss0 = i.next();\n      for (var j = this._segStrings.iterator(); j.hasNext();) {\n        var ss1 = j.next();\n        this$1.checkInteriorIntersections(ss0, ss1);\n      }\n    }\n  } else if (arguments.length === 2) {\n    var ss0$1 = arguments[0];\n    var ss1$1 = arguments[1];\n    var pts0 = ss0$1.getCoordinates();\n    var pts1 = ss1$1.getCoordinates();\n    for (var i0 = 0; i0 < pts0.length - 1; i0++) {\n      for (var i1 = 0; i1 < pts1.length - 1; i1++) {\n        this$1.checkInteriorIntersections(ss0$1, i0, ss1$1, i1);\n      }\n    }\n  } else if (arguments.length === 4) {\n    var e0 = arguments[0];\n    var segIndex0 = arguments[1];\n    var e1 = arguments[2];\n    var segIndex1 = arguments[3];\n    if (e0 === e1 && segIndex0 === segIndex1) { return null }\n    var p00 = e0.getCoordinates()[segIndex0];\n    var p01 = e0.getCoordinates()[segIndex0 + 1];\n    var p10 = e1.getCoordinates()[segIndex1];\n    var p11 = e1.getCoordinates()[segIndex1 + 1];\n    this._li.computeIntersection(p00, p01, p10, p11);\n    if (this._li.hasIntersection()) {\n      if (this._li.isProper() || this.hasInteriorIntersection(this._li, p00, p01) || this.hasInteriorIntersection(this._li, p10, p11)) {\n        throw new RuntimeException('found non-noded intersection at ' + p00 + '-' + p01 + ' and ' + p10 + '-' + p11)\n      }\n    }\n  }\n};\nNodingValidator.prototype.checkValid = function checkValid () {\n  this.checkEndPtVertexIntersections();\n  this.checkInteriorIntersections();\n  this.checkCollapses();\n};\nNodingValidator.prototype.checkCollapses = function checkCollapses () {\n    var this$1 = this;\n\n  if (arguments.length === 0) {\n    for (var i = this._segStrings.iterator(); i.hasNext();) {\n      var ss = i.next();\n      this$1.checkCollapses(ss);\n    }\n  } else if (arguments.length === 1) {\n    var ss$1 = arguments[0];\n    var pts = ss$1.getCoordinates();\n    for (var i$1 = 0; i$1 < pts.length - 2; i$1++) {\n      this$1.checkCollapse(pts[i$1], pts[i$1 + 1], pts[i$1 + 2]);\n    }\n  }\n};\nNodingValidator.prototype.hasInteriorIntersection = function hasInteriorIntersection (li, p0, p1) {\n  for (var i = 0; i < li.getIntersectionNum(); i++) {\n    var intPt = li.getIntersection(i);\n    if (!(intPt.equals(p0) || intPt.equals(p1))) { return true }\n  }\n  return false\n};\nNodingValidator.prototype.checkCollapse = function checkCollapse (p0, p1, p2) {\n  if (p0.equals(p2)) { throw new RuntimeException('found non-noded collapse at ' + NodingValidator.fact.createLineString([p0, p1, p2])) }\n};\nNodingValidator.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nNodingValidator.prototype.getClass = function getClass () {\n  return NodingValidator\n};\nstaticAccessors$33.fact.get = function () { return new GeometryFactory() };\n\nObject.defineProperties( NodingValidator, staticAccessors$33 );\n\nvar HotPixel = function HotPixel () {\n  this._li = null;\n  this._pt = null;\n  this._originalPt = null;\n  this._ptScaled = null;\n  this._p0Scaled = null;\n  this._p1Scaled = null;\n  this._scaleFactor = null;\n  this._minx = null;\n  this._maxx = null;\n  this._miny = null;\n  this._maxy = null;\n  this._corner = new Array(4).fill(null);\n  this._safeEnv = null;\n  var pt = arguments[0];\n  var scaleFactor = arguments[1];\n  var li = arguments[2];\n  this._originalPt = pt;\n  this._pt = pt;\n  this._scaleFactor = scaleFactor;\n  this._li = li;\n  if (scaleFactor <= 0) { throw new IllegalArgumentException('Scale factor must be non-zero') }\n  if (scaleFactor !== 1.0) {\n    this._pt = new Coordinate(this.scale(pt.x), this.scale(pt.y));\n    this._p0Scaled = new Coordinate();\n    this._p1Scaled = new Coordinate();\n  }\n  this.initCorners(this._pt);\n};\n\nvar staticAccessors$34 = { SAFE_ENV_EXPANSION_FACTOR: { configurable: true } };\nHotPixel.prototype.intersectsScaled = function intersectsScaled (p0, p1) {\n  var segMinx = Math.min(p0.x, p1.x);\n  var segMaxx = Math.max(p0.x, p1.x);\n  var segMiny = Math.min(p0.y, p1.y);\n  var segMaxy = Math.max(p0.y, p1.y);\n  var isOutsidePixelEnv = this._maxx < segMinx || this._minx > segMaxx || this._maxy < segMiny || this._miny > segMaxy;\n  if (isOutsidePixelEnv) { return false }\n  var intersects = this.intersectsToleranceSquare(p0, p1);\n  Assert.isTrue(!(isOutsidePixelEnv && intersects), 'Found bad envelope test');\n  return intersects\n};\nHotPixel.prototype.initCorners = function initCorners (pt) {\n  var tolerance = 0.5;\n  this._minx = pt.x - tolerance;\n  this._maxx = pt.x + tolerance;\n  this._miny = pt.y - tolerance;\n  this._maxy = pt.y + tolerance;\n  this._corner[0] = new Coordinate(this._maxx, this._maxy);\n  this._corner[1] = new Coordinate(this._minx, this._maxy);\n  this._corner[2] = new Coordinate(this._minx, this._miny);\n  this._corner[3] = new Coordinate(this._maxx, this._miny);\n};\nHotPixel.prototype.intersects = function intersects (p0, p1) {\n  if (this._scaleFactor === 1.0) { return this.intersectsScaled(p0, p1) }\n  this.copyScaled(p0, this._p0Scaled);\n  this.copyScaled(p1, this._p1Scaled);\n  return this.intersectsScaled(this._p0Scaled, this._p1Scaled)\n};\nHotPixel.prototype.scale = function scale (val) {\n  return Math.round(val * this._scaleFactor)\n};\nHotPixel.prototype.getCoordinate = function getCoordinate () {\n  return this._originalPt\n};\nHotPixel.prototype.copyScaled = function copyScaled (p, pScaled) {\n  pScaled.x = this.scale(p.x);\n  pScaled.y = this.scale(p.y);\n};\nHotPixel.prototype.getSafeEnvelope = function getSafeEnvelope () {\n  if (this._safeEnv === null) {\n    var safeTolerance = HotPixel.SAFE_ENV_EXPANSION_FACTOR / this._scaleFactor;\n    this._safeEnv = new Envelope(this._originalPt.x - safeTolerance, this._originalPt.x + safeTolerance, this._originalPt.y - safeTolerance, this._originalPt.y + safeTolerance);\n  }\n  return this._safeEnv\n};\nHotPixel.prototype.intersectsPixelClosure = function intersectsPixelClosure (p0, p1) {\n  this._li.computeIntersection(p0, p1, this._corner[0], this._corner[1]);\n  if (this._li.hasIntersection()) { return true }\n  this._li.computeIntersection(p0, p1, this._corner[1], this._corner[2]);\n  if (this._li.hasIntersection()) { return true }\n  this._li.computeIntersection(p0, p1, this._corner[2], this._corner[3]);\n  if (this._li.hasIntersection()) { return true }\n  this._li.computeIntersection(p0, p1, this._corner[3], this._corner[0]);\n  if (this._li.hasIntersection()) { return true }\n  return false\n};\nHotPixel.prototype.intersectsToleranceSquare = function intersectsToleranceSquare (p0, p1) {\n  var intersectsLeft = false;\n  var intersectsBottom = false;\n  this._li.computeIntersection(p0, p1, this._corner[0], this._corner[1]);\n  if (this._li.isProper()) { return true }\n  this._li.computeIntersection(p0, p1, this._corner[1], this._corner[2]);\n  if (this._li.isProper()) { return true }\n  if (this._li.hasIntersection()) { intersectsLeft = true; }\n  this._li.computeIntersection(p0, p1, this._corner[2], this._corner[3]);\n  if (this._li.isProper()) { return true }\n  if (this._li.hasIntersection()) { intersectsBottom = true; }\n  this._li.computeIntersection(p0, p1, this._corner[3], this._corner[0]);\n  if (this._li.isProper()) { return true }\n  if (intersectsLeft && intersectsBottom) { return true }\n  if (p0.equals(this._pt)) { return true }\n  if (p1.equals(this._pt)) { return true }\n  return false\n};\nHotPixel.prototype.addSnappedNode = function addSnappedNode (segStr, segIndex) {\n  var p0 = segStr.getCoordinate(segIndex);\n  var p1 = segStr.getCoordinate(segIndex + 1);\n  if (this.intersects(p0, p1)) {\n    segStr.addIntersection(this.getCoordinate(), segIndex);\n    return true\n  }\n  return false\n};\nHotPixel.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nHotPixel.prototype.getClass = function getClass () {\n  return HotPixel\n};\nstaticAccessors$34.SAFE_ENV_EXPANSION_FACTOR.get = function () { return 0.75 };\n\nObject.defineProperties( HotPixel, staticAccessors$34 );\n\nvar MonotoneChainSelectAction = function MonotoneChainSelectAction () {\n  this.tempEnv1 = new Envelope();\n  this.selectedSegment = new LineSegment();\n};\nMonotoneChainSelectAction.prototype.select = function select () {\n  if (arguments.length === 1) {\n    // const seg = arguments[0]\n  } else if (arguments.length === 2) {\n    var mc = arguments[0];\n    var startIndex = arguments[1];\n    mc.getLineSegment(startIndex, this.selectedSegment);\n    this.select(this.selectedSegment);\n  }\n};\nMonotoneChainSelectAction.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nMonotoneChainSelectAction.prototype.getClass = function getClass () {\n  return MonotoneChainSelectAction\n};\n\nvar MCIndexPointSnapper = function MCIndexPointSnapper () {\n  this._index = null;\n  var index = arguments[0];\n  this._index = index;\n};\n\nvar staticAccessors$35 = { HotPixelSnapAction: { configurable: true } };\nMCIndexPointSnapper.prototype.snap = function snap () {\n  if (arguments.length === 1) {\n    var hotPixel = arguments[0];\n    return this.snap(hotPixel, null, -1)\n  } else if (arguments.length === 3) {\n    var hotPixel$1 = arguments[0];\n    var parentEdge = arguments[1];\n    var hotPixelVertexIndex = arguments[2];\n    var pixelEnv = hotPixel$1.getSafeEnvelope();\n    var hotPixelSnapAction = new HotPixelSnapAction(hotPixel$1, parentEdge, hotPixelVertexIndex);\n    this._index.query(pixelEnv, {\n      interfaces_: function () {\n        return [ItemVisitor]\n      },\n      visitItem: function (item) {\n        var testChain = item;\n        testChain.select(pixelEnv, hotPixelSnapAction);\n      }\n    });\n    return hotPixelSnapAction.isNodeAdded()\n  }\n};\nMCIndexPointSnapper.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nMCIndexPointSnapper.prototype.getClass = function getClass () {\n  return MCIndexPointSnapper\n};\nstaticAccessors$35.HotPixelSnapAction.get = function () { return HotPixelSnapAction };\n\nObject.defineProperties( MCIndexPointSnapper, staticAccessors$35 );\n\nvar HotPixelSnapAction = (function (MonotoneChainSelectAction$$1) {\n  function HotPixelSnapAction () {\n    MonotoneChainSelectAction$$1.call(this);\n    this._hotPixel = null;\n    this._parentEdge = null;\n    this._hotPixelVertexIndex = null;\n    this._isNodeAdded = false;\n    var hotPixel = arguments[0];\n    var parentEdge = arguments[1];\n    var hotPixelVertexIndex = arguments[2];\n    this._hotPixel = hotPixel;\n    this._parentEdge = parentEdge;\n    this._hotPixelVertexIndex = hotPixelVertexIndex;\n  }\n\n  if ( MonotoneChainSelectAction$$1 ) HotPixelSnapAction.__proto__ = MonotoneChainSelectAction$$1;\n  HotPixelSnapAction.prototype = Object.create( MonotoneChainSelectAction$$1 && MonotoneChainSelectAction$$1.prototype );\n  HotPixelSnapAction.prototype.constructor = HotPixelSnapAction;\n  HotPixelSnapAction.prototype.isNodeAdded = function isNodeAdded () {\n    return this._isNodeAdded\n  };\n  HotPixelSnapAction.prototype.select = function select () {\n    if (arguments.length === 2) {\n      var mc = arguments[0];\n      var startIndex = arguments[1];\n      var ss = mc.getContext();\n      if (this._parentEdge !== null) {\n        if (ss === this._parentEdge && startIndex === this._hotPixelVertexIndex) { return null }\n      }\n      this._isNodeAdded = this._hotPixel.addSnappedNode(ss, startIndex);\n    } else { return MonotoneChainSelectAction$$1.prototype.select.apply(this, arguments) }\n  };\n  HotPixelSnapAction.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  HotPixelSnapAction.prototype.getClass = function getClass () {\n    return HotPixelSnapAction\n  };\n\n  return HotPixelSnapAction;\n}(MonotoneChainSelectAction));\n\nvar InteriorIntersectionFinderAdder = function InteriorIntersectionFinderAdder () {\n  this._li = null;\n  this._interiorIntersections = null;\n  var li = arguments[0];\n  this._li = li;\n  this._interiorIntersections = new ArrayList();\n};\nInteriorIntersectionFinderAdder.prototype.processIntersections = function processIntersections (e0, segIndex0, e1, segIndex1) {\n    var this$1 = this;\n\n  if (e0 === e1 && segIndex0 === segIndex1) { return null }\n  var p00 = e0.getCoordinates()[segIndex0];\n  var p01 = e0.getCoordinates()[segIndex0 + 1];\n  var p10 = e1.getCoordinates()[segIndex1];\n  var p11 = e1.getCoordinates()[segIndex1 + 1];\n  this._li.computeIntersection(p00, p01, p10, p11);\n  if (this._li.hasIntersection()) {\n    if (this._li.isInteriorIntersection()) {\n      for (var intIndex = 0; intIndex < this._li.getIntersectionNum(); intIndex++) {\n        this$1._interiorIntersections.add(this$1._li.getIntersection(intIndex));\n      }\n      e0.addIntersections(this._li, segIndex0, 0);\n      e1.addIntersections(this._li, segIndex1, 1);\n    }\n  }\n};\nInteriorIntersectionFinderAdder.prototype.isDone = function isDone () {\n  return false\n};\nInteriorIntersectionFinderAdder.prototype.getInteriorIntersections = function getInteriorIntersections () {\n  return this._interiorIntersections\n};\nInteriorIntersectionFinderAdder.prototype.interfaces_ = function interfaces_ () {\n  return [SegmentIntersector]\n};\nInteriorIntersectionFinderAdder.prototype.getClass = function getClass () {\n  return InteriorIntersectionFinderAdder\n};\n\nvar MCIndexSnapRounder = function MCIndexSnapRounder () {\n  this._pm = null;\n  this._li = null;\n  this._scaleFactor = null;\n  this._noder = null;\n  this._pointSnapper = null;\n  this._nodedSegStrings = null;\n  var pm = arguments[0];\n  this._pm = pm;\n  this._li = new RobustLineIntersector();\n  this._li.setPrecisionModel(pm);\n  this._scaleFactor = pm.getScale();\n};\nMCIndexSnapRounder.prototype.checkCorrectness = function checkCorrectness (inputSegmentStrings) {\n  var resultSegStrings = NodedSegmentString.getNodedSubstrings(inputSegmentStrings);\n  var nv = new NodingValidator(resultSegStrings);\n  try {\n    nv.checkValid();\n  } catch (ex) {\n    if (ex instanceof Exception) {\n      ex.printStackTrace();\n    } else { throw ex }\n  } finally {}\n};\nMCIndexSnapRounder.prototype.getNodedSubstrings = function getNodedSubstrings () {\n  return NodedSegmentString.getNodedSubstrings(this._nodedSegStrings)\n};\nMCIndexSnapRounder.prototype.snapRound = function snapRound (segStrings, li) {\n  var intersections = this.findInteriorIntersections(segStrings, li);\n  this.computeIntersectionSnaps(intersections);\n  this.computeVertexSnaps(segStrings);\n};\nMCIndexSnapRounder.prototype.findInteriorIntersections = function findInteriorIntersections (segStrings, li) {\n  var intFinderAdder = new InteriorIntersectionFinderAdder(li);\n  this._noder.setSegmentIntersector(intFinderAdder);\n  this._noder.computeNodes(segStrings);\n  return intFinderAdder.getInteriorIntersections()\n};\nMCIndexSnapRounder.prototype.computeVertexSnaps = function computeVertexSnaps () {\n    var this$1 = this;\n\n  if (hasInterface(arguments[0], Collection)) {\n    var edges = arguments[0];\n    for (var i0 = edges.iterator(); i0.hasNext();) {\n      var edge0 = i0.next();\n      this$1.computeVertexSnaps(edge0);\n    }\n  } else if (arguments[0] instanceof NodedSegmentString) {\n    var e = arguments[0];\n    var pts0 = e.getCoordinates();\n    for (var i = 0; i < pts0.length; i++) {\n      var hotPixel = new HotPixel(pts0[i], this$1._scaleFactor, this$1._li);\n      var isNodeAdded = this$1._pointSnapper.snap(hotPixel, e, i);\n      if (isNodeAdded) {\n        e.addIntersection(pts0[i], i);\n      }\n    }\n  }\n};\nMCIndexSnapRounder.prototype.computeNodes = function computeNodes (inputSegmentStrings) {\n  this._nodedSegStrings = inputSegmentStrings;\n  this._noder = new MCIndexNoder();\n  this._pointSnapper = new MCIndexPointSnapper(this._noder.getIndex());\n  this.snapRound(inputSegmentStrings, this._li);\n};\nMCIndexSnapRounder.prototype.computeIntersectionSnaps = function computeIntersectionSnaps (snapPts) {\n    var this$1 = this;\n\n  for (var it = snapPts.iterator(); it.hasNext();) {\n    var snapPt = it.next();\n    var hotPixel = new HotPixel(snapPt, this$1._scaleFactor, this$1._li);\n    this$1._pointSnapper.snap(hotPixel);\n  }\n};\nMCIndexSnapRounder.prototype.interfaces_ = function interfaces_ () {\n  return [Noder]\n};\nMCIndexSnapRounder.prototype.getClass = function getClass () {\n  return MCIndexSnapRounder\n};\n\nvar BufferOp = function BufferOp () {\n  this._argGeom = null;\n  this._distance = null;\n  this._bufParams = new BufferParameters();\n  this._resultGeometry = null;\n  this._saveException = null;\n  if (arguments.length === 1) {\n    var g = arguments[0];\n    this._argGeom = g;\n  } else if (arguments.length === 2) {\n    var g$1 = arguments[0];\n    var bufParams = arguments[1];\n    this._argGeom = g$1;\n    this._bufParams = bufParams;\n  }\n};\n\nvar staticAccessors$32 = { CAP_ROUND: { configurable: true },CAP_BUTT: { configurable: true },CAP_FLAT: { configurable: true },CAP_SQUARE: { configurable: true },MAX_PRECISION_DIGITS: { configurable: true } };\nBufferOp.prototype.bufferFixedPrecision = function bufferFixedPrecision (fixedPM) {\n  var noder = new ScaledNoder(new MCIndexSnapRounder(new PrecisionModel(1.0)), fixedPM.getScale());\n  var bufBuilder = new BufferBuilder(this._bufParams);\n  bufBuilder.setWorkingPrecisionModel(fixedPM);\n  bufBuilder.setNoder(noder);\n  this._resultGeometry = bufBuilder.buffer(this._argGeom, this._distance);\n};\nBufferOp.prototype.bufferReducedPrecision = function bufferReducedPrecision () {\n    var this$1 = this;\n\n  if (arguments.length === 0) {\n    for (var precDigits = BufferOp.MAX_PRECISION_DIGITS; precDigits >= 0; precDigits--) {\n      try {\n        this$1.bufferReducedPrecision(precDigits);\n      } catch (ex) {\n        if (ex instanceof TopologyException) {\n          this$1._saveException = ex;\n        } else { throw ex }\n      } finally {}\n      if (this$1._resultGeometry !== null) { return null }\n    }\n    throw this._saveException\n  } else if (arguments.length === 1) {\n    var precisionDigits = arguments[0];\n    var sizeBasedScaleFactor = BufferOp.precisionScaleFactor(this._argGeom, this._distance, precisionDigits);\n    var fixedPM = new PrecisionModel(sizeBasedScaleFactor);\n    this.bufferFixedPrecision(fixedPM);\n  }\n};\nBufferOp.prototype.computeGeometry = function computeGeometry () {\n  this.bufferOriginalPrecision();\n  if (this._resultGeometry !== null) { return null }\n  var argPM = this._argGeom.getFactory().getPrecisionModel();\n  if (argPM.getType() === PrecisionModel.FIXED) { this.bufferFixedPrecision(argPM); } else { this.bufferReducedPrecision(); }\n};\nBufferOp.prototype.setQuadrantSegments = function setQuadrantSegments (quadrantSegments) {\n  this._bufParams.setQuadrantSegments(quadrantSegments);\n};\nBufferOp.prototype.bufferOriginalPrecision = function bufferOriginalPrecision () {\n  try {\n    var bufBuilder = new BufferBuilder(this._bufParams);\n    this._resultGeometry = bufBuilder.buffer(this._argGeom, this._distance);\n  } catch (ex) {\n    if (ex instanceof RuntimeException) {\n      this._saveException = ex;\n    } else { throw ex }\n  } finally {}\n};\nBufferOp.prototype.getResultGeometry = function getResultGeometry (distance) {\n  this._distance = distance;\n  this.computeGeometry();\n  return this._resultGeometry\n};\nBufferOp.prototype.setEndCapStyle = function setEndCapStyle (endCapStyle) {\n  this._bufParams.setEndCapStyle(endCapStyle);\n};\nBufferOp.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nBufferOp.prototype.getClass = function getClass () {\n  return BufferOp\n};\nBufferOp.bufferOp = function bufferOp () {\n  if (arguments.length === 2) {\n    var g = arguments[0];\n    var distance = arguments[1];\n    var gBuf = new BufferOp(g);\n    var geomBuf = gBuf.getResultGeometry(distance);\n    return geomBuf\n  } else if (arguments.length === 3) {\n    if (Number.isInteger(arguments[2]) && (arguments[0] instanceof Geometry && typeof arguments[1] === 'number')) {\n      var g$1 = arguments[0];\n      var distance$1 = arguments[1];\n      var quadrantSegments = arguments[2];\n      var bufOp = new BufferOp(g$1);\n      bufOp.setQuadrantSegments(quadrantSegments);\n      var geomBuf$1 = bufOp.getResultGeometry(distance$1);\n      return geomBuf$1\n    } else if (arguments[2] instanceof BufferParameters && (arguments[0] instanceof Geometry && typeof arguments[1] === 'number')) {\n      var g$2 = arguments[0];\n      var distance$2 = arguments[1];\n      var params = arguments[2];\n      var bufOp$1 = new BufferOp(g$2, params);\n      var geomBuf$2 = bufOp$1.getResultGeometry(distance$2);\n      return geomBuf$2\n    }\n  } else if (arguments.length === 4) {\n    var g$3 = arguments[0];\n    var distance$3 = arguments[1];\n    var quadrantSegments$1 = arguments[2];\n    var endCapStyle = arguments[3];\n    var bufOp$2 = new BufferOp(g$3);\n    bufOp$2.setQuadrantSegments(quadrantSegments$1);\n    bufOp$2.setEndCapStyle(endCapStyle);\n    var geomBuf$3 = bufOp$2.getResultGeometry(distance$3);\n    return geomBuf$3\n  }\n};\nBufferOp.precisionScaleFactor = function precisionScaleFactor (g, distance, maxPrecisionDigits) {\n  var env = g.getEnvelopeInternal();\n  var envMax = MathUtil.max(Math.abs(env.getMaxX()), Math.abs(env.getMaxY()), Math.abs(env.getMinX()), Math.abs(env.getMinY()));\n  var expandByDistance = distance > 0.0 ? distance : 0.0;\n  var bufEnvMax = envMax + 2 * expandByDistance;\n  var bufEnvPrecisionDigits = Math.trunc(Math.log(bufEnvMax) / Math.log(10) + 1.0);\n  var minUnitLog10 = maxPrecisionDigits - bufEnvPrecisionDigits;\n  var scaleFactor = Math.pow(10.0, minUnitLog10);\n  return scaleFactor\n};\nstaticAccessors$32.CAP_ROUND.get = function () { return BufferParameters.CAP_ROUND };\nstaticAccessors$32.CAP_BUTT.get = function () { return BufferParameters.CAP_FLAT };\nstaticAccessors$32.CAP_FLAT.get = function () { return BufferParameters.CAP_FLAT };\nstaticAccessors$32.CAP_SQUARE.get = function () { return BufferParameters.CAP_SQUARE };\nstaticAccessors$32.MAX_PRECISION_DIGITS.get = function () { return 12 };\n\nObject.defineProperties( BufferOp, staticAccessors$32 );\n\nvar PointPairDistance = function PointPairDistance () {\n  this._pt = [new Coordinate(), new Coordinate()];\n  this._distance = Double.NaN;\n  this._isNull = true;\n};\nPointPairDistance.prototype.getCoordinates = function getCoordinates () {\n  return this._pt\n};\nPointPairDistance.prototype.getCoordinate = function getCoordinate (i) {\n  return this._pt[i]\n};\nPointPairDistance.prototype.setMinimum = function setMinimum () {\n  if (arguments.length === 1) {\n    var ptDist = arguments[0];\n    this.setMinimum(ptDist._pt[0], ptDist._pt[1]);\n  } else if (arguments.length === 2) {\n    var p0 = arguments[0];\n    var p1 = arguments[1];\n    if (this._isNull) {\n      this.initialize(p0, p1);\n      return null\n    }\n    var dist = p0.distance(p1);\n    if (dist < this._distance) { this.initialize(p0, p1, dist); }\n  }\n};\nPointPairDistance.prototype.initialize = function initialize () {\n  if (arguments.length === 0) {\n    this._isNull = true;\n  } else if (arguments.length === 2) {\n    var p0 = arguments[0];\n    var p1 = arguments[1];\n    this._pt[0].setCoordinate(p0);\n    this._pt[1].setCoordinate(p1);\n    this._distance = p0.distance(p1);\n    this._isNull = false;\n  } else if (arguments.length === 3) {\n    var p0$1 = arguments[0];\n    var p1$1 = arguments[1];\n    var distance = arguments[2];\n    this._pt[0].setCoordinate(p0$1);\n    this._pt[1].setCoordinate(p1$1);\n    this._distance = distance;\n    this._isNull = false;\n  }\n};\nPointPairDistance.prototype.getDistance = function getDistance () {\n  return this._distance\n};\nPointPairDistance.prototype.setMaximum = function setMaximum () {\n  if (arguments.length === 1) {\n    var ptDist = arguments[0];\n    this.setMaximum(ptDist._pt[0], ptDist._pt[1]);\n  } else if (arguments.length === 2) {\n    var p0 = arguments[0];\n    var p1 = arguments[1];\n    if (this._isNull) {\n      this.initialize(p0, p1);\n      return null\n    }\n    var dist = p0.distance(p1);\n    if (dist > this._distance) { this.initialize(p0, p1, dist); }\n  }\n};\nPointPairDistance.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nPointPairDistance.prototype.getClass = function getClass () {\n  return PointPairDistance\n};\n\nvar DistanceToPointFinder = function DistanceToPointFinder () {};\n\nDistanceToPointFinder.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nDistanceToPointFinder.prototype.getClass = function getClass () {\n  return DistanceToPointFinder\n};\nDistanceToPointFinder.computeDistance = function computeDistance () {\n  if (arguments[2] instanceof PointPairDistance && (arguments[0] instanceof LineString && arguments[1] instanceof Coordinate)) {\n    var line = arguments[0];\n    var pt = arguments[1];\n    var ptDist = arguments[2];\n    var coords = line.getCoordinates();\n    var tempSegment = new LineSegment();\n    for (var i = 0; i < coords.length - 1; i++) {\n      tempSegment.setCoordinates(coords[i], coords[i + 1]);\n      var closestPt = tempSegment.closestPoint(pt);\n      ptDist.setMinimum(closestPt, pt);\n    }\n  } else if (arguments[2] instanceof PointPairDistance && (arguments[0] instanceof Polygon && arguments[1] instanceof Coordinate)) {\n    var poly = arguments[0];\n    var pt$1 = arguments[1];\n    var ptDist$1 = arguments[2];\n    DistanceToPointFinder.computeDistance(poly.getExteriorRing(), pt$1, ptDist$1);\n    for (var i$1 = 0; i$1 < poly.getNumInteriorRing(); i$1++) {\n      DistanceToPointFinder.computeDistance(poly.getInteriorRingN(i$1), pt$1, ptDist$1);\n    }\n  } else if (arguments[2] instanceof PointPairDistance && (arguments[0] instanceof Geometry && arguments[1] instanceof Coordinate)) {\n    var geom = arguments[0];\n    var pt$2 = arguments[1];\n    var ptDist$2 = arguments[2];\n    if (geom instanceof LineString) {\n      DistanceToPointFinder.computeDistance(geom, pt$2, ptDist$2);\n    } else if (geom instanceof Polygon) {\n      DistanceToPointFinder.computeDistance(geom, pt$2, ptDist$2);\n    } else if (geom instanceof GeometryCollection) {\n      var gc = geom;\n      for (var i$2 = 0; i$2 < gc.getNumGeometries(); i$2++) {\n        var g = gc.getGeometryN(i$2);\n        DistanceToPointFinder.computeDistance(g, pt$2, ptDist$2);\n      }\n    } else {\n      ptDist$2.setMinimum(geom.getCoordinate(), pt$2);\n    }\n  } else if (arguments[2] instanceof PointPairDistance && (arguments[0] instanceof LineSegment && arguments[1] instanceof Coordinate)) {\n    var segment = arguments[0];\n    var pt$3 = arguments[1];\n    var ptDist$3 = arguments[2];\n    var closestPt$1 = segment.closestPoint(pt$3);\n    ptDist$3.setMinimum(closestPt$1, pt$3);\n  }\n};\n\nvar BufferCurveMaximumDistanceFinder = function BufferCurveMaximumDistanceFinder (inputGeom) {\n  this._maxPtDist = new PointPairDistance();\n  this._inputGeom = inputGeom || null;\n};\n\nvar staticAccessors$36 = { MaxPointDistanceFilter: { configurable: true },MaxMidpointDistanceFilter: { configurable: true } };\nBufferCurveMaximumDistanceFinder.prototype.computeMaxMidpointDistance = function computeMaxMidpointDistance (curve) {\n  var distFilter = new MaxMidpointDistanceFilter(this._inputGeom);\n  curve.apply(distFilter);\n  this._maxPtDist.setMaximum(distFilter.getMaxPointDistance());\n};\nBufferCurveMaximumDistanceFinder.prototype.computeMaxVertexDistance = function computeMaxVertexDistance (curve) {\n  var distFilter = new MaxPointDistanceFilter(this._inputGeom);\n  curve.apply(distFilter);\n  this._maxPtDist.setMaximum(distFilter.getMaxPointDistance());\n};\nBufferCurveMaximumDistanceFinder.prototype.findDistance = function findDistance (bufferCurve) {\n  this.computeMaxVertexDistance(bufferCurve);\n  this.computeMaxMidpointDistance(bufferCurve);\n  return this._maxPtDist.getDistance()\n};\nBufferCurveMaximumDistanceFinder.prototype.getDistancePoints = function getDistancePoints () {\n  return this._maxPtDist\n};\nBufferCurveMaximumDistanceFinder.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nBufferCurveMaximumDistanceFinder.prototype.getClass = function getClass () {\n  return BufferCurveMaximumDistanceFinder\n};\nstaticAccessors$36.MaxPointDistanceFilter.get = function () { return MaxPointDistanceFilter };\nstaticAccessors$36.MaxMidpointDistanceFilter.get = function () { return MaxMidpointDistanceFilter };\n\nObject.defineProperties( BufferCurveMaximumDistanceFinder, staticAccessors$36 );\n\nvar MaxPointDistanceFilter = function MaxPointDistanceFilter (geom) {\n  this._maxPtDist = new PointPairDistance();\n  this._minPtDist = new PointPairDistance();\n  this._geom = geom || null;\n};\nMaxPointDistanceFilter.prototype.filter = function filter (pt) {\n  this._minPtDist.initialize();\n  DistanceToPointFinder.computeDistance(this._geom, pt, this._minPtDist);\n  this._maxPtDist.setMaximum(this._minPtDist);\n};\nMaxPointDistanceFilter.prototype.getMaxPointDistance = function getMaxPointDistance () {\n  return this._maxPtDist\n};\nMaxPointDistanceFilter.prototype.interfaces_ = function interfaces_ () {\n  return [CoordinateFilter]\n};\nMaxPointDistanceFilter.prototype.getClass = function getClass () {\n  return MaxPointDistanceFilter\n};\n\nvar MaxMidpointDistanceFilter = function MaxMidpointDistanceFilter (geom) {\n  this._maxPtDist = new PointPairDistance();\n  this._minPtDist = new PointPairDistance();\n  this._geom = geom || null;\n};\nMaxMidpointDistanceFilter.prototype.filter = function filter (seq, index) {\n  if (index === 0) { return null }\n  var p0 = seq.getCoordinate(index - 1);\n  var p1 = seq.getCoordinate(index);\n  var midPt = new Coordinate((p0.x + p1.x) / 2, (p0.y + p1.y) / 2);\n  this._minPtDist.initialize();\n  DistanceToPointFinder.computeDistance(this._geom, midPt, this._minPtDist);\n  this._maxPtDist.setMaximum(this._minPtDist);\n};\nMaxMidpointDistanceFilter.prototype.isDone = function isDone () {\n  return false\n};\nMaxMidpointDistanceFilter.prototype.isGeometryChanged = function isGeometryChanged () {\n  return false\n};\nMaxMidpointDistanceFilter.prototype.getMaxPointDistance = function getMaxPointDistance () {\n  return this._maxPtDist\n};\nMaxMidpointDistanceFilter.prototype.interfaces_ = function interfaces_ () {\n  return [CoordinateSequenceFilter]\n};\nMaxMidpointDistanceFilter.prototype.getClass = function getClass () {\n  return MaxMidpointDistanceFilter\n};\n\nvar PolygonExtracter = function PolygonExtracter (comps) {\n  this._comps = comps || null;\n};\nPolygonExtracter.prototype.filter = function filter (geom) {\n  if (geom instanceof Polygon) { this._comps.add(geom); }\n};\nPolygonExtracter.prototype.interfaces_ = function interfaces_ () {\n  return [GeometryFilter]\n};\nPolygonExtracter.prototype.getClass = function getClass () {\n  return PolygonExtracter\n};\nPolygonExtracter.getPolygons = function getPolygons () {\n  if (arguments.length === 1) {\n    var geom = arguments[0];\n    return PolygonExtracter.getPolygons(geom, new ArrayList())\n  } else if (arguments.length === 2) {\n    var geom$1 = arguments[0];\n    var list = arguments[1];\n    if (geom$1 instanceof Polygon) {\n      list.add(geom$1);\n    } else if (geom$1 instanceof GeometryCollection) {\n      geom$1.apply(new PolygonExtracter(list));\n    }\n    return list\n  }\n};\n\nvar LinearComponentExtracter = function LinearComponentExtracter () {\n  this._lines = null;\n  this._isForcedToLineString = false;\n  if (arguments.length === 1) {\n    var lines = arguments[0];\n    this._lines = lines;\n  } else if (arguments.length === 2) {\n    var lines$1 = arguments[0];\n    var isForcedToLineString = arguments[1];\n    this._lines = lines$1;\n    this._isForcedToLineString = isForcedToLineString;\n  }\n};\nLinearComponentExtracter.prototype.filter = function filter (geom) {\n  if (this._isForcedToLineString && geom instanceof LinearRing) {\n    var line = geom.getFactory().createLineString(geom.getCoordinateSequence());\n    this._lines.add(line);\n    return null\n  }\n  if (geom instanceof LineString) { this._lines.add(geom); }\n};\nLinearComponentExtracter.prototype.setForceToLineString = function setForceToLineString (isForcedToLineString) {\n  this._isForcedToLineString = isForcedToLineString;\n};\nLinearComponentExtracter.prototype.interfaces_ = function interfaces_ () {\n  return [GeometryComponentFilter]\n};\nLinearComponentExtracter.prototype.getClass = function getClass () {\n  return LinearComponentExtracter\n};\nLinearComponentExtracter.getGeometry = function getGeometry () {\n  if (arguments.length === 1) {\n    var geom = arguments[0];\n    return geom.getFactory().buildGeometry(LinearComponentExtracter.getLines(geom))\n  } else if (arguments.length === 2) {\n    var geom$1 = arguments[0];\n    var forceToLineString = arguments[1];\n    return geom$1.getFactory().buildGeometry(LinearComponentExtracter.getLines(geom$1, forceToLineString))\n  }\n};\nLinearComponentExtracter.getLines = function getLines () {\n  if (arguments.length === 1) {\n    var geom = arguments[0];\n    return LinearComponentExtracter.getLines(geom, false)\n  } else if (arguments.length === 2) {\n    if (hasInterface(arguments[0], Collection) && hasInterface(arguments[1], Collection)) {\n      var geoms = arguments[0];\n      var lines$1 = arguments[1];\n      for (var i = geoms.iterator(); i.hasNext();) {\n        var g = i.next();\n        LinearComponentExtracter.getLines(g, lines$1);\n      }\n      return lines$1\n    } else if (arguments[0] instanceof Geometry && typeof arguments[1] === 'boolean') {\n      var geom$1 = arguments[0];\n      var forceToLineString = arguments[1];\n      var lines = new ArrayList();\n      geom$1.apply(new LinearComponentExtracter(lines, forceToLineString));\n      return lines\n    } else if (arguments[0] instanceof Geometry && hasInterface(arguments[1], Collection)) {\n      var geom$2 = arguments[0];\n      var lines$2 = arguments[1];\n      if (geom$2 instanceof LineString) {\n        lines$2.add(geom$2);\n      } else {\n        geom$2.apply(new LinearComponentExtracter(lines$2));\n      }\n      return lines$2\n    }\n  } else if (arguments.length === 3) {\n    if (typeof arguments[2] === 'boolean' && (hasInterface(arguments[0], Collection) && hasInterface(arguments[1], Collection))) {\n      var geoms$1 = arguments[0];\n      var lines$3 = arguments[1];\n      var forceToLineString$1 = arguments[2];\n      for (var i$1 = geoms$1.iterator(); i$1.hasNext();) {\n        var g$1 = i$1.next();\n        LinearComponentExtracter.getLines(g$1, lines$3, forceToLineString$1);\n      }\n      return lines$3\n    } else if (typeof arguments[2] === 'boolean' && (arguments[0] instanceof Geometry && hasInterface(arguments[1], Collection))) {\n      var geom$3 = arguments[0];\n      var lines$4 = arguments[1];\n      var forceToLineString$2 = arguments[2];\n      geom$3.apply(new LinearComponentExtracter(lines$4, forceToLineString$2));\n      return lines$4\n    }\n  }\n};\n\nvar PointLocator = function PointLocator () {\n  this._boundaryRule = BoundaryNodeRule.OGC_SFS_BOUNDARY_RULE;\n  this._isIn = null;\n  this._numBoundaries = null;\n  if (arguments.length === 0) {} else if (arguments.length === 1) {\n    var boundaryRule = arguments[0];\n    if (boundaryRule === null) { throw new IllegalArgumentException('Rule must be non-null') }\n    this._boundaryRule = boundaryRule;\n  }\n};\nPointLocator.prototype.locateInternal = function locateInternal () {\n    var this$1 = this;\n\n  if (arguments[0] instanceof Coordinate && arguments[1] instanceof Polygon) {\n    var p = arguments[0];\n    var poly = arguments[1];\n    if (poly.isEmpty()) { return Location.EXTERIOR }\n    var shell = poly.getExteriorRing();\n    var shellLoc = this.locateInPolygonRing(p, shell);\n    if (shellLoc === Location.EXTERIOR) { return Location.EXTERIOR }\n    if (shellLoc === Location.BOUNDARY) { return Location.BOUNDARY }\n    for (var i = 0; i < poly.getNumInteriorRing(); i++) {\n      var hole = poly.getInteriorRingN(i);\n      var holeLoc = this$1.locateInPolygonRing(p, hole);\n      if (holeLoc === Location.INTERIOR) { return Location.EXTERIOR }\n      if (holeLoc === Location.BOUNDARY) { return Location.BOUNDARY }\n    }\n    return Location.INTERIOR\n  } else if (arguments[0] instanceof Coordinate && arguments[1] instanceof LineString) {\n    var p$1 = arguments[0];\n    var l = arguments[1];\n    if (!l.getEnvelopeInternal().intersects(p$1)) { return Location.EXTERIOR }\n    var pt = l.getCoordinates();\n    if (!l.isClosed()) {\n      if (p$1.equals(pt[0]) || p$1.equals(pt[pt.length - 1])) {\n        return Location.BOUNDARY\n      }\n    }\n    if (CGAlgorithms.isOnLine(p$1, pt)) { return Location.INTERIOR }\n    return Location.EXTERIOR\n  } else if (arguments[0] instanceof Coordinate && arguments[1] instanceof Point) {\n    var p$2 = arguments[0];\n    var pt$1 = arguments[1];\n    var ptCoord = pt$1.getCoordinate();\n    if (ptCoord.equals2D(p$2)) { return Location.INTERIOR }\n    return Location.EXTERIOR\n  }\n};\nPointLocator.prototype.locateInPolygonRing = function locateInPolygonRing (p, ring) {\n  if (!ring.getEnvelopeInternal().intersects(p)) { return Location.EXTERIOR }\n  return CGAlgorithms.locatePointInRing(p, ring.getCoordinates())\n};\nPointLocator.prototype.intersects = function intersects (p, geom) {\n  return this.locate(p, geom) !== Location.EXTERIOR\n};\nPointLocator.prototype.updateLocationInfo = function updateLocationInfo (loc) {\n  if (loc === Location.INTERIOR) { this._isIn = true; }\n  if (loc === Location.BOUNDARY) { this._numBoundaries++; }\n};\nPointLocator.prototype.computeLocation = function computeLocation (p, geom) {\n    var this$1 = this;\n\n  if (geom instanceof Point) {\n    this.updateLocationInfo(this.locateInternal(p, geom));\n  }\n  if (geom instanceof LineString) {\n    this.updateLocationInfo(this.locateInternal(p, geom));\n  } else if (geom instanceof Polygon) {\n    this.updateLocationInfo(this.locateInternal(p, geom));\n  } else if (geom instanceof MultiLineString) {\n    var ml = geom;\n    for (var i = 0; i < ml.getNumGeometries(); i++) {\n      var l = ml.getGeometryN(i);\n      this$1.updateLocationInfo(this$1.locateInternal(p, l));\n    }\n  } else if (geom instanceof MultiPolygon) {\n    var mpoly = geom;\n    for (var i$1 = 0; i$1 < mpoly.getNumGeometries(); i$1++) {\n      var poly = mpoly.getGeometryN(i$1);\n      this$1.updateLocationInfo(this$1.locateInternal(p, poly));\n    }\n  } else if (geom instanceof GeometryCollection) {\n    var geomi = new GeometryCollectionIterator(geom);\n    while (geomi.hasNext()) {\n      var g2 = geomi.next();\n      if (g2 !== geom) { this$1.computeLocation(p, g2); }\n    }\n  }\n};\nPointLocator.prototype.locate = function locate (p, geom) {\n  if (geom.isEmpty()) { return Location.EXTERIOR }\n  if (geom instanceof LineString) {\n    return this.locateInternal(p, geom)\n  } else if (geom instanceof Polygon) {\n    return this.locateInternal(p, geom)\n  }\n  this._isIn = false;\n  this._numBoundaries = 0;\n  this.computeLocation(p, geom);\n  if (this._boundaryRule.isInBoundary(this._numBoundaries)) { return Location.BOUNDARY }\n  if (this._numBoundaries > 0 || this._isIn) { return Location.INTERIOR }\n  return Location.EXTERIOR\n};\nPointLocator.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nPointLocator.prototype.getClass = function getClass () {\n  return PointLocator\n};\n\nvar GeometryLocation = function GeometryLocation () {\n  this._component = null;\n  this._segIndex = null;\n  this._pt = null;\n  if (arguments.length === 2) {\n    var component = arguments[0];\n    var pt = arguments[1];\n    GeometryLocation.call(this, component, GeometryLocation.INSIDE_AREA, pt);\n  } else if (arguments.length === 3) {\n    var component$1 = arguments[0];\n    var segIndex = arguments[1];\n    var pt$1 = arguments[2];\n    this._component = component$1;\n    this._segIndex = segIndex;\n    this._pt = pt$1;\n  }\n};\n\nvar staticAccessors$38 = { INSIDE_AREA: { configurable: true } };\nGeometryLocation.prototype.isInsideArea = function isInsideArea () {\n  return this._segIndex === GeometryLocation.INSIDE_AREA\n};\nGeometryLocation.prototype.getCoordinate = function getCoordinate () {\n  return this._pt\n};\nGeometryLocation.prototype.getGeometryComponent = function getGeometryComponent () {\n  return this._component\n};\nGeometryLocation.prototype.getSegmentIndex = function getSegmentIndex () {\n  return this._segIndex\n};\nGeometryLocation.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nGeometryLocation.prototype.getClass = function getClass () {\n  return GeometryLocation\n};\nstaticAccessors$38.INSIDE_AREA.get = function () { return -1 };\n\nObject.defineProperties( GeometryLocation, staticAccessors$38 );\n\nvar PointExtracter = function PointExtracter (pts) {\n  this._pts = pts || null;\n};\nPointExtracter.prototype.filter = function filter (geom) {\n  if (geom instanceof Point) { this._pts.add(geom); }\n};\nPointExtracter.prototype.interfaces_ = function interfaces_ () {\n  return [GeometryFilter]\n};\nPointExtracter.prototype.getClass = function getClass () {\n  return PointExtracter\n};\nPointExtracter.getPoints = function getPoints () {\n  if (arguments.length === 1) {\n    var geom = arguments[0];\n    if (geom instanceof Point) {\n      return Collections.singletonList(geom)\n    }\n    return PointExtracter.getPoints(geom, new ArrayList())\n  } else if (arguments.length === 2) {\n    var geom$1 = arguments[0];\n    var list = arguments[1];\n    if (geom$1 instanceof Point) {\n      list.add(geom$1);\n    } else if (geom$1 instanceof GeometryCollection) {\n      geom$1.apply(new PointExtracter(list));\n    }\n    return list\n  }\n};\n\nvar ConnectedElementLocationFilter = function ConnectedElementLocationFilter () {\n  this._locations = null;\n  var locations = arguments[0];\n  this._locations = locations;\n};\nConnectedElementLocationFilter.prototype.filter = function filter (geom) {\n  if (geom instanceof Point || geom instanceof LineString || geom instanceof Polygon) { this._locations.add(new GeometryLocation(geom, 0, geom.getCoordinate())); }\n};\nConnectedElementLocationFilter.prototype.interfaces_ = function interfaces_ () {\n  return [GeometryFilter]\n};\nConnectedElementLocationFilter.prototype.getClass = function getClass () {\n  return ConnectedElementLocationFilter\n};\nConnectedElementLocationFilter.getLocations = function getLocations (geom) {\n  var locations = new ArrayList();\n  geom.apply(new ConnectedElementLocationFilter(locations));\n  return locations\n};\n\nvar DistanceOp = function DistanceOp () {\n  this._geom = null;\n  this._terminateDistance = 0.0;\n  this._ptLocator = new PointLocator();\n  this._minDistanceLocation = null;\n  this._minDistance = Double.MAX_VALUE;\n  if (arguments.length === 2) {\n    var g0 = arguments[0];\n    var g1 = arguments[1];\n    this._geom = [g0, g1];\n    this._terminateDistance = 0.0;\n  } else if (arguments.length === 3) {\n    var g0$1 = arguments[0];\n    var g1$1 = arguments[1];\n    var terminateDistance = arguments[2];\n    this._geom = new Array(2).fill(null);\n    this._geom[0] = g0$1;\n    this._geom[1] = g1$1;\n    this._terminateDistance = terminateDistance;\n  }\n};\nDistanceOp.prototype.computeContainmentDistance = function computeContainmentDistance () {\n    var this$1 = this;\n\n  if (arguments.length === 0) {\n    var locPtPoly = new Array(2).fill(null);\n    this.computeContainmentDistance(0, locPtPoly);\n    if (this._minDistance <= this._terminateDistance) { return null }\n    this.computeContainmentDistance(1, locPtPoly);\n  } else if (arguments.length === 2) {\n    var polyGeomIndex = arguments[0];\n    var locPtPoly$1 = arguments[1];\n    var locationsIndex = 1 - polyGeomIndex;\n    var polys = PolygonExtracter.getPolygons(this._geom[polyGeomIndex]);\n    if (polys.size() > 0) {\n      var insideLocs = ConnectedElementLocationFilter.getLocations(this._geom[locationsIndex]);\n      this.computeContainmentDistance(insideLocs, polys, locPtPoly$1);\n      if (this._minDistance <= this._terminateDistance) {\n        this._minDistanceLocation[locationsIndex] = locPtPoly$1[0];\n        this._minDistanceLocation[polyGeomIndex] = locPtPoly$1[1];\n        return null\n      }\n    }\n  } else if (arguments.length === 3) {\n    if (arguments[2] instanceof Array && (hasInterface(arguments[0], List) && hasInterface(arguments[1], List))) {\n      var locs = arguments[0];\n      var polys$1 = arguments[1];\n      var locPtPoly$2 = arguments[2];\n      for (var i = 0; i < locs.size(); i++) {\n        var loc = locs.get(i);\n        for (var j = 0; j < polys$1.size(); j++) {\n          this$1.computeContainmentDistance(loc, polys$1.get(j), locPtPoly$2);\n          if (this$1._minDistance <= this$1._terminateDistance) { return null }\n        }\n      }\n    } else if (arguments[2] instanceof Array && (arguments[0] instanceof GeometryLocation && arguments[1] instanceof Polygon)) {\n      var ptLoc = arguments[0];\n      var poly = arguments[1];\n      var locPtPoly$3 = arguments[2];\n      var pt = ptLoc.getCoordinate();\n      if (Location.EXTERIOR !== this._ptLocator.locate(pt, poly)) {\n        this._minDistance = 0.0;\n        locPtPoly$3[0] = ptLoc;\n        locPtPoly$3[1] = new GeometryLocation(poly, pt);\n\n        return null\n      }\n    }\n  }\n};\nDistanceOp.prototype.computeMinDistanceLinesPoints = function computeMinDistanceLinesPoints (lines, points, locGeom) {\n    var this$1 = this;\n\n  for (var i = 0; i < lines.size(); i++) {\n    var line = lines.get(i);\n    for (var j = 0; j < points.size(); j++) {\n      var pt = points.get(j);\n      this$1.computeMinDistance(line, pt, locGeom);\n      if (this$1._minDistance <= this$1._terminateDistance) { return null }\n    }\n  }\n};\nDistanceOp.prototype.computeFacetDistance = function computeFacetDistance () {\n  var locGeom = new Array(2).fill(null);\n  var lines0 = LinearComponentExtracter.getLines(this._geom[0]);\n  var lines1 = LinearComponentExtracter.getLines(this._geom[1]);\n  var pts0 = PointExtracter.getPoints(this._geom[0]);\n  var pts1 = PointExtracter.getPoints(this._geom[1]);\n  this.computeMinDistanceLines(lines0, lines1, locGeom);\n  this.updateMinDistance(locGeom, false);\n  if (this._minDistance <= this._terminateDistance) { return null }\n  locGeom[0] = null;\n  locGeom[1] = null;\n  this.computeMinDistanceLinesPoints(lines0, pts1, locGeom);\n  this.updateMinDistance(locGeom, false);\n  if (this._minDistance <= this._terminateDistance) { return null }\n  locGeom[0] = null;\n  locGeom[1] = null;\n  this.computeMinDistanceLinesPoints(lines1, pts0, locGeom);\n  this.updateMinDistance(locGeom, true);\n  if (this._minDistance <= this._terminateDistance) { return null }\n  locGeom[0] = null;\n  locGeom[1] = null;\n  this.computeMinDistancePoints(pts0, pts1, locGeom);\n  this.updateMinDistance(locGeom, false);\n};\nDistanceOp.prototype.nearestLocations = function nearestLocations () {\n  this.computeMinDistance();\n  return this._minDistanceLocation\n};\nDistanceOp.prototype.updateMinDistance = function updateMinDistance (locGeom, flip) {\n  if (locGeom[0] === null) { return null }\n  if (flip) {\n    this._minDistanceLocation[0] = locGeom[1];\n    this._minDistanceLocation[1] = locGeom[0];\n  } else {\n    this._minDistanceLocation[0] = locGeom[0];\n    this._minDistanceLocation[1] = locGeom[1];\n  }\n};\nDistanceOp.prototype.nearestPoints = function nearestPoints () {\n  this.computeMinDistance();\n  var nearestPts = [this._minDistanceLocation[0].getCoordinate(), this._minDistanceLocation[1].getCoordinate()];\n  return nearestPts\n};\nDistanceOp.prototype.computeMinDistance = function computeMinDistance () {\n    var this$1 = this;\n\n  if (arguments.length === 0) {\n    if (this._minDistanceLocation !== null) { return null }\n    this._minDistanceLocation = new Array(2).fill(null);\n    this.computeContainmentDistance();\n    if (this._minDistance <= this._terminateDistance) { return null }\n    this.computeFacetDistance();\n  } else if (arguments.length === 3) {\n    if (arguments[2] instanceof Array && (arguments[0] instanceof LineString && arguments[1] instanceof Point)) {\n      var line = arguments[0];\n      var pt = arguments[1];\n      var locGeom = arguments[2];\n      if (line.getEnvelopeInternal().distance(pt.getEnvelopeInternal()) > this._minDistance) { return null }\n      var coord0 = line.getCoordinates();\n      var coord = pt.getCoordinate();\n      for (var i = 0; i < coord0.length - 1; i++) {\n        var dist = CGAlgorithms.distancePointLine(coord, coord0[i], coord0[i + 1]);\n        if (dist < this$1._minDistance) {\n          this$1._minDistance = dist;\n          var seg = new LineSegment(coord0[i], coord0[i + 1]);\n          var segClosestPoint = seg.closestPoint(coord);\n          locGeom[0] = new GeometryLocation(line, i, segClosestPoint);\n          locGeom[1] = new GeometryLocation(pt, 0, coord);\n        }\n        if (this$1._minDistance <= this$1._terminateDistance) { return null }\n      }\n    } else if (arguments[2] instanceof Array && (arguments[0] instanceof LineString && arguments[1] instanceof LineString)) {\n      var line0 = arguments[0];\n      var line1 = arguments[1];\n      var locGeom$1 = arguments[2];\n      if (line0.getEnvelopeInternal().distance(line1.getEnvelopeInternal()) > this._minDistance) { return null }\n      var coord0$1 = line0.getCoordinates();\n      var coord1 = line1.getCoordinates();\n      for (var i$1 = 0; i$1 < coord0$1.length - 1; i$1++) {\n        for (var j = 0; j < coord1.length - 1; j++) {\n          var dist$1 = CGAlgorithms.distanceLineLine(coord0$1[i$1], coord0$1[i$1 + 1], coord1[j], coord1[j + 1]);\n          if (dist$1 < this$1._minDistance) {\n            this$1._minDistance = dist$1;\n            var seg0 = new LineSegment(coord0$1[i$1], coord0$1[i$1 + 1]);\n            var seg1 = new LineSegment(coord1[j], coord1[j + 1]);\n            var closestPt = seg0.closestPoints(seg1);\n            locGeom$1[0] = new GeometryLocation(line0, i$1, closestPt[0]);\n            locGeom$1[1] = new GeometryLocation(line1, j, closestPt[1]);\n          }\n          if (this$1._minDistance <= this$1._terminateDistance) { return null }\n        }\n      }\n    }\n  }\n};\nDistanceOp.prototype.computeMinDistancePoints = function computeMinDistancePoints (points0, points1, locGeom) {\n    var this$1 = this;\n\n  for (var i = 0; i < points0.size(); i++) {\n    var pt0 = points0.get(i);\n    for (var j = 0; j < points1.size(); j++) {\n      var pt1 = points1.get(j);\n      var dist = pt0.getCoordinate().distance(pt1.getCoordinate());\n      if (dist < this$1._minDistance) {\n        this$1._minDistance = dist;\n        locGeom[0] = new GeometryLocation(pt0, 0, pt0.getCoordinate());\n        locGeom[1] = new GeometryLocation(pt1, 0, pt1.getCoordinate());\n      }\n      if (this$1._minDistance <= this$1._terminateDistance) { return null }\n    }\n  }\n};\nDistanceOp.prototype.distance = function distance () {\n  if (this._geom[0] === null || this._geom[1] === null) { throw new IllegalArgumentException('null geometries are not supported') }\n  if (this._geom[0].isEmpty() || this._geom[1].isEmpty()) { return 0.0 }\n  this.computeMinDistance();\n  return this._minDistance\n};\nDistanceOp.prototype.computeMinDistanceLines = function computeMinDistanceLines (lines0, lines1, locGeom) {\n    var this$1 = this;\n\n  for (var i = 0; i < lines0.size(); i++) {\n    var line0 = lines0.get(i);\n    for (var j = 0; j < lines1.size(); j++) {\n      var line1 = lines1.get(j);\n      this$1.computeMinDistance(line0, line1, locGeom);\n      if (this$1._minDistance <= this$1._terminateDistance) { return null }\n    }\n  }\n};\nDistanceOp.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nDistanceOp.prototype.getClass = function getClass () {\n  return DistanceOp\n};\nDistanceOp.distance = function distance (g0, g1) {\n  var distOp = new DistanceOp(g0, g1);\n  return distOp.distance()\n};\nDistanceOp.isWithinDistance = function isWithinDistance (g0, g1, distance) {\n  var distOp = new DistanceOp(g0, g1, distance);\n  return distOp.distance() <= distance\n};\nDistanceOp.nearestPoints = function nearestPoints (g0, g1) {\n  var distOp = new DistanceOp(g0, g1);\n  return distOp.nearestPoints()\n};\n\nvar PointPairDistance$2 = function PointPairDistance () {\n  this._pt = [new Coordinate(), new Coordinate()];\n  this._distance = Double.NaN;\n  this._isNull = true;\n};\nPointPairDistance$2.prototype.getCoordinates = function getCoordinates () {\n  return this._pt\n};\nPointPairDistance$2.prototype.getCoordinate = function getCoordinate (i) {\n  return this._pt[i]\n};\nPointPairDistance$2.prototype.setMinimum = function setMinimum () {\n  if (arguments.length === 1) {\n    var ptDist = arguments[0];\n    this.setMinimum(ptDist._pt[0], ptDist._pt[1]);\n  } else if (arguments.length === 2) {\n    var p0 = arguments[0];\n    var p1 = arguments[1];\n    if (this._isNull) {\n      this.initialize(p0, p1);\n      return null\n    }\n    var dist = p0.distance(p1);\n    if (dist < this._distance) { this.initialize(p0, p1, dist); }\n  }\n};\nPointPairDistance$2.prototype.initialize = function initialize () {\n  if (arguments.length === 0) {\n    this._isNull = true;\n  } else if (arguments.length === 2) {\n    var p0 = arguments[0];\n    var p1 = arguments[1];\n    this._pt[0].setCoordinate(p0);\n    this._pt[1].setCoordinate(p1);\n    this._distance = p0.distance(p1);\n    this._isNull = false;\n  } else if (arguments.length === 3) {\n    var p0$1 = arguments[0];\n    var p1$1 = arguments[1];\n    var distance = arguments[2];\n    this._pt[0].setCoordinate(p0$1);\n    this._pt[1].setCoordinate(p1$1);\n    this._distance = distance;\n    this._isNull = false;\n  }\n};\nPointPairDistance$2.prototype.toString = function toString () {\n  return WKTWriter.toLineString(this._pt[0], this._pt[1])\n};\nPointPairDistance$2.prototype.getDistance = function getDistance () {\n  return this._distance\n};\nPointPairDistance$2.prototype.setMaximum = function setMaximum () {\n  if (arguments.length === 1) {\n    var ptDist = arguments[0];\n    this.setMaximum(ptDist._pt[0], ptDist._pt[1]);\n  } else if (arguments.length === 2) {\n    var p0 = arguments[0];\n    var p1 = arguments[1];\n    if (this._isNull) {\n      this.initialize(p0, p1);\n      return null\n    }\n    var dist = p0.distance(p1);\n    if (dist > this._distance) { this.initialize(p0, p1, dist); }\n  }\n};\nPointPairDistance$2.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nPointPairDistance$2.prototype.getClass = function getClass () {\n  return PointPairDistance$2\n};\n\nvar DistanceToPoint = function DistanceToPoint () {};\n\nDistanceToPoint.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nDistanceToPoint.prototype.getClass = function getClass () {\n  return DistanceToPoint\n};\nDistanceToPoint.computeDistance = function computeDistance () {\n  if (arguments[2] instanceof PointPairDistance$2 && (arguments[0] instanceof LineString && arguments[1] instanceof Coordinate)) {\n    var line = arguments[0];\n    var pt = arguments[1];\n    var ptDist = arguments[2];\n    var tempSegment = new LineSegment();\n    var coords = line.getCoordinates();\n    for (var i = 0; i < coords.length - 1; i++) {\n      tempSegment.setCoordinates(coords[i], coords[i + 1]);\n      var closestPt = tempSegment.closestPoint(pt);\n      ptDist.setMinimum(closestPt, pt);\n    }\n  } else if (arguments[2] instanceof PointPairDistance$2 && (arguments[0] instanceof Polygon && arguments[1] instanceof Coordinate)) {\n    var poly = arguments[0];\n    var pt$1 = arguments[1];\n    var ptDist$1 = arguments[2];\n    DistanceToPoint.computeDistance(poly.getExteriorRing(), pt$1, ptDist$1);\n    for (var i$1 = 0; i$1 < poly.getNumInteriorRing(); i$1++) {\n      DistanceToPoint.computeDistance(poly.getInteriorRingN(i$1), pt$1, ptDist$1);\n    }\n  } else if (arguments[2] instanceof PointPairDistance$2 && (arguments[0] instanceof Geometry && arguments[1] instanceof Coordinate)) {\n    var geom = arguments[0];\n    var pt$2 = arguments[1];\n    var ptDist$2 = arguments[2];\n    if (geom instanceof LineString) {\n      DistanceToPoint.computeDistance(geom, pt$2, ptDist$2);\n    } else if (geom instanceof Polygon) {\n      DistanceToPoint.computeDistance(geom, pt$2, ptDist$2);\n    } else if (geom instanceof GeometryCollection) {\n      var gc = geom;\n      for (var i$2 = 0; i$2 < gc.getNumGeometries(); i$2++) {\n        var g = gc.getGeometryN(i$2);\n        DistanceToPoint.computeDistance(g, pt$2, ptDist$2);\n      }\n    } else {\n      ptDist$2.setMinimum(geom.getCoordinate(), pt$2);\n    }\n  } else if (arguments[2] instanceof PointPairDistance$2 && (arguments[0] instanceof LineSegment && arguments[1] instanceof Coordinate)) {\n    var segment = arguments[0];\n    var pt$3 = arguments[1];\n    var ptDist$3 = arguments[2];\n    var closestPt$1 = segment.closestPoint(pt$3);\n    ptDist$3.setMinimum(closestPt$1, pt$3);\n  }\n};\n\nvar DiscreteHausdorffDistance = function DiscreteHausdorffDistance () {\n  this._g0 = null;\n  this._g1 = null;\n  this._ptDist = new PointPairDistance$2();\n  this._densifyFrac = 0.0;\n  var g0 = arguments[0];\n  var g1 = arguments[1];\n  this._g0 = g0;\n  this._g1 = g1;\n};\n\nvar staticAccessors$39 = { MaxPointDistanceFilter: { configurable: true },MaxDensifiedByFractionDistanceFilter: { configurable: true } };\nDiscreteHausdorffDistance.prototype.getCoordinates = function getCoordinates () {\n  return this._ptDist.getCoordinates()\n};\nDiscreteHausdorffDistance.prototype.setDensifyFraction = function setDensifyFraction (densifyFrac) {\n  if (densifyFrac > 1.0 || densifyFrac <= 0.0) { throw new IllegalArgumentException('Fraction is not in range (0.0 - 1.0]') }\n  this._densifyFrac = densifyFrac;\n};\nDiscreteHausdorffDistance.prototype.compute = function compute (g0, g1) {\n  this.computeOrientedDistance(g0, g1, this._ptDist);\n  this.computeOrientedDistance(g1, g0, this._ptDist);\n};\nDiscreteHausdorffDistance.prototype.distance = function distance () {\n  this.compute(this._g0, this._g1);\n  return this._ptDist.getDistance()\n};\nDiscreteHausdorffDistance.prototype.computeOrientedDistance = function computeOrientedDistance (discreteGeom, geom, ptDist) {\n  var distFilter = new MaxPointDistanceFilter$1(geom);\n  discreteGeom.apply(distFilter);\n  ptDist.setMaximum(distFilter.getMaxPointDistance());\n  if (this._densifyFrac > 0) {\n    var fracFilter = new MaxDensifiedByFractionDistanceFilter(geom, this._densifyFrac);\n    discreteGeom.apply(fracFilter);\n    ptDist.setMaximum(fracFilter.getMaxPointDistance());\n  }\n};\nDiscreteHausdorffDistance.prototype.orientedDistance = function orientedDistance () {\n  this.computeOrientedDistance(this._g0, this._g1, this._ptDist);\n  return this._ptDist.getDistance()\n};\nDiscreteHausdorffDistance.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nDiscreteHausdorffDistance.prototype.getClass = function getClass () {\n  return DiscreteHausdorffDistance\n};\nDiscreteHausdorffDistance.distance = function distance () {\n  if (arguments.length === 2) {\n    var g0 = arguments[0];\n    var g1 = arguments[1];\n    var dist = new DiscreteHausdorffDistance(g0, g1);\n    return dist.distance()\n  } else if (arguments.length === 3) {\n    var g0$1 = arguments[0];\n    var g1$1 = arguments[1];\n    var densifyFrac = arguments[2];\n    var dist$1 = new DiscreteHausdorffDistance(g0$1, g1$1);\n    dist$1.setDensifyFraction(densifyFrac);\n    return dist$1.distance()\n  }\n};\nstaticAccessors$39.MaxPointDistanceFilter.get = function () { return MaxPointDistanceFilter$1 };\nstaticAccessors$39.MaxDensifiedByFractionDistanceFilter.get = function () { return MaxDensifiedByFractionDistanceFilter };\n\nObject.defineProperties( DiscreteHausdorffDistance, staticAccessors$39 );\n\nvar MaxPointDistanceFilter$1 = function MaxPointDistanceFilter () {\n  this._maxPtDist = new PointPairDistance$2();\n  this._minPtDist = new PointPairDistance$2();\n  this._euclideanDist = new DistanceToPoint();\n  this._geom = null;\n  var geom = arguments[0];\n  this._geom = geom;\n};\nMaxPointDistanceFilter$1.prototype.filter = function filter (pt) {\n  this._minPtDist.initialize();\n  DistanceToPoint.computeDistance(this._geom, pt, this._minPtDist);\n  this._maxPtDist.setMaximum(this._minPtDist);\n};\nMaxPointDistanceFilter$1.prototype.getMaxPointDistance = function getMaxPointDistance () {\n  return this._maxPtDist\n};\nMaxPointDistanceFilter$1.prototype.interfaces_ = function interfaces_ () {\n  return [CoordinateFilter]\n};\nMaxPointDistanceFilter$1.prototype.getClass = function getClass () {\n  return MaxPointDistanceFilter$1\n};\n\nvar MaxDensifiedByFractionDistanceFilter = function MaxDensifiedByFractionDistanceFilter () {\n  this._maxPtDist = new PointPairDistance$2();\n  this._minPtDist = new PointPairDistance$2();\n  this._geom = null;\n  this._numSubSegs = 0;\n  var geom = arguments[0];\n  var fraction = arguments[1];\n  this._geom = geom;\n  this._numSubSegs = Math.trunc(Math.round(1.0 / fraction));\n};\nMaxDensifiedByFractionDistanceFilter.prototype.filter = function filter (seq, index) {\n    var this$1 = this;\n\n  if (index === 0) { return null }\n  var p0 = seq.getCoordinate(index - 1);\n  var p1 = seq.getCoordinate(index);\n  var delx = (p1.x - p0.x) / this._numSubSegs;\n  var dely = (p1.y - p0.y) / this._numSubSegs;\n  for (var i = 0; i < this._numSubSegs; i++) {\n    var x = p0.x + i * delx;\n    var y = p0.y + i * dely;\n    var pt = new Coordinate(x, y);\n    this$1._minPtDist.initialize();\n    DistanceToPoint.computeDistance(this$1._geom, pt, this$1._minPtDist);\n    this$1._maxPtDist.setMaximum(this$1._minPtDist);\n  }\n};\nMaxDensifiedByFractionDistanceFilter.prototype.isDone = function isDone () {\n  return false\n};\nMaxDensifiedByFractionDistanceFilter.prototype.isGeometryChanged = function isGeometryChanged () {\n  return false\n};\nMaxDensifiedByFractionDistanceFilter.prototype.getMaxPointDistance = function getMaxPointDistance () {\n  return this._maxPtDist\n};\nMaxDensifiedByFractionDistanceFilter.prototype.interfaces_ = function interfaces_ () {\n  return [CoordinateSequenceFilter]\n};\nMaxDensifiedByFractionDistanceFilter.prototype.getClass = function getClass () {\n  return MaxDensifiedByFractionDistanceFilter\n};\n\nvar BufferDistanceValidator = function BufferDistanceValidator (input, bufDistance, result) {\n  this._minValidDistance = null;\n  this._maxValidDistance = null;\n  this._minDistanceFound = null;\n  this._maxDistanceFound = null;\n  this._isValid = true;\n  this._errMsg = null;\n  this._errorLocation = null;\n  this._errorIndicator = null;\n  this._input = input || null;\n  this._bufDistance = bufDistance || null;\n  this._result = result || null;\n};\n\nvar staticAccessors$37 = { VERBOSE: { configurable: true },MAX_DISTANCE_DIFF_FRAC: { configurable: true } };\nBufferDistanceValidator.prototype.checkMaximumDistance = function checkMaximumDistance (input, bufCurve, maxDist) {\n  var haus = new DiscreteHausdorffDistance(bufCurve, input);\n  haus.setDensifyFraction(0.25);\n  this._maxDistanceFound = haus.orientedDistance();\n  if (this._maxDistanceFound > maxDist) {\n    this._isValid = false;\n    var pts = haus.getCoordinates();\n    this._errorLocation = pts[1];\n    this._errorIndicator = input.getFactory().createLineString(pts);\n    this._errMsg = 'Distance between buffer curve and input is too large (' + this._maxDistanceFound + ' at ' + WKTWriter.toLineString(pts[0], pts[1]) + ')';\n  }\n};\nBufferDistanceValidator.prototype.isValid = function isValid () {\n  var posDistance = Math.abs(this._bufDistance);\n  var distDelta = BufferDistanceValidator.MAX_DISTANCE_DIFF_FRAC * posDistance;\n  this._minValidDistance = posDistance - distDelta;\n  this._maxValidDistance = posDistance + distDelta;\n  if (this._input.isEmpty() || this._result.isEmpty()) { return true }\n  if (this._bufDistance > 0.0) {\n    this.checkPositiveValid();\n  } else {\n    this.checkNegativeValid();\n  }\n  if (BufferDistanceValidator.VERBOSE) {\n    System.out.println('Min Dist= ' + this._minDistanceFound + '  err= ' + (1.0 - this._minDistanceFound / this._bufDistance) + '  Max Dist= ' + this._maxDistanceFound + '  err= ' + (this._maxDistanceFound / this._bufDistance - 1.0));\n  }\n  return this._isValid\n};\nBufferDistanceValidator.prototype.checkNegativeValid = function checkNegativeValid () {\n  if (!(this._input instanceof Polygon || this._input instanceof MultiPolygon || this._input instanceof GeometryCollection)) {\n    return null\n  }\n  var inputCurve = this.getPolygonLines(this._input);\n  this.checkMinimumDistance(inputCurve, this._result, this._minValidDistance);\n  if (!this._isValid) { return null }\n  this.checkMaximumDistance(inputCurve, this._result, this._maxValidDistance);\n};\nBufferDistanceValidator.prototype.getErrorIndicator = function getErrorIndicator () {\n  return this._errorIndicator\n};\nBufferDistanceValidator.prototype.checkMinimumDistance = function checkMinimumDistance (g1, g2, minDist) {\n  var distOp = new DistanceOp(g1, g2, minDist);\n  this._minDistanceFound = distOp.distance();\n  if (this._minDistanceFound < minDist) {\n    this._isValid = false;\n    var pts = distOp.nearestPoints();\n    this._errorLocation = distOp.nearestPoints()[1];\n    this._errorIndicator = g1.getFactory().createLineString(pts);\n    this._errMsg = 'Distance between buffer curve and input is too small (' + this._minDistanceFound + ' at ' + WKTWriter.toLineString(pts[0], pts[1]) + ' )';\n  }\n};\nBufferDistanceValidator.prototype.checkPositiveValid = function checkPositiveValid () {\n  var bufCurve = this._result.getBoundary();\n  this.checkMinimumDistance(this._input, bufCurve, this._minValidDistance);\n  if (!this._isValid) { return null }\n  this.checkMaximumDistance(this._input, bufCurve, this._maxValidDistance);\n};\nBufferDistanceValidator.prototype.getErrorLocation = function getErrorLocation () {\n  return this._errorLocation\n};\nBufferDistanceValidator.prototype.getPolygonLines = function getPolygonLines (g) {\n  var lines = new ArrayList();\n  var lineExtracter = new LinearComponentExtracter(lines);\n  var polys = PolygonExtracter.getPolygons(g);\n  for (var i = polys.iterator(); i.hasNext();) {\n    var poly = i.next();\n    poly.apply(lineExtracter);\n  }\n  return g.getFactory().buildGeometry(lines)\n};\nBufferDistanceValidator.prototype.getErrorMessage = function getErrorMessage () {\n  return this._errMsg\n};\nBufferDistanceValidator.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nBufferDistanceValidator.prototype.getClass = function getClass () {\n  return BufferDistanceValidator\n};\nstaticAccessors$37.VERBOSE.get = function () { return false };\nstaticAccessors$37.MAX_DISTANCE_DIFF_FRAC.get = function () { return 0.012 };\n\nObject.defineProperties( BufferDistanceValidator, staticAccessors$37 );\n\nvar BufferResultValidator = function BufferResultValidator (input, distance, result) {\n  this._isValid = true;\n  this._errorMsg = null;\n  this._errorLocation = null;\n  this._errorIndicator = null;\n  this._input = input || null;\n  this._distance = distance || null;\n  this._result = result || null;\n};\n\nvar staticAccessors$40 = { VERBOSE: { configurable: true },MAX_ENV_DIFF_FRAC: { configurable: true } };\nBufferResultValidator.prototype.isValid = function isValid () {\n  this.checkPolygonal();\n  if (!this._isValid) { return this._isValid }\n  this.checkExpectedEmpty();\n  if (!this._isValid) { return this._isValid }\n  this.checkEnvelope();\n  if (!this._isValid) { return this._isValid }\n  this.checkArea();\n  if (!this._isValid) { return this._isValid }\n  this.checkDistance();\n  return this._isValid\n};\nBufferResultValidator.prototype.checkEnvelope = function checkEnvelope () {\n  if (this._distance < 0.0) { return null }\n  var padding = this._distance * BufferResultValidator.MAX_ENV_DIFF_FRAC;\n  if (padding === 0.0) { padding = 0.001; }\n  var expectedEnv = new Envelope(this._input.getEnvelopeInternal());\n  expectedEnv.expandBy(this._distance);\n  var bufEnv = new Envelope(this._result.getEnvelopeInternal());\n  bufEnv.expandBy(padding);\n  if (!bufEnv.contains(expectedEnv)) {\n    this._isValid = false;\n    this._errorMsg = 'Buffer envelope is incorrect';\n    this._errorIndicator = this._input.getFactory().toGeometry(bufEnv);\n  }\n  this.report('Envelope');\n};\nBufferResultValidator.prototype.checkDistance = function checkDistance () {\n  var distValid = new BufferDistanceValidator(this._input, this._distance, this._result);\n  if (!distValid.isValid()) {\n    this._isValid = false;\n    this._errorMsg = distValid.getErrorMessage();\n    this._errorLocation = distValid.getErrorLocation();\n    this._errorIndicator = distValid.getErrorIndicator();\n  }\n  this.report('Distance');\n};\nBufferResultValidator.prototype.checkArea = function checkArea () {\n  var inputArea = this._input.getArea();\n  var resultArea = this._result.getArea();\n  if (this._distance > 0.0 && inputArea > resultArea) {\n    this._isValid = false;\n    this._errorMsg = 'Area of positive buffer is smaller than input';\n    this._errorIndicator = this._result;\n  }\n  if (this._distance < 0.0 && inputArea < resultArea) {\n    this._isValid = false;\n    this._errorMsg = 'Area of negative buffer is larger than input';\n    this._errorIndicator = this._result;\n  }\n  this.report('Area');\n};\nBufferResultValidator.prototype.checkPolygonal = function checkPolygonal () {\n  if (!(this._result instanceof Polygon || this._result instanceof MultiPolygon)) { this._isValid = false; }\n  this._errorMsg = 'Result is not polygonal';\n  this._errorIndicator = this._result;\n  this.report('Polygonal');\n};\nBufferResultValidator.prototype.getErrorIndicator = function getErrorIndicator () {\n  return this._errorIndicator\n};\nBufferResultValidator.prototype.getErrorLocation = function getErrorLocation () {\n  return this._errorLocation\n};\nBufferResultValidator.prototype.checkExpectedEmpty = function checkExpectedEmpty () {\n  if (this._input.getDimension() >= 2) { return null }\n  if (this._distance > 0.0) { return null }\n  if (!this._result.isEmpty()) {\n    this._isValid = false;\n    this._errorMsg = 'Result is non-empty';\n    this._errorIndicator = this._result;\n  }\n  this.report('ExpectedEmpty');\n};\nBufferResultValidator.prototype.report = function report (checkName) {\n  if (!BufferResultValidator.VERBOSE) { return null }\n  System.out.println('Check ' + checkName + ': ' + (this._isValid ? 'passed' : 'FAILED'));\n};\nBufferResultValidator.prototype.getErrorMessage = function getErrorMessage () {\n  return this._errorMsg\n};\nBufferResultValidator.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nBufferResultValidator.prototype.getClass = function getClass () {\n  return BufferResultValidator\n};\nBufferResultValidator.isValidMsg = function isValidMsg (g, distance, result) {\n  var validator = new BufferResultValidator(g, distance, result);\n  if (!validator.isValid()) { return validator.getErrorMessage() }\n  return null\n};\nBufferResultValidator.isValid = function isValid (g, distance, result) {\n  var validator = new BufferResultValidator(g, distance, result);\n  if (validator.isValid()) { return true }\n  return false\n};\nstaticAccessors$40.VERBOSE.get = function () { return false };\nstaticAccessors$40.MAX_ENV_DIFF_FRAC.get = function () { return 0.012 };\n\nObject.defineProperties( BufferResultValidator, staticAccessors$40 );\n\n// operation.buffer\n\nvar BasicSegmentString = function BasicSegmentString () {\n  this._pts = null;\n  this._data = null;\n  var pts = arguments[0];\n  var data = arguments[1];\n  this._pts = pts;\n  this._data = data;\n};\nBasicSegmentString.prototype.getCoordinates = function getCoordinates () {\n  return this._pts\n};\nBasicSegmentString.prototype.size = function size () {\n  return this._pts.length\n};\nBasicSegmentString.prototype.getCoordinate = function getCoordinate (i) {\n  return this._pts[i]\n};\nBasicSegmentString.prototype.isClosed = function isClosed () {\n  return this._pts[0].equals(this._pts[this._pts.length - 1])\n};\nBasicSegmentString.prototype.getSegmentOctant = function getSegmentOctant (index) {\n  if (index === this._pts.length - 1) { return -1 }\n  return Octant.octant(this.getCoordinate(index), this.getCoordinate(index + 1))\n};\nBasicSegmentString.prototype.setData = function setData (data) {\n  this._data = data;\n};\nBasicSegmentString.prototype.getData = function getData () {\n  return this._data\n};\nBasicSegmentString.prototype.toString = function toString () {\n  return WKTWriter.toLineString(new CoordinateArraySequence(this._pts))\n};\nBasicSegmentString.prototype.interfaces_ = function interfaces_ () {\n  return [SegmentString]\n};\nBasicSegmentString.prototype.getClass = function getClass () {\n  return BasicSegmentString\n};\n\nvar InteriorIntersectionFinder = function InteriorIntersectionFinder () {\n  this._findAllIntersections = false;\n  this._isCheckEndSegmentsOnly = false;\n  this._li = null;\n  this._interiorIntersection = null;\n  this._intSegments = null;\n  this._intersections = new ArrayList();\n  this._intersectionCount = 0;\n  this._keepIntersections = true;\n  var li = arguments[0];\n  this._li = li;\n  this._interiorIntersection = null;\n};\nInteriorIntersectionFinder.prototype.getInteriorIntersection = function getInteriorIntersection () {\n  return this._interiorIntersection\n};\nInteriorIntersectionFinder.prototype.setCheckEndSegmentsOnly = function setCheckEndSegmentsOnly (isCheckEndSegmentsOnly) {\n  this._isCheckEndSegmentsOnly = isCheckEndSegmentsOnly;\n};\nInteriorIntersectionFinder.prototype.getIntersectionSegments = function getIntersectionSegments () {\n  return this._intSegments\n};\nInteriorIntersectionFinder.prototype.count = function count () {\n  return this._intersectionCount\n};\nInteriorIntersectionFinder.prototype.getIntersections = function getIntersections () {\n  return this._intersections\n};\nInteriorIntersectionFinder.prototype.setFindAllIntersections = function setFindAllIntersections (findAllIntersections) {\n  this._findAllIntersections = findAllIntersections;\n};\nInteriorIntersectionFinder.prototype.setKeepIntersections = function setKeepIntersections (keepIntersections) {\n  this._keepIntersections = keepIntersections;\n};\nInteriorIntersectionFinder.prototype.processIntersections = function processIntersections (e0, segIndex0, e1, segIndex1) {\n  if (!this._findAllIntersections && this.hasIntersection()) { return null }\n  if (e0 === e1 && segIndex0 === segIndex1) { return null }\n  if (this._isCheckEndSegmentsOnly) {\n    var isEndSegPresent = this.isEndSegment(e0, segIndex0) || this.isEndSegment(e1, segIndex1);\n    if (!isEndSegPresent) { return null }\n  }\n  var p00 = e0.getCoordinates()[segIndex0];\n  var p01 = e0.getCoordinates()[segIndex0 + 1];\n  var p10 = e1.getCoordinates()[segIndex1];\n  var p11 = e1.getCoordinates()[segIndex1 + 1];\n  this._li.computeIntersection(p00, p01, p10, p11);\n  if (this._li.hasIntersection()) {\n    if (this._li.isInteriorIntersection()) {\n      this._intSegments = new Array(4).fill(null);\n      this._intSegments[0] = p00;\n      this._intSegments[1] = p01;\n      this._intSegments[2] = p10;\n      this._intSegments[3] = p11;\n      this._interiorIntersection = this._li.getIntersection(0);\n      if (this._keepIntersections) { this._intersections.add(this._interiorIntersection); }\n      this._intersectionCount++;\n    }\n  }\n};\nInteriorIntersectionFinder.prototype.isEndSegment = function isEndSegment (segStr, index) {\n  if (index === 0) { return true }\n  if (index >= segStr.size() - 2) { return true }\n  return false\n};\nInteriorIntersectionFinder.prototype.hasIntersection = function hasIntersection () {\n  return this._interiorIntersection !== null\n};\nInteriorIntersectionFinder.prototype.isDone = function isDone () {\n  if (this._findAllIntersections) { return false }\n  return this._interiorIntersection !== null\n};\nInteriorIntersectionFinder.prototype.interfaces_ = function interfaces_ () {\n  return [SegmentIntersector]\n};\nInteriorIntersectionFinder.prototype.getClass = function getClass () {\n  return InteriorIntersectionFinder\n};\nInteriorIntersectionFinder.createAllIntersectionsFinder = function createAllIntersectionsFinder (li) {\n  var finder = new InteriorIntersectionFinder(li);\n  finder.setFindAllIntersections(true);\n  return finder\n};\nInteriorIntersectionFinder.createAnyIntersectionFinder = function createAnyIntersectionFinder (li) {\n  return new InteriorIntersectionFinder(li)\n};\nInteriorIntersectionFinder.createIntersectionCounter = function createIntersectionCounter (li) {\n  var finder = new InteriorIntersectionFinder(li);\n  finder.setFindAllIntersections(true);\n  finder.setKeepIntersections(false);\n  return finder\n};\n\nvar FastNodingValidator = function FastNodingValidator () {\n  this._li = new RobustLineIntersector();\n  this._segStrings = null;\n  this._findAllIntersections = false;\n  this._segInt = null;\n  this._isValid = true;\n  var segStrings = arguments[0];\n  this._segStrings = segStrings;\n};\nFastNodingValidator.prototype.execute = function execute () {\n  if (this._segInt !== null) { return null }\n  this.checkInteriorIntersections();\n};\nFastNodingValidator.prototype.getIntersections = function getIntersections () {\n  return this._segInt.getIntersections()\n};\nFastNodingValidator.prototype.isValid = function isValid () {\n  this.execute();\n  return this._isValid\n};\nFastNodingValidator.prototype.setFindAllIntersections = function setFindAllIntersections (findAllIntersections) {\n  this._findAllIntersections = findAllIntersections;\n};\nFastNodingValidator.prototype.checkInteriorIntersections = function checkInteriorIntersections () {\n  this._isValid = true;\n  this._segInt = new InteriorIntersectionFinder(this._li);\n  this._segInt.setFindAllIntersections(this._findAllIntersections);\n  var noder = new MCIndexNoder();\n  noder.setSegmentIntersector(this._segInt);\n  noder.computeNodes(this._segStrings);\n  if (this._segInt.hasIntersection()) {\n    this._isValid = false;\n    return null\n  }\n};\nFastNodingValidator.prototype.checkValid = function checkValid () {\n  this.execute();\n  if (!this._isValid) { throw new TopologyException(this.getErrorMessage(), this._segInt.getInteriorIntersection()) }\n};\nFastNodingValidator.prototype.getErrorMessage = function getErrorMessage () {\n  if (this._isValid) { return 'no intersections found' }\n  var intSegs = this._segInt.getIntersectionSegments();\n  return 'found non-noded intersection between ' + WKTWriter.toLineString(intSegs[0], intSegs[1]) + ' and ' + WKTWriter.toLineString(intSegs[2], intSegs[3])\n};\nFastNodingValidator.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nFastNodingValidator.prototype.getClass = function getClass () {\n  return FastNodingValidator\n};\nFastNodingValidator.computeIntersections = function computeIntersections (segStrings) {\n  var nv = new FastNodingValidator(segStrings);\n  nv.setFindAllIntersections(true);\n  nv.isValid();\n  return nv.getIntersections()\n};\n\nvar EdgeNodingValidator = function EdgeNodingValidator () {\n  this._nv = null;\n  var edges = arguments[0];\n  this._nv = new FastNodingValidator(EdgeNodingValidator.toSegmentStrings(edges));\n};\nEdgeNodingValidator.prototype.checkValid = function checkValid () {\n  this._nv.checkValid();\n};\nEdgeNodingValidator.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nEdgeNodingValidator.prototype.getClass = function getClass () {\n  return EdgeNodingValidator\n};\nEdgeNodingValidator.toSegmentStrings = function toSegmentStrings (edges) {\n  var segStrings = new ArrayList();\n  for (var i = edges.iterator(); i.hasNext();) {\n    var e = i.next();\n    segStrings.add(new BasicSegmentString(e.getCoordinates(), e));\n  }\n  return segStrings\n};\nEdgeNodingValidator.checkValid = function checkValid (edges) {\n  var validator = new EdgeNodingValidator(edges);\n  validator.checkValid();\n};\n\nvar GeometryCollectionMapper = function GeometryCollectionMapper (mapOp) {\n  this._mapOp = mapOp;\n};\nGeometryCollectionMapper.prototype.map = function map (gc) {\n    var this$1 = this;\n\n  var mapped = new ArrayList();\n  for (var i = 0; i < gc.getNumGeometries(); i++) {\n    var g = this$1._mapOp.map(gc.getGeometryN(i));\n    if (!g.isEmpty()) { mapped.add(g); }\n  }\n  return gc.getFactory().createGeometryCollection(GeometryFactory.toGeometryArray(mapped))\n};\nGeometryCollectionMapper.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nGeometryCollectionMapper.prototype.getClass = function getClass () {\n  return GeometryCollectionMapper\n};\nGeometryCollectionMapper.map = function map (gc, op) {\n  var mapper = new GeometryCollectionMapper(op);\n  return mapper.map(gc)\n};\n\nvar LineBuilder = function LineBuilder () {\n  this._op = null;\n  this._geometryFactory = null;\n  this._ptLocator = null;\n  this._lineEdgesList = new ArrayList();\n  this._resultLineList = new ArrayList();\n  var op = arguments[0];\n  var geometryFactory = arguments[1];\n  var ptLocator = arguments[2];\n  this._op = op;\n  this._geometryFactory = geometryFactory;\n  this._ptLocator = ptLocator;\n};\nLineBuilder.prototype.collectLines = function collectLines (opCode) {\n    var this$1 = this;\n\n  for (var it = this._op.getGraph().getEdgeEnds().iterator(); it.hasNext();) {\n    var de = it.next();\n    this$1.collectLineEdge(de, opCode, this$1._lineEdgesList);\n    this$1.collectBoundaryTouchEdge(de, opCode, this$1._lineEdgesList);\n  }\n};\nLineBuilder.prototype.labelIsolatedLine = function labelIsolatedLine (e, targetIndex) {\n  var loc = this._ptLocator.locate(e.getCoordinate(), this._op.getArgGeometry(targetIndex));\n  e.getLabel().setLocation(targetIndex, loc);\n};\nLineBuilder.prototype.build = function build (opCode) {\n  this.findCoveredLineEdges();\n  this.collectLines(opCode);\n  this.buildLines(opCode);\n  return this._resultLineList\n};\nLineBuilder.prototype.collectLineEdge = function collectLineEdge (de, opCode, edges) {\n  var label = de.getLabel();\n  var e = de.getEdge();\n  if (de.isLineEdge()) {\n    if (!de.isVisited() && OverlayOp.isResultOfOp(label, opCode) && !e.isCovered()) {\n      edges.add(e);\n      de.setVisitedEdge(true);\n    }\n  }\n};\nLineBuilder.prototype.findCoveredLineEdges = function findCoveredLineEdges () {\n    var this$1 = this;\n\n  for (var nodeit = this._op.getGraph().getNodes().iterator(); nodeit.hasNext();) {\n    var node = nodeit.next();\n    node.getEdges().findCoveredLineEdges();\n  }\n  for (var it = this._op.getGraph().getEdgeEnds().iterator(); it.hasNext();) {\n    var de = it.next();\n    var e = de.getEdge();\n    if (de.isLineEdge() && !e.isCoveredSet()) {\n      var isCovered = this$1._op.isCoveredByA(de.getCoordinate());\n      e.setCovered(isCovered);\n    }\n  }\n};\nLineBuilder.prototype.labelIsolatedLines = function labelIsolatedLines (edgesList) {\n    var this$1 = this;\n\n  for (var it = edgesList.iterator(); it.hasNext();) {\n    var e = it.next();\n    var label = e.getLabel();\n    if (e.isIsolated()) {\n      if (label.isNull(0)) { this$1.labelIsolatedLine(e, 0); } else { this$1.labelIsolatedLine(e, 1); }\n    }\n  }\n};\nLineBuilder.prototype.buildLines = function buildLines (opCode) {\n    var this$1 = this;\n\n  for (var it = this._lineEdgesList.iterator(); it.hasNext();) {\n    var e = it.next();\n    // const label = e.getLabel()\n    var line = this$1._geometryFactory.createLineString(e.getCoordinates());\n    this$1._resultLineList.add(line);\n    e.setInResult(true);\n  }\n};\nLineBuilder.prototype.collectBoundaryTouchEdge = function collectBoundaryTouchEdge (de, opCode, edges) {\n  var label = de.getLabel();\n  if (de.isLineEdge()) { return null }\n  if (de.isVisited()) { return null }\n  if (de.isInteriorAreaEdge()) { return null }\n  if (de.getEdge().isInResult()) { return null }\n  Assert.isTrue(!(de.isInResult() || de.getSym().isInResult()) || !de.getEdge().isInResult());\n  if (OverlayOp.isResultOfOp(label, opCode) && opCode === OverlayOp.INTERSECTION) {\n    edges.add(de.getEdge());\n    de.setVisitedEdge(true);\n  }\n};\nLineBuilder.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nLineBuilder.prototype.getClass = function getClass () {\n  return LineBuilder\n};\n\nvar PointBuilder = function PointBuilder () {\n  this._op = null;\n  this._geometryFactory = null;\n  this._resultPointList = new ArrayList();\n  var op = arguments[0];\n  var geometryFactory = arguments[1];\n  // const ptLocator = arguments[2]\n  this._op = op;\n  this._geometryFactory = geometryFactory;\n};\nPointBuilder.prototype.filterCoveredNodeToPoint = function filterCoveredNodeToPoint (n) {\n  var coord = n.getCoordinate();\n  if (!this._op.isCoveredByLA(coord)) {\n    var pt = this._geometryFactory.createPoint(coord);\n    this._resultPointList.add(pt);\n  }\n};\nPointBuilder.prototype.extractNonCoveredResultNodes = function extractNonCoveredResultNodes (opCode) {\n    var this$1 = this;\n\n  for (var nodeit = this._op.getGraph().getNodes().iterator(); nodeit.hasNext();) {\n    var n = nodeit.next();\n    if (n.isInResult()) { continue }\n    if (n.isIncidentEdgeInResult()) { continue }\n    if (n.getEdges().getDegree() === 0 || opCode === OverlayOp.INTERSECTION) {\n      var label = n.getLabel();\n      if (OverlayOp.isResultOfOp(label, opCode)) {\n        this$1.filterCoveredNodeToPoint(n);\n      }\n    }\n  }\n};\nPointBuilder.prototype.build = function build (opCode) {\n  this.extractNonCoveredResultNodes(opCode);\n  return this._resultPointList\n};\nPointBuilder.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nPointBuilder.prototype.getClass = function getClass () {\n  return PointBuilder\n};\n\nvar GeometryTransformer = function GeometryTransformer () {\n  this._inputGeom = null;\n  this._factory = null;\n  this._pruneEmptyGeometry = true;\n  this._preserveGeometryCollectionType = true;\n  this._preserveCollections = false;\n  this._preserveType = false;\n};\nGeometryTransformer.prototype.transformPoint = function transformPoint (geom, parent) {\n  return this._factory.createPoint(this.transformCoordinates(geom.getCoordinateSequence(), geom))\n};\nGeometryTransformer.prototype.transformPolygon = function transformPolygon (geom, parent) {\n    var this$1 = this;\n\n  var isAllValidLinearRings = true;\n  var shell = this.transformLinearRing(geom.getExteriorRing(), geom);\n  if (shell === null || !(shell instanceof LinearRing) || shell.isEmpty()) { isAllValidLinearRings = false; }\n  var holes = new ArrayList();\n  for (var i = 0; i < geom.getNumInteriorRing(); i++) {\n    var hole = this$1.transformLinearRing(geom.getInteriorRingN(i), geom);\n    if (hole === null || hole.isEmpty()) {\n      continue\n    }\n    if (!(hole instanceof LinearRing)) { isAllValidLinearRings = false; }\n    holes.add(hole);\n  }\n  if (isAllValidLinearRings) { return this._factory.createPolygon(shell, holes.toArray([])); } else {\n    var components = new ArrayList();\n    if (shell !== null) { components.add(shell); }\n    components.addAll(holes);\n    return this._factory.buildGeometry(components)\n  }\n};\nGeometryTransformer.prototype.createCoordinateSequence = function createCoordinateSequence (coords) {\n  return this._factory.getCoordinateSequenceFactory().create(coords)\n};\nGeometryTransformer.prototype.getInputGeometry = function getInputGeometry () {\n  return this._inputGeom\n};\nGeometryTransformer.prototype.transformMultiLineString = function transformMultiLineString (geom, parent) {\n    var this$1 = this;\n\n  var transGeomList = new ArrayList();\n  for (var i = 0; i < geom.getNumGeometries(); i++) {\n    var transformGeom = this$1.transformLineString(geom.getGeometryN(i), geom);\n    if (transformGeom === null) { continue }\n    if (transformGeom.isEmpty()) { continue }\n    transGeomList.add(transformGeom);\n  }\n  return this._factory.buildGeometry(transGeomList)\n};\nGeometryTransformer.prototype.transformCoordinates = function transformCoordinates (coords, parent) {\n  return this.copy(coords)\n};\nGeometryTransformer.prototype.transformLineString = function transformLineString (geom, parent) {\n  return this._factory.createLineString(this.transformCoordinates(geom.getCoordinateSequence(), geom))\n};\nGeometryTransformer.prototype.transformMultiPoint = function transformMultiPoint (geom, parent) {\n    var this$1 = this;\n\n  var transGeomList = new ArrayList();\n  for (var i = 0; i < geom.getNumGeometries(); i++) {\n    var transformGeom = this$1.transformPoint(geom.getGeometryN(i), geom);\n    if (transformGeom === null) { continue }\n    if (transformGeom.isEmpty()) { continue }\n    transGeomList.add(transformGeom);\n  }\n  return this._factory.buildGeometry(transGeomList)\n};\nGeometryTransformer.prototype.transformMultiPolygon = function transformMultiPolygon (geom, parent) {\n    var this$1 = this;\n\n  var transGeomList = new ArrayList();\n  for (var i = 0; i < geom.getNumGeometries(); i++) {\n    var transformGeom = this$1.transformPolygon(geom.getGeometryN(i), geom);\n    if (transformGeom === null) { continue }\n    if (transformGeom.isEmpty()) { continue }\n    transGeomList.add(transformGeom);\n  }\n  return this._factory.buildGeometry(transGeomList)\n};\nGeometryTransformer.prototype.copy = function copy (seq) {\n  return seq.copy()\n};\nGeometryTransformer.prototype.transformGeometryCollection = function transformGeometryCollection (geom, parent) {\n    var this$1 = this;\n\n  var transGeomList = new ArrayList();\n  for (var i = 0; i < geom.getNumGeometries(); i++) {\n    var transformGeom = this$1.transform(geom.getGeometryN(i));\n    if (transformGeom === null) { continue }\n    if (this$1._pruneEmptyGeometry && transformGeom.isEmpty()) { continue }\n    transGeomList.add(transformGeom);\n  }\n  if (this._preserveGeometryCollectionType) { return this._factory.createGeometryCollection(GeometryFactory.toGeometryArray(transGeomList)) }\n  return this._factory.buildGeometry(transGeomList)\n};\nGeometryTransformer.prototype.transform = function transform (inputGeom) {\n  this._inputGeom = inputGeom;\n  this._factory = inputGeom.getFactory();\n  if (inputGeom instanceof Point) { return this.transformPoint(inputGeom, null) }\n  if (inputGeom instanceof MultiPoint) { return this.transformMultiPoint(inputGeom, null) }\n  if (inputGeom instanceof LinearRing) { return this.transformLinearRing(inputGeom, null) }\n  if (inputGeom instanceof LineString) { return this.transformLineString(inputGeom, null) }\n  if (inputGeom instanceof MultiLineString) { return this.transformMultiLineString(inputGeom, null) }\n  if (inputGeom instanceof Polygon) { return this.transformPolygon(inputGeom, null) }\n  if (inputGeom instanceof MultiPolygon) { return this.transformMultiPolygon(inputGeom, null) }\n  if (inputGeom instanceof GeometryCollection) { return this.transformGeometryCollection(inputGeom, null) }\n  throw new IllegalArgumentException('Unknown Geometry subtype: ' + inputGeom.getClass().getName())\n};\nGeometryTransformer.prototype.transformLinearRing = function transformLinearRing (geom, parent) {\n  var seq = this.transformCoordinates(geom.getCoordinateSequence(), geom);\n  if (seq === null) { return this._factory.createLinearRing(null) }\n  var seqSize = seq.size();\n  if (seqSize > 0 && seqSize < 4 && !this._preserveType) { return this._factory.createLineString(seq) }\n  return this._factory.createLinearRing(seq)\n};\nGeometryTransformer.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nGeometryTransformer.prototype.getClass = function getClass () {\n  return GeometryTransformer\n};\n\nvar LineStringSnapper = function LineStringSnapper () {\n  this._snapTolerance = 0.0;\n  this._srcPts = null;\n  this._seg = new LineSegment();\n  this._allowSnappingToSourceVertices = false;\n  this._isClosed = false;\n  if (arguments[0] instanceof LineString && typeof arguments[1] === 'number') {\n    var srcLine = arguments[0];\n    var snapTolerance = arguments[1];\n    LineStringSnapper.call(this, srcLine.getCoordinates(), snapTolerance);\n  } else if (arguments[0] instanceof Array && typeof arguments[1] === 'number') {\n    var srcPts = arguments[0];\n    var snapTolerance$1 = arguments[1];\n    this._srcPts = srcPts;\n    this._isClosed = LineStringSnapper.isClosed(srcPts);\n    this._snapTolerance = snapTolerance$1;\n  }\n};\nLineStringSnapper.prototype.snapVertices = function snapVertices (srcCoords, snapPts) {\n    var this$1 = this;\n\n  var end = this._isClosed ? srcCoords.size() - 1 : srcCoords.size();\n  for (var i = 0; i < end; i++) {\n    var srcPt = srcCoords.get(i);\n    var snapVert = this$1.findSnapForVertex(srcPt, snapPts);\n    if (snapVert !== null) {\n      srcCoords.set(i, new Coordinate(snapVert));\n      if (i === 0 && this$1._isClosed) { srcCoords.set(srcCoords.size() - 1, new Coordinate(snapVert)); }\n    }\n  }\n};\nLineStringSnapper.prototype.findSnapForVertex = function findSnapForVertex (pt, snapPts) {\n    var this$1 = this;\n\n  for (var i = 0; i < snapPts.length; i++) {\n    if (pt.equals2D(snapPts[i])) { return null }\n    if (pt.distance(snapPts[i]) < this$1._snapTolerance) { return snapPts[i] }\n  }\n  return null\n};\nLineStringSnapper.prototype.snapTo = function snapTo (snapPts) {\n  var coordList = new CoordinateList(this._srcPts);\n  this.snapVertices(coordList, snapPts);\n  this.snapSegments(coordList, snapPts);\n  var newPts = coordList.toCoordinateArray();\n  return newPts\n};\nLineStringSnapper.prototype.snapSegments = function snapSegments (srcCoords, snapPts) {\n    var this$1 = this;\n\n  if (snapPts.length === 0) { return null }\n  var distinctPtCount = snapPts.length;\n  if (snapPts[0].equals2D(snapPts[snapPts.length - 1])) { distinctPtCount = snapPts.length - 1; }\n  for (var i = 0; i < distinctPtCount; i++) {\n    var snapPt = snapPts[i];\n    var index = this$1.findSegmentIndexToSnap(snapPt, srcCoords);\n    if (index >= 0) {\n      srcCoords.add(index + 1, new Coordinate(snapPt), false);\n    }\n  }\n};\nLineStringSnapper.prototype.findSegmentIndexToSnap = function findSegmentIndexToSnap (snapPt, srcCoords) {\n    var this$1 = this;\n\n  var minDist = Double.MAX_VALUE;\n  var snapIndex = -1;\n  for (var i = 0; i < srcCoords.size() - 1; i++) {\n    this$1._seg.p0 = srcCoords.get(i);\n    this$1._seg.p1 = srcCoords.get(i + 1);\n    if (this$1._seg.p0.equals2D(snapPt) || this$1._seg.p1.equals2D(snapPt)) {\n      if (this$1._allowSnappingToSourceVertices) { continue; } else { return -1 }\n    }\n    var dist = this$1._seg.distance(snapPt);\n    if (dist < this$1._snapTolerance && dist < minDist) {\n      minDist = dist;\n      snapIndex = i;\n    }\n  }\n  return snapIndex\n};\nLineStringSnapper.prototype.setAllowSnappingToSourceVertices = function setAllowSnappingToSourceVertices (allowSnappingToSourceVertices) {\n  this._allowSnappingToSourceVertices = allowSnappingToSourceVertices;\n};\nLineStringSnapper.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nLineStringSnapper.prototype.getClass = function getClass () {\n  return LineStringSnapper\n};\nLineStringSnapper.isClosed = function isClosed (pts) {\n  if (pts.length <= 1) { return false }\n  return pts[0].equals2D(pts[pts.length - 1])\n};\n\nvar GeometrySnapper = function GeometrySnapper (srcGeom) {\n  this._srcGeom = srcGeom || null;\n};\n\nvar staticAccessors$41 = { SNAP_PRECISION_FACTOR: { configurable: true } };\nGeometrySnapper.prototype.snapTo = function snapTo (snapGeom, snapTolerance) {\n  var snapPts = this.extractTargetCoordinates(snapGeom);\n  var snapTrans = new SnapTransformer(snapTolerance, snapPts);\n  return snapTrans.transform(this._srcGeom)\n};\nGeometrySnapper.prototype.snapToSelf = function snapToSelf (snapTolerance, cleanResult) {\n  var snapPts = this.extractTargetCoordinates(this._srcGeom);\n  var snapTrans = new SnapTransformer(snapTolerance, snapPts, true);\n  var snappedGeom = snapTrans.transform(this._srcGeom);\n  var result = snappedGeom;\n  if (cleanResult && hasInterface(result, Polygonal)) {\n    result = snappedGeom.buffer(0);\n  }\n  return result\n};\nGeometrySnapper.prototype.computeSnapTolerance = function computeSnapTolerance (ringPts) {\n  var minSegLen = this.computeMinimumSegmentLength(ringPts);\n  var snapTol = minSegLen / 10;\n  return snapTol\n};\nGeometrySnapper.prototype.extractTargetCoordinates = function extractTargetCoordinates (g) {\n  var ptSet = new TreeSet();\n  var pts = g.getCoordinates();\n  for (var i = 0; i < pts.length; i++) {\n    ptSet.add(pts[i]);\n  }\n  return ptSet.toArray(new Array(0).fill(null))\n};\nGeometrySnapper.prototype.computeMinimumSegmentLength = function computeMinimumSegmentLength (pts) {\n  var minSegLen = Double.MAX_VALUE;\n  for (var i = 0; i < pts.length - 1; i++) {\n    var segLen = pts[i].distance(pts[i + 1]);\n    if (segLen < minSegLen) { minSegLen = segLen; }\n  }\n  return minSegLen\n};\nGeometrySnapper.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nGeometrySnapper.prototype.getClass = function getClass () {\n  return GeometrySnapper\n};\nGeometrySnapper.snap = function snap (g0, g1, snapTolerance) {\n  var snapGeom = new Array(2).fill(null);\n  var snapper0 = new GeometrySnapper(g0);\n  snapGeom[0] = snapper0.snapTo(g1, snapTolerance);\n  var snapper1 = new GeometrySnapper(g1);\n  snapGeom[1] = snapper1.snapTo(snapGeom[0], snapTolerance);\n  return snapGeom\n};\nGeometrySnapper.computeOverlaySnapTolerance = function computeOverlaySnapTolerance () {\n  if (arguments.length === 1) {\n    var g = arguments[0];\n    var snapTolerance = GeometrySnapper.computeSizeBasedSnapTolerance(g);\n    var pm = g.getPrecisionModel();\n    if (pm.getType() === PrecisionModel.FIXED) {\n      var fixedSnapTol = 1 / pm.getScale() * 2 / 1.415;\n      if (fixedSnapTol > snapTolerance) { snapTolerance = fixedSnapTol; }\n    }\n    return snapTolerance\n  } else if (arguments.length === 2) {\n    var g0 = arguments[0];\n    var g1 = arguments[1];\n    return Math.min(GeometrySnapper.computeOverlaySnapTolerance(g0), GeometrySnapper.computeOverlaySnapTolerance(g1))\n  }\n};\nGeometrySnapper.computeSizeBasedSnapTolerance = function computeSizeBasedSnapTolerance (g) {\n  var env = g.getEnvelopeInternal();\n  var minDimension = Math.min(env.getHeight(), env.getWidth());\n  var snapTol = minDimension * GeometrySnapper.SNAP_PRECISION_FACTOR;\n  return snapTol\n};\nGeometrySnapper.snapToSelf = function snapToSelf (geom, snapTolerance, cleanResult) {\n  var snapper0 = new GeometrySnapper(geom);\n  return snapper0.snapToSelf(snapTolerance, cleanResult)\n};\nstaticAccessors$41.SNAP_PRECISION_FACTOR.get = function () { return 1e-9 };\n\nObject.defineProperties( GeometrySnapper, staticAccessors$41 );\n\nvar SnapTransformer = (function (GeometryTransformer$$1) {\n  function SnapTransformer (snapTolerance, snapPts, isSelfSnap) {\n    GeometryTransformer$$1.call(this);\n    this._snapTolerance = snapTolerance || null;\n    this._snapPts = snapPts || null;\n    this._isSelfSnap = (isSelfSnap !== undefined) ? isSelfSnap : false;\n  }\n\n  if ( GeometryTransformer$$1 ) SnapTransformer.__proto__ = GeometryTransformer$$1;\n  SnapTransformer.prototype = Object.create( GeometryTransformer$$1 && GeometryTransformer$$1.prototype );\n  SnapTransformer.prototype.constructor = SnapTransformer;\n  SnapTransformer.prototype.snapLine = function snapLine (srcPts, snapPts) {\n    var snapper = new LineStringSnapper(srcPts, this._snapTolerance);\n    snapper.setAllowSnappingToSourceVertices(this._isSelfSnap);\n    return snapper.snapTo(snapPts)\n  };\n  SnapTransformer.prototype.transformCoordinates = function transformCoordinates (coords, parent) {\n    var srcPts = coords.toCoordinateArray();\n    var newPts = this.snapLine(srcPts, this._snapPts);\n    return this._factory.getCoordinateSequenceFactory().create(newPts)\n  };\n  SnapTransformer.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  SnapTransformer.prototype.getClass = function getClass () {\n    return SnapTransformer\n  };\n\n  return SnapTransformer;\n}(GeometryTransformer));\n\nvar CommonBits = function CommonBits () {\n  this._isFirst = true;\n  this._commonMantissaBitsCount = 53;\n  this._commonBits = 0;\n  this._commonSignExp = null;\n};\nCommonBits.prototype.getCommon = function getCommon () {\n  return Double.longBitsToDouble(this._commonBits)\n};\nCommonBits.prototype.add = function add (num) {\n  var numBits = Double.doubleToLongBits(num);\n  if (this._isFirst) {\n    this._commonBits = numBits;\n    this._commonSignExp = CommonBits.signExpBits(this._commonBits);\n    this._isFirst = false;\n    return null\n  }\n  var numSignExp = CommonBits.signExpBits(numBits);\n  if (numSignExp !== this._commonSignExp) {\n    this._commonBits = 0;\n    return null\n  }\n  this._commonMantissaBitsCount = CommonBits.numCommonMostSigMantissaBits(this._commonBits, numBits);\n  this._commonBits = CommonBits.zeroLowerBits(this._commonBits, 64 - (12 + this._commonMantissaBitsCount));\n};\nCommonBits.prototype.toString = function toString () {\n  if (arguments.length === 1) {\n    var bits = arguments[0];\n    var x = Double.longBitsToDouble(bits);\n    var numStr = Double.toBinaryString(bits);\n    var padStr = '0000000000000000000000000000000000000000000000000000000000000000' + numStr;\n    var bitStr = padStr.substring(padStr.length - 64);\n    var str = bitStr.substring(0, 1) + '  ' + bitStr.substring(1, 12) + '(exp) ' + bitStr.substring(12) + ' [ ' + x + ' ]';\n    return str\n  }\n};\nCommonBits.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nCommonBits.prototype.getClass = function getClass () {\n  return CommonBits\n};\nCommonBits.getBit = function getBit (bits, i) {\n  var mask = 1 << i;\n  return (bits & mask) !== 0 ? 1 : 0\n};\nCommonBits.signExpBits = function signExpBits (num) {\n  return num >> 52\n};\nCommonBits.zeroLowerBits = function zeroLowerBits (bits, nBits) {\n  var invMask = (1 << nBits) - 1;\n  var mask = ~invMask;\n  var zeroed = bits & mask;\n  return zeroed\n};\nCommonBits.numCommonMostSigMantissaBits = function numCommonMostSigMantissaBits (num1, num2) {\n  var count = 0;\n  for (var i = 52; i >= 0; i--) {\n    if (CommonBits.getBit(num1, i) !== CommonBits.getBit(num2, i)) { return count }\n    count++;\n  }\n  return 52\n};\n\nvar CommonBitsRemover = function CommonBitsRemover () {\n  this._commonCoord = null;\n  this._ccFilter = new CommonCoordinateFilter();\n};\n\nvar staticAccessors$42 = { CommonCoordinateFilter: { configurable: true },Translater: { configurable: true } };\nCommonBitsRemover.prototype.addCommonBits = function addCommonBits (geom) {\n  var trans = new Translater(this._commonCoord);\n  geom.apply(trans);\n  geom.geometryChanged();\n};\nCommonBitsRemover.prototype.removeCommonBits = function removeCommonBits (geom) {\n  if (this._commonCoord.x === 0.0 && this._commonCoord.y === 0.0) { return geom }\n  var invCoord = new Coordinate(this._commonCoord);\n  invCoord.x = -invCoord.x;\n  invCoord.y = -invCoord.y;\n  var trans = new Translater(invCoord);\n  geom.apply(trans);\n  geom.geometryChanged();\n  return geom\n};\nCommonBitsRemover.prototype.getCommonCoordinate = function getCommonCoordinate () {\n  return this._commonCoord\n};\nCommonBitsRemover.prototype.add = function add (geom) {\n  geom.apply(this._ccFilter);\n  this._commonCoord = this._ccFilter.getCommonCoordinate();\n};\nCommonBitsRemover.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nCommonBitsRemover.prototype.getClass = function getClass () {\n  return CommonBitsRemover\n};\nstaticAccessors$42.CommonCoordinateFilter.get = function () { return CommonCoordinateFilter };\nstaticAccessors$42.Translater.get = function () { return Translater };\n\nObject.defineProperties( CommonBitsRemover, staticAccessors$42 );\n\nvar CommonCoordinateFilter = function CommonCoordinateFilter () {\n  this._commonBitsX = new CommonBits();\n  this._commonBitsY = new CommonBits();\n};\nCommonCoordinateFilter.prototype.filter = function filter (coord) {\n  this._commonBitsX.add(coord.x);\n  this._commonBitsY.add(coord.y);\n};\nCommonCoordinateFilter.prototype.getCommonCoordinate = function getCommonCoordinate () {\n  return new Coordinate(this._commonBitsX.getCommon(), this._commonBitsY.getCommon())\n};\nCommonCoordinateFilter.prototype.interfaces_ = function interfaces_ () {\n  return [CoordinateFilter]\n};\nCommonCoordinateFilter.prototype.getClass = function getClass () {\n  return CommonCoordinateFilter\n};\n\nvar Translater = function Translater () {\n  this.trans = null;\n  var trans = arguments[0];\n  this.trans = trans;\n};\nTranslater.prototype.filter = function filter (seq, i) {\n  var xp = seq.getOrdinate(i, 0) + this.trans.x;\n  var yp = seq.getOrdinate(i, 1) + this.trans.y;\n  seq.setOrdinate(i, 0, xp);\n  seq.setOrdinate(i, 1, yp);\n};\nTranslater.prototype.isDone = function isDone () {\n  return false\n};\nTranslater.prototype.isGeometryChanged = function isGeometryChanged () {\n  return true\n};\nTranslater.prototype.interfaces_ = function interfaces_ () {\n  return [CoordinateSequenceFilter]\n};\nTranslater.prototype.getClass = function getClass () {\n  return Translater\n};\n\nvar SnapOverlayOp = function SnapOverlayOp (g1, g2) {\n  this._geom = new Array(2).fill(null);\n  this._snapTolerance = null;\n  this._cbr = null;\n  this._geom[0] = g1;\n  this._geom[1] = g2;\n  this.computeSnapTolerance();\n};\nSnapOverlayOp.prototype.selfSnap = function selfSnap (geom) {\n  var snapper0 = new GeometrySnapper(geom);\n  var snapGeom = snapper0.snapTo(geom, this._snapTolerance);\n  return snapGeom\n};\nSnapOverlayOp.prototype.removeCommonBits = function removeCommonBits (geom) {\n  this._cbr = new CommonBitsRemover();\n  this._cbr.add(geom[0]);\n  this._cbr.add(geom[1]);\n  var remGeom = new Array(2).fill(null);\n  remGeom[0] = this._cbr.removeCommonBits(geom[0].copy());\n  remGeom[1] = this._cbr.removeCommonBits(geom[1].copy());\n  return remGeom\n};\nSnapOverlayOp.prototype.prepareResult = function prepareResult (geom) {\n  this._cbr.addCommonBits(geom);\n  return geom\n};\nSnapOverlayOp.prototype.getResultGeometry = function getResultGeometry (opCode) {\n  var prepGeom = this.snap(this._geom);\n  var result = OverlayOp.overlayOp(prepGeom[0], prepGeom[1], opCode);\n  return this.prepareResult(result)\n};\nSnapOverlayOp.prototype.checkValid = function checkValid (g) {\n  if (!g.isValid()) {\n    System.out.println('Snapped geometry is invalid');\n  }\n};\nSnapOverlayOp.prototype.computeSnapTolerance = function computeSnapTolerance () {\n  this._snapTolerance = GeometrySnapper.computeOverlaySnapTolerance(this._geom[0], this._geom[1]);\n};\nSnapOverlayOp.prototype.snap = function snap (geom) {\n  var remGeom = this.removeCommonBits(geom);\n  var snapGeom = GeometrySnapper.snap(remGeom[0], remGeom[1], this._snapTolerance);\n  return snapGeom\n};\nSnapOverlayOp.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nSnapOverlayOp.prototype.getClass = function getClass () {\n  return SnapOverlayOp\n};\nSnapOverlayOp.overlayOp = function overlayOp (g0, g1, opCode) {\n  var op = new SnapOverlayOp(g0, g1);\n  return op.getResultGeometry(opCode)\n};\nSnapOverlayOp.union = function union (g0, g1) {\n  return SnapOverlayOp.overlayOp(g0, g1, OverlayOp.UNION)\n};\nSnapOverlayOp.intersection = function intersection (g0, g1) {\n  return SnapOverlayOp.overlayOp(g0, g1, OverlayOp.INTERSECTION)\n};\nSnapOverlayOp.symDifference = function symDifference (g0, g1) {\n  return SnapOverlayOp.overlayOp(g0, g1, OverlayOp.SYMDIFFERENCE)\n};\nSnapOverlayOp.difference = function difference (g0, g1) {\n  return SnapOverlayOp.overlayOp(g0, g1, OverlayOp.DIFFERENCE)\n};\n\nvar SnapIfNeededOverlayOp = function SnapIfNeededOverlayOp (g1, g2) {\n  this._geom = new Array(2).fill(null);\n  this._geom[0] = g1;\n  this._geom[1] = g2;\n};\nSnapIfNeededOverlayOp.prototype.getResultGeometry = function getResultGeometry (opCode) {\n  var result = null;\n  var isSuccess = false;\n  var savedException = null;\n  try {\n    result = OverlayOp.overlayOp(this._geom[0], this._geom[1], opCode);\n    var isValid = true;\n    if (isValid) { isSuccess = true; }\n  } catch (ex) {\n    if (ex instanceof RuntimeException) {\n      savedException = ex;\n    } else { throw ex }\n  } finally {}\n  if (!isSuccess) {\n    try {\n      result = SnapOverlayOp.overlayOp(this._geom[0], this._geom[1], opCode);\n    } catch (ex) {\n      if (ex instanceof RuntimeException) {\n        throw savedException\n      } else { throw ex }\n    } finally {}\n  }\n  return result\n};\nSnapIfNeededOverlayOp.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nSnapIfNeededOverlayOp.prototype.getClass = function getClass () {\n  return SnapIfNeededOverlayOp\n};\nSnapIfNeededOverlayOp.overlayOp = function overlayOp (g0, g1, opCode) {\n  var op = new SnapIfNeededOverlayOp(g0, g1);\n  return op.getResultGeometry(opCode)\n};\nSnapIfNeededOverlayOp.union = function union (g0, g1) {\n  return SnapIfNeededOverlayOp.overlayOp(g0, g1, OverlayOp.UNION)\n};\nSnapIfNeededOverlayOp.intersection = function intersection (g0, g1) {\n  return SnapIfNeededOverlayOp.overlayOp(g0, g1, OverlayOp.INTERSECTION)\n};\nSnapIfNeededOverlayOp.symDifference = function symDifference (g0, g1) {\n  return SnapIfNeededOverlayOp.overlayOp(g0, g1, OverlayOp.SYMDIFFERENCE)\n};\nSnapIfNeededOverlayOp.difference = function difference (g0, g1) {\n  return SnapIfNeededOverlayOp.overlayOp(g0, g1, OverlayOp.DIFFERENCE)\n};\n\nvar MonotoneChain$2 = function MonotoneChain () {\n  this.mce = null;\n  this.chainIndex = null;\n  var mce = arguments[0];\n  var chainIndex = arguments[1];\n  this.mce = mce;\n  this.chainIndex = chainIndex;\n};\nMonotoneChain$2.prototype.computeIntersections = function computeIntersections (mc, si) {\n  this.mce.computeIntersectsForChain(this.chainIndex, mc.mce, mc.chainIndex, si);\n};\nMonotoneChain$2.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nMonotoneChain$2.prototype.getClass = function getClass () {\n  return MonotoneChain$2\n};\n\nvar SweepLineEvent = function SweepLineEvent () {\n  this._label = null;\n  this._xValue = null;\n  this._eventType = null;\n  this._insertEvent = null;\n  this._deleteEventIndex = null;\n  this._obj = null;\n  if (arguments.length === 2) {\n    var x = arguments[0];\n    var insertEvent = arguments[1];\n    this._eventType = SweepLineEvent.DELETE;\n    this._xValue = x;\n    this._insertEvent = insertEvent;\n  } else if (arguments.length === 3) {\n    var label = arguments[0];\n    var x$1 = arguments[1];\n    var obj = arguments[2];\n    this._eventType = SweepLineEvent.INSERT;\n    this._label = label;\n    this._xValue = x$1;\n    this._obj = obj;\n  }\n};\n\nvar staticAccessors$43 = { INSERT: { configurable: true },DELETE: { configurable: true } };\nSweepLineEvent.prototype.isDelete = function isDelete () {\n  return this._eventType === SweepLineEvent.DELETE\n};\nSweepLineEvent.prototype.setDeleteEventIndex = function setDeleteEventIndex (deleteEventIndex) {\n  this._deleteEventIndex = deleteEventIndex;\n};\nSweepLineEvent.prototype.getObject = function getObject () {\n  return this._obj\n};\nSweepLineEvent.prototype.compareTo = function compareTo (o) {\n  var pe = o;\n  if (this._xValue < pe._xValue) { return -1 }\n  if (this._xValue > pe._xValue) { return 1 }\n  if (this._eventType < pe._eventType) { return -1 }\n  if (this._eventType > pe._eventType) { return 1 }\n  return 0\n};\nSweepLineEvent.prototype.getInsertEvent = function getInsertEvent () {\n  return this._insertEvent\n};\nSweepLineEvent.prototype.isInsert = function isInsert () {\n  return this._eventType === SweepLineEvent.INSERT\n};\nSweepLineEvent.prototype.isSameLabel = function isSameLabel (ev) {\n  if (this._label === null) { return false }\n  return this._label === ev._label\n};\nSweepLineEvent.prototype.getDeleteEventIndex = function getDeleteEventIndex () {\n  return this._deleteEventIndex\n};\nSweepLineEvent.prototype.interfaces_ = function interfaces_ () {\n  return [Comparable]\n};\nSweepLineEvent.prototype.getClass = function getClass () {\n  return SweepLineEvent\n};\nstaticAccessors$43.INSERT.get = function () { return 1 };\nstaticAccessors$43.DELETE.get = function () { return 2 };\n\nObject.defineProperties( SweepLineEvent, staticAccessors$43 );\n\nvar EdgeSetIntersector = function EdgeSetIntersector () {};\n\nEdgeSetIntersector.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nEdgeSetIntersector.prototype.getClass = function getClass () {\n  return EdgeSetIntersector\n};\n\nvar SegmentIntersector$2 = function SegmentIntersector () {\n  this._hasIntersection = false;\n  this._hasProper = false;\n  this._hasProperInterior = false;\n  this._properIntersectionPoint = null;\n  this._li = null;\n  this._includeProper = null;\n  this._recordIsolated = null;\n  this._isSelfIntersection = null;\n  this._numIntersections = 0;\n  this.numTests = 0;\n  this._bdyNodes = null;\n  this._isDone = false;\n  this._isDoneWhenProperInt = false;\n  var li = arguments[0];\n  var includeProper = arguments[1];\n  var recordIsolated = arguments[2];\n  this._li = li;\n  this._includeProper = includeProper;\n  this._recordIsolated = recordIsolated;\n};\nSegmentIntersector$2.prototype.isTrivialIntersection = function isTrivialIntersection (e0, segIndex0, e1, segIndex1) {\n  if (e0 === e1) {\n    if (this._li.getIntersectionNum() === 1) {\n      if (SegmentIntersector$2.isAdjacentSegments(segIndex0, segIndex1)) { return true }\n      if (e0.isClosed()) {\n        var maxSegIndex = e0.getNumPoints() - 1;\n        if ((segIndex0 === 0 && segIndex1 === maxSegIndex) ||\n            (segIndex1 === 0 && segIndex0 === maxSegIndex)) {\n          return true\n        }\n      }\n    }\n  }\n  return false\n};\nSegmentIntersector$2.prototype.getProperIntersectionPoint = function getProperIntersectionPoint () {\n  return this._properIntersectionPoint\n};\nSegmentIntersector$2.prototype.setIsDoneIfProperInt = function setIsDoneIfProperInt (isDoneWhenProperInt) {\n  this._isDoneWhenProperInt = isDoneWhenProperInt;\n};\nSegmentIntersector$2.prototype.hasProperInteriorIntersection = function hasProperInteriorIntersection () {\n  return this._hasProperInterior\n};\nSegmentIntersector$2.prototype.isBoundaryPointInternal = function isBoundaryPointInternal (li, bdyNodes) {\n  for (var i = bdyNodes.iterator(); i.hasNext();) {\n    var node = i.next();\n    var pt = node.getCoordinate();\n    if (li.isIntersection(pt)) { return true }\n  }\n  return false\n};\nSegmentIntersector$2.prototype.hasProperIntersection = function hasProperIntersection () {\n  return this._hasProper\n};\nSegmentIntersector$2.prototype.hasIntersection = function hasIntersection () {\n  return this._hasIntersection\n};\nSegmentIntersector$2.prototype.isDone = function isDone () {\n  return this._isDone\n};\nSegmentIntersector$2.prototype.isBoundaryPoint = function isBoundaryPoint (li, bdyNodes) {\n  if (bdyNodes === null) { return false }\n  if (this.isBoundaryPointInternal(li, bdyNodes[0])) { return true }\n  if (this.isBoundaryPointInternal(li, bdyNodes[1])) { return true }\n  return false\n};\nSegmentIntersector$2.prototype.setBoundaryNodes = function setBoundaryNodes (bdyNodes0, bdyNodes1) {\n  this._bdyNodes = new Array(2).fill(null);\n  this._bdyNodes[0] = bdyNodes0;\n  this._bdyNodes[1] = bdyNodes1;\n};\nSegmentIntersector$2.prototype.addIntersections = function addIntersections (e0, segIndex0, e1, segIndex1) {\n  if (e0 === e1 && segIndex0 === segIndex1) { return null }\n  this.numTests++;\n  var p00 = e0.getCoordinates()[segIndex0];\n  var p01 = e0.getCoordinates()[segIndex0 + 1];\n  var p10 = e1.getCoordinates()[segIndex1];\n  var p11 = e1.getCoordinates()[segIndex1 + 1];\n  this._li.computeIntersection(p00, p01, p10, p11);\n  if (this._li.hasIntersection()) {\n    if (this._recordIsolated) {\n      e0.setIsolated(false);\n      e1.setIsolated(false);\n    }\n    this._numIntersections++;\n    if (!this.isTrivialIntersection(e0, segIndex0, e1, segIndex1)) {\n      this._hasIntersection = true;\n      if (this._includeProper || !this._li.isProper()) {\n        e0.addIntersections(this._li, segIndex0, 0);\n        e1.addIntersections(this._li, segIndex1, 1);\n      }\n      if (this._li.isProper()) {\n        this._properIntersectionPoint = this._li.getIntersection(0).copy();\n        this._hasProper = true;\n        if (this._isDoneWhenProperInt) {\n          this._isDone = true;\n        }\n        if (!this.isBoundaryPoint(this._li, this._bdyNodes)) { this._hasProperInterior = true; }\n      }\n    }\n  }\n};\nSegmentIntersector$2.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nSegmentIntersector$2.prototype.getClass = function getClass () {\n  return SegmentIntersector$2\n};\nSegmentIntersector$2.isAdjacentSegments = function isAdjacentSegments (i1, i2) {\n  return Math.abs(i1 - i2) === 1\n};\n\nvar SimpleMCSweepLineIntersector = (function (EdgeSetIntersector$$1) {\n  function SimpleMCSweepLineIntersector () {\n    EdgeSetIntersector$$1.call(this);\n    this.events = new ArrayList();\n    this.nOverlaps = null;\n  }\n\n  if ( EdgeSetIntersector$$1 ) SimpleMCSweepLineIntersector.__proto__ = EdgeSetIntersector$$1;\n  SimpleMCSweepLineIntersector.prototype = Object.create( EdgeSetIntersector$$1 && EdgeSetIntersector$$1.prototype );\n  SimpleMCSweepLineIntersector.prototype.constructor = SimpleMCSweepLineIntersector;\n  SimpleMCSweepLineIntersector.prototype.prepareEvents = function prepareEvents () {\n    var this$1 = this;\n\n    Collections.sort(this.events);\n    for (var i = 0; i < this.events.size(); i++) {\n      var ev = this$1.events.get(i);\n      if (ev.isDelete()) {\n        ev.getInsertEvent().setDeleteEventIndex(i);\n      }\n    }\n  };\n  SimpleMCSweepLineIntersector.prototype.computeIntersections = function computeIntersections () {\n    var this$1 = this;\n\n    if (arguments.length === 1) {\n      var si = arguments[0];\n      this.nOverlaps = 0;\n      this.prepareEvents();\n      for (var i = 0; i < this.events.size(); i++) {\n        var ev = this$1.events.get(i);\n        if (ev.isInsert()) {\n          this$1.processOverlaps(i, ev.getDeleteEventIndex(), ev, si);\n        }\n        if (si.isDone()) {\n          break\n        }\n      }\n    } else if (arguments.length === 3) {\n      if (arguments[2] instanceof SegmentIntersector$2 && (hasInterface(arguments[0], List) && hasInterface(arguments[1], List))) {\n        var edges0 = arguments[0];\n        var edges1 = arguments[1];\n        var si$1 = arguments[2];\n        this.addEdges(edges0, edges0);\n        this.addEdges(edges1, edges1);\n        this.computeIntersections(si$1);\n      } else if (typeof arguments[2] === 'boolean' && (hasInterface(arguments[0], List) && arguments[1] instanceof SegmentIntersector$2)) {\n        var edges = arguments[0];\n        var si$2 = arguments[1];\n        var testAllSegments = arguments[2];\n        if (testAllSegments) { this.addEdges(edges, null); } else { this.addEdges(edges); }\n        this.computeIntersections(si$2);\n      }\n    }\n  };\n  SimpleMCSweepLineIntersector.prototype.addEdge = function addEdge (edge, edgeSet) {\n    var this$1 = this;\n\n    var mce = edge.getMonotoneChainEdge();\n    var startIndex = mce.getStartIndexes();\n    for (var i = 0; i < startIndex.length - 1; i++) {\n      var mc = new MonotoneChain$2(mce, i);\n      var insertEvent = new SweepLineEvent(edgeSet, mce.getMinX(i), mc);\n      this$1.events.add(insertEvent);\n      this$1.events.add(new SweepLineEvent(mce.getMaxX(i), insertEvent));\n    }\n  };\n  SimpleMCSweepLineIntersector.prototype.processOverlaps = function processOverlaps (start, end, ev0, si) {\n    var this$1 = this;\n\n    var mc0 = ev0.getObject();\n    for (var i = start; i < end; i++) {\n      var ev1 = this$1.events.get(i);\n      if (ev1.isInsert()) {\n        var mc1 = ev1.getObject();\n        if (!ev0.isSameLabel(ev1)) {\n          mc0.computeIntersections(mc1, si);\n          this$1.nOverlaps++;\n        }\n      }\n    }\n  };\n  SimpleMCSweepLineIntersector.prototype.addEdges = function addEdges () {\n    var this$1 = this;\n\n    if (arguments.length === 1) {\n      var edges = arguments[0];\n      for (var i = edges.iterator(); i.hasNext();) {\n        var edge = i.next();\n        this$1.addEdge(edge, edge);\n      }\n    } else if (arguments.length === 2) {\n      var edges$1 = arguments[0];\n      var edgeSet = arguments[1];\n      for (var i$1 = edges$1.iterator(); i$1.hasNext();) {\n        var edge$1 = i$1.next();\n        this$1.addEdge(edge$1, edgeSet);\n      }\n    }\n  };\n  SimpleMCSweepLineIntersector.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  SimpleMCSweepLineIntersector.prototype.getClass = function getClass () {\n    return SimpleMCSweepLineIntersector\n  };\n\n  return SimpleMCSweepLineIntersector;\n}(EdgeSetIntersector));\n\nvar IntervalRTreeNode = function IntervalRTreeNode () {\n  this._min = Double.POSITIVE_INFINITY;\n  this._max = Double.NEGATIVE_INFINITY;\n};\n\nvar staticAccessors$45 = { NodeComparator: { configurable: true } };\nIntervalRTreeNode.prototype.getMin = function getMin () {\n  return this._min\n};\nIntervalRTreeNode.prototype.intersects = function intersects (queryMin, queryMax) {\n  if (this._min > queryMax || this._max < queryMin) { return false }\n  return true\n};\nIntervalRTreeNode.prototype.getMax = function getMax () {\n  return this._max\n};\nIntervalRTreeNode.prototype.toString = function toString () {\n  return WKTWriter.toLineString(new Coordinate(this._min, 0), new Coordinate(this._max, 0))\n};\nIntervalRTreeNode.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nIntervalRTreeNode.prototype.getClass = function getClass () {\n  return IntervalRTreeNode\n};\nstaticAccessors$45.NodeComparator.get = function () { return NodeComparator };\n\nObject.defineProperties( IntervalRTreeNode, staticAccessors$45 );\n\nvar NodeComparator = function NodeComparator () {};\n\nNodeComparator.prototype.compare = function compare (o1, o2) {\n  var n1 = o1;\n  var n2 = o2;\n  var mid1 = (n1._min + n1._max) / 2;\n  var mid2 = (n2._min + n2._max) / 2;\n  if (mid1 < mid2) { return -1 }\n  if (mid1 > mid2) { return 1 }\n  return 0\n};\nNodeComparator.prototype.interfaces_ = function interfaces_ () {\n  return [Comparator]\n};\nNodeComparator.prototype.getClass = function getClass () {\n  return NodeComparator\n};\n\nvar IntervalRTreeLeafNode = (function (IntervalRTreeNode$$1) {\n  function IntervalRTreeLeafNode () {\n    IntervalRTreeNode$$1.call(this);\n    this._item = null;\n    var min = arguments[0];\n    var max = arguments[1];\n    var item = arguments[2];\n    this._min = min;\n    this._max = max;\n    this._item = item;\n  }\n\n  if ( IntervalRTreeNode$$1 ) IntervalRTreeLeafNode.__proto__ = IntervalRTreeNode$$1;\n  IntervalRTreeLeafNode.prototype = Object.create( IntervalRTreeNode$$1 && IntervalRTreeNode$$1.prototype );\n  IntervalRTreeLeafNode.prototype.constructor = IntervalRTreeLeafNode;\n  IntervalRTreeLeafNode.prototype.query = function query (queryMin, queryMax, visitor) {\n    if (!this.intersects(queryMin, queryMax)) { return null }\n    visitor.visitItem(this._item);\n  };\n  IntervalRTreeLeafNode.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  IntervalRTreeLeafNode.prototype.getClass = function getClass () {\n    return IntervalRTreeLeafNode\n  };\n\n  return IntervalRTreeLeafNode;\n}(IntervalRTreeNode));\n\nvar IntervalRTreeBranchNode = (function (IntervalRTreeNode$$1) {\n  function IntervalRTreeBranchNode () {\n    IntervalRTreeNode$$1.call(this);\n    this._node1 = null;\n    this._node2 = null;\n    var n1 = arguments[0];\n    var n2 = arguments[1];\n    this._node1 = n1;\n    this._node2 = n2;\n    this.buildExtent(this._node1, this._node2);\n  }\n\n  if ( IntervalRTreeNode$$1 ) IntervalRTreeBranchNode.__proto__ = IntervalRTreeNode$$1;\n  IntervalRTreeBranchNode.prototype = Object.create( IntervalRTreeNode$$1 && IntervalRTreeNode$$1.prototype );\n  IntervalRTreeBranchNode.prototype.constructor = IntervalRTreeBranchNode;\n  IntervalRTreeBranchNode.prototype.buildExtent = function buildExtent (n1, n2) {\n    this._min = Math.min(n1._min, n2._min);\n    this._max = Math.max(n1._max, n2._max);\n  };\n  IntervalRTreeBranchNode.prototype.query = function query (queryMin, queryMax, visitor) {\n    if (!this.intersects(queryMin, queryMax)) {\n      return null\n    }\n    if (this._node1 !== null) { this._node1.query(queryMin, queryMax, visitor); }\n    if (this._node2 !== null) { this._node2.query(queryMin, queryMax, visitor); }\n  };\n  IntervalRTreeBranchNode.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  IntervalRTreeBranchNode.prototype.getClass = function getClass () {\n    return IntervalRTreeBranchNode\n  };\n\n  return IntervalRTreeBranchNode;\n}(IntervalRTreeNode));\n\nvar SortedPackedIntervalRTree = function SortedPackedIntervalRTree () {\n  this._leaves = new ArrayList();\n  this._root = null;\n  this._level = 0;\n};\nSortedPackedIntervalRTree.prototype.buildTree = function buildTree () {\n    var this$1 = this;\n\n  Collections.sort(this._leaves, new IntervalRTreeNode.NodeComparator());\n  var src = this._leaves;\n  var temp = null;\n  var dest = new ArrayList();\n  while (true) {\n    this$1.buildLevel(src, dest);\n    if (dest.size() === 1) { return dest.get(0) }\n    temp = src;\n    src = dest;\n    dest = temp;\n  }\n};\nSortedPackedIntervalRTree.prototype.insert = function insert (min, max, item) {\n  if (this._root !== null) { throw new Error('Index cannot be added to once it has been queried') }\n  this._leaves.add(new IntervalRTreeLeafNode(min, max, item));\n};\nSortedPackedIntervalRTree.prototype.query = function query (min, max, visitor) {\n  this.init();\n  this._root.query(min, max, visitor);\n};\nSortedPackedIntervalRTree.prototype.buildRoot = function buildRoot () {\n  if (this._root !== null) { return null }\n  this._root = this.buildTree();\n};\nSortedPackedIntervalRTree.prototype.printNode = function printNode (node) {\n  System.out.println(WKTWriter.toLineString(new Coordinate(node._min, this._level), new Coordinate(node._max, this._level)));\n};\nSortedPackedIntervalRTree.prototype.init = function init () {\n  if (this._root !== null) { return null }\n  this.buildRoot();\n};\nSortedPackedIntervalRTree.prototype.buildLevel = function buildLevel (src, dest) {\n  this._level++;\n  dest.clear();\n  for (var i = 0; i < src.size(); i += 2) {\n    var n1 = src.get(i);\n    var n2 = i + 1 < src.size() ? src.get(i) : null;\n    if (n2 === null) {\n      dest.add(n1);\n    } else {\n      var node = new IntervalRTreeBranchNode(src.get(i), src.get(i + 1));\n      dest.add(node);\n    }\n  }\n};\nSortedPackedIntervalRTree.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nSortedPackedIntervalRTree.prototype.getClass = function getClass () {\n  return SortedPackedIntervalRTree\n};\n\nvar ArrayListVisitor = function ArrayListVisitor () {\n  this._items = new ArrayList();\n};\nArrayListVisitor.prototype.visitItem = function visitItem (item) {\n  this._items.add(item);\n};\nArrayListVisitor.prototype.getItems = function getItems () {\n  return this._items\n};\nArrayListVisitor.prototype.interfaces_ = function interfaces_ () {\n  return [ItemVisitor]\n};\nArrayListVisitor.prototype.getClass = function getClass () {\n  return ArrayListVisitor\n};\n\nvar IndexedPointInAreaLocator = function IndexedPointInAreaLocator () {\n  this._index = null;\n  var g = arguments[0];\n  if (!hasInterface(g, Polygonal)) { throw new IllegalArgumentException('Argument must be Polygonal') }\n  this._index = new IntervalIndexedGeometry(g);\n};\n\nvar staticAccessors$44 = { SegmentVisitor: { configurable: true },IntervalIndexedGeometry: { configurable: true } };\nIndexedPointInAreaLocator.prototype.locate = function locate (p) {\n  var rcc = new RayCrossingCounter(p);\n  var visitor = new SegmentVisitor(rcc);\n  this._index.query(p.y, p.y, visitor);\n  return rcc.getLocation()\n};\nIndexedPointInAreaLocator.prototype.interfaces_ = function interfaces_ () {\n  return [PointOnGeometryLocator]\n};\nIndexedPointInAreaLocator.prototype.getClass = function getClass () {\n  return IndexedPointInAreaLocator\n};\nstaticAccessors$44.SegmentVisitor.get = function () { return SegmentVisitor };\nstaticAccessors$44.IntervalIndexedGeometry.get = function () { return IntervalIndexedGeometry };\n\nObject.defineProperties( IndexedPointInAreaLocator, staticAccessors$44 );\n\nvar SegmentVisitor = function SegmentVisitor () {\n  this._counter = null;\n  var counter = arguments[0];\n  this._counter = counter;\n};\nSegmentVisitor.prototype.visitItem = function visitItem (item) {\n  var seg = item;\n  this._counter.countSegment(seg.getCoordinate(0), seg.getCoordinate(1));\n};\nSegmentVisitor.prototype.interfaces_ = function interfaces_ () {\n  return [ItemVisitor]\n};\nSegmentVisitor.prototype.getClass = function getClass () {\n  return SegmentVisitor\n};\n\nvar IntervalIndexedGeometry = function IntervalIndexedGeometry () {\n  this._index = new SortedPackedIntervalRTree();\n  var geom = arguments[0];\n  this.init(geom);\n};\nIntervalIndexedGeometry.prototype.init = function init (geom) {\n    var this$1 = this;\n\n  var lines = LinearComponentExtracter.getLines(geom);\n  for (var i = lines.iterator(); i.hasNext();) {\n    var line = i.next();\n    var pts = line.getCoordinates();\n    this$1.addLine(pts);\n  }\n};\nIntervalIndexedGeometry.prototype.addLine = function addLine (pts) {\n    var this$1 = this;\n\n  for (var i = 1; i < pts.length; i++) {\n    var seg = new LineSegment(pts[i - 1], pts[i]);\n    var min = Math.min(seg.p0.y, seg.p1.y);\n    var max = Math.max(seg.p0.y, seg.p1.y);\n    this$1._index.insert(min, max, seg);\n  }\n};\nIntervalIndexedGeometry.prototype.query = function query () {\n  if (arguments.length === 2) {\n    var min = arguments[0];\n    var max = arguments[1];\n    var visitor = new ArrayListVisitor();\n    this._index.query(min, max, visitor);\n    return visitor.getItems()\n  } else if (arguments.length === 3) {\n    var min$1 = arguments[0];\n    var max$1 = arguments[1];\n    var visitor$1 = arguments[2];\n    this._index.query(min$1, max$1, visitor$1);\n  }\n};\nIntervalIndexedGeometry.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nIntervalIndexedGeometry.prototype.getClass = function getClass () {\n  return IntervalIndexedGeometry\n};\n\nvar GeometryGraph = (function (PlanarGraph$$1) {\n  function GeometryGraph () {\n    PlanarGraph$$1.call(this);\n    this._parentGeom = null;\n    this._lineEdgeMap = new HashMap();\n    this._boundaryNodeRule = null;\n    this._useBoundaryDeterminationRule = true;\n    this._argIndex = null;\n    this._boundaryNodes = null;\n    this._hasTooFewPoints = false;\n    this._invalidPoint = null;\n    this._areaPtLocator = null;\n    this._ptLocator = new PointLocator();\n    if (arguments.length === 2) {\n      var argIndex = arguments[0];\n      var parentGeom = arguments[1];\n      var boundaryNodeRule = BoundaryNodeRule.OGC_SFS_BOUNDARY_RULE;\n      this._argIndex = argIndex;\n      this._parentGeom = parentGeom;\n      this._boundaryNodeRule = boundaryNodeRule;\n      if (parentGeom !== null) {\n        this.add(parentGeom);\n      }\n    } else if (arguments.length === 3) {\n      var argIndex$1 = arguments[0];\n      var parentGeom$1 = arguments[1];\n      var boundaryNodeRule$1 = arguments[2];\n      this._argIndex = argIndex$1;\n      this._parentGeom = parentGeom$1;\n      this._boundaryNodeRule = boundaryNodeRule$1;\n      if (parentGeom$1 !== null) {\n        this.add(parentGeom$1);\n      }\n    }\n  }\n\n  if ( PlanarGraph$$1 ) GeometryGraph.__proto__ = PlanarGraph$$1;\n  GeometryGraph.prototype = Object.create( PlanarGraph$$1 && PlanarGraph$$1.prototype );\n  GeometryGraph.prototype.constructor = GeometryGraph;\n  GeometryGraph.prototype.insertBoundaryPoint = function insertBoundaryPoint (argIndex, coord) {\n    var n = this._nodes.addNode(coord);\n    var lbl = n.getLabel();\n    var boundaryCount = 1;\n    var loc = Location.NONE;\n    loc = lbl.getLocation(argIndex, Position.ON);\n    if (loc === Location.BOUNDARY) { boundaryCount++; }\n    var newLoc = GeometryGraph.determineBoundary(this._boundaryNodeRule, boundaryCount);\n    lbl.setLocation(argIndex, newLoc);\n  };\n  GeometryGraph.prototype.computeSelfNodes = function computeSelfNodes () {\n    if (arguments.length === 2) {\n      var li = arguments[0];\n      var computeRingSelfNodes = arguments[1];\n      return this.computeSelfNodes(li, computeRingSelfNodes, false)\n    } else if (arguments.length === 3) {\n      var li$1 = arguments[0];\n      var computeRingSelfNodes$1 = arguments[1];\n      var isDoneIfProperInt = arguments[2];\n      var si = new SegmentIntersector$2(li$1, true, false);\n      si.setIsDoneIfProperInt(isDoneIfProperInt);\n      var esi = this.createEdgeSetIntersector();\n      var isRings = this._parentGeom instanceof LinearRing || this._parentGeom instanceof Polygon || this._parentGeom instanceof MultiPolygon;\n      var computeAllSegments = computeRingSelfNodes$1 || !isRings;\n      esi.computeIntersections(this._edges, si, computeAllSegments);\n      this.addSelfIntersectionNodes(this._argIndex);\n      return si\n    }\n  };\n  GeometryGraph.prototype.computeSplitEdges = function computeSplitEdges (edgelist) {\n    for (var i = this._edges.iterator(); i.hasNext();) {\n      var e = i.next();\n      e.eiList.addSplitEdges(edgelist);\n    }\n  };\n  GeometryGraph.prototype.computeEdgeIntersections = function computeEdgeIntersections (g, li, includeProper) {\n    var si = new SegmentIntersector$2(li, includeProper, true);\n    si.setBoundaryNodes(this.getBoundaryNodes(), g.getBoundaryNodes());\n    var esi = this.createEdgeSetIntersector();\n    esi.computeIntersections(this._edges, g._edges, si);\n    return si\n  };\n  GeometryGraph.prototype.getGeometry = function getGeometry () {\n    return this._parentGeom\n  };\n  GeometryGraph.prototype.getBoundaryNodeRule = function getBoundaryNodeRule () {\n    return this._boundaryNodeRule\n  };\n  GeometryGraph.prototype.hasTooFewPoints = function hasTooFewPoints () {\n    return this._hasTooFewPoints\n  };\n  GeometryGraph.prototype.addPoint = function addPoint () {\n    if (arguments[0] instanceof Point) {\n      var p = arguments[0];\n      var coord = p.getCoordinate();\n      this.insertPoint(this._argIndex, coord, Location.INTERIOR);\n    } else if (arguments[0] instanceof Coordinate) {\n      var pt = arguments[0];\n      this.insertPoint(this._argIndex, pt, Location.INTERIOR);\n    }\n  };\n  GeometryGraph.prototype.addPolygon = function addPolygon (p) {\n    var this$1 = this;\n\n    this.addPolygonRing(p.getExteriorRing(), Location.EXTERIOR, Location.INTERIOR);\n    for (var i = 0; i < p.getNumInteriorRing(); i++) {\n      var hole = p.getInteriorRingN(i);\n      this$1.addPolygonRing(hole, Location.INTERIOR, Location.EXTERIOR);\n    }\n  };\n  GeometryGraph.prototype.addEdge = function addEdge (e) {\n    this.insertEdge(e);\n    var coord = e.getCoordinates();\n    this.insertPoint(this._argIndex, coord[0], Location.BOUNDARY);\n    this.insertPoint(this._argIndex, coord[coord.length - 1], Location.BOUNDARY);\n  };\n  GeometryGraph.prototype.addLineString = function addLineString (line) {\n    var coord = CoordinateArrays.removeRepeatedPoints(line.getCoordinates());\n    if (coord.length < 2) {\n      this._hasTooFewPoints = true;\n      this._invalidPoint = coord[0];\n      return null\n    }\n    var e = new Edge(coord, new Label(this._argIndex, Location.INTERIOR));\n    this._lineEdgeMap.put(line, e);\n    this.insertEdge(e);\n    Assert.isTrue(coord.length >= 2, 'found LineString with single point');\n    this.insertBoundaryPoint(this._argIndex, coord[0]);\n    this.insertBoundaryPoint(this._argIndex, coord[coord.length - 1]);\n  };\n  GeometryGraph.prototype.getInvalidPoint = function getInvalidPoint () {\n    return this._invalidPoint\n  };\n  GeometryGraph.prototype.getBoundaryPoints = function getBoundaryPoints () {\n    var coll = this.getBoundaryNodes();\n    var pts = new Array(coll.size()).fill(null);\n    var i = 0;\n    for (var it = coll.iterator(); it.hasNext();) {\n      var node = it.next();\n      pts[i++] = node.getCoordinate().copy();\n    }\n    return pts\n  };\n  GeometryGraph.prototype.getBoundaryNodes = function getBoundaryNodes () {\n    if (this._boundaryNodes === null) { this._boundaryNodes = this._nodes.getBoundaryNodes(this._argIndex); }\n    return this._boundaryNodes\n  };\n  GeometryGraph.prototype.addSelfIntersectionNode = function addSelfIntersectionNode (argIndex, coord, loc) {\n    if (this.isBoundaryNode(argIndex, coord)) { return null }\n    if (loc === Location.BOUNDARY && this._useBoundaryDeterminationRule) { this.insertBoundaryPoint(argIndex, coord); } else { this.insertPoint(argIndex, coord, loc); }\n  };\n  GeometryGraph.prototype.addPolygonRing = function addPolygonRing (lr, cwLeft, cwRight) {\n    if (lr.isEmpty()) { return null }\n    var coord = CoordinateArrays.removeRepeatedPoints(lr.getCoordinates());\n    if (coord.length < 4) {\n      this._hasTooFewPoints = true;\n      this._invalidPoint = coord[0];\n      return null\n    }\n    var left = cwLeft;\n    var right = cwRight;\n    if (CGAlgorithms.isCCW(coord)) {\n      left = cwRight;\n      right = cwLeft;\n    }\n    var e = new Edge(coord, new Label(this._argIndex, Location.BOUNDARY, left, right));\n    this._lineEdgeMap.put(lr, e);\n    this.insertEdge(e);\n    this.insertPoint(this._argIndex, coord[0], Location.BOUNDARY);\n  };\n  GeometryGraph.prototype.insertPoint = function insertPoint (argIndex, coord, onLocation) {\n    var n = this._nodes.addNode(coord);\n    var lbl = n.getLabel();\n    if (lbl === null) {\n      n._label = new Label(argIndex, onLocation);\n    } else { lbl.setLocation(argIndex, onLocation); }\n  };\n  GeometryGraph.prototype.createEdgeSetIntersector = function createEdgeSetIntersector () {\n    return new SimpleMCSweepLineIntersector()\n  };\n  GeometryGraph.prototype.addSelfIntersectionNodes = function addSelfIntersectionNodes (argIndex) {\n    var this$1 = this;\n\n    for (var i = this._edges.iterator(); i.hasNext();) {\n      var e = i.next();\n      var eLoc = e.getLabel().getLocation(argIndex);\n      for (var eiIt = e.eiList.iterator(); eiIt.hasNext();) {\n        var ei = eiIt.next();\n        this$1.addSelfIntersectionNode(argIndex, ei.coord, eLoc);\n      }\n    }\n  };\n  GeometryGraph.prototype.add = function add () {\n    if (arguments.length === 1) {\n      var g = arguments[0];\n      if (g.isEmpty()) { return null }\n      if (g instanceof MultiPolygon) { this._useBoundaryDeterminationRule = false; }\n      if (g instanceof Polygon) { this.addPolygon(g); }\n      else if (g instanceof LineString) { this.addLineString(g); }\n      else if (g instanceof Point) { this.addPoint(g); }\n      else if (g instanceof MultiPoint) { this.addCollection(g); }\n      else if (g instanceof MultiLineString) { this.addCollection(g); }\n      else if (g instanceof MultiPolygon) { this.addCollection(g); }\n      else if (g instanceof GeometryCollection) { this.addCollection(g); }\n      else { throw new Error(g.getClass().getName()) }\n    } else { return PlanarGraph$$1.prototype.add.apply(this, arguments) }\n  };\n  GeometryGraph.prototype.addCollection = function addCollection (gc) {\n    var this$1 = this;\n\n    for (var i = 0; i < gc.getNumGeometries(); i++) {\n      var g = gc.getGeometryN(i);\n      this$1.add(g);\n    }\n  };\n  GeometryGraph.prototype.locate = function locate (pt) {\n    if (hasInterface(this._parentGeom, Polygonal) && this._parentGeom.getNumGeometries() > 50) {\n      if (this._areaPtLocator === null) {\n        this._areaPtLocator = new IndexedPointInAreaLocator(this._parentGeom);\n      }\n      return this._areaPtLocator.locate(pt)\n    }\n    return this._ptLocator.locate(pt, this._parentGeom)\n  };\n  GeometryGraph.prototype.findEdge = function findEdge () {\n    if (arguments.length === 1) {\n      var line = arguments[0];\n      return this._lineEdgeMap.get(line)\n    } else { return PlanarGraph$$1.prototype.findEdge.apply(this, arguments) }\n  };\n  GeometryGraph.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  GeometryGraph.prototype.getClass = function getClass () {\n    return GeometryGraph\n  };\n  GeometryGraph.determineBoundary = function determineBoundary (boundaryNodeRule, boundaryCount) {\n    return boundaryNodeRule.isInBoundary(boundaryCount) ? Location.BOUNDARY : Location.INTERIOR\n  };\n\n  return GeometryGraph;\n}(PlanarGraph));\n\nvar GeometryGraphOp = function GeometryGraphOp () {\n  this._li = new RobustLineIntersector();\n  this._resultPrecisionModel = null;\n  this._arg = null;\n  if (arguments.length === 1) {\n    var g0 = arguments[0];\n    this.setComputationPrecision(g0.getPrecisionModel());\n    this._arg = new Array(1).fill(null);\n    this._arg[0] = new GeometryGraph(0, g0);\n  } else if (arguments.length === 2) {\n    var g0$1 = arguments[0];\n    var g1 = arguments[1];\n    var boundaryNodeRule = BoundaryNodeRule.OGC_SFS_BOUNDARY_RULE;\n    if (g0$1.getPrecisionModel().compareTo(g1.getPrecisionModel()) >= 0) { this.setComputationPrecision(g0$1.getPrecisionModel()); } else { this.setComputationPrecision(g1.getPrecisionModel()); }\n    this._arg = new Array(2).fill(null);\n    this._arg[0] = new GeometryGraph(0, g0$1, boundaryNodeRule);\n    this._arg[1] = new GeometryGraph(1, g1, boundaryNodeRule);\n  } else if (arguments.length === 3) {\n    var g0$2 = arguments[0];\n    var g1$1 = arguments[1];\n    var boundaryNodeRule$1 = arguments[2];\n    if (g0$2.getPrecisionModel().compareTo(g1$1.getPrecisionModel()) >= 0) { this.setComputationPrecision(g0$2.getPrecisionModel()); } else { this.setComputationPrecision(g1$1.getPrecisionModel()); }\n    this._arg = new Array(2).fill(null);\n    this._arg[0] = new GeometryGraph(0, g0$2, boundaryNodeRule$1);\n    this._arg[1] = new GeometryGraph(1, g1$1, boundaryNodeRule$1);\n  }\n};\nGeometryGraphOp.prototype.getArgGeometry = function getArgGeometry (i) {\n  return this._arg[i].getGeometry()\n};\nGeometryGraphOp.prototype.setComputationPrecision = function setComputationPrecision (pm) {\n  this._resultPrecisionModel = pm;\n  this._li.setPrecisionModel(this._resultPrecisionModel);\n};\nGeometryGraphOp.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nGeometryGraphOp.prototype.getClass = function getClass () {\n  return GeometryGraphOp\n};\n\n// operation.geometrygraph\n\nvar GeometryMapper = function GeometryMapper () {};\n\nGeometryMapper.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nGeometryMapper.prototype.getClass = function getClass () {\n  return GeometryMapper\n};\nGeometryMapper.map = function map () {\n  if (arguments[0] instanceof Geometry && hasInterface(arguments[1], GeometryMapper.MapOp)) {\n    var geom = arguments[0];\n    var op = arguments[1];\n    var mapped = new ArrayList();\n    for (var i = 0; i < geom.getNumGeometries(); i++) {\n      var g = op.map(geom.getGeometryN(i));\n      if (g !== null) { mapped.add(g); }\n    }\n    return geom.getFactory().buildGeometry(mapped)\n  } else if (hasInterface(arguments[0], Collection) && hasInterface(arguments[1], GeometryMapper.MapOp)) {\n    var geoms = arguments[0];\n    var op$1 = arguments[1];\n    var mapped$1 = new ArrayList();\n    for (var i$1 = geoms.iterator(); i$1.hasNext();) {\n      var g$1 = i$1.next();\n      var gr = op$1.map(g$1);\n      if (gr !== null) { mapped$1.add(gr); }\n    }\n    return mapped$1\n  }\n};\nGeometryMapper.MapOp = function MapOp () {};\n\nvar OverlayOp = (function (GeometryGraphOp) {\n  function OverlayOp () {\n    var g0 = arguments[0];\n    var g1 = arguments[1];\n    GeometryGraphOp.call(this, g0, g1);\n    this._ptLocator = new PointLocator();\n    this._geomFact = null;\n    this._resultGeom = null;\n    this._graph = null;\n    this._edgeList = new EdgeList();\n    this._resultPolyList = new ArrayList();\n    this._resultLineList = new ArrayList();\n    this._resultPointList = new ArrayList();\n    this._graph = new PlanarGraph(new OverlayNodeFactory());\n    this._geomFact = g0.getFactory();\n  }\n\n  if ( GeometryGraphOp ) OverlayOp.__proto__ = GeometryGraphOp;\n  OverlayOp.prototype = Object.create( GeometryGraphOp && GeometryGraphOp.prototype );\n  OverlayOp.prototype.constructor = OverlayOp;\n  OverlayOp.prototype.insertUniqueEdge = function insertUniqueEdge (e) {\n    var existingEdge = this._edgeList.findEqualEdge(e);\n    if (existingEdge !== null) {\n      var existingLabel = existingEdge.getLabel();\n      var labelToMerge = e.getLabel();\n      if (!existingEdge.isPointwiseEqual(e)) {\n        labelToMerge = new Label(e.getLabel());\n        labelToMerge.flip();\n      }\n      var depth = existingEdge.getDepth();\n      if (depth.isNull()) {\n        depth.add(existingLabel);\n      }\n      depth.add(labelToMerge);\n      existingLabel.merge(labelToMerge);\n    } else {\n      this._edgeList.add(e);\n    }\n  };\n  OverlayOp.prototype.getGraph = function getGraph () {\n    return this._graph\n  };\n  OverlayOp.prototype.cancelDuplicateResultEdges = function cancelDuplicateResultEdges () {\n    for (var it = this._graph.getEdgeEnds().iterator(); it.hasNext();) {\n      var de = it.next();\n      var sym = de.getSym();\n      if (de.isInResult() && sym.isInResult()) {\n        de.setInResult(false);\n        sym.setInResult(false);\n      }\n    }\n  };\n  OverlayOp.prototype.isCoveredByLA = function isCoveredByLA (coord) {\n    if (this.isCovered(coord, this._resultLineList)) { return true }\n    if (this.isCovered(coord, this._resultPolyList)) { return true }\n    return false\n  };\n  OverlayOp.prototype.computeGeometry = function computeGeometry (resultPointList, resultLineList, resultPolyList, opcode) {\n    var geomList = new ArrayList();\n    geomList.addAll(resultPointList);\n    geomList.addAll(resultLineList);\n    geomList.addAll(resultPolyList);\n    if (geomList.isEmpty()) { return OverlayOp.createEmptyResult(opcode, this._arg[0].getGeometry(), this._arg[1].getGeometry(), this._geomFact) }\n    return this._geomFact.buildGeometry(geomList)\n  };\n  OverlayOp.prototype.mergeSymLabels = function mergeSymLabels () {\n    for (var nodeit = this._graph.getNodes().iterator(); nodeit.hasNext();) {\n      var node = nodeit.next();\n      node.getEdges().mergeSymLabels();\n    }\n  };\n  OverlayOp.prototype.isCovered = function isCovered (coord, geomList) {\n    var this$1 = this;\n\n    for (var it = geomList.iterator(); it.hasNext();) {\n      var geom = it.next();\n      var loc = this$1._ptLocator.locate(coord, geom);\n      if (loc !== Location.EXTERIOR) { return true }\n    }\n    return false\n  };\n  OverlayOp.prototype.replaceCollapsedEdges = function replaceCollapsedEdges () {\n    var newEdges = new ArrayList();\n    for (var it = this._edgeList.iterator(); it.hasNext();) {\n      var e = it.next();\n      if (e.isCollapsed()) {\n        it.remove();\n        newEdges.add(e.getCollapsedEdge());\n      }\n    }\n    this._edgeList.addAll(newEdges);\n  };\n  OverlayOp.prototype.updateNodeLabelling = function updateNodeLabelling () {\n    for (var nodeit = this._graph.getNodes().iterator(); nodeit.hasNext();) {\n      var node = nodeit.next();\n      var lbl = node.getEdges().getLabel();\n      node.getLabel().merge(lbl);\n    }\n  };\n  OverlayOp.prototype.getResultGeometry = function getResultGeometry (overlayOpCode) {\n    this.computeOverlay(overlayOpCode);\n    return this._resultGeom\n  };\n  OverlayOp.prototype.insertUniqueEdges = function insertUniqueEdges (edges) {\n    var this$1 = this;\n\n    for (var i = edges.iterator(); i.hasNext();) {\n      var e = i.next();\n      this$1.insertUniqueEdge(e);\n    }\n  };\n  OverlayOp.prototype.computeOverlay = function computeOverlay (opCode) {\n    this.copyPoints(0);\n    this.copyPoints(1);\n    this._arg[0].computeSelfNodes(this._li, false);\n    this._arg[1].computeSelfNodes(this._li, false);\n    this._arg[0].computeEdgeIntersections(this._arg[1], this._li, true);\n    var baseSplitEdges = new ArrayList();\n    this._arg[0].computeSplitEdges(baseSplitEdges);\n    this._arg[1].computeSplitEdges(baseSplitEdges);\n    // const splitEdges = baseSplitEdges\n    this.insertUniqueEdges(baseSplitEdges);\n    this.computeLabelsFromDepths();\n    this.replaceCollapsedEdges();\n    EdgeNodingValidator.checkValid(this._edgeList.getEdges());\n    this._graph.addEdges(this._edgeList.getEdges());\n    this.computeLabelling();\n    this.labelIncompleteNodes();\n    this.findResultAreaEdges(opCode);\n    this.cancelDuplicateResultEdges();\n    var polyBuilder = new PolygonBuilder(this._geomFact);\n    polyBuilder.add(this._graph);\n    this._resultPolyList = polyBuilder.getPolygons();\n    var lineBuilder = new LineBuilder(this, this._geomFact, this._ptLocator);\n    this._resultLineList = lineBuilder.build(opCode);\n    var pointBuilder = new PointBuilder(this, this._geomFact, this._ptLocator);\n    this._resultPointList = pointBuilder.build(opCode);\n    this._resultGeom = this.computeGeometry(this._resultPointList, this._resultLineList, this._resultPolyList, opCode);\n  };\n  OverlayOp.prototype.labelIncompleteNode = function labelIncompleteNode (n, targetIndex) {\n    var loc = this._ptLocator.locate(n.getCoordinate(), this._arg[targetIndex].getGeometry());\n    n.getLabel().setLocation(targetIndex, loc);\n  };\n  OverlayOp.prototype.copyPoints = function copyPoints (argIndex) {\n    var this$1 = this;\n\n    for (var i = this._arg[argIndex].getNodeIterator(); i.hasNext();) {\n      var graphNode = i.next();\n      var newNode = this$1._graph.addNode(graphNode.getCoordinate());\n      newNode.setLabel(argIndex, graphNode.getLabel().getLocation(argIndex));\n    }\n  };\n  OverlayOp.prototype.findResultAreaEdges = function findResultAreaEdges (opCode) {\n    for (var it = this._graph.getEdgeEnds().iterator(); it.hasNext();) {\n      var de = it.next();\n      var label = de.getLabel();\n      if (label.isArea() && !de.isInteriorAreaEdge() && OverlayOp.isResultOfOp(label.getLocation(0, Position.RIGHT), label.getLocation(1, Position.RIGHT), opCode)) {\n        de.setInResult(true);\n      }\n    }\n  };\n  OverlayOp.prototype.computeLabelsFromDepths = function computeLabelsFromDepths () {\n    for (var it = this._edgeList.iterator(); it.hasNext();) {\n      var e = it.next();\n      var lbl = e.getLabel();\n      var depth = e.getDepth();\n      if (!depth.isNull()) {\n        depth.normalize();\n        for (var i = 0; i < 2; i++) {\n          if (!lbl.isNull(i) && lbl.isArea() && !depth.isNull(i)) {\n            if (depth.getDelta(i) === 0) {\n              lbl.toLine(i);\n            } else {\n              Assert.isTrue(!depth.isNull(i, Position.LEFT), 'depth of LEFT side has not been initialized');\n              lbl.setLocation(i, Position.LEFT, depth.getLocation(i, Position.LEFT));\n              Assert.isTrue(!depth.isNull(i, Position.RIGHT), 'depth of RIGHT side has not been initialized');\n              lbl.setLocation(i, Position.RIGHT, depth.getLocation(i, Position.RIGHT));\n            }\n          }\n        }\n      }\n    }\n  };\n  OverlayOp.prototype.computeLabelling = function computeLabelling () {\n    var this$1 = this;\n\n    for (var nodeit = this._graph.getNodes().iterator(); nodeit.hasNext();) {\n      var node = nodeit.next();\n      node.getEdges().computeLabelling(this$1._arg);\n    }\n    this.mergeSymLabels();\n    this.updateNodeLabelling();\n  };\n  OverlayOp.prototype.labelIncompleteNodes = function labelIncompleteNodes () {\n    var this$1 = this;\n\n    // let nodeCount = 0\n    for (var ni = this._graph.getNodes().iterator(); ni.hasNext();) {\n      var n = ni.next();\n      var label = n.getLabel();\n      if (n.isIsolated()) {\n        // nodeCount++\n        if (label.isNull(0)) { this$1.labelIncompleteNode(n, 0); } else { this$1.labelIncompleteNode(n, 1); }\n      }\n      n.getEdges().updateLabelling(label);\n    }\n  };\n  OverlayOp.prototype.isCoveredByA = function isCoveredByA (coord) {\n    if (this.isCovered(coord, this._resultPolyList)) { return true }\n    return false\n  };\n  OverlayOp.prototype.interfaces_ = function interfaces_ () {\n    return []\n  };\n  OverlayOp.prototype.getClass = function getClass () {\n    return OverlayOp\n  };\n\n  return OverlayOp;\n}(GeometryGraphOp));\n\nOverlayOp.overlayOp = function (geom0, geom1, opCode) {\n  var gov = new OverlayOp(geom0, geom1);\n  var geomOv = gov.getResultGeometry(opCode);\n  return geomOv\n};\nOverlayOp.intersection = function (g, other) {\n  if (g.isEmpty() || other.isEmpty()) { return OverlayOp.createEmptyResult(OverlayOp.INTERSECTION, g, other, g.getFactory()) }\n  if (g.isGeometryCollection()) {\n    var g2 = other;\n    return GeometryCollectionMapper.map(g, {\n      interfaces_: function () {\n        return [GeometryMapper.MapOp]\n      },\n      map: function (g) {\n        return g.intersection(g2)\n      }\n    })\n  }\n  g.checkNotGeometryCollection(g);\n  g.checkNotGeometryCollection(other);\n  return SnapIfNeededOverlayOp.overlayOp(g, other, OverlayOp.INTERSECTION)\n};\nOverlayOp.symDifference = function (g, other) {\n  if (g.isEmpty() || other.isEmpty()) {\n    if (g.isEmpty() && other.isEmpty()) { return OverlayOp.createEmptyResult(OverlayOp.SYMDIFFERENCE, g, other, g.getFactory()) }\n    if (g.isEmpty()) { return other.copy() }\n    if (other.isEmpty()) { return g.copy() }\n  }\n  g.checkNotGeometryCollection(g);\n  g.checkNotGeometryCollection(other);\n  return SnapIfNeededOverlayOp.overlayOp(g, other, OverlayOp.SYMDIFFERENCE)\n};\nOverlayOp.resultDimension = function (opCode, g0, g1) {\n  var dim0 = g0.getDimension();\n  var dim1 = g1.getDimension();\n  var resultDimension = -1;\n  switch (opCode) {\n    case OverlayOp.INTERSECTION:\n      resultDimension = Math.min(dim0, dim1);\n      break\n    case OverlayOp.UNION:\n      resultDimension = Math.max(dim0, dim1);\n      break\n    case OverlayOp.DIFFERENCE:\n      resultDimension = dim0;\n      break\n    case OverlayOp.SYMDIFFERENCE:\n      resultDimension = Math.max(dim0, dim1);\n      break\n    default:\n  }\n  return resultDimension\n};\nOverlayOp.createEmptyResult = function (overlayOpCode, a, b, geomFact) {\n  var result = null;\n  switch (OverlayOp.resultDimension(overlayOpCode, a, b)) {\n    case -1:\n      result = geomFact.createGeometryCollection(new Array(0).fill(null));\n      break\n    case 0:\n      result = geomFact.createPoint();\n      break\n    case 1:\n      result = geomFact.createLineString();\n      break\n    case 2:\n      result = geomFact.createPolygon();\n      break\n    default:\n  }\n  return result\n};\nOverlayOp.difference = function (g, other) {\n  if (g.isEmpty()) { return OverlayOp.createEmptyResult(OverlayOp.DIFFERENCE, g, other, g.getFactory()) }\n  if (other.isEmpty()) { return g.copy() }\n  g.checkNotGeometryCollection(g);\n  g.checkNotGeometryCollection(other);\n  return SnapIfNeededOverlayOp.overlayOp(g, other, OverlayOp.DIFFERENCE)\n};\nOverlayOp.isResultOfOp = function () {\n  if (arguments.length === 2) {\n    var label = arguments[0];\n    var opCode = arguments[1];\n    var loc0 = label.getLocation(0);\n    var loc1 = label.getLocation(1);\n    return OverlayOp.isResultOfOp(loc0, loc1, opCode)\n  } else if (arguments.length === 3) {\n    var loc0$1 = arguments[0];\n    var loc1$1 = arguments[1];\n    var overlayOpCode = arguments[2];\n    if (loc0$1 === Location.BOUNDARY) { loc0$1 = Location.INTERIOR; }\n    if (loc1$1 === Location.BOUNDARY) { loc1$1 = Location.INTERIOR; }\n    switch (overlayOpCode) {\n      case OverlayOp.INTERSECTION:\n        return loc0$1 === Location.INTERIOR && loc1$1 === Location.INTERIOR\n      case OverlayOp.UNION:\n        return loc0$1 === Location.INTERIOR || loc1$1 === Location.INTERIOR\n      case OverlayOp.DIFFERENCE:\n        return loc0$1 === Location.INTERIOR && loc1$1 !== Location.INTERIOR\n      case OverlayOp.SYMDIFFERENCE:\n        return (loc0$1 === Location.INTERIOR && loc1$1 !== Location.INTERIOR) || (loc0$1 !== Location.INTERIOR && loc1$1 === Location.INTERIOR)\n      default:\n    }\n    return false\n  }\n};\nOverlayOp.INTERSECTION = 1;\nOverlayOp.UNION = 2;\nOverlayOp.DIFFERENCE = 3;\nOverlayOp.SYMDIFFERENCE = 4;\n\nvar FuzzyPointLocator = function FuzzyPointLocator () {\n  this._g = null;\n  this._boundaryDistanceTolerance = null;\n  this._linework = null;\n  this._ptLocator = new PointLocator();\n  this._seg = new LineSegment();\n  var g = arguments[0];\n  var boundaryDistanceTolerance = arguments[1];\n  this._g = g;\n  this._boundaryDistanceTolerance = boundaryDistanceTolerance;\n  this._linework = this.extractLinework(g);\n};\nFuzzyPointLocator.prototype.isWithinToleranceOfBoundary = function isWithinToleranceOfBoundary (pt) {\n    var this$1 = this;\n\n  for (var i = 0; i < this._linework.getNumGeometries(); i++) {\n    var line = this$1._linework.getGeometryN(i);\n    var seq = line.getCoordinateSequence();\n    for (var j = 0; j < seq.size() - 1; j++) {\n      seq.getCoordinate(j, this$1._seg.p0);\n      seq.getCoordinate(j + 1, this$1._seg.p1);\n      var dist = this$1._seg.distance(pt);\n      if (dist <= this$1._boundaryDistanceTolerance) { return true }\n    }\n  }\n  return false\n};\nFuzzyPointLocator.prototype.getLocation = function getLocation (pt) {\n  if (this.isWithinToleranceOfBoundary(pt)) { return Location.BOUNDARY }\n  return this._ptLocator.locate(pt, this._g)\n};\nFuzzyPointLocator.prototype.extractLinework = function extractLinework (g) {\n  var extracter = new PolygonalLineworkExtracter();\n  g.apply(extracter);\n  var linework = extracter.getLinework();\n  var lines = GeometryFactory.toLineStringArray(linework);\n  return g.getFactory().createMultiLineString(lines)\n};\nFuzzyPointLocator.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nFuzzyPointLocator.prototype.getClass = function getClass () {\n  return FuzzyPointLocator\n};\n\nvar PolygonalLineworkExtracter = function PolygonalLineworkExtracter () {\n  this._linework = null;\n  this._linework = new ArrayList();\n};\nPolygonalLineworkExtracter.prototype.getLinework = function getLinework () {\n  return this._linework\n};\nPolygonalLineworkExtracter.prototype.filter = function filter (g) {\n    var this$1 = this;\n\n  if (g instanceof Polygon) {\n    var poly = g;\n    this._linework.add(poly.getExteriorRing());\n    for (var i = 0; i < poly.getNumInteriorRing(); i++) {\n      this$1._linework.add(poly.getInteriorRingN(i));\n    }\n  }\n};\nPolygonalLineworkExtracter.prototype.interfaces_ = function interfaces_ () {\n  return [GeometryFilter]\n};\nPolygonalLineworkExtracter.prototype.getClass = function getClass () {\n  return PolygonalLineworkExtracter\n};\n\nvar OffsetPointGenerator = function OffsetPointGenerator () {\n  this._g = null;\n  this._doLeft = true;\n  this._doRight = true;\n  var g = arguments[0];\n  this._g = g;\n};\nOffsetPointGenerator.prototype.extractPoints = function extractPoints (line, offsetDistance, offsetPts) {\n    var this$1 = this;\n\n  var pts = line.getCoordinates();\n  for (var i = 0; i < pts.length - 1; i++) {\n    this$1.computeOffsetPoints(pts[i], pts[i + 1], offsetDistance, offsetPts);\n  }\n};\nOffsetPointGenerator.prototype.setSidesToGenerate = function setSidesToGenerate (doLeft, doRight) {\n  this._doLeft = doLeft;\n  this._doRight = doRight;\n};\nOffsetPointGenerator.prototype.getPoints = function getPoints (offsetDistance) {\n    var this$1 = this;\n\n  var offsetPts = new ArrayList();\n  var lines = LinearComponentExtracter.getLines(this._g);\n  for (var i = lines.iterator(); i.hasNext();) {\n    var line = i.next();\n    this$1.extractPoints(line, offsetDistance, offsetPts);\n  }\n  return offsetPts\n};\nOffsetPointGenerator.prototype.computeOffsetPoints = function computeOffsetPoints (p0, p1, offsetDistance, offsetPts) {\n  var dx = p1.x - p0.x;\n  var dy = p1.y - p0.y;\n  var len = Math.sqrt(dx * dx + dy * dy);\n  var ux = offsetDistance * dx / len;\n  var uy = offsetDistance * dy / len;\n  var midX = (p1.x + p0.x) / 2;\n  var midY = (p1.y + p0.y) / 2;\n  if (this._doLeft) {\n    var offsetLeft = new Coordinate(midX - uy, midY + ux);\n    offsetPts.add(offsetLeft);\n  }\n  if (this._doRight) {\n    var offsetRight = new Coordinate(midX + uy, midY - ux);\n    offsetPts.add(offsetRight);\n  }\n};\nOffsetPointGenerator.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nOffsetPointGenerator.prototype.getClass = function getClass () {\n  return OffsetPointGenerator\n};\n\nvar OverlayResultValidator = function OverlayResultValidator () {\n  this._geom = null;\n  this._locFinder = null;\n  this._location = new Array(3).fill(null);\n  this._invalidLocation = null;\n  this._boundaryDistanceTolerance = OverlayResultValidator.TOLERANCE;\n  this._testCoords = new ArrayList();\n  var a = arguments[0];\n  var b = arguments[1];\n  var result = arguments[2];\n  this._boundaryDistanceTolerance = OverlayResultValidator.computeBoundaryDistanceTolerance(a, b);\n  this._geom = [a, b, result];\n  this._locFinder = [new FuzzyPointLocator(this._geom[0], this._boundaryDistanceTolerance), new FuzzyPointLocator(this._geom[1], this._boundaryDistanceTolerance), new FuzzyPointLocator(this._geom[2], this._boundaryDistanceTolerance)];\n};\n\nvar staticAccessors$46 = { TOLERANCE: { configurable: true } };\nOverlayResultValidator.prototype.reportResult = function reportResult (overlayOp, location, expectedInterior) {\n  System.out.println('Overlay result invalid - A:' + Location.toLocationSymbol(location[0]) + ' B:' + Location.toLocationSymbol(location[1]) + ' expected:' + (expectedInterior ? 'i' : 'e') + ' actual:' + Location.toLocationSymbol(location[2]));\n};\nOverlayResultValidator.prototype.isValid = function isValid (overlayOp) {\n  this.addTestPts(this._geom[0]);\n  this.addTestPts(this._geom[1]);\n  var isValid = this.checkValid(overlayOp);\n  return isValid\n};\nOverlayResultValidator.prototype.checkValid = function checkValid () {\n    var this$1 = this;\n\n  if (arguments.length === 1) {\n    var overlayOp = arguments[0];\n    for (var i = 0; i < this._testCoords.size(); i++) {\n      var pt = this$1._testCoords.get(i);\n      if (!this$1.checkValid(overlayOp, pt)) {\n        this$1._invalidLocation = pt;\n        return false\n      }\n    }\n    return true\n  } else if (arguments.length === 2) {\n    var overlayOp$1 = arguments[0];\n    var pt$1 = arguments[1];\n    this._location[0] = this._locFinder[0].getLocation(pt$1);\n    this._location[1] = this._locFinder[1].getLocation(pt$1);\n    this._location[2] = this._locFinder[2].getLocation(pt$1);\n    if (OverlayResultValidator.hasLocation(this._location, Location.BOUNDARY)) { return true }\n    return this.isValidResult(overlayOp$1, this._location)\n  }\n};\nOverlayResultValidator.prototype.addTestPts = function addTestPts (g) {\n  var ptGen = new OffsetPointGenerator(g);\n  this._testCoords.addAll(ptGen.getPoints(5 * this._boundaryDistanceTolerance));\n};\nOverlayResultValidator.prototype.isValidResult = function isValidResult (overlayOp, location) {\n  var expectedInterior = OverlayOp.isResultOfOp(location[0], location[1], overlayOp);\n  var resultInInterior = location[2] === Location.INTERIOR;\n  var isValid = !(expectedInterior ^ resultInInterior);\n  if (!isValid) { this.reportResult(overlayOp, location, expectedInterior); }\n  return isValid\n};\nOverlayResultValidator.prototype.getInvalidLocation = function getInvalidLocation () {\n  return this._invalidLocation\n};\nOverlayResultValidator.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nOverlayResultValidator.prototype.getClass = function getClass () {\n  return OverlayResultValidator\n};\nOverlayResultValidator.hasLocation = function hasLocation (location, loc) {\n  for (var i = 0; i < 3; i++) {\n    if (location[i] === loc) { return true }\n  }\n  return false\n};\nOverlayResultValidator.computeBoundaryDistanceTolerance = function computeBoundaryDistanceTolerance (g0, g1) {\n  return Math.min(GeometrySnapper.computeSizeBasedSnapTolerance(g0), GeometrySnapper.computeSizeBasedSnapTolerance(g1))\n};\nOverlayResultValidator.isValid = function isValid (a, b, overlayOp, result) {\n  var validator = new OverlayResultValidator(a, b, result);\n  return validator.isValid(overlayOp)\n};\nstaticAccessors$46.TOLERANCE.get = function () { return 0.000001 };\n\nObject.defineProperties( OverlayResultValidator, staticAccessors$46 );\n\n// operation.overlay\n\nvar GeometryCombiner = function GeometryCombiner (geoms) {\n  this._geomFactory = null;\n  this._skipEmpty = false;\n  this._inputGeoms = null;\n  this._geomFactory = GeometryCombiner.extractFactory(geoms);\n  this._inputGeoms = geoms;\n};\nGeometryCombiner.prototype.extractElements = function extractElements (geom, elems) {\n    var this$1 = this;\n\n  if (geom === null) { return null }\n  for (var i = 0; i < geom.getNumGeometries(); i++) {\n    var elemGeom = geom.getGeometryN(i);\n    if (this$1._skipEmpty && elemGeom.isEmpty()) { continue }\n    elems.add(elemGeom);\n  }\n};\nGeometryCombiner.prototype.combine = function combine () {\n    var this$1 = this;\n\n  var elems = new ArrayList();\n  for (var i = this._inputGeoms.iterator(); i.hasNext();) {\n    var g = i.next();\n    this$1.extractElements(g, elems);\n  }\n  if (elems.size() === 0) {\n    if (this._geomFactory !== null) {\n      return this._geomFactory.createGeometryCollection(null)\n    }\n    return null\n  }\n  return this._geomFactory.buildGeometry(elems)\n};\nGeometryCombiner.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nGeometryCombiner.prototype.getClass = function getClass () {\n  return GeometryCombiner\n};\nGeometryCombiner.combine = function combine () {\n  if (arguments.length === 1) {\n    var geoms = arguments[0];\n    var combiner = new GeometryCombiner(geoms);\n    return combiner.combine()\n  } else if (arguments.length === 2) {\n    var g0 = arguments[0];\n    var g1 = arguments[1];\n    var combiner$1 = new GeometryCombiner(GeometryCombiner.createList(g0, g1));\n    return combiner$1.combine()\n  } else if (arguments.length === 3) {\n    var g0$1 = arguments[0];\n    var g1$1 = arguments[1];\n    var g2 = arguments[2];\n    var combiner$2 = new GeometryCombiner(GeometryCombiner.createList(g0$1, g1$1, g2));\n    return combiner$2.combine()\n  }\n};\nGeometryCombiner.extractFactory = function extractFactory (geoms) {\n  if (geoms.isEmpty()) { return null }\n  return geoms.iterator().next().getFactory()\n};\nGeometryCombiner.createList = function createList () {\n  if (arguments.length === 2) {\n    var obj0 = arguments[0];\n    var obj1 = arguments[1];\n    var list = new ArrayList();\n    list.add(obj0);\n    list.add(obj1);\n    return list\n  } else if (arguments.length === 3) {\n    var obj0$1 = arguments[0];\n    var obj1$1 = arguments[1];\n    var obj2 = arguments[2];\n    var list$1 = new ArrayList();\n    list$1.add(obj0$1);\n    list$1.add(obj1$1);\n    list$1.add(obj2);\n    return list$1\n  }\n};\n\nvar CascadedPolygonUnion = function CascadedPolygonUnion () {\n  this._inputPolys = null;\n  this._geomFactory = null;\n  var polys = arguments[0];\n  this._inputPolys = polys;\n  if (this._inputPolys === null) { this._inputPolys = new ArrayList(); }\n};\n\nvar staticAccessors$47 = { STRTREE_NODE_CAPACITY: { configurable: true } };\nCascadedPolygonUnion.prototype.reduceToGeometries = function reduceToGeometries (geomTree) {\n    var this$1 = this;\n\n  var geoms = new ArrayList();\n  for (var i = geomTree.iterator(); i.hasNext();) {\n    var o = i.next();\n    var geom = null;\n    if (hasInterface(o, List)) {\n      geom = this$1.unionTree(o);\n    } else if (o instanceof Geometry) {\n      geom = o;\n    }\n    geoms.add(geom);\n  }\n  return geoms\n};\nCascadedPolygonUnion.prototype.extractByEnvelope = function extractByEnvelope (env, geom, disjointGeoms) {\n  var intersectingGeoms = new ArrayList();\n  for (var i = 0; i < geom.getNumGeometries(); i++) {\n    var elem = geom.getGeometryN(i);\n    if (elem.getEnvelopeInternal().intersects(env)) { intersectingGeoms.add(elem); } else { disjointGeoms.add(elem); }\n  }\n  return this._geomFactory.buildGeometry(intersectingGeoms)\n};\nCascadedPolygonUnion.prototype.unionOptimized = function unionOptimized (g0, g1) {\n  var g0Env = g0.getEnvelopeInternal();\n  var g1Env = g1.getEnvelopeInternal();\n  if (!g0Env.intersects(g1Env)) {\n    var combo = GeometryCombiner.combine(g0, g1);\n    return combo\n  }\n  if (g0.getNumGeometries() <= 1 && g1.getNumGeometries() <= 1) { return this.unionActual(g0, g1) }\n  var commonEnv = g0Env.intersection(g1Env);\n  return this.unionUsingEnvelopeIntersection(g0, g1, commonEnv)\n};\nCascadedPolygonUnion.prototype.union = function union () {\n  if (this._inputPolys === null) { throw new Error('union() method cannot be called twice') }\n  if (this._inputPolys.isEmpty()) { return null }\n  this._geomFactory = this._inputPolys.iterator().next().getFactory();\n  var index = new STRtree(CascadedPolygonUnion.STRTREE_NODE_CAPACITY);\n  for (var i = this._inputPolys.iterator(); i.hasNext();) {\n    var item = i.next();\n    index.insert(item.getEnvelopeInternal(), item);\n  }\n  this._inputPolys = null;\n  var itemTree = index.itemsTree();\n  var unionAll = this.unionTree(itemTree);\n  return unionAll\n};\nCascadedPolygonUnion.prototype.binaryUnion = function binaryUnion () {\n  if (arguments.length === 1) {\n    var geoms = arguments[0];\n    return this.binaryUnion(geoms, 0, geoms.size())\n  } else if (arguments.length === 3) {\n    var geoms$1 = arguments[0];\n    var start = arguments[1];\n    var end = arguments[2];\n    if (end - start <= 1) {\n      var g0 = CascadedPolygonUnion.getGeometry(geoms$1, start);\n      return this.unionSafe(g0, null)\n    } else if (end - start === 2) {\n      return this.unionSafe(CascadedPolygonUnion.getGeometry(geoms$1, start), CascadedPolygonUnion.getGeometry(geoms$1, start + 1))\n    } else {\n      var mid = Math.trunc((end + start) / 2);\n      var g0$1 = this.binaryUnion(geoms$1, start, mid);\n      var g1 = this.binaryUnion(geoms$1, mid, end);\n      return this.unionSafe(g0$1, g1)\n    }\n  }\n};\nCascadedPolygonUnion.prototype.repeatedUnion = function repeatedUnion (geoms) {\n  var union = null;\n  for (var i = geoms.iterator(); i.hasNext();) {\n    var g = i.next();\n    if (union === null) { union = g.copy(); } else { union = union.union(g); }\n  }\n  return union\n};\nCascadedPolygonUnion.prototype.unionSafe = function unionSafe (g0, g1) {\n  if (g0 === null && g1 === null) { return null }\n  if (g0 === null) { return g1.copy() }\n  if (g1 === null) { return g0.copy() }\n  return this.unionOptimized(g0, g1)\n};\nCascadedPolygonUnion.prototype.unionActual = function unionActual (g0, g1) {\n  return CascadedPolygonUnion.restrictToPolygons(g0.union(g1))\n};\nCascadedPolygonUnion.prototype.unionTree = function unionTree (geomTree) {\n  var geoms = this.reduceToGeometries(geomTree);\n  var union = this.binaryUnion(geoms);\n  return union\n};\nCascadedPolygonUnion.prototype.unionUsingEnvelopeIntersection = function unionUsingEnvelopeIntersection (g0, g1, common) {\n  var disjointPolys = new ArrayList();\n  var g0Int = this.extractByEnvelope(common, g0, disjointPolys);\n  var g1Int = this.extractByEnvelope(common, g1, disjointPolys);\n  var union = this.unionActual(g0Int, g1Int);\n  disjointPolys.add(union);\n  var overallUnion = GeometryCombiner.combine(disjointPolys);\n  return overallUnion\n};\nCascadedPolygonUnion.prototype.bufferUnion = function bufferUnion () {\n  if (arguments.length === 1) {\n    var geoms = arguments[0];\n    var factory = geoms.get(0).getFactory();\n    var gColl = factory.buildGeometry(geoms);\n    var unionAll = gColl.buffer(0.0);\n    return unionAll\n  } else if (arguments.length === 2) {\n    var g0 = arguments[0];\n    var g1 = arguments[1];\n    var factory$1 = g0.getFactory();\n    var gColl$1 = factory$1.createGeometryCollection([g0, g1]);\n    var unionAll$1 = gColl$1.buffer(0.0);\n    return unionAll$1\n  }\n};\nCascadedPolygonUnion.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nCascadedPolygonUnion.prototype.getClass = function getClass () {\n  return CascadedPolygonUnion\n};\nCascadedPolygonUnion.restrictToPolygons = function restrictToPolygons (g) {\n  if (hasInterface(g, Polygonal)) {\n    return g\n  }\n  var polygons = PolygonExtracter.getPolygons(g);\n  if (polygons.size() === 1) { return polygons.get(0) }\n  return g.getFactory().createMultiPolygon(GeometryFactory.toPolygonArray(polygons))\n};\nCascadedPolygonUnion.getGeometry = function getGeometry (list, index) {\n  if (index >= list.size()) { return null }\n  return list.get(index)\n};\nCascadedPolygonUnion.union = function union (polys) {\n  var op = new CascadedPolygonUnion(polys);\n  return op.union()\n};\nstaticAccessors$47.STRTREE_NODE_CAPACITY.get = function () { return 4 };\n\nObject.defineProperties( CascadedPolygonUnion, staticAccessors$47 );\n\nvar UnionOp = function UnionOp () {};\n\nUnionOp.prototype.interfaces_ = function interfaces_ () {\n  return []\n};\nUnionOp.prototype.getClass = function getClass () {\n  return UnionOp\n};\nUnionOp.union = function union (g, other) {\n  if (g.isEmpty() || other.isEmpty()) {\n    if (g.isEmpty() && other.isEmpty()) { return OverlayOp.createEmptyResult(OverlayOp.UNION, g, other, g.getFactory()) }\n    if (g.isEmpty()) { return other.copy() }\n    if (other.isEmpty()) { return g.copy() }\n  }\n  g.checkNotGeometryCollection(g);\n  g.checkNotGeometryCollection(other);\n  return SnapIfNeededOverlayOp.overlayOp(g, other, OverlayOp.UNION)\n};\n\n// operation.union\n\n// operation\n\n/**\n * Polyfill for IE support\n */\n\nexport { GeoJSONReader, GeoJSONWriter, OverlayOp, UnionOp, BufferOp };\n","import { GeoJSONReader, GeoJSONWriter, UnionOp } from 'turf-jsts';\n\n/**\n * Takes two or more {@link Polygon|polygons} and returns a combined polygon. If the input polygons are not contiguous, this function returns a {@link MultiPolygon} feature.\n *\n * @name union\n * @param {...Feature<Polygon>} A polygon to combine\n * @returns {Feature<(Polygon|MultiPolygon)>} a combined {@link Polygon} or {@link MultiPolygon} feature\n * @example\n * var poly1 = turf.polygon([[\n *     [-82.574787, 35.594087],\n *     [-82.574787, 35.615581],\n *     [-82.545261, 35.615581],\n *     [-82.545261, 35.594087],\n *     [-82.574787, 35.594087]\n * ]], {\"fill\": \"#0f0\"});\n * var poly2 = turf.polygon([[\n *     [-82.560024, 35.585153],\n *     [-82.560024, 35.602602],\n *     [-82.52964, 35.602602],\n *     [-82.52964, 35.585153],\n *     [-82.560024, 35.585153]\n * ]], {\"fill\": \"#00f\"});\n *\n * var union = turf.union(poly1, poly2);\n *\n * //addToMap\n * var addToMap = [poly1, poly2, union];\n */\nfunction union() {\n    var reader = new GeoJSONReader();\n    var result = reader.read(JSON.stringify(arguments[0].geometry));\n\n    for (var i = 1; i < arguments.length; i++) {\n        result = UnionOp.union(result, reader.read(JSON.stringify(arguments[i].geometry)));\n    }\n\n    var writer = new GeoJSONWriter();\n    result = writer.write(result);\n\n    return {\n        type: 'Feature',\n        geometry: result,\n        properties: arguments[0].properties\n    };\n}\n\nexport default union;\n","/**\n * Earth Radius used with the Harvesine formula and approximates using a spherical (non-ellipsoid) Earth.\n */\nvar earthRadius = 6371008.8;\n\n/**\n * Unit of measurement factors using a spherical (non-ellipsoid) earth radius.\n */\nvar factors = {\n    meters: earthRadius,\n    metres: earthRadius,\n    millimeters: earthRadius * 1000,\n    millimetres: earthRadius * 1000,\n    centimeters: earthRadius * 100,\n    centimetres: earthRadius * 100,\n    kilometers: earthRadius / 1000,\n    kilometres: earthRadius / 1000,\n    miles: earthRadius / 1609.344,\n    nauticalmiles: earthRadius / 1852,\n    inches: earthRadius * 39.370,\n    yards: earthRadius / 1.0936,\n    feet: earthRadius * 3.28084,\n    radians: 1,\n    degrees: earthRadius / 111325,\n};\n\n/**\n * Units of measurement factors based on 1 meter.\n */\nvar unitsFactors = {\n    meters: 1,\n    metres: 1,\n    millimeters: 1000,\n    millimetres: 1000,\n    centimeters: 100,\n    centimetres: 100,\n    kilometers: 1 / 1000,\n    kilometres: 1 / 1000,\n    miles: 1 / 1609.344,\n    nauticalmiles: 1 / 1852,\n    inches: 39.370,\n    yards: 1 / 1.0936,\n    feet: 3.28084,\n    radians: 1 / earthRadius,\n    degrees: 1 / 111325,\n};\n\n/**\n * Area of measurement factors based on 1 square meter.\n */\nvar areaFactors = {\n    meters: 1,\n    metres: 1,\n    millimeters: 1000000,\n    millimetres: 1000000,\n    centimeters: 10000,\n    centimetres: 10000,\n    kilometers: 0.000001,\n    kilometres: 0.000001,\n    acres: 0.000247105,\n    miles: 3.86e-7,\n    yards: 1.195990046,\n    feet: 10.763910417,\n    inches: 1550.003100006\n};\n\n/**\n * Wraps a GeoJSON {@link Geometry} in a GeoJSON {@link Feature}.\n *\n * @name feature\n * @param {Geometry} geometry input geometry\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature} a GeoJSON Feature\n * @example\n * var geometry = {\n *   \"type\": \"Point\",\n *   \"coordinates\": [110, 50]\n * };\n *\n * var feature = turf.feature(geometry);\n *\n * //=feature\n */\nfunction feature(geometry, properties, options) {\n    // Optional Parameters\n    options = options || {};\n    if (!isObject(options)) throw new Error('options is invalid');\n    var bbox = options.bbox;\n    var id = options.id;\n\n    // Validation\n    if (geometry === undefined) throw new Error('geometry is required');\n    if (properties && properties.constructor !== Object) throw new Error('properties must be an Object');\n    if (bbox) validateBBox(bbox);\n    if (id) validateId(id);\n\n    // Main\n    var feat = {type: 'Feature'};\n    if (id) feat.id = id;\n    if (bbox) feat.bbox = bbox;\n    feat.properties = properties || {};\n    feat.geometry = geometry;\n    return feat;\n}\n\n/**\n * Creates a GeoJSON {@link Geometry} from a Geometry string type & coordinates.\n * For GeometryCollection type use `helpers.geometryCollection`\n *\n * @name geometry\n * @param {string} type Geometry Type\n * @param {Array<number>} coordinates Coordinates\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Geometry\n * @returns {Geometry} a GeoJSON Geometry\n * @example\n * var type = 'Point';\n * var coordinates = [110, 50];\n *\n * var geometry = turf.geometry(type, coordinates);\n *\n * //=geometry\n */\nfunction geometry(type, coordinates, options) {\n    // Optional Parameters\n    options = options || {};\n    if (!isObject(options)) throw new Error('options is invalid');\n    var bbox = options.bbox;\n\n    // Validation\n    if (!type) throw new Error('type is required');\n    if (!coordinates) throw new Error('coordinates is required');\n    if (!Array.isArray(coordinates)) throw new Error('coordinates must be an Array');\n    if (bbox) validateBBox(bbox);\n\n    // Main\n    var geom;\n    switch (type) {\n    case 'Point': geom = point(coordinates).geometry; break;\n    case 'LineString': geom = lineString(coordinates).geometry; break;\n    case 'Polygon': geom = polygon(coordinates).geometry; break;\n    case 'MultiPoint': geom = multiPoint(coordinates).geometry; break;\n    case 'MultiLineString': geom = multiLineString(coordinates).geometry; break;\n    case 'MultiPolygon': geom = multiPolygon(coordinates).geometry; break;\n    default: throw new Error(type + ' is invalid');\n    }\n    if (bbox) geom.bbox = bbox;\n    return geom;\n}\n\n/**\n * Creates a {@link Point} {@link Feature} from a Position.\n *\n * @name point\n * @param {Array<number>} coordinates longitude, latitude position (each in decimal degrees)\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<Point>} a Point feature\n * @example\n * var point = turf.point([-75.343, 39.984]);\n *\n * //=point\n */\nfunction point(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n    if (!Array.isArray(coordinates)) throw new Error('coordinates must be an Array');\n    if (coordinates.length < 2) throw new Error('coordinates must be at least 2 numbers long');\n    if (!isNumber(coordinates[0]) || !isNumber(coordinates[1])) throw new Error('coordinates must contain numbers');\n\n    return feature({\n        type: 'Point',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link Point} {@link FeatureCollection} from an Array of Point coordinates.\n *\n * @name points\n * @param {Array<Array<number>>} coordinates an array of Points\n * @param {Object} [properties={}] Translate these properties to each Feature\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the FeatureCollection\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<Point>} Point Feature\n * @example\n * var points = turf.points([\n *   [-75, 39],\n *   [-80, 45],\n *   [-78, 50]\n * ]);\n *\n * //=points\n */\nfunction points(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n    if (!Array.isArray(coordinates)) throw new Error('coordinates must be an Array');\n\n    return featureCollection(coordinates.map(function (coords) {\n        return point(coords, properties);\n    }), options);\n}\n\n/**\n * Creates a {@link Polygon} {@link Feature} from an Array of LinearRings.\n *\n * @name polygon\n * @param {Array<Array<Array<number>>>} coordinates an array of LinearRings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<Polygon>} Polygon Feature\n * @example\n * var polygon = turf.polygon([[[-5, 52], [-4, 56], [-2, 51], [-7, 54], [-5, 52]]], { name: 'poly1' });\n *\n * //=polygon\n */\nfunction polygon(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n\n    for (var i = 0; i < coordinates.length; i++) {\n        var ring = coordinates[i];\n        if (ring.length < 4) {\n            throw new Error('Each LinearRing of a Polygon must have 4 or more Positions.');\n        }\n        for (var j = 0; j < ring[ring.length - 1].length; j++) {\n            // Check if first point of Polygon contains two numbers\n            if (i === 0 && j === 0 && !isNumber(ring[0][0]) || !isNumber(ring[0][1])) throw new Error('coordinates must contain numbers');\n            if (ring[ring.length - 1][j] !== ring[0][j]) {\n                throw new Error('First and last Position are not equivalent.');\n            }\n        }\n    }\n\n    return feature({\n        type: 'Polygon',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link Polygon} {@link FeatureCollection} from an Array of Polygon coordinates.\n *\n * @name polygons\n * @param {Array<Array<Array<Array<number>>>>} coordinates an array of Polygon coordinates\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<Polygon>} Polygon FeatureCollection\n * @example\n * var polygons = turf.polygons([\n *   [[[-5, 52], [-4, 56], [-2, 51], [-7, 54], [-5, 52]]],\n *   [[[-15, 42], [-14, 46], [-12, 41], [-17, 44], [-15, 42]]],\n * ]);\n *\n * //=polygons\n */\nfunction polygons(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n    if (!Array.isArray(coordinates)) throw new Error('coordinates must be an Array');\n\n    return featureCollection(coordinates.map(function (coords) {\n        return polygon(coords, properties);\n    }), options);\n}\n\n/**\n * Creates a {@link LineString} {@link Feature} from an Array of Positions.\n *\n * @name lineString\n * @param {Array<Array<number>>} coordinates an array of Positions\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<LineString>} LineString Feature\n * @example\n * var linestring1 = turf.lineString([[-24, 63], [-23, 60], [-25, 65], [-20, 69]], {name: 'line 1'});\n * var linestring2 = turf.lineString([[-14, 43], [-13, 40], [-15, 45], [-10, 49]], {name: 'line 2'});\n *\n * //=linestring1\n * //=linestring2\n */\nfunction lineString(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n    if (coordinates.length < 2) throw new Error('coordinates must be an array of two or more positions');\n    // Check if first point of LineString contains two numbers\n    if (!isNumber(coordinates[0][1]) || !isNumber(coordinates[0][1])) throw new Error('coordinates must contain numbers');\n\n    return feature({\n        type: 'LineString',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link LineString} {@link FeatureCollection} from an Array of LineString coordinates.\n *\n * @name lineStrings\n * @param {Array<Array<number>>} coordinates an array of LinearRings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the FeatureCollection\n * @param {string|number} [options.id] Identifier associated with the FeatureCollection\n * @returns {FeatureCollection<LineString>} LineString FeatureCollection\n * @example\n * var linestrings = turf.lineStrings([\n *   [[-24, 63], [-23, 60], [-25, 65], [-20, 69]],\n *   [[-14, 43], [-13, 40], [-15, 45], [-10, 49]]\n * ]);\n *\n * //=linestrings\n */\nfunction lineStrings(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n    if (!Array.isArray(coordinates)) throw new Error('coordinates must be an Array');\n\n    return featureCollection(coordinates.map(function (coords) {\n        return lineString(coords, properties);\n    }), options);\n}\n\n/**\n * Takes one or more {@link Feature|Features} and creates a {@link FeatureCollection}.\n *\n * @name featureCollection\n * @param {Feature[]} features input features\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {FeatureCollection} FeatureCollection of Features\n * @example\n * var locationA = turf.point([-75.343, 39.984], {name: 'Location A'});\n * var locationB = turf.point([-75.833, 39.284], {name: 'Location B'});\n * var locationC = turf.point([-75.534, 39.123], {name: 'Location C'});\n *\n * var collection = turf.featureCollection([\n *   locationA,\n *   locationB,\n *   locationC\n * ]);\n *\n * //=collection\n */\nfunction featureCollection(features, options) {\n    // Optional Parameters\n    options = options || {};\n    if (!isObject(options)) throw new Error('options is invalid');\n    var bbox = options.bbox;\n    var id = options.id;\n\n    // Validation\n    if (!features) throw new Error('No features passed');\n    if (!Array.isArray(features)) throw new Error('features must be an Array');\n    if (bbox) validateBBox(bbox);\n    if (id) validateId(id);\n\n    // Main\n    var fc = {type: 'FeatureCollection'};\n    if (id) fc.id = id;\n    if (bbox) fc.bbox = bbox;\n    fc.features = features;\n    return fc;\n}\n\n/**\n * Creates a {@link Feature<MultiLineString>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiLineString\n * @param {Array<Array<Array<number>>>} coordinates an array of LineStrings\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiLineString>} a MultiLineString feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiLine = turf.multiLineString([[[0,0],[10,10]]]);\n *\n * //=multiLine\n */\nfunction multiLineString(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n\n    return feature({\n        type: 'MultiLineString',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link Feature<MultiPoint>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiPoint\n * @param {Array<Array<number>>} coordinates an array of Positions\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiPoint>} a MultiPoint feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiPt = turf.multiPoint([[0,0],[10,10]]);\n *\n * //=multiPt\n */\nfunction multiPoint(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n\n    return feature({\n        type: 'MultiPoint',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link Feature<MultiPolygon>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name multiPolygon\n * @param {Array<Array<Array<Array<number>>>>} coordinates an array of Polygons\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<MultiPolygon>} a multipolygon feature\n * @throws {Error} if no coordinates are passed\n * @example\n * var multiPoly = turf.multiPolygon([[[[0,0],[0,10],[10,10],[10,0],[0,0]]]]);\n *\n * //=multiPoly\n *\n */\nfunction multiPolygon(coordinates, properties, options) {\n    if (!coordinates) throw new Error('coordinates is required');\n\n    return feature({\n        type: 'MultiPolygon',\n        coordinates: coordinates\n    }, properties, options);\n}\n\n/**\n * Creates a {@link Feature<GeometryCollection>} based on a\n * coordinate array. Properties can be added optionally.\n *\n * @name geometryCollection\n * @param {Array<Geometry>} geometries an array of GeoJSON Geometries\n * @param {Object} [properties={}] an Object of key-value pairs to add as properties\n * @param {Object} [options={}] Optional Parameters\n * @param {Array<number>} [options.bbox] Bounding Box Array [west, south, east, north] associated with the Feature\n * @param {string|number} [options.id] Identifier associated with the Feature\n * @returns {Feature<GeometryCollection>} a GeoJSON GeometryCollection Feature\n * @example\n * var pt = {\n *     \"type\": \"Point\",\n *       \"coordinates\": [100, 0]\n *     };\n * var line = {\n *     \"type\": \"LineString\",\n *     \"coordinates\": [ [101, 0], [102, 1] ]\n *   };\n * var collection = turf.geometryCollection([pt, line]);\n *\n * //=collection\n */\nfunction geometryCollection(geometries, properties, options) {\n    if (!geometries) throw new Error('geometries is required');\n    if (!Array.isArray(geometries)) throw new Error('geometries must be an Array');\n\n    return feature({\n        type: 'GeometryCollection',\n        geometries: geometries\n    }, properties, options);\n}\n\n/**\n * Round number to precision\n *\n * @param {number} num Number\n * @param {number} [precision=0] Precision\n * @returns {number} rounded number\n * @example\n * turf.round(120.4321)\n * //=120\n *\n * turf.round(120.4321, 2)\n * //=120.43\n */\nfunction round(num, precision) {\n    if (num === undefined || num === null || isNaN(num)) throw new Error('num is required');\n    if (precision && !(precision >= 0)) throw new Error('precision must be a positive number');\n    var multiplier = Math.pow(10, precision || 0);\n    return Math.round(num * multiplier) / multiplier;\n}\n\n/**\n * Convert a distance measurement (assuming a spherical Earth) from radians to a more friendly unit.\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @name radiansToLength\n * @param {number} radians in radians across the sphere\n * @param {string} [units='kilometers'] can be degrees, radians, miles, or kilometers inches, yards, metres, meters, kilometres, kilometers.\n * @returns {number} distance\n */\nfunction radiansToLength(radians, units) {\n    if (radians === undefined || radians === null) throw new Error('radians is required');\n\n    if (units && typeof units !== 'string') throw new Error('units must be a string');\n    var factor = factors[units || 'kilometers'];\n    if (!factor) throw new Error(units + ' units is invalid');\n    return radians * factor;\n}\n\n/**\n * Convert a distance measurement (assuming a spherical Earth) from a real-world unit into radians\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @name lengthToRadians\n * @param {number} distance in real units\n * @param {string} [units='kilometers'] can be degrees, radians, miles, or kilometers inches, yards, metres, meters, kilometres, kilometers.\n * @returns {number} radians\n */\nfunction lengthToRadians(distance, units) {\n    if (distance === undefined || distance === null) throw new Error('distance is required');\n\n    if (units && typeof units !== 'string') throw new Error('units must be a string');\n    var factor = factors[units || 'kilometers'];\n    if (!factor) throw new Error(units + ' units is invalid');\n    return distance / factor;\n}\n\n/**\n * Convert a distance measurement (assuming a spherical Earth) from a real-world unit into degrees\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, centimeters, kilometres, feet\n *\n * @name lengthToDegrees\n * @param {number} distance in real units\n * @param {string} [units='kilometers'] can be degrees, radians, miles, or kilometers inches, yards, metres, meters, kilometres, kilometers.\n * @returns {number} degrees\n */\nfunction lengthToDegrees(distance, units) {\n    return radiansToDegrees(lengthToRadians(distance, units));\n}\n\n/**\n * Converts any bearing angle from the north line direction (positive clockwise)\n * and returns an angle between 0-360 degrees (positive clockwise), 0 being the north line\n *\n * @name bearingToAzimuth\n * @param {number} bearing angle, between -180 and +180 degrees\n * @returns {number} angle between 0 and 360 degrees\n */\nfunction bearingToAzimuth(bearing) {\n    if (bearing === null || bearing === undefined) throw new Error('bearing is required');\n\n    var angle = bearing % 360;\n    if (angle < 0) angle += 360;\n    return angle;\n}\n\n/**\n * Converts an angle in radians to degrees\n *\n * @name radiansToDegrees\n * @param {number} radians angle in radians\n * @returns {number} degrees between 0 and 360 degrees\n */\nfunction radiansToDegrees(radians) {\n    if (radians === null || radians === undefined) throw new Error('radians is required');\n\n    var degrees = radians % (2 * Math.PI);\n    return degrees * 180 / Math.PI;\n}\n\n/**\n * Converts an angle in degrees to radians\n *\n * @name degreesToRadians\n * @param {number} degrees angle between 0 and 360 degrees\n * @returns {number} angle in radians\n */\nfunction degreesToRadians(degrees) {\n    if (degrees === null || degrees === undefined) throw new Error('degrees is required');\n\n    var radians = degrees % 360;\n    return radians * Math.PI / 180;\n}\n\n/**\n * Converts a length to the requested unit.\n * Valid units: miles, nauticalmiles, inches, yards, meters, metres, kilometers, centimeters, feet\n *\n * @param {number} length to be converted\n * @param {string} originalUnit of the length\n * @param {string} [finalUnit='kilometers'] returned unit\n * @returns {number} the converted length\n */\nfunction convertLength(length, originalUnit, finalUnit) {\n    if (length === null || length === undefined) throw new Error('length is required');\n    if (!(length >= 0)) throw new Error('length must be a positive number');\n\n    return radiansToLength(lengthToRadians(length, originalUnit), finalUnit || 'kilometers');\n}\n\n/**\n * Converts a area to the requested unit.\n * Valid units: kilometers, kilometres, meters, metres, centimetres, millimeters, acres, miles, yards, feet, inches\n * @param {number} area to be converted\n * @param {string} [originalUnit='meters'] of the distance\n * @param {string} [finalUnit='kilometers'] returned unit\n * @returns {number} the converted distance\n */\nfunction convertArea(area, originalUnit, finalUnit) {\n    if (area === null || area === undefined) throw new Error('area is required');\n    if (!(area >= 0)) throw new Error('area must be a positive number');\n\n    var startFactor = areaFactors[originalUnit || 'meters'];\n    if (!startFactor) throw new Error('invalid original units');\n\n    var finalFactor = areaFactors[finalUnit || 'kilometers'];\n    if (!finalFactor) throw new Error('invalid final units');\n\n    return (area / startFactor) * finalFactor;\n}\n\n/**\n * isNumber\n *\n * @param {*} num Number to validate\n * @returns {boolean} true/false\n * @example\n * turf.isNumber(123)\n * //=true\n * turf.isNumber('foo')\n * //=false\n */\nfunction isNumber(num) {\n    return !isNaN(num) && num !== null && !Array.isArray(num);\n}\n\n/**\n * isObject\n *\n * @param {*} input variable to validate\n * @returns {boolean} true/false\n * @example\n * turf.isObject({elevation: 10})\n * //=true\n * turf.isObject('foo')\n * //=false\n */\nfunction isObject(input) {\n    return (!!input) && (input.constructor === Object);\n}\n\n/**\n * Validate BBox\n *\n * @private\n * @param {Array<number>} bbox BBox to validate\n * @returns {void}\n * @throws Error if BBox is not valid\n * @example\n * validateBBox([-180, -40, 110, 50])\n * //=OK\n * validateBBox([-180, -40])\n * //=Error\n * validateBBox('Foo')\n * //=Error\n * validateBBox(5)\n * //=Error\n * validateBBox(null)\n * //=Error\n * validateBBox(undefined)\n * //=Error\n */\nfunction validateBBox(bbox) {\n    if (!bbox) throw new Error('bbox is required');\n    if (!Array.isArray(bbox)) throw new Error('bbox must be an Array');\n    if (bbox.length !== 4 && bbox.length !== 6) throw new Error('bbox must be an Array of 4 or 6 numbers');\n    bbox.forEach(function (num) {\n        if (!isNumber(num)) throw new Error('bbox must only contain numbers');\n    });\n}\n\n/**\n * Validate Id\n *\n * @private\n * @param {string|number} id Id to validate\n * @returns {void}\n * @throws Error if Id is not valid\n * @example\n * validateId([-180, -40, 110, 50])\n * //=Error\n * validateId([-180, -40])\n * //=Error\n * validateId('Foo')\n * //=OK\n * validateId(5)\n * //=OK\n * validateId(null)\n * //=Error\n * validateId(undefined)\n * //=Error\n */\nfunction validateId(id) {\n    if (!id) throw new Error('id is required');\n    if (['string', 'number'].indexOf(typeof id) === -1) throw new Error('id must be a number or a string');\n}\n\n// Deprecated methods\nfunction radians2degrees() {\n    throw new Error('method has been renamed to `radiansToDegrees`');\n}\n\nfunction degrees2radians() {\n    throw new Error('method has been renamed to `degreesToRadians`');\n}\n\nfunction distanceToDegrees() {\n    throw new Error('method has been renamed to `lengthToDegrees`');\n}\n\nfunction distanceToRadians() {\n    throw new Error('method has been renamed to `lengthToRadians`');\n}\n\nfunction radiansToDistance() {\n    throw new Error('method has been renamed to `radiansToLength`');\n}\n\nfunction bearingToAngle() {\n    throw new Error('method has been renamed to `bearingToAzimuth`');\n}\n\nfunction convertDistance() {\n    throw new Error('method has been renamed to `convertLength`');\n}\n\nexport { earthRadius, factors, unitsFactors, areaFactors, feature, geometry, point, points, polygon, polygons, lineString, lineStrings, featureCollection, multiLineString, multiPoint, multiPolygon, geometryCollection, round, radiansToLength, lengthToRadians, lengthToDegrees, bearingToAzimuth, radiansToDegrees, degreesToRadians, convertLength, convertArea, isNumber, isObject, validateBBox, validateId, radians2degrees, degrees2radians, distanceToDegrees, distanceToRadians, radiansToDistance, bearingToAngle, convertDistance };\n","import { feature, isObject, lineString, point } from '@turf/helpers';\n\n/**\n * Callback for coordEach\n *\n * @callback coordEachCallback\n * @param {Array<number>} currentCoord The current coordinate being processed.\n * @param {number} coordIndex The current index of the coordinate being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n * @param {number} geometryIndex The current index of the Geometry being processed.\n */\n\n/**\n * Iterate over coordinates in any GeoJSON object, similar to Array.forEach()\n *\n * @name coordEach\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (currentCoord, coordIndex, featureIndex, multiFeatureIndex)\n * @param {boolean} [excludeWrapCoord=false] whether or not to include the final coordinate of LinearRings that wraps the ring in its iteration.\n * @returns {void}\n * @example\n * var features = turf.featureCollection([\n *   turf.point([26, 37], {\"foo\": \"bar\"}),\n *   turf.point([36, 53], {\"hello\": \"world\"})\n * ]);\n *\n * turf.coordEach(features, function (currentCoord, coordIndex, featureIndex, multiFeatureIndex, geometryIndex) {\n *   //=currentCoord\n *   //=coordIndex\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   //=geometryIndex\n * });\n */\nfunction coordEach(geojson, callback, excludeWrapCoord) {\n    // Handles null Geometry -- Skips this GeoJSON\n    if (geojson === null) return;\n    var j, k, l, geometry, stopG, coords,\n        geometryMaybeCollection,\n        wrapShrink = 0,\n        coordIndex = 0,\n        isGeometryCollection,\n        type = geojson.type,\n        isFeatureCollection = type === 'FeatureCollection',\n        isFeature = type === 'Feature',\n        stop = isFeatureCollection ? geojson.features.length : 1;\n\n    // This logic may look a little weird. The reason why it is that way\n    // is because it's trying to be fast. GeoJSON supports multiple kinds\n    // of objects at its root: FeatureCollection, Features, Geometries.\n    // This function has the responsibility of handling all of them, and that\n    // means that some of the `for` loops you see below actually just don't apply\n    // to certain inputs. For instance, if you give this just a\n    // Point geometry, then both loops are short-circuited and all we do\n    // is gradually rename the input until it's called 'geometry'.\n    //\n    // This also aims to allocate as few resources as possible: just a\n    // few numbers and booleans, rather than any temporary arrays as would\n    // be required with the normalization approach.\n    for (var featureIndex = 0; featureIndex < stop; featureIndex++) {\n        geometryMaybeCollection = (isFeatureCollection ? geojson.features[featureIndex].geometry :\n            (isFeature ? geojson.geometry : geojson));\n        isGeometryCollection = (geometryMaybeCollection) ? geometryMaybeCollection.type === 'GeometryCollection' : false;\n        stopG = isGeometryCollection ? geometryMaybeCollection.geometries.length : 1;\n\n        for (var geomIndex = 0; geomIndex < stopG; geomIndex++) {\n            var multiFeatureIndex = 0;\n            var geometryIndex = 0;\n            geometry = isGeometryCollection ?\n                geometryMaybeCollection.geometries[geomIndex] : geometryMaybeCollection;\n\n            // Handles null Geometry -- Skips this geometry\n            if (geometry === null) continue;\n            coords = geometry.coordinates;\n            var geomType = geometry.type;\n\n            wrapShrink = (excludeWrapCoord && (geomType === 'Polygon' || geomType === 'MultiPolygon')) ? 1 : 0;\n\n            switch (geomType) {\n            case null:\n                break;\n            case 'Point':\n                if (callback(coords, coordIndex, featureIndex, multiFeatureIndex, geometryIndex) === false) return false;\n                coordIndex++;\n                multiFeatureIndex++;\n                break;\n            case 'LineString':\n            case 'MultiPoint':\n                for (j = 0; j < coords.length; j++) {\n                    if (callback(coords[j], coordIndex, featureIndex, multiFeatureIndex, geometryIndex) === false) return false;\n                    coordIndex++;\n                    if (geomType === 'MultiPoint') multiFeatureIndex++;\n                }\n                if (geomType === 'LineString') multiFeatureIndex++;\n                break;\n            case 'Polygon':\n            case 'MultiLineString':\n                for (j = 0; j < coords.length; j++) {\n                    for (k = 0; k < coords[j].length - wrapShrink; k++) {\n                        if (callback(coords[j][k], coordIndex, featureIndex, multiFeatureIndex, geometryIndex) === false) return false;\n                        coordIndex++;\n                    }\n                    if (geomType === 'MultiLineString') multiFeatureIndex++;\n                    if (geomType === 'Polygon') geometryIndex++;\n                }\n                if (geomType === 'Polygon') multiFeatureIndex++;\n                break;\n            case 'MultiPolygon':\n                for (j = 0; j < coords.length; j++) {\n                    if (geomType === 'MultiPolygon') geometryIndex = 0;\n                    for (k = 0; k < coords[j].length; k++) {\n                        for (l = 0; l < coords[j][k].length - wrapShrink; l++) {\n                            if (callback(coords[j][k][l], coordIndex, featureIndex, multiFeatureIndex, geometryIndex) === false) return false;\n                            coordIndex++;\n                        }\n                        geometryIndex++;\n                    }\n                    multiFeatureIndex++;\n                }\n                break;\n            case 'GeometryCollection':\n                for (j = 0; j < geometry.geometries.length; j++)\n                    if (coordEach(geometry.geometries[j], callback, excludeWrapCoord) === false) return false;\n                break;\n            default:\n                throw new Error('Unknown Geometry Type');\n            }\n        }\n    }\n}\n\n/**\n * Callback for coordReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback coordReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Array<number>} currentCoord The current coordinate being processed.\n * @param {number} coordIndex The current index of the coordinate being processed.\n * Starts at index 0, if an initialValue is provided, and at index 1 otherwise.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n * @param {number} geometryIndex The current index of the Geometry being processed.\n */\n\n/**\n * Reduce coordinates in any GeoJSON object, similar to Array.reduce()\n *\n * @name coordReduce\n * @param {FeatureCollection|Geometry|Feature} geojson any GeoJSON object\n * @param {Function} callback a method that takes (previousValue, currentCoord, coordIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @param {boolean} [excludeWrapCoord=false] whether or not to include the final coordinate of LinearRings that wraps the ring in its iteration.\n * @returns {*} The value that results from the reduction.\n * @example\n * var features = turf.featureCollection([\n *   turf.point([26, 37], {\"foo\": \"bar\"}),\n *   turf.point([36, 53], {\"hello\": \"world\"})\n * ]);\n *\n * turf.coordReduce(features, function (previousValue, currentCoord, coordIndex, featureIndex, multiFeatureIndex, geometryIndex) {\n *   //=previousValue\n *   //=currentCoord\n *   //=coordIndex\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   //=geometryIndex\n *   return currentCoord;\n * });\n */\nfunction coordReduce(geojson, callback, initialValue, excludeWrapCoord) {\n    var previousValue = initialValue;\n    coordEach(geojson, function (currentCoord, coordIndex, featureIndex, multiFeatureIndex, geometryIndex) {\n        if (coordIndex === 0 && initialValue === undefined) previousValue = currentCoord;\n        else previousValue = callback(previousValue, currentCoord, coordIndex, featureIndex, multiFeatureIndex, geometryIndex);\n    }, excludeWrapCoord);\n    return previousValue;\n}\n\n/**\n * Callback for propEach\n *\n * @callback propEachCallback\n * @param {Object} currentProperties The current Properties being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n */\n\n/**\n * Iterate over properties in any GeoJSON object, similar to Array.forEach()\n *\n * @name propEach\n * @param {FeatureCollection|Feature} geojson any GeoJSON object\n * @param {Function} callback a method that takes (currentProperties, featureIndex)\n * @returns {void}\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * turf.propEach(features, function (currentProperties, featureIndex) {\n *   //=currentProperties\n *   //=featureIndex\n * });\n */\nfunction propEach(geojson, callback) {\n    var i;\n    switch (geojson.type) {\n    case 'FeatureCollection':\n        for (i = 0; i < geojson.features.length; i++) {\n            if (callback(geojson.features[i].properties, i) === false) break;\n        }\n        break;\n    case 'Feature':\n        callback(geojson.properties, 0);\n        break;\n    }\n}\n\n\n/**\n * Callback for propReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback propReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {*} currentProperties The current Properties being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n */\n\n/**\n * Reduce properties in any GeoJSON object into a single value,\n * similar to how Array.reduce works. However, in this case we lazily run\n * the reduction, so an array of all properties is unnecessary.\n *\n * @name propReduce\n * @param {FeatureCollection|Feature} geojson any GeoJSON object\n * @param {Function} callback a method that takes (previousValue, currentProperties, featureIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {*} The value that results from the reduction.\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * turf.propReduce(features, function (previousValue, currentProperties, featureIndex) {\n *   //=previousValue\n *   //=currentProperties\n *   //=featureIndex\n *   return currentProperties\n * });\n */\nfunction propReduce(geojson, callback, initialValue) {\n    var previousValue = initialValue;\n    propEach(geojson, function (currentProperties, featureIndex) {\n        if (featureIndex === 0 && initialValue === undefined) previousValue = currentProperties;\n        else previousValue = callback(previousValue, currentProperties, featureIndex);\n    });\n    return previousValue;\n}\n\n/**\n * Callback for featureEach\n *\n * @callback featureEachCallback\n * @param {Feature<any>} currentFeature The current Feature being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n */\n\n/**\n * Iterate over features in any GeoJSON object, similar to\n * Array.forEach.\n *\n * @name featureEach\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (currentFeature, featureIndex)\n * @returns {void}\n * @example\n * var features = turf.featureCollection([\n *   turf.point([26, 37], {foo: 'bar'}),\n *   turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * turf.featureEach(features, function (currentFeature, featureIndex) {\n *   //=currentFeature\n *   //=featureIndex\n * });\n */\nfunction featureEach(geojson, callback) {\n    if (geojson.type === 'Feature') {\n        callback(geojson, 0);\n    } else if (geojson.type === 'FeatureCollection') {\n        for (var i = 0; i < geojson.features.length; i++) {\n            if (callback(geojson.features[i], i) === false) break;\n        }\n    }\n}\n\n/**\n * Callback for featureReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback featureReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Feature} currentFeature The current Feature being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n */\n\n/**\n * Reduce features in any GeoJSON object, similar to Array.reduce().\n *\n * @name featureReduce\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (previousValue, currentFeature, featureIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {*} The value that results from the reduction.\n * @example\n * var features = turf.featureCollection([\n *   turf.point([26, 37], {\"foo\": \"bar\"}),\n *   turf.point([36, 53], {\"hello\": \"world\"})\n * ]);\n *\n * turf.featureReduce(features, function (previousValue, currentFeature, featureIndex) {\n *   //=previousValue\n *   //=currentFeature\n *   //=featureIndex\n *   return currentFeature\n * });\n */\nfunction featureReduce(geojson, callback, initialValue) {\n    var previousValue = initialValue;\n    featureEach(geojson, function (currentFeature, featureIndex) {\n        if (featureIndex === 0 && initialValue === undefined) previousValue = currentFeature;\n        else previousValue = callback(previousValue, currentFeature, featureIndex);\n    });\n    return previousValue;\n}\n\n/**\n * Get all coordinates from any GeoJSON object.\n *\n * @name coordAll\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @returns {Array<Array<number>>} coordinate position array\n * @example\n * var features = turf.featureCollection([\n *   turf.point([26, 37], {foo: 'bar'}),\n *   turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * var coords = turf.coordAll(features);\n * //= [[26, 37], [36, 53]]\n */\nfunction coordAll(geojson) {\n    var coords = [];\n    coordEach(geojson, function (coord) {\n        coords.push(coord);\n    });\n    return coords;\n}\n\n/**\n * Callback for geomEach\n *\n * @callback geomEachCallback\n * @param {Geometry} currentGeometry The current Geometry being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {Object} featureProperties The current Feature Properties being processed.\n * @param {Array<number>} featureBBox The current Feature BBox being processed.\n * @param {number|string} featureId The current Feature Id being processed.\n */\n\n/**\n * Iterate over each geometry in any GeoJSON object, similar to Array.forEach()\n *\n * @name geomEach\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (currentGeometry, featureIndex, featureProperties, featureBBox, featureId)\n * @returns {void}\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * turf.geomEach(features, function (currentGeometry, featureIndex, featureProperties, featureBBox, featureId) {\n *   //=currentGeometry\n *   //=featureIndex\n *   //=featureProperties\n *   //=featureBBox\n *   //=featureId\n * });\n */\nfunction geomEach(geojson, callback) {\n    var i, j, g, geometry, stopG,\n        geometryMaybeCollection,\n        isGeometryCollection,\n        featureProperties,\n        featureBBox,\n        featureId,\n        featureIndex = 0,\n        isFeatureCollection = geojson.type === 'FeatureCollection',\n        isFeature = geojson.type === 'Feature',\n        stop = isFeatureCollection ? geojson.features.length : 1;\n\n    // This logic may look a little weird. The reason why it is that way\n    // is because it's trying to be fast. GeoJSON supports multiple kinds\n    // of objects at its root: FeatureCollection, Features, Geometries.\n    // This function has the responsibility of handling all of them, and that\n    // means that some of the `for` loops you see below actually just don't apply\n    // to certain inputs. For instance, if you give this just a\n    // Point geometry, then both loops are short-circuited and all we do\n    // is gradually rename the input until it's called 'geometry'.\n    //\n    // This also aims to allocate as few resources as possible: just a\n    // few numbers and booleans, rather than any temporary arrays as would\n    // be required with the normalization approach.\n    for (i = 0; i < stop; i++) {\n\n        geometryMaybeCollection = (isFeatureCollection ? geojson.features[i].geometry :\n            (isFeature ? geojson.geometry : geojson));\n        featureProperties = (isFeatureCollection ? geojson.features[i].properties :\n            (isFeature ? geojson.properties : {}));\n        featureBBox = (isFeatureCollection ? geojson.features[i].bbox :\n            (isFeature ? geojson.bbox : undefined));\n        featureId = (isFeatureCollection ? geojson.features[i].id :\n            (isFeature ? geojson.id : undefined));\n        isGeometryCollection = (geometryMaybeCollection) ? geometryMaybeCollection.type === 'GeometryCollection' : false;\n        stopG = isGeometryCollection ? geometryMaybeCollection.geometries.length : 1;\n\n        for (g = 0; g < stopG; g++) {\n            geometry = isGeometryCollection ?\n                geometryMaybeCollection.geometries[g] : geometryMaybeCollection;\n\n            // Handle null Geometry\n            if (geometry === null) {\n                if (callback(null, featureIndex, featureProperties, featureBBox, featureId) === false) return false;\n                continue;\n            }\n            switch (geometry.type) {\n            case 'Point':\n            case 'LineString':\n            case 'MultiPoint':\n            case 'Polygon':\n            case 'MultiLineString':\n            case 'MultiPolygon': {\n                if (callback(geometry, featureIndex, featureProperties, featureBBox, featureId) === false) return false;\n                break;\n            }\n            case 'GeometryCollection': {\n                for (j = 0; j < geometry.geometries.length; j++) {\n                    if (callback(geometry.geometries[j], featureIndex, featureProperties, featureBBox, featureId) === false) return false;\n                }\n                break;\n            }\n            default:\n                throw new Error('Unknown Geometry Type');\n            }\n        }\n        // Only increase `featureIndex` per each feature\n        featureIndex++;\n    }\n}\n\n/**\n * Callback for geomReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback geomReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Geometry} currentGeometry The current Geometry being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {Object} featureProperties The current Feature Properties being processed.\n * @param {Array<number>} featureBBox The current Feature BBox being processed.\n * @param {number|string} featureId The current Feature Id being processed.\n */\n\n/**\n * Reduce geometry in any GeoJSON object, similar to Array.reduce().\n *\n * @name geomReduce\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (previousValue, currentGeometry, featureIndex, featureProperties, featureBBox, featureId)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {*} The value that results from the reduction.\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.point([36, 53], {hello: 'world'})\n * ]);\n *\n * turf.geomReduce(features, function (previousValue, currentGeometry, featureIndex, featureProperties, featureBBox, featureId) {\n *   //=previousValue\n *   //=currentGeometry\n *   //=featureIndex\n *   //=featureProperties\n *   //=featureBBox\n *   //=featureId\n *   return currentGeometry\n * });\n */\nfunction geomReduce(geojson, callback, initialValue) {\n    var previousValue = initialValue;\n    geomEach(geojson, function (currentGeometry, featureIndex, featureProperties, featureBBox, featureId) {\n        if (featureIndex === 0 && initialValue === undefined) previousValue = currentGeometry;\n        else previousValue = callback(previousValue, currentGeometry, featureIndex, featureProperties, featureBBox, featureId);\n    });\n    return previousValue;\n}\n\n/**\n * Callback for flattenEach\n *\n * @callback flattenEachCallback\n * @param {Feature} currentFeature The current flattened feature being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n */\n\n/**\n * Iterate over flattened features in any GeoJSON object, similar to\n * Array.forEach.\n *\n * @name flattenEach\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (currentFeature, featureIndex, multiFeatureIndex)\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.multiPoint([[40, 30], [36, 53]], {hello: 'world'})\n * ]);\n *\n * turf.flattenEach(features, function (currentFeature, featureIndex, multiFeatureIndex) {\n *   //=currentFeature\n *   //=featureIndex\n *   //=multiFeatureIndex\n * });\n */\nfunction flattenEach(geojson, callback) {\n    geomEach(geojson, function (geometry, featureIndex, properties, bbox, id) {\n        // Callback for single geometry\n        var type = (geometry === null) ? null : geometry.type;\n        switch (type) {\n        case null:\n        case 'Point':\n        case 'LineString':\n        case 'Polygon':\n            if (callback(feature(geometry, properties, {bbox: bbox, id: id}), featureIndex, 0) === false) return false;\n            return;\n        }\n\n        var geomType;\n\n        // Callback for multi-geometry\n        switch (type) {\n        case 'MultiPoint':\n            geomType = 'Point';\n            break;\n        case 'MultiLineString':\n            geomType = 'LineString';\n            break;\n        case 'MultiPolygon':\n            geomType = 'Polygon';\n            break;\n        }\n\n        for (var multiFeatureIndex = 0; multiFeatureIndex < geometry.coordinates.length; multiFeatureIndex++) {\n            var coordinate = geometry.coordinates[multiFeatureIndex];\n            var geom = {\n                type: geomType,\n                coordinates: coordinate\n            };\n            if (callback(feature(geom, properties), featureIndex, multiFeatureIndex) === false) return false;\n        }\n    });\n}\n\n/**\n * Callback for flattenReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback flattenReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Feature} currentFeature The current Feature being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n */\n\n/**\n * Reduce flattened features in any GeoJSON object, similar to Array.reduce().\n *\n * @name flattenReduce\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON object\n * @param {Function} callback a method that takes (previousValue, currentFeature, featureIndex, multiFeatureIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {*} The value that results from the reduction.\n * @example\n * var features = turf.featureCollection([\n *     turf.point([26, 37], {foo: 'bar'}),\n *     turf.multiPoint([[40, 30], [36, 53]], {hello: 'world'})\n * ]);\n *\n * turf.flattenReduce(features, function (previousValue, currentFeature, featureIndex, multiFeatureIndex) {\n *   //=previousValue\n *   //=currentFeature\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   return currentFeature\n * });\n */\nfunction flattenReduce(geojson, callback, initialValue) {\n    var previousValue = initialValue;\n    flattenEach(geojson, function (currentFeature, featureIndex, multiFeatureIndex) {\n        if (featureIndex === 0 && multiFeatureIndex === 0 && initialValue === undefined) previousValue = currentFeature;\n        else previousValue = callback(previousValue, currentFeature, featureIndex, multiFeatureIndex);\n    });\n    return previousValue;\n}\n\n/**\n * Callback for segmentEach\n *\n * @callback segmentEachCallback\n * @param {Feature<LineString>} currentSegment The current Segment being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n * @param {number} geometryIndex The current index of the Geometry being processed.\n * @param {number} segmentIndex The current index of the Segment being processed.\n * @returns {void}\n */\n\n/**\n * Iterate over 2-vertex line segment in any GeoJSON object, similar to Array.forEach()\n * (Multi)Point geometries do not contain segments therefore they are ignored during this operation.\n *\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON\n * @param {Function} callback a method that takes (currentSegment, featureIndex, multiFeatureIndex, geometryIndex, segmentIndex)\n * @returns {void}\n * @example\n * var polygon = turf.polygon([[[-50, 5], [-40, -10], [-50, -10], [-40, 5], [-50, 5]]]);\n *\n * // Iterate over GeoJSON by 2-vertex segments\n * turf.segmentEach(polygon, function (currentSegment, featureIndex, multiFeatureIndex, geometryIndex, segmentIndex) {\n *   //=currentSegment\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   //=geometryIndex\n *   //=segmentIndex\n * });\n *\n * // Calculate the total number of segments\n * var total = 0;\n * turf.segmentEach(polygon, function () {\n *     total++;\n * });\n */\nfunction segmentEach(geojson, callback) {\n    flattenEach(geojson, function (feature$$1, featureIndex, multiFeatureIndex) {\n        var segmentIndex = 0;\n\n        // Exclude null Geometries\n        if (!feature$$1.geometry) return;\n        // (Multi)Point geometries do not contain segments therefore they are ignored during this operation.\n        var type = feature$$1.geometry.type;\n        if (type === 'Point' || type === 'MultiPoint') return;\n\n        // Generate 2-vertex line segments\n        var previousCoords;\n        if (coordEach(feature$$1, function (currentCoord, coordIndex, featureIndexCoord, mutliPartIndexCoord, geometryIndex) {\n            // Simulating a meta.coordReduce() since `reduce` operations cannot be stopped by returning `false`\n            if (previousCoords === undefined) {\n                previousCoords = currentCoord;\n                return;\n            }\n            var currentSegment = lineString([previousCoords, currentCoord], feature$$1.properties);\n            if (callback(currentSegment, featureIndex, multiFeatureIndex, geometryIndex, segmentIndex) === false) return false;\n            segmentIndex++;\n            previousCoords = currentCoord;\n        }) === false) return false;\n    });\n}\n\n/**\n * Callback for segmentReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback segmentReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Feature<LineString>} currentSegment The current Segment being processed.\n * @param {number} featureIndex The current index of the Feature being processed.\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed.\n * @param {number} geometryIndex The current index of the Geometry being processed.\n * @param {number} segmentIndex The current index of the Segment being processed.\n */\n\n/**\n * Reduce 2-vertex line segment in any GeoJSON object, similar to Array.reduce()\n * (Multi)Point geometries do not contain segments therefore they are ignored during this operation.\n *\n * @param {FeatureCollection|Feature|Geometry} geojson any GeoJSON\n * @param {Function} callback a method that takes (previousValue, currentSegment, currentIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {void}\n * @example\n * var polygon = turf.polygon([[[-50, 5], [-40, -10], [-50, -10], [-40, 5], [-50, 5]]]);\n *\n * // Iterate over GeoJSON by 2-vertex segments\n * turf.segmentReduce(polygon, function (previousSegment, currentSegment, featureIndex, multiFeatureIndex, geometryIndex, segmentIndex) {\n *   //= previousSegment\n *   //= currentSegment\n *   //= featureIndex\n *   //= multiFeatureIndex\n *   //= geometryIndex\n *   //= segmentInex\n *   return currentSegment\n * });\n *\n * // Calculate the total number of segments\n * var initialValue = 0\n * var total = turf.segmentReduce(polygon, function (previousValue) {\n *     previousValue++;\n *     return previousValue;\n * }, initialValue);\n */\nfunction segmentReduce(geojson, callback, initialValue) {\n    var previousValue = initialValue;\n    var started = false;\n    segmentEach(geojson, function (currentSegment, featureIndex, multiFeatureIndex, geometryIndex, segmentIndex) {\n        if (started === false && initialValue === undefined) previousValue = currentSegment;\n        else previousValue = callback(previousValue, currentSegment, featureIndex, multiFeatureIndex, geometryIndex, segmentIndex);\n        started = true;\n    });\n    return previousValue;\n}\n\n/**\n * Callback for lineEach\n *\n * @callback lineEachCallback\n * @param {Feature<LineString>} currentLine The current LineString|LinearRing being processed\n * @param {number} featureIndex The current index of the Feature being processed\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed\n * @param {number} geometryIndex The current index of the Geometry being processed\n */\n\n/**\n * Iterate over line or ring coordinates in LineString, Polygon, MultiLineString, MultiPolygon Features or Geometries,\n * similar to Array.forEach.\n *\n * @name lineEach\n * @param {Geometry|Feature<LineString|Polygon|MultiLineString|MultiPolygon>} geojson object\n * @param {Function} callback a method that takes (currentLine, featureIndex, multiFeatureIndex, geometryIndex)\n * @example\n * var multiLine = turf.multiLineString([\n *   [[26, 37], [35, 45]],\n *   [[36, 53], [38, 50], [41, 55]]\n * ]);\n *\n * turf.lineEach(multiLine, function (currentLine, featureIndex, multiFeatureIndex, geometryIndex) {\n *   //=currentLine\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   //=geometryIndex\n * });\n */\nfunction lineEach(geojson, callback) {\n    // validation\n    if (!geojson) throw new Error('geojson is required');\n\n    flattenEach(geojson, function (feature$$1, featureIndex, multiFeatureIndex) {\n        if (feature$$1.geometry === null) return;\n        var type = feature$$1.geometry.type;\n        var coords = feature$$1.geometry.coordinates;\n        switch (type) {\n        case 'LineString':\n            if (callback(feature$$1, featureIndex, multiFeatureIndex, 0, 0) === false) return false;\n            break;\n        case 'Polygon':\n            for (var geometryIndex = 0; geometryIndex < coords.length; geometryIndex++) {\n                if (callback(lineString(coords[geometryIndex], feature$$1.properties), featureIndex, multiFeatureIndex, geometryIndex) === false) return false;\n            }\n            break;\n        }\n    });\n}\n\n/**\n * Callback for lineReduce\n *\n * The first time the callback function is called, the values provided as arguments depend\n * on whether the reduce method has an initialValue argument.\n *\n * If an initialValue is provided to the reduce method:\n *  - The previousValue argument is initialValue.\n *  - The currentValue argument is the value of the first element present in the array.\n *\n * If an initialValue is not provided:\n *  - The previousValue argument is the value of the first element present in the array.\n *  - The currentValue argument is the value of the second element present in the array.\n *\n * @callback lineReduceCallback\n * @param {*} previousValue The accumulated value previously returned in the last invocation\n * of the callback, or initialValue, if supplied.\n * @param {Feature<LineString>} currentLine The current LineString|LinearRing being processed.\n * @param {number} featureIndex The current index of the Feature being processed\n * @param {number} multiFeatureIndex The current index of the Multi-Feature being processed\n * @param {number} geometryIndex The current index of the Geometry being processed\n */\n\n/**\n * Reduce features in any GeoJSON object, similar to Array.reduce().\n *\n * @name lineReduce\n * @param {Geometry|Feature<LineString|Polygon|MultiLineString|MultiPolygon>} geojson object\n * @param {Function} callback a method that takes (previousValue, currentLine, featureIndex, multiFeatureIndex, geometryIndex)\n * @param {*} [initialValue] Value to use as the first argument to the first call of the callback.\n * @returns {*} The value that results from the reduction.\n * @example\n * var multiPoly = turf.multiPolygon([\n *   turf.polygon([[[12,48],[2,41],[24,38],[12,48]], [[9,44],[13,41],[13,45],[9,44]]]),\n *   turf.polygon([[[5, 5], [0, 0], [2, 2], [4, 4], [5, 5]]])\n * ]);\n *\n * turf.lineReduce(multiPoly, function (previousValue, currentLine, featureIndex, multiFeatureIndex, geometryIndex) {\n *   //=previousValue\n *   //=currentLine\n *   //=featureIndex\n *   //=multiFeatureIndex\n *   //=geometryIndex\n *   return currentLine\n * });\n */\nfunction lineReduce(geojson, callback, initialValue) {\n    var previousValue = initialValue;\n    lineEach(geojson, function (currentLine, featureIndex, multiFeatureIndex, geometryIndex) {\n        if (featureIndex === 0 && initialValue === undefined) previousValue = currentLine;\n        else previousValue = callback(previousValue, currentLine, featureIndex, multiFeatureIndex, geometryIndex);\n    });\n    return previousValue;\n}\n\n/**\n * Finds a particular 2-vertex LineString Segment from a GeoJSON using `@turf/meta` indexes.\n *\n * Negative indexes are permitted.\n * Point & MultiPoint will always return null.\n *\n * @param {FeatureCollection|Feature|Geometry} geojson Any GeoJSON Feature or Geometry\n * @param {Object} [options={}] Optional parameters\n * @param {number} [options.featureIndex=0] Feature Index\n * @param {number} [options.multiFeatureIndex=0] Multi-Feature Index\n * @param {number} [options.geometryIndex=0] Geometry Index\n * @param {number} [options.segmentIndex=0] Segment Index\n * @param {Object} [options.properties={}] Translate Properties to output LineString\n * @param {BBox} [options.bbox={}] Translate BBox to output LineString\n * @param {number|string} [options.id={}] Translate Id to output LineString\n * @returns {Feature<LineString>} 2-vertex GeoJSON Feature LineString\n * @example\n * var multiLine = turf.multiLineString([\n *     [[10, 10], [50, 30], [30, 40]],\n *     [[-10, -10], [-50, -30], [-30, -40]]\n * ]);\n *\n * // First Segment (defaults are 0)\n * turf.findSegment(multiLine);\n * // => Feature<LineString<[[10, 10], [50, 30]]>>\n *\n * // First Segment of 2nd Multi Feature\n * turf.findSegment(multiLine, {multiFeatureIndex: 1});\n * // => Feature<LineString<[[-10, -10], [-50, -30]]>>\n *\n * // Last Segment of Last Multi Feature\n * turf.findSegment(multiLine, {multiFeatureIndex: -1, segmentIndex: -1});\n * // => Feature<LineString<[[-50, -30], [-30, -40]]>>\n */\nfunction findSegment(geojson, options) {\n    // Optional Parameters\n    options = options || {};\n    if (!isObject(options)) throw new Error('options is invalid');\n    var featureIndex = options.featureIndex || 0;\n    var multiFeatureIndex = options.multiFeatureIndex || 0;\n    var geometryIndex = options.geometryIndex || 0;\n    var segmentIndex = options.segmentIndex || 0;\n\n    // Find FeatureIndex\n    var properties = options.properties;\n    var geometry;\n\n    switch (geojson.type) {\n    case 'FeatureCollection':\n        if (featureIndex < 0) featureIndex = geojson.features.length + featureIndex;\n        properties = properties || geojson.features[featureIndex].properties;\n        geometry = geojson.features[featureIndex].geometry;\n        break;\n    case 'Feature':\n        properties = properties || geojson.properties;\n        geometry = geojson.geometry;\n        break;\n    case 'Point':\n    case 'MultiPoint':\n        return null;\n    case 'LineString':\n    case 'Polygon':\n    case 'MultiLineString':\n    case 'MultiPolygon':\n        geometry = geojson;\n        break;\n    default:\n        throw new Error('geojson is invalid');\n    }\n\n    // Find SegmentIndex\n    if (geometry === null) return null;\n    var coords = geometry.coordinates;\n    switch (geometry.type) {\n    case 'Point':\n    case 'MultiPoint':\n        return null;\n    case 'LineString':\n        if (segmentIndex < 0) segmentIndex = coords.length + segmentIndex - 1;\n        return lineString([coords[segmentIndex], coords[segmentIndex + 1]], properties, options);\n    case 'Polygon':\n        if (geometryIndex < 0) geometryIndex = coords.length + geometryIndex;\n        if (segmentIndex < 0) segmentIndex = coords[geometryIndex].length + segmentIndex - 1;\n        return lineString([coords[geometryIndex][segmentIndex], coords[geometryIndex][segmentIndex + 1]], properties, options);\n    case 'MultiLineString':\n        if (multiFeatureIndex < 0) multiFeatureIndex = coords.length + multiFeatureIndex;\n        if (segmentIndex < 0) segmentIndex = coords[multiFeatureIndex].length + segmentIndex - 1;\n        return lineString([coords[multiFeatureIndex][segmentIndex], coords[multiFeatureIndex][segmentIndex + 1]], properties, options);\n    case 'MultiPolygon':\n        if (multiFeatureIndex < 0) multiFeatureIndex = coords.length + multiFeatureIndex;\n        if (geometryIndex < 0) geometryIndex = coords[multiFeatureIndex].length + geometryIndex;\n        if (segmentIndex < 0) segmentIndex = coords[multiFeatureIndex][geometryIndex].length - segmentIndex - 1;\n        return lineString([coords[multiFeatureIndex][geometryIndex][segmentIndex], coords[multiFeatureIndex][geometryIndex][segmentIndex + 1]], properties, options);\n    }\n    throw new Error('geojson is invalid');\n}\n\n/**\n * Finds a particular Point from a GeoJSON using `@turf/meta` indexes.\n *\n * Negative indexes are permitted.\n *\n * @param {FeatureCollection|Feature|Geometry} geojson Any GeoJSON Feature or Geometry\n * @param {Object} [options={}] Optional parameters\n * @param {number} [options.featureIndex=0] Feature Index\n * @param {number} [options.multiFeatureIndex=0] Multi-Feature Index\n * @param {number} [options.geometryIndex=0] Geometry Index\n * @param {number} [options.coordIndex=0] Coord Index\n * @param {Object} [options.properties={}] Translate Properties to output Point\n * @param {BBox} [options.bbox={}] Translate BBox to output Point\n * @param {number|string} [options.id={}] Translate Id to output Point\n * @returns {Feature<Point>} 2-vertex GeoJSON Feature Point\n * @example\n * var multiLine = turf.multiLineString([\n *     [[10, 10], [50, 30], [30, 40]],\n *     [[-10, -10], [-50, -30], [-30, -40]]\n * ]);\n *\n * // First Segment (defaults are 0)\n * turf.findPoint(multiLine);\n * // => Feature<Point<[10, 10]>>\n *\n * // First Segment of the 2nd Multi-Feature\n * turf.findPoint(multiLine, {multiFeatureIndex: 1});\n * // => Feature<Point<[-10, -10]>>\n *\n * // Last Segment of last Multi-Feature\n * turf.findPoint(multiLine, {multiFeatureIndex: -1, coordIndex: -1});\n * // => Feature<Point<[-30, -40]>>\n */\nfunction findPoint(geojson, options) {\n    // Optional Parameters\n    options = options || {};\n    if (!isObject(options)) throw new Error('options is invalid');\n    var featureIndex = options.featureIndex || 0;\n    var multiFeatureIndex = options.multiFeatureIndex || 0;\n    var geometryIndex = options.geometryIndex || 0;\n    var coordIndex = options.coordIndex || 0;\n\n    // Find FeatureIndex\n    var properties = options.properties;\n    var geometry;\n\n    switch (geojson.type) {\n    case 'FeatureCollection':\n        if (featureIndex < 0) featureIndex = geojson.features.length + featureIndex;\n        properties = properties || geojson.features[featureIndex].properties;\n        geometry = geojson.features[featureIndex].geometry;\n        break;\n    case 'Feature':\n        properties = properties || geojson.properties;\n        geometry = geojson.geometry;\n        break;\n    case 'Point':\n    case 'MultiPoint':\n        return null;\n    case 'LineString':\n    case 'Polygon':\n    case 'MultiLineString':\n    case 'MultiPolygon':\n        geometry = geojson;\n        break;\n    default:\n        throw new Error('geojson is invalid');\n    }\n\n    // Find Coord Index\n    if (geometry === null) return null;\n    var coords = geometry.coordinates;\n    switch (geometry.type) {\n    case 'Point':\n        return point(coords, properties, options);\n    case 'MultiPoint':\n        if (multiFeatureIndex < 0) multiFeatureIndex = coords.length + multiFeatureIndex;\n        return point(coords[multiFeatureIndex], properties, options);\n    case 'LineString':\n        if (coordIndex < 0) coordIndex = coords.length + coordIndex;\n        return point(coords[coordIndex], properties, options);\n    case 'Polygon':\n        if (geometryIndex < 0) geometryIndex = coords.length + geometryIndex;\n        if (coordIndex < 0) coordIndex = coords[geometryIndex].length + coordIndex;\n        return point(coords[geometryIndex][coordIndex], properties, options);\n    case 'MultiLineString':\n        if (multiFeatureIndex < 0) multiFeatureIndex = coords.length + multiFeatureIndex;\n        if (coordIndex < 0) coordIndex = coords[multiFeatureIndex].length + coordIndex;\n        return point(coords[multiFeatureIndex][coordIndex], properties, options);\n    case 'MultiPolygon':\n        if (multiFeatureIndex < 0) multiFeatureIndex = coords.length + multiFeatureIndex;\n        if (geometryIndex < 0) geometryIndex = coords[multiFeatureIndex].length + geometryIndex;\n        if (coordIndex < 0) coordIndex = coords[multiFeatureIndex][geometryIndex].length - coordIndex;\n        return point(coords[multiFeatureIndex][geometryIndex][coordIndex], properties, options);\n    }\n    throw new Error('geojson is invalid');\n}\n\nexport { coordEach, coordReduce, propEach, propReduce, featureEach, featureReduce, coordAll, geomEach, geomReduce, flattenEach, flattenReduce, segmentEach, segmentReduce, lineEach, lineReduce, findSegment, findPoint };\n","import { coordEach } from '@turf/meta';\nimport { isObject } from '@turf/helpers';\n\n/**\n * Takes a GeoJSON Feature or FeatureCollection and truncates the precision of the geometry.\n *\n * @name truncate\n * @param {GeoJSON} geojson any GeoJSON Feature, FeatureCollection, Geometry or GeometryCollection.\n * @param {Object} [options={}] Optional parameters\n * @param {number} [options.precision=6] coordinate decimal precision\n * @param {number} [options.coordinates=3] maximum number of coordinates (primarly used to remove z coordinates)\n * @param {boolean} [options.mutate=false] allows GeoJSON input to be mutated (significant performance increase if true)\n * @returns {GeoJSON} layer with truncated geometry\n * @example\n * var point = turf.point([\n *     70.46923055566859,\n *     58.11088890802906,\n *     1508\n * ]);\n * var options = {precision: 3, coordinates: 2};\n * var truncated = turf.truncate(point, options);\n * //=truncated.geometry.coordinates => [70.469, 58.111]\n *\n * //addToMap\n * var addToMap = [truncated];\n */\nfunction truncate(geojson, options) {\n    // Optional parameters\n    options = options || {};\n    if (!isObject(options)) throw new Error('options is invalid');\n    var precision = options.precision;\n    var coordinates = options.coordinates;\n    var mutate = options.mutate;\n\n    // default params\n    precision = (precision === undefined || precision === null || isNaN(precision)) ? 6 : precision;\n    coordinates = (coordinates === undefined || coordinates === null || isNaN(coordinates)) ? 3 : coordinates;\n\n    // validation\n    if (!geojson) throw new Error('<geojson> is required');\n    if (typeof precision !== 'number') throw new Error('<precision> must be a number');\n    if (typeof coordinates !== 'number') throw new Error('<coordinates> must be a number');\n\n    // prevent input mutation\n    if (mutate === false || mutate === undefined) geojson = JSON.parse(JSON.stringify(geojson));\n\n    var factor = Math.pow(10, precision);\n\n    // Truncate Coordinates\n    coordEach(geojson, function (coords) {\n        truncateCoords(coords, factor, coordinates);\n    });\n    return geojson;\n}\n\n/**\n * Truncate Coordinates - Mutates coordinates in place\n *\n * @private\n * @param {Array<any>} coords Geometry Coordinates\n * @param {number} factor rounding factor for coordinate decimal precision\n * @param {number} coordinates maximum number of coordinates (primarly used to remove z coordinates)\n * @returns {Array<any>} mutated coordinates\n */\nfunction truncateCoords(coords, factor, coordinates) {\n    // Remove extra coordinates (usually elevation coordinates and more)\n    if (coords.length > coordinates) coords.splice(coordinates, coords.length);\n\n    // Truncate coordinate decimals\n    for (var i = 0; i < coords.length; i++) {\n        coords[i] = Math.round(coords[i] * factor) / factor;\n    }\n    return coords;\n}\n\nexport default truncate;\n","import { isNumber } from '@turf/helpers';\n\n/**\n * Unwrap a coordinate from a Point Feature, Geometry or a single coordinate.\n *\n * @name getCoord\n * @param {Array<number>|Geometry<Point>|Feature<Point>} coord GeoJSON Point or an Array of numbers\n * @returns {Array<number>} coordinates\n * @example\n * var pt = turf.point([10, 10]);\n *\n * var coord = turf.getCoord(pt);\n * //= [10, 10]\n */\nfunction getCoord(coord) {\n    if (!coord) throw new Error('coord is required');\n    if (coord.type === 'Feature' && coord.geometry !== null && coord.geometry.type === 'Point') return coord.geometry.coordinates;\n    if (coord.type === 'Point') return coord.coordinates;\n    if (Array.isArray(coord) && coord.length >= 2 && coord[0].length === undefined && coord[1].length === undefined) return coord;\n\n    throw new Error('coord must be GeoJSON Point or an Array of numbers');\n}\n\n/**\n * Unwrap coordinates from a Feature, Geometry Object or an Array\n *\n * @name getCoords\n * @param {Array<any>|Geometry|Feature} coords Feature, Geometry Object or an Array\n * @returns {Array<any>} coordinates\n * @example\n * var poly = turf.polygon([[[119.32, -8.7], [119.55, -8.69], [119.51, -8.54], [119.32, -8.7]]]);\n *\n * var coords = turf.getCoords(poly);\n * //= [[[119.32, -8.7], [119.55, -8.69], [119.51, -8.54], [119.32, -8.7]]]\n */\nfunction getCoords(coords) {\n    if (!coords) throw new Error('coords is required');\n\n    // Feature\n    if (coords.type === 'Feature' && coords.geometry !== null) return coords.geometry.coordinates;\n\n    // Geometry\n    if (coords.coordinates) return coords.coordinates;\n\n    // Array of numbers\n    if (Array.isArray(coords)) return coords;\n\n    throw new Error('coords must be GeoJSON Feature, Geometry Object or an Array');\n}\n\n/**\n * Checks if coordinates contains a number\n *\n * @name containsNumber\n * @param {Array<any>} coordinates GeoJSON Coordinates\n * @returns {boolean} true if Array contains a number\n */\nfunction containsNumber(coordinates) {\n    if (coordinates.length > 1 && isNumber(coordinates[0]) && isNumber(coordinates[1])) {\n        return true;\n    }\n\n    if (Array.isArray(coordinates[0]) && coordinates[0].length) {\n        return containsNumber(coordinates[0]);\n    }\n    throw new Error('coordinates must only contain numbers');\n}\n\n/**\n * Enforce expectations about types of GeoJSON objects for Turf.\n *\n * @name geojsonType\n * @param {GeoJSON} value any GeoJSON object\n * @param {string} type expected GeoJSON type\n * @param {string} name name of calling function\n * @throws {Error} if value is not the expected type.\n */\nfunction geojsonType(value, type, name) {\n    if (!type || !name) throw new Error('type and name required');\n\n    if (!value || value.type !== type) {\n        throw new Error('Invalid input to ' + name + ': must be a ' + type + ', given ' + value.type);\n    }\n}\n\n/**\n * Enforce expectations about types of {@link Feature} inputs for Turf.\n * Internally this uses {@link geojsonType} to judge geometry types.\n *\n * @name featureOf\n * @param {Feature} feature a feature with an expected geometry type\n * @param {string} type expected GeoJSON type\n * @param {string} name name of calling function\n * @throws {Error} error if value is not the expected type.\n */\nfunction featureOf(feature, type, name) {\n    if (!feature) throw new Error('No feature passed');\n    if (!name) throw new Error('.featureOf() requires a name');\n    if (!feature || feature.type !== 'Feature' || !feature.geometry) {\n        throw new Error('Invalid input to ' + name + ', Feature with geometry required');\n    }\n    if (!feature.geometry || feature.geometry.type !== type) {\n        throw new Error('Invalid input to ' + name + ': must be a ' + type + ', given ' + feature.geometry.type);\n    }\n}\n\n/**\n * Enforce expectations about types of {@link FeatureCollection} inputs for Turf.\n * Internally this uses {@link geojsonType} to judge geometry types.\n *\n * @name collectionOf\n * @param {FeatureCollection} featureCollection a FeatureCollection for which features will be judged\n * @param {string} type expected GeoJSON type\n * @param {string} name name of calling function\n * @throws {Error} if value is not the expected type.\n */\nfunction collectionOf(featureCollection, type, name) {\n    if (!featureCollection) throw new Error('No featureCollection passed');\n    if (!name) throw new Error('.collectionOf() requires a name');\n    if (!featureCollection || featureCollection.type !== 'FeatureCollection') {\n        throw new Error('Invalid input to ' + name + ', FeatureCollection required');\n    }\n    for (var i = 0; i < featureCollection.features.length; i++) {\n        var feature = featureCollection.features[i];\n        if (!feature || feature.type !== 'Feature' || !feature.geometry) {\n            throw new Error('Invalid input to ' + name + ', Feature with geometry required');\n        }\n        if (!feature.geometry || feature.geometry.type !== type) {\n            throw new Error('Invalid input to ' + name + ': must be a ' + type + ', given ' + feature.geometry.type);\n        }\n    }\n}\n\n/**\n * Get Geometry from Feature or Geometry Object\n *\n * @param {Feature|Geometry} geojson GeoJSON Feature or Geometry Object\n * @returns {Geometry|null} GeoJSON Geometry Object\n * @throws {Error} if geojson is not a Feature or Geometry Object\n * @example\n * var point = {\n *   \"type\": \"Feature\",\n *   \"properties\": {},\n *   \"geometry\": {\n *     \"type\": \"Point\",\n *     \"coordinates\": [110, 40]\n *   }\n * }\n * var geom = turf.getGeom(point)\n * //={\"type\": \"Point\", \"coordinates\": [110, 40]}\n */\nfunction getGeom(geojson) {\n    if (!geojson) throw new Error('geojson is required');\n    if (geojson.geometry !== undefined) return geojson.geometry;\n    if (geojson.coordinates || geojson.geometries) return geojson;\n    throw new Error('geojson must be a valid Feature or Geometry Object');\n}\n\n/**\n * Get Geometry Type from Feature or Geometry Object\n *\n * @throws {Error} **DEPRECATED** in v5.0.0 in favor of getType\n */\nfunction getGeomType() {\n    throw new Error('invariant.getGeomType has been deprecated in v5.0 in favor of invariant.getType');\n}\n\n/**\n * Get GeoJSON object's type, Geometry type is prioritize.\n *\n * @param {GeoJSON} geojson GeoJSON object\n * @param {string} [name=\"geojson\"] name of the variable to display in error message\n * @returns {string} GeoJSON type\n * @example\n * var point = {\n *   \"type\": \"Feature\",\n *   \"properties\": {},\n *   \"geometry\": {\n *     \"type\": \"Point\",\n *     \"coordinates\": [110, 40]\n *   }\n * }\n * var geom = turf.getType(point)\n * //=\"Point\"\n */\nfunction getType(geojson, name) {\n    if (!geojson) throw new Error((name || 'geojson') + ' is required');\n    // GeoJSON Feature & GeometryCollection\n    if (geojson.geometry && geojson.geometry.type) return geojson.geometry.type;\n    // GeoJSON Geometry & FeatureCollection\n    if (geojson.type) return geojson.type;\n    throw new Error((name || 'geojson') + ' is invalid');\n}\n\nexport { getCoord, getCoords, containsNumber, geojsonType, featureOf, collectionOf, getGeom, getGeomType, getType };\n","import { feature } from '@turf/helpers';\nimport { getCoords, getType } from '@turf/invariant';\n\n/**\n * Removes redundant coordinates from any GeoJSON Geometry.\n *\n * @name cleanCoords\n * @param {Geometry|Feature} geojson Feature or Geometry\n * @param {Object} [options={}] Optional parameters\n * @param {boolean} [options.mutate=false] allows GeoJSON input to be mutated\n * @returns {Geometry|Feature} the cleaned input Feature/Geometry\n * @example\n * var line = turf.lineString([[0, 0], [0, 2], [0, 5], [0, 8], [0, 8], [0, 10]]);\n * var multiPoint = turf.multiPoint([[0, 0], [0, 0], [2, 2]]);\n *\n * turf.cleanCoords(line).geometry.coordinates;\n * //= [[0, 0], [0, 10]]\n *\n * turf.cleanCoords(multiPoint).geometry.coordinates;\n * //= [[0, 0], [2, 2]]\n */\nfunction cleanCoords(geojson, options) {\n    // Backwards compatible with v4.0\n    var mutate = (typeof options === 'object') ? options.mutate : options;\n    if (!geojson) throw new Error('geojson is required');\n    var type = getType(geojson);\n\n    // Store new \"clean\" points in this Array\n    var newCoords = [];\n\n    switch (type) {\n    case 'LineString':\n        newCoords = cleanLine(geojson);\n        break;\n    case 'MultiLineString':\n    case 'Polygon':\n        getCoords(geojson).forEach(function (line) {\n            newCoords.push(cleanLine(line));\n        });\n        break;\n    case 'MultiPolygon':\n        getCoords(geojson).forEach(function (polygons) {\n            var polyPoints = [];\n            polygons.forEach(function (ring) {\n                polyPoints.push(cleanLine(ring));\n            });\n            newCoords.push(polyPoints);\n        });\n        break;\n    case 'Point':\n        return geojson;\n    case 'MultiPoint':\n        var existing = {};\n        getCoords(geojson).forEach(function (coord) {\n            var key = coord.join('-');\n            if (!existing.hasOwnProperty(key)) {\n                newCoords.push(coord);\n                existing[key] = true;\n            }\n        });\n        break;\n    default:\n        throw new Error(type + ' geometry not supported');\n    }\n\n    // Support input mutation\n    if (geojson.coordinates) {\n        if (mutate === true) {\n            geojson.coordinates = newCoords;\n            return geojson;\n        }\n        return {type: type, coordinates: newCoords};\n    } else {\n        if (mutate === true) {\n            geojson.geometry.coordinates = newCoords;\n            return geojson;\n        }\n        return feature({type: type, coordinates: newCoords}, geojson.properties, geojson.bbox, geojson.id);\n    }\n}\n\n/**\n * Clean Coords\n *\n * @private\n * @param {Array<number>|LineString} line Line\n * @returns {Array<number>} Cleaned coordinates\n */\nfunction cleanLine(line) {\n    var points = getCoords(line);\n    // handle \"clean\" segment\n    if (points.length === 2 && !equals(points[0], points[1])) return points;\n\n    var prevPoint, point, nextPoint;\n    var newPoints = [];\n    var secondToLast = points.length - 1;\n\n    newPoints.push(points[0]);\n    for (var i = 1; i < secondToLast; i++) {\n        prevPoint = points[i - 1];\n        point = points[i];\n        nextPoint = points[i + 1];\n\n        if (!isPointOnLineSegment(prevPoint, nextPoint, point)) {\n            newPoints.push(point);\n        }\n    }\n    newPoints.push(nextPoint);\n    return newPoints;\n}\n\n/**\n * Compares two points and returns if they are equals\n *\n * @private\n * @param {Position} pt1 point\n * @param {Position} pt2 point\n * @returns {boolean} true if they are equals\n */\nfunction equals(pt1, pt2) {\n    return pt1[0] === pt2[0] && pt1[1] === pt2[1];\n}\n\n/**\n * Returns if `point` is on the segment between `start` and `end`.\n * Borrowed from `@turf/boolean-point-on-line` to speed up the evaluation (instead of using the module as dependency)\n *\n * @private\n * @param {Position} start coord pair of start of line\n * @param {Position} end coord pair of end of line\n * @param {Position} point coord pair of point to check\n * @returns {boolean} true/false\n */\nfunction isPointOnLineSegment(start, end, point) {\n    var x = point[0], y = point[1];\n    var startX = start[0], startY = start[1];\n    var endX = end[0], endY = end[1];\n\n    var dxc = x - startX;\n    var dyc = y - startY;\n    var dxl = endX - startX;\n    var dyl = endY - startY;\n    var cross = dxc * dyl - dyc * dxl;\n\n    if (cross !== 0) return false;\n    else if (Math.abs(dxl) >= Math.abs(dyl)) return dxl > 0 ? startX <= x && x <= endX : endX <= x && x <= startX;\n    else return dyl > 0 ? startY <= y && y <= endY : endY <= y && y <= startY;\n}\n\nexport default cleanCoords;\n","import { GeoJSONReader, GeoJSONWriter, OverlayOp } from 'turf-jsts';\nimport truncate from '@turf/truncate';\nimport { getGeom } from '@turf/invariant';\nimport { feature } from '@turf/helpers';\nimport cleanCoords from '@turf/clean-coords';\n\n// depend on jsts for now http://bjornharrtell.github.io/jsts/\n/**\n * Takes two {@link Polygon|polygons} and finds their intersection. If they share a border, returns the border; if they don't intersect, returns undefined.\n *\n * @name intersect\n * @param {Feature<Polygon>} poly1 the first polygon\n * @param {Feature<Polygon>} poly2 the second polygon\n * @returns {Feature|null} returns a feature representing the point(s) they share (in case of a {@link Point}  or {@link MultiPoint}), the borders they share (in case of a {@link LineString} or a {@link MultiLineString}), the area they share (in case of {@link Polygon} or {@link MultiPolygon}). If they do not share any point, returns `null`.\n * @example\n * var poly1 = turf.polygon([[\n *   [-122.801742, 45.48565],\n *   [-122.801742, 45.60491],\n *   [-122.584762, 45.60491],\n *   [-122.584762, 45.48565],\n *   [-122.801742, 45.48565]\n * ]]);\n *\n * var poly2 = turf.polygon([[\n *   [-122.520217, 45.535693],\n *   [-122.64038, 45.553967],\n *   [-122.720031, 45.526554],\n *   [-122.669906, 45.507309],\n *   [-122.723464, 45.446643],\n *   [-122.532577, 45.408574],\n *   [-122.487258, 45.477466],\n *   [-122.520217, 45.535693]\n * ]]);\n *\n * var intersection = turf.intersect(poly1, poly2);\n *\n * //addToMap\n * var addToMap = [poly1, poly2, intersection];\n */\nfunction intersect(poly1, poly2) {\n    var geom1 = getGeom(poly1);\n    var geom2 = getGeom(poly2);\n\n    // Return null if geometry is too narrow in coordinate precision\n    // fixes topology errors with JSTS\n    // https://github.com/Turfjs/turf/issues/463\n    // https://github.com/Turfjs/turf/pull/1004\n    if (cleanCoords(truncate(geom2, {precision: 4})).coordinates[0].length < 4) return null;\n    if (cleanCoords(truncate(geom1, {precision: 4})).coordinates[0].length < 4) return null;\n\n    var reader = new GeoJSONReader();\n    var a = reader.read(truncate(geom1));\n    var b = reader.read(truncate(geom2));\n    var intersection = OverlayOp.intersection(a, b);\n\n    // https://github.com/Turfjs/turf/issues/951\n    if (intersection.isEmpty()) return null;\n\n    var writer = new GeoJSONWriter();\n    var geom = writer.write(intersection);\n    return feature(geom);\n}\n\nexport default intersect;\n","import { geomReduce } from '@turf/meta';\n\n/**\n * Takes one or more features and returns their area in square meters.\n *\n * @name area\n * @param {GeoJSON} geojson input GeoJSON feature(s)\n * @returns {number} area in square meters\n * @example\n * var polygon = turf.polygon([[[125, -15], [113, -22], [154, -27], [144, -15], [125, -15]]]);\n *\n * var area = turf.area(polygon);\n *\n * //addToMap\n * var addToMap = [polygon]\n * polygon.properties.area = area\n */\nfunction area(geojson) {\n    return geomReduce(geojson, function (value, geom) {\n        return value + calculateArea(geom);\n    }, 0);\n}\n\nvar RADIUS = 6378137;\n// var FLATTENING_DENOM = 298.257223563;\n// var FLATTENING = 1 / FLATTENING_DENOM;\n// var POLAR_RADIUS = RADIUS * (1 - FLATTENING);\n\n/**\n * Calculate Area\n *\n * @private\n * @param {GeoJSON} geojson GeoJSON\n * @returns {number} area\n */\nfunction calculateArea(geojson) {\n    var area = 0, i;\n    switch (geojson.type) {\n    case 'Polygon':\n        return polygonArea(geojson.coordinates);\n    case 'MultiPolygon':\n        for (i = 0; i < geojson.coordinates.length; i++) {\n            area += polygonArea(geojson.coordinates[i]);\n        }\n        return area;\n    case 'Point':\n    case 'MultiPoint':\n    case 'LineString':\n    case 'MultiLineString':\n        return 0;\n    case 'GeometryCollection':\n        for (i = 0; i < geojson.geometries.length; i++) {\n            area += calculateArea(geojson.geometries[i]);\n        }\n        return area;\n    }\n}\n\nfunction polygonArea(coords) {\n    var area = 0;\n    if (coords && coords.length > 0) {\n        area += Math.abs(ringArea(coords[0]));\n        for (var i = 1; i < coords.length; i++) {\n            area -= Math.abs(ringArea(coords[i]));\n        }\n    }\n    return area;\n}\n\n/**\n * @private\n * Calculate the approximate area of the polygon were it projected onto the earth.\n * Note that this area will be positive if ring is oriented clockwise, otherwise it will be negative.\n *\n * Reference:\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007 http://trs-new.jpl.nasa.gov/dspace/handle/2014/40409\n *\n * @param {Array<Array<number>>} coords Ring Coordinates\n * @returns {number} The approximate signed geodesic area of the polygon in square meters.\n */\nfunction ringArea(coords) {\n    var p1;\n    var p2;\n    var p3;\n    var lowerIndex;\n    var middleIndex;\n    var upperIndex;\n    var i;\n    var area = 0;\n    var coordsLength = coords.length;\n\n    if (coordsLength > 2) {\n        for (i = 0; i < coordsLength; i++) {\n            if (i === coordsLength - 2) { // i = N-2\n                lowerIndex = coordsLength - 2;\n                middleIndex = coordsLength - 1;\n                upperIndex = 0;\n            } else if (i === coordsLength - 1) { // i = N-1\n                lowerIndex = coordsLength - 1;\n                middleIndex = 0;\n                upperIndex = 1;\n            } else { // i = 0 to N-3\n                lowerIndex = i;\n                middleIndex = i + 1;\n                upperIndex = i + 2;\n            }\n            p1 = coords[lowerIndex];\n            p2 = coords[middleIndex];\n            p3 = coords[upperIndex];\n            area += (rad(p3[0]) - rad(p1[0])) * Math.sin(rad(p2[1]));\n        }\n\n        area = area * RADIUS * RADIUS / 2;\n    }\n\n    return area;\n}\n\nfunction rad(_) {\n    return _ * Math.PI / 180;\n}\n\nexport default area;\n","import { GeoJSONReader, GeoJSONWriter, OverlayOp } from 'turf-jsts';\nimport area from '@turf/area';\nimport { feature } from '@turf/helpers';\nimport { getGeom } from '@turf/invariant';\nimport { flattenEach } from '@turf/meta';\n\n/**\n * Finds the difference between two {@link Polygon|polygons} by clipping the second polygon from the first.\n *\n * @name difference\n * @param {Feature<Polygon|MultiPolygon>} polygon1 input Polygon feature\n * @param {Feature<Polygon|MultiPolygon>} polygon2 Polygon feature to difference from polygon1\n * @returns {Feature<Polygon|MultiPolygon>|null} a Polygon or MultiPolygon feature showing the area of `polygon1` excluding the area of `polygon2` (if empty returns `null`)\n * @example\n * var polygon1 = turf.polygon([[\n *   [128, -26],\n *   [141, -26],\n *   [141, -21],\n *   [128, -21],\n *   [128, -26]\n * ]], {\n *   \"fill\": \"#F00\",\n *   \"fill-opacity\": 0.1\n * });\n * var polygon2 = turf.polygon([[\n *   [126, -28],\n *   [140, -28],\n *   [140, -20],\n *   [126, -20],\n *   [126, -28]\n * ]], {\n *   \"fill\": \"#00F\",\n *   \"fill-opacity\": 0.1\n * });\n *\n * var difference = turf.difference(polygon1, polygon2);\n *\n * //addToMap\n * var addToMap = [polygon1, polygon2, difference];\n */\nfunction difference(polygon1, polygon2) {\n    var geom1 = getGeom(polygon1);\n    var geom2 = getGeom(polygon2);\n    var properties = polygon1.properties || {};\n\n    // Issue #721 - JSTS can't handle empty polygons\n    geom1 = removeEmptyPolygon(geom1);\n    geom2 = removeEmptyPolygon(geom2);\n    if (!geom1) return null;\n    if (!geom2) return feature(geom1, properties);\n\n    // JSTS difference operation\n    var reader = new GeoJSONReader();\n    var a = reader.read(geom1);\n    var b = reader.read(geom2);\n    var differenced = OverlayOp.difference(a, b);\n    if (differenced.isEmpty()) return null;\n    var writer = new GeoJSONWriter();\n    var geom = writer.write(differenced);\n\n    return feature(geom, properties);\n}\n\n/**\n * Detect Empty Polygon\n *\n * @private\n * @param {Geometry<Polygon|MultiPolygon>} geom Geometry Object\n * @returns {Geometry<Polygon|MultiPolygon>|null} removed any polygons with no areas\n */\nfunction removeEmptyPolygon(geom) {\n    switch (geom.type) {\n    case 'Polygon':\n        if (area(geom) > 1) return geom;\n        return null;\n    case 'MultiPolygon':\n        var coordinates = [];\n        flattenEach(geom, function (feature$$1) {\n            if (area(feature$$1) > 1) coordinates.push(feature$$1.geometry.coordinates);\n        });\n        if (coordinates.length) return {type: 'MultiPolygon', coordinates: coordinates};\n    }\n}\n\nexport default difference;\n","<template>\n  <div id=\"app\">\n    <div id=\"map\">\n      <div class=\"control leaflet-bar\">\n        <h4>Input Data</h4>\n        <select v-on:change=\"setInput\">\n          <option>Asia</option>\n          <option>Almost Parallel Segments</option>\n          <option>Saw & Cheese</option>\n        </select>\n        <br><br>\n        <div v-for=\"operation in operations\">\n          <input type=\"radio\" name=\"some\" :value=\"operation\" v-on:change=\"setOperation\" v-model=\"selectedOperation\"> {{operation}}\n        </div>\n\n        <h4>Performance</h4>\n        <p>\n          polygon-clipping {{performance}} m/s<br>\n          martinez {{martinezPerf}} m/s<br>\n          jsts {{jstsPerf}} m/s<br>\n        </p>\n\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\n\nimport pc from '../..'\n\n// the martinez packaging is somewhat broken\nimport martinezBool from 'martinez-polygon-clipping'\nvar martinezUnion = (p1, p2) => martinezBool(p1, p2, 1)\nvar martinezIntersection = (p1, p2) => martinezBool(p1, p2, 0)\nvar martinezDifference = (p1, p2) => martinezBool(p1, p2, 2)\nvar martinezXor = (p1, p2) => martinezBool(p1, p2, 3)\n\n// turf v5 runs off of jsts under the hood\nimport jstsUnion from '@turf/union'\nimport jstsIntersection from '@turf/intersect'\nimport jstsDifference from '@turf/difference'\nvar jstsXor = null\n\nvar operation = pc.intersection\nvar martinezOp = martinezUnion\nvar jstsOp = jstsUnion\nvar inData = null\nvar inLayer = null\nvar outLayer = null\nvar map = null\n\nimport asia from '../geojson/asia-with-poly.json'\nimport parallel from '../geojson/parallel.json'\nimport cheese from '../geojson/cheese.json'\n\nexport default {\n  name: 'app',\n  data () {\n    return {\n      operations: ['Intersection', 'Union', 'Difference', 'XOR'],\n      selectedOperation: 'Intersection',\n      performance: '',\n      martinezPerf: '',\n      jstsPerf: ''\n    }\n  },\n  methods: {\n    setInput (e) {\n      inLayer.clearLayers()\n      outLayer.clearLayers()\n      if (e.target.value === 'Asia') inData = asia\n      if (e.target.value === 'Almost Parallel Segments') inData = parallel\n      if (e.target.value === 'Saw & Cheese') inData = cheese\n      inLayer.addData(inData)\n      map.fitBounds(inLayer.getBounds(), {\n        padding: [20, 20]\n      })\n      this.runOperation()\n    },\n    setOperation (e) {\n      this.selectedOperation = e.target.value\n      outLayer.clearLayers()\n\n      if (this.selectedOperation === 'Union') {\n        operation = pc.union\n        martinezOp = martinezUnion\n        jstsOp = jstsUnion\n      }\n      if (this.selectedOperation === 'Intersection') {\n        operation = pc.intersection\n        martinezOp = martinezIntersection\n        jstsOp = jstsIntersection\n      }\n      if (this.selectedOperation === 'XOR') {\n        operation = pc.xor\n        martinezOp = martinezXor\n        jstsOp = jstsXor\n      }\n      if (this.selectedOperation === 'Difference') {\n        operation = pc.difference\n        martinezOp = martinezDifference\n        jstsOp = jstsDifference\n      }\n\n      this.runOperation()\n    },\n    runOperation () {\n      var t0 = performance.now()\n      var outData = operation(inData.features[0].geometry.coordinates, inData.features[1].geometry.coordinates)\n      this.performance = (performance.now() - t0).toFixed(2)\n\n      outLayer.addData({\n        'type': 'MultiPolygon',\n        'coordinates': outData\n      }).addTo(map)\n\n      var m0 = performance.now()\n      martinezOp(inData.features[0].geometry.coordinates, inData.features[1].geometry.coordinates)\n      this.martinezPerf = (performance.now() - m0).toFixed(2)\n\n      if (jstsOp !== null) {\n        var j0 = performance.now()\n        jstsOp(inData.features[0], inData.features[1])\n        this.jstsPerf = (performance.now() - j0).toFixed(2)\n      } else {\n        this.jstsPerf = 'N/A'\n      }\n    }\n  },\n  mounted () {\n    inData = asia\n    map = window.map = L.map('map', {\n      minZoom: 1,\n      maxZoom: 20,\n      center: [0, 0],\n      zoom: 2,\n      crs: L.CRS.Simple\n    })\n\n    inLayer = L.geoJson(asia).addTo(map)\n\n    map.fitBounds(inLayer.getBounds(), {\n      padding: [20, 20]\n    })\n    outLayer = L.geoJson({\n      type: 'FeatureCollection',\n      features: []\n    }, {\n      color: 'red'\n    }).addTo(map)\n\n    this.runOperation()\n  }\n}\n</script>\n\n<style>\n    html, body, #app, #map {\n      width: 100%;\n      height: 100%;\n      margin: 0px;\n    }\n\n  .control {\n    position: absolute;\n    top: 10px;\n    right: 10px;\n    background: white;\n    padding: 10px;\n    z-index: 10000;\n  }\n\n  h4{\n    margin-bottom: 5px\n  }\n  p{\n    margin-top: 5px;\n  }\n</style>\n","import Vue from 'vue'\nimport App from './App.vue'\n\nnew Vue({\n  el: '#app',\n  render: h => h(App)\n})\n"],"names":["Node","key","data","left","right","DEFAULT_COMPARE","a","b","splay","i","t","comparator","l","r","y","N","cmp","insert","tree","node","_size","remove","x","split","v","Tree","_comparator","_root","this","add","current","compare","visitor","ctx","Q","done","push","length","pop","call","low","high","fn","keys","forEach","values","minNode","maxNode","index","d","root","successor","predecessor","head","next","p","toList","presort","size","sort","pivot","j","tmp","loadRecursive","parent","start","end","middle","Math","floor","mergedList","l1","l2","p1","p2","mergeLists","createList","sortedListToBST","list","printNode","n","out","printRow","prefix","isTail","indent","join","newKey","newData","merge","_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","descriptor","enumerable","configurable","writable","Object","defineProperty","_createClass","protoProps","staticProps","prototype","epsilon","Number","EPSILON","undefined","pow","EPSILON_SQ","touch","m","touchPoints","aPt","bPt","mx","my","aYMiss","crossProduct","dotProduct","compareVectorAngles","basePt","endPt1","endPt2","v1","v2","kross","sqrt","cosineOfAngle","pShared","pBase","pAngle","vBase","vAngle","closestPoint","ptA1","ptA2","ptB","nearPt","farPt","vA","vB","dist","horizontalIntersection","pt","verticalIntersection","PtRounder","reset","value","xRounder","CoordRounder","yRounder","round","SplayTree","coord","prevNode","prev","nextNode","rounder","pointsAsObjects","geom","output","Array","isArray","Error","iMax","jMax","k","kMax","forceMultiPoly","unshift","splice","cleanMultiPoly","multipoly","poly","exteriorRing","cleanRing","interiorRing","ring","ringLengthBeforeTheClean","firstPt","lastPt","prevPt","nextPt","isPointUncessary","SweepEvent","point","isLeft","events","ptCmp","comparePoints","link","Segment","segment","other","otherEvents","evt","checkForConsuming","numEvents","evt1","consumedBy","evt2","otherSE","consume","ringOut","isInResult","baseEvent","_this","cache","Map","fillCache","linkedEvent","nextEvent","set","sine","cosine","has","_cache$get","get","asine","acosine","_cache$get2","bsine","bcosine","segmentId","leftSE","rightSE","ringsIn","id","_cache","alx","blx","arx","brx","aly","bly","ary","bry","aCmpBLeft","comparePoint","bCmpARight","bCmpALeft","aCmpBRight","_bCmpARight","_aCmpBRight","newRightSE","y1","y2","ll","ur","isAnEndpoint","interPt","bbox","touchesBbox","cPt1","avgPt1","bboxOverlap","b1","b2","lowerX","upperX","getBboxOverlap","touchesOtherLSE","touches","touchesThisLSE","touchesOtherRSE","touchesThisRSE","pt1","pt2","ve","d1","d2","intersection","vector","newEvents","alreadyLinked","newLeftSE","oldRightSE","replaceRightSE","slice","consumer","consumee","cmp$$1","_tmp","concat","prevInResult","ringsAfter","rings","ringsBefore","indexOf","multiPolysAfter","polysAfter","polysExclude","isExterior","mps","_i","_iMax","mp","multiPoly","mpsBefore","multiPolysBefore","mpsAfter","operation","type","least","most","numMultiPolys","abs","isJustSubject","isSubject","leftPt","rightPt","cmpPts","RingIn","geomRing","segments","prevPoint","fromRing","sweepEvents","PolyIn","geomPoly","interiorRings","getSweepEvents","ringSweepEvents","MultiPolyIn","geomMultiPoly","polys","polySweepEvents","RingOut","allSegments","ringsOut","prevEvent","event","startingPoint","intersectionLEs","availableLEs","getAvailableLinkedEvents","indexLE","getLeftmostComparator","intersectionLE","ringEvents","reverse","points","_pt","_nextPt","shift","step","isExteriorRing","iStart","iEnd","orderedPoints","_isExteriorRing","enclosing","enclosingRing","_enclosingRing","_calcEnclosingRing","leftMostEvt","prevSeg","prevPrevSeg","PolyOut","getGeom","ringGeom","MultiPolyOut","_composePolys","polyGeom","addInterior","SweepLine","queue","arguments","find","nextSeg","prevMySplitter","prevInter","getIntersection","newEventsFromSplit","_splitSafely","nextMySplitter","nextInter","_newEventsFromSplit","mySplitter","cmpSplitters","_newEventsFromSplit2","_i2","_iMax2","inter","_newEventsFromSplit3","_i3","_iMax3","_newEventsFromSplit4","_i4","_iMax4","seg","Operation","moreGeoms","geoms","multipolys","markAsSubject","sweepLine","prevQueueSize","process","_evt","factory","_len","_key","run","_len2","_key2","_len3","_key3","subjectGeom","_len4","clippingGeoms","_key4","noDuplicates","_compare","_noDuplicates","rotateRight","rotateLeft","gp","ggp","u","z","comp","replace","s","sMax","returnValue","callback","load","NORMAL","NON_CONTRIBUTING","SAME_TRANSITION","DIFFERENT_TRANSITION","INTERSECTION","UNION","DIFFERENCE","XOR","computeFields","inOut","otherInOut","isVertical","inResult","otherEvent","edgeType","resultInOut","p0","isBelow","copy","equals","signedArea","compareEvents","e1","e2","specialCases","divideSegment","se","console","warn","contourId","possibleIntersection","se1","se2","a1","a2","noEndpointTouch","va","vb","toPoint","e","sqrKross","sqrLenA","sa","sb","smin","min","smax","max","nintersections","leftCoincide","rightCoincide","compareSegments","le1","le2","isAbove","nextPos","pos","resultEvents","processed","origIndex","newPos","connectEdges","sortedEvents","len","sorted","orderEvents","result","contour","ringId","initial","TinyQueue","defaultCompare","_down","item","_up","top","peek","halfLength","best","processPolygon","contourOrHole","depth","s1","s2","EMPTY","boolean","subject","clipping","trivial","trivialOperation","sbbox","Infinity","cbbox","eventQueue","polygonSet","ii","jj","Queue","fillQueue","compareBBoxes","begin","rightbound","prevprev","subdivideSegments","arrayLike","relativeStart","parseInt","relativeEnd","isFinite","isInteger","val","parseFloat","isNaN","trunc","ceil","NumberUtil","interfaces_","getClass","equalsWithTolerance","x1","x2","tolerance","IllegalArgumentException","message","name","stack","__proto__","create","constructor","Double","staticAccessors$1","MAX_VALUE","doubleToLongBits","longBitsToDouble","isInfinite","defineProperties","Comparable","Clonable","Comparator","Serializable","Coordinate","NULL_ORDINATE","c","staticAccessors","DimensionalComparator","serialVersionUID","X","Y","Z","setOrdinate","ordinateIndex","equals2D","getOrdinate","equals3D","equalInZ","compareTo","o","clone","toString","distance3D","dx","dy","dz","distance","hashCode","setCoordinate","f","NaN","dimensionsToTest","_dimensionsToTest","dimensionsToTest$1","o1","o2","c1","c2","compX","compY","CoordinateSequenceFactory","Location","staticAccessors$4","INTERIOR","BOUNDARY","EXTERIOR","NONE","toLocationSymbol","locationValue","hasInterface","MathUtil","staticAccessors$5","LOG_10","log10","ln","log","v3","v4","clamp","x$1","min$1","max$1","wrap","v1$1","v2$1","v3$1","average","StringBuffer","str","append","setCharAt","substr","Integer","intValue","Character","isWhitespace","toUpperCase","DD","_hi","_lo","init","dd","parse","hi","lo","staticAccessors$7","PI","TWO_PI","PI_2","E","EPS","SPLIT","MAX_PRINT_DIGITS","TEN","ONE","SCI_NOT_EXPONENT_CHAR","SCI_NOT_ZERO","le","extractSignificantDigits","insertDecimalPoint","magnitude","mag","scale","divide","gt","lt","multiply","decimalPointPos","buf","numDigits","digit","rebiasBy10","digitChar","subtract","valueOf","selfAdd","continueExtractingDigits","remMag","sqr","doubleValue","negate","y$1","isZero","selfSubtract","getSpecialNumberString","selfDivide","tc","ty","C","U","yhi","ylo","hc","hy","dump","createNaN","ge","exp","selfMultiply","reciprocal","fhi","flo","rint","setValue","value$1","isNegative","ax","axdd","H","h","S","H$1","T","S$1","f$1","s$1","e$1","zhi","zlo","tx","hx","selfSqr","toStandardNotation","toSciNotation","specialStr","fill","sigDigits","num","charAt","stringOfChar","numZeroes","digits","expStr","trailingDigits","substring","digitsWithDecimal","isPositive","signum","strlen","signCh","numBeforeDec","ch","isDigit","ex","val2","numDecPlaces","scale$1","xAbs","xLog10","xMag","CGAlgorithmsDD","staticAccessors$6","DP_SAFE_EPSILON","orientationIndex","q","orientationIndexFilter","dx1","dy1","dx2","dy2","signOfDet2x2","q1","q2","denom1","denom2","denom","numx1","numx2","fracP","numy1","numy2","fracQ","pa","pb","pc","detsum","detleft","detright","det","errbound","CoordinateSequence","staticAccessors$8","M","getCoordinate","getCoordinateCopy","getDimension","getX","expandEnvelope","env","getY","toCoordinateArray","Exception","NotRepresentableException","Exception$$1","System","arraycopy","src","srcPos","dest","destPos","getProperty","line.separator","HCoordinate","w","_x","_y","p1$1","p2$1","_x$1","_y$1","_w","p1$2","p2$2","px","py","pw","qx","qy","qw","xInt","yInt","Envelope","_minx","_maxx","_miny","_maxy","staticAccessors$9","getArea","getWidth","getHeight","otherEnvelope","isNull","getMaxX","getMaxY","getMinX","getMinY","intersects","intMinX","intMinY","intMaxX","intMaxY","covers","expandToInclude","minExtent","translate","transX","transY","setToNull","maxExtent","expandBy","deltaX","deltaY","contains","centre","minq","maxq","minp","maxp","regExes","typeStr","emptyTypeStr","spaces","parenComma","doubleParenComma","trimParens","WKTParser","geometryFactory","GeometryFactory","read","wkt","geometry","matches","exec","search","toLowerCase","parse$1","apply","write","extractGeometry","getGeometryType","extract$1","wktType","isEmpty","coordinate","coordinate$1","point$1","_coordinates","multipoint","multipoint$1","array","_geometries","linestring","linestring$1","_points","linearring","linearring$1","multilinestring","multilinestring$1","polygon","polygon$1","_shell","_holes","multipolygon","multipolygon$1","geometrycollection","collection","createPoint","coords","trim","createMultiPoint","components","createLineString","createLinearRing","line","createMultiLineString","lines","createPolygon","shell","holes","createMultiPolygon","polygons","createGeometryCollection","wktArray","WKTWriter","parser","toLineString","RuntimeException","AssertionFailedException","RuntimeException$$1","Assert","shouldNeverReachHere","isTrue","assertion","expectedValue","actualValue","LineIntersector","_result","_inputLines","map","_intPt","_intLineIndex","_isProper","_pa","_pb","_precisionModel","staticAccessors$10","DONT_INTERSECT","DO_INTERSECT","COLLINEAR","NO_INTERSECTION","POINT_INTERSECTION","COLLINEAR_INTERSECTION","getIndexAlongSegment","segmentIndex","intIndex","computeIntLineIndex","getTopologySummary","catBuf","isEndPoint","isCollinear","computeIntersection","p3","p4","computeIntersect","getIntersectionNum","getEdgeDistance","isProper","hasIntersection","setPrecisionModel","precisionModel","isInteriorIntersection","inputLineIndex","computeEdgeDistance","getEndpoint","ptIndex","isIntersection","getIntersectionAlongSegment","pdx","pdy","nonRobustComputeEdgeDistance","RobustLineIntersector","LineIntersector$$1","isInSegmentEnvelopes","intPt","env0","env1","CGAlgorithms","normalizeToMinimum","n1","n2","n3","n4","normPt","smallestInAbsValue","safeHCoordinateIntersection","nearestEndpoint","intersectionWithNormalization","makePrecise","x3","x4","xabs","checkDD","intPtDD","isIn","println","normalizeToEnvCentre","computeCollinearIntersection","p1q1p2","p1q2p2","q1p1q2","q1p2q2","n00","n01","n10","n11","minX0","minY0","maxX0","maxY0","minX1","minY1","maxX1","maxY1","intMidX","intMidY","Pq1","Pq2","Qp1","Qp2","nearestPt","minDist","distancePointLine","RobustDeterminant","sign","swap","RayCrossingCounter","_p","_crossingCount","_isPointOnSegment","countSegment","minx","maxx","xIntSign","isPointInPolygon","getLocation","isOnSegment","locatePointInRing","counter","p$1","ring$1","counter$1","i$1","staticAccessors$3","CLOCKWISE","RIGHT","COUNTERCLOCKWISE","LEFT","STRAIGHT","sum","x0","x0$1","sum$1","distanceLineLine","A","B","D","noIntersection","rNumb","isPointInRing","computeLength","pts","y0","isCCW","nPts","hiPt","hiIndex","iPrev","iNext","disc","computeOrientation","distancePointLinePerpendicular","len2","minDistance","isOnLine","lineIntersector","GeometryComponentFilter","filter","Geometry","_envelope","_factory","_SRID","_userData","getSRID","staticAccessors$11","SORTINDEX_POINT","SORTINDEX_MULTIPOINT","SORTINDEX_LINESTRING","SORTINDEX_LINEARRING","SORTINDEX_MULTILINESTRING","SORTINDEX_POLYGON","SORTINDEX_MULTIPOLYGON","SORTINDEX_GEOMETRYCOLLECTION","geometryChangedFilter","isGeometryCollection","getSortIndex","getFactory","getGeometryN","isRectangle","g$1","equalsTopo","g","equalsExact","geometryChanged","geometryChangedAction","equalsNorm","norm","getLength","getNumGeometries","compareToSameClass","other$1","getUserData","getEnvelope","toGeometry","getEnvelopeInternal","checkNotGeometryCollection","equal","normalize","getPrecisionModel","computeEnvelopeInternal","setSRID","SRID","setUserData","userData","iterator","hasNext","aElement","bElement","comparison","isGeometryCollectionOrDerived","hasNonEmptyElements","geometries","hasNullElements","CoordinateFilter","BoundaryNodeRule","staticAccessors$12","Mod2BoundaryNodeRule","EndPointBoundaryNodeRule","MultiValentEndPointBoundaryNodeRule","MonoValentEndPointBoundaryNodeRule","MOD2_BOUNDARY_RULE","ENDPOINT_BOUNDARY_RULE","MULTIVALENT_ENDPOINT_BOUNDARY_RULE","MONOVALENT_ENDPOINT_BOUNDARY_RULE","OGC_SFS_BOUNDARY_RULE","isInBoundary","boundaryCount","Collection","IndexOutOfBoundsException","addAll","toArray","Iterator","List","Collection$$1","NoSuchElementException","ArrayList","List$$1","array_","ensureCapacity","clear","element","oldElement","Iterator_","found","Iterator$$1","arrayList","arrayList_","position_","CoordinateList","ArrayList$$1","coord$1","allowRepeated","coordArrayType","coll","isChanged","coord$2","obj","allowRepeated$2","coord$3","allowRepeated$3","i$2","i$3","coord$4","coord$5","allowRepeated$5","inc","closeRing","CoordinateArrays","staticAccessors$13","ForwardComparator","BidirectionalComparator","isRing","ptNotInList","testPts","testPt","scroll","coordinates","firstCoordinate","newCoordinates","coord1","coord2","coord1$1","coord2$1","coordinateComparator","coordList","hasRepeatedPoints","removeRepeatedPoints","last","mid","removeNull","nonNull","newCoord","copyDeep","srcStart","destStart","isEqualReversed","pts1","pts2","envelope","atLeastNCoordinatesOrNothing","increasingDirection","minCoordinate","minCoord","extract","npts","extractPts","iPts","forwardComp","OLDcompare","dir1","dir2","i1","i2","comparePt","Map$1","put","entrySet","SortedMap","OperationNotSupported","Set","HashSet","Set$$1","Iterator_$1","hashSet","hashSet_","BLACK","colorOf","color","parentOf","setColor","leftOf","rightOf","TreeMap","root_","size_","getValue","getKey","oldValue","fixAfterInsertion","getFirstEntry","Lineal","SortedSet","TreeSet","Iterator_$2","treeSet","treeSet_","Arrays","asList","Dimension","staticAccessors$14","P","L","FALSE","TRUE","DONTCARE","SYM_FALSE","SYM_TRUE","SYM_DONTCARE","SYM_P","SYM_L","SYM_A","toDimensionSymbol","dimensionValue","toDimensionValue","dimensionSymbol","GeometryFilter","CoordinateSequenceFilter","seq","isDone","isGeometryChanged","GeometryCollection","Geometry$$1","getCoordinates","getNumPoints","childCoordinates","area","isEquivalentClass","otherCollection","getBoundaryDimension","dimension","numPoints","revGeoms","theseElements","otherElements","o$1","gc","thisGeom","otherGeom","holeComp","filter$1","filter$2","filter$3","getBoundary","MultiLineString","GeometryCollection$$1","isClosed","nLines","revLines","BoundaryOp","lineStrings","_geom","_geomFact","_bnRule","_endpointMap","bnRule","geom$1","bnRule$1","boundaryMultiLineString","mLine","getEmptyMultiPoint","bdyPts","computeBoundaryCoordinates","createMultiPointFromCoords","LineString","boundaryLineString","getStartPoint","getEndPoint","addEndpoint","getCoordinateN","it","entry","valence","count","Counter","PrintStream","StringReader","DecimalFormat","ByteArrayOutputStream","IOException","LineNumberReader","StringUtil","staticAccessors$15","NEWLINE","SIMPLE_ORDINATE_FORMAT","chars","String","getStackTrace","os","ps","printStackTrace","t$1","stackTrace","lineNumberReader","readLine","separator","separatorlen","tokenList","tmpString","token","res","format","CoordinateSequences","copyCoord","minDim","dim","isEqual","cs1","cs2","cs1Size","extend","fact","newseq","cs","ensureValidRing","createClosedRing","isSimple","otherLineString","getPointN","line$1","ls","getCoordinateSequence","getCoordinateSequenceFactory","isCoordinate","Puntal","Point","Polygonal","Polygon","shellCoordinates","getNumInteriorRing","prevX","prevY","otherPolygon","thisShell","otherPolygonShell","clockwise","uniqueCoordinates","convexHull","getExteriorRing","otherShell","thisShell$1","otherShell$1","shellComp","nHole1","nHole2","thisHole","getInteriorRingN","otherHole","MultiPoint","isValid","LinearRing","LineString$$1","validateConstruction","MINIMUM_VALID_SIZE","MultiPolygon","allRings","allRingsArray","GeometryEditor","_isUserDataCopied","staticAccessors$16","NoOpGeometryOperation","CoordinateOperation","CoordinateSequenceOperation","setCopyUserData","isUserDataCopied","edit","editInternal","editGeometryCollection","editPolygon","getName","collectionForType","newPolygon","hole","GeometryEditorOperation","editCoordinates","CoordinateArraySequence","_dimension","coordSeq","size$1","dimension$1","staticAccessors$18","cloneCoordinates","strBuf","CoordinateArraySequenceFactory","staticAccessors$17","instanceObject","readResolve","HashMap","MapInterface","map_","entries","PrecisionModel","_modelType","_scale","FLOATING","Type","modelType","FIXED","setScale","pm","staticAccessors$19","maximumPreciseValue","otherPrecisionModel","getMaximumSignificantDigits","otherSigDigits","getScale","isFloating","FLOATING_SINGLE","getType","description","maxSigDigits","mostPrecise","pm1","pm2","_name","nameToTypeMap","staticAccessors$1$1","_coordinateSequenceFactory","getDefaultCoordinateSequenceFactory","staticAccessors$2","buildGeometry","geomList","geomClass","isHeterogeneous","hasGeometryCollection","partClass","toGeometryArray","geom0","toPolygonArray","toLineStringArray","toPointArray","coordinates$1","shell$1","createGeometry","ptSeq","toMultiPolygonArray","multiPolygons","multiPolygonArray","geometryArray","toMultiLineStringArray","multiLineStrings","multiLineStringArray","lineStringArray","toMultiPointArray","multiPoints","multiPointArray","toLinearRingArray","linearRings","linearRingArray","pointArray","polygonArray","createPointFromInternalCoord","exemplar","geometryTypes","GeoJSONParser","json","JSON","Feature","feature","FeatureCollection","featureCollection","features","sub","linearRing","geoJson","shellGeoJson","holeGeoJson","GeoJSONReader","reducePrecision","GeoJSONWriter","Position","staticAccessors$20","ON","EmptyStackException","Stack","opposite","position","empty","RightmostEdgeFinder","_minIndex","_minCoord","_minDe","_orientedDe","getRightmostSide","de","side","getRightmostSideOfSegment","checkForRightmostCoordinate","findRightmostEdgeAtVertex","getEdge","pPrev","pNext","orientation","usePrev","findRightmostEdgeAtNode","star","getNode","getEdges","getRightmostEdge","isForward","getSym","findEdge","dirEdgeList","TopologyException","msg","msgWithCoord","LinkedList","addLast","removeFirst","BufferSubgraph","_finder","_dirEdgeList","_nodes","_rightMostCoord","_env","clearVisitedEdges","setVisited","getRightmostCoordinate","computeNodeDepth","startEdge","isVisited","computeDepths","de$1","copySymDepths","computeDepth","outsideDepth","setEdgeDepths","addReachable","findResultEdges","getDepth","isInteriorAreaEdge","setInResult","nodesVisited","nodeQueue","startNode","sym","adjNode","graph","edgeEnv","nodeStack","setDepth","symNode","getNodes","getDirectedEdges","TopologyLocation","location","on","gl","on$1","setAllLocations","locValue","setAllLocationsIfNull","isLine","newLoc","getLocations","flip","temp","setLocations","posIndex","isArea","isAnyNull","setLocation","locIndex","locValue$1","isEqualOnSide","allPositionsEqual","loc","Label","elt","onLoc","lbl","geomIndex","onLoc$1","onLoc$2","leftLoc","rightLoc","geomIndex$1","onLoc$3","leftLoc$1","rightLoc$1","getGeometryCount","location$1","toLine","toLineLabel","label","lineLabel","EdgeRing","_startDe","_maxNodeDegree","_edges","_pts","_label","_ring","_isHole","_geometryFactory","computePoints","computeRing","isIsolated","isFirstEdge","getEdgeRing","getLabel","mergeLabel","addPoints","setEdgeRing","getNext","getLinearRing","computeMaxNodeDegree","degree","getOutgoingDegree","edge","edgePts","startIndex","startIndex$1","isHole","containsPoint","addHole","isShell","getMaxNodeDegree","getShell","deLabel","deLabel$1","setShell","toPolygon","holeLR","MinimalEdgeRing","EdgeRing$$1","er","setMinEdgeRing","getNextMin","MaximalEdgeRing","buildMinimalRings","minEdgeRings","getMinEdgeRing","minEr","linkDirectedEdgesForMinimalEdgeRings","linkMinimalDirectedEdges","GraphComponent","_isInResult","_isCovered","_isCoveredSet","_isVisited","isCovered","isCoveredSet","setLabel","setCovered","updateIM","im","computeIM","GraphComponent$$1","_coord","edges","isIncidentEdgeInResult","print","computeMergedLocation","label2","eltIndex","nLoc","argIndex","onLocation","setNode","setLabelBoundary","NodeMap","nodeMap","nodeFact","addNode","createNode","node$1","getBoundaryNodes","bdyNodes","Quadrant","staticAccessors$21","NE","NW","SW","SE","isNorthern","quad","isOpposite","quad1","quad2","commonHalfPlane","isInHalfPlane","halfPlane","quadrant","EdgeEnd","_edge","_node","_p0","_p1","_dx","_dy","_quadrant","edge$1","edge$2","p0$1","label$1","compareDirection","getDy","angle","atan2","className","lastDotPos","lastIndexOf","getDirectedCoordinate","getDx","getQuadrant","computeLabel","boundaryNodeRule","DirectedEdge","EdgeEnd$$1","_isForward","_sym","_next","_nextMin","_edgeRing","_minEdgeRing","_depth","computeDirectedLabel","depthVal","setNextMin","nextMin","getDepthDelta","minEdgeRing","isLineEdge","isExteriorIfArea0","isExteriorIfArea1","edgeRing","depthDelta","printEdge","printReverse","setSym","setVisitedEdge","directionFactor","oppositePos","oppositeDepth","setNext","depthFactor","currLocation","nextLocation","NodeFactory","PlanarGraph","_edgeEndList","printEdges","eiList","getNodeIterator","linkResultDirectedEdges","nodeit","debugPrintln","isBoundaryNode","linkAllDirectedEdges","matchInSameDirection","ep0","ep1","getEdgeEnds","debugPrint","getEdgeIterator","findEdgeInSameDirection","eCoord","insertEdge","findEdgeEnd","ee","addEdges","edgesToAdd","de1","de2","nodes","PolygonBuilder","_shellList","sortShellsAndHoles","edgeRings","shellList","freeHoleList","computePolygons","resultPolyList","placeFreeHoles","findEdgeRingContaining","buildMinimalEdgeRings","maxEdgeRings","findShell","placePolygonHoles","buildMaximalEdgeRings","dirEdges","getPolygons","testEr","testRing","testEnv","minShell","minEnv","tryShell","tryRing","tryEnv","isContained","shellCount","Boundable","getBounds","ItemBoundable","_bounds","_item","bounds","getItem","PriorityQueue","_items","poll","minItem","reorder","child","ItemVisitor","visitItem","SpatialIndex","itemEnv","query","AbstractNode","_childBoundables","_level","level","staticAccessors$22","getLevel","getChildBoundables","addChildBoundable","childBoundable","computeBounds","Collections","reverseOrder","alen","singletonList","BoundablePair","_boundable1","_boundable2","_distance","_itemDistance","boundable1","boundable2","itemDistance","expandToQueue","priQ","isComp1","isComposite","isComp2","expand","isLeaves","nd","bndComposite","bndOther","bp","getDistance","getBoundable","AbstractSTRtree","_built","_itemBoundables","_nodeCapacity","nodeCapacity","DEFAULT_NODE_CAPACITY","nodeCapacity$1","staticAccessors$23","IntersectsOp","getNodeCapacity","lastNode","build","removeItem","childToRemove","itemsTree","valuesTree","valuesTreeForNode","valuesTreeForChild","boundablesAtLevel","boundables","level$1","boundables$1","boundable","searchBounds","getIntersectsOp","searchBounds$1","searchBounds$2","visitor$1","childBoundables","searchBounds$3","matches$1","childBoundables$1","childBoundable$1","createHigherLevels","getRoot","item$1","childToPrune","boundablesOfALevel","parentBoundables","createParentBoundables","maxChildDepth","childDepth","newLevel","sortedChildBoundables","getComparator","compareDoubles","ItemDistance","item1","item2","STRtree","AbstractSTRtree$$1","STRtreeNode","xComparator","yComparator","intersectsOp","createParentBoundablesFromVerticalSlices","verticalSlices","createParentBoundablesFromVerticalSlice","sliceCount","sliceCapacity","slices","boundablesAddedToSlice","searchEnv","searchEnv$1","minLeafCount","nearestNeighbour","itemDist","initBndPair","POSITIVE_INFINITY","itemDist$1","bp$1","initBndPair$1","distanceLowerBound","minPair","bndPair","currentDistance","itemDist$2","bnd","bp$2","centreX","avg","centreY","aBounds","bBounds","AbstractNode$$1","SegmentPointComparator","relativeSign","octant","xSign","ySign","compareValue","compareSign0","compareSign1","SegmentNode","_segString","_segmentOctant","_isInterior","segString","segmentOctant","maxSegmentIndex","isInterior","SegmentNodeList","_nodeMap","getSplitCoordinates","addEndpoints","eiPrev","ei","addEdgeCoordinates","addCollapsedNodes","collapsedVertexIndexes","findCollapsesFromInsertedNodes","findCollapsesFromExistingVertices","vertexIndex","ei0","ei1","lastSegStartPt","useIntPt1","addSplitEdges","edgeList","newEdge","createSplitEdge","findCollapseIndex","collapsedVertexIndex","numVerticesBetween","maxSegIndex","ipt","NodedSegmentString","getData","eiNew","getSegmentOctant","checkSplitEdgesCorrectness","splitEdges","pt0","splitnPts","ptn","Octant","adx","ady","dx$1","dy$1","SegmentString","setData","NodableSegmentString","addIntersection","_nodeList","_data","safeOctant","intPt$1","addIntersectionNode","li","segmentIndex$1","getNodeList","normalizedSegmentIndex","nextSegIndex","addIntersections","getNodedSubstrings","segStrings","resultEdgelist","segStrings$1","resultEdgelist$1","LineSegment","staticAccessors$24","minX","orient0","orient1","geomFactory","project","projectionFactor","pf0","pf1","newp0","newp1","distancePerpendicular","minY","midPoint","closestPoints","closestPt","close00","close01","close10","close11","factor","maxX","comp0","lineIntersection","maxY","pointAlongOffset","segmentLengthFraction","offsetDistance","segx","segy","ux","uy","setCoordinates","segmentFraction","inputPt","segFrac","isHorizontal","pointAlong","bits0","hash0","bits1","MonotoneChainOverlapAction","tempEnv1","tempEnv2","_overlapSeg1","_overlapSeg2","overlap","mc1","start1","mc2","start2","getLineSegment","MonotoneChain","_start","_end","_context","_id","context","computeSelect","start0","end0","mcs","select","computeOverlaps","mc","mco","computeOverlapsInternal","setId","getEndIndex","getStartIndex","getContext","getId","end1","p00","p01","p10","p11","mid0","mid1","MonotoneChainBuilder","getChainStartIndices","startIndexList","findChainEnd","toIntArray","safeStart","chainQuad","getChains","pts$1","mcList","Noder","computeNodes","SinglePassNoder","_segInt","segInt","setSegmentIntersector","MCIndexNoder","SinglePassNoder$$1","si","_monoChains","_index","_idCounter","_nodedSegStrings","_nOverlaps","SegmentOverlapAction","getMonotoneChains","getIndex","segStr","inputSegStrings","intersectChains","overlapAction","queryChain","testChain","MonotoneChainOverlapAction$$1","_si","ss1","ss2","processIntersections","BufferParameters","_quadrantSegments","DEFAULT_QUADRANT_SEGMENTS","_endCapStyle","CAP_ROUND","_joinStyle","JOIN_ROUND","_mitreLimit","DEFAULT_MITRE_LIMIT","_isSingleSided","_simplifyFactor","DEFAULT_SIMPLIFY_FACTOR","quadrantSegments","setQuadrantSegments","quadrantSegments$1","endCapStyle","setEndCapStyle","quadrantSegments$2","endCapStyle$1","joinStyle","mitreLimit","setJoinStyle","setMitreLimit","staticAccessors$25","CAP_FLAT","CAP_SQUARE","JOIN_MITRE","JOIN_BEVEL","getEndCapStyle","isSingleSided","quadSegs","getJoinStyle","setSimplifyFactor","simplifyFactor","getSimplifyFactor","getQuadrantSegments","getMitreLimit","setSingleSided","bufferDistanceError","alpha","cos","BufferInputLineSimplifier","inputLine","_distanceTol","_isDeleted","_angleOrientation","_inputLine","staticAccessors$26","INIT","DELETE","KEEP","NUM_PTS_TO_CHECK","isDeletable","i0","distanceTol","isConcave","isShallow","isShallowSampled","deleteShallowConcavities","midIndex","findNextNonDeletedIndex","lastIndex","isMiddleVertexDeleted","isShallowConcavity","simplify","collapseLine","OffsetSegmentString","_ptList","_minimimVertexDistance","staticAccessors$28","COORDINATE_ARRAY_TYPE","addPt","bufPt","isRedundant","revere","addPts","startPt","setMinimumVertexDistance","minimimVertexDistance","Angle","staticAccessors$29","PI_TIMES_2","PI_OVER_2","PI_OVER_4","toDegrees","radians","isAcute","dx0","dy0","isObtuse","interiorAngle","anglePrev","angleNext","normalizePositive","angleBetween","tip1","tail","tip2","diff","ang1","ang2","delAngle","toRadians","angleDegrees","getTurn","crossproduct","sin","angleBetweenOriented","angDel","OffsetSegmentGenerator","_maxCurveSegmentError","_filletAngleQuantum","_closingSegLengthFactor","_segList","_bufParams","_li","_s0","_s1","_s2","_seg0","_seg1","_offset0","_offset1","_side","_hasNarrowConcaveAngle","bufParams","MAX_CLOSING_SEG_LEN_FACTOR","staticAccessors$27","OFFSET_SEGMENT_SEPARATION_FACTOR","INSIDE_TURN_VERTEX_SNAP_DISTANCE_FACTOR","CURVE_VERTEX_SNAP_DISTANCE_FACTOR","addNextSegment","addStartPoint","computeOffsetSegment","outsideTurn","addCollinear","addOutsideTurn","addInsideTurn","addLineEndCap","offsetL","offsetR","addFilletArc","squareCapSideOffset","squareCapLOffset","squareCapROffset","addMitreJoin","offset0","offset1","isMitreWithinLimit","addLimitedMitreJoin","addFilletCorner","direction","radius","startAngle","endAngle","addBevelJoin","createSquare","addSegments","addFirstSegment","addLastSegment","initSideSegments","ang0","angDiffHalf","midAng","mitreMidAng","mitreDist","bevelHalfLen","bevelMidX","bevelMidY","bevelMidPt","mitreMidLine","bevelEndLeft","bevelEndRight","offset","sideSign","totalAngle","nSegs","currAngleInc","currAngle","createCircle","hasNarrowConcaveAngle","OffsetCurveBuilder","getOffsetCurve","inputPts","isRightSide","posDistance","segGen","getSegGen","computePointCurve","computeOffsetCurve","curvePts","computeSingleSidedBufferCurve","distTol","simplifyTolerance","simp2","simp1","computeRingBufferCurve","simp","computeLineBufferCurve","getLineCurve","getBufferParameters","bufDistance","getRingCurve","copyCoordinates","SubgraphDepthLocater","_subgraphs","_seg","_cga","subgraphs","staticAccessors$30","DepthSegment","findStabbedSegments","stabbingRayLeftPt","stabbedSegments","bsg","stabbingRayLeftPt$1","dirEdge","stabbedSegments$1","ds","stabbingRayLeftPt$2","stabbedSegments$2","_leftDepth","_upwardSeg","orientIndex","compareX","seg0","seg1","compare0","Triangle","interpolateZ","longestSideLength","circumcentre","area3D","centroid","inCentre","m00","m01","m10","m11","v0","lenAB","lenBC","lenCA","maxLen","cx","cy","ay","bx","by","numx","numy","perpendicularBisector","angleBisector","len0","frac","uz","vx","vy","vz","crossx","crossy","crossz","absSq","len1","circum","inCentreX","inCentreY","OffsetCurveSetBuilder","_inputGeom","_curveBuilder","_curveList","inputGeom","curveBuilder","addPoint","curve","addCurve","addPolygon","offsetSide","shellCoord","isErodedCompletely","addPolygonRing","holeCoord","isTriangleErodedCompletely","triangleCoord","bufferDistance","tri","addLineString","getCurves","cwLeftLoc","cwRightLoc","addCollection","ringCoord","envMinDimension","PointOnGeometryLocator","locate","GeometryCollectionIterator","_parent","_atStart","_max","_subcollectionIterator","isAtomic","SimplePointInAreaLocator","containsPointInPolygon","geomi","g2","EdgeEndStar","_edgeMap","_edgeList","_ptInAreaLocation","getNextCW","iNextCW","propagateSideLabels","startLoc","currLoc","it$1","isAreaLabelsConsistent","geomGraph","computeEdgeEndLabels","getBoundaryNodeRule","checkAreaLabelsConsistent","lastEdgeIndex","findIndex","eSearch","getGeometry","computeLabelling","hasDimensionalCollapseEdge","geomi$1","getDegree","insertEdgeEnd","DirectedEdgeStar","EdgeEndStar$$1","_resultAreaEdgeList","_SCANNING_FOR_INCOMING","_LINKING_TO_OUTGOING","getResultAreaEdges","firstOut","incoming","state","nextOut","nextIn","de0","deLast","quad0","updateLabelling","nodeLabel","prevOut","firstIn","edgeIndex","startDepth","targetLastDepth","nextDepth","endIndex","currDepth","nextDe","mergeSymLabels","degree$1","findCoveredLineEdges","nextOut$1","nextIn$1","eLabel","eLoc","OverlayNodeFactory","NodeFactory$$1","OrientedCoordinateArray","_orientation","oca","compareOriented","orientation1","orientation2","limit1","limit2","compPt","done1","done2","EdgeList","_ocaMap","edgeColl","findEdgeIndex","findEqualEdge","SegmentIntersector","e0","segIndex0","segIndex1","IntersectionAdder","_hasIntersection","_hasProper","_hasProperInterior","_hasInterior","_properIntersectionPoint","_isSelfIntersection","numIntersections","numInteriorIntersections","numProperIntersections","numTests","isTrivialIntersection","isAdjacentSegments","getProperIntersectionPoint","hasProperInteriorIntersection","getLineIntersector","hasProperIntersection","hasInteriorIntersection","EdgeIntersection","getSegmentIndex","EdgeIntersectionList","Edge","MonotoneChainIndexer","MonotoneChainEdge","env2","mcb","chainIndex","computeIntersectsForChain","chainIndex0","mce","chainIndex1","mce$1","getStartIndexes","computeIntersects","Depth","NULL_VALUE","staticAccessors$31","depthValue","minDepth","newValue","getDelta","depthAtLocation","_mce","_isIsolated","_depthDelta","getCollapsedEdge","newPts","setIsolated","setName","isEqualForward","isEqualReverse","iRev","isCollapsed","getMaximumSegmentIndex","getMonotoneChainEdge","isPointwiseEqual","setDepthDelta","getEdgeIntersectionList","setAtLeastIfValid","BufferBuilder","_workingPrecisionModel","_workingNoder","_graph","setWorkingPrecisionModel","insertUniqueEdge","existingEdge","existingLabel","labelToMerge","mergeDelta","newDelta","buildSubgraphs","subgraphList","polyBuilder","processedGraphs","subgraph","createSubgraphs","createEmptyResultGeometry","getNoder","noder","buffer","bufferSegStrList","computeNodedEdges","oldLabel","setNoder","lLoc","rLoc","convertSegStrings","ss","ScaledNoder","_noder","_scaleFactor","_offsetX","_offsetY","_isScaled","scaleFactor","isIntegerPrecision","noder$1","scaleFactor$1","offsetX","offsetY","rescale","nodedSegmentStrings","roundPts","splitSS","intSegStrings","NodingValidator","_segStrings","staticAccessors$33","checkEndPtVertexIntersections","checkInteriorIntersections","ss0","ss0$1","ss1$1","pts0","checkValid","checkCollapses","checkCollapse","HotPixel","_originalPt","_ptScaled","_p0Scaled","_p1Scaled","_corner","_safeEnv","initCorners","staticAccessors$34","SAFE_ENV_EXPANSION_FACTOR","intersectsScaled","segMinx","segMaxx","segMiny","segMaxy","isOutsidePixelEnv","intersectsToleranceSquare","copyScaled","pScaled","getSafeEnvelope","safeTolerance","intersectsPixelClosure","intersectsLeft","intersectsBottom","addSnappedNode","segIndex","MonotoneChainSelectAction","selectedSegment","MCIndexPointSnapper","staticAccessors$35","HotPixelSnapAction","snap","hotPixel","hotPixel$1","parentEdge","hotPixelVertexIndex","pixelEnv","hotPixelSnapAction","isNodeAdded","MonotoneChainSelectAction$$1","_hotPixel","_parentEdge","_hotPixelVertexIndex","_isNodeAdded","InteriorIntersectionFinderAdder","_interiorIntersections","getInteriorIntersections","MCIndexSnapRounder","_pm","_pointSnapper","checkCorrectness","inputSegmentStrings","resultSegStrings","nv","snapRound","intersections","findInteriorIntersections","computeIntersectionSnaps","computeVertexSnaps","intFinderAdder","edge0","snapPts","snapPt","BufferOp","_argGeom","_resultGeometry","_saveException","staticAccessors$32","CAP_BUTT","MAX_PRECISION_DIGITS","bufferFixedPrecision","fixedPM","bufBuilder","bufferReducedPrecision","precDigits","precisionDigits","sizeBasedScaleFactor","precisionScaleFactor","computeGeometry","bufferOriginalPrecision","argPM","getResultGeometry","bufferOp","distance$1","bufOp","g$2","distance$2","params","g$3","distance$3","bufOp$2","maxPrecisionDigits","bufEnvMax","minUnitLog10","PointPairDistance","_isNull","setMinimum","ptDist","initialize","setMaximum","DistanceToPointFinder","computeDistance","tempSegment","pt$1","ptDist$1","pt$2","ptDist$2","pt$3","ptDist$3","closestPt$1","BufferCurveMaximumDistanceFinder","_maxPtDist","staticAccessors$36","MaxPointDistanceFilter","MaxMidpointDistanceFilter","computeMaxMidpointDistance","distFilter","getMaxPointDistance","computeMaxVertexDistance","findDistance","bufferCurve","getDistancePoints","_minPtDist","midPt","PolygonExtracter","comps","_comps","LinearComponentExtracter","_lines","_isForcedToLineString","lines$1","isForcedToLineString","setForceToLineString","getLines","forceToLineString","geom$2","lines$2","geoms$1","lines$3","forceToLineString$1","geom$3","lines$4","forceToLineString$2","PointLocator","_boundaryRule","_isIn","_numBoundaries","boundaryRule","locateInternal","shellLoc","locateInPolygonRing","holeLoc","p$2","updateLocationInfo","computeLocation","ml","mpoly","GeometryLocation","_component","_segIndex","component","INSIDE_AREA","component$1","staticAccessors$38","isInsideArea","getGeometryComponent","PointExtracter","getPoints","ConnectedElementLocationFilter","_locations","locations","DistanceOp","_terminateDistance","_ptLocator","_minDistanceLocation","_minDistance","g0","g1","g0$1","g1$1","terminateDistance","computeContainmentDistance","locPtPoly","polyGeomIndex","locPtPoly$1","locationsIndex","insideLocs","locs","polys$1","locPtPoly$2","ptLoc","locPtPoly$3","computeMinDistanceLinesPoints","locGeom","computeMinDistance","computeFacetDistance","lines0","lines1","computeMinDistanceLines","updateMinDistance","computeMinDistancePoints","nearestLocations","nearestPoints","coord0","segClosestPoint","line0","line1","locGeom$1","coord0$1","dist$1","points0","points1","isWithinDistance","PointPairDistance$2","DistanceToPoint","DiscreteHausdorffDistance","_g0","_g1","_ptDist","_densifyFrac","staticAccessors$39","MaxDensifiedByFractionDistanceFilter","setDensifyFraction","densifyFrac","compute","computeOrientedDistance","discreteGeom","MaxPointDistanceFilter$1","fracFilter","orientedDistance","_euclideanDist","_numSubSegs","fraction","delx","dely","BufferDistanceValidator","input","_minValidDistance","_maxValidDistance","_minDistanceFound","_maxDistanceFound","_isValid","_errMsg","_errorLocation","_errorIndicator","_input","_bufDistance","staticAccessors$37","VERBOSE","MAX_DISTANCE_DIFF_FRAC","checkMaximumDistance","bufCurve","maxDist","haus","distDelta","checkPositiveValid","checkNegativeValid","inputCurve","getPolygonLines","checkMinimumDistance","getErrorIndicator","distOp","getErrorLocation","lineExtracter","getErrorMessage","BufferResultValidator","_errorMsg","staticAccessors$40","MAX_ENV_DIFF_FRAC","checkPolygonal","checkExpectedEmpty","checkEnvelope","checkArea","checkDistance","padding","expectedEnv","bufEnv","report","distValid","inputArea","resultArea","checkName","isValidMsg","validator","BasicSegmentString","InteriorIntersectionFinder","_findAllIntersections","_isCheckEndSegmentsOnly","_interiorIntersection","_intSegments","_intersections","_intersectionCount","_keepIntersections","getInteriorIntersection","setCheckEndSegmentsOnly","isCheckEndSegmentsOnly","getIntersectionSegments","getIntersections","setFindAllIntersections","findAllIntersections","setKeepIntersections","keepIntersections","isEndSegment","createAllIntersectionsFinder","finder","createAnyIntersectionFinder","createIntersectionCounter","FastNodingValidator","execute","intSegs","computeIntersections","EdgeNodingValidator","_nv","toSegmentStrings","GeometryCollectionMapper","mapOp","_mapOp","mapped","op","LineBuilder","_op","_lineEdgesList","_resultLineList","ptLocator","collectLines","opCode","getGraph","collectLineEdge","collectBoundaryTouchEdge","labelIsolatedLine","targetIndex","getArgGeometry","buildLines","OverlayOp","isResultOfOp","isCoveredByA","labelIsolatedLines","edgesList","PointBuilder","_resultPointList","filterCoveredNodeToPoint","isCoveredByLA","extractNonCoveredResultNodes","GeometryTransformer","_pruneEmptyGeometry","_preserveGeometryCollectionType","_preserveCollections","_preserveType","transformPoint","transformCoordinates","transformPolygon","isAllValidLinearRings","transformLinearRing","createCoordinateSequence","getInputGeometry","transformMultiLineString","transGeomList","transformGeom","transformLineString","transformMultiPoint","transformMultiPolygon","transformGeometryCollection","transform","seqSize","LineStringSnapper","_snapTolerance","_srcPts","_allowSnappingToSourceVertices","_isClosed","srcLine","snapTolerance","srcPts","snapTolerance$1","snapVertices","srcCoords","srcPt","snapVert","findSnapForVertex","snapTo","snapSegments","distinctPtCount","findSegmentIndexToSnap","snapIndex","setAllowSnappingToSourceVertices","allowSnappingToSourceVertices","GeometrySnapper","srcGeom","_srcGeom","staticAccessors$41","SNAP_PRECISION_FACTOR","snapGeom","extractTargetCoordinates","SnapTransformer","snapToSelf","cleanResult","snappedGeom","computeSnapTolerance","ringPts","computeMinimumSegmentLength","ptSet","minSegLen","segLen","snapper0","snapper1","computeOverlaySnapTolerance","computeSizeBasedSnapTolerance","fixedSnapTol","GeometryTransformer$$1","isSelfSnap","_snapPts","_isSelfSnap","snapLine","snapper","CommonBits","_isFirst","_commonMantissaBitsCount","_commonBits","_commonSignExp","getCommon","numBits","signExpBits","numCommonMostSigMantissaBits","zeroLowerBits","bits","padStr","toBinaryString","bitStr","getBit","nBits","num1","num2","CommonBitsRemover","_commonCoord","_ccFilter","CommonCoordinateFilter","staticAccessors$42","Translater","addCommonBits","trans","removeCommonBits","invCoord","getCommonCoordinate","_commonBitsX","_commonBitsY","xp","yp","SnapOverlayOp","_cbr","selfSnap","remGeom","prepareResult","prepGeom","overlayOp","union","symDifference","SYMDIFFERENCE","difference","SnapIfNeededOverlayOp","isSuccess","savedException","MonotoneChain$2","SweepLineEvent","_xValue","_eventType","_insertEvent","_deleteEventIndex","_obj","insertEvent","INSERT","staticAccessors$43","isDelete","setDeleteEventIndex","deleteEventIndex","getObject","pe","getInsertEvent","isInsert","isSameLabel","ev","getDeleteEventIndex","EdgeSetIntersector","SegmentIntersector$2","_includeProper","_recordIsolated","_numIntersections","_bdyNodes","_isDone","_isDoneWhenProperInt","includeProper","recordIsolated","setIsDoneIfProperInt","isDoneWhenProperInt","isBoundaryPointInternal","isBoundaryPoint","setBoundaryNodes","bdyNodes0","bdyNodes1","SimpleMCSweepLineIntersector","EdgeSetIntersector$$1","nOverlaps","prepareEvents","processOverlaps","edges0","edges1","si$1","si$2","addEdge","edgeSet","ev0","mc0","ev1","edges$1","IntervalRTreeNode","_min","NEGATIVE_INFINITY","staticAccessors$45","NodeComparator","getMin","queryMin","queryMax","getMax","mid2","IntervalRTreeLeafNode","IntervalRTreeNode$$1","IntervalRTreeBranchNode","_node1","_node2","buildExtent","SortedPackedIntervalRTree","_leaves","buildTree","buildLevel","buildRoot","ArrayListVisitor","getItems","IndexedPointInAreaLocator","IntervalIndexedGeometry","staticAccessors$44","SegmentVisitor","rcc","_counter","addLine","GeometryGraph","PlanarGraph$$1","_parentGeom","_lineEdgeMap","_boundaryNodeRule","_useBoundaryDeterminationRule","_argIndex","_boundaryNodes","_hasTooFewPoints","_invalidPoint","_areaPtLocator","parentGeom","argIndex$1","parentGeom$1","boundaryNodeRule$1","insertBoundaryPoint","determineBoundary","computeSelfNodes","computeRingSelfNodes","li$1","computeRingSelfNodes$1","isDoneIfProperInt","esi","createEdgeSetIntersector","isRings","computeAllSegments","addSelfIntersectionNodes","computeSplitEdges","edgelist","computeEdgeIntersections","hasTooFewPoints","insertPoint","getInvalidPoint","getBoundaryPoints","addSelfIntersectionNode","lr","cwLeft","cwRight","eiIt","GeometryGraphOp","_resultPrecisionModel","_arg","setComputationPrecision","g0$2","GeometryMapper","MapOp","op$1","mapped$1","gr","_resultGeom","_resultPolyList","cancelDuplicateResultEdges","resultPointList","resultLineList","opcode","createEmptyResult","replaceCollapsedEdges","newEdges","updateNodeLabelling","overlayOpCode","computeOverlay","insertUniqueEdges","copyPoints","baseSplitEdges","computeLabelsFromDepths","labelIncompleteNodes","findResultAreaEdges","lineBuilder","pointBuilder","labelIncompleteNode","graphNode","ni","geom1","resultDimension","dim0","dim1","geomFact","loc0","loc1","loc0$1","loc1$1","FuzzyPointLocator","_g","_boundaryDistanceTolerance","_linework","boundaryDistanceTolerance","extractLinework","isWithinToleranceOfBoundary","extracter","PolygonalLineworkExtracter","linework","getLinework","OffsetPointGenerator","_doLeft","_doRight","extractPoints","offsetPts","computeOffsetPoints","setSidesToGenerate","doLeft","doRight","midX","midY","offsetLeft","offsetRight","OverlayResultValidator","_locFinder","_location","_invalidLocation","TOLERANCE","_testCoords","computeBoundaryDistanceTolerance","staticAccessors$46","reportResult","expectedInterior","addTestPts","overlayOp$1","hasLocation","isValidResult","ptGen","getInvalidLocation","GeometryCombiner","_geomFactory","_skipEmpty","_inputGeoms","extractFactory","extractElements","elems","elemGeom","combine","obj0","obj1","obj0$1","obj1$1","obj2","list$1","CascadedPolygonUnion","_inputPolys","staticAccessors$47","STRTREE_NODE_CAPACITY","reduceToGeometries","geomTree","unionTree","extractByEnvelope","disjointGeoms","intersectingGeoms","elem","unionOptimized","g0Env","g1Env","unionActual","commonEnv","unionUsingEnvelopeIntersection","itemTree","binaryUnion","unionSafe","repeatedUnion","restrictToPolygons","common","disjointPolys","g0Int","g1Int","bufferUnion","UnionOp","reader","stringify","properties","options","isObject","isNumber","validateBBox","validateId","feat","geomEach","geojson","stopG","geometryMaybeCollection","featureProperties","featureBBox","featureId","featureIndex","isFeatureCollection","isFeature","stop","truncate","precision","mutate","coordEach","excludeWrapCoord","wrapShrink","coordIndex","multiFeatureIndex","geometryIndex","geomType","truncateCoords","getCoords","cleanCoords","_typeof","newCoords","cleanLine","polyPoints","existing","hasOwnProperty","nextPoint","newPoints","secondToLast","isPointOnLineSegment","startX","startY","endX","endY","dxl","dyl","intersect","poly1","poly2","geom2","initialValue","previousValue","currentGeometry","geomReduce","calculateArea","polygonArea","RADIUS","ringArea","lowerIndex","middleIndex","upperIndex","coordsLength","rad","_","polygon1","polygon2","removeEmptyPolygon","differenced","feature$$1","script","Vue","el","render","App"],"mappings":"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"}